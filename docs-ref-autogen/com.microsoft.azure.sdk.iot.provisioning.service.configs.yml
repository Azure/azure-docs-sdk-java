### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs
  id: configs
  children:
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation_mechanism
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation_mode
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation_result
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._device_registration_operation_error
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._device_registration_status
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_status
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._provisioning_status
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result_type
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification_builder
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification_builder._from_type
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_with_info
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.yml
  langs:
  - java
  name: com.microsoft.azure.sdk.iot.provisioning.service.configs
  nameWithType: com.microsoft.azure.sdk.iot.provisioning.service.configs
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs
  type: Namespace
  source:
    remote:
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Attestation.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Attestation.java
    startLine: 3
  syntax:
    content: package com.microsoft.azure.sdk.iot.provisioning.service.configs
references:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation.yml
  name: Attestation
  nameWithType: Attestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation
  type: Class
  summary: >-
    <p>This is the abstract class that unifies all possible types of attestation that Device Provisioning Service supports.</p>

    <p>For now, the provisioning service supports <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation" data-throw-if-not-resolved="false">TpmAttestation</xref> or <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>.</p>

    <p></p>
  syntax:
    content: public class Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation_mechanism
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation_mechanism.yml
  name: AttestationMechanism
  nameWithType: AttestationMechanism
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref> mechanism in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>.</p>

    <p>It is an internal class that converts one of the attestations into JSON format. To configure the attestation mechanism, see the external API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref>.</p>

    <p></p>
  syntax:
    content: public class AttestationMechanism
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation.yml
  name: BulkOperation
  nameWithType: BulkOperation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperation
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service bulk operation with a JSON serializer.</p>

    <p>It is an internal class that creates a JSON for the bulk operations over the Individual Enrollments. To use bulk operations, please use the external API <xref uid="" data-throw-if-not-resolved="false">ProvisioningServiceClient#runBulkOperation(BulkOperationMode, Collection)</xref>.</p>

    <p>The following JSON is an example of the result of this serializer. <pre>

    *<code>*{

             "mode":"update",

             "enrollments":

             [

                 {

                     "registrationId":"validRegistrationId-1",

                     "deviceId":"ContosoDevice-1",

                     "attestation":{

                         "type":"tpm",

                         "tpm":{

                             "endorsementKey":"validEndorsementKey"

                         }

                     },

                     "iotHubHostName":"ContosoIoTHub.azure-devices.net",

                     "provisioningStatus":"enabled"

                 },

                 {

                     "registrationId":"validRegistrationId-2",

                     "deviceId":"ContosoDevice-2",

                     "attestation":{

                         "type":"tpm",

                        "tpm":{

                             "endorsementKey":"validEndorsementKey"

                         }

                     },

                     "iotHubHostName":"ContosoIoTHub.azure-devices.net",

                     "provisioningStatus":"enabled"

                 }

             ]

        *}

        </code></pre></p>

    <p></p>
  syntax:
    content: public class BulkOperation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation_mode
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation_mode.yml
  name: BulkOperationMode
  nameWithType: BulkOperationMode
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode
  type: Enum
  summary: >-
    <p>The Device Provisioning Service bulk operation modes.</p>

    <p></p>
  syntax:
    content: public enum BulkOperationMode
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation_result
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation_result.yml
  name: BulkOperationResult
  nameWithType: BulkOperationResult
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationResult
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service bulk operation result with a JSON deserializer.</p>

    <p>This result is returned as a result of the <xref uid="" data-throw-if-not-resolved="false">ProvisioningServiceClient#runBulkOperation(BulkOperationMode, Collection)</xref>.</p>

    <p>The provisioning service provides general bulk result in the isSuccessful, and a individual error result for each enrolment in the bulk.</p>

    <p>The following JSON is an example of the result from a bulk operation. <pre><code>{

            "isSuccessful":true,

            "errors": [

                {

                    "registrationId":"validRegistrationId1",

                    "errorCode":200,

                    "errorStatus":"Succeeded"

                },

                {

                    "registrationId":"validRegistrationId2",

                    "errorCode":200,

                    "errorStatus":"Succeeded"

                }

            ]

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class BulkOperationResult
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._device_registration_operation_error
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._device_registration_operation_error.yml
  name: DeviceRegistrationOperationError
  nameWithType: DeviceRegistrationOperationError
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationOperationError
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service device registration operation error.</p>

    <p>This error is returned as a result of the <xref uid="" data-throw-if-not-resolved="false">ProvisioningServiceClient#runBulkOperation(BulkOperationMode, Collection)</xref>, in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._bulk_operation_result" data-throw-if-not-resolved="false">BulkOperationResult</xref>.</p>

    <p>The following JSON is an example of a single error operation from a Bulk operation <pre><code>{

             "registrationId":"validRegistrationId1",

             "errorCode":200,

             "errorStatus":"Succeeded"

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class DeviceRegistrationOperationError
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._device_registration_status
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._device_registration_status.yml
  name: DeviceRegistrationStatus
  nameWithType: DeviceRegistrationStatus
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationStatus
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service device registration status with a JSON deserializer.</p>

    <p>Example of JSON format: <pre><code>{

            "registrationId":"validRegistrationId",

            "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

            "assignedHub":"ContosoIoTHub.azure-devices.net",

            "deviceId":"ContosoDevice-123",

            "status":"assigned"

            "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

            "errorCode":200

            "errorMessage":"Succeeded"

            "etag": "\"00000000-0000-0000-0000-00000000000\""

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class DeviceRegistrationStatus
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  name: Enrollment
  nameWithType: Enrollment
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service enrollment with a JSON serializer and deserializer.</p>

    <p>This object is used to send <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> information to the provisioning service, or receive <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> information from the provisioning service.</p>

    <p>To create or update an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> on the provisioning service you should fill this object and call the public API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createOrUpdateIndividualEnrollment(Enrollment)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createOrUpdateIndividualEnrollment(Enrollment)</xref>. The minimum information required by the provisioning service is the<code>registrationId 

        </code> and the <code>attestation 

        </code> .</p>

    <p>A new device can be provisioned by two attestation mechanisms, Trust Platform Module (see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation" data-throw-if-not-resolved="false">TpmAttestation</xref>) or DICE (see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>). The definition of each one you should use depending on the physical authentication hardware that the device contains.</p>

    <p>The content of this class will be serialized in a JSON format and sent as a body of the rest API to the provisioning service.</p>

    <p>When serialized, an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> will look like the following example: <pre>

    *<code>*{

             "registrationId":"validRegistrationId",

             "deviceId":"ContosoDevice-123",

             "attestation":{

                 "type":"tpm",

                 "tpm":{

                     "endorsementKey":"validEndorsementKey"

                 }

             },

             "iotHubHostName":"ContosoIoTHub.azure-devices.net",

             "provisioningStatus":"enabled"

        *}

        </code></pre></p>

    <p>The content of this class can be filled by a JSON, received from the provisioning service, as result of a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> operation like create, update, or query enrollment.</p>

    <p>The following JSON is a sample or the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> response, received from the provisioning service. <pre>

    *<code>*{

             "registrationId":"validRegistrationId",

             "deviceId":"ContosoDevice-123",

             "attestation":{

                 "type":"tpm",

                 "tpm":{

                     "endorsementKey":"validEndorsementKey"

                 }

             },

             "iotHubHostName":"ContosoIoTHub.azure-devices.net",

             "provisioningStatus":"enabled"

             "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

             "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

             "etag": "\"00000000-0000-0000-0000-00000000000\""

        *}

        </code></pre></p>

    <p></p>
  syntax:
    content: public class Enrollment extends Serializable
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group.yml
  name: EnrollmentGroup
  nameWithType: EnrollmentGroup
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service enrollment group with a JSON serializer and deserializer.</p>

    <p>This object is used to send <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> information to the provisioning service, or receive <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> information from the provisioning service.</p>

    <p>To create or update an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> on the provisioning service you should fill this object and call the public API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createOrUpdateEnrollmentGroup(EnrollmentGroup)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createOrUpdateEnrollmentGroup(EnrollmentGroup)</xref>. The minimum information required by the provisioning service is the <xref uid="" data-throw-if-not-resolved="false">enrollmentGroupId</xref> and the <xref uid="" data-throw-if-not-resolved="false">attestation</xref>.</p>

    <p>To provision a device using <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>, it must contain a DICE chip with a signingCertificate for the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref> mechanism.</p>

    <p>The content of this class will be serialized in a JSON format and sent as a body of the rest API to the provisioning service.</p>

    <p>When serialized, an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> will look like the following example: <pre><code>{

            "enrollmentGroupId":"validEnrollmentGroupId",

            "attestation":{

                "type":"x509",

                "signingCertificates":{

                    "primary":{

                        "certificate":"[valid certificate]"

                    }

                }

            },

            "iotHubHostName":"ContosoIoTHub.azure-devices.net",

            "provisioningStatus":"enabled"

        }

        </code></pre></p>

    <p>The content of this class can be filled by a JSON, received from the provisioning service, as result of a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> operation like create, update, or query <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>.</p>

    <p>The following JSON is a sample of the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> response, received from the provisioning service. <pre><code>{

            "enrollmentGroupId":"validEnrollmentGroupId",

            "attestation":{

                "type":"x509",

                "signingCertificates":{

                    "primary":{

                        "certificate":"[valid certificate]",

                        "info": {

                            "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                            "sha1Thumbprint": "0000000000000000000000000000000000",

                            "sha256Thumbprint": "validEnrollmentGroupId",

                            "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                            "notBeforeUtc": "2017-11-14T12:34:18Z",

                            "notAfterUtc": "2017-11-20T12:34:18Z",

                            "serialNumber": "000000000000000000",

                            "version": 3

                        }

                    }

                }

            },

            "iotHubHostName":"ContosoIoTHub.azure-devices.net",

            "provisioningStatus":"enabled",

            "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

            "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

            "etag": "\"00000000-0000-0000-0000-00000000000\""

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class EnrollmentGroup extends Serializable
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_status
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_status.yml
  name: EnrollmentStatus
  nameWithType: EnrollmentStatus
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentStatus
  type: Enum
  summary: >-
    <p>The Device Provisioning Service enrollment status.</p>

    <p></p>
  syntax:
    content: public enum EnrollmentStatus
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._provisioning_status
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._provisioning_status.yml
  name: ProvisioningStatus
  nameWithType: ProvisioningStatus
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.ProvisioningStatus
  type: Enum
  summary: >-
    <p>The Device Provisioning Service provisioning status.</p>

    <p></p>
  syntax:
    content: public enum ProvisioningStatus
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result.yml
  name: QueryResult
  nameWithType: QueryResult
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service query response with a JSON deserializer.</p>

    <p>It is the result of any query for the provisioning service. This class will parse the result and return it in a best format possible. For the known formats in <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result_type" data-throw-if-not-resolved="false">QueryResultType</xref>, you can just cast the items. In case of <b>unknown</b> type, the items will contain a list of<code>Strings 

        </code> and you shall parse it by your own.</p>

    <p>The provisioning service query result is composed by 2 system properties and a body. This class exposes it with 3 getters, <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result.getType()" data-throw-if-not-resolved="false">getType()</xref>, <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result.getContinuationToken()" data-throw-if-not-resolved="false">getContinuationToken()</xref>, and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result.getItems()" data-throw-if-not-resolved="false">getItems()</xref>.</p>

    <p>The system properties are: <variablelist><varlistentry><b>type:</b></varlistentry><listitem><p>Identify the type of the content in the body. You can use it to cast the objects in the items list. See <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result_type" data-throw-if-not-resolved="false">QueryResultType</xref> for the possible types and classes to cast. </p></listitem><varlistentry><b>continuationToken:</b></varlistentry><listitem><p>Contains the token the uniquely identify the next page of information. The service will return the next page of this query when you send a new query with this token, </p></listitem></variablelist></p>

    <p>And the body is a JSON list of the specific <b>type</b>. For instance, if the system property type is <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref>, the body will look like: <pre><code>[

            {

                "registrationId":"validRegistrationId-1",

                "deviceId":"ContosoDevice-1",

                "attestation":{

                    "type":"tpm",

                    "tpm":{

                        "endorsementKey":"validEndorsementKey"

                    }

                },

                "iotHubHostName":"ContosoIoTHub.azure-devices.net",

                "provisioningStatus":"enabled"

            },

            {

                "registrationId":"validRegistrationId-2",

                "deviceId":"ContosoDevice-2",

                "attestation":{

                    "type":"tpm",

                   "tpm":{

                        "endorsementKey":"validEndorsementKey"

                    }

                },

                "iotHubHostName":"ContosoIoTHub.azure-devices.net",

                "provisioningStatus":"enabled"

            }

        ]

        </code></pre></p>

    <p></p>
  syntax:
    content: public class QueryResult
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result_type
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_result_type.yml
  name: QueryResultType
  nameWithType: QueryResultType
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResultType
  type: Enum
  summary: >-
    <p>The Device Provisioning Service query result type</p>

    <p></p>
  syntax:
    content: public enum QueryResultType
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification.yml
  name: QuerySpecification
  nameWithType: QuerySpecification
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service query specification with a JSON serializer.</p>

    <p></p>
  syntax:
    content: public class QuerySpecification extends Serializable
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification_builder
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification_builder.yml
  name: QuerySpecificationBuilder
  nameWithType: QuerySpecificationBuilder
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder
  type: Class
  summary: >-
    <p>This is a helper to create a new instance of the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification" data-throw-if-not-resolved="false">QuerySpecification</xref>.</p>

    <p>This helper will create a query forcing the correct sql format. It expects the <b>SELECT</b> and <b>FROM</b>, but optionally accepts <b>WHERE</b> and <b>GROUP BY</b>. As a result, it will return a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification" data-throw-if-not-resolved="false">QuerySpecification</xref> object, accepted by the provisioning service.</p>

    <p>

      <b>Sample:</b>

    </p>

    <p>The follow line will create a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification" data-throw-if-not-resolved="false">QuerySpecification</xref>. <pre><code>QuerySpecification querySpecification = new QuerySpecificationBuilder("*", QuerySpecificationBuilder.FromType.ENROLLMENTS)

                .where("iotHubHostName=`ContosoIoTHub.azure-devices.net`").createSqlQuery();

        </code></pre></p>

    <p>Will generate the sql query: <pre><code>{

            "query":"select * from enrollments where iotHubHostName=`ContosoIoTHub.azure-devices.net`"

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class QuerySpecificationBuilder
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable.yml
  name: Serializable
  nameWithType: Serializable
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable
  type: Class
  summary: >-
    <p>Abstract class with the parser for the provisioning configurations.</p>

    <p></p>
  syntax:
    content: public class Serializable
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation.yml
  name: TpmAttestation
  nameWithType: TpmAttestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service TPM <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref>.</p>

    <p>The provisioning service supports Trusted Platform Module, or TPM, as the device attestation mechanism. User must provide the Endorsement Key, and can, optionally, provide the Storage Root Key.</p>

    <p></p>
  syntax:
    content: public class TpmAttestation extends Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.yml
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
  type: Class
  summary: "<p>Representation of a single Twin collection for Provisioning.</p>\r\n<p>The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> is an extension of a<code>HashMap \r\n    </code> of<code>String \r\n    </code> and <code>Object \r\n    </code> that contain individual and general versioning mechanism.</p>\r\n<p>By the Twin definition, the<code>Object \r\n    </code> can contain types of<code>Boolean \r\n    </code> , <code>Number \r\n    </code> ,<code>String \r\n    </code> ,<code>Object \r\n    </code> , or a sub-TwinCollection, but it cannot be types defined by the user or arrays.</p>\r\n<p>A <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> can contain up to 5 levels of sub TwinCollections. Once the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> is a extension of the<code>HashMap \r\n    </code> , both <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> as well as its sub-TwinCollections can be casted to Map of String and Object.</p>\r\n<p>The collection will be represented in the rest API as a JSON in the body. It can or cannot contain the metadata (identified by the <b>$</b> character at the beginning of the key.</p>\r\n<p>Because of the Twin metadata, the character <b>$</b> is not allowed in the entry key.</p>\r\n<p>For instance, the following JSON is a valid <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref> with its metadata. <pre><code>{\r\n        \"Color\":\"White\",\r\n        \"MaxSpeed\":{\r\n            \"Value\":500,\r\n            \"NewValue\":300\r\n        },\r\n        \"$metadata\":{\r\n            \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n            \"$lastUpdatedVersion\":4,\r\n            \"Color\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n            },\r\n            \"MaxSpeed\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n                \"Value\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                },\r\n                \"NewValue\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                }\r\n            }\r\n        },\r\n        \"$version\":4\r\n    }\r\n    </code></pre></p>\r\n<p>This class exposes the Twin collection with or without metadata as a Map here user can gat both the value and the metadata. For instance, in the above <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">get(Object)</xref> for <b>Color</b> will return <b>White</b> and the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection.getTwinMetadata(String)\" data-throw-if-not-resolved=\"false\">getTwinMetadata(String)</xref> for <b>Color</b> will return the Object TwinMetadata that contain <xref uid=\"\" data-throw-if-not-resolved=\"false\">TwinMetadata#getLastUpdated()</xref> that will returns the<code>Date \r\n    </code><b>2017-09-21T02:07:44.238Z</b> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">TwinMetadata#getLastUpdatedVersion()</xref> that will returns the<code>Integer \r\n    </code><b>4</b>.</p>\r\n<p>For the nested <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection\" data-throw-if-not-resolved=\"false\">TwinCollection</xref>, you can do the same, for instance, the following code will return the value and metadata of the <b>NewValue</b> nested in <b>MaxSpeed</b>: <pre><code>// Get the value of the MaxSpeed, which is a inner TwinCollection.\r\n    TwinCollection innerMaxSpeed = (TwinCollection) twinCollection.get(\"MaxSpeed\");\r\n    \r\n    // From the inner TwinCollection, get the value of the NewValue.\r\n    Long maxSpeedNewValue = innerMaxSpeed.get(\"NewValue\");\r\n    \r\n    // As in the root TwinCollection, the inner TwinCollection contain its own metadata.\r\n    // So, get the metadata information for the inner NewValue.\r\n    TwinMetadata maxSpeedNewValueMetadata = innerMaxSpeed.getTwinMetadata(\"NewValue\");\r\n    Date newValueLastUpdated = maxSpeedNewValueMetadata.getLastUpdated(); //Shall contain `2017-09-21T02:07:44.238Z`\r\n    Integer newValueLastUpdatedVersion = maxSpeedNewValueMetadata.getLastUpdatedVersion(); //Shall contain `4`\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class TwinCollection
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.yml
  name: TwinState
  nameWithType: TwinState
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState
  type: Class
  summary: >-
    <p>Representation of a single Twin initial state for the Device Provisioning Service.</p>

    <p>The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state" data-throw-if-not-resolved="false">TwinState</xref> can contain one <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> of <b>Tags</b>, and one <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> of <b>desiredProperties</b>.</p>

    <p>Each entity in the collections can contain a associated <xref uid="" data-throw-if-not-resolved="false">TwinMetadata</xref>.</p>

    <p>These metadata are provided by the Service and contains information about the last updated date time, and version.</p>

    <p>For instance, the follow is a valid <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state" data-throw-if-not-resolved="false">TwinState</xref>, represented as <code>initialTwinState 

        </code> in the rest API. <pre><code>{

            "initialTwinState": {

                "tags":{

                    "SpeedUnity":"MPH",

                    "$metadata":{

                        "$lastUpdated":"2017-09-21T02:07:44.238Z",

                        "$lastUpdatedVersion":4,

                        "SpeedUnity":{

                            "$lastUpdated":"2017-09-21T02:07:44.238Z",

                            "$lastUpdatedVersion":4

                        }

                    },

                    "$version":4

                }

                "desiredProperties":{

                    "MaxSpeed":{

                        "Value":500,

                        "NewValue":300

                    },

                    "$metadata":{

                        "$lastUpdated":"2017-09-21T02:07:44.238Z",

                        "$lastUpdatedVersion":4,

                        "MaxSpeed":{

                            "$lastUpdated":"2017-09-21T02:07:44.238Z",

                            "$lastUpdatedVersion":4,

                            "Value":{

                                "$lastUpdated":"2017-09-21T02:07:44.238Z",

                                "$lastUpdatedVersion":4

                            },

                            "NewValue":{

                                "$lastUpdated":"2017-09-21T02:07:44.238Z",

                                "$lastUpdatedVersion":4

                            }

                        }

                    },

                    "$version":4

                }

            }

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class TwinState
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
  name: X509Attestation
  nameWithType: X509Attestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service X509 <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref>.</p>

    <p>The provisioning service supports Device Identifier Composition Engine, or DICE, as the device attestation mechanism. To use DICE, user must provide the X509 certificate. This class provide the means to create a new attestation for a X509 certificate and return it as an abstract interface <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref>.</p>

    <p>An X509 attestation can contains one of the 2 types of certificate:</p>

    <p>

      <variablelist>

        <varlistentry>

          <b>Client or Alias certificate:</b>

        </varlistentry>

        <listitem>

          <p>Called on this class as clientCertificates, this certificate can authenticate a single device. </p>

        </listitem>

      </variablelist>

      <variablelist>

        <varlistentry>

          <b>Signing or Root certificate:</b>

        </varlistentry>

        <listitem>

          <p>Called on this class as rootCertificates, this certificate can create multiple Client certificates to authenticate multiple devices. </p>

        </listitem>

      </variablelist>

    </p>

    <p>The provisioning service allows user to create <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>. For all operations over <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> with <b>DICE</b>, user must provide a <b>clientCertificates</b>, and for operations over <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>, user must provide a <b>rootCertificates</b>.</p>

    <p>For each of this types of certificates, user can provide 2 Certificates, a primary and a secondary. Only the primary is mandatory, the secondary is optional.</p>

    <p>The provisioning service will process the provided certificates, but will never return it back. Instead of it, <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getPrimaryX509CertificateInfo()" data-throw-if-not-resolved="false">getPrimaryX509CertificateInfo()</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getSecondaryX509CertificateInfo()" data-throw-if-not-resolved="false">getSecondaryX509CertificateInfo()</xref> will return a translated info in the certificate.</p>

    <p></p>
  syntax:
    content: public class X509Attestation extends Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info.yml
  name: X509CertificateInfo
  nameWithType: X509CertificateInfo
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo
  type: Class
  summary: >-
    <p>Representation of a single X509 Certificate Info for the Device Provisioning Service.</p>

    <p>User receive this info from the provisioning service as result of X509 operations.</p>

    <p>This info contains a set of parameters, The following JSON is an example of the X509 certificate info. <pre><code>{

            "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

            "sha1Thumbprint": "0000000000000000000000000000000000",

            "sha256Thumbprint": "validEnrollmentGroupId",

            "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

            "notBeforeUtc": "2017-11-14T12:34:182Z",

            "notAfterUtc": "2017-11-20T12:34:183Z",

            "serialNumber": "000000000000000000",

            "version": 3

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class X509CertificateInfo
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.yml
  name: X509Certificates
  nameWithType: X509Certificates
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service X509 Primary and Secondary Certificate.</p>

    <p>this class creates a representation of an X509 certificate. It can receive primary and secondary certificate, but only the primary is mandatory.</p>

    <p>Users must provide the certificate as a<code>String 

        </code> , from a <b>.pem</b> files. This class will encapsulate both in a single <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>. The following JSON is an example of the result of this class. <pre><code>{

            "primary": {

                "certificate": "-----BEGIN CERTIFICATE-----\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "-----END CERTIFICATE-----\n";

            },

            "secondary": {

                "certificate": "-----BEGIN CERTIFICATE-----\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                               "-----END CERTIFICATE-----\n";

            }

        }

        </code></pre></p>

    <p>After send an X509 certificate with success, the provisioning service will return the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info" data-throw-if-not-resolved="false">X509CertificateInfo</xref> for both primary and secondary certificate. User can get these info from this class, and once again, only the primary info is mandatory. The following JSON is an example what info the provisioning service will return for X509. <pre><code>{

            "primary": {

                "info": {

                     "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                     "sha1Thumbprint": "0000000000000000000000000000000000",

                     "sha256Thumbprint": "validEnrollmentGroupId",

                     "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                     "notBeforeUtc": "2017-11-14T12:34:18Z",

                     "notAfterUtc": "2017-11-20T12:34:18Z",

                     "serialNumber": "000000000000000000",

                     "version": 3

                 }

            },

            "secondary": {

                "info": {

                     "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                     "sha1Thumbprint": "0000000000000000000000000000000000",

                     "sha256Thumbprint": "validEnrollmentGroupId",

                     "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                     "notBeforeUtc": "2017-11-14T12:34:18Z",

                     "notAfterUtc": "2017-11-20T12:34:18Z",

                     "serialNumber": "000000000000000000",

                     "version": 3

                 }

            }

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class X509Certificates
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_with_info
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_with_info.yml
  name: X509CertificateWithInfo
  nameWithType: X509CertificateWithInfo
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service X509 Certificate with its info.</p>

    <p>this class creates a representation of an X509 certificate that can contains the certificate, the info of the certificate or both.</p>

    <p>To create this class, users must provide the certificate as a<code>String 

        </code> , from a <b>.pem</b> or <b>.cert</b> files.</p>

    <p>The following JSON is an example of the result of this class. <pre><code>{

            "certificate": "-----BEGIN CERTIFICATE-----\n" +

                           "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                           "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                           "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                           "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                           "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                           "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                           "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                           "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                           "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                           "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +

                           "-----END CERTIFICATE-----\n";

        }

        </code></pre></p>

    <p>After send an X509 certificate to the provisioning service, it will return the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info" data-throw-if-not-resolved="false">X509CertificateInfo</xref>. User can get this info from this class,</p>

    <p>The following JSON is an example what info the provisioning service will return for X509. <pre><code>{

            "info": {

                 "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                 "sha1Thumbprint": "0000000000000000000000000000000000",

                 "sha256Thumbprint": "validEnrollmentGroupId",

                 "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                 "notBeforeUtc": "2017-11-14T12:34:18Z",

                 "notAfterUtc": "2017-11-20T12:34:18Z",

                 "serialNumber": "000000000000000000",

                 "version": 3

            }

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class X509CertificateWithInfo
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification_builder._from_type
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._query_specification_builder._from_type.yml
  name: QuerySpecificationBuilder.FromType
  nameWithType: QuerySpecificationBuilder.FromType
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.FromType
  type: Enum
  summary: <p>From clause for <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._query" data-throw-if-not-resolved="false">Query</xref></p>
  syntax:
    content: public enum FromType
