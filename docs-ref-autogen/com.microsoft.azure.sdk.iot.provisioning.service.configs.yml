### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs
  id: configs
  children:
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.AllocationPolicy
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanismType
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperation
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationError
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.CustomAllocationDefinition
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentStatus
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.ProvisioningStatus
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResultType
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.FromType
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.ReprovisionPolicy
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CAReferences
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates
  - com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.yml
  langs:
  - java
  name: com.microsoft.azure.sdk.iot.provisioning.service.configs
  nameWithType: com.microsoft.azure.sdk.iot.provisioning.service.configs
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs
  type: Namespace
  source:
    remote:
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/AllocationPolicy.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/AllocationPolicy.java
    startLine: 3
  syntax:
    content: package com.microsoft.azure.sdk.iot.provisioning.service.configs
references:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AllocationPolicy
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.AllocationPolicy.yml
  name: AllocationPolicy
  nameWithType: AllocationPolicy
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AllocationPolicy
  type: Enum
  summary: "<p>The Device Provisioning Service enrollment level allocation policies.</p>\r\n<p></p>"
  syntax:
    content: public enum AllocationPolicy
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation.yml
  name: Attestation
  nameWithType: Attestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation
  type: Class
  summary: "<p>This is the abstract class that unifies all possible types of attestation that Device Provisioning Service supports.</p>\r\n<p>For now, the provisioning service supports <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TpmAttestation\"></xref> or <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509Attestation\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public class Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism.yml
  name: AttestationMechanism
  nameWithType: AttestationMechanism
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service Attestation mechanism in the IndividualEnrollment and EnrollmentGroup.</p>\r\n<p>It is an internal class that converts one of the attestations into JSON format. To configure the attestation mechanism, see the external API <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Attestation\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public class AttestationMechanism
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanismType
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanismType.yml
  name: AttestationMechanismType
  nameWithType: AttestationMechanismType
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanismType
  type: Enum
  summary: "<p>Type of Device Provisioning Service attestation mechanism.</p>\r\n<p></p>"
  syntax:
    content: public enum AttestationMechanismType
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperation.yml
  name: BulkEnrollmentOperation
  nameWithType: BulkEnrollmentOperation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperation
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service bulk operation with a JSON serializer.</p>\r\n<p>It is an internal class that creates a JSON for the bulk operations over the IndividualEnrollment. To use bulk operations, please use the external API <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClient#runBulkEnrollmentOperation(BulkOperationMode, Collection)\"></xref>.</p>\r\n<p>The following JSON is an example of the result of this serializer. <pre>\r\n*<code>*{\r\n         \"mode\":\"update\",\r\n         \"enrollments\":\r\n         [\r\n             {\r\n                 \"registrationId\":\"validRegistrationId-1\",\r\n                 \"deviceId\":\"ContosoDevice-1\",\r\n                 \"attestation\":{\r\n                     \"type\":\"tpm\",\r\n                     \"tpm\":{\r\n                         \"endorsementKey\":\"validEndorsementKey\"\r\n                     }\r\n                 },\r\n                 \"iotHubHostName\":\"ContosoIoTHub.azure-devices.net\",\r\n                 \"provisioningStatus\":\"enabled\"\r\n             },\r\n             {\r\n                 \"registrationId\":\"validRegistrationId-2\",\r\n                 \"deviceId\":\"ContosoDevice-2\",\r\n                 \"attestation\":{\r\n                     \"type\":\"tpm\",\r\n                    \"tpm\":{\r\n                         \"endorsementKey\":\"validEndorsementKey\"\r\n                     }\r\n                 },\r\n                 \"iotHubHostName\":\"ContosoIoTHub.azure-devices.net\",\r\n                 \"provisioningStatus\":\"enabled\"\r\n             }\r\n         ]\r\n    *}\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class BulkEnrollmentOperation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationError
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationError.yml
  name: BulkEnrollmentOperationError
  nameWithType: BulkEnrollmentOperationError
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationError
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service device registration operation error.</p>\r\n<p>This error is returned as a result of the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClient#runBulkEnrollmentOperation(BulkOperationMode, Collection)\"></xref>, in the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BulkEnrollmentOperationResult\"></xref>.</p>\r\n<p>The following JSON is an example of a single error operation from a Bulk operation <pre><code>{\r\n         \"registrationId\":\"validRegistrationId1\",\r\n         \"errorCode\":200,\r\n         \"errorStatus\":\"Succeeded\"\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class BulkEnrollmentOperationError
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult.yml
  name: BulkEnrollmentOperationResult
  nameWithType: BulkEnrollmentOperationResult
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service bulk operation result with a JSON deserializer.</p>\r\n<p>This result is returned as a result of the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClient#runBulkEnrollmentOperation(BulkOperationMode, Collection)\"></xref>.</p>\r\n<p>The provisioning service provides general bulk result in the isSuccessful, and a individual error result for each enrolment in the bulk.</p>\r\n<p>The following JSON is an example of the result from a bulk operation. <pre><code>{\r\n        \"isSuccessful\":true,\r\n        \"errors\": [\r\n            {\r\n                \"registrationId\":\"validRegistrationId1\",\r\n                \"errorCode\":200,\r\n                \"errorStatus\":\"Succeeded\"\r\n            },\r\n            {\r\n                \"registrationId\":\"validRegistrationId2\",\r\n                \"errorCode\":200,\r\n                \"errorStatus\":\"Succeeded\"\r\n            }\r\n        ]\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class BulkEnrollmentOperationResult
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode.yml
  name: BulkOperationMode
  nameWithType: BulkOperationMode
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode
  type: Enum
  summary: "<p>The Device Provisioning Service bulk operation modes.</p>\r\n<p></p>"
  syntax:
    content: public enum BulkOperationMode
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.CustomAllocationDefinition
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.CustomAllocationDefinition.yml
  name: CustomAllocationDefinition
  nameWithType: CustomAllocationDefinition
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.CustomAllocationDefinition
  type: Class
  syntax:
    content: public class CustomAllocationDefinition
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState.yml
  name: DeviceRegistrationState
  nameWithType: DeviceRegistrationState
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service device registration state with a JSON deserializer.</p>\r\n<p>Example of JSON format: <pre><code>{\r\n        \"registrationId\":\"validRegistrationId\",\r\n        \"createdDateTimeUtc\": \"2017-09-28T16:29:42.3447817Z\",\r\n        \"assignedHub\":\"ContosoIoTHub.azure-devices.net\",\r\n        \"deviceId\":\"ContosoDevice-123\",\r\n        \"status\":\"assigned\"\r\n        \"lastUpdatedDateTimeUtc\": \"2017-09-28T16:29:42.3447817Z\",\r\n        \"errorCode\":200\r\n        \"errorMessage\":\"Succeeded\"\r\n        \"etag\": \"\\\"00000000-0000-0000-0000-00000000000\\\"\"\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class DeviceRegistrationState
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.yml
  name: EnrollmentGroup
  nameWithType: EnrollmentGroup
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service enrollment group with a JSON serializer and deserializer.</p>\r\n<p>This object is used to send EnrollmentGroup information to the provisioning service, or receive EnrollmentGroup information from the provisioning service.</p>\r\n<p>To create or update an EnrollmentGroup on the provisioning service you should fill this object and call the public API <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateEnrollmentGroup(EnrollmentGroup)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClient#createOrUpdateEnrollmentGroup(EnrollmentGroup)\"></xref>. The minimum information required by the provisioning service is the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"enrollmentGroupId\"></xref> and the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"attestation\"></xref>.</p>\r\n<p>To provision a device using EnrollmentGroup, it must contain a X509 chip with a signingCertificate for the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509Attestation\"></xref> mechanism, or use <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SymmetricKeyAttestation\"></xref> mechanism.</p>\r\n<p>The content of this class will be serialized in a JSON format and sent as a body of the rest API to the provisioning service.</p>\r\n<p>When serialized, an EnrollmentGroup will look like the following example: <pre><code>{\r\n        \"enrollmentGroupId\":\"validEnrollmentGroupId\",\r\n        \"attestation\":{\r\n            \"type\":\"x509\",\r\n            \"signingCertificates\":{\r\n                \"primary\":{\r\n                    \"certificate\":\"[valid certificate]\"\r\n                }\r\n            }\r\n        },\r\n        \"iotHubHostName\":\"ContosoIoTHub.azure-devices.net\",\r\n        \"provisioningStatus\":\"enabled\"\r\n    }\r\n    </code></pre></p>\r\n<p>The content of this class can be filled by a JSON, received from the provisioning service, as result of a EnrollmentGroup operation like create, update, or query EnrollmentGroup.</p>\r\n<p>The following JSON is a sample of the EnrollmentGroup response, received from the provisioning service. <pre><code>{\r\n        \"enrollmentGroupId\":\"validEnrollmentGroupId\",\r\n        \"attestation\":{\r\n            \"type\":\"x509\",\r\n            \"signingCertificates\":{\r\n                \"primary\":{\r\n                    \"certificate\":\"[valid certificate]\",\r\n                    \"info\": {\r\n                        \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\r\n                        \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\r\n                        \"sha256Thumbprint\": \"validEnrollmentGroupId\",\r\n                        \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\r\n                        \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\r\n                        \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\r\n                        \"serialNumber\": \"000000000000000000\",\r\n                        \"version\": 3\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"iotHubHostName\":\"ContosoIoTHub.azure-devices.net\",\r\n        \"provisioningStatus\":\"enabled\",\r\n        \"createdDateTimeUtc\": \"2017-09-28T16:29:42.3447817Z\",\r\n        \"lastUpdatedDateTimeUtc\": \"2017-09-28T16:29:42.3447817Z\",\r\n        \"etag\": \"\\\"00000000-0000-0000-0000-00000000000\\\"\"\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class EnrollmentGroup extends Serializable
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentStatus
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentStatus.yml
  name: EnrollmentStatus
  nameWithType: EnrollmentStatus
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentStatus
  type: Enum
  summary: "<p>The Device Provisioning Service enrollment status.</p>\r\n<p></p>"
  syntax:
    content: public enum EnrollmentStatus
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment.yml
  name: IndividualEnrollment
  nameWithType: IndividualEnrollment
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service enrollment with a JSON serializer and deserializer.</p>\r\n<p>This object is used to send IndividualEnrollment information to the provisioning service, or receive IndividualEnrollment information from the provisioning service.</p>\r\n<p>To create or update an IndividualEnrollment on the provisioning service you should fill this object and call the public API <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment(IndividualEnrollment)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClient#createOrUpdateIndividualEnrollment(IndividualEnrollment)\"></xref>. The minimum information required by the provisioning service is the<code>registrationId \r\n    </code> and the <code>attestation \r\n    </code> .</p>\r\n<p>A new device can be provisioned by three attestation mechanisms, Trust Platform Module (see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TpmAttestation\"></xref>), X509 (see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509Attestation\"></xref>) or <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SymmetricKeyAttestation\"></xref> mechanism. The definition of each one you should use depending on the physical authentication hardware that the device contains.</p>\r\n<p>The content of this class will be serialized in a JSON format and sent as a body of the rest API to the provisioning service.</p>\r\n<p>When serialized, an IndividualEnrollment will look like the following example:</p>\r\n<p>\r\n  <pre>\r\n    <code>{\r\n       \"registrationId\":\"validRegistrationId\",\r\n       \"deviceId\":\"ContosoDevice-123\",\r\n       \"attestation\":{\r\n           \"type\":\"tpm\",\r\n           \"tpm\":{\r\n               \"endorsementKey\":\"validEndorsementKey\"\r\n           }\r\n       },\r\n       \"iotHubHostName\":\"ContosoIoTHub.azure-devices.net\",\r\n       \"provisioningStatus\":\"enabled\"\r\n    }\r\n    </code>\r\n  </pre>\r\n</p>\r\n<p>The content of this class can be filled by a JSON, received from the provisioning service, as result of a IndividualEnrollment operation like create, update, or query enrollment.</p>\r\n<p>The following JSON is a sample or the IndividualEnrollment response, received from the provisioning service.</p>\r\n<p>\r\n  <pre>\r\n    <code>{\r\n       \"registrationId\":\"validRegistrationId\",\r\n       \"deviceId\":\"ContosoDevice-123\",\r\n       \"attestation\":{\r\n           \"type\":\"tpm\",\r\n           \"tpm\":{\r\n               \"endorsementKey\":\"validEndorsementKey\"\r\n           }\r\n       },\r\n       \"iotHubHostName\":\"ContosoIoTHub.azure-devices.net\",\r\n       \"provisioningStatus\":\"enabled\"\r\n       \"createdDateTimeUtc\": \"2017-09-28T16:29:42.3447817Z\",\r\n       \"lastUpdatedDateTimeUtc\": \"2017-09-28T16:29:42.3447817Z\",\r\n       \"etag\": \"\\\"00000000-0000-0000-0000-00000000000\\\"\"\r\n    }\r\n    </code>\r\n  </pre>\r\n</p>\r\n<p></p>"
  syntax:
    content: public class IndividualEnrollment extends Serializable
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.ProvisioningStatus
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.ProvisioningStatus.yml
  name: ProvisioningStatus
  nameWithType: ProvisioningStatus
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.ProvisioningStatus
  type: Enum
  summary: "<p>The Device Provisioning Service provisioning status.</p>\r\n<p></p>"
  syntax:
    content: public enum ProvisioningStatus
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult.yml
  name: QueryResult
  nameWithType: QueryResult
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service query response with a JSON deserializer.</p>\r\n<p>It is the result of any query for the provisioning service. This class will parse the result and return it in a best format possible. For the known formats in <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResultType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryResultType\"></xref>, you can just cast the items. In case of <b>unknown</b> type, the items will contain a list of<code>Strings \r\n    </code> and you shall parse it by your own.</p>\r\n<p>The provisioning service query result is composed by 2 system properties and a body. This class exposes it with 3 getters, <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult.getType()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getType()\"></xref>, <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult.getContinuationToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getContinuationToken()\"></xref>, and <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult.getItems()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getItems()\"></xref>.</p>\r\n<p>The system properties are: <variablelist><varlistentry><b>type:</b></varlistentry><li><p>Identify the type of the content in the body. You can use it to cast the objects in the items list. See <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResultType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryResultType\"></xref> for the possible types and classes to cast. </p></li><varlistentry><b>continuationToken:</b></varlistentry><li><p>Contains the token the uniquely identify the next page of information. The service will return the next page of this query when you send a new query with this token, </p></li></variablelist></p>\r\n<p>And the body is a JSON list of the specific <b>type</b>. For instance, if the system property type is IndividualEnrollment, the body will look like: <pre><code>[\r\n        {\r\n            \"registrationId\":\"validRegistrationId-1\",\r\n            \"deviceId\":\"ContosoDevice-1\",\r\n            \"attestation\":{\r\n                \"type\":\"tpm\",\r\n                \"tpm\":{\r\n                    \"endorsementKey\":\"validEndorsementKey\"\r\n                }\r\n            },\r\n            \"iotHubHostName\":\"ContosoIoTHub.azure-devices.net\",\r\n            \"provisioningStatus\":\"enabled\"\r\n        },\r\n        {\r\n            \"registrationId\":\"validRegistrationId-2\",\r\n            \"deviceId\":\"ContosoDevice-2\",\r\n            \"attestation\":{\r\n                \"type\":\"tpm\",\r\n               \"tpm\":{\r\n                    \"endorsementKey\":\"validEndorsementKey\"\r\n                }\r\n            },\r\n            \"iotHubHostName\":\"ContosoIoTHub.azure-devices.net\",\r\n            \"provisioningStatus\":\"enabled\"\r\n        }\r\n    ]\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class QueryResult
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResultType
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResultType.yml
  name: QueryResultType
  nameWithType: QueryResultType
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResultType
  type: Enum
  summary: "<p>The Device Provisioning Service query result type</p>\r\n<p></p>"
  syntax:
    content: public enum QueryResultType
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification.yml
  name: QuerySpecification
  nameWithType: QuerySpecification
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service query specification with a JSON serializer.</p>\r\n<p></p>"
  syntax:
    content: public class QuerySpecification extends Serializable
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.yml
  name: QuerySpecificationBuilder
  nameWithType: QuerySpecificationBuilder
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder
  type: Class
  summary: "<p>This is a helper to create a new instance of the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref>.</p>\r\n<p>This helper will create a query forcing the correct sql format. It expects the <b>SELECT</b> and <b>FROM</b>, but optionally accepts <b>WHERE</b> and <b>GROUP BY</b>. As a result, it will return a <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref> object, accepted by the provisioning service.</p>\r\n<p>\r\n  <b>Sample:</b>\r\n</p>\r\n<p>The follow line will create a <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref>. <pre><code>QuerySpecification querySpecification = new QuerySpecificationBuilder(\"*\", QuerySpecificationBuilder.FromType.ENROLLMENTS)\r\n            .where(\"iotHubHostName=`ContosoIoTHub.azure-devices.net`\").createSqlQuery();\r\n    </code></pre></p>\r\n<p>Will generate the sql query: <pre><code>{\r\n        \"query\":\"select * from enrollments where iotHubHostName=`ContosoIoTHub.azure-devices.net`\"\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class QuerySpecificationBuilder
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.ReprovisionPolicy
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.ReprovisionPolicy.yml
  name: ReprovisionPolicy
  nameWithType: ReprovisionPolicy
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.ReprovisionPolicy
  type: Class
  summary: "<p>Settings for IoT Hub Device Reprovisioning</p>\r\n<p></p>"
  syntax:
    content: public class ReprovisionPolicy
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable.yml
  name: Serializable
  nameWithType: Serializable
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable
  type: Class
  summary: "<p>Abstract class with the parser for the provisioning configurations.</p>\r\n<p></p>"
  syntax:
    content: public class Serializable
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation.yml
  name: SymmetricKeyAttestation
  nameWithType: SymmetricKeyAttestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service Symmetric Key Attestation.</p>\r\n<p>The provisioning service supports Symmetric Key attestation as the device attestation mechanism. User can auto-generate the Primary and Secondary keys, or provide the values in Base64 format.</p>\r\n<p></p>"
  syntax:
    content: public class SymmetricKeyAttestation extends Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation.yml
  name: TpmAttestation
  nameWithType: TpmAttestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service TPM Attestation.</p>\r\n<p>The provisioning service supports Trusted Platform Module, or TPM, as the device attestation mechanism. User must provide the Endorsement Key, and can, optionally, provide the Storage Root Key.</p>\r\n<p></p>"
  syntax:
    content: public class TpmAttestation extends Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.yml
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
  type: Class
  summary: "<p>Representation of a single Twin collection for Provisioning.</p>\r\n<p>The TwinCollection is an extension of a<code>HashMap \r\n    </code> of<code>String \r\n    </code> and <code>Object \r\n    </code> that contain individual and general versioning mechanism.</p>\r\n<p>By the Twin definition, the<code>Object \r\n    </code> can contain types of<code>Boolean \r\n    </code> , <code>Number \r\n    </code> ,<code>String \r\n    </code> ,<code>Object \r\n    </code> , or a sub-TwinCollection, but it cannot be types defined by the user or arrays.</p>\r\n<p>A TwinCollection can contain up to 5 levels of sub TwinCollections. Once the TwinCollection is a extension of the<code>HashMap \r\n    </code> , both TwinCollection as well as its sub-TwinCollections can be casted to Map of String and Object.</p>\r\n<p>The collection will be represented in the rest API as a JSON in the body. It can or cannot contain the metadata (identified by the <b>$</b> character at the beginning of the key.</p>\r\n<p>Because of the Twin metadata, the character <b>$</b> is not allowed in the entry key.</p>\r\n<p>For instance, the following JSON is a valid TwinCollection with its metadata. <pre><code>{\r\n        \"Color\":\"White\",\r\n        \"MaxSpeed\":{\r\n            \"Value\":500,\r\n            \"NewValue\":300\r\n        },\r\n        \"$metadata\":{\r\n            \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n            \"$lastUpdatedVersion\":4,\r\n            \"Color\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n            },\r\n            \"MaxSpeed\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n                \"Value\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                },\r\n                \"NewValue\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                }\r\n            }\r\n        },\r\n        \"$version\":4\r\n    }\r\n    </code></pre></p>\r\n<p>This class exposes the Twin collection with or without metadata as a Map here user can gat both the value and the metadata. For instance, in the above TwinCollection, <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"get(Object)\"></xref> for <b>Color</b> will return <b>White</b> and the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.getTwinMetadata(String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getTwinMetadata(String)\"></xref> for <b>Color</b> will return the Object TwinMetadata that contain <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata#getLastUpdated()\"></xref> that will returns the<code>Date \r\n    </code><b>2017-09-21T02:07:44.238Z</b> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata#getLastUpdatedVersion()\"></xref> that will returns the<code>Integer \r\n    </code><b>4</b>.</p>\r\n<p>For the nested TwinCollection, you can do the same, for instance, the following code will return the value and metadata of the <b>NewValue</b> nested in <b>MaxSpeed</b>: <pre><code>// Get the value of the MaxSpeed, which is a inner TwinCollection.\r\n    TwinCollection innerMaxSpeed = (TwinCollection) twinCollection.get(\"MaxSpeed\");\r\n    \r\n    // From the inner TwinCollection, get the value of the NewValue.\r\n    Long maxSpeedNewValue = innerMaxSpeed.get(\"NewValue\");\r\n    \r\n    // As in the root TwinCollection, the inner TwinCollection contain its own metadata.\r\n    // So, get the metadata information for the inner NewValue.\r\n    TwinMetadata maxSpeedNewValueMetadata = innerMaxSpeed.getTwinMetadata(\"NewValue\");\r\n    Date newValueLastUpdated = maxSpeedNewValueMetadata.getLastUpdated(); //Shall contain `2017-09-21T02:07:44.238Z`\r\n    Integer newValueLastUpdatedVersion = maxSpeedNewValueMetadata.getLastUpdatedVersion(); //Shall contain `4`\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class TwinCollection
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties.yml
  name: TwinProperties
  nameWithType: TwinProperties
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinProperties
  type: Class
  summary: "<p>Representation of a single Twin Properties for the Device Provisioning Service.</p>\r\n<p>The Properties on the TwinState shall contains one <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinCollection\"></xref> of <b>desired</b> property.</p>\r\n<p>The desired property is a collection that can contain a associated <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata\"></xref>.</p>\r\n<p>These metadata are provided by the Service and contains information about the last updated date time, and version.</p>\r\n<p>For instance, the following is a valid desired property, represented as <code>properties.desired \r\n    </code> in the rest API. <pre><code>{\r\n        \"desired\": {\r\n            \"MaxSpeed\":{\r\n                \"Value\":500,\r\n                \"NewValue\":300\r\n            },\r\n            \"$metadata\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n                \"MaxSpeed\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4,\r\n                    \"Value\":{\r\n                        \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                        \"$lastUpdatedVersion\":4\r\n                    },\r\n                    \"NewValue\":{\r\n                        \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                        \"$lastUpdatedVersion\":4\r\n                    }\r\n                }\r\n            },\r\n            \"$version\":4\r\n        }\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class TwinProperties
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState.yml
  name: TwinState
  nameWithType: TwinState
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState
  type: Class
  summary: "<p>Representation of a single Twin initial state for the Device Provisioning Service.</p>\r\n<p>The TwinState can contain one <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinCollection\"></xref> of <b>Tags</b>, and one <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinCollection\"></xref> of <b>properties.desired</b>.</p>\r\n<p>Each entity in the collections can contain a associated <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata\"></xref>.</p>\r\n<p>These metadata are provided by the Service and contains information about the last updated date time, and version.</p>\r\n<p>For instance, the following is a valid TwinState, represented as <code>initialTwin \r\n    </code> in the rest API. <pre><code>{\r\n        \"initialTwin\": {\r\n            \"tags\":{\r\n                \"SpeedUnity\":\"MPH\",\r\n                \"$metadata\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4,\r\n                    \"SpeedUnity\":{\r\n                        \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                        \"$lastUpdatedVersion\":4\r\n                    }\r\n                },\r\n                \"$version\":4\r\n            }\r\n            \"properties\":{\r\n                \"desired\": {\r\n                    \"MaxSpeed\":{\r\n                        \"Value\":500,\r\n                        \"NewValue\":300\r\n                    },\r\n                    \"$metadata\":{\r\n                        \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                        \"$lastUpdatedVersion\":4,\r\n                        \"MaxSpeed\":{\r\n                            \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                            \"$lastUpdatedVersion\":4,\r\n                            \"Value\":{\r\n                                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                                \"$lastUpdatedVersion\":4\r\n                            },\r\n                            \"NewValue\":{\r\n                                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                                \"$lastUpdatedVersion\":4\r\n                            }\r\n                        }\r\n                    },\r\n                    \"$version\":4\r\n                }\r\n            }\r\n        }\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class TwinState
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.yml
  name: X509Attestation
  nameWithType: X509Attestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service X509 Attestation.</p>\r\n<p>The provisioning service supports Device Identifier Composition Engine, or DICE, as the device attestation mechanism. To use DICE, user must provide the X509 certificate. This class provide the means to create a new attestation for a X509 certificate and return it as an abstract interface <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Attestation\"></xref>.</p>\r\n<p>An X509 attestation can contains one of the 3 types of certificate:</p>\r\n<p>\r\n  <variablelist>\r\n    <varlistentry>\r\n      <b>Client or Alias certificate:</b>\r\n    </varlistentry>\r\n    <li>\r\n      <p>Called on this class as clientCertificates, this certificate can authenticate a single device. </p>\r\n    </li>\r\n    <varlistentry>\r\n      <b>Signing or Root certificate:</b>\r\n    </varlistentry>\r\n    <li>\r\n      <p>Called on this class as rootCertificates, this certificate can create multiple Client certificates to authenticate multiple devices. </p>\r\n    </li>\r\n    <varlistentry>\r\n      <b>CA Reference:</b>\r\n    </varlistentry>\r\n    <li>\r\n      <p>Called on this class as X509CAReferences, this is a CA reference for a rootCertificate that can create multiple Client certificates to authenticate multiple devices. </p>\r\n    </li>\r\n  </variablelist>\r\n</p>\r\n<p>The provisioning service allows user to create <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> and <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref>. For all operations over <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> with <b>DICE</b>, user must provide a <b>clientCertificates</b>, and for operations over <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref>, user must provide a <b>rootCertificates</b> or a <b>X509CAReferences</b>.</p>\r\n<p>For each of this types of certificates, user can provide 2 Certificates, a primary and a secondary. Only the primary is mandatory, the secondary is optional.</p>\r\n<p>The provisioning service will process the provided certificates, but will never return it back. Instead of it, <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getPrimaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getPrimaryX509CertificateInfo()\"></xref> and <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getSecondaryX509CertificateInfo()\"></xref> will return the certificate information for the certificates.</p>\r\n<p></p>"
  syntax:
    content: public class X509Attestation extends Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CAReferences
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CAReferences.yml
  name: X509CAReferences
  nameWithType: X509CAReferences
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CAReferences
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service X509 Primary and Secondary CA reference.</p>\r\n<p>this class creates a representation of an X509 CA references. It can receive primary and secondary CA references, but only the primary is mandatory.</p>\r\n<p>Users must provide the CA reference as a<code>String \r\n    </code> . This class will encapsulate both in a single <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509Attestation\"></xref>.</p>\r\n<p>The following JSON is an example of the result of this class. <pre><code>{\r\n        \"primary\": \"ValidCAReference-1\",\r\n        \"secondary\": \"validCAReference-2\"\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class X509CAReferences
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo.yml
  name: X509CertificateInfo
  nameWithType: X509CertificateInfo
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo
  type: Class
  summary: "<p>Representation of a single X509 Certificate Info for the Device Provisioning Service.</p>\r\n<p>User receive this info from the provisioning service as result of X509 operations.</p>\r\n<p>This info contains a set of parameters, The following JSON is an example of the X509 certificate info. <pre><code>{\r\n        \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\r\n        \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\r\n        \"sha256Thumbprint\": \"validEnrollmentGroupId\",\r\n        \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\r\n        \"notBeforeUtc\": \"2017-11-14T12:34:182Z\",\r\n        \"notAfterUtc\": \"2017-11-20T12:34:183Z\",\r\n        \"serialNumber\": \"000000000000000000\",\r\n        \"version\": 3\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class X509CertificateInfo
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.yml
  name: X509Certificates
  nameWithType: X509Certificates
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service X509 Primary and Secondary Certificate.</p>\r\n<p>this class creates a representation of an X509 certificate. It can receive primary and secondary certificate, but only the primary is mandatory.</p>\r\n<p>Users must provide the certificate as a<code>String \r\n    </code> , from a <b>.pem</b> files. This class will encapsulate both in a single <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509Attestation\"></xref>. The following JSON is an example of the result of this class. <pre><code>{\r\n        \"primary\": {\r\n            \"certificate\": \"-----BEGIN CERTIFICATE-----\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"-----END CERTIFICATE-----\\n\"\r\n        },\r\n        \"secondary\": {\r\n            \"certificate\": \"-----BEGIN CERTIFICATE-----\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                           \"-----END CERTIFICATE-----\\n\"\r\n        }\r\n    }\r\n    </code></pre></p>\r\n<p>After send an X509 certificate with success, the provisioning service will return the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509CertificateInfo\"></xref> for both primary and secondary certificate. User can get these info from this class, and once again, only the primary info is mandatory. The following JSON is an example what info the provisioning service will return for X509. <pre><code>{\r\n        \"primary\": {\r\n            \"info\": {\r\n                 \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\r\n                 \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\r\n                 \"sha256Thumbprint\": \"validEnrollmentGroupId\",\r\n                 \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\r\n                 \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\r\n                 \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\r\n                 \"serialNumber\": \"000000000000000000\",\r\n                 \"version\": 3\r\n             }\r\n        },\r\n        \"secondary\": {\r\n            \"info\": {\r\n                 \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\r\n                 \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\r\n                 \"sha256Thumbprint\": \"validEnrollmentGroupId\",\r\n                 \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\r\n                 \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\r\n                 \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\r\n                 \"serialNumber\": \"000000000000000000\",\r\n                 \"version\": 3\r\n             }\r\n        }\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class X509Certificates
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo.yml
  name: X509CertificateWithInfo
  nameWithType: X509CertificateWithInfo
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
  type: Class
  summary: "<p>Representation of a single Device Provisioning Service X509 Certificate with its info.</p>\r\n<p>this class creates a representation of an X509 certificate that can contains the certificate, the info of the certificate or both.</p>\r\n<p>To create this class, users must provide the certificate as a<code>String \r\n    </code> , from a <b>.pem</b> or <b>.cert</b> files.</p>\r\n<p>The following JSON is an example of the result of this class. <pre><code>{\r\n        \"certificate\": \"-----BEGIN CERTIFICATE-----\\n\" +\r\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\r\n                       \"-----END CERTIFICATE-----\\n\";\r\n    }\r\n    </code></pre></p>\r\n<p>After send an X509 certificate to the provisioning service, it will return the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509CertificateInfo\"></xref>. User can get this info from this class,</p>\r\n<p>The following JSON is an example what info the provisioning service will return for X509. <pre><code>{\r\n        \"info\": {\r\n             \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\r\n             \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\r\n             \"sha256Thumbprint\": \"validEnrollmentGroupId\",\r\n             \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\r\n             \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\r\n             \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\r\n             \"serialNumber\": \"000000000000000000\",\r\n             \"version\": 3\r\n        }\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class X509CertificateWithInfo
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.FromType
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.FromType.yml
  name: QuerySpecificationBuilder.FromType
  nameWithType: QuerySpecificationBuilder.FromType
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.FromType
  type: Enum
  summary: "<p>From clause for Query </p>"
  syntax:
    content: public enum FromType
