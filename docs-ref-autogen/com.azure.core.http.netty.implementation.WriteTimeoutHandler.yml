### YamlMime:JavaType
uid: "com.azure.core.http.netty.implementation.WriteTimeoutHandler"
fullName: "com.azure.core.http.netty.implementation.WriteTimeoutHandler"
name: "WriteTimeoutHandler"
nameWithType: "WriteTimeoutHandler"
summary: "Channel handler that watches channel write operations to ensure they aren't timing out."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"io.netty.channel.ChannelHandlerAdapter\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"io.netty.channel.ChannelOutboundHandlerAdapter\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable()"
- "io.netty.channel.ChannelHandlerAdapter.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
- "io.netty.channel.ChannelHandlerAdapter.handlerAdded(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelHandlerAdapter.handlerRemoved(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelHandlerAdapter.isSharable()"
- "io.netty.channel.ChannelOutboundHandlerAdapter.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelOutboundHandlerAdapter.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelOutboundHandlerAdapter.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelOutboundHandlerAdapter.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelOutboundHandlerAdapter.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelOutboundHandlerAdapter.flush(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelOutboundHandlerAdapter.read(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelOutboundHandlerAdapter.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class WriteTimeoutHandler extends ChannelOutboundHandlerAdapter"
constructors:
- "com.azure.core.http.netty.implementation.WriteTimeoutHandler.WriteTimeoutHandler(long)"
fields:
- "com.azure.core.http.netty.implementation.WriteTimeoutHandler.HANDLER_NAME"
methods:
- "com.azure.core.http.netty.implementation.WriteTimeoutHandler.handlerAdded(io.netty.channel.ChannelHandlerContext)"
- "com.azure.core.http.netty.implementation.WriteTimeoutHandler.handlerRemoved(io.netty.channel.ChannelHandlerContext)"
- "com.azure.core.http.netty.implementation.WriteTimeoutHandler.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
type: "class"
metadata: {}
package: "com.azure.core.http.netty.implementation"
artifact: com.azure:azure-core-http-netty:1.9.1
