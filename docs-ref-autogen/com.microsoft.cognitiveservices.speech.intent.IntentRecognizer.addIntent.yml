### YamlMime:JavaMember
nameWithType: IntentRecognizer.addIntent
type: method
members:
- fullName: com.microsoft.cognitiveservices.speech.intent.IntentRecognizer.addIntent(LanguageUnderstandingModel model, String intentName)
  name: addIntent(LanguageUnderstandingModel model, String intentName)
  nameWithType: IntentRecognizer.addIntent(LanguageUnderstandingModel model, String intentName)
  parameters:
  - description: <p>The language understanding model containing the intent. </p>
    name: model
    type: <xref href="com.microsoft.cognitiveservices.speech.intent.LanguageUnderstandingModel?alt=com.microsoft.cognitiveservices.speech.intent.LanguageUnderstandingModel&text=LanguageUnderstandingModel" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the single intent to be included from the language understanding model. </p>
    name: intentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Adds a single intent by name from the specified Language Understanding Model. </p>
  syntax: public void addIntent(LanguageUnderstandingModel model, String intentName)
  uid: com.microsoft.cognitiveservices.speech.intent.IntentRecognizer.addIntent(LanguageUnderstandingModel,String)
- fullName: com.microsoft.cognitiveservices.speech.intent.IntentRecognizer.addIntent(LanguageUnderstandingModel model, String intentName, String intentId)
  name: addIntent(LanguageUnderstandingModel model, String intentName, String intentId)
  nameWithType: IntentRecognizer.addIntent(LanguageUnderstandingModel model, String intentName, String intentId)
  parameters:
  - description: <p>The language understanding model containing the intent. </p>
    name: model
    type: <xref href="com.microsoft.cognitiveservices.speech.intent.LanguageUnderstandingModel?alt=com.microsoft.cognitiveservices.speech.intent.LanguageUnderstandingModel&text=LanguageUnderstandingModel" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the single intent to be included from the language understanding model. </p>
    name: intentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A custom id String to be returned in the IntentRecognitionResult's getIntentId() method. </p>
    name: intentId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Adds a single intent by name from the specified Language Understanding Model. </p>
  syntax: public void addIntent(LanguageUnderstandingModel model, String intentName, String intentId)
  uid: com.microsoft.cognitiveservices.speech.intent.IntentRecognizer.addIntent(LanguageUnderstandingModel,String,String)
- fullName: com.microsoft.cognitiveservices.speech.intent.IntentRecognizer.addIntent(String simplePhrase)
  name: addIntent(String simplePhrase)
  nameWithType: IntentRecognizer.addIntent(String simplePhrase)
  parameters:
  - description: <p>The phrase corresponding to the intent. </p>
    name: simplePhrase
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Adds a simple phrase that may be spoken by the user, indicating a specific user intent. </p>
  syntax: public void addIntent(String simplePhrase)
  uid: com.microsoft.cognitiveservices.speech.intent.IntentRecognizer.addIntent(String)
- fullName: com.microsoft.cognitiveservices.speech.intent.IntentRecognizer.addIntent(String simplePhrase, String intentId)
  name: addIntent(String simplePhrase, String intentId)
  nameWithType: IntentRecognizer.addIntent(String simplePhrase, String intentId)
  parameters:
  - description: <p>The phrase corresponding to the intent. </p>
    name: simplePhrase
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A custom id String to be returned in the IntentRecognitionResult's getIntentId() method. </p>
    name: intentId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Adds a simple phrase that may be spoken by the user, indicating a specific user intent. </p>
  syntax: public void addIntent(String simplePhrase, String intentId)
  uid: com.microsoft.cognitiveservices.speech.intent.IntentRecognizer.addIntent(String,String)
uid: com.microsoft.cognitiveservices.speech.intent.IntentRecognizer.addIntent*
fullName: com.microsoft.cognitiveservices.speech.intent.IntentRecognizer.addIntent(LanguageUnderstandingModel model, String intentName)
name: addIntent(LanguageUnderstandingModel model, String intentName)
package: com.microsoft.cognitiveservices.speech.intent
metadata: {}
