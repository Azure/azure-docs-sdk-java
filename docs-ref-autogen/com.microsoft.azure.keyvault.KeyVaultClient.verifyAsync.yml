### YamlMime:JavaMember
nameWithType: KeyVaultClient.verifyAsync
type: method
members:
- fullName: com.microsoft.azure.keyvault.KeyVaultClient.verifyAsync(String keyIdentifier, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  name: verifyAsync(String keyIdentifier, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  nameWithType: KeyVaultClient.verifyAsync(String keyIdentifier, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  parameters:
  - description: <p>The full key identifier </p>
    name: keyIdentifier
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. </p>
    name: algorithm
    type: <xref href="com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm?alt=com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm&text=JsonWebKeySignatureAlgorithm" data-throw-if-not-resolved="False"/>
  - description: <p>The digest used for signing </p>
    name: digest
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>The signature to be verified </p>
    name: signature
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.keyvault.models.KeyVerifyResult?alt=com.microsoft.azure.keyvault.models.KeyVerifyResult&text=KeyVerifyResult" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.keyvault.models.KeyVerifyResult?alt=com.microsoft.azure.keyvault.models.KeyVerifyResult&text=KeyVerifyResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Verifies a signature using the specified key.</p>

    <p></p>
  syntax: public ServiceFuture<KeyVerifyResult> verifyAsync(String keyIdentifier, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  uid: com.microsoft.azure.keyvault.KeyVaultClient.verifyAsync(String,JsonWebKeySignatureAlgorithm,byte [],byte [],final ServiceCallback<KeyVerifyResult>)
uid: com.microsoft.azure.keyvault.KeyVaultClient.verifyAsync*
fullName: com.microsoft.azure.keyvault.KeyVaultClient.verifyAsync(String keyIdentifier, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
name: verifyAsync(String keyIdentifier, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
package: com.microsoft.azure.keyvault
metadata: {}
