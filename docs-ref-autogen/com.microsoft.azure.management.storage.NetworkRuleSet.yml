### YamlMime:JavaType
uid: "com.microsoft.azure.management.storage.NetworkRuleSet"
fullName: "com.microsoft.azure.management.storage.NetworkRuleSet"
name: "NetworkRuleSet"
nameWithType: "NetworkRuleSet"
summary: "Network rule set."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class NetworkRuleSet"
constructors:
- uid: "com.microsoft.azure.management.storage.NetworkRuleSet.NetworkRuleSet()"
  fullName: "com.microsoft.azure.management.storage.NetworkRuleSet.NetworkRuleSet()"
  name: "NetworkRuleSet()"
  nameWithType: "NetworkRuleSet.NetworkRuleSet()"
  syntax: "public NetworkRuleSet()"
methods:
- uid: "com.microsoft.azure.management.storage.NetworkRuleSet.bypass()"
  fullName: "com.microsoft.azure.management.storage.NetworkRuleSet.bypass()"
  name: "bypass()"
  nameWithType: "NetworkRuleSet.bypass()"
  summary: "Get specifies whether traffic is bypassed for Logging/Metrics/Azure<wbr>Services."
  syntax: "public Bypass bypass()"
  desc: "Get specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics. Possible values include: 'None', 'Logging', 'Metrics', 'AzureServices'."
  returns:
    description: "the bypass value"
    type: "<xref href=\"com.microsoft.azure.management.storage.Bypass?alt=com.microsoft.azure.management.storage.Bypass&text=Bypass\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.NetworkRuleSet.defaultAction()"
  fullName: "com.microsoft.azure.management.storage.NetworkRuleSet.defaultAction()"
  name: "defaultAction()"
  nameWithType: "NetworkRuleSet.defaultAction()"
  summary: "Get specifies the default action of allow or deny when no other rules match."
  syntax: "public DefaultAction defaultAction()"
  desc: "Get specifies the default action of allow or deny when no other rules match. Possible values include: 'Allow', 'Deny'."
  returns:
    description: "the defaultAction value"
    type: "<xref href=\"com.microsoft.azure.management.storage.DefaultAction?alt=com.microsoft.azure.management.storage.DefaultAction&text=DefaultAction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.NetworkRuleSet.ipRules()"
  fullName: "com.microsoft.azure.management.storage.NetworkRuleSet.ipRules()"
  name: "ipRules()"
  nameWithType: "NetworkRuleSet.ipRules()"
  summary: "Get sets the IP ACL rules."
  syntax: "public List<IPRule> ipRules()"
  desc: "Get sets the IP ACL rules."
  returns:
    description: "the ipRules value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.storage.IPRule?alt=com.microsoft.azure.management.storage.IPRule&text=IPRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.storage.NetworkRuleSet.virtualNetworkRules()"
  fullName: "com.microsoft.azure.management.storage.NetworkRuleSet.virtualNetworkRules()"
  name: "virtualNetworkRules()"
  nameWithType: "NetworkRuleSet.virtualNetworkRules()"
  summary: "Get sets the virtual network rules."
  syntax: "public List<VirtualNetworkRule> virtualNetworkRules()"
  desc: "Get sets the virtual network rules."
  returns:
    description: "the virtualNetworkRules value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.storage.VirtualNetworkRule?alt=com.microsoft.azure.management.storage.VirtualNetworkRule&text=VirtualNetworkRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.storage.NetworkRuleSet.withBypass(com.microsoft.azure.management.storage.Bypass)"
  fullName: "com.microsoft.azure.management.storage.NetworkRuleSet.withBypass(Bypass bypass)"
  name: "withBypass(Bypass bypass)"
  nameWithType: "NetworkRuleSet.withBypass(Bypass bypass)"
  summary: "Set specifies whether traffic is bypassed for Logging/Metrics/Azure<wbr>Services."
  parameters:
  - description: "the bypass value to set"
    name: "bypass"
    type: "<xref href=\"com.microsoft.azure.management.storage.Bypass?alt=com.microsoft.azure.management.storage.Bypass&text=Bypass\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkRuleSet withBypass(Bypass bypass)"
  desc: "Set specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics. Possible values include: 'None', 'Logging', 'Metrics', 'AzureServices'."
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.microsoft.azure.management.storage.NetworkRuleSet?alt=com.microsoft.azure.management.storage.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.NetworkRuleSet.withDefaultAction(com.microsoft.azure.management.storage.DefaultAction)"
  fullName: "com.microsoft.azure.management.storage.NetworkRuleSet.withDefaultAction(DefaultAction defaultAction)"
  name: "withDefaultAction(DefaultAction defaultAction)"
  nameWithType: "NetworkRuleSet.withDefaultAction(DefaultAction defaultAction)"
  summary: "Set specifies the default action of allow or deny when no other rules match."
  parameters:
  - description: "the defaultAction value to set"
    name: "defaultAction"
    type: "<xref href=\"com.microsoft.azure.management.storage.DefaultAction?alt=com.microsoft.azure.management.storage.DefaultAction&text=DefaultAction\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkRuleSet withDefaultAction(DefaultAction defaultAction)"
  desc: "Set specifies the default action of allow or deny when no other rules match. Possible values include: 'Allow', 'Deny'."
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.microsoft.azure.management.storage.NetworkRuleSet?alt=com.microsoft.azure.management.storage.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.NetworkRuleSet.withIpRules(java.util.List<com.microsoft.azure.management.storage.IPRule>)"
  fullName: "com.microsoft.azure.management.storage.NetworkRuleSet.withIpRules(List<IPRule> ipRules)"
  name: "withIpRules(List<IPRule> ipRules)"
  nameWithType: "NetworkRuleSet.withIpRules(List<IPRule> ipRules)"
  summary: "Set sets the IP ACL rules."
  parameters:
  - description: "the ipRules value to set"
    name: "ipRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.storage.IPRule?alt=com.microsoft.azure.management.storage.IPRule&text=IPRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkRuleSet withIpRules(List<IPRule> ipRules)"
  desc: "Set sets the IP ACL rules."
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.microsoft.azure.management.storage.NetworkRuleSet?alt=com.microsoft.azure.management.storage.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.NetworkRuleSet.withVirtualNetworkRules(java.util.List<com.microsoft.azure.management.storage.VirtualNetworkRule>)"
  fullName: "com.microsoft.azure.management.storage.NetworkRuleSet.withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules)"
  name: "withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules)"
  nameWithType: "NetworkRuleSet.withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules)"
  summary: "Set sets the virtual network rules."
  parameters:
  - description: "the virtualNetworkRules value to set"
    name: "virtualNetworkRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.storage.VirtualNetworkRule?alt=com.microsoft.azure.management.storage.VirtualNetworkRule&text=VirtualNetworkRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkRuleSet withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules)"
  desc: "Set sets the virtual network rules."
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.microsoft.azure.management.storage.NetworkRuleSet?alt=com.microsoft.azure.management.storage.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Network rule set."
metadata: {}
package: "com.microsoft.azure.management.storage"
artifact: com.microsoft.azure:azure-mgmt-storage:1.41.4
