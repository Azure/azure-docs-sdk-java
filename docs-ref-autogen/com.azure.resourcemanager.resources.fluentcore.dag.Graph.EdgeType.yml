### YamlMime:JavaEnum
uid: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType"
fullName: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType"
name: "Graph.EdgeType"
nameWithType: "Graph.EdgeType"
summary: "The edge types in a graph."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "protected enum Graph.EdgeType extends Enum<Graph.EdgeType>"
fields:
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.BACK"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.BACK"
  name: "BACK"
  nameWithType: "Graph.EdgeType.BACK"
  summary: "An edge (u, v) is a back edge if v is ancestor of u."
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.CROSS"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.CROSS"
  name: "CROSS"
  nameWithType: "Graph.EdgeType.CROSS"
  summary: "An edge (u, v) is a cross edge if v is neither ancestor or descendant of u."
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.FORWARD"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.FORWARD"
  name: "FORWARD"
  nameWithType: "Graph.EdgeType.FORWARD"
  summary: "An edge (u, v) is a forward edge if v is descendant of u."
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.TREE"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.TREE"
  name: "TREE"
  nameWithType: "Graph.EdgeType.TREE"
  summary: "An edge (u, v) is a tree edge if v is visited the first time."
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.valueOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "Graph.EdgeType.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Graph.EdgeType valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType?alt=com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType&text=EdgeType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.values()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType.values()"
  name: "values()"
  nameWithType: "Graph.EdgeType.values()"
  syntax: "public static Graph.EdgeType[] values()"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType?alt=com.azure.resourcemanager.resources.fluentcore.dag.Graph.EdgeType&text=EdgeType\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.dag"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
