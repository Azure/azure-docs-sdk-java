### YamlMime:JavaType
uid: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters"
fullName: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters"
name: "ResponseBasedOriginErrorDetectionParameters"
nameWithType: "ResponseBasedOriginErrorDetectionParameters"
summary: "The JSON object that contains the properties to determine origin health using real requests/responses."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ResponseBasedOriginErrorDetectionParameters"
constructors:
- uid: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.ResponseBasedOriginErrorDetectionParameters()"
  fullName: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.ResponseBasedOriginErrorDetectionParameters()"
  name: "ResponseBasedOriginErrorDetectionParameters()"
  nameWithType: "ResponseBasedOriginErrorDetectionParameters.ResponseBasedOriginErrorDetectionParameters()"
  syntax: "public ResponseBasedOriginErrorDetectionParameters()"
methods:
- uid: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.httpErrorRanges()"
  fullName: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.httpErrorRanges()"
  name: "httpErrorRanges()"
  nameWithType: "ResponseBasedOriginErrorDetectionParameters.httpErrorRanges()"
  summary: "Get the list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy."
  syntax: "public List<HttpErrorRangeParameters> httpErrorRanges()"
  desc: "Get the list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy."
  returns:
    description: "the httpErrorRanges value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.cdn.HttpErrorRangeParameters?alt=com.microsoft.azure.management.cdn.HttpErrorRangeParameters&text=HttpErrorRangeParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.responseBasedDetectedErrorTypes()"
  fullName: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.responseBasedDetectedErrorTypes()"
  name: "responseBasedDetectedErrorTypes()"
  nameWithType: "ResponseBasedOriginErrorDetectionParameters.responseBasedDetectedErrorTypes()"
  summary: "Get type of response errors for real user requests for which origin will be deemed unhealthy."
  syntax: "public ResponseBasedDetectedErrorTypes responseBasedDetectedErrorTypes()"
  desc: "Get type of response errors for real user requests for which origin will be deemed unhealthy. Possible values include: 'None', 'TcpErrorsOnly', 'TcpAndHttpErrors'."
  returns:
    description: "the responseBasedDetectedErrorTypes value"
    type: "<xref href=\"com.microsoft.azure.management.cdn.ResponseBasedDetectedErrorTypes?alt=com.microsoft.azure.management.cdn.ResponseBasedDetectedErrorTypes&text=ResponseBasedDetectedErrorTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.responseBasedFailoverThresholdPercentage()"
  fullName: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.responseBasedFailoverThresholdPercentage()"
  name: "responseBasedFailoverThresholdPercentage()"
  nameWithType: "ResponseBasedOriginErrorDetectionParameters.responseBasedFailoverThresholdPercentage()"
  summary: "Get the percentage of failed requests in the sample where failover should trigger."
  syntax: "public Integer responseBasedFailoverThresholdPercentage()"
  desc: "Get the percentage of failed requests in the sample where failover should trigger."
  returns:
    description: "the responseBasedFailoverThresholdPercentage value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.withHttpErrorRanges(java.util.List<com.microsoft.azure.management.cdn.HttpErrorRangeParameters>)"
  fullName: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.withHttpErrorRanges(List<HttpErrorRangeParameters> httpErrorRanges)"
  name: "withHttpErrorRanges(List<HttpErrorRangeParameters> httpErrorRanges)"
  nameWithType: "ResponseBasedOriginErrorDetectionParameters.withHttpErrorRanges(List<HttpErrorRangeParameters> httpErrorRanges)"
  summary: "Set the list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy."
  parameters:
  - description: "the httpErrorRanges value to set"
    name: "httpErrorRanges"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.cdn.HttpErrorRangeParameters?alt=com.microsoft.azure.management.cdn.HttpErrorRangeParameters&text=HttpErrorRangeParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ResponseBasedOriginErrorDetectionParameters withHttpErrorRanges(List<HttpErrorRangeParameters> httpErrorRanges)"
  desc: "Set the list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy."
  returns:
    description: "the ResponseBasedOriginErrorDetectionParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters?alt=com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters&text=ResponseBasedOriginErrorDetectionParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.withResponseBasedDetectedErrorTypes(com.microsoft.azure.management.cdn.ResponseBasedDetectedErrorTypes)"
  fullName: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.withResponseBasedDetectedErrorTypes(ResponseBasedDetectedErrorTypes responseBasedDetectedErrorTypes)"
  name: "withResponseBasedDetectedErrorTypes(ResponseBasedDetectedErrorTypes responseBasedDetectedErrorTypes)"
  nameWithType: "ResponseBasedOriginErrorDetectionParameters.withResponseBasedDetectedErrorTypes(ResponseBasedDetectedErrorTypes responseBasedDetectedErrorTypes)"
  summary: "Set type of response errors for real user requests for which origin will be deemed unhealthy."
  parameters:
  - description: "the responseBasedDetectedErrorTypes value to set"
    name: "responseBasedDetectedErrorTypes"
    type: "<xref href=\"com.microsoft.azure.management.cdn.ResponseBasedDetectedErrorTypes?alt=com.microsoft.azure.management.cdn.ResponseBasedDetectedErrorTypes&text=ResponseBasedDetectedErrorTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResponseBasedOriginErrorDetectionParameters withResponseBasedDetectedErrorTypes(ResponseBasedDetectedErrorTypes responseBasedDetectedErrorTypes)"
  desc: "Set type of response errors for real user requests for which origin will be deemed unhealthy. Possible values include: 'None', 'TcpErrorsOnly', 'TcpAndHttpErrors'."
  returns:
    description: "the ResponseBasedOriginErrorDetectionParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters?alt=com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters&text=ResponseBasedOriginErrorDetectionParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.withResponseBasedFailoverThresholdPercentage(java.lang.Integer)"
  fullName: "com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters.withResponseBasedFailoverThresholdPercentage(Integer responseBasedFailoverThresholdPercentage)"
  name: "withResponseBasedFailoverThresholdPercentage(Integer responseBasedFailoverThresholdPercentage)"
  nameWithType: "ResponseBasedOriginErrorDetectionParameters.withResponseBasedFailoverThresholdPercentage(Integer responseBasedFailoverThresholdPercentage)"
  summary: "Set the percentage of failed requests in the sample where failover should trigger."
  parameters:
  - description: "the responseBasedFailoverThresholdPercentage value to set"
    name: "responseBasedFailoverThresholdPercentage"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResponseBasedOriginErrorDetectionParameters withResponseBasedFailoverThresholdPercentage(Integer responseBasedFailoverThresholdPercentage)"
  desc: "Set the percentage of failed requests in the sample where failover should trigger."
  returns:
    description: "the ResponseBasedOriginErrorDetectionParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters?alt=com.microsoft.azure.management.cdn.ResponseBasedOriginErrorDetectionParameters&text=ResponseBasedOriginErrorDetectionParameters\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The JSON object that contains the properties to determine origin health using real requests/responses."
metadata: {}
package: "com.microsoft.azure.management.cdn"
artifact: com.microsoft.azure:azure-mgmt-cdn:1.41.4
