### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.keys.KeyService"
  id: "KeyService"
  parent: "com.azure.security.keyvault.keys"
  children:
  - "com.azure.security.keyvault.keys.KeyService.backupKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.createKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.KeyRequestParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.deleteKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.getDeletedKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.getDeletedKeyPoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.getDeletedKeys(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.getDeletedKeys(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.getKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.getKeyPoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.getKeyVersions(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.getKeys(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.getKeys(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.importKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.KeyImportRequestParameters,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.purgeDeletedKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.recoverDeletedKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.restoreKey(java.lang.String,java.lang.String,com.azure.security.keyvault.keys.KeyRestoreRequestParameters,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.security.keyvault.keys.KeyService.updateKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.KeyRequestParameters,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "KeyService"
  nameWithType: "KeyService"
  fullName: "com.azure.security.keyvault.keys.KeyService"
  type: "Interface"
  package: "com.azure.security.keyvault.keys"
  summary: "The interface defining all the services for <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient\" data-throw-if-not-resolved=\"false\">KeyAsyncClient</xref> to be used by the proxy service to perform REST calls. This is package-private so that these REST calls are transparent to the user."
  syntax:
    content: " interface KeyService"
- uid: "com.azure.security.keyvault.keys.KeyService.backupKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "backupKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "backupKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.backupKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.backupKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.backupKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<Response<KeyBackup>> backupKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.KeyBackup>>"
- uid: "com.azure.security.keyvault.keys.KeyService.createKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.KeyRequestParameters,java.lang.String,com.azure.core.util.Context)"
  id: "createKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.KeyRequestParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "createKey(String url, String keyName, String apiVersion, String acceptLanguage, KeyRequestParameters parameters, String type, Context context)"
  nameWithType: "KeyService.createKey(String url, String keyName, String apiVersion, String acceptLanguage, KeyRequestParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.createKey(String url, String keyName, String apiVersion, String acceptLanguage, KeyRequestParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.createKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<Response<KeyVaultKey>> createKey(String url, String keyName, String apiVersion, String acceptLanguage, KeyRequestParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.keys.KeyRequestParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.KeyVaultKey>>"
- uid: "com.azure.security.keyvault.keys.KeyService.deleteKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "deleteKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "deleteKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.deleteKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.deleteKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.deleteKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<Response<DeletedKey>> deleteKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.DeletedKey>>"
- uid: "com.azure.security.keyvault.keys.KeyService.getDeletedKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getDeletedKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "getDeletedKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.getDeletedKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.getDeletedKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.getDeletedKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<Response<DeletedKey>> getDeletedKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.DeletedKey>>"
- uid: "com.azure.security.keyvault.keys.KeyService.getDeletedKeyPoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getDeletedKeyPoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "getDeletedKeyPoller(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.getDeletedKeyPoller(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.getDeletedKeyPoller(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.getDeletedKeyPoller*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<Response<DeletedKey>> getDeletedKeyPoller(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.DeletedKey>>"
- uid: "com.azure.security.keyvault.keys.KeyService.getDeletedKeys(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getDeletedKeys(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "getDeletedKeys(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.getDeletedKeys(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.getDeletedKeys(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.getDeletedKeys*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<PagedResponse<DeletedKey>> getDeletedKeys(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.keys.models.DeletedKey>>"
- uid: "com.azure.security.keyvault.keys.KeyService.getDeletedKeys(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getDeletedKeys(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "getDeletedKeys(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.getDeletedKeys(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.getDeletedKeys(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.getDeletedKeys*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<PagedResponse<DeletedKey>> getDeletedKeys(String url, String nextUrl, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "nextUrl"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.keys.models.DeletedKey>>"
- uid: "com.azure.security.keyvault.keys.KeyService.getKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "getKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.getKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.getKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.getKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<Response<KeyVaultKey>> getKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "keyVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.KeyVaultKey>>"
- uid: "com.azure.security.keyvault.keys.KeyService.getKeyPoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getKeyPoller(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "getKeyPoller(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.getKeyPoller(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.getKeyPoller(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.getKeyPoller*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<Response<KeyVaultKey>> getKeyPoller(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "keyVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.KeyVaultKey>>"
- uid: "com.azure.security.keyvault.keys.KeyService.getKeyVersions(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getKeyVersions(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "getKeyVersions(String url, String keyName, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.getKeyVersions(String url, String keyName, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.getKeyVersions(String url, String keyName, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.getKeyVersions*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<PagedResponse<KeyProperties>> getKeyVersions(String url, String keyName, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.keys.models.KeyProperties>>"
- uid: "com.azure.security.keyvault.keys.KeyService.getKeys(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getKeys(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "getKeys(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.getKeys(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.getKeys(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.getKeys*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<PagedResponse<KeyProperties>> getKeys(String url, Integer maxresults, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.keys.models.KeyProperties>>"
- uid: "com.azure.security.keyvault.keys.KeyService.getKeys(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getKeys(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "getKeys(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.getKeys(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.getKeys(String url, String nextUrl, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.getKeys*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<PagedResponse<KeyProperties>> getKeys(String url, String nextUrl, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "nextUrl"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.keys.models.KeyProperties>>"
- uid: "com.azure.security.keyvault.keys.KeyService.importKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.KeyImportRequestParameters,java.lang.String,com.azure.core.util.Context)"
  id: "importKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.KeyImportRequestParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "importKey(String url, String keyName, String apiVersion, String acceptLanguage, KeyImportRequestParameters parameters, String type, Context context)"
  nameWithType: "KeyService.importKey(String url, String keyName, String apiVersion, String acceptLanguage, KeyImportRequestParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.importKey(String url, String keyName, String apiVersion, String acceptLanguage, KeyImportRequestParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.importKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<Response<KeyVaultKey>> importKey(String url, String keyName, String apiVersion, String acceptLanguage, KeyImportRequestParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.keys.KeyImportRequestParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.KeyVaultKey>>"
- uid: "com.azure.security.keyvault.keys.KeyService.purgeDeletedKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "purgeDeletedKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "purgeDeletedKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.purgeDeletedKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.purgeDeletedKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.purgeDeletedKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<Response<Void>> purgeDeletedKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>"
- uid: "com.azure.security.keyvault.keys.KeyService.recoverDeletedKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "recoverDeletedKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "recoverDeletedKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.recoverDeletedKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.recoverDeletedKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.recoverDeletedKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<Response<KeyVaultKey>> recoverDeletedKey(String url, String keyName, String apiVersion, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.KeyVaultKey>>"
- uid: "com.azure.security.keyvault.keys.KeyService.restoreKey(java.lang.String,java.lang.String,com.azure.security.keyvault.keys.KeyRestoreRequestParameters,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "restoreKey(java.lang.String,java.lang.String,com.azure.security.keyvault.keys.KeyRestoreRequestParameters,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "restoreKey(String url, String apiVersion, KeyRestoreRequestParameters parameters, String acceptLanguage, String type, Context context)"
  nameWithType: "KeyService.restoreKey(String url, String apiVersion, KeyRestoreRequestParameters parameters, String acceptLanguage, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.restoreKey(String url, String apiVersion, KeyRestoreRequestParameters parameters, String acceptLanguage, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.restoreKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<Response<KeyVaultKey>> restoreKey(String url, String apiVersion, KeyRestoreRequestParameters parameters, String acceptLanguage, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.keys.KeyRestoreRequestParameters"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.KeyVaultKey>>"
- uid: "com.azure.security.keyvault.keys.KeyService.updateKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.KeyRequestParameters,java.lang.String,com.azure.core.util.Context)"
  id: "updateKey(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.KeyRequestParameters,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.security.keyvault.keys.KeyService"
  langs:
  - "java"
  name: "updateKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyRequestParameters parameters, String type, Context context)"
  nameWithType: "KeyService.updateKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyRequestParameters parameters, String type, Context context)"
  fullName: "com.azure.security.keyvault.keys.KeyService.updateKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyRequestParameters parameters, String type, Context context)"
  overload: "com.azure.security.keyvault.keys.KeyService.updateKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys"
  syntax:
    content: "public abstract Mono<Response<KeyVaultKey>> updateKey(String url, String keyName, String keyVersion, String apiVersion, String acceptLanguage, KeyRequestParameters parameters, String type, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "keyName"
      type: "java.lang.String"
    - id: "keyVersion"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "acceptLanguage"
      type: "java.lang.String"
    - id: "parameters"
      type: "com.azure.security.keyvault.keys.KeyRequestParameters"
    - id: "type"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.KeyVaultKey>>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.security.keyvault.keys.KeyRequestParameters"
  name: "KeyRequestParameters"
  nameWithType: "KeyRequestParameters"
  fullName: "com.azure.security.keyvault.keys.KeyRequestParameters"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.KeyVaultKey>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.keys.models.KeyVaultKey"
    name: "KeyVaultKey"
    fullName: "com.azure.security.keyvault.keys.models.KeyVaultKey"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.keys.KeyService.createKey*"
  name: "createKey"
  nameWithType: "KeyService.createKey"
  fullName: "com.azure.security.keyvault.keys.KeyService.createKey"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.KeyService.getKey*"
  name: "getKey"
  nameWithType: "KeyService.getKey"
  fullName: "com.azure.security.keyvault.keys.KeyService.getKey"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.KeyService.getKeyPoller*"
  name: "getKeyPoller"
  nameWithType: "KeyService.getKeyPoller"
  fullName: "com.azure.security.keyvault.keys.KeyService.getKeyPoller"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.KeyImportRequestParameters"
  name: "KeyImportRequestParameters"
  nameWithType: "KeyImportRequestParameters"
  fullName: "com.azure.security.keyvault.keys.KeyImportRequestParameters"
- uid: "com.azure.security.keyvault.keys.KeyService.importKey*"
  name: "importKey"
  nameWithType: "KeyService.importKey"
  fullName: "com.azure.security.keyvault.keys.KeyService.importKey"
  package: "com.azure.security.keyvault.keys"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.models.DeletedKey>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.keys.models.DeletedKey"
    name: "DeletedKey"
    fullName: "com.azure.security.keyvault.keys.models.DeletedKey"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.keys.KeyService.deleteKey*"
  name: "deleteKey"
  nameWithType: "KeyService.deleteKey"
  fullName: "com.azure.security.keyvault.keys.KeyService.deleteKey"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.KeyService.updateKey*"
  name: "updateKey"
  nameWithType: "KeyService.updateKey"
  fullName: "com.azure.security.keyvault.keys.KeyService.updateKey"
  package: "com.azure.security.keyvault.keys"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.keys.models.KeyProperties>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.PagedResponse"
    name: "PagedResponse"
    fullName: "com.azure.core.http.rest.PagedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.keys.models.KeyProperties"
    name: "KeyProperties"
    fullName: "com.azure.security.keyvault.keys.models.KeyProperties"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.keys.KeyService.getKeyVersions*"
  name: "getKeyVersions"
  nameWithType: "KeyService.getKeyVersions"
  fullName: "com.azure.security.keyvault.keys.KeyService.getKeyVersions"
  package: "com.azure.security.keyvault.keys"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.keys.KeyBackup>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.keys.KeyBackup"
    name: "KeyBackup"
    fullName: "com.azure.security.keyvault.keys.KeyBackup"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.keys.KeyService.backupKey*"
  name: "backupKey"
  nameWithType: "KeyService.backupKey"
  fullName: "com.azure.security.keyvault.keys.KeyService.backupKey"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.KeyRestoreRequestParameters"
  name: "KeyRestoreRequestParameters"
  nameWithType: "KeyRestoreRequestParameters"
  fullName: "com.azure.security.keyvault.keys.KeyRestoreRequestParameters"
- uid: "com.azure.security.keyvault.keys.KeyService.restoreKey*"
  name: "restoreKey"
  nameWithType: "KeyService.restoreKey"
  fullName: "com.azure.security.keyvault.keys.KeyService.restoreKey"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.KeyService.getKeys*"
  name: "getKeys"
  nameWithType: "KeyService.getKeys"
  fullName: "com.azure.security.keyvault.keys.KeyService.getKeys"
  package: "com.azure.security.keyvault.keys"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.keys.models.DeletedKey>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.PagedResponse"
    name: "PagedResponse"
    fullName: "com.azure.core.http.rest.PagedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.keys.models.DeletedKey"
    name: "DeletedKey"
    fullName: "com.azure.security.keyvault.keys.models.DeletedKey"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.keys.KeyService.getDeletedKeys*"
  name: "getDeletedKeys"
  nameWithType: "KeyService.getDeletedKeys"
  fullName: "com.azure.security.keyvault.keys.KeyService.getDeletedKeys"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.KeyService.getDeletedKey*"
  name: "getDeletedKey"
  nameWithType: "KeyService.getDeletedKey"
  fullName: "com.azure.security.keyvault.keys.KeyService.getDeletedKey"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.KeyService.getDeletedKeyPoller*"
  name: "getDeletedKeyPoller"
  nameWithType: "KeyService.getDeletedKeyPoller"
  fullName: "com.azure.security.keyvault.keys.KeyService.getDeletedKeyPoller"
  package: "com.azure.security.keyvault.keys"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.keys.KeyService.purgeDeletedKey*"
  name: "purgeDeletedKey"
  nameWithType: "KeyService.purgeDeletedKey"
  fullName: "com.azure.security.keyvault.keys.KeyService.purgeDeletedKey"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.KeyService.recoverDeletedKey*"
  name: "recoverDeletedKey"
  nameWithType: "KeyService.recoverDeletedKey"
  fullName: "com.azure.security.keyvault.keys.KeyService.recoverDeletedKey"
  package: "com.azure.security.keyvault.keys"
- uid: "com.azure.security.keyvault.keys.models.KeyVaultKey"
  name: "KeyVaultKey"
  nameWithType: "KeyVaultKey"
  fullName: "com.azure.security.keyvault.keys.models.KeyVaultKey"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.core.http.rest.Response"
  name: "Response"
  nameWithType: "Response"
  fullName: "com.azure.core.http.rest.Response"
- uid: "com.azure.security.keyvault.keys.models.DeletedKey"
  name: "DeletedKey"
  nameWithType: "DeletedKey"
  fullName: "com.azure.security.keyvault.keys.models.DeletedKey"
- uid: "com.azure.security.keyvault.keys.models.KeyProperties"
  name: "KeyProperties"
  nameWithType: "KeyProperties"
  fullName: "com.azure.security.keyvault.keys.models.KeyProperties"
- uid: "com.azure.core.http.rest.PagedResponse"
  name: "PagedResponse"
  nameWithType: "PagedResponse"
  fullName: "com.azure.core.http.rest.PagedResponse"
- uid: "com.azure.security.keyvault.keys.KeyBackup"
  name: "KeyBackup"
  nameWithType: "KeyBackup"
  fullName: "com.azure.security.keyvault.keys.KeyBackup"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
