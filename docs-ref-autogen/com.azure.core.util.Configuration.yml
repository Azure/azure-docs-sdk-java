### YamlMime:JavaType
uid: "com.azure.core.util.Configuration"
fullName: "com.azure.core.util.Configuration"
name: "Configuration"
nameWithType: "Configuration"
summary: "Contains configuration information that is used during construction of client libraries."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Configuration implements Cloneable"
constructors:
- uid: "com.azure.core.util.Configuration.Configuration()"
  fullName: "com.azure.core.util.Configuration.Configuration()"
  name: "Configuration()"
  nameWithType: "Configuration.Configuration()"
  summary: "Constructs a configuration containing the known Azure properties constants."
  deprecatedTag: "Use <xref uid=\"com.azure.core.util.ConfigurationBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationBuilder\"></xref> and <xref uid=\"com.azure.core.util.ConfigurationSource\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSource\"></xref> that allow to provide all properties before creating configuration and keep it immutable."
  syntax: "@Deprecated\npublic Configuration()"
  desc: "Constructs a configuration containing the known Azure properties constants."
  hasDeprecatedTag: true
fields:
- uid: "com.azure.core.util.Configuration.NONE"
  fullName: "com.azure.core.util.Configuration.NONE"
  name: "NONE"
  nameWithType: "Configuration.NONE"
  summary: "No-op <xref uid=\"com.azure.core.util.Configuration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration\"></xref> object used to opt out of using global configurations when constructing client libraries."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final Configuration NONE"
  desc: "No-op <xref uid=\"com.azure.core.util.Configuration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration\"></xref> object used to opt out of using global configurations when constructing client libraries."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_AUTHORITY_HOST"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_AUTHORITY_HOST"
  name: "PROPERTY_AZURE_AUTHORITY_HOST"
  nameWithType: "Configuration.PROPERTY_AZURE_AUTHORITY_HOST"
  summary: "The Azure Active Directory endpoint to connect to."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_AUTHORITY_HOST"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_AUTHORITY_HOST"
  desc: "The Azure Active Directory endpoint to connect to."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PASSWORD"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PASSWORD"
  name: "PROPERTY_AZURE_CLIENT_CERTIFICATE_PASSWORD"
  nameWithType: "Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PASSWORD"
  summary: "Password for a PFX/PEM certificate used when performing service principal authentication with Azure."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_CLIENT_CERTIFICATE_PASSWORD"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_CLIENT_CERTIFICATE_PASSWORD"
  desc: "Password for a PFX/PEM certificate used when performing service principal authentication with Azure."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH"
  name: "PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH"
  nameWithType: "Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH"
  summary: "Path of a PFX/PEM certificate file to use when performing service principal authentication with Azure."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_CLIENT_CERTIFICATE_PATH"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH"
  desc: "Path of a PFX/PEM certificate file to use when performing service principal authentication with Azure."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_CLIENT_ID"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_CLIENT_ID"
  name: "PROPERTY_AZURE_CLIENT_ID"
  nameWithType: "Configuration.PROPERTY_AZURE_CLIENT_ID"
  summary: "Client id to use when performing service principal authentication with Azure."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_CLIENT_ID"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_CLIENT_ID"
  desc: "Client id to use when performing service principal authentication with Azure."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_CLIENT_SECRET"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_CLIENT_SECRET"
  name: "PROPERTY_AZURE_CLIENT_SECRET"
  nameWithType: "Configuration.PROPERTY_AZURE_CLIENT_SECRET"
  summary: "Client secret to use when performing service principal authentication with Azure."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_CLIENT_SECRET"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_CLIENT_SECRET"
  desc: "Client secret to use when performing service principal authentication with Azure."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_CLOUD"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_CLOUD"
  name: "PROPERTY_AZURE_CLOUD"
  nameWithType: "Configuration.PROPERTY_AZURE_CLOUD"
  summary: "Name of the Azure cloud to connect to."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_CLOUD"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_CLOUD"
  desc: "Name of the Azure cloud to connect to."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_HTTP_LOG_DETAIL_LEVEL"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_HTTP_LOG_DETAIL_LEVEL"
  name: "PROPERTY_AZURE_HTTP_LOG_DETAIL_LEVEL"
  nameWithType: "Configuration.PROPERTY_AZURE_HTTP_LOG_DETAIL_LEVEL"
  summary: "Enables HTTP request/response logging by setting an HTTP log detail level."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_HTTP_LOG_DETAIL_LEVEL"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_HTTP_LOG_DETAIL_LEVEL"
  desc: "Enables HTTP request/response logging by setting an HTTP log detail level."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_IDENTITY_DISABLE_CP1"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_IDENTITY_DISABLE_CP1"
  name: "PROPERTY_AZURE_IDENTITY_DISABLE_CP1"
  nameWithType: "Configuration.PROPERTY_AZURE_IDENTITY_DISABLE_CP1"
  summary: "Flag to disable the CP1 client capabilities in Azure Identity Token credentials."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_IDENTITY_DISABLE_CP1"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_IDENTITY_DISABLE_CP1"
  desc: "Flag to disable the CP1 client capabilities in Azure Identity Token credentials."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_LOG_LEVEL"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_LOG_LEVEL"
  name: "PROPERTY_AZURE_LOG_LEVEL"
  nameWithType: "Configuration.PROPERTY_AZURE_LOG_LEVEL"
  summary: "Enables logging by setting a log level."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_LOG_LEVEL"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_LOG_LEVEL"
  desc: "Enables logging by setting a log level."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_METRICS_DISABLED"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_METRICS_DISABLED"
  name: "PROPERTY_AZURE_METRICS_DISABLED"
  nameWithType: "Configuration.PROPERTY_AZURE_METRICS_DISABLED"
  summary: "Disables metrics."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_METRICS_DISABLED"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_METRICS_DISABLED"
  desc: "Disables metrics."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_PASSWORD"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_PASSWORD"
  name: "PROPERTY_AZURE_PASSWORD"
  nameWithType: "Configuration.PROPERTY_AZURE_PASSWORD"
  summary: "Username to use when performing username/password authentication with Azure."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_PASSWORD"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_PASSWORD"
  desc: "Username to use when performing username/password authentication with Azure."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_POD_IDENTITY_TOKEN_URL"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_POD_IDENTITY_TOKEN_URL"
  name: "PROPERTY_AZURE_POD_IDENTITY_TOKEN_URL"
  nameWithType: "Configuration.PROPERTY_AZURE_POD_IDENTITY_TOKEN_URL"
  summary: "URL used by Bridge To Kubernetes to redirect IMDS calls in the development environment."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_POD_IDENTITY_TOKEN_URL"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_POD_IDENTITY_TOKEN_URL"
  desc: "URL used by Bridge To Kubernetes to redirect IMDS calls in the development environment."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_REGIONAL_AUTHORITY_NAME"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_REGIONAL_AUTHORITY_NAME"
  name: "PROPERTY_AZURE_REGIONAL_AUTHORITY_NAME"
  nameWithType: "Configuration.PROPERTY_AZURE_REGIONAL_AUTHORITY_NAME"
  summary: "Name of Azure AAD regional authority."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_REGIONAL_AUTHORITY_NAME"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_REGIONAL_AUTHORITY_NAME"
  desc: "Name of Azure AAD regional authority."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_CONNECT_TIMEOUT"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_CONNECT_TIMEOUT"
  name: "PROPERTY_AZURE_REQUEST_CONNECT_TIMEOUT"
  nameWithType: "Configuration.PROPERTY_AZURE_REQUEST_CONNECT_TIMEOUT"
  summary: "Sets the default timeout, in milliseconds, for a request to connect to the remote host."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_REQUEST_CONNECT_TIMEOUT"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_REQUEST_CONNECT_TIMEOUT"
  desc: "Sets the default timeout, in milliseconds, for a request to connect to the remote host.\n\nIf the configured value is equal to or less than 0 no timeout will be applied."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_READ_TIMEOUT"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_READ_TIMEOUT"
  name: "PROPERTY_AZURE_REQUEST_READ_TIMEOUT"
  nameWithType: "Configuration.PROPERTY_AZURE_REQUEST_READ_TIMEOUT"
  summary: "Sets the default timeout interval, in milliseconds, allowed between each byte read in a response."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_REQUEST_READ_TIMEOUT"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_REQUEST_READ_TIMEOUT"
  desc: "Sets the default timeout interval, in milliseconds, allowed between each byte read in a response.\n\nIf the configured value is equal to or less than 0 no timeout will be applied."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_RESPONSE_TIMEOUT"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_RESPONSE_TIMEOUT"
  name: "PROPERTY_AZURE_REQUEST_RESPONSE_TIMEOUT"
  nameWithType: "Configuration.PROPERTY_AZURE_REQUEST_RESPONSE_TIMEOUT"
  summary: "Sets the default timeout, in milliseconds, for a request to receive a response from the remote host."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_REQUEST_RESPONSE_TIMEOUT"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_REQUEST_RESPONSE_TIMEOUT"
  desc: "Sets the default timeout, in milliseconds, for a request to receive a response from the remote host.\n\nIf the configured value is equal to or less than 0 no timeout will be applied."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_RETRY_COUNT"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_RETRY_COUNT"
  name: "PROPERTY_AZURE_REQUEST_RETRY_COUNT"
  nameWithType: "Configuration.PROPERTY_AZURE_REQUEST_RETRY_COUNT"
  summary: "Sets the default number of times a request will be retried, if it passes the conditions for retrying, before it fails."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_REQUEST_RETRY_COUNT"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_REQUEST_RETRY_COUNT"
  desc: "Sets the default number of times a request will be retried, if it passes the conditions for retrying, before it fails."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_WRITE_TIMEOUT"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_REQUEST_WRITE_TIMEOUT"
  name: "PROPERTY_AZURE_REQUEST_WRITE_TIMEOUT"
  nameWithType: "Configuration.PROPERTY_AZURE_REQUEST_WRITE_TIMEOUT"
  summary: "Sets the default timeout interval, in milliseconds, allowed between each byte written by a request."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_REQUEST_WRITE_TIMEOUT"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_REQUEST_WRITE_TIMEOUT"
  desc: "Sets the default timeout interval, in milliseconds, allowed between each byte written by a request.\n\nIf the configured value is equal to or less than 0 no timeout will be applied."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_RESOURCE_GROUP"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_RESOURCE_GROUP"
  name: "PROPERTY_AZURE_RESOURCE_GROUP"
  nameWithType: "Configuration.PROPERTY_AZURE_RESOURCE_GROUP"
  summary: "Name of the Azure resource group."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_RESOURCE_GROUP"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_RESOURCE_GROUP"
  desc: "Name of the Azure resource group."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_SUBSCRIPTION_ID"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_SUBSCRIPTION_ID"
  name: "PROPERTY_AZURE_SUBSCRIPTION_ID"
  nameWithType: "Configuration.PROPERTY_AZURE_SUBSCRIPTION_ID"
  summary: "Subscription id to use when connecting to Azure resources."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_SUBSCRIPTION_ID"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_SUBSCRIPTION_ID"
  desc: "Subscription id to use when connecting to Azure resources."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_TELEMETRY_DISABLED"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_TELEMETRY_DISABLED"
  name: "PROPERTY_AZURE_TELEMETRY_DISABLED"
  nameWithType: "Configuration.PROPERTY_AZURE_TELEMETRY_DISABLED"
  summary: "Disables telemetry collection."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_TELEMETRY_DISABLED"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_TELEMETRY_DISABLED"
  desc: "Disables telemetry collection."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_TENANT_ID"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_TENANT_ID"
  name: "PROPERTY_AZURE_TENANT_ID"
  nameWithType: "Configuration.PROPERTY_AZURE_TENANT_ID"
  summary: "Tenant id for the Azure resources."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_TENANT_ID"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_TENANT_ID"
  desc: "Tenant id for the Azure resources."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_TRACING_DISABLED"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_TRACING_DISABLED"
  name: "PROPERTY_AZURE_TRACING_DISABLED"
  nameWithType: "Configuration.PROPERTY_AZURE_TRACING_DISABLED"
  summary: "Disables tracing."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_TRACING_DISABLED"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_TRACING_DISABLED"
  desc: "Disables tracing."
- uid: "com.azure.core.util.Configuration.PROPERTY_AZURE_USERNAME"
  fullName: "com.azure.core.util.Configuration.PROPERTY_AZURE_USERNAME"
  name: "PROPERTY_AZURE_USERNAME"
  nameWithType: "Configuration.PROPERTY_AZURE_USERNAME"
  summary: "Username to use when performing username/password authentication with Azure."
  modifiers:
  - "static"
  - "final"
  field:
    value: "AZURE_USERNAME"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_AZURE_USERNAME"
  desc: "Username to use when performing username/password authentication with Azure."
- uid: "com.azure.core.util.Configuration.PROPERTY_HTTPS_PROXY"
  fullName: "com.azure.core.util.Configuration.PROPERTY_HTTPS_PROXY"
  name: "PROPERTY_HTTPS_PROXY"
  nameWithType: "Configuration.PROPERTY_HTTPS_PROXY"
  summary: "URL of the proxy for HTTPS connections."
  modifiers:
  - "static"
  - "final"
  field:
    value: "HTTPS_PROXY"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_HTTPS_PROXY"
  desc: "URL of the proxy for HTTPS connections."
- uid: "com.azure.core.util.Configuration.PROPERTY_HTTP_PROXY"
  fullName: "com.azure.core.util.Configuration.PROPERTY_HTTP_PROXY"
  name: "PROPERTY_HTTP_PROXY"
  nameWithType: "Configuration.PROPERTY_HTTP_PROXY"
  summary: "URL of the proxy for HTTP connections."
  modifiers:
  - "static"
  - "final"
  field:
    value: "HTTP_PROXY"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_HTTP_PROXY"
  desc: "URL of the proxy for HTTP connections."
- uid: "com.azure.core.util.Configuration.PROPERTY_IDENTITY_ENDPOINT"
  fullName: "com.azure.core.util.Configuration.PROPERTY_IDENTITY_ENDPOINT"
  name: "PROPERTY_IDENTITY_ENDPOINT"
  nameWithType: "Configuration.PROPERTY_IDENTITY_ENDPOINT"
  summary: "Endpoint to connect to when using Azure Active Directory managed service identity (MSI)."
  modifiers:
  - "static"
  - "final"
  field:
    value: "IDENTITY_ENDPOINT"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_IDENTITY_ENDPOINT"
  desc: "Endpoint to connect to when using Azure Active Directory managed service identity (MSI)."
- uid: "com.azure.core.util.Configuration.PROPERTY_IDENTITY_HEADER"
  fullName: "com.azure.core.util.Configuration.PROPERTY_IDENTITY_HEADER"
  name: "PROPERTY_IDENTITY_HEADER"
  nameWithType: "Configuration.PROPERTY_IDENTITY_HEADER"
  summary: "Header when connecting to Azure Active Directory using managed service identity (MSI)."
  modifiers:
  - "static"
  - "final"
  field:
    value: "IDENTITY_HEADER"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_IDENTITY_HEADER"
  desc: "Header when connecting to Azure Active Directory using managed service identity (MSI)."
- uid: "com.azure.core.util.Configuration.PROPERTY_MSI_ENDPOINT"
  fullName: "com.azure.core.util.Configuration.PROPERTY_MSI_ENDPOINT"
  name: "PROPERTY_MSI_ENDPOINT"
  nameWithType: "Configuration.PROPERTY_MSI_ENDPOINT"
  summary: "Endpoint to connect to when using Azure Active Directory managed service identity (MSI)."
  modifiers:
  - "static"
  - "final"
  field:
    value: "MSI_ENDPOINT"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_MSI_ENDPOINT"
  desc: "Endpoint to connect to when using Azure Active Directory managed service identity (MSI)."
- uid: "com.azure.core.util.Configuration.PROPERTY_MSI_SECRET"
  fullName: "com.azure.core.util.Configuration.PROPERTY_MSI_SECRET"
  name: "PROPERTY_MSI_SECRET"
  nameWithType: "Configuration.PROPERTY_MSI_SECRET"
  summary: "Secret when connecting to Azure Active Directory using managed service identity (MSI)."
  modifiers:
  - "static"
  - "final"
  field:
    value: "MSI_SECRET"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_MSI_SECRET"
  desc: "Secret when connecting to Azure Active Directory using managed service identity (MSI)."
- uid: "com.azure.core.util.Configuration.PROPERTY_NO_PROXY"
  fullName: "com.azure.core.util.Configuration.PROPERTY_NO_PROXY"
  name: "PROPERTY_NO_PROXY"
  nameWithType: "Configuration.PROPERTY_NO_PROXY"
  summary: "A list of hosts or CIDR to not use proxy HTTP/HTTPS connections through."
  modifiers:
  - "static"
  - "final"
  field:
    value: "NO_PROXY"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String PROPERTY_NO_PROXY"
  desc: "A list of hosts or CIDR to not use proxy HTTP/HTTPS connections through."
methods:
- uid: "com.azure.core.util.Configuration.<T>get(com.azure.core.util.ConfigurationProperty<T>)"
  fullName: "com.azure.core.util.Configuration.<T>get(ConfigurationProperty<T> property)"
  name: "<T>get(ConfigurationProperty<T> property)"
  nameWithType: "Configuration.<T>get(ConfigurationProperty<T> property)"
  summary: "Gets property value from all available sources in the following order:\n\n *  Explicit configuration from given <xref uid=\"com.azure.core.util.ConfigurationSource\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSource\"></xref> by property name\n *  Explicit configuration by property aliases in the order they were provided in <xref uid=\"com.azure.core.util.ConfigurationProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationProperty\"></xref>\n *  Explicit configuration by property name in the shared section (if <xref uid=\"com.azure.core.util.ConfigurationProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationProperty\"></xref> is shared)\n *  Explicit configuration by property aliases in the shared section (if <xref uid=\"com.azure.core.util.ConfigurationProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationProperty\"></xref> is shared)\n *  System property (if set)\n *  Environment variable (if set)"
  parameters:
  - description: "instance."
    name: "property"
    type: "<xref href=\"com.azure.core.util.ConfigurationProperty?alt=com.azure.core.util.ConfigurationProperty&text=ConfigurationProperty\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public T <T>get(ConfigurationProperty<T> property)"
  desc: "Gets property value from all available sources in the following order:\n\n *  Explicit configuration from given <xref uid=\"com.azure.core.util.ConfigurationSource\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSource\"></xref> by property name\n *  Explicit configuration by property aliases in the order they were provided in <xref uid=\"com.azure.core.util.ConfigurationProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationProperty\"></xref>\n *  Explicit configuration by property name in the shared section (if <xref uid=\"com.azure.core.util.ConfigurationProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationProperty\"></xref> is shared)\n *  Explicit configuration by property aliases in the shared section (if <xref uid=\"com.azure.core.util.ConfigurationProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationProperty\"></xref> is shared)\n *  System property (if set)\n *  Environment variable (if set)\n\nProperty value is converted to specified type. If property value is missing and not required, default value is returned.\n\n```java\nConfigurationProperty<String> property = ConfigurationPropertyBuilder.ofString(\"http.proxy.hostname\")\n     .shared(true)\n     .logValue(true)\n     .systemPropertyName(\"http.proxyHost\")\n     .build();\n\n // attempts to get local `azure.sdk.<client-name>.http.proxy.host` property and falls back to\n // shared azure.sdk.http.proxy.port\n System.out.println(configuration.get(property));\n```"
  returns:
    description: "true if property is available, false otherwise."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.Configuration.<T>get(java.lang.String,T)"
  fullName: "com.azure.core.util.Configuration.<T>get(String name, T defaultValue)"
  name: "<T>get(String name, T defaultValue)"
  nameWithType: "Configuration.<T>get(String name, T defaultValue)"
  summary: "Gets the value of system property or environment variable converted to given primitive `T` using corresponding `parse` method on this type."
  parameters:
  - description: "Name of the configuration."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Value to return if the configuration isn't found."
    name: "defaultValue"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public T <T>get(String name, T defaultValue)"
  desc: "Gets the value of system property or environment variable converted to given primitive `T` using corresponding `parse` method on this type. Use <xref uid=\"com.azure.core.util.Configuration.<T>get(com.azure.core.util.ConfigurationProperty<T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#get(ConfigurationProperty)\"></xref> overload to get explicit configuration or environment configuration from specific source.\n\nThis method first checks the values previously loaded from the environment, if the configuration is found there it will be returned. Otherwise, this will attempt to load the value from the environment.\n\nIf no configuration is found, the `defaultValue` is returned.\n\n**Following types are supported:**\n\n *  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Byte\"></xref>\n *  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Short\"></xref>\n *  <xref uid=\"java.lang.Integer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Integer\"></xref>\n *  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Long\"></xref>\n *  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Float\"></xref>\n *  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Double\"></xref>\n *  <xref uid=\"java.lang.Boolean\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Boolean\"></xref>"
  returns:
    description: "The converted configuration if found, otherwise the default value is returned."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.Configuration.<T>get(java.lang.String,java.util.function.Function<java.lang.String,T>)"
  fullName: "com.azure.core.util.Configuration.<T>get(String name, Function<String,T> converter)"
  name: "<T>get(String name, Function<String,T> converter)"
  nameWithType: "Configuration.<T>get(String name, Function<String,T> converter)"
  summary: "Gets the value of system property or environment variable and converts it with the `converter`."
  parameters:
  - description: "Name of the configuration."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Converter used to map the configuration to <code>T</code>."
    name: "converter"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public T <T>get(String name, Function<String,T> converter)"
  desc: "Gets the value of system property or environment variable and converts it with the `converter`.\n\nThis method first checks the values previously loaded from the environment, if the configuration is found there it will be returned. Otherwise, this will attempt to load the value from the environment.\n\nIf no configuration is found the `converter` won't be called and null will be returned."
  returns:
    description: "The converted configuration if found, otherwise null."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.Configuration.clone()"
  fullName: "com.azure.core.util.Configuration.clone()"
  name: "clone()"
  nameWithType: "Configuration.clone()"
  summary: "Clones this Configuration object."
  deprecatedTag: "Use <xref uid=\"com.azure.core.util.ConfigurationBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationBuilder\"></xref> and <xref uid=\"com.azure.core.util.ConfigurationSource\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSource\"></xref> to create configuration."
  overridden: "java.lang.Object.clone()"
  syntax: "@Deprecated\npublic Configuration clone()"
  desc: "Clones this Configuration object."
  hasDeprecatedTag: true
  returns:
    description: "A clone of the Configuration object."
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.Configuration.contains(com.azure.core.util.ConfigurationProperty<?>)"
  fullName: "com.azure.core.util.Configuration.contains(ConfigurationProperty<?> property)"
  name: "contains(ConfigurationProperty<?> property)"
  nameWithType: "Configuration.contains(ConfigurationProperty<?> property)"
  summary: "Checks if configuration contains the property."
  parameters:
  - description: "instance."
    name: "property"
    type: "<xref href=\"com.azure.core.util.ConfigurationProperty?alt=com.azure.core.util.ConfigurationProperty&text=ConfigurationProperty\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public boolean contains(ConfigurationProperty<?> property)"
  desc: "Checks if configuration contains the property. If property can be shared between clients, checks this `Configuration` and falls back to shared section. If property has aliases, system property or environment variable defined, checks them as well.\n\nValue is not validated."
  returns:
    description: "true if property is available, false otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.Configuration.contains(java.lang.String)"
  fullName: "com.azure.core.util.Configuration.contains(String name)"
  name: "contains(String name)"
  nameWithType: "Configuration.contains(String name)"
  summary: "Determines if the system property or environment variable is defined."
  parameters:
  - description: "Name of the configuration."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean contains(String name)"
  desc: "Determines if the system property or environment variable is defined. Use <xref uid=\"com.azure.core.util.Configuration.contains(com.azure.core.util.ConfigurationProperty<?>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#contains(ConfigurationProperty)\"></xref> overload to get explicit configuration or environment configuration from specific source.\n\nThis only checks against values previously loaded into the Configuration object, this won't inspect the environment for containing the value."
  returns:
    description: "True if the configuration exists, otherwise false."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.Configuration.get(java.lang.String)"
  fullName: "com.azure.core.util.Configuration.get(String name)"
  name: "get(String name)"
  nameWithType: "Configuration.get(String name)"
  summary: "Gets the value of system property or environment variable."
  parameters:
  - description: "Name of the configuration."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String get(String name)"
  desc: "Gets the value of system property or environment variable. Use <xref uid=\"com.azure.core.util.Configuration.<T>get(com.azure.core.util.ConfigurationProperty<T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#get(ConfigurationProperty)\"></xref> overload to get explicit configuration or environment configuration from specific source.\n\nThis method first checks the values previously loaded from the environment, if the configuration is found there it will be returned. Otherwise, this will attempt to load the value from the environment."
  returns:
    description: "Value of the configuration if found, otherwise null."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.Configuration.getGlobalConfiguration()"
  fullName: "com.azure.core.util.Configuration.getGlobalConfiguration()"
  name: "getGlobalConfiguration()"
  nameWithType: "Configuration.getGlobalConfiguration()"
  summary: "Gets the global configuration store shared by all client libraries."
  modifiers:
  - "static"
  syntax: "public static Configuration getGlobalConfiguration()"
  desc: "Gets the global configuration store shared by all client libraries."
  returns:
    description: "The global configuration store."
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.Configuration.put(java.lang.String,java.lang.String)"
  fullName: "com.azure.core.util.Configuration.put(String name, String value)"
  name: "put(String name, String value)"
  nameWithType: "Configuration.put(String name, String value)"
  summary: "Adds a configuration with the given value."
  deprecatedTag: "Use <xref uid=\"com.azure.core.util.ConfigurationBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationBuilder\"></xref> and <xref uid=\"com.azure.core.util.ConfigurationSource\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSource\"></xref> to provide all properties before creating configuration."
  parameters:
  - description: "Name of the configuration."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Value of the configuration."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic Configuration put(String name, String value)"
  desc: "Adds a configuration with the given value.\n\nThis will overwrite the previous configuration value if it existed."
  hasDeprecatedTag: true
  returns:
    description: "The updated Configuration object."
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.Configuration.remove(java.lang.String)"
  fullName: "com.azure.core.util.Configuration.remove(String name)"
  name: "remove(String name)"
  nameWithType: "Configuration.remove(String name)"
  summary: "Removes the configuration."
  deprecatedTag: "Use <xref uid=\"com.azure.core.util.ConfigurationBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationBuilder\"></xref> and <xref uid=\"com.azure.core.util.ConfigurationSource\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSource\"></xref> to provide all properties before creating configuration."
  parameters:
  - description: "Name of the configuration."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic String remove(String name)"
  desc: "Removes the configuration.\n\nThis returns the value of the configuration if it previously existed."
  hasDeprecatedTag: true
  returns:
    description: "The configuration if it previously existed, otherwise null."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Contains configuration information that is used during construction of client libraries.\n\n```java\nConfiguration configuration = new ConfigurationBuilder(new SampleSource(properties))\n     .root(\"azure.sdk\")\n     .buildSection(\"client-name\");\n\n ConfigurationProperty<String> proxyHostnameProperty = ConfigurationPropertyBuilder.ofString(\"http.proxy.hostname\")\n     .shared(true)\n     .build();\n System.out.println(configuration.get(proxyHostnameProperty));\n```"
implements:
- "<xref href=\"java.lang.Cloneable?alt=java.lang.Cloneable&text=Cloneable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.util"
artifact: com.azure:azure-core:1.31.0
