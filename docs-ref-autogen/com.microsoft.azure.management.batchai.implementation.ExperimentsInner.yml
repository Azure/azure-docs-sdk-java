### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.ExperimentsInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  name: ExperimentsInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  nameWithType: ExperimentsInner.ExperimentsInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.batchai.implementation.BatchAIManagementClientImpl?alt=com.microsoft.azure.management.batchai.implementation.BatchAIManagementClientImpl&text=BatchAIManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of ExperimentsInner.</p>

    <p></p>
  syntax: public ExperimentsInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.ExperimentsInner(Retrofit,BatchAIManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginCreate(String resourceGroupName, String workspaceName, String experimentName)
  name: beginCreate(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.beginCreate(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ExperimentInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an Experiment.</p>

    <p></p>
  syntax: public ExperimentInner beginCreate(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginCreate(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName)
  name: beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ExperimentInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates an Experiment.</p>

    <p></p>
  syntax: public Observable<ExperimentInner> beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginCreateAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  name: beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  nameWithType: ExperimentsInner.beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates an Experiment.</p>

    <p></p>
  syntax: public ServiceFuture<ExperimentInner> beginCreateAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginCreateAsync(String,String,String,final ServiceCallback<ExperimentInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  name: beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ExperimentInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates an Experiment.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ExperimentInner>> beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginCreateWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginDelete(String resourceGroupName, String workspaceName, String experimentName)
  name: beginDelete(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.beginDelete(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes an Experiment.</p>

    <p></p>
  syntax: public void beginDelete(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginDelete(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName)
  name: beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes an Experiment.</p>

    <p></p>
  syntax: public Observable<Void> beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginDeleteAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<Void> serviceCallback)
  name: beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ExperimentsInner.beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes an Experiment.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginDeleteAsync(String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  name: beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes an Experiment.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.beginDeleteWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.create(String resourceGroupName, String workspaceName, String experimentName)
  name: create(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.create(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ExperimentInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an Experiment.</p>

    <p></p>
  syntax: public ExperimentInner create(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.create(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.createAsync(String resourceGroupName, String workspaceName, String experimentName)
  name: createAsync(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.createAsync(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates an Experiment.</p>

    <p></p>
  syntax: public Observable<ExperimentInner> createAsync(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.createAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.createAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  name: createAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  nameWithType: ExperimentsInner.createAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates an Experiment.</p>

    <p></p>
  syntax: public ServiceFuture<ExperimentInner> createAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.createAsync(String,String,String,final ServiceCallback<ExperimentInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.createWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  name: createWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.createWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates an Experiment.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ExperimentInner>> createWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.createWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.delete(String resourceGroupName, String workspaceName, String experimentName)
  name: delete(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.delete(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes an Experiment.</p>

    <p></p>
  syntax: public void delete(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.delete(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.deleteAsync(String resourceGroupName, String workspaceName, String experimentName)
  name: deleteAsync(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.deleteAsync(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes an Experiment.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.deleteAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.deleteAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ExperimentsInner.deleteAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes an Experiment.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.deleteAsync(String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  name: deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes an Experiment.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.deleteWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.get(String resourceGroupName, String workspaceName, String experimentName)
  name: get(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.get(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ExperimentInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information about an Experiment.</p>

    <p></p>
  syntax: public ExperimentInner get(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.get(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName)
  name: getAsync(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ExperimentInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about an Experiment.</p>

    <p></p>
  syntax: public Observable<ExperimentInner> getAsync(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.getAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  name: getAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  nameWithType: ExperimentsInner.getAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about an Experiment.</p>

    <p></p>
  syntax: public ServiceFuture<ExperimentInner> getAsync(String resourceGroupName, String workspaceName, String experimentName, final ServiceCallback<ExperimentInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.getAsync(String,String,String,final ServiceCallback<ExperimentInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  name: getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  nameWithType: ExperimentsInner.getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ExperimentInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about an Experiment.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ExperimentInner>> getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.getWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspace(final String resourceGroupName, final String workspaceName)
  name: listByWorkspace(final String resourceGroupName, final String workspaceName)
  nameWithType: ExperimentsInner.listByWorkspace(final String resourceGroupName, final String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ExperimentInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public PagedList<ExperimentInner> listByWorkspace(final String resourceGroupName, final String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspace(final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspace(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  name: listByWorkspace(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  nameWithType: ExperimentsInner.listByWorkspace(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: experimentsListByWorkspaceOptions
    type: final <xref href="com.microsoft.azure.management.batchai.ExperimentsListByWorkspaceOptions?alt=com.microsoft.azure.management.batchai.ExperimentsListByWorkspaceOptions&text=ExperimentsListByWorkspaceOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ExperimentInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public PagedList<ExperimentInner> listByWorkspace(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspace(final String,final String,final ExperimentsListByWorkspaceOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName)
  name: listByWorkspaceAsync(final String resourceGroupName, final String workspaceName)
  nameWithType: ExperimentsInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ExperimentInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public Observable<Page<ExperimentInner>> listByWorkspaceAsync(final String resourceGroupName, final String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceAsync(final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  name: listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  nameWithType: ExperimentsInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: experimentsListByWorkspaceOptions
    type: final <xref href="com.microsoft.azure.management.batchai.ExperimentsListByWorkspaceOptions?alt=com.microsoft.azure.management.batchai.ExperimentsListByWorkspaceOptions&text=ExperimentsListByWorkspaceOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ExperimentInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public Observable<Page<ExperimentInner>> listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceAsync(final String,final String,final ExperimentsListByWorkspaceOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions, final ListOperationCallback<ExperimentInner> serviceCallback)
  name: listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions, final ListOperationCallback<ExperimentInner> serviceCallback)
  nameWithType: ExperimentsInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions, final ListOperationCallback<ExperimentInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: experimentsListByWorkspaceOptions
    type: final <xref href="com.microsoft.azure.management.batchai.ExperimentsListByWorkspaceOptions?alt=com.microsoft.azure.management.batchai.ExperimentsListByWorkspaceOptions&text=ExperimentsListByWorkspaceOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public ServiceFuture<List<ExperimentInner>> listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions, final ListOperationCallback<ExperimentInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceAsync(final String,final String,final ExperimentsListByWorkspaceOptions,final ListOperationCallback<ExperimentInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ListOperationCallback<ExperimentInner> serviceCallback)
  name: listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ListOperationCallback<ExperimentInner> serviceCallback)
  nameWithType: ExperimentsInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ListOperationCallback<ExperimentInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public ServiceFuture<List<ExperimentInner>> listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ListOperationCallback<ExperimentInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceAsync(final String,final String,final ListOperationCallback<ExperimentInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceNext(final String nextPageLink)
  name: listByWorkspaceNext(final String nextPageLink)
  nameWithType: ExperimentsInner.listByWorkspaceNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;ExperimentInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public PagedList<ExperimentInner> listByWorkspaceNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceNext(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceNextAsync(final String nextPageLink)
  name: listByWorkspaceNextAsync(final String nextPageLink)
  nameWithType: ExperimentsInner.listByWorkspaceNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ExperimentInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public Observable<Page<ExperimentInner>> listByWorkspaceNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceNextAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceNextAsync(final String nextPageLink, final ServiceFuture<List<ExperimentInner>> serviceFuture, final ListOperationCallback<ExperimentInner> serviceCallback)
  name: listByWorkspaceNextAsync(final String nextPageLink, final ServiceFuture<List<ExperimentInner>> serviceFuture, final ListOperationCallback<ExperimentInner> serviceCallback)
  nameWithType: ExperimentsInner.listByWorkspaceNextAsync(final String nextPageLink, final ServiceFuture<List<ExperimentInner>> serviceFuture, final ListOperationCallback<ExperimentInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public ServiceFuture<List<ExperimentInner>> listByWorkspaceNextAsync(final String nextPageLink, final ServiceFuture<List<ExperimentInner>> serviceFuture, final ListOperationCallback<ExperimentInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceNextAsync(final String,final ServiceFuture<List<ExperimentInner>>,final ListOperationCallback<ExperimentInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceNextSinglePageAsync(final String nextPageLink)
  name: listByWorkspaceNextSinglePageAsync(final String nextPageLink)
  nameWithType: ExperimentsInner.listByWorkspaceNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;ExperimentInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p>ServiceResponse&lt;PageImpl&lt;ExperimentInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<ExperimentInner>>> listByWorkspaceNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceNextWithServiceResponseAsync(final String nextPageLink)
  name: listByWorkspaceNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: ExperimentsInner.listByWorkspaceNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ExperimentInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ExperimentInner>>> listByWorkspaceNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName)
  name: listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName)
  nameWithType: ExperimentsInner.listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;ExperimentInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ExperimentInner>>> listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceSinglePageAsync(final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  name: listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  nameWithType: ExperimentsInner.listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. ServiceResponse&lt;PageImpl&lt;ExperimentInner&gt;&gt; * </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. ServiceResponse&lt;PageImpl&lt;ExperimentInner&gt;&gt; * </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: experimentsListByWorkspaceOptions
    type: final <xref href="com.microsoft.azure.management.batchai.ExperimentsListByWorkspaceOptions?alt=com.microsoft.azure.management.batchai.ExperimentsListByWorkspaceOptions&text=ExperimentsListByWorkspaceOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;ExperimentInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p>ServiceResponse&lt;PageImpl&lt;ExperimentInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<ExperimentInner>>> listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceSinglePageAsync(final String,final String,final ExperimentsListByWorkspaceOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName)
  name: listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName)
  nameWithType: ExperimentsInner.listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ExperimentInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ExperimentInner>>> listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceWithServiceResponseAsync(final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  name: listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  nameWithType: ExperimentsInner.listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: experimentsListByWorkspaceOptions
    type: final <xref href="com.microsoft.azure.management.batchai.ExperimentsListByWorkspaceOptions?alt=com.microsoft.azure.management.batchai.ExperimentsListByWorkspaceOptions&text=ExperimentsListByWorkspaceOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;ExperimentInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.ExperimentInner?alt=com.microsoft.azure.management.batchai.implementation.ExperimentInner&text=ExperimentInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Experiments within the specified Workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<ExperimentInner>>> listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final ExperimentsListByWorkspaceOptions experimentsListByWorkspaceOptions)
  uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner.listByWorkspaceWithServiceResponseAsync(final String,final String,final ExperimentsListByWorkspaceOptions)
nameWithType: ExperimentsInner
syntax: public class ExperimentsInner
type: class
uid: com.microsoft.azure.management.batchai.implementation.ExperimentsInner
fullName: com.microsoft.azure.management.batchai.implementation.ExperimentsInner
name: ExperimentsInner
package: com.microsoft.azure.management.batchai.implementation
summary: <p>An instance of this class provides access to all the operations defined in Experiments. </p>
metadata: {}
