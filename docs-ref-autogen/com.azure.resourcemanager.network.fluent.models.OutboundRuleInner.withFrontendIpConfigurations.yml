### YamlMime:JavaMember
uid: "com.azure.resourcemanager.network.fluent.models.OutboundRuleInner.withFrontendIpConfigurations*"
fullName: "com.azure.resourcemanager.network.fluent.models.OutboundRuleInner.withFrontendIpConfigurations"
name: "withFrontendIpConfigurations"
nameWithType: "OutboundRuleInner.withFrontendIpConfigurations"
members:
- uid: "com.azure.resourcemanager.network.fluent.models.OutboundRuleInner.withFrontendIpConfigurations(java.util.List<com.azure.core.management.SubResource>)"
  fullName: "com.azure.resourcemanager.network.fluent.models.OutboundRuleInner.withFrontendIpConfigurations(List<SubResource> frontendIpConfigurations)"
  name: "withFrontendIpConfigurations(List<SubResource> frontendIpConfigurations)"
  nameWithType: "OutboundRuleInner.withFrontendIpConfigurations(List<SubResource> frontendIpConfigurations)"
  summary: "Set the frontendIpConfigurations property: The Frontend IP addresses of the load balancer."
  parameters:
  - description: "the frontendIpConfigurations value to set."
    name: "frontendIpConfigurations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public OutboundRuleInner withFrontendIpConfigurations(List<SubResource> frontendIpConfigurations)"
  returns:
    description: "the OutboundRuleInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.OutboundRuleInner?alt=com.azure.resourcemanager.network.fluent.models.OutboundRuleInner&text=OutboundRuleInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
