### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  id: EventProcessorOptions
  parent: com.microsoft.azure.eventprocessorhost
  children:
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.EventProcessorOptions()
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getDefaultOptions()
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInitialPositionProvider()
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout()
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getMaxBatchSize()
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getPrefetchCount()
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiverRuntimeMetricEnabled()
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiveTimeOut()
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setExceptionNotification(Consumer<ExceptionReceivedEventArgs>)
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInitialPositionProvider(Function<String, EventPosition>)
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout(Boolean)
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setMaxBatchSize(int)
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setPrefetchCount(int)
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiverRuntimeMetricEnabled(boolean)
  - com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiveTimeOut(Duration)
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: EventProcessorOptions
  nameWithType: EventProcessorOptions
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  type: Class
  source:
    remote: &o0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 18
  package: com.microsoft.azure.eventprocessorhost
  syntax: &o1
    content: public class EventProcessorOptions
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.EventProcessorOptions()
  id: EventProcessorOptions()
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: EventProcessorOptions()
  nameWithType: EventProcessorOptions.EventProcessorOptions()
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.EventProcessorOptions()
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.EventProcessorOptions*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 29
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public EventProcessorOptions()
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getDefaultOptions()
  id: getDefaultOptions()
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: getDefaultOptions()
  nameWithType: EventProcessorOptions.getDefaultOptions()
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getDefaultOptions()
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getDefaultOptions*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 47
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public static EventProcessorOptions getDefaultOptions()
    return:
      type: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInitialPositionProvider()
  id: getInitialPositionProvider()
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: getInitialPositionProvider()
  nameWithType: EventProcessorOptions.getInitialPositionProvider()
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInitialPositionProvider()
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInitialPositionProvider*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 140
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public Function<String, EventPosition> getInitialPositionProvider()
    return:
      type: 45c59aa5com.microsoft.azure.eventhubs.EventPositiona08ddfce
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout()
  id: getInvokeProcessorAfterReceiveTimeout()
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: getInvokeProcessorAfterReceiveTimeout()
  nameWithType: EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout()
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout()
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 164
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public Boolean getInvokeProcessorAfterReceiveTimeout()
    return:
      type: 866c2227
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getMaxBatchSize()
  id: getMaxBatchSize()
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: getMaxBatchSize()
  nameWithType: EventProcessorOptions.getMaxBatchSize()
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getMaxBatchSize()
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getMaxBatchSize*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 73
  package: com.microsoft.azure.eventprocessorhost
  summary: "<p>Returns the maximum number of events that will be passed to one call to IEventProcessor.onEvents</p>\r\n<p></p>"
  syntax:
    content: public int getMaxBatchSize()
    return:
      type: f75371fa
      description: <p>the maximum maximum number of events that will be passed to one call to IEventProcessor.onEvents </p>
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getPrefetchCount()
  id: getPrefetchCount()
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: getPrefetchCount()
  nameWithType: EventProcessorOptions.getPrefetchCount()
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getPrefetchCount()
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getPrefetchCount*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 109
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public int getPrefetchCount()
    return:
      type: f75371fa
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiverRuntimeMetricEnabled()
  id: getReceiverRuntimeMetricEnabled()
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: getReceiverRuntimeMetricEnabled()
  nameWithType: EventProcessorOptions.getReceiverRuntimeMetricEnabled()
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiverRuntimeMetricEnabled()
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiverRuntimeMetricEnabled*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 189
  package: com.microsoft.azure.eventprocessorhost
  summary: "<p>Knob to enable/disable runtime metric of the receiver. If this is set to true, the first parameter <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.eventprocessorhost.PartitionContext#runtimeInformation\"></xref> of <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IEventProcessor#onEvents(com.microsoft.azure.eventprocessorhost.PartitionContext, java.lang.Iterable)\"></xref> will be populated. </p>\r\n<p>Enabling this knob will add 3 additional properties to all raw AMQP events received.</p>\r\n<p></p>"
  syntax:
    content: public boolean getReceiverRuntimeMetricEnabled()
    return:
      type: 4fc6e284
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="boolean"></xref> indicating, whether, the runtime metric of the receiver was enabled </p>
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiveTimeOut()
  id: getReceiveTimeOut()
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: getReceiveTimeOut()
  nameWithType: EventProcessorOptions.getReceiveTimeOut()
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiveTimeOut()
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiveTimeOut*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 91
  package: com.microsoft.azure.eventprocessorhost
  summary: "<p>Returns the timeout for receive operations.</p>\r\n<p></p>"
  syntax:
    content: public Duration getReceiveTimeOut()
    return:
      type: e02a2de0
      description: <p>the timeout for receive operations </p>
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setExceptionNotification(Consumer<ExceptionReceivedEventArgs>)
  id: setExceptionNotification(Consumer<ExceptionReceivedEventArgs>)
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: setExceptionNotification(Consumer<ExceptionReceivedEventArgs> notificationHandler)
  nameWithType: EventProcessorOptions.setExceptionNotification(Consumer<ExceptionReceivedEventArgs> notificationHandler)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setExceptionNotification(Consumer<ExceptionReceivedEventArgs> notificationHandler)
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setExceptionNotification*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 64
  package: com.microsoft.azure.eventprocessorhost
  summary: "<p>Sets a handler which receives notification of general exceptions. </p>\r\n<p>Exceptions which occur while processing events from a particular Event Hub partition are delivered to the onError method of the event processor for that partition. This handler is called on occasions when there is no event processor associated with the throwing activity, or the event processor could not be created. </p>\r\n<p>The handler is not expected to do anything about the exception. If it is possible to recover, the event processor host instance will recover automatically.</p>\r\n<p></p>"
  syntax:
    content: public void setExceptionNotification(Consumer<ExceptionReceivedEventArgs> notificationHandler)
    parameters:
    - id: notificationHandler
      type: e0918e98com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgsa08ddfce
      description: <p>Handler which is called when an exception occurs. Set to null to stop handling. </p>
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInitialPositionProvider(Function<String, EventPosition>)
  id: setInitialPositionProvider(Function<String, EventPosition>)
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: setInitialPositionProvider(Function<String, EventPosition> initialPositionProvider)
  nameWithType: EventProcessorOptions.setInitialPositionProvider(Function<String, EventPosition> initialPositionProvider)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInitialPositionProvider(Function<String, EventPosition> initialPositionProvider)
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInitialPositionProvider*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 152
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public void setInitialPositionProvider(Function<String, EventPosition> initialPositionProvider)
    parameters:
    - id: initialPositionProvider
      type: 45c59aa5com.microsoft.azure.eventhubs.EventPositiona08ddfce
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout(Boolean)
  id: setInvokeProcessorAfterReceiveTimeout(Boolean)
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: setInvokeProcessorAfterReceiveTimeout(Boolean invokeProcessorAfterReceiveTimeout)
  nameWithType: EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout(Boolean invokeProcessorAfterReceiveTimeout)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout(Boolean invokeProcessorAfterReceiveTimeout)
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 176
  package: com.microsoft.azure.eventprocessorhost
  summary: "<p>Changes whether the EventProcessorHost will call IEventProcessor.onEvents() with an empty iterable when a receive timeout occurs (true) or not (false). </p>\r\n<p>The default is false (no call).</p>\r\n<p></p>"
  syntax:
    content: public void setInvokeProcessorAfterReceiveTimeout(Boolean invokeProcessorAfterReceiveTimeout)
    parameters:
    - id: invokeProcessorAfterReceiveTimeout
      type: 866c2227
      description: <p>the new value for what to do </p>
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setMaxBatchSize(int)
  id: setMaxBatchSize(int)
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: setMaxBatchSize(int maxBatchSize)
  nameWithType: EventProcessorOptions.setMaxBatchSize(int maxBatchSize)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setMaxBatchSize(int maxBatchSize)
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setMaxBatchSize*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 82
  package: com.microsoft.azure.eventprocessorhost
  summary: "<p>Sets the maximum number of events that will be passed to one call to IEventProcessor.onEvents</p>\r\n<p></p>"
  syntax:
    content: public void setMaxBatchSize(int maxBatchSize)
    parameters:
    - id: maxBatchSize
      type: f75371fa
      description: <p>the maximum number of events that will be passed to one call to IEventProcessor.onEvents </p>
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setPrefetchCount(int)
  id: setPrefetchCount(int)
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: setPrefetchCount(int prefetchCount)
  nameWithType: EventProcessorOptions.setPrefetchCount(int prefetchCount)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setPrefetchCount(int prefetchCount)
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setPrefetchCount*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 120
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public void setPrefetchCount(int prefetchCount)
    parameters:
    - id: prefetchCount
      type: f75371fa
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiverRuntimeMetricEnabled(boolean)
  id: setReceiverRuntimeMetricEnabled(boolean)
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: setReceiverRuntimeMetricEnabled(boolean value)
  nameWithType: EventProcessorOptions.setReceiverRuntimeMetricEnabled(boolean value)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiverRuntimeMetricEnabled(boolean value)
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiverRuntimeMetricEnabled*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 202
  package: com.microsoft.azure.eventprocessorhost
  summary: "<p>Knob to enable/disable runtime metric of the receiver. If this is set to true, the first parameter <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.eventprocessorhost.PartitionContext#runtimeInformation\"></xref> of <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IEventProcessor#onEvents(com.microsoft.azure.eventprocessorhost.PartitionContext, java.lang.Iterable)\"></xref> will be populated. </p>\r\n<p>Enabling this knob will add 3 additional properties to all raw AMQP events received.</p>\r\n<p></p>"
  syntax:
    content: public void setReceiverRuntimeMetricEnabled(boolean value)
    parameters:
    - id: value
      type: 4fc6e284
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="boolean"></xref> to indicate, whether, the runtime metric of the receiver should be enabled </p>
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiveTimeOut(Duration)
  id: setReceiveTimeOut(Duration)
  parent: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  langs:
  - java
  name: setReceiveTimeOut(Duration receiveTimeOut)
  nameWithType: EventProcessorOptions.setReceiveTimeOut(Duration receiveTimeOut)
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiveTimeOut(Duration receiveTimeOut)
  overload: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiveTimeOut*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 100
  package: com.microsoft.azure.eventprocessorhost
  summary: "<p>Sets the timeout for receive operations.</p>\r\n<p></p>"
  syntax:
    content: public void setReceiveTimeOut(Duration receiveTimeOut)
    parameters:
    - id: receiveTimeOut
      type: e02a2de0
      description: <p>new timeout for receive operations </p>
references:
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.EventProcessorOptions*
  name: EventProcessorOptions
  nameWithType: EventProcessorOptions.EventProcessorOptions
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.EventProcessorOptions
  package: com.microsoft.azure.eventprocessorhost
- uid: e0918e98com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgsa08ddfce
  spec.java:
  - name: Consumer<
    fullName: Consumer<
  - uid: com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgs
    name: ExceptionReceivedEventArgs
    fullName: com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgs
    href: com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgs.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setExceptionNotification*
  name: setExceptionNotification
  nameWithType: EventProcessorOptions.setExceptionNotification
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setExceptionNotification
  package: com.microsoft.azure.eventprocessorhost
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getMaxBatchSize*
  name: getMaxBatchSize
  nameWithType: EventProcessorOptions.getMaxBatchSize
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getMaxBatchSize
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setMaxBatchSize*
  name: setMaxBatchSize
  nameWithType: EventProcessorOptions.setMaxBatchSize
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setMaxBatchSize
  package: com.microsoft.azure.eventprocessorhost
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiveTimeOut*
  name: getReceiveTimeOut
  nameWithType: EventProcessorOptions.getReceiveTimeOut
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiveTimeOut
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiveTimeOut*
  name: setReceiveTimeOut
  nameWithType: EventProcessorOptions.setReceiveTimeOut
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiveTimeOut
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getPrefetchCount*
  name: getPrefetchCount
  nameWithType: EventProcessorOptions.getPrefetchCount
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getPrefetchCount
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setPrefetchCount*
  name: setPrefetchCount
  nameWithType: EventProcessorOptions.setPrefetchCount
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setPrefetchCount
  package: com.microsoft.azure.eventprocessorhost
- uid: 45c59aa5com.microsoft.azure.eventhubs.EventPositiona08ddfce
  spec.java:
  - name: 'Function<String, '
    fullName: 'Function<String, '
  - uid: com.microsoft.azure.eventhubs.EventPosition
    name: EventPosition
    fullName: com.microsoft.azure.eventhubs.EventPosition
    href: com.microsoft.azure.eventhubs.EventPosition.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInitialPositionProvider*
  name: getInitialPositionProvider
  nameWithType: EventProcessorOptions.getInitialPositionProvider
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInitialPositionProvider
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInitialPositionProvider*
  name: setInitialPositionProvider
  nameWithType: EventProcessorOptions.setInitialPositionProvider
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInitialPositionProvider
  package: com.microsoft.azure.eventprocessorhost
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout*
  name: getInvokeProcessorAfterReceiveTimeout
  nameWithType: EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout*
  name: setInvokeProcessorAfterReceiveTimeout
  nameWithType: EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout
  package: com.microsoft.azure.eventprocessorhost
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiverRuntimeMetricEnabled*
  name: getReceiverRuntimeMetricEnabled
  nameWithType: EventProcessorOptions.getReceiverRuntimeMetricEnabled
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiverRuntimeMetricEnabled
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiverRuntimeMetricEnabled*
  name: setReceiverRuntimeMetricEnabled
  nameWithType: EventProcessorOptions.setReceiverRuntimeMetricEnabled
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiverRuntimeMetricEnabled
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getDefaultOptions*
  name: getDefaultOptions
  nameWithType: EventProcessorOptions.getDefaultOptions
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getDefaultOptions
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgs
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgs.yml
  name: ExceptionReceivedEventArgs
  nameWithType: ExceptionReceivedEventArgs
  fullName: com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgs
  type: Class
  summary: "<p>Passed as an argument to the general exception handler that can be set via EventProcessorOptions. </p>"
  syntax:
    content: public class ExceptionReceivedEventArgs
- uid: com.microsoft.azure.eventhubs.EventPosition
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.EventPosition.yml
  name: EventPosition
  nameWithType: EventPosition
  fullName: com.microsoft.azure.eventhubs.EventPosition
  type: Interface
  summary: "<p>Defines a position of an <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> in the event hub partition. The position can be an Offset, Sequence Number, or EnqueuedTime. </p>"
  syntax:
    content: public interface EventPosition
- uid: com.microsoft.azure.eventhubs.EventPosition.fromStartOfStream()
  parent: com.microsoft.azure.eventhubs.EventPosition
  href: com.microsoft.azure.eventhubs.EventPosition.yml
  name: fromStartOfStream()
  nameWithType: EventPosition.fromStartOfStream()
  fullName: com.microsoft.azure.eventhubs.EventPosition.fromStartOfStream()
  type: Method
  summary: "<p>Returns the position for the start of a stream. Provide this position in receiver creation to start receiving from the first available event in the partition.</p>\r\n<p></p>"
  syntax:
    content: public static EventPosition fromStartOfStream()
    return:
      type: com.microsoft.azure.eventhubs.EventPosition
      description: <p>An <xref uid="com.microsoft.azure.eventhubs.EventPosition" data-throw-if-not-resolved="false" data-raw-source="EventPosition"></xref> set to the start of an Event Hubs stream. </p>
- uid: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.yml
  name: EventProcessorOptions
  nameWithType: EventProcessorOptions
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  type: Class
  syntax: *o1
