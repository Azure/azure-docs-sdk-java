### YamlMime:JavaType
uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties"
fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties"
name: "ServerProperties"
nameWithType: "ServerProperties"
summary: "The properties of a server."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServerProperties"
constructors:
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.ServerProperties()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.ServerProperties()"
  name: "ServerProperties()"
  nameWithType: "ServerProperties.ServerProperties()"
  syntax: "public ServerProperties()"
methods:
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.administratorLogin()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.administratorLogin()"
  name: "administratorLogin()"
  nameWithType: "ServerProperties.administratorLogin()"
  summary: "Get the administratorLogin property: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation)."
  syntax: "public String administratorLogin()"
  returns:
    description: "the administratorLogin value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.byokEnforcement()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.byokEnforcement()"
  name: "byokEnforcement()"
  nameWithType: "ServerProperties.byokEnforcement()"
  summary: "Get the byokEnforcement property: Status showing whether the server data encryption is enabled with customer-managed keys."
  syntax: "public String byokEnforcement()"
  returns:
    description: "the byokEnforcement value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.earliestRestoreDate()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.earliestRestoreDate()"
  name: "earliestRestoreDate()"
  nameWithType: "ServerProperties.earliestRestoreDate()"
  summary: "Get the earliestRestoreDate property: Earliest restore point creation time (ISO8601 format)."
  syntax: "public OffsetDateTime earliestRestoreDate()"
  returns:
    description: "the earliestRestoreDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.fullyQualifiedDomainName()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.fullyQualifiedDomainName()"
  name: "fullyQualifiedDomainName()"
  nameWithType: "ServerProperties.fullyQualifiedDomainName()"
  summary: "Get the fullyQualifiedDomainName property: The fully qualified domain name of a server."
  syntax: "public String fullyQualifiedDomainName()"
  returns:
    description: "the fullyQualifiedDomainName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.infrastructureEncryption()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.infrastructureEncryption()"
  name: "infrastructureEncryption()"
  nameWithType: "ServerProperties.infrastructureEncryption()"
  summary: "Get the infrastructureEncryption property: Status showing whether the server enabled infrastructure encryption."
  syntax: "public InfrastructureEncryption infrastructureEncryption()"
  returns:
    description: "the infrastructureEncryption value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.InfrastructureEncryption?alt=com.azure.resourcemanager.postgresql.models.InfrastructureEncryption&text=InfrastructureEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.masterServerId()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.masterServerId()"
  name: "masterServerId()"
  nameWithType: "ServerProperties.masterServerId()"
  summary: "Get the masterServerId property: The master server id of a replica server."
  syntax: "public String masterServerId()"
  returns:
    description: "the masterServerId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.minimalTlsVersion()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.minimalTlsVersion()"
  name: "minimalTlsVersion()"
  nameWithType: "ServerProperties.minimalTlsVersion()"
  summary: "Get the minimalTlsVersion property: Enforce a minimal Tls version for the server."
  syntax: "public MinimalTlsVersionEnum minimalTlsVersion()"
  returns:
    description: "the minimalTlsVersion value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum?alt=com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum&text=MinimalTlsVersionEnum\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "ServerProperties.privateEndpointConnections()"
  summary: "Get the privateEndpointConnections property: List of private endpoint connections on a server."
  syntax: "public List<ServerPrivateEndpointConnection> privateEndpointConnections()"
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresql.models.ServerPrivateEndpointConnection?alt=com.azure.resourcemanager.postgresql.models.ServerPrivateEndpointConnection&text=ServerPrivateEndpointConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "ServerProperties.publicNetworkAccess()"
  summary: "Get the publicNetworkAccess property: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
  syntax: "public PublicNetworkAccessEnum publicNetworkAccess()"
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum?alt=com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum&text=PublicNetworkAccessEnum\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.replicaCapacity()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.replicaCapacity()"
  name: "replicaCapacity()"
  nameWithType: "ServerProperties.replicaCapacity()"
  summary: "Get the replicaCapacity property: The maximum number of replicas that a master server can have."
  syntax: "public Integer replicaCapacity()"
  returns:
    description: "the replicaCapacity value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.replicationRole()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.replicationRole()"
  name: "replicationRole()"
  nameWithType: "ServerProperties.replicationRole()"
  summary: "Get the replicationRole property: The replication role of the server."
  syntax: "public String replicationRole()"
  returns:
    description: "the replicationRole value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.sslEnforcement()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.sslEnforcement()"
  name: "sslEnforcement()"
  nameWithType: "ServerProperties.sslEnforcement()"
  summary: "Get the sslEnforcement property: Enable ssl enforcement or not when connect to server."
  syntax: "public SslEnforcementEnum sslEnforcement()"
  returns:
    description: "the sslEnforcement value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.SslEnforcementEnum?alt=com.azure.resourcemanager.postgresql.models.SslEnforcementEnum&text=SslEnforcementEnum\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.storageProfile()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.storageProfile()"
  name: "storageProfile()"
  nameWithType: "ServerProperties.storageProfile()"
  summary: "Get the storageProfile property: Storage profile of a server."
  syntax: "public StorageProfile storageProfile()"
  returns:
    description: "the storageProfile value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.StorageProfile?alt=com.azure.resourcemanager.postgresql.models.StorageProfile&text=StorageProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.userVisibleState()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.userVisibleState()"
  name: "userVisibleState()"
  nameWithType: "ServerProperties.userVisibleState()"
  summary: "Get the userVisibleState property: A state of a server that is visible to user."
  syntax: "public ServerState userVisibleState()"
  returns:
    description: "the userVisibleState value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.ServerState?alt=com.azure.resourcemanager.postgresql.models.ServerState&text=ServerState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.validate()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.validate()"
  name: "validate()"
  nameWithType: "ServerProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.version()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.version()"
  name: "version()"
  nameWithType: "ServerProperties.version()"
  summary: "Get the version property: Server version."
  syntax: "public ServerVersion version()"
  returns:
    description: "the version value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.ServerVersion?alt=com.azure.resourcemanager.postgresql.models.ServerVersion&text=ServerVersion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withAdministratorLogin(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withAdministratorLogin(String administratorLogin)"
  name: "withAdministratorLogin(String administratorLogin)"
  nameWithType: "ServerProperties.withAdministratorLogin(String administratorLogin)"
  summary: "Set the administratorLogin property: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation)."
  parameters:
  - description: "the administratorLogin value to set."
    name: "administratorLogin"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withAdministratorLogin(String administratorLogin)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withEarliestRestoreDate(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withEarliestRestoreDate(OffsetDateTime earliestRestoreDate)"
  name: "withEarliestRestoreDate(OffsetDateTime earliestRestoreDate)"
  nameWithType: "ServerProperties.withEarliestRestoreDate(OffsetDateTime earliestRestoreDate)"
  summary: "Set the earliestRestoreDate property: Earliest restore point creation time (ISO8601 format)."
  parameters:
  - description: "the earliestRestoreDate value to set."
    name: "earliestRestoreDate"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withEarliestRestoreDate(OffsetDateTime earliestRestoreDate)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withFullyQualifiedDomainName(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withFullyQualifiedDomainName(String fullyQualifiedDomainName)"
  name: "withFullyQualifiedDomainName(String fullyQualifiedDomainName)"
  nameWithType: "ServerProperties.withFullyQualifiedDomainName(String fullyQualifiedDomainName)"
  summary: "Set the fullyQualifiedDomainName property: The fully qualified domain name of a server."
  parameters:
  - description: "the fullyQualifiedDomainName value to set."
    name: "fullyQualifiedDomainName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withFullyQualifiedDomainName(String fullyQualifiedDomainName)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withInfrastructureEncryption(com.azure.resourcemanager.postgresql.models.InfrastructureEncryption)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withInfrastructureEncryption(InfrastructureEncryption infrastructureEncryption)"
  name: "withInfrastructureEncryption(InfrastructureEncryption infrastructureEncryption)"
  nameWithType: "ServerProperties.withInfrastructureEncryption(InfrastructureEncryption infrastructureEncryption)"
  summary: "Set the infrastructureEncryption property: Status showing whether the server enabled infrastructure encryption."
  parameters:
  - description: "the infrastructureEncryption value to set."
    name: "infrastructureEncryption"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.InfrastructureEncryption?alt=com.azure.resourcemanager.postgresql.models.InfrastructureEncryption&text=InfrastructureEncryption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withInfrastructureEncryption(InfrastructureEncryption infrastructureEncryption)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withMasterServerId(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withMasterServerId(String masterServerId)"
  name: "withMasterServerId(String masterServerId)"
  nameWithType: "ServerProperties.withMasterServerId(String masterServerId)"
  summary: "Set the masterServerId property: The master server id of a replica server."
  parameters:
  - description: "the masterServerId value to set."
    name: "masterServerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withMasterServerId(String masterServerId)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withMinimalTlsVersion(com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withMinimalTlsVersion(MinimalTlsVersionEnum minimalTlsVersion)"
  name: "withMinimalTlsVersion(MinimalTlsVersionEnum minimalTlsVersion)"
  nameWithType: "ServerProperties.withMinimalTlsVersion(MinimalTlsVersionEnum minimalTlsVersion)"
  summary: "Set the minimalTlsVersion property: Enforce a minimal Tls version for the server."
  parameters:
  - description: "the minimalTlsVersion value to set."
    name: "minimalTlsVersion"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum?alt=com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum&text=MinimalTlsVersionEnum\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withMinimalTlsVersion(MinimalTlsVersionEnum minimalTlsVersion)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withPublicNetworkAccess(com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withPublicNetworkAccess(PublicNetworkAccessEnum publicNetworkAccess)"
  name: "withPublicNetworkAccess(PublicNetworkAccessEnum publicNetworkAccess)"
  nameWithType: "ServerProperties.withPublicNetworkAccess(PublicNetworkAccessEnum publicNetworkAccess)"
  summary: "Set the publicNetworkAccess property: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
  parameters:
  - description: "the publicNetworkAccess value to set."
    name: "publicNetworkAccess"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum?alt=com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum&text=PublicNetworkAccessEnum\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withPublicNetworkAccess(PublicNetworkAccessEnum publicNetworkAccess)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withReplicaCapacity(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withReplicaCapacity(Integer replicaCapacity)"
  name: "withReplicaCapacity(Integer replicaCapacity)"
  nameWithType: "ServerProperties.withReplicaCapacity(Integer replicaCapacity)"
  summary: "Set the replicaCapacity property: The maximum number of replicas that a master server can have."
  parameters:
  - description: "the replicaCapacity value to set."
    name: "replicaCapacity"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withReplicaCapacity(Integer replicaCapacity)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withReplicationRole(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withReplicationRole(String replicationRole)"
  name: "withReplicationRole(String replicationRole)"
  nameWithType: "ServerProperties.withReplicationRole(String replicationRole)"
  summary: "Set the replicationRole property: The replication role of the server."
  parameters:
  - description: "the replicationRole value to set."
    name: "replicationRole"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withReplicationRole(String replicationRole)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withSslEnforcement(com.azure.resourcemanager.postgresql.models.SslEnforcementEnum)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withSslEnforcement(SslEnforcementEnum sslEnforcement)"
  name: "withSslEnforcement(SslEnforcementEnum sslEnforcement)"
  nameWithType: "ServerProperties.withSslEnforcement(SslEnforcementEnum sslEnforcement)"
  summary: "Set the sslEnforcement property: Enable ssl enforcement or not when connect to server."
  parameters:
  - description: "the sslEnforcement value to set."
    name: "sslEnforcement"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.SslEnforcementEnum?alt=com.azure.resourcemanager.postgresql.models.SslEnforcementEnum&text=SslEnforcementEnum\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withSslEnforcement(SslEnforcementEnum sslEnforcement)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withStorageProfile(com.azure.resourcemanager.postgresql.models.StorageProfile)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withStorageProfile(StorageProfile storageProfile)"
  name: "withStorageProfile(StorageProfile storageProfile)"
  nameWithType: "ServerProperties.withStorageProfile(StorageProfile storageProfile)"
  summary: "Set the storageProfile property: Storage profile of a server."
  parameters:
  - description: "the storageProfile value to set."
    name: "storageProfile"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.StorageProfile?alt=com.azure.resourcemanager.postgresql.models.StorageProfile&text=StorageProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withStorageProfile(StorageProfile storageProfile)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withUserVisibleState(com.azure.resourcemanager.postgresql.models.ServerState)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withUserVisibleState(ServerState userVisibleState)"
  name: "withUserVisibleState(ServerState userVisibleState)"
  nameWithType: "ServerProperties.withUserVisibleState(ServerState userVisibleState)"
  summary: "Set the userVisibleState property: A state of a server that is visible to user."
  parameters:
  - description: "the userVisibleState value to set."
    name: "userVisibleState"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.ServerState?alt=com.azure.resourcemanager.postgresql.models.ServerState&text=ServerState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withUserVisibleState(ServerState userVisibleState)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withVersion(com.azure.resourcemanager.postgresql.models.ServerVersion)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerProperties.withVersion(ServerVersion version)"
  name: "withVersion(ServerVersion version)"
  nameWithType: "ServerProperties.withVersion(ServerVersion version)"
  summary: "Set the version property: Server version."
  parameters:
  - description: "the version value to set."
    name: "version"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.ServerVersion?alt=com.azure.resourcemanager.postgresql.models.ServerVersion&text=ServerVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerProperties withVersion(ServerVersion version)"
  returns:
    description: "the ServerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerProperties?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerProperties&text=ServerProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.postgresql.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-postgresql:1.0.2
