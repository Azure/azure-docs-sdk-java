### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults
  id: WithEditionDefaults
  parent: com.microsoft.azure.management.sql
  children:
  - com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition()
  - com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition(SqlDatabaseBasicStorage)
  - com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition(SqlDatabasePremiumServiceObjective)
  - com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition(SqlDatabasePremiumServiceObjective,SqlDatabasePremiumStorage)
  - com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition(SqlDatabaseStandardServiceObjective)
  - com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition(SqlDatabaseStandardServiceObjective,SqlDatabaseStandardStorage)
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.yml
  langs:
  - java
  name: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabaseOperations.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabaseOperations.java
    startLine: 461
  package: com.microsoft.azure.management.sql
  summary: "<p>The SQL Database definition to set the edition for database with defaults. </p>"
  syntax:
    content: public interface WithEditionDefaults extends SqlDatabaseOperations.DefinitionStages.WithCreateFinal
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  - com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition()
  id: withBasicEdition()
  parent: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.yml
  langs:
  - java
  name: withBasicEdition()
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition()
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition()
  overload: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabaseOperations.java
    startLine: 469
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets a \"Basic\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabaseOperations.DefinitionStages.WithEditionDefaults withBasicEdition()
    return:
      type: 5bbdaf90
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition(SqlDatabaseBasicStorage)
  id: withBasicEdition(SqlDatabaseBasicStorage)
  parent: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.yml
  langs:
  - java
  name: withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  overload: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabaseOperations.java
    startLine: 478
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets a \"Basic\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabaseOperations.DefinitionStages.WithEditionDefaults withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
    parameters:
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql.SqlDatabaseBasicStorage
      description: <p>the max storage capacity </p>
    return:
      type: 5bbdaf90
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition(SqlDatabasePremiumServiceObjective)
  id: withPremiumEdition(SqlDatabasePremiumServiceObjective)
  parent: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.yml
  langs:
  - java
  name: withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  overload: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabaseOperations.java
    startLine: 506
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets a \"Premium\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabaseOperations.DefinitionStages.WithEditionDefaults withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql.SqlDatabasePremiumServiceObjective
      description: <p>edition to be set for database </p>
    return:
      type: 5bbdaf90
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition(SqlDatabasePremiumServiceObjective,SqlDatabasePremiumStorage)
  id: withPremiumEdition(SqlDatabasePremiumServiceObjective,SqlDatabasePremiumStorage)
  parent: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.yml
  langs:
  - java
  name: withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  overload: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabaseOperations.java
    startLine: 516
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets a \"Premium\" edition and maximum storage capacity for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabaseOperations.DefinitionStages.WithEditionDefaults withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql.SqlDatabasePremiumServiceObjective
      description: <p>edition to be set for database </p>
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql.SqlDatabasePremiumStorage
      description: <p>edition to be set for database </p>
    return:
      type: 5bbdaf90
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition(SqlDatabaseStandardServiceObjective)
  id: withStandardEdition(SqlDatabaseStandardServiceObjective)
  parent: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.yml
  langs:
  - java
  name: withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  overload: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabaseOperations.java
    startLine: 487
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets a \"Standard\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabaseOperations.DefinitionStages.WithEditionDefaults withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql.SqlDatabaseStandardServiceObjective
      description: <p>edition to be set for database </p>
    return:
      type: 5bbdaf90
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition(SqlDatabaseStandardServiceObjective,SqlDatabaseStandardStorage)
  id: withStandardEdition(SqlDatabaseStandardServiceObjective,SqlDatabaseStandardStorage)
  parent: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.yml
  langs:
  - java
  name: withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  overload: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabaseOperations.java
    startLine: 497
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets a \"Standard\" edition and maximum storage capacity for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabaseOperations.DefinitionStages.WithEditionDefaults withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql.SqlDatabaseStandardServiceObjective
      description: <p>edition to be set for database </p>
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql.SqlDatabaseStandardStorage
      description: <p>edition to be set for database </p>
    return:
      type: 5bbdaf90
      description: <p>The next stage of the definition </p>
references:
- uid: 5bbdaf90
  spec.java:
  - name: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults
    fullName: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition*
  name: withBasicEdition
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withBasicEdition
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition*
  name: withStandardEdition
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withStandardEdition
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition*
  name: withPremiumEdition
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithEditionDefaults.withPremiumEdition
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: create()
  nameWithType: Creatable<T>.create()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  type: Method
  summary: "<p>Execute the create request.</p>\r\n<p></p>"
  syntax:
    content: public T create()
    return:
      type: 8ce1ecb9
      description: <p>the create resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback to handle success and failure </p>
    return:
      type: c0371a4e
      description: <p>a handle to cancel the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Indexable> createAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model.Indexablea08ddfce
      description: <p>an observable of the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Indexable
  href: com.microsoft.azure.management.resources.fluentcore.model.Indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.yml
  name: name()
  nameWithType: HasName.name()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  type: Method
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>the name of the resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTag(String key, String value)
  nameWithType: Resource.DefinitionWithTags<T>.withTag(String key, String value)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTag(String key, String value)
  type: Method
  summary: "<p>Adds a tag to the resource. </p>"
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: "<p>Specifies tags for the resource as a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>. </p>"
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Map"></xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateFinal
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateFinal.yml
  name: SqlDatabaseOperations.DefinitionStages.WithCreateFinal
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithCreateFinal
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateFinal
  type: Interface
  summary: "<p>A SQL Database definition with sufficient inputs to create a new SQL Server in the cloud, but exposing additional optional inputs to specify. </p>"
  syntax:
    content: public interface WithCreateFinal extends Resource.DefinitionWithTags<SqlDatabaseOperations.DefinitionStages.WithCreateFinal>,Creatable<SqlDatabase>
- uid: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateAllOptions
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateAllOptions.yml
  name: SqlDatabaseOperations.DefinitionStages.WithCreateAllOptions
  nameWithType: SqlDatabaseOperations.DefinitionStages.WithCreateAllOptions
  fullName: com.microsoft.azure.management.sql.SqlDatabaseOperations.DefinitionStages.WithCreateAllOptions
  type: Interface
  summary: "<p>A SQL Database definition with sufficient inputs to create a new SQL database in the cloud, but exposing additional optional settings to specify. </p>"
  syntax:
    content: public interface WithCreateAllOptions extends SqlDatabaseOperations.DefinitionStages.WithServiceObjective,SqlDatabaseOperations.DefinitionStages.WithEdition,SqlDatabaseOperations.DefinitionStages.WithEditionDefaults,SqlDatabaseOperations.DefinitionStages.WithCollation,SqlDatabaseOperations.DefinitionStages.WithMaxSizeBytes,SqlDatabaseOperations.DefinitionStages.WithCreateFinal
- uid: com.microsoft.azure.management.sql.SqlDatabaseBasicStorage
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseBasicStorage.yml
  name: SqlDatabaseBasicStorage
  nameWithType: SqlDatabaseBasicStorage
  fullName: com.microsoft.azure.management.sql.SqlDatabaseBasicStorage
  type: Enum
  summary: "<p>The maximum allowed storage capacity for a \"Basic\" edition of an Azure SQL Elastic Pool. </p>"
  syntax:
    content: public enum SqlDatabaseBasicStorage
- uid: com.microsoft.azure.management.sql.SqlDatabaseStandardServiceObjective
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseStandardServiceObjective.yml
  name: SqlDatabaseStandardServiceObjective
  nameWithType: SqlDatabaseStandardServiceObjective
  fullName: com.microsoft.azure.management.sql.SqlDatabaseStandardServiceObjective
  type: Class
  summary: "<p>The name of the configured Service Level Objective of a \"Standard\" Azure SQL Database. </p>"
  syntax:
    content: public class SqlDatabaseStandardServiceObjective
- uid: com.microsoft.azure.management.sql.SqlDatabaseStandardStorage
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabaseStandardStorage.yml
  name: SqlDatabaseStandardStorage
  nameWithType: SqlDatabaseStandardStorage
  fullName: com.microsoft.azure.management.sql.SqlDatabaseStandardStorage
  type: Enum
  summary: "<p>The maximum allowed storage capacity for a \"Standard\" edition of an Azure SQL Elastic Pool. </p>"
  syntax:
    content: public enum SqlDatabaseStandardStorage
- uid: com.microsoft.azure.management.sql.SqlDatabasePremiumServiceObjective
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabasePremiumServiceObjective.yml
  name: SqlDatabasePremiumServiceObjective
  nameWithType: SqlDatabasePremiumServiceObjective
  fullName: com.microsoft.azure.management.sql.SqlDatabasePremiumServiceObjective
  type: Class
  summary: "<p>The name of the configured Service Level Objective of a \"Premium\" Azure SQL Database. </p>"
  syntax:
    content: public class SqlDatabasePremiumServiceObjective
- uid: com.microsoft.azure.management.sql.SqlDatabasePremiumStorage
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabasePremiumStorage.yml
  name: SqlDatabasePremiumStorage
  nameWithType: SqlDatabasePremiumStorage
  fullName: com.microsoft.azure.management.sql.SqlDatabasePremiumStorage
  type: Enum
  summary: "<p>The maximum allowed storage capacity for a \"Premium\" edition of an Azure SQL Elastic Pool. </p>"
  syntax:
    content: public enum SqlDatabasePremiumStorage
