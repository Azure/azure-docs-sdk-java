### YamlMime:JavaType
uid: "com.azure.resourcemanager.storage.implementation.BlobContainersImpl"
fullName: "com.azure.resourcemanager.storage.implementation.BlobContainersImpl"
name: "BlobContainersImpl"
nameWithType: "BlobContainersImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.implementation.WrapperImpl\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.resources.fluentcore.model.implementation.WrapperImpl.innerModel()"
- "com.azure.resourcemanager.resources.fluentcore.model.implementation.WrapperImpl.setInner(InnerT)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class BlobContainersImpl extends WrapperImpl<BlobContainersClient> implements BlobContainers"
constructors:
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.BlobContainersImpl(com.azure.resourcemanager.storage.StorageManager)"
methods:
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.clearLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.defineContainer(java.lang.String)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.defineImmutabilityPolicy(java.lang.String)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.deleteImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.deleteImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Boolean)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Boolean,java.lang.String)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.listAsync(java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.lockImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.lockImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.manager()"
- "com.azure.resourcemanager.storage.implementation.BlobContainersImpl.setLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.storage.models.BlobContainers?alt=com.azure.resourcemanager.storage.models.BlobContainers&text=BlobContainers\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.storage.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
