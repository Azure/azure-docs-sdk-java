### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImagesFromDataDefinitionStages.WithAllOptions.withTagIds(List<UUID> tagIds)
  name: withTagIds(List<UUID> tagIds)
  nameWithType: Trainings.TrainingsCreateImagesFromDataDefinitionStages.WithAllOptions.withTagIds(List<UUID> tagIds)
  parameters:
  - name: tagIds
    type: <xref href="List%3CUUID%3E?alt=List%3CUUID%3E&text=List%3CUUID%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="TrainingsCreateImagesFromDataDefinitionStages.WithExecute?alt=TrainingsCreateImagesFromDataDefinitionStages.WithExecute&text=TrainingsCreateImagesFromDataDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The tags ids with which to tag each image. Limited to 20.</p>

    <p></p>
  syntax: public TrainingsCreateImagesFromDataDefinitionStages.WithExecute withTagIds(List<UUID> tagIds)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImagesFromDataDefinitionStages.WithAllOptions.withTagIds(List<UUID>)
nameWithType: Trainings.TrainingsCreateImagesFromDataDefinitionStages.WithAllOptions
syntax: public interface WithAllOptions
type: interface
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImagesFromDataDefinitionStages.WithAllOptions
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImagesFromDataDefinitionStages.WithAllOptions
name: Trainings.TrainingsCreateImagesFromDataDefinitionStages.WithAllOptions
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
summary: <p>The stage of the definition which allows for any other optional settings to be specified. </p>
metadata: {}
