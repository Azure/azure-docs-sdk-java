### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cosmosdb.ISessionContainer.clearTokenByCollectionFullName(String collectionFullName)
  name: clearTokenByCollectionFullName(String collectionFullName)
  nameWithType: ISessionContainer.clearTokenByCollectionFullName(String collectionFullName)
  parameters:
  - description: <p>collectionFullName </p>
    name: collectionFullName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: '<p>Atomically: removes partitionKeyRangeId token map associated with collectionFullName, maps collectionFullName to resourceId and removes its map as well. </p>'
  syntax: public void clearTokenByCollectionFullName(String collectionFullName)
  uid: com.microsoft.azure.cosmosdb.ISessionContainer.clearTokenByCollectionFullName(String)
- fullName: com.microsoft.azure.cosmosdb.ISessionContainer.clearTokenByResourceId(String resourceId)
  name: clearTokenByResourceId(String resourceId)
  nameWithType: ISessionContainer.clearTokenByResourceId(String resourceId)
  parameters:
  - description: <p>resourceId </p>
    name: resourceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: '<p>Atomically: removes partitionKeyRangeId token map associated with resourceId, maps resourceId to collectionFullName and removes its map as well </p>'
  syntax: public void clearTokenByResourceId(String resourceId)
  uid: com.microsoft.azure.cosmosdb.ISessionContainer.clearTokenByResourceId(String)
- fullName: com.microsoft.azure.cosmosdb.ISessionContainer.resolveGlobalSessionToken(RxDocumentServiceRequest entity)
  name: resolveGlobalSessionToken(RxDocumentServiceRequest entity)
  nameWithType: ISessionContainer.resolveGlobalSessionToken(RxDocumentServiceRequest entity)
  parameters:
  - description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="entity"></xref>

      </p>
    name: entity
    type: <xref href="RxDocumentServiceRequest?alt=RxDocumentServiceRequest&text=RxDocumentServiceRequest" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>serialzed map of partitionKeyRangeId to session token or empty string is collection is unknown </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Returns a serialized map of partitionKeyRangeId to session token. If a entity is name based then the method extracts name from ResourceAddress and use it to identify collection otherwise it uses ResourceId. Returns empty string if collection is unknown </p>
  syntax: public String resolveGlobalSessionToken(RxDocumentServiceRequest entity)
  uid: com.microsoft.azure.cosmosdb.ISessionContainer.resolveGlobalSessionToken(RxDocumentServiceRequest)
- fullName: com.microsoft.azure.cosmosdb.ISessionContainer.resolvePartitionLocalSessionToken(RxDocumentServiceRequest entity, String partitionKeyRangeId)
  name: resolvePartitionLocalSessionToken(RxDocumentServiceRequest entity, String partitionKeyRangeId)
  nameWithType: ISessionContainer.resolvePartitionLocalSessionToken(RxDocumentServiceRequest entity, String partitionKeyRangeId)
  parameters:
  - description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RxDocumentServiceRequest"></xref>

      </p>
    name: entity
    type: <xref href="RxDocumentServiceRequest?alt=RxDocumentServiceRequest&text=RxDocumentServiceRequest" data-throw-if-not-resolved="False"/>
  - description: <p>partitionKeyRangeId </p>
    name: partitionKeyRangeId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Returns a session token identified by partitionKeyRangeId(*) from a collection identified either by ResourceAddress (in case of name based entity) or either by ResourceId. </p>
    type: <xref href="ISessionToken?alt=ISessionToken&text=ISessionToken" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a session token identified by partitionKeyRangeId(*) from a collection identified either by ResourceAddress (in case of name based entity) or either by ResourceId.</p>

    <p>If partitionKeyRangeId is not in the collection's partitionKeyRangeId token map then method iterates through request.RequestContext.ResolvedPartitionKeyRange.Parents starting from tail and returns a corresponding token if there is a match. </p>
  syntax: public ISessionToken resolvePartitionLocalSessionToken(RxDocumentServiceRequest entity, String partitionKeyRangeId)
  uid: com.microsoft.azure.cosmosdb.ISessionContainer.resolvePartitionLocalSessionToken(RxDocumentServiceRequest,String)
- fullName: com.microsoft.azure.cosmosdb.ISessionContainer.setSessionToken(RxDocumentServiceRequest request, Map<String, String> responseHeaders)
  name: setSessionToken(RxDocumentServiceRequest request, Map<String, String> responseHeaders)
  nameWithType: ISessionContainer.setSessionToken(RxDocumentServiceRequest request, Map<String, String> responseHeaders)
  parameters:
  - description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RxDocumentServiceRequest"></xref>

      </p>
    name: request
    type: <xref href="RxDocumentServiceRequest?alt=RxDocumentServiceRequest&text=RxDocumentServiceRequest" data-throw-if-not-resolved="False"/>
  - description: <p>responseHeaders </p>
    name: responseHeaders
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Infers collectionFullName using responseHeaders[HttpConstants.HttpHeaders.OwnerFullName] or request.ResourceAddress, infers resourceId using responseHeaders[HttpConstants.HttpHeaders.OwnerId] or request.ResourceId, and adds responseHeaders[HttpConstants.HttpHeaders.SessionToken] session token to the (collectionFullName, resourceId)'s partitionKeyRangeId token map.</p>

    <p>NB: Silently does nothing for master queries, or when it's impossible to infer collectionRid and collectionFullName from the request, or then SessionToken is missing in responseHeader.</p>

    <p></p>
  syntax: public void setSessionToken(RxDocumentServiceRequest request, Map<String, String> responseHeaders)
  uid: com.microsoft.azure.cosmosdb.ISessionContainer.setSessionToken(RxDocumentServiceRequest,Map<String, String>)
- fullName: com.microsoft.azure.cosmosdb.ISessionContainer.setSessionToken(String collectionRid, String collectionFullName, Map<String, String> responseHeaders)
  name: setSessionToken(String collectionRid, String collectionFullName, Map<String, String> responseHeaders)
  nameWithType: ISessionContainer.setSessionToken(String collectionRid, String collectionFullName, Map<String, String> responseHeaders)
  parameters:
  - description: <p>collectionRid </p>
    name: collectionRid
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>collectionFullName </p>
    name: collectionFullName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>responseHeaders </p>
    name: responseHeaders
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Adds responseHeaders[HttpConstants.HttpHeaders.SessionToken] session token to the (collectionFullName, collectionRid)'s partitionKeyRangeId token map. </p>
  syntax: public void setSessionToken(String collectionRid, String collectionFullName, Map<String, String> responseHeaders)
  uid: com.microsoft.azure.cosmosdb.ISessionContainer.setSessionToken(String,String,Map<String, String>)
nameWithType: ISessionContainer
syntax: public interface ISessionContainer
type: interface
uid: com.microsoft.azure.cosmosdb.ISessionContainer
fullName: com.microsoft.azure.cosmosdb.ISessionContainer
name: ISessionContainer
package: com.microsoft.azure.cosmosdb
metadata: {}
