### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.service.registry.Module.Module(String deviceId, String moduleId)
  name: Module(String deviceId, String moduleId)
  nameWithType: Module.Module(String deviceId, String moduleId)
  parameters:
  - description: <p>String containing the device name. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a device using the given id. The device will use Symmetric Key for authentication.</p>

    <p></p>
  syntax: public Module(String deviceId, String moduleId)
  uid: com.microsoft.azure.sdk.iot.service.registry.Module.Module(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.registry.Module.Module(String deviceId, String moduleId, AuthenticationType authenticationType)
  name: Module(String deviceId, String moduleId, AuthenticationType authenticationType)
  nameWithType: Module.Module(String deviceId, String moduleId, AuthenticationType authenticationType)
  parameters:
  - name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: authenticationType
    type: <xref href="com.microsoft.azure.sdk.iot.service.auth.AuthenticationType?alt=com.microsoft.azure.sdk.iot.service.auth.AuthenticationType&text=AuthenticationType" data-throw-if-not-resolved="False"/>
  syntax: public Module(String deviceId, String moduleId, AuthenticationType authenticationType)
  uid: com.microsoft.azure.sdk.iot.service.registry.Module.Module(String,String,AuthenticationType)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity?alt=com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity&text=RegistryIdentity" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getAuthenticationType()
- com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getPrimaryKey()
- com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getPrimaryThumbprint()
- com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getSecondaryKey()
- com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getSecondaryThumbprint()
- com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.getSymmetricKey()
- com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.setSymmetricKey(SymmetricKey)
- com.microsoft.azure.sdk.iot.service.registry.RegistryIdentity.setThumbprint(String,String)
nameWithType: Module
syntax: public class Module extends RegistryIdentity
type: class
uid: com.microsoft.azure.sdk.iot.service.registry.Module
fullName: com.microsoft.azure.sdk.iot.service.registry.Module
name: Module
package: com.microsoft.azure.sdk.iot.service.registry
metadata: {}
