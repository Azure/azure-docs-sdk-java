### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  id: ReliableCollectionsActorStateProvider
  parent: microsoft.servicefabric.actors.runtime
  children:
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.abort()
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.actorActivatedAsync(ActorId,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.backupAsync(BackupOption,Duration,CancellationToken,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.changeRoleAsync(ReplicaRole,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.closeAsync(CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.containsStateAsync(ActorId,String,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteReminderAsync(ActorId,String,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>>,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.enumerateStateNamesAsync(ActorId,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.getActorsAsync(int,ContinuationToken,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.initialize(ActorTypeInformation)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.initialize(StatefulServiceInitializationParameters)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadRemindersAsync(CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadStateAsync(ActorId,String,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider()
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration,int,int)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.reminderCallbackCompletedAsync(ActorId,ActorReminder,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.removeActorAsync(ActorId,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.restoreAsync(String)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.restoreAsync(String,RestorePolicy,Duration,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveReminderAsync(ActorId,ActorReminder,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveStateAsync(ActorId,List<ActorStateChange>,CancellationToken)
  - microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: ReliableCollectionsActorStateProvider
  nameWithType: ReliableCollectionsActorStateProvider
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 69
  package: microsoft.servicefabric.actors.runtime
  syntax:
    content: public class ReliableCollectionsActorStateProvider implements ActorStateProvider
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.data.StateProviderReplica
  - microsoft.servicefabric.actors.runtime.ActorStateProvider
  inheritedMembers:
  - microsoft.servicefabric.actors.runtime.ActorStateProviderInternal.currentReplicaRole()
  - microsoft.servicefabric.actors.runtime.ActorStateProviderInternal.traceId()
  - microsoft.servicefabric.actors.runtime.ActorStateProviderInternal.traceType()
  - microsoft.servicefabric.actors.runtime.ActorStateProviderInternal.transientErrorRetryDelay()
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.abort()
  id: abort()
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: abort()
  nameWithType: ReliableCollectionsActorStateProvider.abort()
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.abort()
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.abort*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 315
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Forcefully abort the state provider replica. </p>\r\n<p>\r\n  <b>Remarks:</b>This generally occurs when a permanent fault is detected on the node, or when Service Fabric cannot reliably manage the replica's lifecycle due to internal failures. </p>"
  syntax:
    content: public void abort()
  overridden: microsoft.servicefabric.data.StateProviderReplica.abort()
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.actorActivatedAsync(ActorId,CancellationToken)
  id: actorActivatedAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.actorActivatedAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 733
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>This method is invoked as part of the activation process of the actor with the specified Id.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor that is activated. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous Actor activation notification processing. </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.actorActivatedAsync(ActorId,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.backupAsync(BackupOption,Duration,CancellationToken,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  id: backupAsync(BackupOption,Duration,CancellationToken,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: backupAsync(BackupOption option, Duration timeout, CancellationToken cancellationToken, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: ReliableCollectionsActorStateProvider.backupAsync(BackupOption option, Duration timeout, CancellationToken cancellationToken, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.backupAsync(BackupOption option, Duration timeout, CancellationToken cancellationToken, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.backupAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 587
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Performs a full backup of all reliable state managed by this ReliableStateManager.</p>\r\n<p>\r\n  <b>Remarks:</b> A FULL backup will be performed with a one-hour timeout. Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location. If false is returned, BackupAsync throws UnsupportedOperationException with the relevant message indicating backupCallback returned false. Also, backup will be marked as unsuccessful. </p>"
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupOption option, Duration timeout, CancellationToken cancellationToken, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: option
      type: microsoft.servicefabric.data.BackupOption
      description: <p>The type of backup to perform. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timeout for this operation. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: <p>The token to monitor for cancellation requests. </p>
    - id: backupCallback
      type: 8ead6242microsoft.servicefabric.data.BackupInfob33c76fcsystem.fabric.CancellationToken774bd4f0
      description: <p>Callback to be called when the backup folder has been created locally and is ready to be moved out of the node </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
  overridden: microsoft.servicefabric.data.StateProviderReplica.backupAsync(BackupOption,Duration,CancellationToken,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  id: backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: ReliableCollectionsActorStateProvider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.backupAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 560
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Performs a full backup of all reliable state managed by this ReliableStateManager.</p>\r\n<p>\r\n  <b>Remarks:</b> A FULL backup will be performed with a one-hour timeout. Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location. If false is returned, BackupAsync throws UnsupportedOperationException with the relevant message indicating backupCallback returned false. Also, backup will be marked as unsuccessful. </p>"
  syntax:
    content: public CompletableFuture<?> backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: backupCallback
      type: 8ead6242microsoft.servicefabric.data.BackupInfob33c76fcsystem.fabric.CancellationToken774bd4f0
      description: <p>Callback to be called when the backup folder has been created locally and is ready to be moved out of the node </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
  overridden: microsoft.servicefabric.data.StateProviderReplica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.changeRoleAsync(ReplicaRole,CancellationToken)
  id: changeRoleAsync(ReplicaRole,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.changeRoleAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 270
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Notify the state provider replica that its role is changing, for example to Primary or Secondary.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    parameters:
    - id: newRole
      type: system.fabric.ReplicaRole
      description: <p>The new replica role, such as primary or secondary. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous change role operation. </p>
  overridden: microsoft.servicefabric.data.StateProviderReplica.changeRoleAsync(ReplicaRole,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.closeAsync(CancellationToken)
  id: closeAsync(CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: closeAsync(CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.closeAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.closeAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.closeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 302
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gracefully close the state provider replica.</p>\r\n<p>\r\n  <b>Remarks:</b>This generally occurs when the replica's code is being upgrade, the replica is being moved due to load balancing, or a transient fault is detected. </p>"
  syntax:
    content: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous close operation. </p>
  overridden: microsoft.servicefabric.data.StateProviderReplica.closeAsync(CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.containsStateAsync(ActorId,String,CancellationToken)
  id: containsStateAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.containsStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 867
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Checks whether actor state provider contains an actor state with specified state name.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to check state existence. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to check for existence. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous check operation. The value of TResult parameter is true if state with specified name exists otherwise false. </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.containsStateAsync(ActorId,String,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteReminderAsync(ActorId,String,CancellationToken)
  id: deleteReminderAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteReminderAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 1173
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Deletes the specified actor reminder if it exists.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to delete the reminder. </p>
    - id: reminderName
      type: "26831127"
      description: <p>Name of the reminder to delete. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.deleteReminderAsync(ActorId,String,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>>,CancellationToken)
  id: deleteRemindersAsync(Map<ActorId, Collection<String>>,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteRemindersAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 1201
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Deletes the specified set of reminders</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
    parameters:
    - id: reminderNames
      type: 6110eba5microsoft.servicefabric.actors.ActorId89fe8e3d
      description: <p>The set of reminders to delete </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>>,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.enumerateStateNamesAsync(ActorId,CancellationToken)
  id: enumerateStateNamesAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.enumerateStateNamesAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 965
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Creates an enumerable of all the state names associated with specified actor.</p>\r\n<p>\r\n  <b>Remarks:</b>The enumerator returned from actor state provider is safe to use concurrently with reads and writes to the state provider. It represents a snapshot consistent view of the state provider. </p>"
  syntax:
    content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to create enumerable. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: d20512af
      description: <p>A task that represents the asynchronous enumeration operation. The value of TResult parameter is an enumerable of all state names associated with specified actor. </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.enumerateStateNamesAsync(ActorId,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.getActorsAsync(int,ContinuationToken,CancellationToken)
  id: getActorsAsync(int,ContinuationToken,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.getActorsAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 1062
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets ActorIds from the State Provider.</p>\r\n<p>\r\n  <b>Remarks:</b> The </p>"
  syntax:
    content: public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
    parameters:
    - id: numItemsToReturn
      type: f75371fa
      description: <p>Number of items requested to be returned. </p>
    - id: continuationToken
      type: microsoft.servicefabric.actors.ContinuationToken
      description: <p>A continuation token to start querying the results from. A null value of continuation token means start returning values form the beginning. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors.PagedResult78504a52microsoft.servicefabric.actors.ActorIde7daa122
      description: <p>A task that represents the asynchronous operation of call to server. </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.getActorsAsync(int,ContinuationToken,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.initialize(ActorTypeInformation)
  id: initialize(ActorTypeInformation)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: initialize(ActorTypeInformation actorTypeInformation)
  nameWithType: ReliableCollectionsActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.initialize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 689
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Initializes the actor state provider with type information of the actor type associated with it.</p>\r\n<p></p>"
  syntax:
    content: public void initialize(ActorTypeInformation actorTypeInformation)
    parameters:
    - id: actorTypeInformation
      type: microsoft.servicefabric.actors.runtime.ActorTypeInformation
      description: <p>Type information of the actor class </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.initialize(ActorTypeInformation)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.initialize(StatefulServiceInitializationParameters)
  id: initialize(StatefulServiceInitializationParameters)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: initialize(StatefulServiceInitializationParameters initializationParameters)
  nameWithType: ReliableCollectionsActorStateProvider.initialize(StatefulServiceInitializationParameters initializationParameters)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.initialize(StatefulServiceInitializationParameters initializationParameters)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.initialize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 194
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Initialize the state provider replica using the service initialization information.</p>\r\n<p>\r\n  <b>Remarks:</b>No complex processing should be done during Initialize. Expensive or long-running initialization should be done in OpenAsync. </p>"
  syntax:
    content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
    parameters:
    - id: initializationParameters
      type: system.fabric.StatefulServiceInitializationParameters
      description: <p>Service initialization information such as service name, partition id, replica id, and code package information. </p>
  overridden: microsoft.servicefabric.data.StateProviderReplica.initialize(StatefulServiceInitializationParameters)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadRemindersAsync(CancellationToken)
  id: loadRemindersAsync(CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: loadRemindersAsync(CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadRemindersAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 1248
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Loads all the reminders contained in the actor state provider.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors.runtime.ActorReminderCollectiona08ddfce
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter is a collection of all actor reminders contained in the actor state provider. </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.loadRemindersAsync(CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadStateAsync(ActorId,String,CancellationToken)
  id: loadStateAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 764
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Loads the actor state associated with the specified state name.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to load the state. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to load. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter contains value of actor state associated with given state name. </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.loadStateAsync(ActorId,String,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)
  id: openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.openAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 252
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Open the state provider replica for use.</p>\r\n<p>\r\n  <b>Remarks:</b>Extended state provider initialization tasks can be started at this time. </p>"
  syntax:
    content: public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
    parameters:
    - id: openMode
      type: system.fabric.ReplicaOpenMode
      description: <p>Indicates whether this is a new or existing replica. </p>
    - id: partition
      type: system.fabric.StatefulServicePartition
      description: <p>The partition this replica belongs to. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0system.fabric.Replicatora08ddfce
      description: <p>Task that represents the asynchronous open operation. The result contains the replicator responsible for replicating state between other state provider replicas in the partition. </p>
  overridden: microsoft.servicefabric.data.StateProviderReplica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider()
  id: ReliableCollectionsActorStateProvider()
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: ReliableCollectionsActorStateProvider()
  nameWithType: ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider()
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider()
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 114
  package: microsoft.servicefabric.actors.runtime
  syntax:
    content: public ReliableCollectionsActorStateProvider()
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration)
  id: ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration stateManagerConfig)
  nameWithType: ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration stateManagerConfig)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration stateManagerConfig)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 124
  package: microsoft.servicefabric.actors.runtime
  syntax:
    content: public ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration stateManagerConfig)
    parameters:
    - id: stateManagerConfig
      type: microsoft.servicefabric.data.ReliableStateManagerConfiguration
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration,int,int)
  id: ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration,int,int)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration stateManagerConfig, int actorStateMapCount, int reminderMapCount)
  nameWithType: ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration stateManagerConfig, int actorStateMapCount, int reminderMapCount)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration stateManagerConfig, int actorStateMapCount, int reminderMapCount)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 143
  package: microsoft.servicefabric.actors.runtime
  syntax:
    content: public ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration stateManagerConfig, int actorStateMapCount, int reminderMapCount)
    parameters:
    - id: stateManagerConfig
      type: microsoft.servicefabric.data.ReliableStateManagerConfiguration
    - id: actorStateMapCount
      type: f75371fa
    - id: reminderMapCount
      type: f75371fa
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.reminderCallbackCompletedAsync(ActorId,ActorReminder,CancellationToken)
  id: reminderCallbackCompletedAsync(ActorId,ActorReminder,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.reminderCallbackCompletedAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 1219
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Invoked when a reminder fires and finishes executing its callback <xref uid=\"microsoft.servicefabric.actors.runtime.Remindable.receiveReminderAsync(String,byte [],Duration,Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Remindable#receiveReminderAsync\"></xref> successfully </p>"
  syntax:
    content: public CompletableFuture<?> reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor which own reminder </p>
    - id: reminder
      type: microsoft.servicefabric.actors.runtime.ActorReminder
      description: <p>Actor reminder that completed successfully. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: <p>The token to monitor for cancellation requests. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous reminder callback completed notification processing. </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.reminderCallbackCompletedAsync(ActorId,ActorReminder,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.removeActorAsync(ActorId,CancellationToken)
  id: removeActorAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.removeActorAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 900
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Removes all the existing states and reminders associated with specified actor atomically.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to remove state. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous remove operation. </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.removeActorAsync(ActorId,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.restoreAsync(String)
  id: restoreAsync(String)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: restoreAsync(String backupFolderPath)
  nameWithType: ReliableCollectionsActorStateProvider.restoreAsync(String backupFolderPath)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.restoreAsync(String backupFolderPath)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.restoreAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 605
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Restore a backup taken.</p>\r\n<p>\r\n  <b>Remarks:</b>A safe restore will be performed, meaning the restore will only be completed if the data to restore is ahead of state of the current replica. </p>"
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
  overridden: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.restoreAsync(String,RestorePolicy,Duration,CancellationToken)
  id: restoreAsync(String,RestorePolicy,Duration,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.restoreAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 624
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Restore a backup taken</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    - id: restorePolicy
      type: microsoft.servicefabric.data.RestorePolicy
      description: <p>The restore policy. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timeout for this operation. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: <p>The token to monitor for cancellation requests. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
  overridden: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String,RestorePolicy,Duration,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveReminderAsync(ActorId,ActorReminder,CancellationToken)
  id: saveReminderAsync(ActorId,ActorReminder,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveReminderAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 1143
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Saves the specified actor reminder. If an actor reminder with given name does not exist, it adds the actor reminder otherwise existing actor reminder with same name is updated.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to save the reminder. </p>
    - id: reminder
      type: microsoft.servicefabric.actors.runtime.ActorReminder
      description: <p>Actor reminder to save. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.saveReminderAsync(ActorId,ActorReminder,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveStateAsync(ActorId,List<ActorStateChange>,CancellationToken)
  id: saveStateAsync(ActorId,List<ActorStateChange>,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 804
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Saves the specified set of actor state changes atomically.</p>\r\n<p>\r\n  <b>Remarks:</b> The collection of state changes should contain only one item for a given state name. The save operation will fail on trying to add an actor state which already exists or update/remove an actor state which does not exist. </p>"
  syntax:
    content: public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to save the state changes. </p>
    - id: stateChanges
      type: 5618da2dmicrosoft.servicefabric.actors.runtime.ActorStateChangea08ddfce
      description: <p>Collection of state changes to save. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.saveStateAsync(ActorId,List<ActorStateChange>,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)
  id: setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.yml
  langs:
  - java
  name: setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  nameWithType: ReliableCollectionsActorStateProvider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  overload: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.setOnDataLossCallback*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ReliableCollectionsActorStateProvider.java
    startLine: 177
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Function called during suspected data-loss</p>\r\n<p></p>"
  syntax:
    content: public void setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
    parameters:
    - id: onDataLossAsync
      type: 432ffe41system.fabric.CancellationToken774bd4f0
      description: <p>Function called as part of suspected data loss processing. Function takes in CancellationToken and returns a CompletableFuture that represents the asynchronous processing of the event. Returning true, indicates that the replica's state has been restored. False indicates that the replica's state has not been changed. </p>
  overridden: microsoft.servicefabric.data.StateProviderReplica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)
references:
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider*
  name: ReliableCollectionsActorStateProvider
  nameWithType: ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider
  package: microsoft.servicefabric.actors.runtime
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 432ffe41system.fabric.CancellationToken774bd4f0
  spec.java:
  - name: Function<
    fullName: Function<
  - uid: system.fabric.CancellationToken
    name: CancellationToken
    fullName: system.fabric.CancellationToken
    href: system.fabric.CancellationToken.yml
  - name: ', CompletableFuture<Boolean>>'
    fullName: ', CompletableFuture<Boolean>>'
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.setOnDataLossCallback*
  name: setOnDataLossCallback
  nameWithType: ReliableCollectionsActorStateProvider.setOnDataLossCallback
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.setOnDataLossCallback
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.initialize*
  name: initialize
  nameWithType: ReliableCollectionsActorStateProvider.initialize
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.initialize
  package: microsoft.servicefabric.actors.runtime
- uid: 9cdf14d0system.fabric.Replicatora08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: system.fabric.Replicator
    name: Replicator
    fullName: system.fabric.Replicator
    href: system.fabric.Replicator.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.openAsync*
  name: openAsync
  nameWithType: ReliableCollectionsActorStateProvider.openAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.openAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.changeRoleAsync*
  name: changeRoleAsync
  nameWithType: ReliableCollectionsActorStateProvider.changeRoleAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.changeRoleAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.closeAsync*
  name: closeAsync
  nameWithType: ReliableCollectionsActorStateProvider.closeAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.closeAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.abort*
  name: abort
  nameWithType: ReliableCollectionsActorStateProvider.abort
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.abort
  package: microsoft.servicefabric.actors.runtime
- uid: 8ead6242microsoft.servicefabric.data.BackupInfob33c76fcsystem.fabric.CancellationToken774bd4f0
  spec.java:
  - name: BiFunction<
    fullName: BiFunction<
  - uid: microsoft.servicefabric.data.BackupInfo
    name: BackupInfo
    fullName: microsoft.servicefabric.data.BackupInfo
    href: microsoft.servicefabric.data.BackupInfo.yml
  - name: ', '
    fullName: ', '
  - uid: system.fabric.CancellationToken
    name: CancellationToken
    fullName: system.fabric.CancellationToken
    href: system.fabric.CancellationToken.yml
  - name: ', CompletableFuture<Boolean>>'
    fullName: ', CompletableFuture<Boolean>>'
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.backupAsync*
  name: backupAsync
  nameWithType: ReliableCollectionsActorStateProvider.backupAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.backupAsync
  package: microsoft.servicefabric.actors.runtime
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.restoreAsync*
  name: restoreAsync
  nameWithType: ReliableCollectionsActorStateProvider.restoreAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.restoreAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.actorActivatedAsync*
  name: actorActivatedAsync
  nameWithType: ReliableCollectionsActorStateProvider.actorActivatedAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.actorActivatedAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 5618da2dmicrosoft.servicefabric.actors.runtime.ActorStateChangea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: microsoft.servicefabric.actors.runtime.ActorStateChange
    name: ActorStateChange
    fullName: microsoft.servicefabric.actors.runtime.ActorStateChange
    href: microsoft.servicefabric.actors.runtime.ActorStateChange.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveStateAsync*
  name: saveStateAsync
  nameWithType: ReliableCollectionsActorStateProvider.saveStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.containsStateAsync*
  name: containsStateAsync
  nameWithType: ReliableCollectionsActorStateProvider.containsStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.containsStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.removeActorAsync*
  name: removeActorAsync
  nameWithType: ReliableCollectionsActorStateProvider.removeActorAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.removeActorAsync
  package: microsoft.servicefabric.actors.runtime
- uid: d20512af
  spec.java:
  - name: CompletableFuture<List<String>>
    fullName: CompletableFuture<List<String>>
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.enumerateStateNamesAsync*
  name: enumerateStateNamesAsync
  nameWithType: ReliableCollectionsActorStateProvider.enumerateStateNamesAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.enumerateStateNamesAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 9cdf14d0microsoft.servicefabric.actors.PagedResult78504a52microsoft.servicefabric.actors.ActorIde7daa122
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: microsoft.servicefabric.actors.PagedResult
    name: PagedResult
    fullName: microsoft.servicefabric.actors.PagedResult
    href: microsoft.servicefabric.actors.PagedResult.yml
  - name: <
    fullName: <
  - uid: microsoft.servicefabric.actors.ActorId
    name: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    href: microsoft.servicefabric.actors.ActorId.yml
  - name: '>>'
    fullName: '>>'
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.getActorsAsync*
  name: getActorsAsync
  nameWithType: ReliableCollectionsActorStateProvider.getActorsAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.getActorsAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveReminderAsync*
  name: saveReminderAsync
  nameWithType: ReliableCollectionsActorStateProvider.saveReminderAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveReminderAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteReminderAsync*
  name: deleteReminderAsync
  nameWithType: ReliableCollectionsActorStateProvider.deleteReminderAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteReminderAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 6110eba5microsoft.servicefabric.actors.ActorId89fe8e3d
  spec.java:
  - name: Map<
    fullName: Map<
  - uid: microsoft.servicefabric.actors.ActorId
    name: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    href: microsoft.servicefabric.actors.ActorId.yml
  - name: ', Collection<String>>'
    fullName: ', Collection<String>>'
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteRemindersAsync*
  name: deleteRemindersAsync
  nameWithType: ReliableCollectionsActorStateProvider.deleteRemindersAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteRemindersAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.reminderCallbackCompletedAsync*
  name: reminderCallbackCompletedAsync
  nameWithType: ReliableCollectionsActorStateProvider.reminderCallbackCompletedAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.reminderCallbackCompletedAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 9cdf14d0microsoft.servicefabric.actors.runtime.ActorReminderCollectiona08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: microsoft.servicefabric.actors.runtime.ActorReminderCollection
    name: ActorReminderCollection
    fullName: microsoft.servicefabric.actors.runtime.ActorReminderCollection
    href: microsoft.servicefabric.actors.runtime.ActorReminderCollection.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadRemindersAsync*
  name: loadRemindersAsync
  nameWithType: ReliableCollectionsActorStateProvider.loadRemindersAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadRemindersAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 6d056e8b
  spec.java:
  - name: <T> CompletableFuture<T>
    fullName: <T> CompletableFuture<T>
- uid: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadStateAsync*
  name: loadStateAsync
  nameWithType: ReliableCollectionsActorStateProvider.loadStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ActorStateProviderInternal.currentReplicaRole()
- uid: microsoft.servicefabric.actors.runtime.ActorStateProviderInternal.traceId()
- uid: microsoft.servicefabric.actors.runtime.ActorStateProviderInternal.traceType()
- uid: microsoft.servicefabric.actors.runtime.ActorStateProviderInternal.transientErrorRetryDelay()
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: ActorStateProvider
  nameWithType: ActorStateProvider
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider
  type: Interface
  summary: "<p>Represents the interface that an actor state provider needs to implement for actor runtime to communicate with it. </p>"
  syntax:
    content: public interface ActorStateProvider extends StateProviderReplica
- uid: microsoft.servicefabric.data.ReliableStateManagerConfiguration
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data.ReliableStateManagerConfiguration.yml
  name: ReliableStateManagerConfiguration
  nameWithType: ReliableStateManagerConfiguration
  fullName: microsoft.servicefabric.data.ReliableStateManagerConfiguration
  type: Class
  summary: "<p>Configuration object used to create ReliableStateManager. </p>"
  syntax:
    content: public class ReliableStateManagerConfiguration
- uid: system.fabric.ReplicaRole
  parent: system.fabric
  href: system.fabric.ReplicaRole.yml
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: system.fabric.ReplicaRole
  type: Enum
  summary: "<p>Indicates the role of a stateful service replica. </p>\r\n<p>\r\n  <b>Remarks:</b>Service Fabric requires different behaviors from a service replica depending on what role it currently performs. </p>"
  syntax:
    content: public enum ReplicaRole
- uid: system.fabric.StatefulServicePartition
  parent: system.fabric
  href: system.fabric.StatefulServicePartition.yml
  name: StatefulServicePartition
  nameWithType: StatefulServicePartition
  fullName: system.fabric.StatefulServicePartition
  type: Interface
  syntax:
    content: public interface StatefulServicePartition
- uid: microsoft.servicefabric.actors.runtime.ActorTypeInformation
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime.ActorTypeInformation.yml
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation
  type: Class
  summary: "<p>Contains information about the type implementing an actor. </p>"
  syntax:
    content: public class ActorTypeInformation
- uid: system.fabric.CancellationToken
  parent: system.fabric
  href: system.fabric.CancellationToken.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: "<p>A CancellationToken is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref uid=\"system.fabric.CancellationTokenSource\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.CancellationTokenSource\"></xref> object, which manages cancellation tokens retrieved from its <xref uid=\"system.fabric.CancellationTokenSource.getToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.CancellationTokenSource#getToken()\"></xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref uid=\"system.fabric.CancellationTokenSource.cancel()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.CancellationTokenSource#cancel()\"></xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>"
  syntax:
    content: public class CancellationToken
- uid: system.fabric.StatefulServiceInitializationParameters
  parent: system.fabric
  href: system.fabric.StatefulServiceInitializationParameters.yml
  name: StatefulServiceInitializationParameters
  nameWithType: StatefulServiceInitializationParameters
  fullName: system.fabric.StatefulServiceInitializationParameters
  type: Class
  summary: "<p>Defines service initialization parameters for a stateful service. </p>"
  syntax:
    content: public class StatefulServiceInitializationParameters
- uid: system.fabric.CancellationTokenSource
  parent: system.fabric
  href: system.fabric.CancellationTokenSource.yml
  name: CancellationTokenSource
  nameWithType: CancellationTokenSource
  fullName: system.fabric.CancellationTokenSource
  type: Class
  summary: "<p>A CancellationTokenSource is used to create <xref uid=\"system.fabric.CancellationToken\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.CancellationToken\"></xref> object and manage it. </p>"
  syntax:
    content: public class CancellationTokenSource
- uid: microsoft.servicefabric.data.collections.ReliableHashMap
  parent: microsoft.servicefabric.data.collections
  href: microsoft.servicefabric.data.collections.ReliableHashMap.yml
  name: ReliableHashMap<K,V>
  nameWithType: ReliableHashMap<K,V>
  fullName: microsoft.servicefabric.data.collections.ReliableHashMap<K,V>
  type: Class
  syntax:
    content: public class ReliableHashMap<K extends String,V>
    typeParameters:
    - id: K
      type: a1c6f3a5
    - id: V
      type: 0a560652
- uid: microsoft.servicefabric.data.StateProviderReplica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.data.StateProviderReplica
  href: microsoft.servicefabric.data.StateProviderReplica.yml
  name: setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  nameWithType: StateProviderReplica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  fullName: microsoft.servicefabric.data.StateProviderReplica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  type: Method
  summary: "<p>Function called during suspected data-loss</p>\r\n<p></p>"
  syntax:
    content: public void setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
    parameters:
    - id: onDataLossAsync
      type: 432ffe41system.fabric.CancellationToken774bd4f0
      description: <p>TODO. Function called as part of suspected data loss processing. Function takes in CancellationToken and returns a CompletableFuture that represents the asynchronous processing of the event. Returning true, indicates that the replica's state has been restored. False indicates that the replica's state has not been changed. </p>
- uid: microsoft.servicefabric.data.StateProviderReplica.initialize(StatefulServiceInitializationParameters)
  parent: microsoft.servicefabric.data.StateProviderReplica
  href: microsoft.servicefabric.data.StateProviderReplica.yml
  name: initialize(StatefulServiceInitializationParameters initializationParameters)
  nameWithType: StateProviderReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
  fullName: microsoft.servicefabric.data.StateProviderReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
  type: Method
  summary: "<p>Initialize the state provider replica using the service initialization information.</p>\r\n<p>\r\n  <b>Remarks:</b>No complex processing should be done during Initialize. Expensive or long-running initialization should be done in OpenAsync. </p>"
  syntax:
    content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
    parameters:
    - id: initializationParameters
      type: system.fabric.StatefulServiceInitializationParameters
      description: <p>Service initialization information such as service name, partition id, replica id, and code package information. </p>
- uid: system.fabric.Replicator
  parent: system.fabric
  href: system.fabric.Replicator.yml
  name: Replicator
  nameWithType: Replicator
  fullName: system.fabric.Replicator
  type: Interface
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>"
  syntax:
    content: public interface Replicator
- uid: microsoft.servicefabric.data.StateProviderReplica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)
  parent: microsoft.servicefabric.data.StateProviderReplica
  href: microsoft.servicefabric.data.StateProviderReplica.yml
  name: openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  nameWithType: StateProviderReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.data.StateProviderReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Open the state provider replica for use.</p>\r\n<p>\r\n  <b>Remarks:</b>Extended state provider initialization tasks can be started at this time. </p>"
  syntax:
    content: public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
    parameters:
    - id: openMode
      type: system.fabric.ReplicaOpenMode
      description: <p>Indicates whether this is a new or existing replica. </p>
    - id: partition
      type: system.fabric.StatefulServicePartition
      description: <p>The partition this replica belongs to. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0system.fabric.Replicatora08ddfce
      description: <p>Task that represents the asynchronous open operation. The result contains the replicator responsible for replicating state between other state provider replicas in the partition. </p>
- uid: system.fabric.ReplicaOpenMode
  parent: system.fabric
  href: system.fabric.ReplicaOpenMode.yml
  name: ReplicaOpenMode
  nameWithType: ReplicaOpenMode
  fullName: system.fabric.ReplicaOpenMode
  type: Enum
  summary: "<p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>"
  syntax:
    content: public enum ReplicaOpenMode
- uid: microsoft.servicefabric.data.StateProviderReplica.changeRoleAsync(ReplicaRole,CancellationToken)
  parent: microsoft.servicefabric.data.StateProviderReplica
  href: microsoft.servicefabric.data.StateProviderReplica.yml
  name: changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: StateProviderReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.data.StateProviderReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Notify the state provider replica that its role is changing, for example to Primary or Secondary.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    parameters:
    - id: newRole
      type: system.fabric.ReplicaRole
      description: <p>The new replica role, such as primary or secondary. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous change role operation. </p>
- uid: microsoft.servicefabric.data.StateProviderReplica.closeAsync(CancellationToken)
  parent: microsoft.servicefabric.data.StateProviderReplica
  href: microsoft.servicefabric.data.StateProviderReplica.yml
  name: closeAsync(CancellationToken cancellationToken)
  nameWithType: StateProviderReplica.closeAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.data.StateProviderReplica.closeAsync(CancellationToken cancellationToken)
  type: Method
  summary: "<p>Gracefully close the state provider replica.</p>\r\n<p>\r\n  <b>Remarks:</b>This generally occurs when the replica's code is being upgrade, the replica is being moved due to load balancing, or a transient fault is detected. </p>"
  syntax:
    content: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous close operation. </p>
- uid: microsoft.servicefabric.data.StateProviderReplica.abort()
  parent: microsoft.servicefabric.data.StateProviderReplica
  href: microsoft.servicefabric.data.StateProviderReplica.yml
  name: abort()
  nameWithType: StateProviderReplica.abort()
  fullName: microsoft.servicefabric.data.StateProviderReplica.abort()
  type: Method
  summary: "<p>Forcefully abort the state provider replica. </p>\r\n<p>\r\n  <b>Remarks:</b>This generally occurs when a permanent fault is detected on the node, or when Service Fabric cannot reliably manage the replica's lifecycle due to internal failures. </p>"
  syntax:
    content: public void abort()
- uid: microsoft.servicefabric.data.StateProviderReplica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.data.StateProviderReplica
  href: microsoft.servicefabric.data.StateProviderReplica.yml
  name: backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: StateProviderReplica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  fullName: microsoft.servicefabric.data.StateProviderReplica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  type: Method
  summary: "<p>Performs a full backup of all reliable state managed by this ReliableStateManager.</p>\r\n<p>\r\n  <b>Remarks:</b> A FULL backup will be performed with a one-hour timeout. Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location. If false is returned, BackupAsync throws UnsupportedOperationException with the relevant message indicating backupCallback returned false. Also, backup will be marked as unsuccessful. </p>"
  syntax:
    content: public CompletableFuture<?> backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: backupCallback
      type: 8ead6242microsoft.servicefabric.data.BackupInfob33c76fcsystem.fabric.CancellationToken774bd4f0
      description: <p>Callback to be called when the backup folder has been created locally and is ready to be moved out of the node </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.data.BackupInfo
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data.BackupInfo.yml
  name: BackupInfo
  nameWithType: BackupInfo
  fullName: microsoft.servicefabric.data.BackupInfo
  type: Class
  summary: "<p>Provides info about the backup. </p>"
  syntax:
    content: public class BackupInfo
- uid: microsoft.servicefabric.data.StateProviderReplica.backupAsync(BackupOption,Duration,CancellationToken,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.data.StateProviderReplica
  href: microsoft.servicefabric.data.StateProviderReplica.yml
  name: backupAsync(BackupOption option, Duration timeout, CancellationToken cancellationToken, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: StateProviderReplica.backupAsync(BackupOption option, Duration timeout, CancellationToken cancellationToken, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  fullName: microsoft.servicefabric.data.StateProviderReplica.backupAsync(BackupOption option, Duration timeout, CancellationToken cancellationToken, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  type: Method
  summary: "<p>Performs a full backup of all reliable state managed by this ReliableStateManager.</p>\r\n<p>\r\n  <b>Remarks:</b> A FULL backup will be performed with a one-hour timeout. Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location. If false is returned, BackupAsync throws UnsupportedOperationException with the relevant message indicating backupCallback returned false. Also, backup will be marked as unsuccessful. </p>"
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupOption option, Duration timeout, CancellationToken cancellationToken, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: option
      type: microsoft.servicefabric.data.BackupOption
      description: <p>The type of backup to perform. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timeout for this operation. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: <p>The token to monitor for cancellation requests. </p>
    - id: backupCallback
      type: 8ead6242microsoft.servicefabric.data.BackupInfob33c76fcsystem.fabric.CancellationToken774bd4f0
      description: <p>Callback to be called when the backup folder has been created locally and is ready to be moved out of the node </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.data.BackupOption
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data.BackupOption.yml
  name: BackupOption
  nameWithType: BackupOption
  fullName: microsoft.servicefabric.data.BackupOption
  type: Enum
  summary: "<p>Indicates the kind of the backup. </p>"
  syntax:
    content: public enum BackupOption
- uid: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String)
  parent: microsoft.servicefabric.data.StateProviderReplica
  href: microsoft.servicefabric.data.StateProviderReplica.yml
  name: restoreAsync(String backupFolderPath)
  nameWithType: StateProviderReplica.restoreAsync(String backupFolderPath)
  fullName: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath)
  type: Method
  summary: "<p>Restore a backup taken.</p>\r\n<p>\r\n  <b>Remarks:</b>A safe restore will be performed, meaning the restore will only be completed if the data to restore is ahead of state of the current replica. </p>"
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
- uid: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String,RestorePolicy,Duration,CancellationToken)
  parent: microsoft.servicefabric.data.StateProviderReplica
  href: microsoft.servicefabric.data.StateProviderReplica.yml
  name: restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  nameWithType: StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Restore a backup taken</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    - id: restorePolicy
      type: microsoft.servicefabric.data.RestorePolicy
      description: <p>The restore policy. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timeout for this operation. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: <p>The token to monitor for cancellation requests. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
- uid: microsoft.servicefabric.data.RestorePolicy
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data.RestorePolicy.yml
  name: RestorePolicy
  nameWithType: RestorePolicy
  fullName: microsoft.servicefabric.data.RestorePolicy
  type: Enum
  summary: "<p>Policy for restore operation. </p>"
  syntax:
    content: public enum RestorePolicy
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.initialize(ActorTypeInformation)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: initialize(ActorTypeInformation actorTypeInformation)
  nameWithType: ActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  type: Method
  summary: "<p>Initializes the actor state provider with type information of the actor type associated with it.</p>\r\n<p></p>"
  syntax:
    content: public void initialize(ActorTypeInformation actorTypeInformation)
    parameters:
    - id: actorTypeInformation
      type: microsoft.servicefabric.actors.runtime.ActorTypeInformation
      description: <p>Type information of the actor class </p>
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.actorActivatedAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  type: Method
  summary: "<p>This method is invoked as part of the activation process of the actor with the specified Id.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor that is activated. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous Actor activation notification processing. </p>
- uid: microsoft.servicefabric.actors.ActorId
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors.ActorId.yml
  name: ActorId
  nameWithType: ActorId
  fullName: microsoft.servicefabric.actors.ActorId
  type: Class
  summary: "<p>ActorId represents identity of an actor within an actor service. The actors can be identified by <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.String\"></xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.UUID\"></xref> or long. </p>"
  syntax:
    content: public class ActorId
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.saveStateAsync(ActorId,List<ActorStateChange>,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Saves the specified set of actor state changes atomically.</p>\r\n<p>\r\n  <b>Remarks:</b> The collection of state changes should contain only one item for a given state name. The save operation will fail on trying to add an actor state which already exists or update/remove an actor state which does not exist. </p>"
  syntax:
    content: public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to save the state changes. </p>
    - id: stateChanges
      type: 5618da2dmicrosoft.servicefabric.actors.runtime.ActorStateChangea08ddfce
      description: <p>Collection of state changes to save. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorStateChange
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime.ActorStateChange.yml
  name: ActorStateChange
  nameWithType: ActorStateChange
  fullName: microsoft.servicefabric.actors.runtime.ActorStateChange
  type: Class
  summary: "<p>Represents change to an actor state with a given state name. </p>"
  syntax:
    content: public class ActorStateChange
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.containsStateAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Checks whether actor state provider contains an actor state with specified state name.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to check state existence. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to check for existence. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous check operation. The value of TResult parameter is true if state with specified name exists otherwise false. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.removeActorAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Removes all the existing states and reminders associated with specified actor atomically.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to remove state. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous remove operation. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.enumerateStateNamesAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Creates an enumerable of all the state names associated with specified actor.</p>\r\n<p>\r\n  <b>Remarks:</b>The enumerator returned from actor state provider is safe to use concurrently with reads and writes to the state provider. It represents a snapshot consistent view of the state provider. </p>"
  syntax:
    content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to create enumerable. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: d20512af
      description: <p>A task that represents the asynchronous enumeration operation. The value of TResult parameter is an enumerable of all state names associated with specified actor. </p>
- uid: microsoft.servicefabric.actors.PagedResult
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors.PagedResult.yml
  name: PagedResult<T>
  nameWithType: PagedResult<T>
  fullName: microsoft.servicefabric.actors.PagedResult<T>
  type: Class
  summary: "<p>Represents the result of actor query calls.</p>\r\n<p></p>"
  syntax:
    content: public class PagedResult<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>Type of the items this query result contains. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.getActorsAsync(int,ContinuationToken,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Gets ActorIds from the State Provider.</p>\r\n<p>\r\n  <b>Remarks:</b> The </p>"
  syntax:
    content: public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
    parameters:
    - id: numItemsToReturn
      type: f75371fa
      description: <p>Number of items requested to be returned. </p>
    - id: continuationToken
      type: microsoft.servicefabric.actors.ContinuationToken
      description: <p>A continuation token to start querying the results from. A null value of continuation token means start returning values form the beginning. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors.PagedResult78504a52microsoft.servicefabric.actors.ActorIde7daa122
      description: <p>A task that represents the asynchronous operation of call to server. </p>
- uid: microsoft.servicefabric.actors.ContinuationToken
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors.ContinuationToken.yml
  name: ContinuationToken
  nameWithType: ContinuationToken
  fullName: microsoft.servicefabric.actors.ContinuationToken
  type: Class
  summary: "<p>Represents a continuation token for query operations. </p>\r\n<p>\r\n  <b>Remarks:</b>A method that may return a partial set of results via a <xref uid=\"microsoft.servicefabric.actors.PagedResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedResult\"></xref> object also returns a continuation token in the object, which can be used in a subsequent call to return the next set of available results. </p>"
  syntax:
    content: public class ContinuationToken
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.saveReminderAsync(ActorId,ActorReminder,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Saves the specified actor reminder. If an actor reminder with given name does not exist, it adds the actor reminder otherwise existing actor reminder with same name is updated.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to save the reminder. </p>
    - id: reminder
      type: microsoft.servicefabric.actors.runtime.ActorReminder
      description: <p>Actor reminder to save. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorReminder
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime.ActorReminder.yml
  name: ActorReminder
  nameWithType: ActorReminder
  fullName: microsoft.servicefabric.actors.runtime.ActorReminder
  type: Interface
  summary: "<p>Encapsulates Reminder set on an Actor </p>"
  syntax:
    content: public interface ActorReminder
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.deleteReminderAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Deletes the specified actor reminder if it exists.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to delete the reminder. </p>
    - id: reminderName
      type: "26831127"
      description: <p>Name of the reminder to delete. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>>,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Deletes the specified set of reminders</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
    parameters:
    - id: reminderNames
      type: 6110eba5microsoft.servicefabric.actors.ActorId89fe8e3d
      description: <p>The set of reminders to delete </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.reminderCallbackCompletedAsync(ActorId,ActorReminder,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Invoked when a reminder fires and finishes executing its callback <xref uid=\"microsoft.servicefabric.actors.runtime.Remindable.receiveReminderAsync(String,byte [],Duration,Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Remindable#receiveReminderAsync\"></xref> successfully </p>"
  syntax:
    content: public CompletableFuture<?> reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor which own reminder </p>
    - id: reminder
      type: microsoft.servicefabric.actors.runtime.ActorReminder
      description: <p>Actor reminder that completed successfully. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: <p>The token to monitor for cancellation requests. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous reminder callback completed notification processing. </p>
- uid: microsoft.servicefabric.actors.runtime.Remindable.receiveReminderAsync(String,byte [],Duration,Duration)
  parent: microsoft.servicefabric.actors.runtime.Remindable
  href: microsoft.servicefabric.actors.runtime.Remindable.yml
  name: receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
  nameWithType: Remindable.receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
  fullName: microsoft.servicefabric.actors.runtime.Remindable.receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
  type: Method
  summary: "<p>Reminder call back invoked when an actor reminder is triggered.</p>\r\n<p>\r\n  <b>Remarks:</b> When a reminder is triggered, Actors runtime will invoke receiveReminderAsync method on the Actor. An actor can register multiple reminders and the ReceiveReminderAsync method is invoked any time any of those reminders is triggered. The actor can use the reminder name that is passed in to the receiveReminderAsync method to figure out which reminder was triggered. The Actors runtime saves the actor state when the receiveReminderAsync call completes. If an error occurs in saving the state, that actor object will be deactivated and a new instance will be activated, to specify that the state need not be saved upon completion of the reminder. </p>"
  syntax:
    content: public CompletableFuture<?> receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
    parameters:
    - id: reminderName
      type: "26831127"
      description: <p>Name of the reminder. </p>
    - id: context
      type: ccd9418d
      description: <p>Context associated with this reminder was passed to Actors runtime when reminder was created. </p>
    - id: timeSpan
      type: e02a2de0
      description: <p>Time when reminder with name reminderName is due </p>
    - id: period
      type: e02a2de0
      description: <p>The time interval between triggering of reminder with name reminderName. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous operation performed by this callback. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorReminderCollection
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime.ActorReminderCollection.yml
  name: ActorReminderCollection
  nameWithType: ActorReminderCollection
  fullName: microsoft.servicefabric.actors.runtime.ActorReminderCollection
  type: Interface
  summary: "<p>Captures ActorReminderState for Actors </p>"
  syntax:
    content: public interface ActorReminderCollection
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.loadRemindersAsync(CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: loadRemindersAsync(CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
  type: Method
  summary: "<p>Loads all the reminders contained in the actor state provider.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors.runtime.ActorReminderCollectiona08ddfce
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter is a collection of all actor reminders contained in the actor state provider. </p>
- uid: microsoft.servicefabric.actors.runtime.ActorStateProvider.loadStateAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime.ActorStateProvider
  href: microsoft.servicefabric.actors.runtime.ActorStateProvider.yml
  name: loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Loads the actor state associated with the specified state name.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors.ActorId
      description: <p>ID of the actor for which to load the state. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to load. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter contains value of actor state associated with given state name. </p>
- uid: microsoft.servicefabric.data.Transaction
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data.Transaction.yml
  name: Transaction
  nameWithType: Transaction
  fullName: microsoft.servicefabric.data.Transaction
  type: Interface
  syntax:
    content: public interface Transaction
- uid: microsoft.servicefabric.data.utilities.AsyncEnumeration
  parent: microsoft.servicefabric.data.utilities
  href: microsoft.servicefabric.data.utilities.AsyncEnumeration.yml
  name: AsyncEnumeration<E>
  nameWithType: AsyncEnumeration<E>
  fullName: microsoft.servicefabric.data.utilities.AsyncEnumeration<E>
  type: Interface
  summary: "<p>Asynchronous enumerator</p>\r\n<p></p>"
  syntax:
    content: public interface AsyncEnumeration<E>
    typeParameters:
    - id: E
      type: 0ca03e3a
      description: <p>The type of element to enumerate. </p>
- uid: microsoft.servicefabric.data.utilities.KeyValuePair
  parent: microsoft.servicefabric.data.utilities
  href: microsoft.servicefabric.data.utilities.KeyValuePair.yml
  name: KeyValuePair<K,V>
  nameWithType: KeyValuePair<K,V>
  fullName: microsoft.servicefabric.data.utilities.KeyValuePair<K,V>
  type: Class
  summary: "<p>A pair maintaining a key and a value.</p>\r\n<p></p>"
  syntax:
    content: public class KeyValuePair<K extends String,V>
    typeParameters:
    - id: K
      type: a1c6f3a5
      description: <p>Specifies the type of the key </p>
    - id: V
      type: 0a560652
      description: <p>Specifies the type of the value </p>
- uid: microsoft.servicefabric.data.ConditionalValue
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data.ConditionalValue.yml
  name: ConditionalValue<TValue>
  nameWithType: ConditionalValue<TValue>
  fullName: microsoft.servicefabric.data.ConditionalValue<TValue>
  type: Class
  summary: "<p>Result class returned by DistributedCollections APIs that may or may not return a value.</p>\r\n<p></p>"
  syntax:
    content: public class ConditionalValue<TValue>
    typeParameters:
    - id: TValue
      type: 649a7377
      description: <p>Value to initialize the result with. </p>
