### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner"
fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner"
name: "VnetInfoResourceInner"
nameWithType: "VnetInfoResourceInner"
summary: "Virtual Network information ARM resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.appservice.models.ProxyOnlyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.kind()"
- "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.validate()"
- "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.withKind(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VnetInfoResourceInner extends ProxyOnlyResource"
constructors:
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.VnetInfoResourceInner()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.VnetInfoResourceInner()"
  name: "VnetInfoResourceInner()"
  nameWithType: "VnetInfoResourceInner.VnetInfoResourceInner()"
  syntax: "public VnetInfoResourceInner()"
methods:
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.certBlob()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.certBlob()"
  name: "certBlob()"
  nameWithType: "VnetInfoResourceInner.certBlob()"
  summary: "Get the cert<wbr>Blob property: A certificate file (.cer) blob containing the public key of the private key used to authenticate a Point-To-Site VPN connection."
  syntax: "public String certBlob()"
  desc: "Get the certBlob property: A certificate file (.cer) blob containing the public key of the private key used to authenticate a Point-To-Site VPN connection."
  returns:
    description: "the certBlob value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.certThumbprint()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.certThumbprint()"
  name: "certThumbprint()"
  nameWithType: "VnetInfoResourceInner.certThumbprint()"
  summary: "Get the cert<wbr>Thumbprint property: The client certificate thumbprint."
  syntax: "public String certThumbprint()"
  desc: "Get the certThumbprint property: The client certificate thumbprint."
  returns:
    description: "the certThumbprint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.dnsServers()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.dnsServers()"
  name: "dnsServers()"
  nameWithType: "VnetInfoResourceInner.dnsServers()"
  summary: "Get the dns<wbr>Servers property: DNS servers to be used by this Virtual Network."
  syntax: "public String dnsServers()"
  desc: "Get the dnsServers property: DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses."
  returns:
    description: "the dnsServers value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.isSwift()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.isSwift()"
  name: "isSwift()"
  nameWithType: "VnetInfoResourceInner.isSwift()"
  summary: "Get the is<wbr>Swift property: Flag that is used to denote if this is VNET injection."
  syntax: "public Boolean isSwift()"
  desc: "Get the isSwift property: Flag that is used to denote if this is VNET injection."
  returns:
    description: "the isSwift value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.resyncRequired()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.resyncRequired()"
  name: "resyncRequired()"
  nameWithType: "VnetInfoResourceInner.resyncRequired()"
  summary: "Get the resync<wbr>Required property: <code>true</code> if a resync is required; otherwise, <code>false</code>."
  syntax: "public Boolean resyncRequired()"
  desc: "Get the resyncRequired property: <code>true</code> if a resync is required; otherwise, <code>false</code>."
  returns:
    description: "the resyncRequired value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.routes()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.routes()"
  name: "routes()"
  nameWithType: "VnetInfoResourceInner.routes()"
  summary: "Get the routes property: The routes that this Virtual Network connection uses."
  syntax: "public List<VnetRouteInner> routes()"
  desc: "Get the routes property: The routes that this Virtual Network connection uses."
  returns:
    description: "the routes value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner&text=VnetRouteInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.validate()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.validate()"
  name: "validate()"
  nameWithType: "VnetInfoResourceInner.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.vnetResourceId()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.vnetResourceId()"
  name: "vnetResourceId()"
  nameWithType: "VnetInfoResourceInner.vnetResourceId()"
  summary: "Get the vnet<wbr>Resource<wbr>Id property: The Virtual Network's resource ID."
  syntax: "public String vnetResourceId()"
  desc: "Get the vnetResourceId property: The Virtual Network's resource ID."
  returns:
    description: "the vnetResourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.withCertBlob(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.withCertBlob(String certBlob)"
  name: "withCertBlob(String certBlob)"
  nameWithType: "VnetInfoResourceInner.withCertBlob(String certBlob)"
  summary: "Set the cert<wbr>Blob property: A certificate file (.cer) blob containing the public key of the private key used to authenticate a Point-To-Site VPN connection."
  parameters:
  - description: "the certBlob value to set."
    name: "certBlob"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VnetInfoResourceInner withCertBlob(String certBlob)"
  desc: "Set the certBlob property: A certificate file (.cer) blob containing the public key of the private key used to authenticate a Point-To-Site VPN connection."
  returns:
    description: "the VnetInfoResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner&text=VnetInfoResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.withDnsServers(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.withDnsServers(String dnsServers)"
  name: "withDnsServers(String dnsServers)"
  nameWithType: "VnetInfoResourceInner.withDnsServers(String dnsServers)"
  summary: "Set the dns<wbr>Servers property: DNS servers to be used by this Virtual Network."
  parameters:
  - description: "the dnsServers value to set."
    name: "dnsServers"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VnetInfoResourceInner withDnsServers(String dnsServers)"
  desc: "Set the dnsServers property: DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses."
  returns:
    description: "the VnetInfoResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner&text=VnetInfoResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.withIsSwift(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.withIsSwift(Boolean isSwift)"
  name: "withIsSwift(Boolean isSwift)"
  nameWithType: "VnetInfoResourceInner.withIsSwift(Boolean isSwift)"
  summary: "Set the is<wbr>Swift property: Flag that is used to denote if this is VNET injection."
  parameters:
  - description: "the isSwift value to set."
    name: "isSwift"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VnetInfoResourceInner withIsSwift(Boolean isSwift)"
  desc: "Set the isSwift property: Flag that is used to denote if this is VNET injection."
  returns:
    description: "the VnetInfoResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner&text=VnetInfoResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.withKind(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.withKind(String kind)"
  name: "withKind(String kind)"
  nameWithType: "VnetInfoResourceInner.withKind(String kind)"
  summary: "Set the kind property: Kind of resource."
  overridden: "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.withKind(java.lang.String)"
  parameters:
  - name: "kind"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VnetInfoResourceInner withKind(String kind)"
  desc: "Set the kind property: Kind of resource."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner&text=VnetInfoResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.withVnetResourceId(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner.withVnetResourceId(String vnetResourceId)"
  name: "withVnetResourceId(String vnetResourceId)"
  nameWithType: "VnetInfoResourceInner.withVnetResourceId(String vnetResourceId)"
  summary: "Set the vnet<wbr>Resource<wbr>Id property: The Virtual Network's resource ID."
  parameters:
  - description: "the vnetResourceId value to set."
    name: "vnetResourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VnetInfoResourceInner withVnetResourceId(String vnetResourceId)"
  desc: "Set the vnetResourceId property: The Virtual Network's resource ID."
  returns:
    description: "the VnetInfoResourceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetInfoResourceInner&text=VnetInfoResourceInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Virtual Network information ARM resource."
metadata: {}
package: "com.azure.resourcemanager.appservice.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.16.0
