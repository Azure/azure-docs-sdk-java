### YamlMime:JavaMember
nameWithType: Trainings.getDomain
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomain(UUID domainId)
  name: getDomain(UUID domainId)
  nameWithType: Trainings.getDomain(UUID domainId)
  parameters:
  - description: <p>The id of the domain to get information about. </p>
    name: domainId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CustomVisionErrorException?alt=CustomVisionErrorException&text=CustomVisionErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the Domain object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain&text=Domain" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get information about a specific domain.</p>

    <p></p>
  syntax: public Domain getDomain(UUID domainId)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomain(UUID)
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomain*
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomain(UUID domainId)
name: getDomain(UUID domainId)
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
metadata: {}
