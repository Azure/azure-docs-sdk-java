### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.NetworkPeering"
fullName: "com.microsoft.azure.management.network.NetworkPeering"
name: "NetworkPeering"
nameWithType: "NetworkPeering"
summary: "An client-side representation of a network peering."
syntax: "public interface NetworkPeering extends IndependentChild<NetworkManager>, HasInner<VirtualNetworkPeeringInner>, Refreshable<NetworkPeering>, Updatable<NetworkPeering.Update>"
methods:
- uid: "com.microsoft.azure.management.network.NetworkPeering.checkAccessBetweenNetworks()"
  fullName: "com.microsoft.azure.management.network.NetworkPeering.checkAccessBetweenNetworks()"
  name: "checkAccessBetweenNetworks()"
  nameWithType: "NetworkPeering.checkAccessBetweenNetworks()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean checkAccessBetweenNetworks()"
  returns:
    description: "true if the peering enables IP addresses within the peered networks to be accessible from both networks, otherwise false\n <p>\n (Note this method makes a separate call to Azure.)"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkPeering.gatewayUse()"
  fullName: "com.microsoft.azure.management.network.NetworkPeering.gatewayUse()"
  name: "gatewayUse()"
  nameWithType: "NetworkPeering.gatewayUse()"
  modifiers:
  - "abstract"
  syntax: "public abstract NetworkPeeringGatewayUse gatewayUse()"
  returns:
    description: "the type of gateway use enabled for this network"
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkPeeringGatewayUse?alt=com.microsoft.azure.management.network.NetworkPeeringGatewayUse&text=NetworkPeeringGatewayUse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkPeering.getRemoteNetwork()"
  fullName: "com.microsoft.azure.management.network.NetworkPeering.getRemoteNetwork()"
  name: "getRemoteNetwork()"
  nameWithType: "NetworkPeering.getRemoteNetwork()"
  modifiers:
  - "abstract"
  syntax: "public abstract Network getRemoteNetwork()"
  returns:
    description: "the remote network if it is in the same subscription, otherwise null."
    type: "<xref href=\"com.microsoft.azure.management.network.Network?alt=com.microsoft.azure.management.network.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkPeering.getRemoteNetworkAsync()"
  fullName: "com.microsoft.azure.management.network.NetworkPeering.getRemoteNetworkAsync()"
  name: "getRemoteNetworkAsync()"
  nameWithType: "NetworkPeering.getRemoteNetworkAsync()"
  summary: "Gets the remote network associated with this peering asynchronously."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<Network> getRemoteNetworkAsync()"
  desc: "Gets the remote network associated with this peering asynchronously."
  returns:
    description: "a representation of the future computation of this call"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.Network?alt=com.microsoft.azure.management.network.Network&text=Network\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NetworkPeering.getRemotePeering()"
  fullName: "com.microsoft.azure.management.network.NetworkPeering.getRemotePeering()"
  name: "getRemotePeering()"
  nameWithType: "NetworkPeering.getRemotePeering()"
  modifiers:
  - "abstract"
  syntax: "public abstract NetworkPeering getRemotePeering()"
  returns:
    description: "the associated matching peering on the remote network if it is in the same subscription, otherwise this future computation will evaluate to null."
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkPeering?alt=com.microsoft.azure.management.network.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkPeering.getRemotePeeringAsync()"
  fullName: "com.microsoft.azure.management.network.NetworkPeering.getRemotePeeringAsync()"
  name: "getRemotePeeringAsync()"
  nameWithType: "NetworkPeering.getRemotePeeringAsync()"
  summary: "Gets the associated matching peering on the remote network if it is in the same subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<NetworkPeering> getRemotePeeringAsync()"
  desc: "Gets the associated matching peering on the remote network if it is in the same subscription."
  returns:
    description: "a representation of the future computation of this call."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.NetworkPeering?alt=com.microsoft.azure.management.network.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NetworkPeering.isSameSubscription()"
  fullName: "com.microsoft.azure.management.network.NetworkPeering.isSameSubscription()"
  name: "isSameSubscription()"
  nameWithType: "NetworkPeering.isSameSubscription()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isSameSubscription()"
  returns:
    description: "true if the peered networks are in the same subscription, otherwise false"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkPeering.isTrafficForwardingFromRemoteNetworkAllowed()"
  fullName: "com.microsoft.azure.management.network.NetworkPeering.isTrafficForwardingFromRemoteNetworkAllowed()"
  name: "isTrafficForwardingFromRemoteNetworkAllowed()"
  nameWithType: "NetworkPeering.isTrafficForwardingFromRemoteNetworkAllowed()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isTrafficForwardingFromRemoteNetworkAllowed()"
  returns:
    description: "true if traffic forwarding from the remote network is allowed into this network"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkPeering.networkId()"
  fullName: "com.microsoft.azure.management.network.NetworkPeering.networkId()"
  name: "networkId()"
  nameWithType: "NetworkPeering.networkId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String networkId()"
  returns:
    description: "the local virtual network's ID"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkPeering.remoteAddressSpaces()"
  fullName: "com.microsoft.azure.management.network.NetworkPeering.remoteAddressSpaces()"
  name: "remoteAddressSpaces()"
  nameWithType: "NetworkPeering.remoteAddressSpaces()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<String> remoteAddressSpaces()"
  returns:
    description: "the reference of the remote virtual network address space"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NetworkPeering.remoteNetworkId()"
  fullName: "com.microsoft.azure.management.network.NetworkPeering.remoteNetworkId()"
  name: "remoteNetworkId()"
  nameWithType: "NetworkPeering.remoteNetworkId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String remoteNetworkId()"
  returns:
    description: "the associated remote virtual network's ID"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkPeering.state()"
  fullName: "com.microsoft.azure.management.network.NetworkPeering.state()"
  name: "state()"
  nameWithType: "NetworkPeering.state()"
  modifiers:
  - "abstract"
  syntax: "public abstract VirtualNetworkPeeringState state()"
  returns:
    description: "the state of the peering between the two networks"
    type: "<xref href=\"com.microsoft.azure.management.network.VirtualNetworkPeeringState?alt=com.microsoft.azure.management.network.VirtualNetworkPeeringState&text=VirtualNetworkPeeringState\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An client-side representation of a network peering."
implements:
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.IndependentChild?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.IndependentChild&text=IndependentChild\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.implementation.NetworkManager?alt=com.microsoft.azure.management.network.implementation.NetworkManager&text=NetworkManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.HasInner?alt=com.microsoft.azure.management.resources.fluentcore.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.implementation.VirtualNetworkPeeringInner?alt=com.microsoft.azure.management.network.implementation.VirtualNetworkPeeringInner&text=VirtualNetworkPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Refreshable?alt=com.microsoft.azure.management.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.NetworkPeering?alt=com.microsoft.azure.management.network.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Updatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.NetworkPeering.Update?alt=com.microsoft.azure.management.network.NetworkPeering.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
