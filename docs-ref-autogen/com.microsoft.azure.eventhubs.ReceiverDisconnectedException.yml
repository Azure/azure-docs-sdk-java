### YamlMime:JavaType
constructors:
- com.microsoft.azure.eventhubs.ReceiverDisconnectedException.ReceiverDisconnectedException(final String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Exception" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.eventhubs.EventHubException?alt=com.microsoft.azure.eventhubs.EventHubException&text=EventHubException" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.eventhubs.EventHubException.EventHubException(final boolean,final String)
- com.microsoft.azure.eventhubs.EventHubException.EventHubException(final boolean,final Throwable)
- com.microsoft.azure.eventhubs.EventHubException.EventHubException(final boolean,final String,final Throwable)
- com.microsoft.azure.eventhubs.EventHubException.getContext()
- com.microsoft.azure.eventhubs.EventHubException.getIsTransient()
- com.microsoft.azure.eventhubs.EventHubException.getMessage()
- com.microsoft.azure.eventhubs.EventHubException.setContext(ErrorContext)
nameWithType: ReceiverDisconnectedException
syntax: public class ReceiverDisconnectedException extends EventHubException
type: class
uid: com.microsoft.azure.eventhubs.ReceiverDisconnectedException
fullName: com.microsoft.azure.eventhubs.ReceiverDisconnectedException
name: ReceiverDisconnectedException
package: com.microsoft.azure.eventhubs
summary: >-
  <p>This exception is thrown when a EventHubReceiver is being disconnected because of one of the following reason: <ul><li><p>user attempts to connect a non-epoch receiver to a event hub partition, when there is an epoch receiver connected to the partition. </p></li><li><p>you are using an epoch receiver for a given partition but another epoch receiver with a higher epoch value connects to the same partition. </p></li></ul>

  User should make sure either all code are using non-epoch receivers, or ensure that there is only one epoch receiver processing a given partition at any given point in time.</p>

  <p></p>
metadata: {}
