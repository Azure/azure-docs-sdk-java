### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.models.NetworkIntentPolicy"
fullName: "com.azure.resourcemanager.network.models.NetworkIntentPolicy"
name: "NetworkIntentPolicy"
nameWithType: "NetworkIntentPolicy"
summary: "Network Intent Policy resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class NetworkIntentPolicy extends Resource"
constructors:
- uid: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.NetworkIntentPolicy()"
  fullName: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.NetworkIntentPolicy()"
  name: "NetworkIntentPolicy()"
  nameWithType: "NetworkIntentPolicy.NetworkIntentPolicy()"
  syntax: "public NetworkIntentPolicy()"
methods:
- uid: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.etag()"
  fullName: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.etag()"
  name: "etag()"
  nameWithType: "NetworkIntentPolicy.etag()"
  summary: "Get the etag property: A unique read-only string that changes whenever the resource is updated."
  syntax: "public String etag()"
  desc: "Get the etag property: A unique read-only string that changes whenever the resource is updated."
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.id()"
  fullName: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.id()"
  name: "id()"
  nameWithType: "NetworkIntentPolicy.id()"
  summary: "Get the id property: Resource ID."
  overridden: "com.azure.core.management.ProxyResource.id()"
  syntax: "public String id()"
  desc: "Get the id property: Resource ID."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.validate()"
  fullName: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.validate()"
  name: "validate()"
  nameWithType: "NetworkIntentPolicy.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.withId(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.withId(String id)"
  name: "withId(String id)"
  nameWithType: "NetworkIntentPolicy.withId(String id)"
  summary: "Set the id property: Resource ID."
  parameters:
  - description: "the id value to set."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkIntentPolicy withId(String id)"
  desc: "Set the id property: Resource ID."
  returns:
    description: "the NetworkIntentPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.models.NetworkIntentPolicy?alt=com.azure.resourcemanager.network.models.NetworkIntentPolicy&text=NetworkIntentPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "NetworkIntentPolicy.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkIntentPolicy withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.network.models.NetworkIntentPolicy?alt=com.azure.resourcemanager.network.models.NetworkIntentPolicy&text=NetworkIntentPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.network.models.NetworkIntentPolicy.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "NetworkIntentPolicy.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkIntentPolicy withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.network.models.NetworkIntentPolicy?alt=com.azure.resourcemanager.network.models.NetworkIntentPolicy&text=NetworkIntentPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Network Intent Policy resource."
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.16.0
