### YamlMime:JavaType
uid: "com.azure.core.http.netty.implementation.HttpProxyHandler"
fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler"
name: "HttpProxyHandler"
nameWithType: "HttpProxyHandler"
summary: "This class handles authorizing requests being sent through a proxy which require authentication."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"io.netty.channel.ChannelHandlerAdapter\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"io.netty.channel.ChannelInboundHandlerAdapter\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"io.netty.channel.ChannelDuplexHandler\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"io.netty.handler.proxy.ProxyHandler\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "io.netty.channel.ChannelDuplexHandler.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelDuplexHandler.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelDuplexHandler.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelDuplexHandler.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- "io.netty.channel.ChannelDuplexHandler.read(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable()"
- "io.netty.channel.ChannelHandlerAdapter.handlerRemoved(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelHandlerAdapter.isSharable()"
- "io.netty.channel.ChannelInboundHandlerAdapter.channelRegistered(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelInboundHandlerAdapter.channelUnregistered(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelInboundHandlerAdapter.channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)"
- "io.netty.channel.ChannelInboundHandlerAdapter.userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
- "io.netty.handler.proxy.ProxyHandler.<T>destinationAddress()"
- "io.netty.handler.proxy.ProxyHandler.<T>proxyAddress()"
- "io.netty.handler.proxy.ProxyHandler.addCodec(io.netty.channel.ChannelHandlerContext)"
- "io.netty.handler.proxy.ProxyHandler.authScheme()"
- "io.netty.handler.proxy.ProxyHandler.channelActive(io.netty.channel.ChannelHandlerContext)"
- "io.netty.handler.proxy.ProxyHandler.channelInactive(io.netty.channel.ChannelHandlerContext)"
- "io.netty.handler.proxy.ProxyHandler.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
- "io.netty.handler.proxy.ProxyHandler.channelReadComplete(io.netty.channel.ChannelHandlerContext)"
- "io.netty.handler.proxy.ProxyHandler.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
- "io.netty.handler.proxy.ProxyHandler.connectFuture()"
- "io.netty.handler.proxy.ProxyHandler.connectTimeoutMillis()"
- "io.netty.handler.proxy.ProxyHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
- "io.netty.handler.proxy.ProxyHandler.exceptionMessage(java.lang.String)"
- "io.netty.handler.proxy.ProxyHandler.flush(io.netty.channel.ChannelHandlerContext)"
- "io.netty.handler.proxy.ProxyHandler.handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
- "io.netty.handler.proxy.ProxyHandler.handlerAdded(io.netty.channel.ChannelHandlerContext)"
- "io.netty.handler.proxy.ProxyHandler.isConnected()"
- "io.netty.handler.proxy.ProxyHandler.newInitialMessage(io.netty.channel.ChannelHandlerContext)"
- "io.netty.handler.proxy.ProxyHandler.protocol()"
- "io.netty.handler.proxy.ProxyHandler.removeDecoder(io.netty.channel.ChannelHandlerContext)"
- "io.netty.handler.proxy.ProxyHandler.removeEncoder(io.netty.channel.ChannelHandlerContext)"
- "io.netty.handler.proxy.ProxyHandler.sendToProxyServer(java.lang.Object)"
- "io.netty.handler.proxy.ProxyHandler.setConnectTimeoutMillis(long)"
- "io.netty.handler.proxy.ProxyHandler.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class HttpProxyHandler extends ProxyHandler"
constructors:
- "com.azure.core.http.netty.implementation.HttpProxyHandler.HttpProxyHandler(java.net.InetSocketAddress,com.azure.core.util.AuthorizationChallengeHandler,java.util.concurrent.atomic.AtomicReference<com.azure.core.http.netty.implementation.ChallengeHolder>)"
methods:
- "com.azure.core.http.netty.implementation.HttpProxyHandler.addCodec(io.netty.channel.ChannelHandlerContext)"
- "com.azure.core.http.netty.implementation.HttpProxyHandler.authScheme()"
- "com.azure.core.http.netty.implementation.HttpProxyHandler.handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
- "com.azure.core.http.netty.implementation.HttpProxyHandler.newInitialMessage(io.netty.channel.ChannelHandlerContext)"
- "com.azure.core.http.netty.implementation.HttpProxyHandler.protocol()"
- "com.azure.core.http.netty.implementation.HttpProxyHandler.removeDecoder(io.netty.channel.ChannelHandlerContext)"
- "com.azure.core.http.netty.implementation.HttpProxyHandler.removeEncoder(io.netty.channel.ChannelHandlerContext)"
type: "class"
metadata: {}
package: "com.azure.core.http.netty.implementation"
artifact: com.azure:azure-core-http-netty:1.9.1
