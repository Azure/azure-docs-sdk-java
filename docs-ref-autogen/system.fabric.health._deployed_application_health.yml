items:
- uid: system.fabric.health._deployed_application_health
  id: _deployed_application_health
  parent: system.fabric.health
  children:
  - system.fabric.health._deployed_application_health.getApplicationName()
  - system.fabric.health._deployed_application_health.getDeployedServicePackageHealthState()
  - system.fabric.health._deployed_application_health.getNodeName()
  href: system.fabric.health._deployed_application_health.yml
  langs:
  - java
  name: DeployedApplicationHealth
  nameWithType: DeployedApplicationHealth
  fullName: system.fabric.health.DeployedApplicationHealth
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/DeployedApplicationHealth.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/health/DeployedApplicationHealth.java
    startLine: 11
  package: system.fabric.health
  summary: <p>Describes the health of an application deployed on a node as returned by <xref href="system.fabric._health_client.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription)" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class DeployedApplicationHealth extends EntityHealth
  inheritance:
  - java.lang.Object
  - system.fabric.health._entity_health
  inheritedMembers:
  - system.fabric.health._deployed_application_health.DeployedApplicationHealth(String,String,int,HealthEvent [],HealthEvaluation [],DeployedServicePackageHealthState [])
  - system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  - system.fabric.health._entity_health.getAggregatedHealthState()
  - system.fabric.health._entity_health.getHealthEvents()
  - system.fabric.health._entity_health.getUnhealthyEvaluations()
- uid: system.fabric.health._deployed_application_health.getApplicationName()
  id: getApplicationName()
  parent: system.fabric.health._deployed_application_health
  href: system.fabric.health._deployed_application_health.yml
  langs:
  - java
  name: getApplicationName()
  nameWithType: DeployedApplicationHealth.getApplicationName()
  fullName: URI system.fabric.health.DeployedApplicationHealth.getApplicationName()
  overload: system.fabric.health._deployed_application_health.getApplicationName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/DeployedApplicationHealth.java
    startLine: 41
  package: system.fabric.health
  summary: >-
    <p>Gets the application name, which uniquely identifies the application .</p>

    <p></p>
  syntax:
    content: public URI getApplicationName()
    return:
      type: "62304784"
      description: <p>The application name. </p>
- uid: system.fabric.health._deployed_application_health.getDeployedServicePackageHealthState()
  id: getDeployedServicePackageHealthState()
  parent: system.fabric.health._deployed_application_health
  href: system.fabric.health._deployed_application_health.yml
  langs:
  - java
  name: getDeployedServicePackageHealthState()
  nameWithType: DeployedApplicationHealth.getDeployedServicePackageHealthState()
  fullName: List<DeployedServicePackageHealthState> system.fabric.health.DeployedApplicationHealth.getDeployedServicePackageHealthState()
  overload: system.fabric.health._deployed_application_health.getDeployedServicePackageHealthState*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/DeployedApplicationHealth.java
    startLine: 68
  package: system.fabric.health
  summary: >-
    <p>Gets the deployed service package health states for the current deployed application as found in the health store.</p>

    <p>

      <bold>Remarks:</bold>Only deployed service packages that respect the <xref href="system.fabric._deployed_application_health_query_description.getDeployedServicePackageHealthStatesFilter()" data-throw-if-not-resolved="false"></xref> (if specified) are returned. If the input filter is not specified, all deployed service packages are returned. All deployed service packages are evaluated to determine the deployed application aggregated health. </p>
  syntax:
    content: public List<DeployedServicePackageHealthState> getDeployedServicePackageHealthState()
    return:
      type: 5618da2dsystem.fabric.health._deployed_service_package_health_statea08ddfce
      description: <p>The deployed service packages of the current deployed application as found in the health store. </p>
- uid: system.fabric.health._deployed_application_health.getNodeName()
  id: getNodeName()
  parent: system.fabric.health._deployed_application_health
  href: system.fabric.health._deployed_application_health.yml
  langs:
  - java
  name: getNodeName()
  nameWithType: DeployedApplicationHealth.getNodeName()
  fullName: String system.fabric.health.DeployedApplicationHealth.getNodeName()
  overload: system.fabric.health._deployed_application_health.getNodeName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/DeployedApplicationHealth.java
    startLine: 50
  package: system.fabric.health
  summary: >-
    <p>Gets the node name for the node where the application is deployed.</p>

    <p></p>
  syntax:
    content: public String getNodeName()
    return:
      type: "26831127"
      description: <p>The node name for the node where the application is deployed. </p>
references:
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: system.fabric.health._deployed_application_health.getApplicationName*
  name: getApplicationName
  nameWithType: DeployedApplicationHealth.getApplicationName
  fullName: URI system.fabric.health.DeployedApplicationHealth.getApplicationName
  package: system.fabric.health
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: system.fabric.health._deployed_application_health.getNodeName*
  name: getNodeName
  nameWithType: DeployedApplicationHealth.getNodeName
  fullName: String system.fabric.health.DeployedApplicationHealth.getNodeName
  package: system.fabric.health
- uid: 5618da2dsystem.fabric.health._deployed_service_package_health_statea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: system.fabric.health._deployed_service_package_health_state
    name: DeployedServicePackageHealthState
    fullName: system.fabric.health.DeployedServicePackageHealthState
    href: system.fabric.health._deployed_service_package_health_state.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric.health._deployed_application_health.getDeployedServicePackageHealthState*
  name: getDeployedServicePackageHealthState
  nameWithType: DeployedApplicationHealth.getDeployedServicePackageHealthState
  fullName: List<DeployedServicePackageHealthState> system.fabric.health.DeployedApplicationHealth.getDeployedServicePackageHealthState
  package: system.fabric.health
- uid: system.fabric.health._deployed_application_health.DeployedApplicationHealth(String,String,int,HealthEvent [],HealthEvaluation [],DeployedServicePackageHealthState [])
- uid: system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  nameWithType: EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  fullName: system.fabric.health.EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  type: Constructor
  syntax:
    content: protected EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
    parameters:
    - id: aggregatedHealthState
      type: f75371fa
    - id: healthEvents
      type: 5618da2dsystem.fabric.health._health_eventa08ddfce
    - id: unhealthyEvaluations
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
- uid: system.fabric.health._entity_health.getAggregatedHealthState()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getAggregatedHealthState()
  nameWithType: EntityHealth.getAggregatedHealthState()
  fullName: HealthState system.fabric.health.EntityHealth.getAggregatedHealthState()
  type: Method
  summary: >-
    <p>Gets the entity aggregated health state.</p>

    <p></p>
  syntax:
    content: public HealthState getAggregatedHealthState()
    return:
      type: system.fabric.health._health_state
      description: >-
        <p>

          <xref href="system.fabric.health._health_state" data-throw-if-not-resolved="false"></xref> representing the aggregated health state computed by Health Manager based on reported events on entity and its children (if any) and desired health policy. </p>
- uid: system.fabric.health._entity_health.getHealthEvents()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getHealthEvents()
  nameWithType: EntityHealth.getHealthEvents()
  fullName: List<HealthEvent> system.fabric.health.EntityHealth.getHealthEvents()
  type: Method
  summary: >-
    <p>Gets the health events reported on the entity.</p>

    <p>

      <bold>Remarks:</bold>The health events are created based on health reports sent to health store. They contain additional metadata added by health store. </p>
  syntax:
    content: public List<HealthEvent> getHealthEvents()
    return:
      type: 5618da2dsystem.fabric.health._health_eventa08ddfce
      description: <p>The health events reported on the entity. </p>
- uid: system.fabric.health._entity_health.getUnhealthyEvaluations()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getUnhealthyEvaluations()
  nameWithType: EntityHealth.getUnhealthyEvaluations()
  fullName: List<HealthEvaluation> system.fabric.health.EntityHealth.getUnhealthyEvaluations()
  type: Method
  summary: >-
    <p>Gets the unhealthy evaluations that show why the current aggregated health state was returned by Health Manager.</p>

    <p></p>
  syntax:
    content: public List<HealthEvaluation> getUnhealthyEvaluations()
    return:
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
      description: <p>The unhealthy evaluations that describe why the current aggregated health state was returned by Health Manager. </p>
- uid: system.fabric.health._entity_health
  parent: system.fabric.health
  href: system.fabric.health._entity_health.yml
  name: EntityHealth
  nameWithType: EntityHealth
  fullName: system.fabric.health.EntityHealth
  type: Class
  summary: <p>Represents the base class for all entity health related classes. </p>
  syntax:
    content: public class EntityHealth
- uid: system.fabric.health._deployed_service_package_health_state
  parent: system.fabric.health
  href: system.fabric.health._deployed_service_package_health_state.yml
  name: DeployedServicePackageHealthState
  nameWithType: DeployedServicePackageHealthState
  fullName: system.fabric.health.DeployedServicePackageHealthState
  type: Class
  summary: <p>Represents the health state of a deployed service package, containing the entity identifier and the aggregated health state. </p>
  syntax:
    content: public class DeployedServicePackageHealthState
- uid: system.fabric.health._health_event
  parent: system.fabric.health
  href: system.fabric.health._health_event.yml
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: system.fabric.health.HealthEvent
  type: Class
  summary: <p>A <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> object is a structure which contains the health information that is used while reporting health on an entity via ReportHealth API </p>
  syntax:
    content: public class HealthEvent
- uid: system.fabric.health._health_evaluation
  parent: system.fabric.health
  href: system.fabric.health._health_evaluation.yml
  name: HealthEvaluation
  nameWithType: HealthEvaluation
  fullName: system.fabric.health.HealthEvaluation
  type: Class
  summary: <p>Represents a health evaluation which describes the data and the algorithm used by health store to evaluate the health of an entity. </p>
  syntax:
    content: public class HealthEvaluation
- uid: system.fabric._deployed_application_health_query_description.getDeployedServicePackageHealthStatesFilter()
  parent: system.fabric._deployed_application_health_query_description
  href: system.fabric._deployed_application_health_query_description.yml
  name: getDeployedServicePackageHealthStatesFilter()
  nameWithType: DeployedApplicationHealthQueryDescription.getDeployedServicePackageHealthStatesFilter()
  fullName: DeployedServicePackageHealthStatesFilter system.fabric.DeployedApplicationHealthQueryDescription.getDeployedServicePackageHealthStatesFilter()
  type: Method
  summary: >-
    <p>Gets the filter for <xref href="system.fabric.health._deployed_service_package_health_state" data-throw-if-not-resolved="false"></xref> children. Only children that match the filter will be returned.</p>

    <p>

      <bold>Remarks:</bold>Only children that match the filter will be returned. All children will be used to evaluate the deployed application aggregated health state. If the filter is not specified, all deployed service package children of the deployed application are returned. </p>
  syntax:
    content: public DeployedServicePackageHealthStatesFilter getDeployedServicePackageHealthStatesFilter()
    return:
      type: system.fabric._deployed_service_package_health_states_filter
      description: >-
        <p>

          <xref href="system.fabric._deployed_service_package_health_states_filter" data-throw-if-not-resolved="false"></xref> used to filter returned deployed service packages. </p>
- uid: system.fabric._health_client.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription)
  parent: system.fabric._health_client
  href: system.fabric._health_client.yml
  name: getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription queryDescription)
  nameWithType: HealthClient.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription queryDescription)
  fullName: CompletableFuture<DeployedApplicationHealth> system.fabric.HealthClient.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription queryDescription)
  type: Method
  summary: >-
    <p>Asynchronously gets the health of a deployed Service Fabric application on the specified node.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<DeployedApplicationHealth> getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription queryDescription)
    parameters:
    - id: queryDescription
      type: system.fabric._deployed_application_health_query_description
      description: <p>The query description </p>
    return:
      type: 9cdf14d0system.fabric.health._deployed_application_healtha08ddfce
      description: <p>The health of a deployed Service Fabric application. </p>
