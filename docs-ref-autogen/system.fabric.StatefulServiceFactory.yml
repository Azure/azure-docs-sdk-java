### YamlMime:ManagedReference
items:
- uid: system.fabric.StatefulServiceFactory
  id: StatefulServiceFactory
  parent: system.fabric
  children:
  - system.fabric.StatefulServiceFactory.createReplica(String,URI,byte [],UUID,long)
  href: system.fabric.StatefulServiceFactory.yml
  langs:
  - java
  name: StatefulServiceFactory
  nameWithType: StatefulServiceFactory
  fullName: system.fabric.StatefulServiceFactory
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServiceFactory.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServiceFactory.java
    startLine: 14
  package: system.fabric
  summary: "<p>Represents a stateful service factory that is responsible for creating replicas of a specific type of stateful service. Stateful service factories are registered with the <xref uid=\"system.fabric.FabricRuntime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.FabricRuntime\"></xref> by service hosts via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.FabricRuntime#registerStatefulServiceFactory(java.lang.String,system.fabric.StatefulServiceFactory)\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.FabricRuntime#registerStatefulServiceFactoryAsync(java.lang.String,system.fabric.StatefulServiceFactory,java.time.Duration)\"></xref></p>"
  syntax:
    content: public interface StatefulServiceFactory
- uid: system.fabric.StatefulServiceFactory.createReplica(String,URI,byte [],UUID,long)
  id: createReplica(String,URI,byte [],UUID,long)
  parent: system.fabric.StatefulServiceFactory
  href: system.fabric.StatefulServiceFactory.yml
  langs:
  - java
  name: createReplica(String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
  nameWithType: StatefulServiceFactory.createReplica(String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
  fullName: system.fabric.StatefulServiceFactory.createReplica(String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
  overload: system.fabric.StatefulServiceFactory.createReplica*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServiceFactory.java
    startLine: 35
  package: system.fabric
  summary: "<p>Called by Service Fabric to create a stateful service replica for a particular service.</p>\r\n<p></p>"
  syntax:
    content: public StatefulServiceReplica createReplica(String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
    parameters:
    - id: serviceTypeName
      type: "26831127"
      description: <p>The service type that Service Fabric requests to be created. </p>
    - id: serviceName
      type: "62304784"
      description: <p>The fabric:/ name (Uri) of the service with which this replica is associated. </p>
    - id: initializationData
      type: ccd9418d
      description: <p>A byte array that contains the initialization data which was originally passed as a part of this service's service description. </p>
    - id: partitionId
      type: add9545a
      description: <p>The partition ID of type, a GUID, with which this replica is associated. </p>
    - id: replicaId
      type: 0364520f
      description: <p>The replica ID of type long for this replica. </p>
    return:
      type: system.fabric.StatefulServiceReplica
      description: <p>Returns <xref uid="system.fabric.StatefulServiceReplica" data-throw-if-not-resolved="false" data-raw-source="system.fabric.StatefulServiceReplica"></xref>. </p>
  exceptions:
  - type: 84fa3863
    description: <p>On failure of instance creation </p>
  - type: "81e09942"
    description: <p>On Access voilation </p>
references:
- uid: 84fa3863
  spec.java:
  - name: InstantiationException
    fullName: InstantiationException
- uid: "81e09942"
  spec.java:
  - name: IllegalAccessException
    fullName: IllegalAccessException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric.StatefulServiceFactory.createReplica*
  name: createReplica
  nameWithType: StatefulServiceFactory.createReplica
  fullName: system.fabric.StatefulServiceFactory.createReplica
  package: system.fabric
- uid: microsoft.servicefabric.services.runtime.StatefulServiceReplicaFactory
- uid: system.fabric.DefaultServiceFactory
- uid: system.fabric.StatefulServiceReplica
  parent: system.fabric
  href: system.fabric.StatefulServiceReplica.yml
  name: StatefulServiceReplica
  nameWithType: StatefulServiceReplica
  fullName: system.fabric.StatefulServiceReplica
  type: Interface
  summary: "<p>Defines behavior that governs the lifecycle of a replica, such as startup, initialization, role changes, and shutdown. </p>\r\n<p>\r\n  <b>Remarks:</b>Stateful service types must implement this interface. The logic of a stateful service type includes behavior that is invoked on Primary replicas and behavior that is invoked on Secondary replicas. If the service author wants to make use of the provided <xref uid=\"system.fabric.FabricReplicator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.FabricReplicator\"></xref>, then the service must also implement <xref uid=\"system.fabric.StateProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.StateProvider\"></xref> to use the implementation of <xref uid=\"system.fabric.StateReplicator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.StateReplicator\"></xref> that is provided by <xref uid=\"system.fabric.FabricReplicator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.FabricReplicator\"></xref></p>"
  syntax:
    content: public interface StatefulServiceReplica
- uid: system.fabric.FabricRuntime
  parent: system.fabric
  href: system.fabric.FabricRuntime.yml
  name: FabricRuntime
  nameWithType: FabricRuntime
  fullName: system.fabric.FabricRuntime
  type: Class
  summary: "<p>Allows user created hosts to obtain their <xref uid=\"system.fabric.CodePackageActivationContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.CodePackageActivationContext\"></xref>, well as to register the necessary service factories [ <xref uid=\"system.fabric.StatelessServiceFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.StatelessServiceFactory\"></xref>, <xref uid=\"system.fabric.StatefulServiceFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.StatefulServiceFactory\"></xref> ] or service types directly. </p>"
  syntax:
    content: public class FabricRuntime
