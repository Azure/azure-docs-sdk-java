### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider
  id: _refresh_token_based_token_provider
  parent: com.microsoft.azure.datalake.store.oauth2
  children:
  - com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.refreshToken()
  - com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.RefreshTokenBasedTokenProvider(String,RefreshTokenInfo)
  - com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.RefreshTokenBasedTokenProvider(String,String)
  - com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.RefreshTokenBasedTokenProvider(String)
  href: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.yml
  langs:
  - java
  name: RefreshTokenBasedTokenProvider
  nameWithType: RefreshTokenBasedTokenProvider
  fullName: com.microsoft.azure.datalake.store.oauth2.RefreshTokenBasedTokenProvider
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/datalake/store/oauth2/RefreshTokenBasedTokenProvider.java
      branch: master
      repo: https://github.com/azure/azure-data-lake-store-java
    path: src/main/java/com/microsoft/azure/datalake/store/oauth2/RefreshTokenBasedTokenProvider.java
    startLine: 16
  package: com.microsoft.azure.datalake.store.oauth2
  summary: <p>Provides tokens based on refresh token </p>
  syntax:
    content: public class RefreshTokenBasedTokenProvider extends AccessTokenProvider
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.datalake.store.oauth2._access_token_provider
  inheritedMembers:
  - com.microsoft.azure.datalake.store.oauth2._access_token_provider.getToken()
  - com.microsoft.azure.datalake.store.oauth2._access_token_provider.token
- uid: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.refreshToken()
  id: refreshToken()
  parent: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider
  href: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.yml
  langs:
  - java
  name: refreshToken()
  nameWithType: RefreshTokenBasedTokenProvider.refreshToken()
  fullName: AzureADToken com.microsoft.azure.datalake.store.oauth2.RefreshTokenBasedTokenProvider.refreshToken()
  overload: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.refreshToken*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/oauth2/RefreshTokenBasedTokenProvider.java
    startLine: 61
  package: com.microsoft.azure.datalake.store.oauth2
  syntax:
    content: protected AzureADToken refreshToken()
    return:
      type: com.microsoft.azure.datalake.store.oauth2._azure_a_d_token
- uid: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.RefreshTokenBasedTokenProvider(String,RefreshTokenInfo)
  id: RefreshTokenBasedTokenProvider(String,RefreshTokenInfo)
  parent: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider
  href: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.yml
  langs:
  - java
  name: RefreshTokenBasedTokenProvider(String clientId, RefreshTokenInfo refreshToken)
  nameWithType: RefreshTokenBasedTokenProvider.RefreshTokenBasedTokenProvider(String clientId, RefreshTokenInfo refreshToken)
  fullName: com.microsoft.azure.datalake.store.oauth2.RefreshTokenBasedTokenProvider.RefreshTokenBasedTokenProvider(String clientId, RefreshTokenInfo refreshToken)
  overload: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.RefreshTokenBasedTokenProvider*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/oauth2/RefreshTokenBasedTokenProvider.java
    startLine: 48
  package: com.microsoft.azure.datalake.store.oauth2
  summary: >-
    <p>constructs a token provider based on the refresh token provided</p>

    <p></p>
  syntax:
    content: public RefreshTokenBasedTokenProvider(String clientId, RefreshTokenInfo refreshToken)
    parameters:
    - id: clientId
      type: "26831127"
      description: <p>the client ID (GUID) of the client web app obtained from Azure Active Directory configuration </p>
    - id: refreshToken
      type: com.microsoft.azure.datalake.store.oauth2._refresh_token_info
      description: <p>the refresh token </p>
- uid: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.RefreshTokenBasedTokenProvider(String,String)
  id: RefreshTokenBasedTokenProvider(String,String)
  parent: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider
  href: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.yml
  langs:
  - java
  name: RefreshTokenBasedTokenProvider(String clientId, String refreshToken)
  nameWithType: RefreshTokenBasedTokenProvider.RefreshTokenBasedTokenProvider(String clientId, String refreshToken)
  fullName: com.microsoft.azure.datalake.store.oauth2.RefreshTokenBasedTokenProvider.RefreshTokenBasedTokenProvider(String clientId, String refreshToken)
  overload: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.RefreshTokenBasedTokenProvider*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/oauth2/RefreshTokenBasedTokenProvider.java
    startLine: 37
  package: com.microsoft.azure.datalake.store.oauth2
  summary: >-
    <p>constructs a token provider based on the refresh token provided</p>

    <p></p>
  syntax:
    content: public RefreshTokenBasedTokenProvider(String clientId, String refreshToken)
    parameters:
    - id: clientId
      type: "26831127"
      description: <p>the client ID (GUID) of the client web app obtained from Azure Active Directory configuration </p>
    - id: refreshToken
      type: "26831127"
      description: <p>the refresh token </p>
- uid: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.RefreshTokenBasedTokenProvider(String)
  id: RefreshTokenBasedTokenProvider(String)
  parent: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider
  href: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.yml
  langs:
  - java
  name: RefreshTokenBasedTokenProvider(String refreshToken)
  nameWithType: RefreshTokenBasedTokenProvider.RefreshTokenBasedTokenProvider(String refreshToken)
  fullName: com.microsoft.azure.datalake.store.oauth2.RefreshTokenBasedTokenProvider.RefreshTokenBasedTokenProvider(String refreshToken)
  overload: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.RefreshTokenBasedTokenProvider*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/oauth2/RefreshTokenBasedTokenProvider.java
    startLine: 26
  package: com.microsoft.azure.datalake.store.oauth2
  summary: >-
    <p>constructs a token provider based on the refresh token provided</p>

    <p></p>
  syntax:
    content: public RefreshTokenBasedTokenProvider(String refreshToken)
    parameters:
    - id: refreshToken
      type: "26831127"
      description: <p>the refresh token </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.RefreshTokenBasedTokenProvider*
  name: RefreshTokenBasedTokenProvider
  nameWithType: RefreshTokenBasedTokenProvider.RefreshTokenBasedTokenProvider
  fullName: com.microsoft.azure.datalake.store.oauth2.RefreshTokenBasedTokenProvider.RefreshTokenBasedTokenProvider
  package: com.microsoft.azure.datalake.store.oauth2
- uid: com.microsoft.azure.datalake.store.oauth2._refresh_token_based_token_provider.refreshToken*
  name: refreshToken
  nameWithType: RefreshTokenBasedTokenProvider.refreshToken
  fullName: AzureADToken com.microsoft.azure.datalake.store.oauth2.RefreshTokenBasedTokenProvider.refreshToken
  package: com.microsoft.azure.datalake.store.oauth2
- uid: com.microsoft.azure.datalake.store.oauth2._access_token_provider.getToken()
  parent: com.microsoft.azure.datalake.store.oauth2._access_token_provider
  href: com.microsoft.azure.datalake.store.oauth2._access_token_provider.yml
  name: getToken()
  nameWithType: AccessTokenProvider.getToken()
  fullName: synchronized AzureADToken com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.getToken()
  type: Method
  summary: >-
    <p>returns the <xref uid="com.microsoft.azure.datalake.store.oauth2._azure_a_d_token" data-throw-if-not-resolved="false">AzureADToken</xref> cached (or retrieved) by this instance.</p>

    <p></p>
  syntax:
    content: public synchronized AzureADToken getToken()
    return:
      type: cffad4f2com.microsoft.azure.datalake.store.oauth2._azure_a_d_token
      description: >-
        <p>

          <xref uid="com.microsoft.azure.datalake.store.oauth2._azure_a_d_token" data-throw-if-not-resolved="false">AzureADToken</xref> containing the access token </p>
- uid: com.microsoft.azure.datalake.store.oauth2._access_token_provider.token
  parent: com.microsoft.azure.datalake.store.oauth2._access_token_provider
  href: com.microsoft.azure.datalake.store.oauth2._access_token_provider.yml
  name: token
  nameWithType: AccessTokenProvider.token
  fullName: AzureADToken com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.token
  type: Field
  syntax:
    content: protected AzureADToken token
    return:
      type: com.microsoft.azure.datalake.store.oauth2._azure_a_d_token
- uid: com.microsoft.azure.datalake.store.oauth2._access_token_provider
  parent: com.microsoft.azure.datalake.store.oauth2
  href: com.microsoft.azure.datalake.store.oauth2._access_token_provider.yml
  name: AccessTokenProvider
  nameWithType: AccessTokenProvider
  fullName: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider
  type: Class
  summary: >-
    <p>Returns an Azure Active Directory token when requested. The provider can cache the token if it has already retrieved one. If it does, then the provider is responsible for checking expiry and refreshing as needed. </p>

    <p>In other words, this is is a token cache that fetches tokens when requested, if the cached token has expired. </p>
  syntax:
    content: public class AccessTokenProvider
- uid: com.microsoft.azure.datalake.store.oauth2._refresh_token_info
  parent: com.microsoft.azure.datalake.store.oauth2
  href: com.microsoft.azure.datalake.store.oauth2._refresh_token_info.yml
  name: RefreshTokenInfo
  nameWithType: RefreshTokenInfo
  fullName: com.microsoft.azure.datalake.store.oauth2.RefreshTokenInfo
  type: Class
  summary: <p>Information about the refresh token, and the associated access token </p>
  syntax:
    content: public class RefreshTokenInfo
- uid: com.microsoft.azure.datalake.store.oauth2._azure_a_d_token
  parent: com.microsoft.azure.datalake.store.oauth2
  href: com.microsoft.azure.datalake.store.oauth2._azure_a_d_token.yml
  name: AzureADToken
  nameWithType: AzureADToken
  fullName: com.microsoft.azure.datalake.store.oauth2.AzureADToken
  type: Class
  summary: <p>Object represnting the AAD access token to use when making HTTP requests to Azure Data Lake Storage. </p>
  syntax:
    content: public class AzureADToken
