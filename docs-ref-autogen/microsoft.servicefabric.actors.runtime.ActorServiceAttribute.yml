### YamlMime:JavaType
methods:
- fullName: microsoft.servicefabric.actors.runtime.ActorServiceAttribute.name()
  name: name()
  nameWithType: ActorServiceAttribute.name()
  returns:
    description: <p>The name of the actor service relative to the application name. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The relative name of the actor service. This name will be combined with the application name to provide the full name of the actor service.</p>

    <p>

      <b>Remarks:</b>By default, the actor service name is derived from the type of the actor interface <xref uid="" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.ActorNameFormat#getFabricServiceName(Class, String)"></xref> . However, in case when an actor interface is implemented by more than one actor, including by a derived type, the name cannot be determined from the actor interface in an unambiguous manner. In that case, the name of the actor service must be configured using this property of the <xref uid="microsoft.servicefabric.actors.runtime.ActorServiceAttribute" data-throw-if-not-resolved="false" data-raw-source="ActorServiceAttribute"></xref>. </p>
  syntax: public String name()
  uid: microsoft.servicefabric.actors.runtime.ActorServiceAttribute.name()
nameWithType: ActorServiceAttribute
syntax: public interface ActorServiceAttribute
type: interface
uid: microsoft.servicefabric.actors.runtime.ActorServiceAttribute
fullName: microsoft.servicefabric.actors.runtime.ActorServiceAttribute
name: ActorServiceAttribute
package: microsoft.servicefabric.actors.runtime
summary: <p>This attributes allows configuring the properties of the actor service. The attribute is applied on the actor type. </p>
metadata: {}
