### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.runtime.ActorServiceAttribute
  id: ActorServiceAttribute
  parent: microsoft.servicefabric.actors.runtime
  children:
  - microsoft.servicefabric.actors.runtime.ActorServiceAttribute.name()
  href: microsoft.servicefabric.actors.runtime.ActorServiceAttribute.yml
  langs:
  - java
  name: ActorServiceAttribute
  nameWithType: ActorServiceAttribute
  fullName: microsoft.servicefabric.actors.runtime.ActorServiceAttribute
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorServiceAttribute.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorServiceAttribute.java
    startLine: 15
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>This attributes allows configuring the properties of the actor service. The attribute is applied on the actor type. </p>"
  syntax: &o1
    content: public interface ActorServiceAttribute
- uid: microsoft.servicefabric.actors.runtime.ActorServiceAttribute.name()
  id: name()
  parent: microsoft.servicefabric.actors.runtime.ActorServiceAttribute
  href: microsoft.servicefabric.actors.runtime.ActorServiceAttribute.yml
  langs:
  - java
  name: name()
  nameWithType: ActorServiceAttribute.name()
  fullName: microsoft.servicefabric.actors.runtime.ActorServiceAttribute.name()
  overload: microsoft.servicefabric.actors.runtime.ActorServiceAttribute.name*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorServiceAttribute.java
    startLine: 32
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>The relative name of the actor service. This name will be combined with the application name to provide the full name of the actor service.</p>\r\n<p>\r\n  <b>Remarks:</b>By default, the actor service name is derived from the type of the actor interface <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.actors.ActorNameFormat#getFabricServiceName(Class, String)\"></xref> . However, in case when an actor interface is implemented by more than one actor, including by a derived type, the name cannot be determined from the actor interface in an unambiguous manner. In that case, the name of the actor service must be configured using this property of the <xref uid=\"microsoft.servicefabric.actors.runtime.ActorServiceAttribute\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ActorServiceAttribute\"></xref>. </p>"
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>The name of the actor service relative to the application name. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.actors.runtime.ActorServiceAttribute.name*
  name: name
  nameWithType: ActorServiceAttribute.name
  fullName: microsoft.servicefabric.actors.runtime.ActorServiceAttribute.name
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime.ActorServiceAttribute
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime.ActorServiceAttribute.yml
  name: ActorServiceAttribute
  nameWithType: ActorServiceAttribute
  fullName: microsoft.servicefabric.actors.runtime.ActorServiceAttribute
  type: Interface
  summary: "<p>This attributes allows configuring the properties of the actor service. The attribute is applied on the actor type. </p>"
  syntax: *o1
