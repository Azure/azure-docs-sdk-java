### YamlMime:JavaMember
nameWithType: VolatileActorStateProvider.loadStateAsync
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  name: loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  overridden: microsoft.servicefabric.actors.runtime.ActorStateProvider.loadStateAsync(ActorId,String,CancellationToken)
  parameters:
  - description: <p>Id of the actor that is activated. </p>
    name: actorId
    type: <xref href="microsoft.servicefabric.actors.ActorId?alt=microsoft.servicefabric.actors.ActorId&text=ActorId" data-throw-if-not-resolved="False"/>
  - description: <p>StateName. </p>
    name: stateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="FabricKeyNotFoundException?alt=FabricKeyNotFoundException&text=FabricKeyNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>If Actor state associated with specified state name does not exist. </p>
  returns:
    description: <p>A task that represents the asynchronous load operation. The value of TResult parameter contains value of actor state associated with given state name. </p>
    type: <xref href="%3CT%3E+CompletableFuture%3CT%3E?alt=%3CT%3E+CompletableFuture%3CT%3E&text=%3CT%3E+CompletableFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Loads the actor state associated with the specified state name.</p>

    <p></p>
  syntax: public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  uid: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.loadStateAsync(ActorId,String,CancellationToken)
uid: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.loadStateAsync*
fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.loadStateAsync
name: loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
package: microsoft.servicefabric.actors.runtime
metadata: {}
