### YamlMime:JavaMember
uid: "com.azure.digitaltwins.core.implementation.serializer.DeserializationHelpers.deserializeObject*"
fullName: "com.azure.digitaltwins.core.implementation.serializer.DeserializationHelpers.<T>deserializeObject"
name: "<T>deserializeObject"
nameWithType: "DeserializationHelpers.<T>deserializeObject"
members:
- uid: "com.azure.digitaltwins.core.implementation.serializer.DeserializationHelpers.<T>deserializeObject(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Object,java.lang.Class<T>,com.azure.core.util.serializer.JsonSerializer)"
  fullName: "com.azure.digitaltwins.core.implementation.serializer.DeserializationHelpers.<T>deserializeObject(ObjectMapper mapper, Object payload, Class<T> clazz, JsonSerializer customJsonSerializer)"
  name: "<T>deserializeObject(ObjectMapper mapper, Object payload, Class<T> clazz, JsonSerializer customJsonSerializer)"
  nameWithType: "DeserializationHelpers.<T>deserializeObject(ObjectMapper mapper, Object payload, Class<T> clazz, JsonSerializer customJsonSerializer)"
  summary: "Deserialize the payload object into a generic type. There are two different paths we will have to take based on the type T In case of a String, we need to write the value of the payload as a String In case of any other type that the user decides to deserialize the payload, we will use mapper.convertValue to perform the conversion. If the customJsonSerializer is not null, then it will be used to deserialize the provided payload into the provided class. Otherwise this function will use the provided mapper which will never be null."
  parameters:
  - name: "mapper"
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper?alt=com.fasterxml.jackson.databind.ObjectMapper&text=ObjectMapper\" data-throw-if-not-resolved=\"False\" />"
  - name: "payload"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "clazz"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "customJsonSerializer"
    type: "<xref href=\"com.azure.core.util.serializer.JsonSerializer?alt=com.azure.core.util.serializer.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static T <T>deserializeObject(ObjectMapper mapper, Object payload, Class<T> clazz, JsonSerializer customJsonSerializer)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.core.JsonProcessingException?alt=com.fasterxml.jackson.core.JsonProcessingException&text=JsonProcessingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.digitaltwins.core.implementation.serializer"
artifact: com.azure:azure-digitaltwins-core:1.0.3
