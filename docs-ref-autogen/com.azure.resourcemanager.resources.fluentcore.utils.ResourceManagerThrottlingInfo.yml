### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo"
fullName: "com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo"
name: "ResourceManagerThrottlingInfo"
nameWithType: "ResourceManagerThrottlingInfo"
summary: "The class to collect all throttling info from response header."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ResourceManagerThrottlingInfo"
constructors:
- uid: "com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo.ResourceManagerThrottlingInfo(com.azure.core.http.HttpHeaders)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo.ResourceManagerThrottlingInfo(HttpHeaders headers)"
  name: "ResourceManagerThrottlingInfo(HttpHeaders headers)"
  nameWithType: "ResourceManagerThrottlingInfo.ResourceManagerThrottlingInfo(HttpHeaders headers)"
  summary: "Creates the throttling info class from response headers"
  parameters:
  - description: "the response headers"
    name: "headers"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceManagerThrottlingInfo(HttpHeaders headers)"
  desc: "Creates the throttling info class from response headers"
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo.fromHeaders(com.azure.core.http.HttpHeaders)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo.fromHeaders(HttpHeaders headers)"
  name: "fromHeaders(HttpHeaders headers)"
  nameWithType: "ResourceManagerThrottlingInfo.fromHeaders(HttpHeaders headers)"
  summary: "Creates the throttling info class from response headers"
  modifiers:
  - "static"
  parameters:
  - description: "the response headers"
    name: "headers"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ResourceManagerThrottlingInfo fromHeaders(HttpHeaders headers)"
  desc: "Creates the throttling info class from response headers"
  returns:
    description: "the ResourceManagerThrottlingInfo class"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo?alt=com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo&text=ResourceManagerThrottlingInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo.getRateLimit()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo.getRateLimit()"
  name: "getRateLimit()"
  nameWithType: "ResourceManagerThrottlingInfo.getRateLimit()"
  syntax: "public Optional<Integer> getRateLimit()"
  returns:
    description: "the smallest rate limit or empty if none of the headers are valid"
    type: "<xref href=\"java.util.Optional?alt=java.util.Optional&text=Optional\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo.getRateLimits()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo.getRateLimits()"
  name: "getRateLimits()"
  nameWithType: "ResourceManagerThrottlingInfo.getRateLimits()"
  summary: "refer https://docs.<wbr>microsoft.<wbr>com/azure/azure-resource-manager/management/request-limits-and-throttling"
  syntax: "public Map<String,String> getRateLimits()"
  desc: "refer https://docs.microsoft.com/azure/azure-resource-manager/management/request-limits-and-throttling"
  returns:
    description: "all headers associated with rate limit"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo.getResourceRateLimit()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo.getResourceRateLimit()"
  name: "getResourceRateLimit()"
  nameWithType: "ResourceManagerThrottlingInfo.getResourceRateLimit()"
  summary: "refer https://docs.<wbr>microsoft.<wbr>com/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors"
  syntax: "public String getResourceRateLimit()"
  desc: "refer https://docs.microsoft.com/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors"
  returns:
    description: "a specific rate limit header value from compute"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The class to collect all throttling info from response header. Some service has different rate limit but not visible in response header, like network/storage."
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.utils"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.16.0
