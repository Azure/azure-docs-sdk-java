### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive"
fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive"
name: "AmqpFileUploadNotificationReceive"
nameWithType: "AmqpFileUploadNotificationReceive"
summary: "Instance of the QPID-Proton-J Base<wbr>Handler class overriding the events what are needed to handle high level open, close methods and feedback received event."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AmqpFileUploadNotificationReceive implements AmqpFeedbackReceivedEvent"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(java.lang.String,com.azure.core.credential.AzureSasCredential,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ProxyOptions,javax.net.ssl.SSLContext)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(String hostName, AzureSasCredential sasTokenProvider, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  name: "AmqpFileUploadNotificationReceive(String hostName, AzureSasCredential sasTokenProvider, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  nameWithType: "AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(String hostName, AzureSasCredential sasTokenProvider, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  parameters:
  - name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "sasTokenProvider"
    type: "<xref href=\"com.azure.core.credential.AzureSasCredential?alt=com.azure.core.credential.AzureSasCredential&text=AzureSasCredential\" data-throw-if-not-resolved=\"False\" />"
  - name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - name: "proxyOptions"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  - name: "sslContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpFileUploadNotificationReceive(String hostName, AzureSasCredential sasTokenProvider, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(java.lang.String,com.azure.core.credential.TokenCredential,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ProxyOptions,javax.net.ssl.SSLContext)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  name: "AmqpFileUploadNotificationReceive(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  nameWithType: "AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  parameters:
  - name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - name: "proxyOptions"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  - name: "sslContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpFileUploadNotificationReceive(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)"
  name: "AmqpFileUploadNotificationReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)"
  nameWithType: "AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)"
  summary: "Constructor to set up connection parameters"
  parameters:
  - description: "The address string of the service (example: AAA.BBB.CCC)"
    name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The username string to use SASL authentication (example: user@sas.service)"
    name: "userName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The SAS token string"
    name: "sasToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "protocol to use"
    name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpFileUploadNotificationReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)"
  desc: "Constructor to set up connection parameters"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ProxyOptions)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)"
  name: "AmqpFileUploadNotificationReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)"
  nameWithType: "AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)"
  summary: "Constructor to set up connection parameters"
  parameters:
  - description: "The address string of the service (example: AAA.BBB.CCC)"
    name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The username string to use SASL authentication (example: user@sas.service)"
    name: "userName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The SAS token string"
    name: "sasToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "protocol to use"
    name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - description: "the proxy options to tunnel through, if a proxy should be used."
    name: "proxyOptions"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpFileUploadNotificationReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)"
  desc: "Constructor to set up connection parameters"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ProxyOptions,javax.net.ssl.SSLContext)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  name: "AmqpFileUploadNotificationReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  nameWithType: "AmqpFileUploadNotificationReceive.AmqpFileUploadNotificationReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  summary: "Constructor to set up connection parameters"
  parameters:
  - description: "The address string of the service (example: AAA.BBB.CCC)"
    name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The username string to use SASL authentication (example: user@sas.service)"
    name: "userName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The SAS token string"
    name: "sasToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "protocol to use"
    name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - description: "the proxy options to tunnel through, if a proxy should be used."
    name: "proxyOptions"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the SSL context to use during the TLS handshake when opening the connection. If null, a default\n                   SSL context will be generated. This default SSLContext trusts the IoT Hub public certificates."
    name: "sslContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpFileUploadNotificationReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  desc: "Constructor to set up connection parameters"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.close()"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.close()"
  name: "close()"
  nameWithType: "AmqpFileUploadNotificationReceive.close()"
  summary: "Invalidate Amqps<wbr>Receive<wbr>Handler member variable"
  modifiers:
  - "synchronized"
  syntax: "public synchronized void close()"
  desc: "Invalidate AmqpsReceiveHandler member variable"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.onFeedbackReceived(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.onFeedbackReceived(String feedbackJson)"
  name: "onFeedbackReceived(String feedbackJson)"
  nameWithType: "AmqpFileUploadNotificationReceive.onFeedbackReceived(String feedbackJson)"
  summary: "Handle on feedback received Proton event Parse received json and save result to a member variable Release semaphore for wait function"
  modifiers:
  - "synchronized"
  parameters:
  - description: "Received Json string to process"
    name: "feedbackJson"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public synchronized void onFeedbackReceived(String feedbackJson)"
  desc: "Handle on feedback received Proton event Parse received json and save result to a member variable Release semaphore for wait function"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.open()"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.open()"
  name: "open()"
  nameWithType: "AmqpFileUploadNotificationReceive.open()"
  summary: "Create Amqps<wbr>Receive<wbr>Handler and store it in a member variable"
  modifiers:
  - "synchronized"
  syntax: "public synchronized void open()"
  exceptions:
  - description: "If underlying layers throws it for any reason"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Create AmqpsReceiveHandler and store it in a member variable"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.receive(long)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFileUploadNotificationReceive.receive(long timeoutMs)"
  name: "receive(long timeoutMs)"
  nameWithType: "AmqpFileUploadNotificationReceive.receive(long timeoutMs)"
  summary: "Synchronized call to receive feedback batch Hide the event based receiving mechanism from the user API"
  modifiers:
  - "synchronized"
  parameters:
  - description: "The timeout in milliseconds to wait for the feedback"
    name: "timeoutMs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public synchronized FileUploadNotification receive(long timeoutMs)"
  exceptions:
  - description: "This exception is thrown if the input AmqpReceive object is null"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "This exception is thrown if the input AmqpReceive object is null"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Synchronized call to receive feedback batch Hide the event based receiving mechanism from the user API"
  returns:
    description: "The received feedback batch"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.FileUploadNotification?alt=com.microsoft.azure.sdk.iot.service.FileUploadNotification&text=FileUploadNotification\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Instance of the QPID-Proton-J BaseHandler class overriding the events what are needed to handle high level open, close methods and feedback received event."
implements:
- "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent&text=AmqpFeedbackReceivedEvent\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.transport.amqps"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.30.0
