### YamlMime:ManagedReference
items:
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry
  id: _base_telemetry
  parent: com.microsoft.applicationinsights.telemetry
  children:
  - com.microsoft.applicationinsights.telemetry._base_telemetry.additionalSanitize()
  - com.microsoft.applicationinsights.telemetry._base_telemetry.BaseTelemetry()
  - com.microsoft.applicationinsights.telemetry._base_telemetry.getBaseTypeName()
  - com.microsoft.applicationinsights.telemetry._base_telemetry.getContext()
  - com.microsoft.applicationinsights.telemetry._base_telemetry.getData()
  - com.microsoft.applicationinsights.telemetry._base_telemetry.getEnvelopName()
  - com.microsoft.applicationinsights.telemetry._base_telemetry.getProperties()
  - com.microsoft.applicationinsights.telemetry._base_telemetry.getSequence()
  - com.microsoft.applicationinsights.telemetry._base_telemetry.getTimestamp()
  - com.microsoft.applicationinsights.telemetry._base_telemetry.initialize(ConcurrentMap<String, String>)
  - com.microsoft.applicationinsights.telemetry._base_telemetry.reset()
  - com.microsoft.applicationinsights.telemetry._base_telemetry.sanitize()
  - com.microsoft.applicationinsights.telemetry._base_telemetry.serialize(JsonTelemetryDataSerializer)
  - com.microsoft.applicationinsights.telemetry._base_telemetry.setSampleRate(Envelope)
  - com.microsoft.applicationinsights.telemetry._base_telemetry.setSequence(String)
  - com.microsoft.applicationinsights.telemetry._base_telemetry.setTimestamp(Date)
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: BaseTelemetry<T>
  nameWithType: BaseTelemetry<T>
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T>
  type: Class
  source:
    remote: &o0
      path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 39
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Superclass for all telemetry data classes. </p>
  syntax:
    content: public class BaseTelemetry<T extends Domain> implements Telemetry
    typeParameters:
    - type: 8ce1ecb9
  inheritance:
  - java.lang.Object
  - com.microsoft.applicationinsights.telemetry._json_serializable
  - com.microsoft.applicationinsights.telemetry._telemetry
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.additionalSanitize()
  id: additionalSanitize()
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: additionalSanitize()
  nameWithType: BaseTelemetry<T>.additionalSanitize()
  fullName: abstract void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.additionalSanitize()
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.additionalSanitize*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 164
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Concrete classes should implement this method </p>
  syntax:
    content: protected abstract void additionalSanitize()
    return:
      type: 5beb11ad
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.BaseTelemetry()
  id: BaseTelemetry()
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: BaseTelemetry()
  nameWithType: BaseTelemetry<T>.BaseTelemetry()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.BaseTelemetry()
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.BaseTelemetry*
  type: Constructor
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 44
  package: com.microsoft.applicationinsights.telemetry
  syntax:
    content: protected BaseTelemetry()
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getBaseTypeName()
  id: getBaseTypeName()
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: getBaseTypeName()
  nameWithType: BaseTelemetry<T>.getBaseTypeName()
  fullName: String com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getBaseTypeName()
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.getBaseTypeName*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 181
  package: com.microsoft.applicationinsights.telemetry
  syntax:
    content: protected String getBaseTypeName()
    return:
      type: "26831127"
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getContext()
  id: getContext()
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: getContext()
  nameWithType: BaseTelemetry<T>.getContext()
  fullName: TelemetryContext com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getContext()
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.getContext*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 109
  package: com.microsoft.applicationinsights.telemetry
  summary: >-
    <p>Gets the context associated with the current telemetry item.</p>

    <p></p>
  syntax:
    content: public TelemetryContext getContext()
    return:
      type: com.microsoft.applicationinsights.telemetry._telemetry_context
      description: <p>The context </p>
  overridden: com.microsoft.applicationinsights.telemetry._telemetry.getContext()
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getData()
  id: getData()
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: getData()
  nameWithType: BaseTelemetry<T>.getData()
  fullName: abstract T com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getData()
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.getData*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 172
  package: com.microsoft.applicationinsights.telemetry
  summary: >-
    <p>Concrete classes should implement this method which supplies the data structure that this instance works with, which needs to implement <xref uid="com.microsoft.applicationinsights.telemetry._json_serializable" data-throw-if-not-resolved="false">JsonSerializable</xref></p>

    <p></p>
  syntax:
    content: protected abstract T getData()
    return:
      type: 521c6d27
      description: <p>The inner data structure </p>
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getEnvelopName()
  id: getEnvelopName()
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: getEnvelopName()
  nameWithType: BaseTelemetry<T>.getEnvelopName()
  fullName: String com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getEnvelopName()
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.getEnvelopName*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 177
  package: com.microsoft.applicationinsights.telemetry
  syntax:
    content: protected String getEnvelopName()
    return:
      type: "26831127"
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getProperties()
  id: getProperties()
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: getProperties()
  nameWithType: BaseTelemetry<T>.getProperties()
  fullName: Map<String, String> com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getProperties()
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.getProperties*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 119
  package: com.microsoft.applicationinsights.telemetry
  summary: >-
    <p>Gets a dictionary of application-defined property names and values providing additional information about this event.</p>

    <p></p>
  syntax:
    content: public Map<String, String> getProperties()
    return:
      type: 689c8cb5
      description: <p>The properties </p>
  overridden: com.microsoft.applicationinsights.telemetry._telemetry.getProperties()
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getSequence()
  id: getSequence()
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: getSequence()
  nameWithType: BaseTelemetry<T>.getSequence()
  fullName: String com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getSequence()
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.getSequence*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 69
  package: com.microsoft.applicationinsights.telemetry
  summary: >-
    <p>Sequence field used to track absolute order of uploaded events. It is a two-part value that includes a stable identifier for the current boot session and an incrementing identifier for each event added to the upload queue </p>

    <p>The Sequence helps track how many events were fired and how many events were uploaded and enables identification of data lost during upload and de-duplication of events on the ingress server. </p>

    <p>Gets the value that defines absolute order of the telemetry item.</p>

    <p></p>
  syntax:
    content: public String getSequence()
    return:
      type: "26831127"
      description: <p>The sequence of the <xref uid="com.microsoft.applicationinsights.telemetry._telemetry" data-throw-if-not-resolved="false">Telemetry</xref>. </p>
  overridden: com.microsoft.applicationinsights.telemetry._telemetry.getSequence()
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getTimestamp()
  id: getTimestamp()
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: getTimestamp()
  nameWithType: BaseTelemetry<T>.getTimestamp()
  fullName: Date com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getTimestamp()
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.getTimestamp*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 89
  package: com.microsoft.applicationinsights.telemetry
  summary: >-
    <p>Gets date and time when event was recorded.</p>

    <p></p>
  syntax:
    content: public Date getTimestamp()
    return:
      type: "12977444"
      description: <p>The timestamp as Date </p>
  overridden: com.microsoft.applicationinsights.telemetry._telemetry.getTimestamp()
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.initialize(ConcurrentMap<String, String>)
  id: initialize(ConcurrentMap<String, String>)
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: initialize(ConcurrentMap<String, String> properties)
  nameWithType: BaseTelemetry<T>.initialize(ConcurrentMap<String, String> properties)
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.initialize(ConcurrentMap<String, String> properties)
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.initialize*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 52
  package: com.microsoft.applicationinsights.telemetry
  summary: >-
    <p>Initializes the instance with the context properties</p>

    <p></p>
  syntax:
    content: protected void initialize(ConcurrentMap<String, String> properties)
    parameters:
    - id: properties
      type: bc7a2f3a
      description: <p>The context properties </p>
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.reset()
  id: reset()
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: reset()
  nameWithType: BaseTelemetry<T>.reset()
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.reset()
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.reset*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 158
  package: com.microsoft.applicationinsights.telemetry
  syntax:
    content: public void reset()
  overridden: com.microsoft.applicationinsights.telemetry._telemetry.reset()
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.sanitize()
  id: sanitize()
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: sanitize()
  nameWithType: BaseTelemetry<T>.sanitize()
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.sanitize()
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.sanitize*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 127
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Makes sure the data to send is sanitized from bad chars, proper length etc. </p>
  syntax:
    content: public void sanitize()
  overridden: com.microsoft.applicationinsights.telemetry._telemetry.sanitize()
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.serialize(JsonTelemetryDataSerializer)
  id: serialize(JsonTelemetryDataSerializer)
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: serialize(JsonTelemetryDataSerializer writer)
  nameWithType: BaseTelemetry<T>.serialize(JsonTelemetryDataSerializer writer)
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.serialize(JsonTelemetryDataSerializer writer)
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.serialize*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 139
  package: com.microsoft.applicationinsights.telemetry
  summary: >-
    <p>Serializes this object in JSON format.</p>

    <p></p>
  syntax:
    content: public void serialize(JsonTelemetryDataSerializer writer)
    parameters:
    - id: writer
      type: com.microsoft.applicationinsights.telemetry._json_telemetry_data_serializer
      description: <p>The writer that helps with serializing into Json format </p>
  overridden: com.microsoft.applicationinsights.telemetry._telemetry.serialize(JsonTelemetryDataSerializer)
  exceptions:
  - type: cbf33bbe
    description: <p>The exception that might be thrown during the serialization </p>
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.setSampleRate(Envelope)
  id: setSampleRate(Envelope)
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: setSampleRate(Envelope envelope)
  nameWithType: BaseTelemetry<T>.setSampleRate(Envelope envelope)
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.setSampleRate(Envelope envelope)
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.setSampleRate*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 174
  package: com.microsoft.applicationinsights.telemetry
  syntax:
    content: protected void setSampleRate(Envelope envelope)
    parameters:
    - id: envelope
      type: ec5c4d5a
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.setSequence(String)
  id: setSequence(String)
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: setSequence(String sequence)
  nameWithType: BaseTelemetry<T>.setSequence(String sequence)
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.setSequence(String sequence)
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.setSequence*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 79
  package: com.microsoft.applicationinsights.telemetry
  summary: >-
    <p>Sets the value that defines absolute order of the telemetry item.</p>

    <p></p>
  syntax:
    content: public void setSequence(String sequence)
    parameters:
    - id: sequence
      type: "26831127"
      description: <p>The sequence of the <xref uid="com.microsoft.applicationinsights.telemetry._telemetry" data-throw-if-not-resolved="false">Telemetry</xref>. </p>
  overridden: com.microsoft.applicationinsights.telemetry._telemetry.setSequence(String)
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.setTimestamp(Date)
  id: setTimestamp(Date)
  parent: com.microsoft.applicationinsights.telemetry._base_telemetry
  href: com.microsoft.applicationinsights.telemetry._base_telemetry.yml
  langs:
  - java
  name: setTimestamp(Date date)
  nameWithType: BaseTelemetry<T>.setTimestamp(Date date)
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.setTimestamp(Date date)
  overload: com.microsoft.applicationinsights.telemetry._base_telemetry.setTimestamp*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseTelemetry.java
    startLine: 99
  package: com.microsoft.applicationinsights.telemetry
  summary: >-
    <p>Sets date and time when event was recorded.</p>

    <p></p>
  syntax:
    content: public void setTimestamp(Date date)
    parameters:
    - id: date
      type: "12977444"
      description: <p>The timestamp as Date. </p>
  overridden: com.microsoft.applicationinsights.telemetry._telemetry.setTimestamp(Date)
references:
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.BaseTelemetry*
  name: BaseTelemetry
  nameWithType: BaseTelemetry<T>.BaseTelemetry
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.BaseTelemetry
  package: com.microsoft.applicationinsights.telemetry
- uid: bc7a2f3a
  spec.java:
  - name: ConcurrentMap<String, String>
    fullName: ConcurrentMap<String, String>
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.initialize*
  name: initialize
  nameWithType: BaseTelemetry<T>.initialize
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.initialize
  package: com.microsoft.applicationinsights.telemetry
- uid: 5beb11ad
  spec.java:
  - name: abstract void
    fullName: abstract void
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.additionalSanitize*
  name: additionalSanitize
  nameWithType: BaseTelemetry<T>.additionalSanitize
  fullName: abstract void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.additionalSanitize
  package: com.microsoft.applicationinsights.telemetry
- uid: 521c6d27
  spec.java:
  - name: abstract T
    fullName: abstract T
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getData*
  name: getData
  nameWithType: BaseTelemetry<T>.getData
  fullName: abstract T com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getData
  package: com.microsoft.applicationinsights.telemetry
- uid: ec5c4d5a
  spec.java:
  - name: Envelope
    fullName: Envelope
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.setSampleRate*
  name: setSampleRate
  nameWithType: BaseTelemetry<T>.setSampleRate
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.setSampleRate
  package: com.microsoft.applicationinsights.telemetry
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getEnvelopName*
  name: getEnvelopName
  nameWithType: BaseTelemetry<T>.getEnvelopName
  fullName: String com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getEnvelopName
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getBaseTypeName*
  name: getBaseTypeName
  nameWithType: BaseTelemetry<T>.getBaseTypeName
  fullName: String com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getBaseTypeName
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getSequence*
  name: getSequence
  nameWithType: BaseTelemetry<T>.getSequence
  fullName: String com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getSequence
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.setSequence*
  name: setSequence
  nameWithType: BaseTelemetry<T>.setSequence
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.setSequence
  package: com.microsoft.applicationinsights.telemetry
- uid: "12977444"
  spec.java:
  - name: Date
    fullName: Date
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getTimestamp*
  name: getTimestamp
  nameWithType: BaseTelemetry<T>.getTimestamp
  fullName: Date com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getTimestamp
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.setTimestamp*
  name: setTimestamp
  nameWithType: BaseTelemetry<T>.setTimestamp
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.setTimestamp
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getContext*
  name: getContext
  nameWithType: BaseTelemetry<T>.getContext
  fullName: TelemetryContext com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getContext
  package: com.microsoft.applicationinsights.telemetry
- uid: 689c8cb5
  spec.java:
  - name: Map<String, String>
    fullName: Map<String, String>
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.getProperties*
  name: getProperties
  nameWithType: BaseTelemetry<T>.getProperties
  fullName: Map<String, String> com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getProperties
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.sanitize*
  name: sanitize
  nameWithType: BaseTelemetry<T>.sanitize
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.sanitize
  package: com.microsoft.applicationinsights.telemetry
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.serialize*
  name: serialize
  nameWithType: BaseTelemetry<T>.serialize
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.serialize
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._base_telemetry.reset*
  name: reset
  nameWithType: BaseTelemetry<T>.reset
  fullName: void com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.reset
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._telemetry
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: Telemetry
  nameWithType: Telemetry
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry
  type: Interface
  summary: <p>The base telemetry type interface for application insights. </p>
  syntax:
    content: public interface Telemetry
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext
  type: Class
  summary: <p>Represents a context for sending telemetry to the Application Insights service. The context holds data that is sent with every telemetry item. It includes the instrumentation key; the current operation id, for correlating related telemetry items; and user, session and device data. You can also set properties that are added to every telemetry item, and can be used in the portal to filter the telemetry that used this context. </p>
  syntax:
    content: public class TelemetryContext
- uid: com.microsoft.applicationinsights.telemetry._json_serializable
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry._json_serializable.yml
  name: JsonSerializable
  nameWithType: JsonSerializable
  fullName: com.microsoft.applicationinsights.telemetry.JsonSerializable
  type: Interface
  summary: <p>Represents objects that support serialization to JSON. </p>
  syntax:
    content: public interface JsonSerializable
- uid: com.microsoft.applicationinsights.telemetry._telemetry.getSequence()
  parent: com.microsoft.applicationinsights.telemetry._telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: getSequence()
  nameWithType: Telemetry.getSequence()
  fullName: String com.microsoft.applicationinsights.telemetry.Telemetry.getSequence()
  type: Method
  summary: >-
    <p>Sequence field used to track absolute order of uploaded events. It is a two-part value that includes a stable identifier for the current boot session and an incrementing identifier for each event added to the upload queue</p>

    <p>The Sequence helps track how many events were fired and how many events were uploaded and enables identification of data lost during upload and de-duplication of events on the ingress server.</p>

    <p>Gets the current sequence. </p>
  syntax:
    content: public String getSequence()
    return:
      type: "26831127"
      description: <p>The current sequence. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry.setSequence(String)
  parent: com.microsoft.applicationinsights.telemetry._telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: setSequence(String sequence)
  nameWithType: Telemetry.setSequence(String sequence)
  fullName: void com.microsoft.applicationinsights.telemetry.Telemetry.setSequence(String sequence)
  type: Method
  summary: <p>Sets the sequence. </p>
  syntax:
    content: public void setSequence(String sequence)
    parameters:
    - id: sequence
      type: "26831127"
      description: <p>The sequence. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry.getTimestamp()
  parent: com.microsoft.applicationinsights.telemetry._telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: getTimestamp()
  nameWithType: Telemetry.getTimestamp()
  fullName: Date com.microsoft.applicationinsights.telemetry.Telemetry.getTimestamp()
  type: Method
  summary: <p>Gets the time when telemetry was recorded </p>
  syntax:
    content: public Date getTimestamp()
    return:
      type: "12977444"
      description: <p>Recorded time. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry.setTimestamp(Date)
  parent: com.microsoft.applicationinsights.telemetry._telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: setTimestamp(Date date)
  nameWithType: Telemetry.setTimestamp(Date date)
  fullName: void com.microsoft.applicationinsights.telemetry.Telemetry.setTimestamp(Date date)
  type: Method
  summary: <p>Sets the time when telemetry was recorded </p>
  syntax:
    content: public void setTimestamp(Date date)
    parameters:
    - id: date
      type: "12977444"
      description: <p>Recorded time. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry.getContext()
  parent: com.microsoft.applicationinsights.telemetry._telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: getContext()
  nameWithType: Telemetry.getContext()
  fullName: TelemetryContext com.microsoft.applicationinsights.telemetry.Telemetry.getContext()
  type: Method
  summary: <p>Gets the context associated with this telemetry instance. </p>
  syntax:
    content: public TelemetryContext getContext()
    return:
      type: com.microsoft.applicationinsights.telemetry._telemetry_context
      description: <p>Context associated with this instance. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry.getProperties()
  parent: com.microsoft.applicationinsights.telemetry._telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: getProperties()
  nameWithType: Telemetry.getProperties()
  fullName: Map<String,String> com.microsoft.applicationinsights.telemetry.Telemetry.getProperties()
  type: Method
  summary: <p>Gets the map of application-defined property names and values. </p>
  syntax:
    content: public Map<String, String> getProperties()
    return:
      type: 689c8cb5
      description: <p>Map of properties. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry.sanitize()
  parent: com.microsoft.applicationinsights.telemetry._telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: sanitize()
  nameWithType: Telemetry.sanitize()
  fullName: void com.microsoft.applicationinsights.telemetry.Telemetry.sanitize()
  type: Method
  summary: <p>Sanitizes the properties of the telemetry item based on DP constraints. </p>
  syntax:
    content: public void sanitize()
- uid: com.microsoft.applicationinsights.telemetry._telemetry.serialize(JsonTelemetryDataSerializer)
  parent: com.microsoft.applicationinsights.telemetry._telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: serialize(JsonTelemetryDataSerializer writer)
  nameWithType: Telemetry.serialize(JsonTelemetryDataSerializer writer)
  fullName: void com.microsoft.applicationinsights.telemetry.Telemetry.serialize(JsonTelemetryDataSerializer writer)
  type: Method
  summary: <p>Serializes itself to Json using the <xref uid="com.microsoft.applicationinsights.telemetry._json_telemetry_data_serializer" data-throw-if-not-resolved="false">JsonTelemetryDataSerializer</xref></p>
  syntax:
    content: public void serialize(JsonTelemetryDataSerializer writer)
    parameters:
    - id: writer
      type: com.microsoft.applicationinsights.telemetry._json_telemetry_data_serializer
      description: <p>The writer that helps with serializing into Json format </p>
- uid: com.microsoft.applicationinsights.telemetry._json_telemetry_data_serializer
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry._json_telemetry_data_serializer.yml
  name: JsonTelemetryDataSerializer
  nameWithType: JsonTelemetryDataSerializer
  fullName: com.microsoft.applicationinsights.telemetry.JsonTelemetryDataSerializer
  type: Class
  summary: <p>This class knows how to transform data that is relevant to <xref uid="com.microsoft.applicationinsights.telemetry._telemetry" data-throw-if-not-resolved="false">Telemetry</xref> instances into JSON. </p>
  syntax:
    content: public class JsonTelemetryDataSerializer
- uid: com.microsoft.applicationinsights.telemetry._telemetry.reset()
  parent: com.microsoft.applicationinsights.telemetry._telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: reset()
  nameWithType: Telemetry.reset()
  fullName: void com.microsoft.applicationinsights.telemetry.Telemetry.reset()
  type: Method
  syntax:
    content: public void reset()
