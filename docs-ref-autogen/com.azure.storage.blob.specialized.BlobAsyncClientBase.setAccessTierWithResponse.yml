### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse*"
fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse"
name: "setAccessTierWithResponse"
nameWithType: "BlobAsyncClientBase.setAccessTierWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId)"
  name: "setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId)"
  nameWithType: "BlobAsyncClientBase.setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId)"
  summary: "Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag.\n\n**Code Samples**\n\n```java\nclient.setAccessTierWithResponse(AccessTier.HOT, RehydratePriority.STANDARD, leaseId)\n     .subscribe(response -> System.out.printf(\"Set tier completed with status code %d%n\",\n         response.getStatusCode()));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier"
  parameters:
  - description: "The new tier for the blob."
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional priority to set for re-hydrating blobs."
    name: "priority"
    type: "<xref href=\"com.azure.storage.blob.models.RehydratePriority?alt=com.azure.storage.blob.models.RehydratePriority&text=RehydratePriority\" data-throw-if-not-resolved=\"False\" />"
  - description: "The lease ID the active lease on the blob must match."
    name: "leaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId)"
  returns:
    description: "A reactive response signalling completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse(com.azure.storage.blob.options.BlobSetAccessTierOptions)"
  fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse(BlobSetAccessTierOptions options)"
  name: "setAccessTierWithResponse(BlobSetAccessTierOptions options)"
  nameWithType: "BlobAsyncClientBase.setAccessTierWithResponse(BlobSetAccessTierOptions options)"
  summary: "Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag.\n\n**Code Samples**\n\n```java\nclient.setAccessTierWithResponse(new BlobSetAccessTierOptions(AccessTier.HOT)\n     .setPriority(RehydratePriority.STANDARD)\n     .setLeaseId(leaseId)\n     .setTagsConditions(tags))\n     .subscribe(response -> System.out.printf(\"Set tier completed with status code %d%n\",\n         response.getStatusCode()));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobSetAccessTierOptions\" data-throw-if-not-resolved=\"false\">BlobSetAccessTierOptions</xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobSetAccessTierOptions?alt=com.azure.storage.blob.options.BlobSetAccessTierOptions&text=BlobSetAccessTierOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> setAccessTierWithResponse(BlobSetAccessTierOptions options)"
  returns:
    description: "A reactive response signalling completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
