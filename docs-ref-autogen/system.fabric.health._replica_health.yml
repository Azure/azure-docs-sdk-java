items:
- uid: system.fabric.health._replica_health
  id: _replica_health
  parent: system.fabric.health
  children:
  - system.fabric.health._replica_health.getId()
  - system.fabric.health._replica_health.getKind()
  - system.fabric.health._replica_health.getPartitionId()
  href: system.fabric.health._replica_health.yml
  langs:
  - java
  name: ReplicaHealth
  nameWithType: ReplicaHealth
  fullName: system.fabric.health.ReplicaHealth
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ReplicaHealth.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ReplicaHealth.java
    startLine: 11
  package: system.fabric.health
  summary: <p>Describes the health of a stateful service replica or a stateless service instance as returned by <xref href="system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription)" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ReplicaHealth extends EntityHealth
  inheritance:
  - java.lang.Object
  - system.fabric.health._entity_health
  inheritedMembers:
  - system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  - system.fabric.health._entity_health.getAggregatedHealthState()
  - system.fabric.health._entity_health.getHealthEvents()
  - system.fabric.health._entity_health.getUnhealthyEvaluations()
  - system.fabric.health._replica_health.ReplicaHealth(int,int,ServiceKind,UUID,List<HealthEvent>,List<HealthEvaluation>)
- uid: system.fabric.health._replica_health.getId()
  id: getId()
  parent: system.fabric.health._replica_health
  href: system.fabric.health._replica_health.yml
  langs:
  - java
  name: getId()
  nameWithType: ReplicaHealth.getId()
  fullName: long system.fabric.health.ReplicaHealth.getId()
  overload: system.fabric.health._replica_health.getId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ReplicaHealth.java
    startLine: 56
  package: system.fabric.health
  summary: >-
    <p>Gets the stateful replica ID or the stateless service instance ID.</p>

    <p></p>
  syntax:
    content: public long getId()
    return:
      type: 0364520f
      description: <p>The stateful replica ID or stateless instance ID. </p>
- uid: system.fabric.health._replica_health.getKind()
  id: getKind()
  parent: system.fabric.health._replica_health
  href: system.fabric.health._replica_health.yml
  langs:
  - java
  name: getKind()
  nameWithType: ReplicaHealth.getKind()
  fullName: ServiceKind system.fabric.health.ReplicaHealth.getKind()
  overload: system.fabric.health._replica_health.getKind*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ReplicaHealth.java
    startLine: 38
  package: system.fabric.health
  summary: >-
    <p>Gets the kind of the replica, either stateless or stateful. Based on this, the replica health can be converted to either <xref href="system.fabric.health._stateful_service_replica_health" data-throw-if-not-resolved="false"></xref> or <xref href="system.fabric.health._stateless_service_instance_health" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public ServiceKind getKind()
    return:
      type: system.fabric.query._service_kind
      description: <p>The service kind, which indicates whether the replica is stateful or stateless. </p>
- uid: system.fabric.health._replica_health.getPartitionId()
  id: getPartitionId()
  parent: system.fabric.health._replica_health
  href: system.fabric.health._replica_health.yml
  langs:
  - java
  name: getPartitionId()
  nameWithType: ReplicaHealth.getPartitionId()
  fullName: UUID system.fabric.health.ReplicaHealth.getPartitionId()
  overload: system.fabric.health._replica_health.getPartitionId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/ReplicaHealth.java
    startLine: 47
  package: system.fabric.health
  summary: >-
    <p>Gets the partition identifier.</p>

    <p></p>
  syntax:
    content: public UUID getPartitionId()
    return:
      type: add9545a
      description: <p>The partition ID. </p>
references:
- uid: system.fabric.health._replica_health.getKind*
  name: getKind
  nameWithType: ReplicaHealth.getKind
  fullName: ServiceKind system.fabric.health.ReplicaHealth.getKind
  package: system.fabric.health
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: system.fabric.health._replica_health.getPartitionId*
  name: getPartitionId
  nameWithType: ReplicaHealth.getPartitionId
  fullName: UUID system.fabric.health.ReplicaHealth.getPartitionId
  package: system.fabric.health
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric.health._replica_health.getId*
  name: getId
  nameWithType: ReplicaHealth.getId
  fullName: long system.fabric.health.ReplicaHealth.getId
  package: system.fabric.health
- uid: system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  nameWithType: EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  fullName: system.fabric.health.EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  type: Constructor
  syntax:
    content: protected EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
    parameters:
    - id: aggregatedHealthState
      type: f75371fa
    - id: healthEvents
      type: 5618da2dsystem.fabric.health._health_eventa08ddfce
    - id: unhealthyEvaluations
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
- uid: system.fabric.health._entity_health.getAggregatedHealthState()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getAggregatedHealthState()
  nameWithType: EntityHealth.getAggregatedHealthState()
  fullName: HealthState system.fabric.health.EntityHealth.getAggregatedHealthState()
  type: Method
  summary: >-
    <p>Gets the entity aggregated health state.</p>

    <p></p>
  syntax:
    content: public HealthState getAggregatedHealthState()
    return:
      type: system.fabric.health._health_state
      description: >-
        <p>

          <xref href="system.fabric.health._health_state" data-throw-if-not-resolved="false"></xref> representing the aggregated health state computed by Health Manager based on reported events on entity and its children (if any) and desired health policy. </p>
- uid: system.fabric.health._entity_health.getHealthEvents()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getHealthEvents()
  nameWithType: EntityHealth.getHealthEvents()
  fullName: List<HealthEvent> system.fabric.health.EntityHealth.getHealthEvents()
  type: Method
  summary: >-
    <p>Gets the health events reported on the entity.</p>

    <p>

      <bold>Remarks:</bold>The health events are created based on health reports sent to health store. They contain additional metadata added by health store. </p>
  syntax:
    content: public List<HealthEvent> getHealthEvents()
    return:
      type: 5618da2dsystem.fabric.health._health_eventa08ddfce
      description: <p>The health events reported on the entity. </p>
- uid: system.fabric.health._entity_health.getUnhealthyEvaluations()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getUnhealthyEvaluations()
  nameWithType: EntityHealth.getUnhealthyEvaluations()
  fullName: List<HealthEvaluation> system.fabric.health.EntityHealth.getUnhealthyEvaluations()
  type: Method
  summary: >-
    <p>Gets the unhealthy evaluations that show why the current aggregated health state was returned by Health Manager.</p>

    <p></p>
  syntax:
    content: public List<HealthEvaluation> getUnhealthyEvaluations()
    return:
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
      description: <p>The unhealthy evaluations that describe why the current aggregated health state was returned by Health Manager. </p>
- uid: system.fabric.health._replica_health.ReplicaHealth(int,int,ServiceKind,UUID,List<HealthEvent>,List<HealthEvaluation>)
- uid: system.fabric.health._entity_health
  parent: system.fabric.health
  href: system.fabric.health._entity_health.yml
  name: EntityHealth
  nameWithType: EntityHealth
  fullName: system.fabric.health.EntityHealth
  type: Class
  summary: <p>Represents the base class for all entity health related classes. </p>
  syntax:
    content: public class EntityHealth
- uid: system.fabric.health._stateful_service_replica_health
  parent: system.fabric.health
  href: system.fabric.health._stateful_service_replica_health.yml
  name: StatefulServiceReplicaHealth
  nameWithType: StatefulServiceReplicaHealth
  fullName: system.fabric.health.StatefulServiceReplicaHealth
  type: Class
  summary: <p>Describes the health of a stateful service replica as returned by <xref href="system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription)" data-throw-if-not-resolved="false"></xref> method. </p>
  syntax:
    content: public class StatefulServiceReplicaHealth
- uid: system.fabric.health._stateless_service_instance_health
  parent: system.fabric.health
  href: system.fabric.health._stateless_service_instance_health.yml
  name: StatelessServiceInstanceHealth
  nameWithType: StatelessServiceInstanceHealth
  fullName: system.fabric.health.StatelessServiceInstanceHealth
  type: Class
  summary: <p>Describes the health of a stateless service replica as returned by <xref href="system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription)" data-throw-if-not-resolved="false"></xref> method. </p>
  syntax:
    content: public class StatelessServiceInstanceHealth
- uid: system.fabric.query._service_kind
  parent: system.fabric.query
  href: system.fabric.query._service_kind.yml
  name: ServiceKind
  nameWithType: ServiceKind
  fullName: system.fabric.query.ServiceKind
  type: Enum
  summary: <p>Specifies the service kind. </p>
  syntax:
    content: public enum ServiceKind
- uid: system.fabric.health._health_event
  parent: system.fabric.health
  href: system.fabric.health._health_event.yml
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: system.fabric.health.HealthEvent
  type: Class
  summary: <p>A <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> object is a structure which contains the health information that is used while reporting health on an entity via ReportHealth API </p>
  syntax:
    content: public class HealthEvent
- uid: system.fabric.health._health_evaluation
  parent: system.fabric.health
  href: system.fabric.health._health_evaluation.yml
  name: HealthEvaluation
  nameWithType: HealthEvaluation
  fullName: system.fabric.health.HealthEvaluation
  type: Class
  summary: <p>Represents a health evaluation which describes the data and the algorithm used by health store to evaluate the health of an entity. </p>
  syntax:
    content: public class HealthEvaluation
- uid: system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription)
  parent: system.fabric._health_client
  href: system.fabric._health_client.yml
  name: getReplicaHealthAsync(ReplicaHealthQueryDescription queryDescription)
  nameWithType: HealthClient.getReplicaHealthAsync(ReplicaHealthQueryDescription queryDescription)
  fullName: CompletableFuture<ReplicaHealth> system.fabric.HealthClient.getReplicaHealthAsync(ReplicaHealthQueryDescription queryDescription)
  type: Method
  summary: >-
    <p>Asynchronously gets the health of a Service Fabric replica.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ReplicaHealth> getReplicaHealthAsync(ReplicaHealthQueryDescription queryDescription)
    parameters:
    - id: queryDescription
      type: system.fabric._replica_health_query_description
      description: <p>The query description. </p>
    return:
      type: 9cdf14d0system.fabric.health._replica_healtha08ddfce
      description: <p>The health of a Service Fabric replica. </p>
