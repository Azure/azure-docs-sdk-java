### YamlMime:JavaMember
uid: "com.azure.digitaltwins.core.models.CreateOrReplaceRelationshipOptions.setIfNoneMatch*"
fullName: "com.azure.digitaltwins.core.models.CreateOrReplaceRelationshipOptions.setIfNoneMatch"
name: "setIfNoneMatch"
nameWithType: "CreateOrReplaceRelationshipOptions.setIfNoneMatch"
members:
- uid: "com.azure.digitaltwins.core.models.CreateOrReplaceRelationshipOptions.setIfNoneMatch(java.lang.String)"
  fullName: "com.azure.digitaltwins.core.models.CreateOrReplaceRelationshipOptions.setIfNoneMatch(String ifNoneMatch)"
  name: "setIfNoneMatch(String ifNoneMatch)"
  nameWithType: "CreateOrReplaceRelationshipOptions.setIfNoneMatch(String ifNoneMatch)"
  summary: "Set the ifNoneMatch property. If-Non-Match header makes the request method conditional on a recipient cache or origin server either not having any current representation of the target resource. Acceptable values are null or \"\\*\". If IfNonMatch option is null the service will replace the existing entity with the new entity. If IfNonMatch option is \"\\*\" the service will reject the request if the entity already exists."
  parameters:
  - description: "the ifNoneMatch value to set."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateOrReplaceRelationshipOptions setIfNoneMatch(String ifNoneMatch)"
  returns:
    description: "the CreateOrReplaceRelationshipOptions object itself."
    type: "<xref href=\"com.azure.digitaltwins.core.models.CreateOrReplaceRelationshipOptions?alt=com.azure.digitaltwins.core.models.CreateOrReplaceRelationshipOptions&text=CreateOrReplaceRelationshipOptions\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.digitaltwins.core.models"
artifact: com.azure:azure-digitaltwins-core:1.0.1
