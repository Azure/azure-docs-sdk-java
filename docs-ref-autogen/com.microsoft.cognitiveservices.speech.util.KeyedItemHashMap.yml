### YamlMime:JavaType
uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap"
fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>"
name: "KeyedItemHashMap<T>"
nameWithType: "KeyedItemHashMap<T>"
summary: "Hash table based implementation of the `Map` interface."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **KeyedItemHashMap<T>**</br> implements <xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.KeyedItemHashMap()"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.KeyedItemHashMap()"
  name: "KeyedItemHashMap()"
  nameWithType: "KeyedItemHashMap<T>.KeyedItemHashMap()"
  summary: "Constructs an empty Hash<wbr>Map with the default initial capacity (16) and the default load factor (0.75)."
  syntax: "public KeyedItemHashMap()"
  desc: "Constructs an empty HashMap with the default initial capacity (16) and the default load factor (0.75)."
methods:
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.clear()"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.clear()"
  name: "clear()"
  nameWithType: "KeyedItemHashMap<T>.clear()"
  summary: "Removes all of the mappings from this map."
  syntax: "public void clear()"
  desc: "Removes all of the mappings from this map. The map will be empty after this call returns."
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.containsKey(java.lang.Object)"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.containsKey(Object key)"
  name: "containsKey(Object key)"
  nameWithType: "KeyedItemHashMap<T>.containsKey(Object key)"
  summary: "Returns `true` if this map contains a mapping for the specified key."
  parameters:
  - description: "The key whose presence in this map is to be tested."
    name: "key"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean containsKey(Object key)"
  desc: "Returns `true` if this map contains a mapping for the specified key."
  returns:
    description: "<code>true</code> if this map contains a mapping for the specified key."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.containsValue(java.lang.Object)"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.containsValue(Object keyedItem)"
  name: "containsValue(Object keyedItem)"
  nameWithType: "KeyedItemHashMap<T>.containsValue(Object keyedItem)"
  summary: "Returns `true` if this map maps a key to the specified value."
  parameters:
  - description: "value whose presence in this map is to be tested."
    name: "keyedItem"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean containsValue(Object keyedItem)"
  desc: "Returns `true` if this map maps a key to the specified value."
  returns:
    description: "<code>true</code> if this map maps the value to an id of an item."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.entrySet()"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.entrySet()"
  name: "entrySet()"
  nameWithType: "KeyedItemHashMap<T>.entrySet()"
  summary: "Returns a `Set` view of the mappings contained in this map."
  syntax: "public Set<Map.Entry<String,T>> entrySet()"
  desc: "Returns a `Set` view of the mappings contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator's own `remove` operation, or through the `setValue` operation on a map entry returned by the iterator) the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the `Iterator.remove`, `Set.remove`, `removeAll`, `retainAll` and `clear` operations. It does not support the `add` or `addAll` operations."
  returns:
    description: "a set view of the mappings contained in this map"
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map.Entry?alt=java.util.Map.Entry&text=Entry\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.get(java.lang.Object)"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.get(Object obj)"
  name: "get(Object obj)"
  nameWithType: "KeyedItemHashMap<T>.get(Object obj)"
  summary: "Returns the string representation of the `Object` argument."
  parameters:
  - description: "an <code>Object</code>."
    name: "obj"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public T get(Object obj)"
  desc: "Returns the string representation of the `Object` argument."
  returns:
    description: "if the argument is <code>null</code>, then a string equal to\n          <code>\"null\"</code>; otherwise, the value of\n          <code>obj.toString()</code> is returned."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.isEmpty()"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.isEmpty()"
  name: "isEmpty()"
  nameWithType: "KeyedItemHashMap<T>.isEmpty()"
  summary: "Returns `true` if this map contains no key-value mappings."
  syntax: "public boolean isEmpty()"
  desc: "Returns `true` if this map contains no key-value mappings."
  returns:
    description: "<code>true</code> if this map contains no key-value mappings."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.keySet()"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.keySet()"
  name: "keySet()"
  nameWithType: "KeyedItemHashMap<T>.keySet()"
  summary: "Returns a `Set` view of the keys contained in this map."
  syntax: "public Set<String> keySet()"
  desc: "Returns a `Set` view of the keys contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator's own `remove` operation), the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the `Iterator.remove`, `Set.remove`, `removeAll`, `retainAll`, and `clear` operations. It does not support the `add` or `addAll` operations."
  returns:
    description: "a set view of the keys contained in this map"
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.put(T)"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.put(T keyedItem)"
  name: "put(T keyedItem)"
  nameWithType: "KeyedItemHashMap<T>.put(T keyedItem)"
  summary: "Associates the specified value with the keyed<wbr>Item's ID in this map."
  parameters:
  - description: "Value that implements the KeyedItem interface. The getId() function will\n be used to determine the key for the map."
    name: "keyedItem"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public T put(T keyedItem)"
  desc: "Associates the specified value with the keyedItem's ID in this map. If the map previously contained a mapping for the keyedItem's ID, the old value is replaced."
  returns:
    description: "the previous value associated with <code>keyedItem.getId()</code>, or\n         <code>null</code> if there was no mapping for <code>keyedItem.getId()</code>.\n         (A <code>null</code> return can also indicate that the map\n         previously associated <code>null</code> with <code>keyedItem.getId()</code>.)"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.put(java.lang.String,T)"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.put(String key, T keyedItem)"
  name: "put(String key, T keyedItem)"
  nameWithType: "KeyedItemHashMap<T>.put(String key, T keyedItem)"
  summary: "Associates the specified value with the keyed<wbr>Item's ID in this map."
  parameters:
  - description: "UNUSED here but necessary for override."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Value that implements the KeyedItem interface. The getId() function will\n be used to determine the key for the map."
    name: "keyedItem"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public T put(String key, T keyedItem)"
  desc: "Associates the specified value with the keyedItem's ID in this map. If the map previously contained a mapping for the keyedItem's ID, the old value is replaced."
  returns:
    description: "the previous value associated with <code>keyedItem.getId()</code>, or\n         <code>null</code> if there was no mapping for <code>keyedItem.getId()</code>.\n         (A <code>null</code> return can also indicate that the map\n         previously associated <code>null</code> with <code>keyedItem.getId()</code>.)"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.putAll(java.util.Map<? extends java.lang.String,? extends T>)"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.putAll(Map<? extends String,? extends T> map)"
  name: "putAll(Map<? extends String,? extends T> map)"
  nameWithType: "KeyedItemHashMap<T>.putAll(Map<? extends String,? extends T> map)"
  summary: "Copies all of the mappings from the specified map to this map."
  parameters:
  - description: "mappings to be stored in this map"
    name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends java.lang.String?alt=? extends java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"? extends T?alt=? extends T&text=? extends T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void putAll(Map<? extends String,? extends T> map)"
  desc: "Copies all of the mappings from the specified map to this map. These mappings will replace any mappings that this map had for any of the keys currently in the specified map."
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.remove(java.lang.Object)"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.remove(Object keyedItem)"
  name: "remove(Object keyedItem)"
  nameWithType: "KeyedItemHashMap<T>.remove(Object keyedItem)"
  summary: "Removes the mapping for the specified keyed<wbr>Item's ID from this map if present."
  parameters:
  - description: "KeyedItem whose mapping is to be removed from the map."
    name: "keyedItem"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public T remove(Object keyedItem)"
  desc: "Removes the mapping for the specified keyedItem's ID from this map if present."
  returns:
    description: "the previous value associated with <code>keyedItem.getId()</code>, or\n         <code>null</code> if there was no mapping for <code>keyedItem.getId()</code>.\n         (A <code>null</code> return can also indicate that the map\n         previously associated <code>null</code> with <code>keyedItem.getId()</code>.)"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.size()"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.size()"
  name: "size()"
  nameWithType: "KeyedItemHashMap<T>.size()"
  summary: "Returns the number of key-value mappings in this map."
  syntax: "public int size()"
  desc: "Returns the number of key-value mappings in this map."
  returns:
    description: "The number of key-value mappings in this map."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap.values()"
  fullName: "com.microsoft.cognitiveservices.speech.util.KeyedItemHashMap<T>.values()"
  name: "values()"
  nameWithType: "KeyedItemHashMap<T>.values()"
  summary: "Returns a `Collection` view of the values contained in this map."
  syntax: "public Collection<T> values()"
  desc: "Returns a `Collection` view of the values contained in this map. The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. If the map is modified while an iteration over the collection is in progress (except through the iterator's own `remove` operation), the results of the iteration are undefined. The collection supports element removal, which removes the corresponding mapping from the map, via the `Iterator.remove`, `Collection.remove`, `removeAll`, `retainAll` and `clear` operations. It does not support the `add` or `addAll` operations."
  returns:
    description: "a view of the values contained in this map"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
typeParameters:
- name: "T"
desc: "Hash table based implementation of the `Map` interface. This implementation provides all of the optional map operations, and permits `null` values and the `null` key. (The `HashMap` class is roughly equivalent to `Hashtable`, except that it is unsynchronized and permits nulls.) This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time. Unlike a typical hash map, this implementation uses KeyedItem's as the value. A KeyedItem must implement the `KeyedItem` interface and provide a unique ID to avoid collisions within the map. For more details see the `HashMap` class."
implements:
- "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.cognitiveservices.speech.util"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.24.2
