### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.fluentcore.utils.ListToMapConverter"
fullName: "com.microsoft.azure.management.resources.fluentcore.utils.ListToMapConverter<ImplT,InnerT>"
name: "ListToMapConverter<ImplT,InnerT>"
nameWithType: "ListToMapConverter<ImplT,InnerT>"
summary: "Utility class to convert a list of inners to map of implementation."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class ListToMapConverter<ImplT,InnerT>"
constructors:
- "com.microsoft.azure.management.resources.fluentcore.utils.ListToMapConverter.ListToMapConverter()"
methods:
- "com.microsoft.azure.management.resources.fluentcore.utils.ListToMapConverter.convertToUnmodifiableMap(java.util.List<InnerT>)"
- "com.microsoft.azure.management.resources.fluentcore.utils.ListToMapConverter.impl(InnerT)"
- "com.microsoft.azure.management.resources.fluentcore.utils.ListToMapConverter.name(InnerT)"
type: "class"
typeParameters:
- description: "implementation of the interface"
  name: "ImplT"
- description: "inner class which needs to be wrapped"
  name: "InnerT"
desc: "Utility class to convert a list of inners to map of implementation."
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.utils"
artifact: com.microsoft.azure:azure-mgmt-resources:1.41.4
