### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.PatchRouteFilter"
fullName: "com.microsoft.azure.management.network.PatchRouteFilter"
name: "PatchRouteFilter"
nameWithType: "PatchRouteFilter"
summary: "Route Filter Resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.SubResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.SubResource.id()"
- "com.microsoft.azure.SubResource.withId(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class PatchRouteFilter extends SubResource"
constructors:
- uid: "com.microsoft.azure.management.network.PatchRouteFilter.PatchRouteFilter()"
  fullName: "com.microsoft.azure.management.network.PatchRouteFilter.PatchRouteFilter()"
  name: "PatchRouteFilter()"
  nameWithType: "PatchRouteFilter.PatchRouteFilter()"
  syntax: "public PatchRouteFilter()"
methods:
- uid: "com.microsoft.azure.management.network.PatchRouteFilter.etag()"
  fullName: "com.microsoft.azure.management.network.PatchRouteFilter.etag()"
  name: "etag()"
  nameWithType: "PatchRouteFilter.etag()"
  summary: "Get a unique read-only string that changes whenever the resource is updated."
  syntax: "public String etag()"
  desc: "Get a unique read-only string that changes whenever the resource is updated."
  returns:
    description: "the etag value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.PatchRouteFilter.ipv6Peerings()"
  fullName: "com.microsoft.azure.management.network.PatchRouteFilter.ipv6Peerings()"
  name: "ipv6Peerings()"
  nameWithType: "PatchRouteFilter.ipv6Peerings()"
  summary: "Get a collection of references to express route circuit ipv6 peerings."
  syntax: "public List<ExpressRouteCircuitPeeringInner> ipv6Peerings()"
  desc: "Get a collection of references to express route circuit ipv6 peerings."
  returns:
    description: "the ipv6Peerings value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.implementation.ExpressRouteCircuitPeeringInner?alt=com.microsoft.azure.management.network.implementation.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.PatchRouteFilter.name()"
  fullName: "com.microsoft.azure.management.network.PatchRouteFilter.name()"
  name: "name()"
  nameWithType: "PatchRouteFilter.name()"
  summary: "Get the name of the resource that is unique within a resource group."
  syntax: "public String name()"
  desc: "Get the name of the resource that is unique within a resource group. This name can be used to access the resource."
  returns:
    description: "the name value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.PatchRouteFilter.peerings()"
  fullName: "com.microsoft.azure.management.network.PatchRouteFilter.peerings()"
  name: "peerings()"
  nameWithType: "PatchRouteFilter.peerings()"
  summary: "Get a collection of references to express route circuit peerings."
  syntax: "public List<ExpressRouteCircuitPeeringInner> peerings()"
  desc: "Get a collection of references to express route circuit peerings."
  returns:
    description: "the peerings value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.implementation.ExpressRouteCircuitPeeringInner?alt=com.microsoft.azure.management.network.implementation.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.PatchRouteFilter.provisioningState()"
  fullName: "com.microsoft.azure.management.network.PatchRouteFilter.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PatchRouteFilter.provisioningState()"
  summary: "Get the provisioning state of the route filter resource."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioning state of the route filter resource. Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'."
  returns:
    description: "the provisioningState value"
    type: "<xref href=\"com.microsoft.azure.management.network.ProvisioningState?alt=com.microsoft.azure.management.network.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.PatchRouteFilter.rules()"
  fullName: "com.microsoft.azure.management.network.PatchRouteFilter.rules()"
  name: "rules()"
  nameWithType: "PatchRouteFilter.rules()"
  summary: "Get collection of Route<wbr>Filter<wbr>Rules contained within a route filter."
  syntax: "public List<RouteFilterRuleInner> rules()"
  desc: "Get collection of RouteFilterRules contained within a route filter."
  returns:
    description: "the rules value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.implementation.RouteFilterRuleInner?alt=com.microsoft.azure.management.network.implementation.RouteFilterRuleInner&text=RouteFilterRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.PatchRouteFilter.tags()"
  fullName: "com.microsoft.azure.management.network.PatchRouteFilter.tags()"
  name: "tags()"
  nameWithType: "PatchRouteFilter.tags()"
  summary: "Get resource tags."
  syntax: "public Map<String,String> tags()"
  desc: "Get resource tags."
  returns:
    description: "the tags value"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.PatchRouteFilter.type()"
  fullName: "com.microsoft.azure.management.network.PatchRouteFilter.type()"
  name: "type()"
  nameWithType: "PatchRouteFilter.type()"
  summary: "Get resource type."
  syntax: "public String type()"
  desc: "Get resource type."
  returns:
    description: "the type value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.PatchRouteFilter.withRules(java.util.List<com.microsoft.azure.management.network.implementation.RouteFilterRuleInner>)"
  fullName: "com.microsoft.azure.management.network.PatchRouteFilter.withRules(List<RouteFilterRuleInner> rules)"
  name: "withRules(List<RouteFilterRuleInner> rules)"
  nameWithType: "PatchRouteFilter.withRules(List<RouteFilterRuleInner> rules)"
  summary: "Set collection of Route<wbr>Filter<wbr>Rules contained within a route filter."
  parameters:
  - description: "the rules value to set"
    name: "rules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.implementation.RouteFilterRuleInner?alt=com.microsoft.azure.management.network.implementation.RouteFilterRuleInner&text=RouteFilterRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PatchRouteFilter withRules(List<RouteFilterRuleInner> rules)"
  desc: "Set collection of RouteFilterRules contained within a route filter."
  returns:
    description: "the PatchRouteFilter object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.PatchRouteFilter?alt=com.microsoft.azure.management.network.PatchRouteFilter&text=PatchRouteFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.PatchRouteFilter.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.microsoft.azure.management.network.PatchRouteFilter.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "PatchRouteFilter.withTags(Map<String,String> tags)"
  summary: "Set resource tags."
  parameters:
  - description: "the tags value to set"
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PatchRouteFilter withTags(Map<String,String> tags)"
  desc: "Set resource tags."
  returns:
    description: "the PatchRouteFilter object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.PatchRouteFilter?alt=com.microsoft.azure.management.network.PatchRouteFilter&text=PatchRouteFilter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Route Filter Resource."
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
