### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.elasticdb.shard.base.IShardProvider<ValueT>.getShardInfo()
  name: getShardInfo()
  nameWithType: IShardProvider<ValueT>.getShardInfo()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  summary: <p>Shard for the ShardProvider object. </p>
  syntax: public Shard getShardInfo()
  uid: com.microsoft.azure.elasticdb.shard.base.IShardProvider.getShardInfo()
- fullName: com.microsoft.azure.elasticdb.shard.base.IShardProvider<ValueT>.getValue()
  name: getValue()
  nameWithType: IShardProvider<ValueT>.getValue()
  returns:
    type: <xref href="ValueT?alt=ValueT&text=ValueT" data-throw-if-not-resolved="False"/>
  summary: <p>Value corresponding to the Shard. Represents traits of the Shard object provided by the ShardInfo property. </p>
  syntax: public ValueT getValue()
  uid: com.microsoft.azure.elasticdb.shard.base.IShardProvider.getValue()
- fullName: com.microsoft.azure.elasticdb.shard.base.IShardProvider<ValueT>.validate(StoreShardMap shardMap, Connection conn)
  name: validate(StoreShardMap shardMap, Connection conn)
  nameWithType: IShardProvider<ValueT>.validate(StoreShardMap shardMap, Connection conn)
  parameters:
  - description: <p>Shard map to which the shard provider belongs. </p>
    name: shardMap
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreShardMap?alt=com.microsoft.azure.elasticdb.shard.store.StoreShardMap&text=StoreShardMap" data-throw-if-not-resolved="False"/>
  - description: <p>Connection used for validation. </p>
    name: conn
    type: <xref href="Connection?alt=Connection&text=Connection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Performs validation that the local representation is as up-to-date as the representation on the backing data store.</p>

    <p></p>
  syntax: public void validate(StoreShardMap shardMap, Connection conn)
  uid: com.microsoft.azure.elasticdb.shard.base.IShardProvider.validate(StoreShardMap,Connection)
- fullName: com.microsoft.azure.elasticdb.shard.base.IShardProvider<ValueT>.validateAsync(StoreShardMap shardMap, Connection conn)
  name: validateAsync(StoreShardMap shardMap, Connection conn)
  nameWithType: IShardProvider<ValueT>.validateAsync(StoreShardMap shardMap, Connection conn)
  parameters:
  - description: <p>Shard map to which the shard provider belongs. </p>
    name: shardMap
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreShardMap?alt=com.microsoft.azure.elasticdb.shard.store.StoreShardMap&text=StoreShardMap" data-throw-if-not-resolved="False"/>
  - description: <p>Connection used for validation. </p>
    name: conn
    type: <xref href="Connection?alt=Connection&text=Connection" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task to await validation completion </p>
    type: <xref href="Callable?alt=Callable&text=Callable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously performs validation that the local representation is as up-to-date as the representation on the backing data store.</p>

    <p></p>
  syntax: public Callable validateAsync(StoreShardMap shardMap, Connection conn)
  uid: com.microsoft.azure.elasticdb.shard.base.IShardProvider.validateAsync(StoreShardMap,Connection)
nameWithType: IShardProvider<ValueT>
syntax: public interface IShardProvider<ValueT>
type: interface
typeParameters:
- name: ValueT
uid: com.microsoft.azure.elasticdb.shard.base.IShardProvider
fullName: com.microsoft.azure.elasticdb.shard.base.IShardProvider<ValueT>
name: IShardProvider<ValueT>
package: com.microsoft.azure.elasticdb.shard.base
summary: <p>Represents capabilities to provide a Shard along with an associated value. </p>
metadata: {}
