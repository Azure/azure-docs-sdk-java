### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils"
  id: "DataLakeImplUtils"
  parent: "com.azure.storage.file.datalake.implementation.util"
  children:
  - "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.<T>returnOrConvertException(java.util.function.Supplier<T>,com.azure.core.util.logging.ClientLogger)"
  - "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.DataLakeImplUtils()"
  - "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.endpointToDesiredEndpoint(java.lang.String,java.lang.String,java.lang.String)"
  - "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.transformBlobStorageException(java.lang.Throwable)"
  langs:
  - "java"
  name: "DataLakeImplUtils"
  nameWithType: "DataLakeImplUtils"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils"
  type: "Class"
  package: "com.azure.storage.file.datalake.implementation.util"
  syntax:
    content: "public class DataLakeImplUtils"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.<T>returnOrConvertException(java.util.function.Supplier<T>,com.azure.core.util.logging.ClientLogger)"
  id: "<T>returnOrConvertException(java.util.function.Supplier<T>,com.azure.core.util.logging.ClientLogger)"
  parent: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils"
  langs:
  - "java"
  name: "<T>returnOrConvertException(Supplier<T> supplier, ClientLogger logger)"
  nameWithType: "DataLakeImplUtils.<T>returnOrConvertException(Supplier<T> supplier, ClientLogger logger)"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.<T>returnOrConvertException(Supplier<T> supplier, ClientLogger logger)"
  overload: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.returnOrConvertException*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.util"
  syntax:
    content: "public static T <T>returnOrConvertException(Supplier<T> supplier, ClientLogger logger)"
    parameters:
    - id: "supplier"
      type: "java.util.function.Supplier<T>"
    - id: "logger"
      type: "com.azure.core.util.logging.ClientLogger"
    return:
      type: "T"
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.DataLakeImplUtils()"
  id: "DataLakeImplUtils()"
  parent: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils"
  langs:
  - "java"
  name: "DataLakeImplUtils()"
  nameWithType: "DataLakeImplUtils.DataLakeImplUtils()"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.DataLakeImplUtils()"
  overload: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.DataLakeImplUtils*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.implementation.util"
  syntax:
    content: "public DataLakeImplUtils()"
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.endpointToDesiredEndpoint(java.lang.String,java.lang.String,java.lang.String)"
  id: "endpointToDesiredEndpoint(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils"
  langs:
  - "java"
  name: "endpointToDesiredEndpoint(String endpoint, String desiredEndpoint, String currentEndpoint)"
  nameWithType: "DataLakeImplUtils.endpointToDesiredEndpoint(String endpoint, String desiredEndpoint, String currentEndpoint)"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.endpointToDesiredEndpoint(String endpoint, String desiredEndpoint, String currentEndpoint)"
  overload: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.endpointToDesiredEndpoint*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.util"
  syntax:
    content: "public static String endpointToDesiredEndpoint(String endpoint, String desiredEndpoint, String currentEndpoint)"
    parameters:
    - id: "endpoint"
      type: "java.lang.String"
    - id: "desiredEndpoint"
      type: "java.lang.String"
    - id: "currentEndpoint"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.transformBlobStorageException(java.lang.Throwable)"
  id: "transformBlobStorageException(java.lang.Throwable)"
  parent: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils"
  langs:
  - "java"
  name: "transformBlobStorageException(Throwable ex)"
  nameWithType: "DataLakeImplUtils.transformBlobStorageException(Throwable ex)"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.transformBlobStorageException(Throwable ex)"
  overload: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.transformBlobStorageException*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.util"
  syntax:
    content: "public static Throwable transformBlobStorageException(Throwable ex)"
    parameters:
    - id: "ex"
      type: "java.lang.Throwable"
    return:
      type: "java.lang.Throwable"
references:
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.DataLakeImplUtils*"
  name: "DataLakeImplUtils"
  nameWithType: "DataLakeImplUtils.DataLakeImplUtils"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.DataLakeImplUtils"
  package: "com.azure.storage.file.datalake.implementation.util"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.endpointToDesiredEndpoint*"
  name: "endpointToDesiredEndpoint"
  nameWithType: "DataLakeImplUtils.endpointToDesiredEndpoint"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.endpointToDesiredEndpoint"
  package: "com.azure.storage.file.datalake.implementation.util"
- uid: "java.lang.Throwable"
  spec.java:
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.transformBlobStorageException*"
  name: "transformBlobStorageException"
  nameWithType: "DataLakeImplUtils.transformBlobStorageException"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.transformBlobStorageException"
  package: "com.azure.storage.file.datalake.implementation.util"
- uid: "java.util.function.Supplier<T>"
  spec.java:
  - uid: "java.util.function.Supplier"
    name: "Supplier"
    fullName: "java.util.function.Supplier"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.util.logging.ClientLogger"
  spec.java:
  - uid: "com.azure.core.util.logging.ClientLogger"
    name: "ClientLogger"
    fullName: "com.azure.core.util.logging.ClientLogger"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.returnOrConvertException*"
  name: "<T>returnOrConvertException"
  nameWithType: "DataLakeImplUtils.<T>returnOrConvertException"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.<T>returnOrConvertException"
  package: "com.azure.storage.file.datalake.implementation.util"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.function.Supplier"
  name: "Supplier"
  nameWithType: "Supplier"
  fullName: "java.util.function.Supplier"
