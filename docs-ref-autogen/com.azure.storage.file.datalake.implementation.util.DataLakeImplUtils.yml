### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils"
fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils"
name: "DataLakeImplUtils"
nameWithType: "DataLakeImplUtils"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DataLakeImplUtils"
constructors:
- "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.DataLakeImplUtils()"
methods:
- "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.<T>returnOrConvertException(java.util.function.Supplier<T>,com.azure.core.util.logging.ClientLogger)"
- "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.endpointToDesiredEndpoint(java.lang.String,java.lang.String,java.lang.String)"
- "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.transformBlobStorageException(java.lang.Throwable)"
type: "class"
metadata: {}
package: "com.azure.storage.file.datalake.implementation.util"
artifact: com.azure:azure-storage-file-datalake:12.4.1
