### YamlMime:JavaMember
uid: "com.azure.cosmos.models.CosmosQueryRequestOptions.setScanInQueryEnabled*"
fullName: "com.azure.cosmos.models.CosmosQueryRequestOptions.setScanInQueryEnabled"
name: "setScanInQueryEnabled"
nameWithType: "CosmosQueryRequestOptions.setScanInQueryEnabled"
members:
- uid: "com.azure.cosmos.models.CosmosQueryRequestOptions.setScanInQueryEnabled(java.lang.Boolean)"
  fullName: "com.azure.cosmos.models.CosmosQueryRequestOptions.setScanInQueryEnabled(Boolean scanInQueryEnabled)"
  name: "setScanInQueryEnabled(Boolean scanInQueryEnabled)"
  nameWithType: "CosmosQueryRequestOptions.setScanInQueryEnabled(Boolean scanInQueryEnabled)"
  summary: "Sets the option to allow scan on the queries which couldn't be served as indexing was opted out on the requested paths."
  parameters:
  - description: "the option of enable scan in query."
    name: "scanInQueryEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosQueryRequestOptions setScanInQueryEnabled(Boolean scanInQueryEnabled)"
  returns:
    description: "the CosmosQueryRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.11.0
