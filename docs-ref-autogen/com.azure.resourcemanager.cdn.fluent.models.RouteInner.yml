### YamlMime:JavaType
uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner"
fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner"
name: "RouteInner"
nameWithType: "RouteInner"
summary: "Friendly Routes name mapping to the any Routes or secret related information."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RouteInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.RouteInner()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.RouteInner()"
  name: "RouteInner()"
  nameWithType: "RouteInner.RouteInner()"
  syntax: "public RouteInner()"
methods:
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.cacheConfiguration()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.cacheConfiguration()"
  name: "cacheConfiguration()"
  nameWithType: "RouteInner.cacheConfiguration()"
  summary: "Get the cacheConfiguration property: The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object."
  syntax: "public AfdRouteCacheConfiguration cacheConfiguration()"
  returns:
    description: "the cacheConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.AfdRouteCacheConfiguration?alt=com.azure.resourcemanager.cdn.models.AfdRouteCacheConfiguration&text=AfdRouteCacheConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.customDomains()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.customDomains()"
  name: "customDomains()"
  nameWithType: "RouteInner.customDomains()"
  summary: "Get the customDomains property: Domains referenced by this endpoint."
  syntax: "public List<ActivatedResourceReference> customDomains()"
  returns:
    description: "the customDomains value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.models.ActivatedResourceReference?alt=com.azure.resourcemanager.cdn.models.ActivatedResourceReference&text=ActivatedResourceReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.deploymentStatus()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.deploymentStatus()"
  name: "deploymentStatus()"
  nameWithType: "RouteInner.deploymentStatus()"
  summary: "Get the deploymentStatus property: The deploymentStatus property."
  syntax: "public DeploymentStatus deploymentStatus()"
  returns:
    description: "the deploymentStatus value."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.DeploymentStatus?alt=com.azure.resourcemanager.cdn.models.DeploymentStatus&text=DeploymentStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.enabledState()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.enabledState()"
  name: "enabledState()"
  nameWithType: "RouteInner.enabledState()"
  summary: "Get the enabledState property: Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'."
  syntax: "public EnabledState enabledState()"
  returns:
    description: "the enabledState value."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.EnabledState?alt=com.azure.resourcemanager.cdn.models.EnabledState&text=EnabledState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.endpointName()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.endpointName()"
  name: "endpointName()"
  nameWithType: "RouteInner.endpointName()"
  summary: "Get the endpointName property: The name of the endpoint which holds the route."
  syntax: "public String endpointName()"
  returns:
    description: "the endpointName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.forwardingProtocol()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.forwardingProtocol()"
  name: "forwardingProtocol()"
  nameWithType: "RouteInner.forwardingProtocol()"
  summary: "Get the forwardingProtocol property: Protocol this rule will use when forwarding traffic to backends."
  syntax: "public ForwardingProtocol forwardingProtocol()"
  returns:
    description: "the forwardingProtocol value."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.ForwardingProtocol?alt=com.azure.resourcemanager.cdn.models.ForwardingProtocol&text=ForwardingProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.httpsRedirect()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.httpsRedirect()"
  name: "httpsRedirect()"
  nameWithType: "RouteInner.httpsRedirect()"
  summary: "Get the httpsRedirect property: Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed."
  syntax: "public HttpsRedirect httpsRedirect()"
  returns:
    description: "the httpsRedirect value."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.HttpsRedirect?alt=com.azure.resourcemanager.cdn.models.HttpsRedirect&text=HttpsRedirect\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.linkToDefaultDomain()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.linkToDefaultDomain()"
  name: "linkToDefaultDomain()"
  nameWithType: "RouteInner.linkToDefaultDomain()"
  summary: "Get the linkToDefaultDomain property: whether this route will be linked to the default endpoint domain."
  syntax: "public LinkToDefaultDomain linkToDefaultDomain()"
  returns:
    description: "the linkToDefaultDomain value."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.LinkToDefaultDomain?alt=com.azure.resourcemanager.cdn.models.LinkToDefaultDomain&text=LinkToDefaultDomain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.originGroup()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.originGroup()"
  name: "originGroup()"
  nameWithType: "RouteInner.originGroup()"
  summary: "Get the originGroup property: A reference to the origin group."
  syntax: "public ResourceReference originGroup()"
  returns:
    description: "the originGroup value."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.ResourceReference?alt=com.azure.resourcemanager.cdn.models.ResourceReference&text=ResourceReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.originPath()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.originPath()"
  name: "originPath()"
  nameWithType: "RouteInner.originPath()"
  summary: "Get the originPath property: A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath."
  syntax: "public String originPath()"
  returns:
    description: "the originPath value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.patternsToMatch()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.patternsToMatch()"
  name: "patternsToMatch()"
  nameWithType: "RouteInner.patternsToMatch()"
  summary: "Get the patternsToMatch property: The route patterns of the rule."
  syntax: "public List<String> patternsToMatch()"
  returns:
    description: "the patternsToMatch value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.provisioningState()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "RouteInner.provisioningState()"
  summary: "Get the provisioningState property: Provisioning status."
  syntax: "public AfdProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.AfdProvisioningState?alt=com.azure.resourcemanager.cdn.models.AfdProvisioningState&text=AfdProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.ruleSets()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.ruleSets()"
  name: "ruleSets()"
  nameWithType: "RouteInner.ruleSets()"
  summary: "Get the ruleSets property: rule sets referenced by this endpoint."
  syntax: "public List<ResourceReference> ruleSets()"
  returns:
    description: "the ruleSets value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.models.ResourceReference?alt=com.azure.resourcemanager.cdn.models.ResourceReference&text=ResourceReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.supportedProtocols()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.supportedProtocols()"
  name: "supportedProtocols()"
  nameWithType: "RouteInner.supportedProtocols()"
  summary: "Get the supportedProtocols property: List of supported protocols for this route."
  syntax: "public List<AfdEndpointProtocols> supportedProtocols()"
  returns:
    description: "the supportedProtocols value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.models.AfdEndpointProtocols?alt=com.azure.resourcemanager.cdn.models.AfdEndpointProtocols&text=AfdEndpointProtocols\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.systemData()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.systemData()"
  name: "systemData()"
  nameWithType: "RouteInner.systemData()"
  summary: "Get the systemData property: Read only system data."
  syntax: "public SystemData systemData()"
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.validate()"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.validate()"
  name: "validate()"
  nameWithType: "RouteInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withCacheConfiguration(com.azure.resourcemanager.cdn.models.AfdRouteCacheConfiguration)"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withCacheConfiguration(AfdRouteCacheConfiguration cacheConfiguration)"
  name: "withCacheConfiguration(AfdRouteCacheConfiguration cacheConfiguration)"
  nameWithType: "RouteInner.withCacheConfiguration(AfdRouteCacheConfiguration cacheConfiguration)"
  summary: "Set the cacheConfiguration property: The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object."
  parameters:
  - description: "the cacheConfiguration value to set."
    name: "cacheConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.AfdRouteCacheConfiguration?alt=com.azure.resourcemanager.cdn.models.AfdRouteCacheConfiguration&text=AfdRouteCacheConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouteInner withCacheConfiguration(AfdRouteCacheConfiguration cacheConfiguration)"
  returns:
    description: "the RouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.RouteInner?alt=com.azure.resourcemanager.cdn.fluent.models.RouteInner&text=RouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withCustomDomains(java.util.List<com.azure.resourcemanager.cdn.models.ActivatedResourceReference>)"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withCustomDomains(List<ActivatedResourceReference> customDomains)"
  name: "withCustomDomains(List<ActivatedResourceReference> customDomains)"
  nameWithType: "RouteInner.withCustomDomains(List<ActivatedResourceReference> customDomains)"
  summary: "Set the customDomains property: Domains referenced by this endpoint."
  parameters:
  - description: "the customDomains value to set."
    name: "customDomains"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.models.ActivatedResourceReference?alt=com.azure.resourcemanager.cdn.models.ActivatedResourceReference&text=ActivatedResourceReference\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RouteInner withCustomDomains(List<ActivatedResourceReference> customDomains)"
  returns:
    description: "the RouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.RouteInner?alt=com.azure.resourcemanager.cdn.fluent.models.RouteInner&text=RouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withEnabledState(com.azure.resourcemanager.cdn.models.EnabledState)"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withEnabledState(EnabledState enabledState)"
  name: "withEnabledState(EnabledState enabledState)"
  nameWithType: "RouteInner.withEnabledState(EnabledState enabledState)"
  summary: "Set the enabledState property: Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'."
  parameters:
  - description: "the enabledState value to set."
    name: "enabledState"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.EnabledState?alt=com.azure.resourcemanager.cdn.models.EnabledState&text=EnabledState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouteInner withEnabledState(EnabledState enabledState)"
  returns:
    description: "the RouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.RouteInner?alt=com.azure.resourcemanager.cdn.fluent.models.RouteInner&text=RouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withForwardingProtocol(com.azure.resourcemanager.cdn.models.ForwardingProtocol)"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withForwardingProtocol(ForwardingProtocol forwardingProtocol)"
  name: "withForwardingProtocol(ForwardingProtocol forwardingProtocol)"
  nameWithType: "RouteInner.withForwardingProtocol(ForwardingProtocol forwardingProtocol)"
  summary: "Set the forwardingProtocol property: Protocol this rule will use when forwarding traffic to backends."
  parameters:
  - description: "the forwardingProtocol value to set."
    name: "forwardingProtocol"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.ForwardingProtocol?alt=com.azure.resourcemanager.cdn.models.ForwardingProtocol&text=ForwardingProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouteInner withForwardingProtocol(ForwardingProtocol forwardingProtocol)"
  returns:
    description: "the RouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.RouteInner?alt=com.azure.resourcemanager.cdn.fluent.models.RouteInner&text=RouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withHttpsRedirect(com.azure.resourcemanager.cdn.models.HttpsRedirect)"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withHttpsRedirect(HttpsRedirect httpsRedirect)"
  name: "withHttpsRedirect(HttpsRedirect httpsRedirect)"
  nameWithType: "RouteInner.withHttpsRedirect(HttpsRedirect httpsRedirect)"
  summary: "Set the httpsRedirect property: Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed."
  parameters:
  - description: "the httpsRedirect value to set."
    name: "httpsRedirect"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.HttpsRedirect?alt=com.azure.resourcemanager.cdn.models.HttpsRedirect&text=HttpsRedirect\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouteInner withHttpsRedirect(HttpsRedirect httpsRedirect)"
  returns:
    description: "the RouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.RouteInner?alt=com.azure.resourcemanager.cdn.fluent.models.RouteInner&text=RouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withLinkToDefaultDomain(com.azure.resourcemanager.cdn.models.LinkToDefaultDomain)"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withLinkToDefaultDomain(LinkToDefaultDomain linkToDefaultDomain)"
  name: "withLinkToDefaultDomain(LinkToDefaultDomain linkToDefaultDomain)"
  nameWithType: "RouteInner.withLinkToDefaultDomain(LinkToDefaultDomain linkToDefaultDomain)"
  summary: "Set the linkToDefaultDomain property: whether this route will be linked to the default endpoint domain."
  parameters:
  - description: "the linkToDefaultDomain value to set."
    name: "linkToDefaultDomain"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.LinkToDefaultDomain?alt=com.azure.resourcemanager.cdn.models.LinkToDefaultDomain&text=LinkToDefaultDomain\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouteInner withLinkToDefaultDomain(LinkToDefaultDomain linkToDefaultDomain)"
  returns:
    description: "the RouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.RouteInner?alt=com.azure.resourcemanager.cdn.fluent.models.RouteInner&text=RouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withOriginGroup(com.azure.resourcemanager.cdn.models.ResourceReference)"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withOriginGroup(ResourceReference originGroup)"
  name: "withOriginGroup(ResourceReference originGroup)"
  nameWithType: "RouteInner.withOriginGroup(ResourceReference originGroup)"
  summary: "Set the originGroup property: A reference to the origin group."
  parameters:
  - description: "the originGroup value to set."
    name: "originGroup"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.ResourceReference?alt=com.azure.resourcemanager.cdn.models.ResourceReference&text=ResourceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouteInner withOriginGroup(ResourceReference originGroup)"
  returns:
    description: "the RouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.RouteInner?alt=com.azure.resourcemanager.cdn.fluent.models.RouteInner&text=RouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withOriginPath(java.lang.String)"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withOriginPath(String originPath)"
  name: "withOriginPath(String originPath)"
  nameWithType: "RouteInner.withOriginPath(String originPath)"
  summary: "Set the originPath property: A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath."
  parameters:
  - description: "the originPath value to set."
    name: "originPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouteInner withOriginPath(String originPath)"
  returns:
    description: "the RouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.RouteInner?alt=com.azure.resourcemanager.cdn.fluent.models.RouteInner&text=RouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withPatternsToMatch(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withPatternsToMatch(List<String> patternsToMatch)"
  name: "withPatternsToMatch(List<String> patternsToMatch)"
  nameWithType: "RouteInner.withPatternsToMatch(List<String> patternsToMatch)"
  summary: "Set the patternsToMatch property: The route patterns of the rule."
  parameters:
  - description: "the patternsToMatch value to set."
    name: "patternsToMatch"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RouteInner withPatternsToMatch(List<String> patternsToMatch)"
  returns:
    description: "the RouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.RouteInner?alt=com.azure.resourcemanager.cdn.fluent.models.RouteInner&text=RouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withRuleSets(java.util.List<com.azure.resourcemanager.cdn.models.ResourceReference>)"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withRuleSets(List<ResourceReference> ruleSets)"
  name: "withRuleSets(List<ResourceReference> ruleSets)"
  nameWithType: "RouteInner.withRuleSets(List<ResourceReference> ruleSets)"
  summary: "Set the ruleSets property: rule sets referenced by this endpoint."
  parameters:
  - description: "the ruleSets value to set."
    name: "ruleSets"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.models.ResourceReference?alt=com.azure.resourcemanager.cdn.models.ResourceReference&text=ResourceReference\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RouteInner withRuleSets(List<ResourceReference> ruleSets)"
  returns:
    description: "the RouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.RouteInner?alt=com.azure.resourcemanager.cdn.fluent.models.RouteInner&text=RouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withSupportedProtocols(java.util.List<com.azure.resourcemanager.cdn.models.AfdEndpointProtocols>)"
  fullName: "com.azure.resourcemanager.cdn.fluent.models.RouteInner.withSupportedProtocols(List<AfdEndpointProtocols> supportedProtocols)"
  name: "withSupportedProtocols(List<AfdEndpointProtocols> supportedProtocols)"
  nameWithType: "RouteInner.withSupportedProtocols(List<AfdEndpointProtocols> supportedProtocols)"
  summary: "Set the supportedProtocols property: List of supported protocols for this route."
  parameters:
  - description: "the supportedProtocols value to set."
    name: "supportedProtocols"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.models.AfdEndpointProtocols?alt=com.azure.resourcemanager.cdn.models.AfdEndpointProtocols&text=AfdEndpointProtocols\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RouteInner withSupportedProtocols(List<AfdEndpointProtocols> supportedProtocols)"
  returns:
    description: "the RouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.RouteInner?alt=com.azure.resourcemanager.cdn.fluent.models.RouteInner&text=RouteInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.cdn.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cdn:2.14.0
