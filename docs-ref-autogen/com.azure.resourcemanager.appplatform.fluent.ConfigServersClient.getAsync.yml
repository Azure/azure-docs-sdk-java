### YamlMime:JavaMember
uid: "com.azure.resourcemanager.appplatform.fluent.ConfigServersClient.getAsync*"
fullName: "com.azure.resourcemanager.appplatform.fluent.ConfigServersClient.getAsync"
name: "getAsync"
nameWithType: "ConfigServersClient.getAsync"
members:
- uid: "com.azure.resourcemanager.appplatform.fluent.ConfigServersClient.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.fluent.ConfigServersClient.getAsync(String resourceGroupName, String serviceName)"
  name: "getAsync(String resourceGroupName, String serviceName)"
  nameWithType: "ConfigServersClient.getAsync(String resourceGroupName, String serviceName)"
  summary: "Get the config server and its properties."
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Service resource."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ConfigServerResourceInner> getAsync(String resourceGroupName, String serviceName)"
  returns:
    description: "the config server and its properties."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.ConfigServerResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.ConfigServerResourceInner&text=ConfigServerResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.appplatform.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
