### YamlMime:ManagedReference
items:
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  id: MultipleAccountPublicClientApplication
  parent: com.microsoft.identity.client
  children:
  - com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@Nullable final String,@NonNull final AuthenticationCallback)
  - com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull String [],@NonNull IAccount,@NonNull String)
  - com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String [],@NonNull final IAccount,@NonNull final String,@NonNull final SilentAuthenticationCallback)
  - com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount(@NonNull final String,@NonNull final GetAccountCallback)
  - com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount(@NonNull String)
  - com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts()
  - com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback)
  - com.microsoft.identity.client.MultipleAccountPublicClientApplication.MultipleAccountPublicClientApplication(@NonNull PublicClientApplicationConfiguration)
  - com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount,@NonNull final RemoveAccountCallback)
  - com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount(@Nullable IAccount)
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: MultipleAccountPublicClientApplication
  nameWithType: MultipleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  type: Class
  source:
    remote: &o0
      path: msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java
      branch: master
      repo: https://github.com/AzureAD/microsoft-authentication-library-for-android
    path: msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java
    startLine: 58
  package: com.microsoft.identity.client
  syntax:
    content: public class MultipleAccountPublicClientApplication extends PublicClientApplication implements IMultipleAccountPublicClientApplication
  inheritance:
  - java.lang.Object
  - com.microsoft.identity.client.IPublicClientApplication
  - com.microsoft.identity.client.PublicClientApplication
  inheritedMembers:
  - com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  - com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  - com.microsoft.identity.client.PublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  - com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  - com.microsoft.identity.client.PublicClientApplication.acquireTokenWithDeviceCode(@Nullable String [],@NonNull final DeviceCodeFlowCallback)
  - com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String [],@NonNull final DeviceCodeFlowCallback)
  - com.microsoft.identity.client.PublicClientApplication.buildAcquireTokenSilentParameters(@NonNull final String [],@NonNull final IAccount,@NonNull final String,final boolean,@Nullable final ClaimsRequest,@NonNull final SilentAuthenticationCallback)
  - com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,final int,@NonNull final ApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,@NonNull final File,@NonNull final ApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,@NonNull final String,@Nullable final String,@NonNull final String,@NonNull final ApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,final int)
  - com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,final int,@NonNull final IMultipleAccountApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final File,@NonNull final IMultipleAccountApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final int)
  - com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final File)
  - com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,final int,@NonNull final ISingleAccountApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,@NonNull final File,@NonNull final ISingleAccountApplicationCreatedListener)
  - com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,final int)
  - com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,@Nullable final File)
  - com.microsoft.identity.client.PublicClientApplication.getCommandCallback(@NonNull final SilentAuthenticationCallback,@NonNull final TokenParameters)
  - com.microsoft.identity.client.PublicClientApplication.getConfiguration()
  - com.microsoft.identity.client.PublicClientApplication.getMsaFamilyRefreshToken(@NonNull final String)
  - com.microsoft.identity.client.ITokenShare.getMsaFamilyRefreshToken(String)
  - com.microsoft.identity.client.PublicClientApplication.getOrgIdFamilyRefreshToken(@NonNull final String)
  - com.microsoft.identity.client.ITokenShare.getOrgIdFamilyRefreshToken(String)
  - com.microsoft.identity.client.PublicClientApplication.getSdkVersion()
  - com.microsoft.identity.client.PublicClientApplication.homeAccountMatcher
  - com.microsoft.identity.client.PublicClientApplication.isSharedDevice()
  - com.microsoft.identity.client.PublicClientApplication.localAccountMatcher
  - com.microsoft.identity.client.PublicClientApplication.mPublicClientConfiguration
  - com.microsoft.identity.client.PublicClientApplication.mTokenShareUtility
  - com.microsoft.identity.client.PublicClientApplication.postAuthResult(@NonNull final ILocalAuthenticationResult,@NonNull final TokenParameters,@NonNull final SilentAuthenticationCallback)
  - com.microsoft.identity.client.PublicClientApplication.PublicClientApplication(@NonNull final PublicClientApplicationConfiguration)
  - com.microsoft.identity.client.PublicClientApplication.saveMsaFamilyRefreshToken(@NonNull final String)
  - com.microsoft.identity.client.ITokenShare.saveMsaFamilyRefreshToken(String)
  - com.microsoft.identity.client.PublicClientApplication.saveOrgIdFamilyRefreshToken(@NonNull final String)
  - com.microsoft.identity.client.ITokenShare.saveOrgIdFamilyRefreshToken(String)
  - com.microsoft.identity.client.PublicClientApplication.showExpectedMsalRedirectUriInfo(Activity)
  - com.microsoft.identity.client.PublicClientApplication.usernameMatcher
  - com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenParameters(AcquireTokenParameters)
  - com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenSilentParameters(AcquireTokenSilentParameters)
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@Nullable final String,@NonNull final AuthenticationCallback)
  id: acquireToken(@NonNull final Activity,@NonNull final String [],@Nullable final String,@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
  nameWithType: MultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
  overload: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java
    startLine: 448
  package: com.microsoft.identity.client
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Activity"></xref> that will be used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity"></xref>. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: loginHint
      type: b868e8dd
      description: <p>Optional. If provided, will be used as the query parameter sent for authenticating the user, which will have the UPN pre-populated. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: <p>The Non-null <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onCancel()"></xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onSuccess(IAuthenticationResult)"></xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onError(MsalException)"></xref>. </p>
  overridden: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@Nullable final String,@NonNull final AuthenticationCallback)
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull String [],@NonNull IAccount,@NonNull String)
  id: acquireTokenSilent(@NonNull String [],@NonNull IAccount,@NonNull String)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: acquireTokenSilent(@NonNull String[] scopes, @NonNull IAccount account, @NonNull String authority)
  nameWithType: MultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull String[] scopes, @NonNull IAccount account, @NonNull String authority)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull String[] scopes, @NonNull IAccount account, @NonNull String authority)
  overload: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilent*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java
    startLine: 67
  package: com.microsoft.identity.client
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent(@NonNull String[] scopes, @NonNull IAccount account, @NonNull String authority)
    parameters:
    - id: scopes
      type: 045b2b2f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: account
      type: 3872da22com.microsoft.identity.client.IAccount
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAccount" data-throw-if-not-resolved="false" data-raw-source="IAccount"></xref> represents the account to silently request tokens for. </p>
    - id: authority
      type: 3d663bb1
      description: <p>Authority to issue the token. </p>
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
  overridden: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String [],@NonNull final IAccount,@NonNull final String)
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String [],@NonNull final IAccount,@NonNull final String,@NonNull final SilentAuthenticationCallback)
  id: acquireTokenSilentAsync(@NonNull final String [],@NonNull final IAccount,@NonNull final String,@NonNull final SilentAuthenticationCallback)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  nameWithType: MultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  overload: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilentAsync*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java
    startLine: 72
  package: com.microsoft.identity.client
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
    parameters:
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: account
      type: d6b37550com.microsoft.identity.client.IAccount
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAccount" data-throw-if-not-resolved="false" data-raw-source="IAccount"></xref> represents the account to silently request tokens for. </p>
    - id: authority
      type: 8789feb4
      description: <p>Authority to issue the token. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="SilentAuthenticationCallback"></xref> that is used to send the result back. The success result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="SilentAuthenticationCallback#onSuccess(IAuthenticationResult)"></xref>. Failure case will be sent back via { <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="}. "></xref></p>
  overridden: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String [],@NonNull final IAccount,@NonNull final String,@NonNull final SilentAuthenticationCallback)
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount(@NonNull final String,@NonNull final GetAccountCallback)
  id: getAccount(@NonNull final String,@NonNull final GetAccountCallback)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
  nameWithType: MultipleAccountPublicClientApplication.getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
  overload: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java
    startLine: 190
  package: com.microsoft.identity.client
  summary: "<p>Retrieve the IAccount object matching the identifier. The identifier could be homeAccountIdentifier, localAccountIdentifier or username.</p>\r\n<p></p>"
  syntax:
    content: public void getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
    parameters:
    - id: identifier
      type: 8789feb4
      description: <p>String of the identifier </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
      description: <p>The callback to notify once this action has finished. </p>
  overridden: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount(@NonNull final String,@NonNull final GetAccountCallback)
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount(@NonNull String)
  id: getAccount(@NonNull String)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: getAccount(@NonNull String identifier)
  nameWithType: MultipleAccountPublicClientApplication.getAccount(@NonNull String identifier)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount(@NonNull String identifier)
  overload: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java
    startLine: 305
  package: com.microsoft.identity.client
  summary: "<p>Retrieve the IAccount object matching the identifier. The identifier could be homeAccountIdentifier, localAccountIdentifier or username.</p>\r\n<p></p>"
  syntax:
    content: public IAccount getAccount(@NonNull String identifier)
    parameters:
    - id: identifier
      type: 3d663bb1
      description: <p>String of the identifier </p>
    return:
      type: com.microsoft.identity.client.IAccount
  overridden: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount(@NonNull final String)
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts()
  id: getAccounts()
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: getAccounts()
  nameWithType: MultipleAccountPublicClientApplication.getAccounts()
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts()
  overload: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java
    startLine: 146
  package: com.microsoft.identity.client
  summary: "<p>Returns a List of <xref uid=\"com.microsoft.identity.client.IAccount\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAccount\"></xref> objects for which this application has RefreshTokens. </p>"
  syntax:
    content: public List<IAccount> getAccounts()
    return:
      type: 5618da2dcom.microsoft.identity.client.IAccounta08ddfce
  overridden: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts()
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback)
  id: getAccounts(@NonNull final LoadAccountsCallback)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: getAccounts(@NonNull final LoadAccountsCallback callback)
  nameWithType: MultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback callback)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback callback)
  overload: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java
    startLine: 94
  package: com.microsoft.identity.client
  summary: "<p>Asynchronously returns a List of <xref uid=\"com.microsoft.identity.client.IAccount\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAccount\"></xref> objects for which this application has RefreshTokens.</p>\r\n<p></p>"
  syntax:
    content: public void getAccounts(@NonNull final LoadAccountsCallback callback)
    parameters:
    - id: callback
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
      description: <p>The callback to notify once this action has finished. </p>
  overridden: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback)
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.MultipleAccountPublicClientApplication(@NonNull PublicClientApplicationConfiguration)
  id: MultipleAccountPublicClientApplication(@NonNull PublicClientApplicationConfiguration)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: MultipleAccountPublicClientApplication(@NonNull PublicClientApplicationConfiguration config)
  nameWithType: MultipleAccountPublicClientApplication.MultipleAccountPublicClientApplication(@NonNull PublicClientApplicationConfiguration config)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.MultipleAccountPublicClientApplication(@NonNull PublicClientApplicationConfiguration config)
  overload: com.microsoft.identity.client.MultipleAccountPublicClientApplication.MultipleAccountPublicClientApplication*
  type: Constructor
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java
    startLine: 62
  package: com.microsoft.identity.client
  syntax:
    content: protected MultipleAccountPublicClientApplication(@NonNull PublicClientApplicationConfiguration config)
    parameters:
    - id: config
      type: 3872da22com.microsoft.identity.client.PublicClientApplicationConfiguration
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount,@NonNull final RemoveAccountCallback)
  id: removeAccount(@Nullable final IAccount,@NonNull final RemoveAccountCallback)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
  nameWithType: MultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
  overload: com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java
    startLine: 342
  package: com.microsoft.identity.client
  summary: "<p>Removes the Account and Credentials (tokens) for the supplied IAccount.</p>\r\n<p></p>"
  syntax:
    content: public void removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
    parameters:
    - id: account
      type: 9a7d2fbdcom.microsoft.identity.client.IAccount
      description: <p>The IAccount whose entry and associated tokens should be removed. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
  overridden: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount,@NonNull final RemoveAccountCallback)
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount(@Nullable IAccount)
  id: removeAccount(@Nullable IAccount)
  parent: com.microsoft.identity.client.MultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.MultipleAccountPublicClientApplication.yml
  langs:
  - java
  name: removeAccount(@Nullable IAccount account)
  nameWithType: MultipleAccountPublicClientApplication.removeAccount(@Nullable IAccount account)
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount(@Nullable IAccount account)
  overload: com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java
    startLine: 413
  package: com.microsoft.identity.client
  summary: "<p>Removes the Account and Credentials (tokens) for the supplied IAccount.</p>\r\n<p></p>"
  syntax:
    content: public boolean removeAccount(@Nullable IAccount account)
    parameters:
    - id: account
      type: fef954a7com.microsoft.identity.client.IAccount
      description: <p>The IAccount whose entry and associated tokens should be removed. </p>
    return:
      type: 4fc6e284
      description: <p>True, if the account was removed. False otherwise. </p>
  overridden: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount)
references:
- uid: 3872da22com.microsoft.identity.client.PublicClientApplicationConfiguration
  spec.java:
  - name: '@NonNull '
    fullName: '@NonNull '
  - uid: com.microsoft.identity.client.PublicClientApplicationConfiguration
    name: PublicClientApplicationConfiguration
    fullName: com.microsoft.identity.client.PublicClientApplicationConfiguration
    href: com.microsoft.identity.client.PublicClientApplicationConfiguration.yml
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.MultipleAccountPublicClientApplication*
  name: MultipleAccountPublicClientApplication
  nameWithType: MultipleAccountPublicClientApplication.MultipleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.MultipleAccountPublicClientApplication
  package: com.microsoft.identity.client
- uid: 045b2b2f
  spec.java:
  - name: '@NonNull String []'
    fullName: '@NonNull String []'
- uid: 3872da22com.microsoft.identity.client.IAccount
  spec.java:
  - name: '@NonNull '
    fullName: '@NonNull '
  - uid: com.microsoft.identity.client.IAccount
    name: IAccount
    fullName: com.microsoft.identity.client.IAccount
    href: com.microsoft.identity.client.IAccount.yml
- uid: 3d663bb1
  spec.java:
  - name: '@NonNull String'
    fullName: '@NonNull String'
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilent*
  name: acquireTokenSilent
  nameWithType: MultipleAccountPublicClientApplication.acquireTokenSilent
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilent
  package: com.microsoft.identity.client
- uid: e5895f1f
  spec.java:
  - name: '@NonNull final String []'
    fullName: '@NonNull final String []'
- uid: d6b37550com.microsoft.identity.client.IAccount
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IAccount
    name: IAccount
    fullName: com.microsoft.identity.client.IAccount
    href: com.microsoft.identity.client.IAccount.yml
- uid: 8789feb4
  spec.java:
  - name: '@NonNull final String'
    fullName: '@NonNull final String'
- uid: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.SilentAuthenticationCallback
    name: SilentAuthenticationCallback
    fullName: com.microsoft.identity.client.SilentAuthenticationCallback
    href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilentAsync*
  name: acquireTokenSilentAsync
  nameWithType: MultipleAccountPublicClientApplication.acquireTokenSilentAsync
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireTokenSilentAsync
  package: com.microsoft.identity.client
- uid: d6b37550com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
    name: IPublicClientApplication.LoadAccountsCallback
    fullName: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
    href: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback.yml
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts*
  name: getAccounts
  nameWithType: MultipleAccountPublicClientApplication.getAccounts
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccounts
  package: com.microsoft.identity.client
- uid: 5618da2dcom.microsoft.identity.client.IAccounta08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.identity.client.IAccount
    name: IAccount
    fullName: com.microsoft.identity.client.IAccount
    href: com.microsoft.identity.client.IAccount.yml
  - name: '>'
    fullName: '>'
- uid: d6b37550com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
    name: IMultipleAccountPublicClientApplication.GetAccountCallback
    fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
    href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback.yml
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount*
  name: getAccount
  nameWithType: MultipleAccountPublicClientApplication.getAccount
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.getAccount
  package: com.microsoft.identity.client
- uid: 9a7d2fbdcom.microsoft.identity.client.IAccount
  spec.java:
  - name: '@Nullable final '
    fullName: '@Nullable final '
  - uid: com.microsoft.identity.client.IAccount
    name: IAccount
    fullName: com.microsoft.identity.client.IAccount
    href: com.microsoft.identity.client.IAccount.yml
- uid: d6b37550com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
    name: IMultipleAccountPublicClientApplication.RemoveAccountCallback
    fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
    href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback.yml
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount*
  name: removeAccount
  nameWithType: MultipleAccountPublicClientApplication.removeAccount
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.removeAccount
  package: com.microsoft.identity.client
- uid: fef954a7com.microsoft.identity.client.IAccount
  spec.java:
  - name: '@Nullable '
    fullName: '@Nullable '
  - uid: com.microsoft.identity.client.IAccount
    name: IAccount
    fullName: com.microsoft.identity.client.IAccount
    href: com.microsoft.identity.client.IAccount.yml
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: "97576948"
  spec.java:
  - name: '@NonNull final Activity'
    fullName: '@NonNull final Activity'
- uid: b868e8dd
  spec.java:
  - name: '@Nullable final String'
    fullName: '@Nullable final String'
- uid: d6b37550com.microsoft.identity.client.AuthenticationCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.AuthenticationCallback
    name: AuthenticationCallback
    fullName: com.microsoft.identity.client.AuthenticationCallback
    href: com.microsoft.identity.client.AuthenticationCallback.yml
- uid: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireToken*
  name: acquireToken
  nameWithType: MultipleAccountPublicClientApplication.acquireToken
  fullName: com.microsoft.identity.client.MultipleAccountPublicClientApplication.acquireToken
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  nameWithType: PublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Activity"></xref> that is used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity"></xref>. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: <p>The <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onCancel()"></xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onSuccess(IAuthenticationResult)"></xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onError(MsalException)"></xref>. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  nameWithType: PublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt\"></xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Prompt#SELECT_ACCOUNT\"></xref>. </p>\r\n<p>Convey parameters via the AquireTokenParameters object</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
    parameters:
    - id: acquireTokenParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenParameters
- uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: acquireTokenSilent( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: PublicClientApplication.acquireTokenSilent( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilent( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
- uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: PublicClientApplication.acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync( @NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
- uid: com.microsoft.identity.client.PublicClientApplication.acquireTokenWithDeviceCode(@Nullable String [],@NonNull final DeviceCodeFlowCallback)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: acquireTokenWithDeviceCode(@Nullable String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  nameWithType: PublicClientApplication.acquireTokenWithDeviceCode(@Nullable String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  fullName: com.microsoft.identity.client.PublicClientApplication.acquireTokenWithDeviceCode(@Nullable String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  type: Method
  syntax:
    content: public void acquireTokenWithDeviceCode(@Nullable String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
    parameters:
    - id: scopes
      type: b1a67a9d
    - id: callback
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String [],@NonNull final DeviceCodeFlowCallback)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  nameWithType: IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  type: Method
  summary: "<p>Perform the Device Code Flow (DCF) protocol to allow a device without input capability to authenticate and get a new access token. Currently, flow is only supported in local MSAL. No Broker support. </p>"
  syntax:
    content: public void acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
    parameters:
    - id: scopes
      type: 045b2b2f
      description: <p>the desired access scopes </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
      description: <p>callback object used to communicate with the API throughout the protocol </p>
- uid: com.microsoft.identity.client.PublicClientApplication.buildAcquireTokenSilentParameters(@NonNull final String [],@NonNull final IAccount,@NonNull final String,final boolean,@Nullable final ClaimsRequest,@NonNull final SilentAuthenticationCallback)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: buildAcquireTokenSilentParameters(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, final boolean forceRefresh, @Nullable final ClaimsRequest claimsRequest, @NonNull final SilentAuthenticationCallback callback)
  nameWithType: PublicClientApplication.buildAcquireTokenSilentParameters(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, final boolean forceRefresh, @Nullable final ClaimsRequest claimsRequest, @NonNull final SilentAuthenticationCallback callback)
  fullName: com.microsoft.identity.client.PublicClientApplication.buildAcquireTokenSilentParameters(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, final boolean forceRefresh, @Nullable final ClaimsRequest claimsRequest, @NonNull final SilentAuthenticationCallback callback)
  type: Method
  syntax:
    content: protected AcquireTokenSilentParameters buildAcquireTokenSilentParameters(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, final boolean forceRefresh, @Nullable final ClaimsRequest claimsRequest, @NonNull final SilentAuthenticationCallback callback)
    parameters:
    - id: scopes
      type: e5895f1f
    - id: account
      type: d6b37550com.microsoft.identity.client.IAccount
    - id: authority
      type: 8789feb4
    - id: forceRefresh
      type: 4dda0764
    - id: claimsRequest
      type: 9a7d2fbdcom.microsoft.identity.client.claims.ClaimsRequest
    - id: callback
      type: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
    return:
      type: com.microsoft.identity.client.AcquireTokenSilentParameters
- uid: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,final int,@NonNull final ApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: create(@NonNull final Context context, final int configFileResourceId, @NonNull final ApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.create(@NonNull final Context context, final int configFileResourceId, @NonNull final ApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context context, final int configFileResourceId, @NonNull final ApplicationCreatedListener listener)
  type: Method
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#create(Context, int, ApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the file included in your application resources.</p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static void create(@NonNull final Context context, final int configFileResourceId, @NonNull final ApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFileResourceId
      type: cd225469
      description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,@NonNull final File,@NonNull final ApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: create(@NonNull final Context context, @NonNull final File configFile, @NonNull final ApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.create(@NonNull final Context context, @NonNull final File configFile, @NonNull final ApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context context, @NonNull final File configFile, @NonNull final ApplicationCreatedListener listener)
  type: Method
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#create(Context, File, ApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the specified file.</p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL configuration file, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static void create(@NonNull final Context context, @NonNull final File configFile, @NonNull final ApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFile
      type: af5af513
      description: <p>The file containing the JSON configuration for the PublicClientApplication. Cannot be null. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,@NonNull final String,@Nullable final String,@NonNull final String,@NonNull final ApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: create(@NonNull final Context context, @NonNull final String clientId, @Nullable final String authority, @NonNull final String redirectUri, @NonNull final ApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.create(@NonNull final Context context, @NonNull final String clientId, @Nullable final String authority, @NonNull final String redirectUri, @NonNull final ApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context context, @NonNull final String clientId, @Nullable final String authority, @NonNull final String redirectUri, @NonNull final ApplicationCreatedListener listener)
  type: Method
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#create(Context, String, String, ApplicationCreatedListener)\"></xref> allows the client id and authority to be passed instead of providing them through metadata.</p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of an running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p></p>"
  syntax:
    content: public static void create(@NonNull final Context context, @NonNull final String clientId, @Nullable final String authority, @NonNull final String redirectUri, @NonNull final ApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: clientId
      type: 8789feb4
      description: <p>The application client id. Cannot be null. </p>
    - id: authority
      type: b868e8dd
      description: <p>The default authority to be used for the authority. If this is null, the default authority will be used. </p>
    - id: redirectUri
      type: 8789feb4
      description: <p>The redirect URI of the application. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.ApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context,final int)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: create(@NonNull final Context context, final int configFileResourceId)
  nameWithType: PublicClientApplication.create(@NonNull final Context context, final int configFileResourceId)
  fullName: com.microsoft.identity.client.PublicClientApplication.create(@NonNull final Context context, final int configFileResourceId)
  type: Method
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#create(Context, int, ApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the file included in your application's resources.</p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static IPublicClientApplication create(@NonNull final Context context, final int configFileResourceId)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFileResourceId
      type: cd225469
      description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication </p>
    return:
      type: com.microsoft.identity.client.IPublicClientApplication
      description: <p>An instance of IPublicClientApplication. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,final int,@NonNull final IMultipleAccountApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: createMultipleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  type: Method
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createMultipleAccountPublicClientApplication(Context, int, IMultipleAccountApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the file included in your application's resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"com.microsoft.identity.client.IMultipleAccountPublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMultipleAccountPublicClientApplication\"></xref>. For example, when the device is marked as 'shared' (<xref uid=\"com.microsoft.identity.client.PublicClientApplication.isSharedDevice()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#isSharedDevice()\"></xref> is set to true) </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static void createMultipleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final IMultipleAccountApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFileResourceId
      type: cd225469
      description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final File,@NonNull final IMultipleAccountApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  type: Method
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createMultipleAccountPublicClientApplication(Context, File, IMultipleAccountApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the file included in your application resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"com.microsoft.identity.client.IMultipleAccountPublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMultipleAccountPublicClientApplication\"></xref>. For example, when the device is marked as 'shared' (<xref uid=\"com.microsoft.identity.client.PublicClientApplication.isSharedDevice()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#isSharedDevice()\"></xref> is set to true) </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static void createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final IMultipleAccountApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFile
      type: af5af513
      description: <p>The file containing the JSON configuration for the PublicClientApplication. Cannot be null. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final int)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final int configFileResourceId)
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final int configFileResourceId)
  fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final int configFileResourceId)
  type: Method
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createMultipleAccountPublicClientApplication(Context, int)\"></xref> will read the client id and other configuration settings from the file included in your application's resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"com.microsoft.identity.client.IMultipleAccountPublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMultipleAccountPublicClientApplication\"></xref>. For example, when the device is marked as 'shared' (<xref uid=\"com.microsoft.identity.client.PublicClientApplication.isSharedDevice()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#isSharedDevice()\"></xref> is set to true) </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static IMultipleAccountPublicClientApplication createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final int configFileResourceId)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFileResourceId
      type: 0f743d23
      description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication. </p>
    return:
      type: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
      description: <p>An instance of IMultipleAccountPublicClientApplication. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final File)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
  fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
  type: Method
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createMultipleAccountPublicClientApplication(Context, File)\"></xref> will read the client id and other configuration settings from the file included in your application resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"com.microsoft.identity.client.IMultipleAccountPublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMultipleAccountPublicClientApplication\"></xref>. For example, when the device is marked as 'shared' (<xref uid=\"com.microsoft.identity.client.PublicClientApplication.isSharedDevice()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#isSharedDevice()\"></xref> is set to true) </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL configuration file, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static IMultipleAccountPublicClientApplication createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFile
      type: af5af513
      description: <p>The file containing the JSON configuration for the PublicClientApplication. Cannot be null. </p>
    return:
      type: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
- uid: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,final int,@NonNull final ISingleAccountApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: createSingleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final ISingleAccountApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final ISingleAccountApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final ISingleAccountApplicationCreatedListener listener)
  type: Method
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createSingleAccountPublicClientApplication(Context, int, ISingleAccountApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the file included in your application's resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISingleAccountApplicationCreatedListener\"></xref>. For example, AccountMode in configuration is not set to single. </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static void createSingleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final ISingleAccountApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFileResourceId
      type: cd225469
      description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,@NonNull final File,@NonNull final ISingleAccountApplicationCreatedListener)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: createSingleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final ISingleAccountApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final ISingleAccountApplicationCreatedListener listener)
  fullName: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final ISingleAccountApplicationCreatedListener listener)
  type: Method
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createSingleAccountPublicClientApplication(Context, int, ISingleAccountApplicationCreatedListener)\"></xref> will read the client id and other configuration settings from the file included in your application resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISingleAccountApplicationCreatedListener\"></xref>. For example, AccountMode in configuration is not set to single. </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL configuration file, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static void createSingleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final ISingleAccountApplicationCreatedListener listener)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFile
      type: af5af513
      description: <p>The file containing the JSON configuration for the PublicClientApplication. Cannot be null. </p>
    - id: listener
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.ISingleAccountApplicationCreatedListener
      description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,final int)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: createSingleAccountPublicClientApplication( @NonNull final Context context, final int configFileResourceId)
  nameWithType: PublicClientApplication.createSingleAccountPublicClientApplication( @NonNull final Context context, final int configFileResourceId)
  fullName: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication( @NonNull final Context context, final int configFileResourceId)
  type: Method
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createSingleAccountPublicClientApplication(Context, int)\"></xref> will read the client id and other configuration settings from the file included in your application's resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISingleAccountApplicationCreatedListener\"></xref>. For example, AccountMode in configuration is not set to single. </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL config json, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static ISingleAccountPublicClientApplication createSingleAccountPublicClientApplication( @NonNull final Context context, final int configFileResourceId)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFileResourceId
      type: cd225469
      description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication. </p>
    return:
      type: com.microsoft.identity.client.ISingleAccountPublicClientApplication
      description: <p>An instance of ISingleAccountPublicClientApplication. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication(@NonNull final Context,@Nullable final File)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: createSingleAccountPublicClientApplication( @NonNull final Context context, @Nullable final File configFile)
  nameWithType: PublicClientApplication.createSingleAccountPublicClientApplication( @NonNull final Context context, @Nullable final File configFile)
  fullName: com.microsoft.identity.client.PublicClientApplication.createSingleAccountPublicClientApplication( @NonNull final Context context, @Nullable final File configFile)
  type: Method
  summary: "<p>\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication#createSingleAccountPublicClientApplication(Context, int)\"></xref> will read the client id and other configuration settings from the file included in your applications resources.</p>\r\n<p>This function will pass back an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalClientException\"></xref> object if it is unable to return <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ISingleAccountApplicationCreatedListener\"></xref>. For example, AccountMode in configuration is not set to single. </p>\r\n<p>\r\nNote: The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>\r\n<p>\r\nFor more information on the schema of the MSAL configuration file, please see <a href=\"https://developer.android.com/guide/topics/resources/providing-resources\">Android app resource overview</a> and <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki\">MSAL Github Wiki</a></p>\r\n<p></p>"
  syntax:
    content: public static ISingleAccountPublicClientApplication createSingleAccountPublicClientApplication( @NonNull final Context context, @Nullable final File configFile)
    parameters:
    - id: context
      type: 3c9b8ebf
      description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    - id: configFile
      type: d2084da5
      description: <p>The file containing the JSON configuration for the PublicClientApplication. Cannot be null. </p>
    return:
      type: com.microsoft.identity.client.ISingleAccountPublicClientApplication
      description: <p>An instance of ISingleAccountPublicClientApplication. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.getCommandCallback(@NonNull final SilentAuthenticationCallback,@NonNull final TokenParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: getCommandCallback( @NonNull final SilentAuthenticationCallback authenticationCallback, @NonNull final TokenParameters tokenParameters)
  nameWithType: PublicClientApplication.getCommandCallback( @NonNull final SilentAuthenticationCallback authenticationCallback, @NonNull final TokenParameters tokenParameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.getCommandCallback( @NonNull final SilentAuthenticationCallback authenticationCallback, @NonNull final TokenParameters tokenParameters)
  type: Method
  syntax:
    content: protected CommandCallback getCommandCallback( @NonNull final SilentAuthenticationCallback authenticationCallback, @NonNull final TokenParameters tokenParameters)
    parameters:
    - id: authenticationCallback
      type: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
    - id: tokenParameters
      type: d6b37550com.microsoft.identity.client.TokenParameters
    return:
      type: 9bb61ed7
- uid: com.microsoft.identity.client.PublicClientApplication.getConfiguration()
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: getConfiguration()
  nameWithType: PublicClientApplication.getConfiguration()
  fullName: com.microsoft.identity.client.PublicClientApplication.getConfiguration()
  type: Method
  summary: "<p>Returns the PublicClientConfiguration for this instance of PublicClientApplication.</p>\r\n<p></p>"
  syntax:
    content: public PublicClientApplicationConfiguration getConfiguration()
    return:
      type: com.microsoft.identity.client.PublicClientApplicationConfiguration
      description: <p>The PublicClientApplicationConfiguration. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.getMsaFamilyRefreshToken(@NonNull final String)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: getMsaFamilyRefreshToken(@NonNull final String identifier)
  nameWithType: PublicClientApplication.getMsaFamilyRefreshToken(@NonNull final String identifier)
  fullName: com.microsoft.identity.client.PublicClientApplication.getMsaFamilyRefreshToken(@NonNull final String identifier)
  type: Method
  syntax:
    content: public String getMsaFamilyRefreshToken(@NonNull final String identifier)
    parameters:
    - id: identifier
      type: 8789feb4
    return:
      type: "26831127"
- uid: com.microsoft.identity.client.ITokenShare.getMsaFamilyRefreshToken(String)
  parent: com.microsoft.identity.client.ITokenShare
  href: com.microsoft.identity.client.ITokenShare.yml
  name: getMsaFamilyRefreshToken(String identifier)
  nameWithType: ITokenShare.getMsaFamilyRefreshToken(String identifier)
  fullName: com.microsoft.identity.client.ITokenShare.getMsaFamilyRefreshToken(String identifier)
  type: Method
  syntax:
    content: public String getMsaFamilyRefreshToken(String identifier)
    parameters:
    - id: identifier
      type: "26831127"
    return:
      type: "26831127"
- uid: com.microsoft.identity.client.PublicClientApplication.getOrgIdFamilyRefreshToken(@NonNull final String)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: getOrgIdFamilyRefreshToken(@NonNull final String identifier)
  nameWithType: PublicClientApplication.getOrgIdFamilyRefreshToken(@NonNull final String identifier)
  fullName: com.microsoft.identity.client.PublicClientApplication.getOrgIdFamilyRefreshToken(@NonNull final String identifier)
  type: Method
  syntax:
    content: public String getOrgIdFamilyRefreshToken(@NonNull final String identifier)
    parameters:
    - id: identifier
      type: 8789feb4
    return:
      type: "26831127"
- uid: com.microsoft.identity.client.ITokenShare.getOrgIdFamilyRefreshToken(String)
  parent: com.microsoft.identity.client.ITokenShare
  href: com.microsoft.identity.client.ITokenShare.yml
  name: getOrgIdFamilyRefreshToken(String identifier)
  nameWithType: ITokenShare.getOrgIdFamilyRefreshToken(String identifier)
  fullName: com.microsoft.identity.client.ITokenShare.getOrgIdFamilyRefreshToken(String identifier)
  type: Method
  syntax:
    content: public String getOrgIdFamilyRefreshToken(String identifier)
    parameters:
    - id: identifier
      type: "26831127"
    return:
      type: "26831127"
- uid: com.microsoft.identity.client.PublicClientApplication.getSdkVersion()
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: getSdkVersion()
  nameWithType: PublicClientApplication.getSdkVersion()
  fullName: com.microsoft.identity.client.PublicClientApplication.getSdkVersion()
  type: Method
  syntax:
    content: public static String getSdkVersion()
    return:
      type: "26831127"
      description: <p>The current version for the sdk. </p>
- uid: com.microsoft.identity.client.PublicClientApplication.homeAccountMatcher
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: homeAccountMatcher
  nameWithType: PublicClientApplication.homeAccountMatcher
  fullName: com.microsoft.identity.client.PublicClientApplication.homeAccountMatcher
  type: Field
  syntax:
    content: >-
      protected AccountMatcher homeAccountMatcher= new AccountMatcher() {
              @Override
              boolean matches(@NonNull final String homeAccountId,
                              @NonNull final IAccount account) {
                  return homeAccountId.contains(account.getId());
              }
          }
    return:
      type: com.microsoft.identity.client.PublicClientApplication.AccountMatcher
- uid: com.microsoft.identity.client.PublicClientApplication.isSharedDevice()
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: isSharedDevice()
  nameWithType: PublicClientApplication.isSharedDevice()
  fullName: com.microsoft.identity.client.PublicClientApplication.isSharedDevice()
  type: Method
  summary: "<p>Returns whether the application is being run on a device that is marked as a shared. Only SingleAccountPublicClientApplications may be used on shared devices</p>\r\n<p></p>"
  syntax:
    content: public boolean isSharedDevice()
    return:
      type: 4fc6e284
- uid: com.microsoft.identity.client.PublicClientApplication.localAccountMatcher
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: localAccountMatcher
  nameWithType: PublicClientApplication.localAccountMatcher
  fullName: com.microsoft.identity.client.PublicClientApplication.localAccountMatcher
  type: Field
  syntax:
    content: "protected AccountMatcher localAccountMatcher= new AccountMatcher() {\n        @Override\n        boolean matches(@NonNull final String localAccountId,\n                        @NonNull final IAccount account) {\n            \n            if (localAccountId.contains(account.getId())) {\n                return true;\n            } else if (account instanceof MultiTenantAccount) {\n                \n                final MultiTenantAccount multiTenantAccount = (MultiTenantAccount) account;\n                final Map<String, ITenantProfile> tenantProfiles = multiTenantAccount.getTenantProfiles();\n\n                if (null != tenantProfiles && !tenantProfiles.isEmpty()) {\n                    for (final Map.Entry<String, ITenantProfile> profileEntry : tenantProfiles.entrySet()) {\n                        if (!TextUtils.isEmpty(profileEntry.getValue().getId()) &&\n                                localAccountId.contains(profileEntry.getValue().getId())) {\n                            return true;\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n    }"
    return:
      type: com.microsoft.identity.client.PublicClientApplication.AccountMatcher
- uid: com.microsoft.identity.client.PublicClientApplication.mPublicClientConfiguration
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: mPublicClientConfiguration
  nameWithType: PublicClientApplication.mPublicClientConfiguration
  fullName: com.microsoft.identity.client.PublicClientApplication.mPublicClientConfiguration
  type: Field
  syntax:
    content: protected PublicClientApplicationConfiguration mPublicClientConfiguration
    return:
      type: com.microsoft.identity.client.PublicClientApplicationConfiguration
- uid: com.microsoft.identity.client.PublicClientApplication.mTokenShareUtility
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: mTokenShareUtility
  nameWithType: PublicClientApplication.mTokenShareUtility
  fullName: com.microsoft.identity.client.PublicClientApplication.mTokenShareUtility
  type: Field
  syntax:
    content: protected TokenShareUtility mTokenShareUtility
    return:
      type: cca850d3
- uid: com.microsoft.identity.client.PublicClientApplication.postAuthResult(@NonNull final ILocalAuthenticationResult,@NonNull final TokenParameters,@NonNull final SilentAuthenticationCallback)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: postAuthResult(@NonNull final ILocalAuthenticationResult localAuthenticationResult, @NonNull final TokenParameters requestParameters, @NonNull final SilentAuthenticationCallback authenticationCallback)
  nameWithType: PublicClientApplication.postAuthResult(@NonNull final ILocalAuthenticationResult localAuthenticationResult, @NonNull final TokenParameters requestParameters, @NonNull final SilentAuthenticationCallback authenticationCallback)
  fullName: com.microsoft.identity.client.PublicClientApplication.postAuthResult(@NonNull final ILocalAuthenticationResult localAuthenticationResult, @NonNull final TokenParameters requestParameters, @NonNull final SilentAuthenticationCallback authenticationCallback)
  type: Method
  summary: "<p>Helper method to post authentication result. </p>"
  syntax:
    content: protected void postAuthResult(@NonNull final ILocalAuthenticationResult localAuthenticationResult, @NonNull final TokenParameters requestParameters, @NonNull final SilentAuthenticationCallback authenticationCallback)
    parameters:
    - id: localAuthenticationResult
      type: da368d35
    - id: requestParameters
      type: d6b37550com.microsoft.identity.client.TokenParameters
    - id: authenticationCallback
      type: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
- uid: com.microsoft.identity.client.PublicClientApplication.PublicClientApplication(@NonNull final PublicClientApplicationConfiguration)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: PublicClientApplication(@NonNull final PublicClientApplicationConfiguration configFile)
  nameWithType: PublicClientApplication.PublicClientApplication(@NonNull final PublicClientApplicationConfiguration configFile)
  fullName: com.microsoft.identity.client.PublicClientApplication.PublicClientApplication(@NonNull final PublicClientApplicationConfiguration configFile)
  type: Constructor
  syntax:
    content: protected PublicClientApplication(@NonNull final PublicClientApplicationConfiguration configFile)
    parameters:
    - id: configFile
      type: d6b37550com.microsoft.identity.client.PublicClientApplicationConfiguration
- uid: com.microsoft.identity.client.PublicClientApplication.saveMsaFamilyRefreshToken(@NonNull final String)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: saveMsaFamilyRefreshToken(@NonNull final String refreshToken)
  nameWithType: PublicClientApplication.saveMsaFamilyRefreshToken(@NonNull final String refreshToken)
  fullName: com.microsoft.identity.client.PublicClientApplication.saveMsaFamilyRefreshToken(@NonNull final String refreshToken)
  type: Method
  syntax:
    content: public void saveMsaFamilyRefreshToken(@NonNull final String refreshToken)
    parameters:
    - id: refreshToken
      type: 8789feb4
- uid: com.microsoft.identity.client.ITokenShare.saveMsaFamilyRefreshToken(String)
  parent: com.microsoft.identity.client.ITokenShare
  href: com.microsoft.identity.client.ITokenShare.yml
  name: saveMsaFamilyRefreshToken(String refreshToken)
  nameWithType: ITokenShare.saveMsaFamilyRefreshToken(String refreshToken)
  fullName: com.microsoft.identity.client.ITokenShare.saveMsaFamilyRefreshToken(String refreshToken)
  type: Method
  syntax:
    content: public void saveMsaFamilyRefreshToken(String refreshToken)
    parameters:
    - id: refreshToken
      type: "26831127"
- uid: com.microsoft.identity.client.PublicClientApplication.saveOrgIdFamilyRefreshToken(@NonNull final String)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: saveOrgIdFamilyRefreshToken(@NonNull final String ssoStateSerializerBlob)
  nameWithType: PublicClientApplication.saveOrgIdFamilyRefreshToken(@NonNull final String ssoStateSerializerBlob)
  fullName: com.microsoft.identity.client.PublicClientApplication.saveOrgIdFamilyRefreshToken(@NonNull final String ssoStateSerializerBlob)
  type: Method
  syntax:
    content: public void saveOrgIdFamilyRefreshToken(@NonNull final String ssoStateSerializerBlob)
    parameters:
    - id: ssoStateSerializerBlob
      type: 8789feb4
- uid: com.microsoft.identity.client.ITokenShare.saveOrgIdFamilyRefreshToken(String)
  parent: com.microsoft.identity.client.ITokenShare
  href: com.microsoft.identity.client.ITokenShare.yml
  name: saveOrgIdFamilyRefreshToken(String ssoStateSerializerBlob)
  nameWithType: ITokenShare.saveOrgIdFamilyRefreshToken(String ssoStateSerializerBlob)
  fullName: com.microsoft.identity.client.ITokenShare.saveOrgIdFamilyRefreshToken(String ssoStateSerializerBlob)
  type: Method
  syntax:
    content: public void saveOrgIdFamilyRefreshToken(String ssoStateSerializerBlob)
    parameters:
    - id: ssoStateSerializerBlob
      type: "26831127"
- uid: com.microsoft.identity.client.PublicClientApplication.showExpectedMsalRedirectUriInfo(Activity)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: showExpectedMsalRedirectUriInfo(Activity activity)
  nameWithType: PublicClientApplication.showExpectedMsalRedirectUriInfo(Activity activity)
  fullName: com.microsoft.identity.client.PublicClientApplication.showExpectedMsalRedirectUriInfo(Activity activity)
  type: Method
  summary: "<p>Presents an activity that includes the package name, signature, redirect URI and manifest entry required for your application</p>\r\n<p></p>"
  syntax:
    content: public static void showExpectedMsalRedirectUriInfo(Activity activity)
    parameters:
    - id: activity
      type: ff2dfcec
- uid: com.microsoft.identity.client.PublicClientApplication.usernameMatcher
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: usernameMatcher
  nameWithType: PublicClientApplication.usernameMatcher
  fullName: com.microsoft.identity.client.PublicClientApplication.usernameMatcher
  type: Field
  syntax:
    content: protected AccountMatcher usernameMatcher
    return:
      type: com.microsoft.identity.client.PublicClientApplication.AccountMatcher
- uid: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenParameters(AcquireTokenParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: validateAcquireTokenParameters(AcquireTokenParameters parameters)
  nameWithType: PublicClientApplication.validateAcquireTokenParameters(AcquireTokenParameters parameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenParameters(AcquireTokenParameters parameters)
  type: Method
  syntax:
    content: protected void validateAcquireTokenParameters(AcquireTokenParameters parameters)
    parameters:
    - id: parameters
      type: com.microsoft.identity.client.AcquireTokenParameters
- uid: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenSilentParameters(AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.PublicClientApplication
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: validateAcquireTokenSilentParameters(AcquireTokenSilentParameters parameters)
  nameWithType: PublicClientApplication.validateAcquireTokenSilentParameters(AcquireTokenSilentParameters parameters)
  fullName: com.microsoft.identity.client.PublicClientApplication.validateAcquireTokenSilentParameters(AcquireTokenSilentParameters parameters)
  type: Method
  syntax:
    content: protected void validateAcquireTokenSilentParameters(AcquireTokenSilentParameters parameters)
    parameters:
    - id: parameters
      type: com.microsoft.identity.client.AcquireTokenSilentParameters
- uid: com.microsoft.identity.client.PublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: PublicClientApplication
  nameWithType: PublicClientApplication
  fullName: com.microsoft.identity.client.PublicClientApplication
  type: Class
  summary: "<p>This is the entry point for developer to create public native applications and make API calls to acquire tokens. </p>\r\n<p>\r\n  <b>Client ID:</b> The clientID of your application is a unique identifier which can be obtained from the app registration portal.</p>\r\n<p>\r\n  <b>AuthorityMetadata:</b> A URL indicating a directory that MSAL can use to obtain tokens. In Azure AD it is of the form <a href=\"https://\">https://</a>&lt;[nstance]/[tenant], where [instance] is the directory host (e.g. <a href=\"https://login.microsoftonline.com\">https://login.microsoftonline.com</a>) and [tenant] is an identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory) </p>\r\n<p>For B2C, it is of the form <a href=\"https://\">https://</a>[instance]/tfp/[tenant]/[policy] where instance and tenant are same as Azure AD, and [policy] is a string like signup</p>\r\n<p>MSAL <xref uid=\"com.microsoft.identity.client.PublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication\"></xref> provides three constructors allowing the client id to be set either via AndroidManifest.xml metadata or using constructor parameters. Similarly, if developer chooses not to use the default authority <a href=\"https://login.microsoftonline.com,\">https://login.microsoftonline.com,</a> an alternate can also be configured using the manifest, constructor parameters, or in acquire token calls. </p>\r\n<p>Redirect is auto-generated in the library in the format of msal&lt;client-id&gt;://auth, and it cannot be overridden. </p>\r\n<p>Developer <b>MUST</b> have <xref uid=\"com.microsoft.identity.client.BrowserTabActivity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BrowserTabActivity\"></xref> declared in their manifest, which must have the correct intent-filter configured. If the wrong scheme and host is provided, the sdk will fail the <xref uid=\"com.microsoft.identity.client.PublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication\"></xref> creation. </p>\r\n<p>Expected format will be: <pre>\r\n&lt;activity\r\n    android:name=\"com.microsoft.identity.client.BrowserTabActivity\"&gt;\r\n    &lt;intent-filter&gt;\r\n        &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\r\n        &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\r\n        &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\r\n        &lt;data android:scheme=\"msal&amp;lt;AppClientId&amp;gt;\"\r\n             android:host=\"auth\" /&gt;\r\n    &lt;/intent-filter&gt;\r\n&lt;/activity&gt;\r\n</pre></p>\r\n<p>Other Terminology:</p>\r\n<p>\r\n  <b>Scopes:</b>Permissions that the developers wants included in the access token received . Not all scopes are guaranteed to be included in the access token returned. </p>\r\n<p>\r\n  <b>Login Hint:</b> Usually an email, to pass to the service at the beginning of the interactive authentication flow. </p>\r\n<p>\r\n  <b>Extra Scopes to Consent:</b> Permissions you want the user to consent to in the same authentication flow, but won't be included in the returned access token. </p>"
  syntax:
    content: public class PublicClientApplication
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  name: IMultipleAccountPublicClientApplication
  nameWithType: IMultipleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  type: Interface
  summary: "<p>An interface that contains list of operations that are available when MSAL is in 'multiple account' mode.<ul><li><p>This mode allows an application to make API calls with more than one accounts.</p></li><li><p>The application will only be able to retrieve/remove accounts that have been used to acquire token interactively in this application</p></li><li><p>API calls' scope is limited to 'the calling app'. (i.e. removeAccount() will not remove credentials of the same account in other apps). </p></li></ul></p>\r\n<p>This is MSAL's default mode. </p>"
  syntax:
    content: public interface IMultipleAccountPublicClientApplication extends IPublicClientApplication
- uid: com.microsoft.identity.client.PublicClientApplicationConfiguration
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.PublicClientApplicationConfiguration.yml
  name: PublicClientApplicationConfiguration
  nameWithType: PublicClientApplicationConfiguration
  fullName: com.microsoft.identity.client.PublicClientApplicationConfiguration
  type: Class
  syntax:
    content: public class PublicClientApplicationConfiguration
- uid: com.microsoft.identity.client.exception.MsalClientException
  parent: com.microsoft.identity.client.exception
  href: com.microsoft.identity.client.exception.MsalClientException.yml
  name: MsalClientException
  nameWithType: MsalClientException
  fullName: com.microsoft.identity.client.exception.MsalClientException
  type: Class
  summary: "<p>This exception class represents general errors that are local to the library. Below is the table of proposed codes and a short description of each. </p>\r\n<p>Set of error codes that could be returned from this exception: <ul><li><p>multiple_matching_tokens_detected: There are multiple cache entries found and the sdk cannot identify the correct access or refresh token from the cache. This usually indicates a bug in the sdk for storing tokens or the authority is not provided in the silent request and multiple matching tokens found.  </p></li><li><p>device_network_not_available: No active network is available on the device.  </p></li><li><p>json_parse_failure: The sdk failed to parse the JSON format. </p></li><li><p>io_error: IOException happened, could be the device/network errors.  </p></li><li><p>malformed_url: The url is malformed. Likely caused when constructing the auth request, authority, or redirect URI.  </p></li><li><p>unsupported_encoding: The encoding is not supported by the device.  </p></li><li><p>no_such_algorithm: The algorithm used to generate pkce challenge is not supported.  </p></li><li><p>invalid_jwt: JWT returned by the server is not valid, empty or malformed.  </p></li><li><p>state_mismatch: State from authorization response did not match the state in the authorization request. For authorization requests, the sdk will verify the state returned from redirect and the one sent in the request.  </p></li><li><p>unsupported_url: Unsupported url, cannot perform ADFS authority validation.  </p></li><li><p>authority_validation_not_supported: The authority is not supported for authority validation. The sdk supports b2c authorities, but doesn't support b2c authority validation. Only well-known host will be supported.  </p></li><li><p>chrome_not_installed: Chrome is not installed on the device. The sdk uses chrome custom tab for authorization requests if available, and will fall back to chrome browser.  </p></li><li><p>user_mismatch: The user provided in the acquire token request doesn't match the user returned from server. </p></li></ul></p>"
  syntax:
    content: public class MsalClientException extends MsalException
- uid: com.microsoft.identity.client.IAuthenticationResult
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IAuthenticationResult.yml
  name: IAuthenticationResult
  nameWithType: IAuthenticationResult
  fullName: com.microsoft.identity.client.IAuthenticationResult
  type: Interface
  syntax:
    content: public interface IAuthenticationResult
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String [],@NonNull final IAccount,@NonNull final String)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  name: acquireTokenSilent(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority)
  nameWithType: IMultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority)
    parameters:
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: account
      type: d6b37550com.microsoft.identity.client.IAccount
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAccount" data-throw-if-not-resolved="false" data-raw-source="IAccount"></xref> represents the account to silently request tokens for. </p>
    - id: authority
      type: 8789feb4
      description: <p>Authority to issue the token. </p>
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
- uid: com.microsoft.identity.client.IAccount
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IAccount.yml
  name: IAccount
  nameWithType: IAccount
  fullName: com.microsoft.identity.client.IAccount
  type: Interface
  syntax:
    content: public interface IAccount extends IClaimable
- uid: com.microsoft.identity.client.exception.MsalException
  parent: com.microsoft.identity.client.exception
  href: com.microsoft.identity.client.exception.MsalException.yml
  name: MsalException
  nameWithType: MsalException
  fullName: com.microsoft.identity.client.exception.MsalException
  type: Class
  summary: "<p>\r\n  <xref uid=\"com.microsoft.identity.client.exception.MsalException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalException\"></xref> thrown or sent back via callback, representing the detailed exception thrown by the sdk. It will contain the error code, error description (could be null) or throwable (could be null). </p>"
  syntax:
    content: public class MsalException
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String [],@NonNull final IAccount,@NonNull final String,@NonNull final SilentAuthenticationCallback)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  name: acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  nameWithType: IMultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final IAccount account, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
    parameters:
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: account
      type: d6b37550com.microsoft.identity.client.IAccount
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAccount" data-throw-if-not-resolved="false" data-raw-source="IAccount"></xref> represents the account to silently request tokens for. </p>
    - id: authority
      type: 8789feb4
      description: <p>Authority to issue the token. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="SilentAuthenticationCallback"></xref> that is used to send the result back. The success result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="SilentAuthenticationCallback#onSuccess(IAuthenticationResult)"></xref>. Failure case will be sent back via { <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="}. "></xref></p>
- uid: com.microsoft.identity.client.SilentAuthenticationCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: SilentAuthenticationCallback
  nameWithType: SilentAuthenticationCallback
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback
  type: Interface
  syntax:
    content: public interface SilentAuthenticationCallback
- uid: com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)
  parent: com.microsoft.identity.client.SilentAuthenticationCallback
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: onSuccess(final IAuthenticationResult authenticationResult)
  nameWithType: SilentAuthenticationCallback.onSuccess(final IAuthenticationResult authenticationResult)
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult authenticationResult)
  type: Method
  summary: "<p>Authentication finishes successfully.</p>\r\n<p></p>"
  syntax:
    content: public void onSuccess(final IAuthenticationResult authenticationResult)
    parameters:
    - id: authenticationResult
      type: 93de0ef9com.microsoft.identity.client.IAuthenticationResult
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="IAuthenticationResult"></xref> that contains the success response. </p>
- uid: com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)
  parent: com.microsoft.identity.client.SilentAuthenticationCallback
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: onError(final MsalException exception)
  nameWithType: SilentAuthenticationCallback.onError(final MsalException exception)
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException exception)
  type: Method
  summary: "<p>Error occurs during the authentication.</p>\r\n<p></p>"
  syntax:
    content: public void onError(final MsalException exception)
    parameters:
    - id: exception
      type: 93de0ef9com.microsoft.identity.client.exception.MsalException
      description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalException"></xref> contains the error code, error message and cause if applicable. The exception returned in the callback could be <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalClientException"></xref>, <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalServiceException"></xref> or <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalUiRequiredException"></xref>. </p>
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  name: getAccounts(@NonNull final LoadAccountsCallback callback)
  nameWithType: IMultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback callback)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts(@NonNull final LoadAccountsCallback callback)
  type: Method
  summary: "<p>Asynchronously returns a List of <xref uid=\"com.microsoft.identity.client.IAccount\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAccount\"></xref> objects for which this application has RefreshTokens.</p>\r\n<p></p>"
  syntax:
    content: public void getAccounts(@NonNull final LoadAccountsCallback callback)
    parameters:
    - id: callback
      type: d6b37550com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
      description: <p>The callback to notify once this action has finished. </p>
- uid: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback.yml
  name: IPublicClientApplication.LoadAccountsCallback
  nameWithType: IPublicClientApplication.LoadAccountsCallback
  fullName: com.microsoft.identity.client.IPublicClientApplication.LoadAccountsCallback
  type: Interface
  syntax:
    content: public interface LoadAccountsCallback
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts()
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  name: getAccounts()
  nameWithType: IMultipleAccountPublicClientApplication.getAccounts()
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccounts()
  type: Method
  summary: "<p>Returns a List of <xref uid=\"com.microsoft.identity.client.IAccount\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAccount\"></xref> objects for which this application has RefreshTokens. </p>"
  syntax:
    content: public List<IAccount> getAccounts()
    return:
      type: 5618da2dcom.microsoft.identity.client.IAccounta08ddfce
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount(@NonNull final String,@NonNull final GetAccountCallback)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  name: getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
  nameWithType: IMultipleAccountPublicClientApplication.getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
  type: Method
  summary: "<p>Retrieve the IAccount object matching the identifier. The identifier could be homeAccountIdentifier, localAccountIdentifier or username.</p>\r\n<p></p>"
  syntax:
    content: public void getAccount(@NonNull final String identifier, @NonNull final GetAccountCallback callback)
    parameters:
    - id: identifier
      type: 8789feb4
      description: <p>String of the identifier </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
      description: <p>The callback to notify once this action has finished. </p>
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback.yml
  name: IMultipleAccountPublicClientApplication.GetAccountCallback
  nameWithType: IMultipleAccountPublicClientApplication.GetAccountCallback
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.GetAccountCallback
  type: Interface
  syntax:
    content: public interface GetAccountCallback
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount(@NonNull final String)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  name: getAccount(@NonNull final String identifier)
  nameWithType: IMultipleAccountPublicClientApplication.getAccount(@NonNull final String identifier)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.getAccount(@NonNull final String identifier)
  type: Method
  summary: "<p>Retrieve the IAccount object matching the identifier. The identifier could be homeAccountIdentifier, localAccountIdentifier or username.</p>\r\n<p></p>"
  syntax:
    content: public IAccount getAccount(@NonNull final String identifier)
    parameters:
    - id: identifier
      type: 8789feb4
      description: <p>String of the identifier </p>
    return:
      type: com.microsoft.identity.client.IAccount
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount,@NonNull final RemoveAccountCallback)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  name: removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
  nameWithType: IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
  type: Method
  summary: "<p>Removes the Account and Credentials (tokens) for the supplied IAccount.</p>\r\n<p></p>"
  syntax:
    content: public void removeAccount(@Nullable final IAccount account, @NonNull final RemoveAccountCallback callback)
    parameters:
    - id: account
      type: 9a7d2fbdcom.microsoft.identity.client.IAccount
      description: <p>The IAccount whose entry and associated tokens should be removed. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback.yml
  name: IMultipleAccountPublicClientApplication.RemoveAccountCallback
  nameWithType: IMultipleAccountPublicClientApplication.RemoveAccountCallback
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.RemoveAccountCallback
  type: Interface
  syntax:
    content: public interface RemoveAccountCallback
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  name: removeAccount(@Nullable final IAccount account)
  nameWithType: IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount account)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.removeAccount(@Nullable final IAccount account)
  type: Method
  summary: "<p>Removes the Account and Credentials (tokens) for the supplied IAccount.</p>\r\n<p></p>"
  syntax:
    content: public boolean removeAccount(@Nullable final IAccount account)
    parameters:
    - id: account
      type: 9a7d2fbdcom.microsoft.identity.client.IAccount
      description: <p>The IAccount whose entry and associated tokens should be removed. </p>
    return:
      type: 4fc6e284
      description: <p>True, if the account was removed. False otherwise. </p>
- uid: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@Nullable final String,@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.IMultipleAccountPublicClientApplication
  href: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.yml
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
  nameWithType: IMultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.IMultipleAccountPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @Nullable final String loginHint, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Activity"></xref> that will be used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity"></xref>. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: loginHint
      type: b868e8dd
      description: <p>Optional. If provided, will be used as the query parameter sent for authenticating the user, which will have the UPN pre-populated. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: <p>The Non-null <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onCancel()"></xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onSuccess(IAuthenticationResult)"></xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback#onError(MsalException)"></xref>. </p>
- uid: com.microsoft.identity.client.AuthenticationCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AuthenticationCallback.yml
  name: AuthenticationCallback
  nameWithType: AuthenticationCallback
  fullName: com.microsoft.identity.client.AuthenticationCallback
  type: Interface
  summary: "<p>Callback passed with token acquisition. <xref uid=\"com.microsoft.identity.client.IAuthenticationResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IAuthenticationResult\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MsalException\"></xref> will be returned back via callback. </p>"
  syntax:
    content: public interface AuthenticationCallback extends SilentAuthenticationCallback
- uid: com.microsoft.identity.client.AuthenticationCallback.onCancel()
  parent: com.microsoft.identity.client.AuthenticationCallback
  href: com.microsoft.identity.client.AuthenticationCallback.yml
  name: onCancel()
  nameWithType: AuthenticationCallback.onCancel()
  fullName: com.microsoft.identity.client.AuthenticationCallback.onCancel()
  type: Method
  summary: "<p>Will be called if user cancels the flow. </p>"
  syntax:
    content: public void onCancel()
