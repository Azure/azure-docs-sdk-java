### YamlMime:JavaType
uid: "com.azure.resourcemanager.logic.models.AgreementContent"
fullName: "com.azure.resourcemanager.logic.models.AgreementContent"
name: "AgreementContent"
nameWithType: "AgreementContent"
summary: "The integration account agreement content."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **AgreementContent**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.logic.models.AgreementContent?alt=com.azure.resourcemanager.logic.models.AgreementContent&text=AgreementContent\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.logic.models.AgreementContent.AgreementContent()"
  fullName: "com.azure.resourcemanager.logic.models.AgreementContent.AgreementContent()"
  name: "AgreementContent()"
  nameWithType: "AgreementContent.AgreementContent()"
  summary: "Creates an instance of Agreement<wbr>Content class."
  syntax: "public AgreementContent()"
  desc: "Creates an instance of AgreementContent class."
methods:
- uid: "com.azure.resourcemanager.logic.models.AgreementContent.aS2()"
  fullName: "com.azure.resourcemanager.logic.models.AgreementContent.aS2()"
  name: "aS2()"
  nameWithType: "AgreementContent.aS2()"
  summary: "Get the aS2 property: The AS2 agreement content."
  syntax: "public AS2AgreementContent aS2()"
  desc: "Get the aS2 property: The AS2 agreement content."
  returns:
    description: "the aS2 value."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.AS2AgreementContent?alt=com.azure.resourcemanager.logic.models.AS2AgreementContent&text=AS2AgreementContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.AgreementContent.edifact()"
  fullName: "com.azure.resourcemanager.logic.models.AgreementContent.edifact()"
  name: "edifact()"
  nameWithType: "AgreementContent.edifact()"
  summary: "Get the edifact property: The EDIFACT agreement content."
  syntax: "public EdifactAgreementContent edifact()"
  desc: "Get the edifact property: The EDIFACT agreement content."
  returns:
    description: "the edifact value."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.EdifactAgreementContent?alt=com.azure.resourcemanager.logic.models.EdifactAgreementContent&text=EdifactAgreementContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.AgreementContent.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.logic.models.AgreementContent.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "AgreementContent.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Agreement<wbr>Content from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AgreementContent fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the AgreementContent."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of AgreementContent from the JsonReader."
  returns:
    description: "An instance of AgreementContent if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.AgreementContent?alt=com.azure.resourcemanager.logic.models.AgreementContent&text=AgreementContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.AgreementContent.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.logic.models.AgreementContent.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "AgreementContent.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.AgreementContent.validate()"
  fullName: "com.azure.resourcemanager.logic.models.AgreementContent.validate()"
  name: "validate()"
  nameWithType: "AgreementContent.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.logic.models.AgreementContent.withAS2(com.azure.resourcemanager.logic.models.AS2AgreementContent)"
  fullName: "com.azure.resourcemanager.logic.models.AgreementContent.withAS2(AS2AgreementContent aS2)"
  name: "withAS2(AS2AgreementContent aS2)"
  nameWithType: "AgreementContent.withAS2(AS2AgreementContent aS2)"
  summary: "Set the aS2 property: The AS2 agreement content."
  parameters:
  - description: "the aS2 value to set."
    name: "aS2"
    type: "<xref href=\"com.azure.resourcemanager.logic.models.AS2AgreementContent?alt=com.azure.resourcemanager.logic.models.AS2AgreementContent&text=AS2AgreementContent\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgreementContent withAS2(AS2AgreementContent aS2)"
  desc: "Set the aS2 property: The AS2 agreement content."
  returns:
    description: "the AgreementContent object itself."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.AgreementContent?alt=com.azure.resourcemanager.logic.models.AgreementContent&text=AgreementContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.AgreementContent.withEdifact(com.azure.resourcemanager.logic.models.EdifactAgreementContent)"
  fullName: "com.azure.resourcemanager.logic.models.AgreementContent.withEdifact(EdifactAgreementContent edifact)"
  name: "withEdifact(EdifactAgreementContent edifact)"
  nameWithType: "AgreementContent.withEdifact(EdifactAgreementContent edifact)"
  summary: "Set the edifact property: The EDIFACT agreement content."
  parameters:
  - description: "the edifact value to set."
    name: "edifact"
    type: "<xref href=\"com.azure.resourcemanager.logic.models.EdifactAgreementContent?alt=com.azure.resourcemanager.logic.models.EdifactAgreementContent&text=EdifactAgreementContent\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgreementContent withEdifact(EdifactAgreementContent edifact)"
  desc: "Set the edifact property: The EDIFACT agreement content."
  returns:
    description: "the AgreementContent object itself."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.AgreementContent?alt=com.azure.resourcemanager.logic.models.AgreementContent&text=AgreementContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.AgreementContent.withX12(com.azure.resourcemanager.logic.models.X12AgreementContent)"
  fullName: "com.azure.resourcemanager.logic.models.AgreementContent.withX12(X12AgreementContent x12)"
  name: "withX12(X12AgreementContent x12)"
  nameWithType: "AgreementContent.withX12(X12AgreementContent x12)"
  summary: "Set the x12 property: The X12 agreement content."
  parameters:
  - description: "the x12 value to set."
    name: "x12"
    type: "<xref href=\"com.azure.resourcemanager.logic.models.X12AgreementContent?alt=com.azure.resourcemanager.logic.models.X12AgreementContent&text=X12AgreementContent\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgreementContent withX12(X12AgreementContent x12)"
  desc: "Set the x12 property: The X12 agreement content."
  returns:
    description: "the AgreementContent object itself."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.AgreementContent?alt=com.azure.resourcemanager.logic.models.AgreementContent&text=AgreementContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.AgreementContent.x12()"
  fullName: "com.azure.resourcemanager.logic.models.AgreementContent.x12()"
  name: "x12()"
  nameWithType: "AgreementContent.x12()"
  summary: "Get the x12 property: The X12 agreement content."
  syntax: "public X12AgreementContent x12()"
  desc: "Get the x12 property: The X12 agreement content."
  returns:
    description: "the x12 value."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.X12AgreementContent?alt=com.azure.resourcemanager.logic.models.X12AgreementContent&text=X12AgreementContent\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The integration account agreement content."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.logic.models.AgreementContent?alt=com.azure.resourcemanager.logic.models.AgreementContent&text=AgreementContent\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.logic.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-logic:1.0.0
