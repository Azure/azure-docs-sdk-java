### YamlMime:JavaType
uid: "com.azure.security.keyvault.administration.KeyVaultBackupClient"
fullName: "com.azure.security.keyvault.administration.KeyVaultBackupClient"
name: "KeyVaultBackupClient"
nameWithType: "KeyVaultBackupClient"
summary: "The <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupClient\"></xref> provides synchronous methods to perform full a backup and restore of a key vault, as well as selectively restoring specific keys from a backup."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **KeyVaultBackupClient**"
methods:
- uid: "com.azure.security.keyvault.administration.KeyVaultBackupClient.beginBackup(java.lang.String,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultBackupClient.beginBackup(String blobStorageUrl, String sasToken)"
  name: "beginBackup(String blobStorageUrl, String sasToken)"
  nameWithType: "KeyVaultBackupClient.beginBackup(String blobStorageUrl, String sasToken)"
  summary: "Initiates a full backup of the Key Vault."
  parameters:
  - description: "The URL for the Blob Storage resource where the backup will be located."
    name: "blobStorageUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Optional Shared Access Signature (SAS) token to authorize access to the blob. If <code>null</code>,\n Managed Identity will be used to authenticate instead."
    name: "sasToken"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SyncPoller<KeyVaultBackupOperation,String> beginBackup(String blobStorageUrl, String sasToken)"
  desc: "Initiates a full backup of the Key Vault.\n\n**Code Samples**\n\nStarts a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultBackupOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"backup operation\"></xref>, polls for its status and waits for it to complete. Prints out the details of the operation's final result in case of success or prints out error details in case the operation fails.\n\n```java\nString blobStorageUrl = \"https://myaccount.blob.core.windows.net/myContainer\";\n String sasToken = \"sv=2020-02-10&ss=b&srt=o&sp=rwdlactfx&se=2021-06-17T07:13:07Z&st=2021-06-16T23:13:07Z\"\n     + \"&spr=https&sig=n5V6fnlkViEF9b7ij%2FttTHNwO2BdFIHKHppRxGAyJdc%3D\";\n\n SyncPoller<KeyVaultBackupOperation, String> backupPoller = client.beginBackup(blobStorageUrl, sasToken);\n\n PollResponse<KeyVaultBackupOperation> pollResponse = backupPoller.poll();\n\n System.out.printf(\"The current status of the operation is: %s.%n\", pollResponse.getStatus());\n\n PollResponse<KeyVaultBackupOperation> finalPollResponse = backupPoller.waitForCompletion();\n\n if (finalPollResponse.getStatus() == LongRunningOperationStatus.SUCCESSFULLY_COMPLETED) {\n     String folderUrl = backupPoller.getFinalResult();\n\n     System.out.printf(\"Backup completed. The storage location of this backup is: %s.%n\", folderUrl);\n } else {\n     KeyVaultBackupOperation operation = backupPoller.poll().getValue();\n\n     System.out.printf(\"Backup failed with error: %s.%n\", operation.getError().getMessage());\n }\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> polling on the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultBackupOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"backup operation\"></xref> status."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultBackupOperation?alt=com.azure.security.keyvault.administration.models.KeyVaultBackupOperation&text=KeyVaultBackupOperation\" data-throw-if-not-resolved=\"False\" />,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultBackupClient.beginRestore(java.lang.String,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultBackupClient.beginRestore(String folderUrl, String sasToken)"
  name: "beginRestore(String folderUrl, String sasToken)"
  nameWithType: "KeyVaultBackupClient.beginRestore(String folderUrl, String sasToken)"
  summary: "Initiates a full restore of the Key Vault."
  parameters:
  - description: "The URL for the Blob Storage resource where the backup is located, including the path to\n the blob container where the backup resides. This would be the exact value that is returned as the result of a\n backup operation. An example of such a URL may look like the following:\n https://contoso.blob.core.windows.net/backup/mhsm-contoso-2020090117323313."
    name: "folderUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Optional Shared Access Signature (SAS) token to authorize access to the blob. If <code>null</code>,\n Managed Identity will be used to authenticate instead."
    name: "sasToken"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SyncPoller<KeyVaultRestoreOperation,KeyVaultRestoreResult> beginRestore(String folderUrl, String sasToken)"
  desc: "Initiates a full restore of the Key Vault.\n\n**Code Samples**\n\nStarts a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRestoreOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"restore operation\"></xref>, polls for its status and waits for it to complete. Prints out error details in case the operation fails.\n\n```java\nString blobStorageUrl = \"https://myaccount.blob.core.windows.net/myContainer\";\n String sasToken = \"sv=2020-02-10&ss=b&srt=o&sp=rwdlactfx&se=2021-06-17T07:13:07Z&st=2021-06-16T23:13:07Z\"\n     + \"&spr=https&sig=n5V6fnlkViEF9b7ij%2FttTHNwO2BdFIHKHppRxGAyJdc%3D\";\n\n SyncPoller<KeyVaultBackupOperation, String> backupPoller = client.beginBackup(blobStorageUrl, sasToken);\n\n PollResponse<KeyVaultBackupOperation> pollResponse = backupPoller.poll();\n\n System.out.printf(\"The current status of the operation is: %s.%n\", pollResponse.getStatus());\n\n PollResponse<KeyVaultBackupOperation> finalPollResponse = backupPoller.waitForCompletion();\n\n if (finalPollResponse.getStatus() == LongRunningOperationStatus.SUCCESSFULLY_COMPLETED) {\n     String folderUrl = backupPoller.getFinalResult();\n\n     System.out.printf(\"Backup completed. The storage location of this backup is: %s.%n\", folderUrl);\n } else {\n     KeyVaultBackupOperation operation = backupPoller.poll().getValue();\n\n     System.out.printf(\"Backup failed with error: %s.%n\", operation.getError().getMessage());\n }\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll on the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRestoreOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"restore operation\"></xref> status."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRestoreOperation?alt=com.azure.security.keyvault.administration.models.KeyVaultRestoreOperation&text=KeyVaultRestoreOperation\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRestoreResult?alt=com.azure.security.keyvault.administration.models.KeyVaultRestoreResult&text=KeyVaultRestoreResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultBackupClient.beginSelectiveKeyRestore(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultBackupClient.beginSelectiveKeyRestore(String keyName, String folderUrl, String sasToken)"
  name: "beginSelectiveKeyRestore(String keyName, String folderUrl, String sasToken)"
  nameWithType: "KeyVaultBackupClient.beginSelectiveKeyRestore(String keyName, String folderUrl, String sasToken)"
  summary: "Restores all versions of a given key using the supplied SAS token pointing to a previously stored Azure Blob storage backup folder."
  parameters:
  - description: "The name of the key to be restored."
    name: "keyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The URL for the Blob Storage resource where the backup is located, including the path to\n the blob container where the backup resides. This would be the exact value that is returned as the result of a\n backup operation. An example of such a URL may look like the following:\n https://contoso.blob.core.windows.net/backup/mhsm-contoso-2020090117323313."
    name: "folderUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Optional Shared Access Signature (SAS) token to authorize access to the blob. If <code>null</code>,\n Managed Identity will be used to authenticate instead."
    name: "sasToken"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SyncPoller<KeyVaultSelectiveKeyRestoreOperation,KeyVaultSelectiveKeyRestoreResult> beginSelectiveKeyRestore(String keyName, String folderUrl, String sasToken)"
  desc: "Restores all versions of a given key using the supplied SAS token pointing to a previously stored Azure Blob storage backup folder.\n\n**Code Samples**\n\nStarts a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultSelectiveKeyRestoreOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"selective key restore operation\"></xref>, polls for its status and waits for it to complete. Prints out error details in case the operation fails.\n\n```java\nString folderUrl = \"https://myaccount.blob.core.windows.net/myContainer/mhsm-myaccount-2020090117323313\";\n String sasToken = \"sv=2020-02-10&ss=b&srt=o&sp=rwdlactfx&se=2021-06-17T07:13:07Z&st=2021-06-16T23:13:07Z\"\n     + \"&spr=https&sig=n5V6fnlkViEF9b7ij%2FttTHNwO2BdFIHKHppRxGAyJdc%3D\";\n String keyName = \"myKey\";\n\n SyncPoller<KeyVaultSelectiveKeyRestoreOperation, KeyVaultSelectiveKeyRestoreResult> backupPoller =\n     client.beginSelectiveKeyRestore(folderUrl, sasToken, keyName);\n\n PollResponse<KeyVaultSelectiveKeyRestoreOperation> pollResponse = backupPoller.poll();\n\n System.out.printf(\"The current status of the operation is: %s.%n\", pollResponse.getStatus());\n\n PollResponse<KeyVaultSelectiveKeyRestoreOperation> finalPollResponse = backupPoller.waitForCompletion();\n\n if (finalPollResponse.getStatus() == LongRunningOperationStatus.SUCCESSFULLY_COMPLETED) {\n     System.out.printf(\"Key restored successfully.%n\");\n } else {\n     KeyVaultSelectiveKeyRestoreOperation operation = backupPoller.poll().getValue();\n\n     System.out.printf(\"Key restore failed with error: %s.%n\", operation.getError().getMessage());\n }\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll on the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRestoreOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"restore operation\"></xref> status."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultSelectiveKeyRestoreOperation?alt=com.azure.security.keyvault.administration.models.KeyVaultSelectiveKeyRestoreOperation&text=KeyVaultSelectiveKeyRestoreOperation\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultSelectiveKeyRestoreResult?alt=com.azure.security.keyvault.administration.models.KeyVaultSelectiveKeyRestoreResult&text=KeyVaultSelectiveKeyRestoreResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultBackupClient.getVaultUrl()"
  fullName: "com.azure.security.keyvault.administration.KeyVaultBackupClient.getVaultUrl()"
  name: "getVaultUrl()"
  nameWithType: "KeyVaultBackupClient.getVaultUrl()"
  summary: "Get the vault endpoint URL."
  syntax: "public String getVaultUrl()"
  desc: "Get the vault endpoint URL."
  returns:
    description: "The vault endpoint URL."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
type: "class"
desc: "The <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupClient\"></xref> provides synchronous methods to perform full a backup and restore of a key vault, as well as selectively restoring specific keys from a backup.\n\n## Getting Started ##\n\nIn order to interact with the Azure Key Vault service, you will need to create an instance of the <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupClient\"></xref> class, a vault url and a credential object.\n\nThe examples shown in this document use a credential object named DefaultAzureCredential for authentication, which is appropriate for most scenarios, including local development and production environments. Additionally, we recommend using a [ managed identity][managed identity] for authentication in production environments. You can find more information on different ways of authenticating and their corresponding credential types in the [ Azure Identity documentation\"][Azure Identity documentation].\n\n**Sample: Construct Asynchronous Backup Client**\n\nThe following code sample demonstrates the creation of a <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupClient\"></xref>, using the <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupClientBuilder\"></xref> to configure it.\n\n```java\nKeyVaultBackupClient keyVaultBackupClient = new KeyVaultBackupClientBuilder()\n     .vaultUrl(\"<your-managed-hsm-url>\")\n     .credential(new DefaultAzureCredentialBuilder().build())\n     .buildClient();\n```\n\n\n--------------------\n\n## Back Up a Collection of Keys ##\n\nThe <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupClient\"></xref> can be used to back up the entire collection of keys from a key vault.\n\n**Code Sample:**\n\nThe following code sample demonstrates how to synchronously back up an entire collection of keys using, using the <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupClient.beginBackup(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupClient#beginBackup(String, String)\"></xref> API.\n\n```java\nString blobStorageUrl = \"https://myaccount.blob.core.windows.net/myContainer\";\n String sasToken = \"sv=2020-02-10&ss=b&srt=o&sp=rwdlactfx&se=2021-06-17T07:13:07Z&st=2021-06-16T23:13:07Z\"\n     + \"&spr=https&sig=n5V6fnlkViEF9b7ij%2FttTHNwO2BdFIHKHppRxGAyJdc%3D\";\n\n SyncPoller<KeyVaultBackupOperation, String> backupPoller = client.beginBackup(blobStorageUrl, sasToken);\n\n PollResponse<KeyVaultBackupOperation> pollResponse = backupPoller.poll();\n\n System.out.printf(\"The current status of the operation is: %s.%n\", pollResponse.getStatus());\n\n PollResponse<KeyVaultBackupOperation> finalPollResponse = backupPoller.waitForCompletion();\n\n if (finalPollResponse.getStatus() == LongRunningOperationStatus.SUCCESSFULLY_COMPLETED) {\n     String folderUrl = backupPoller.getFinalResult();\n\n     System.out.printf(\"Backup completed. The storage location of this backup is: %s.%n\", folderUrl);\n } else {\n     KeyVaultBackupOperation operation = backupPoller.poll().getValue();\n\n     System.out.printf(\"Backup failed with error: %s.%n\", operation.getError().getMessage());\n }\n```\n\n**Note:** For the asynchronous sample, refer to <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupAsyncClient\"></xref>.\n\n\n--------------------\n\n## Restore a Collection of Keys ##\n\nThe <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupClient\"></xref> can be used to restore an entire collection of keys from a backup.\n\n**Code Sample:**\n\nThe following code sample demonstrates how to synchronously restore an entire collection of keys from a backup, using the <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupClient.beginRestore(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupClient#beginRestore(String, String)\"></xref> API.\n\n```java\nString folderUrl = \"https://myaccount.blob.core.windows.net/myContainer/mhsm-myaccount-2020090117323313\";\n String sasToken = \"sv=2020-02-10&ss=b&srt=o&sp=rwdlactfx&se=2021-06-17T07:13:07Z&st=2021-06-16T23:13:07Z\"\n     + \"&spr=https&sig=n5V6fnlkViEF9b7ij%2FttTHNwO2BdFIHKHppRxGAyJdc%3D\";\n\n SyncPoller<KeyVaultRestoreOperation, KeyVaultRestoreResult> backupPoller =\n     client.beginRestore(folderUrl, sasToken);\n\n PollResponse<KeyVaultRestoreOperation> pollResponse = backupPoller.poll();\n\n System.out.printf(\"The current status of the operation is: %s.%n\", pollResponse.getStatus());\n\n PollResponse<KeyVaultRestoreOperation> finalPollResponse = backupPoller.waitForCompletion();\n\n if (finalPollResponse.getStatus() == LongRunningOperationStatus.SUCCESSFULLY_COMPLETED) {\n     System.out.printf(\"Backup restored successfully.%n\");\n } else {\n     KeyVaultRestoreOperation operation = backupPoller.poll().getValue();\n\n     System.out.printf(\"Restore failed with error: %s.%n\", operation.getError().getMessage());\n }\n```\n\n**Note:** For the asynchronous sample, refer to <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupAsyncClient\"></xref>.\n\n\n--------------------\n\n## Selectively Restore a Key ##\n\nThe <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupClient\"></xref> can be used to restore a specific key from a backup.\n\n**Code Sample:**\n\nThe following code sample demonstrates how to synchronously restore a specific key from a backup, using the <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupClient.beginSelectiveKeyRestore(java.lang.String,java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupClient#beginSelectiveKeyRestore(String, String, String)\"></xref> API.\n\n```java\nString folderUrl = \"https://myaccount.blob.core.windows.net/myContainer/mhsm-myaccount-2020090117323313\";\n String sasToken = \"sv=2020-02-10&ss=b&srt=o&sp=rwdlactfx&se=2021-06-17T07:13:07Z&st=2021-06-16T23:13:07Z\"\n     + \"&spr=https&sig=n5V6fnlkViEF9b7ij%2FttTHNwO2BdFIHKHppRxGAyJdc%3D\";\n String keyName = \"myKey\";\n\n SyncPoller<KeyVaultSelectiveKeyRestoreOperation, KeyVaultSelectiveKeyRestoreResult> backupPoller =\n     client.beginSelectiveKeyRestore(folderUrl, sasToken, keyName);\n\n PollResponse<KeyVaultSelectiveKeyRestoreOperation> pollResponse = backupPoller.poll();\n\n System.out.printf(\"The current status of the operation is: %s.%n\", pollResponse.getStatus());\n\n PollResponse<KeyVaultSelectiveKeyRestoreOperation> finalPollResponse = backupPoller.waitForCompletion();\n\n if (finalPollResponse.getStatus() == LongRunningOperationStatus.SUCCESSFULLY_COMPLETED) {\n     System.out.printf(\"Key restored successfully.%n\");\n } else {\n     KeyVaultSelectiveKeyRestoreOperation operation = backupPoller.poll().getValue();\n\n     System.out.printf(\"Key restore failed with error: %s.%n\", operation.getError().getMessage());\n }\n```\n\n**Note:** For the asynchronous sample, refer to <xref uid=\"com.azure.security.keyvault.administration.KeyVaultBackupAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultBackupAsyncClient\"></xref>.\n\n\n--------------------\n\n\n[managed identity]: https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/\n[Azure Identity documentation]: https://learn.microsoft.com/java/api/overview/azure/identity-readme?view=azure-java-stable"
metadata: {}
package: "com.azure.security.keyvault.administration"
artifact: com.azure:azure-security-keyvault-administration:4.5.0
