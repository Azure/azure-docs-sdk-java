### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  id: DiskEncryptionSetsClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent
  children:
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDelete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDeleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.list()
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listAsync()
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  - com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  langs:
  - java
  name: DiskEncryptionSetsClient
  nameWithType: DiskEncryptionSetsClient
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  type: Interface
  package: com.azure.resourcemanager.compute.fluent
  summary: An instance of this class provides access to all the operations defined in DiskEncryptionSetsClient.
  syntax:
    content: public interface DiskEncryptionSetsClient extends InnerSupportsGet<DiskEncryptionSetInner>, InnerSupportsListing<DiskEncryptionSetInner>, InnerSupportsDelete<Void>
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  nameWithType: DiskEncryptionSetsClient.beginCreateOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a disk encryption set.
  syntax:
    content: public abstract SyncPoller<PollResult<DiskEncryptionSetInner>,DiskEncryptionSetInner> beginCreateOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
      description: disk encryption set resource.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet, Context context)
  nameWithType: DiskEncryptionSetsClient.beginCreateOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet, Context context)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a disk encryption set.
  syntax:
    content: public abstract SyncPoller<PollResult<DiskEncryptionSetInner>,DiskEncryptionSetInner> beginCreateOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
      description: disk encryption set resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  id: beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: beginCreateOrUpdateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  nameWithType: DiskEncryptionSetsClient.beginCreateOrUpdateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a disk encryption set.
  syntax:
    content: public abstract PollerFlux<PollResult<DiskEncryptionSetInner>,DiskEncryptionSetInner> beginCreateOrUpdateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
      description: disk encryption set resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDelete(java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String diskEncryptionSetName)
  nameWithType: DiskEncryptionSetsClient.beginDelete(String resourceGroupName, String diskEncryptionSetName)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDelete(String resourceGroupName, String diskEncryptionSetName)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a disk encryption set.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String diskEncryptionSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String diskEncryptionSetName, Context context)
  nameWithType: DiskEncryptionSetsClient.beginDelete(String resourceGroupName, String diskEncryptionSetName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDelete(String resourceGroupName, String diskEncryptionSetName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a disk encryption set.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String diskEncryptionSetName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDeleteAsync(java.lang.String,java.lang.String)
  id: beginDeleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: beginDeleteAsync(String resourceGroupName, String diskEncryptionSetName)
  nameWithType: DiskEncryptionSetsClient.beginDeleteAsync(String resourceGroupName, String diskEncryptionSetName)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDeleteAsync(String resourceGroupName, String diskEncryptionSetName)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDeleteAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a disk encryption set.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String diskEncryptionSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  nameWithType: DiskEncryptionSetsClient.beginUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Updates (patches) a disk encryption set.
  syntax:
    content: public abstract SyncPoller<PollResult<DiskEncryptionSetInner>,DiskEncryptionSetInner> beginUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate
      description: disk encryption set update resource.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate,com.azure.core.util.Context)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet, Context context)
  nameWithType: DiskEncryptionSetsClient.beginUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet, Context context)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Updates (patches) a disk encryption set.
  syntax:
    content: public abstract SyncPoller<PollResult<DiskEncryptionSetInner>,DiskEncryptionSetInner> beginUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate
      description: disk encryption set update resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  id: beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: beginUpdateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  nameWithType: DiskEncryptionSetsClient.beginUpdateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Updates (patches) a disk encryption set.
  syntax:
    content: public abstract PollerFlux<PollResult<DiskEncryptionSetInner>,DiskEncryptionSetInner> beginUpdateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate
      description: disk encryption set update resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  nameWithType: DiskEncryptionSetsClient.createOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a disk encryption set.
  syntax:
    content: public abstract DiskEncryptionSetInner createOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
      description: disk encryption set resource.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet, Context context)
  nameWithType: DiskEncryptionSetsClient.createOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet, Context context)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a disk encryption set.
  syntax:
    content: public abstract DiskEncryptionSetInner createOrUpdate(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
      description: disk encryption set resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  nameWithType: DiskEncryptionSetsClient.createOrUpdateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a disk encryption set.
  syntax:
    content: public abstract Mono<DiskEncryptionSetInner> createOrUpdateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
      description: disk encryption set resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  nameWithType: DiskEncryptionSetsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a disk encryption set.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetInner diskEncryptionSet)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
      description: disk encryption set resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: delete(String resourceGroupName, String diskEncryptionSetName)
  nameWithType: DiskEncryptionSetsClient.delete(String resourceGroupName, String diskEncryptionSetName)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.delete(String resourceGroupName, String diskEncryptionSetName)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.delete*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a disk encryption set.
  syntax:
    content: public abstract void delete(String resourceGroupName, String diskEncryptionSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: delete(String resourceGroupName, String diskEncryptionSetName, Context context)
  nameWithType: DiskEncryptionSetsClient.delete(String resourceGroupName, String diskEncryptionSetName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.delete(String resourceGroupName, String diskEncryptionSetName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.delete*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a disk encryption set.
  syntax:
    content: public abstract void delete(String resourceGroupName, String diskEncryptionSetName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String diskEncryptionSetName)
  nameWithType: DiskEncryptionSetsClient.deleteAsync(String resourceGroupName, String diskEncryptionSetName)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.deleteAsync(String resourceGroupName, String diskEncryptionSetName)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a disk encryption set.
  syntax:
    content: public abstract Mono<Void> deleteAsync(String resourceGroupName, String diskEncryptionSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String diskEncryptionSetName)
  nameWithType: DiskEncryptionSetsClient.deleteWithResponseAsync(String resourceGroupName, String diskEncryptionSetName)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.deleteWithResponseAsync(String resourceGroupName, String diskEncryptionSetName)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a disk encryption set.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String diskEncryptionSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String diskEncryptionSetName)
  nameWithType: DiskEncryptionSetsClient.getByResourceGroup(String resourceGroupName, String diskEncryptionSetName)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroup(String resourceGroupName, String diskEncryptionSetName)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets information about a disk encryption set.
  syntax:
    content: public abstract DiskEncryptionSetInner getByResourceGroup(String resourceGroupName, String diskEncryptionSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
      description: information about a disk encryption set.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String diskEncryptionSetName)
  nameWithType: DiskEncryptionSetsClient.getByResourceGroupAsync(String resourceGroupName, String diskEncryptionSetName)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupAsync(String resourceGroupName, String diskEncryptionSetName)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets information about a disk encryption set.
  syntax:
    content: public abstract Mono<DiskEncryptionSetInner> getByResourceGroupAsync(String resourceGroupName, String diskEncryptionSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: information about a disk encryption set.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: getByResourceGroupWithResponse(String resourceGroupName, String diskEncryptionSetName, Context context)
  nameWithType: DiskEncryptionSetsClient.getByResourceGroupWithResponse(String resourceGroupName, String diskEncryptionSetName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupWithResponse(String resourceGroupName, String diskEncryptionSetName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupWithResponse*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets information about a disk encryption set.
  syntax:
    content: public abstract Response<DiskEncryptionSetInner> getByResourceGroupWithResponse(String resourceGroupName, String diskEncryptionSetName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: information about a disk encryption set.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String diskEncryptionSetName)
  nameWithType: DiskEncryptionSetsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String diskEncryptionSetName)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String diskEncryptionSetName)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets information about a disk encryption set.
  syntax:
    content: public abstract Mono<Response<DiskEncryptionSetInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String diskEncryptionSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>>
      description: information about a disk encryption set.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: list()
  nameWithType: DiskEncryptionSetsClient.list()
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.list()
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.list*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Lists all the disk encryption sets under a subscription.
  syntax:
    content: public abstract PagedIterable<DiskEncryptionSetInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: the List disk encryption set operation response.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: list(Context context)
  nameWithType: DiskEncryptionSetsClient.list(Context context)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.list(Context context)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.list*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Lists all the disk encryption sets under a subscription.
  syntax:
    content: public abstract PagedIterable<DiskEncryptionSetInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: the List disk encryption set operation response.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: listAsync()
  nameWithType: DiskEncryptionSetsClient.listAsync()
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listAsync()
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Lists all the disk encryption sets under a subscription.
  syntax:
    content: public abstract PagedFlux<DiskEncryptionSetInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: the List disk encryption set operation response.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: DiskEncryptionSetsClient.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Lists all the disk encryption sets under a resource group.
  syntax:
    content: public abstract PagedIterable<DiskEncryptionSetInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: the List disk encryption set operation response.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: DiskEncryptionSetsClient.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Lists all the disk encryption sets under a resource group.
  syntax:
    content: public abstract PagedIterable<DiskEncryptionSetInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: the List disk encryption set operation response.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: DiskEncryptionSetsClient.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Lists all the disk encryption sets under a resource group.
  syntax:
    content: public abstract PagedFlux<DiskEncryptionSetInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: the List disk encryption set operation response.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: update(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  nameWithType: DiskEncryptionSetsClient.update(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.update(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.update*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Updates (patches) a disk encryption set.
  syntax:
    content: public abstract DiskEncryptionSetInner update(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate
      description: disk encryption set update resource.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: update(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet, Context context)
  nameWithType: DiskEncryptionSetsClient.update(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.update(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet, Context context)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.update*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Updates (patches) a disk encryption set.
  syntax:
    content: public abstract DiskEncryptionSetInner update(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate
      description: disk encryption set update resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  nameWithType: DiskEncryptionSetsClient.updateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.updateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Updates (patches) a disk encryption set.
  syntax:
    content: public abstract Mono<DiskEncryptionSetInner> updateAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate
      description: disk encryption set update resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
      description: disk encryption set resource.
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
  parent: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  nameWithType: DiskEncryptionSetsClient.updateWithResponseAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.updateWithResponseAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
  overload: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Updates (patches) a disk encryption set.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String diskEncryptionSetName, DiskEncryptionSetUpdate diskEncryptionSet)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: diskEncryptionSetName
      type: java.lang.String
      description: >-
        The name of the disk encryption set that is being created. The name can't be changed
             after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The
             maximum name length is 80 characters.
    - id: diskEncryptionSet
      type: com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate
      description: disk encryption set update resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: disk encryption set resource.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
  name: DiskEncryptionSetInner
  nameWithType: DiskEncryptionSetInner
  fullName: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: DiskEncryptionSetsClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
    name: DiskEncryptionSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
    name: DiskEncryptionSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdateAsync*
  name: beginCreateOrUpdateAsync
  nameWithType: DiskEncryptionSetsClient.beginCreateOrUpdateAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
    name: DiskEncryptionSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
    name: DiskEncryptionSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: DiskEncryptionSetsClient.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginCreateOrUpdate
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
    name: DiskEncryptionSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: DiskEncryptionSetsClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: DiskEncryptionSetsClient.createOrUpdate
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.createOrUpdate
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate
  name: DiskEncryptionSetUpdate
  nameWithType: DiskEncryptionSetUpdate
  fullName: com.azure.resourcemanager.compute.models.DiskEncryptionSetUpdate
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: DiskEncryptionSetsClient.updateWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.updateWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdateAsync*
  name: beginUpdateAsync
  nameWithType: DiskEncryptionSetsClient.beginUpdateAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdate*
  name: beginUpdate
  nameWithType: DiskEncryptionSetsClient.beginUpdate
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginUpdate
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.updateAsync*
  name: updateAsync
  nameWithType: DiskEncryptionSetsClient.updateAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.updateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.update*
  name: update
  nameWithType: DiskEncryptionSetsClient.update
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.update
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
    name: DiskEncryptionSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: DiskEncryptionSetsClient.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: DiskEncryptionSetsClient.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: DiskEncryptionSetsClient.getByResourceGroup
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroup
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
    name: DiskEncryptionSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupWithResponse*
  name: getByResourceGroupWithResponse
  nameWithType: DiskEncryptionSetsClient.getByResourceGroupWithResponse
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.getByResourceGroupWithResponse
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: DiskEncryptionSetsClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDeleteAsync*
  name: beginDeleteAsync
  nameWithType: DiskEncryptionSetsClient.beginDeleteAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDeleteAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDelete*
  name: beginDelete
  nameWithType: DiskEncryptionSetsClient.beginDelete
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.beginDelete
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.deleteAsync*
  name: deleteAsync
  nameWithType: DiskEncryptionSetsClient.deleteAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.deleteAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.delete*
  name: delete
  nameWithType: DiskEncryptionSetsClient.delete
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.delete
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
    name: DiskEncryptionSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: DiskEncryptionSetsClient.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroupAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
    name: DiskEncryptionSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: DiskEncryptionSetsClient.listByResourceGroup
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listByResourceGroup
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listAsync*
  name: listAsync
  nameWithType: DiskEncryptionSetsClient.listAsync
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.listAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.list*
  name: list
  nameWithType: DiskEncryptionSetsClient.list
  fullName: com.azure.resourcemanager.compute.fluent.DiskEncryptionSetsClient.list
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
  name: InnerSupportsListing<DiskEncryptionSetInner>
  nameWithType: InnerSupportsListing<DiskEncryptionSetInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
  name: InnerSupportsGet<DiskEncryptionSetInner>
  nameWithType: InnerSupportsGet<DiskEncryptionSetInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
  name: DiskEncryptionSetInner>,DiskEncryptionSetInner
  nameWithType: DiskEncryptionSetInner>,DiskEncryptionSetInner
  fullName: com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner>,com.azure.resourcemanager.compute.fluent.models.DiskEncryptionSetInner
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
