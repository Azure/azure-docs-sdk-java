### YamlMime:JavaMember
uid: "com.azure.data.tables.TableClientBuilder.enableTenantDiscovery*"
fullName: "com.azure.data.tables.TableClientBuilder.enableTenantDiscovery"
name: "enableTenantDiscovery"
nameWithType: "TableClientBuilder.enableTenantDiscovery"
members:
- uid: "com.azure.data.tables.TableClientBuilder.enableTenantDiscovery()"
  fullName: "com.azure.data.tables.TableClientBuilder.enableTenantDiscovery()"
  name: "enableTenantDiscovery()"
  nameWithType: "TableClientBuilder.enableTenantDiscovery()"
  summary: "Enable tenant discovery when authenticating with the Table Service."
  syntax: "public TableClientBuilder enableTenantDiscovery()"
  desc: "Enable tenant discovery when authenticating with the Table Service. **This functionality is disabled by default and only available for Storage endpoints using service version <xref uid=\"com.azure.data.tables.TableServiceVersion.V2020_12_06\" data-throw-if-not-resolved=\"false\" data-raw-source=\"2020_12_06\"></xref>.**\n\nEnable this if there is a chance for your application and the Storage account it communicates with to reside in different tenants. If this is enabled, clients created using this builder will make an unauthorized initial service request that will be met with a `401` response containing an authentication challenge, which will be subsequently used to retrieve an access token to authorize all further requests with."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableClientBuilder?alt=com.azure.data.tables.TableClientBuilder&text=TableClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.data.tables"
artifact: com.azure:azure-data-tables:12.3.2
