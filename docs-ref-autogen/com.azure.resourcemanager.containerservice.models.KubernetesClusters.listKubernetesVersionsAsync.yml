### YamlMime:JavaMember
uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listKubernetesVersionsAsync*"
fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listKubernetesVersionsAsync"
name: "listKubernetesVersionsAsync"
nameWithType: "KubernetesClusters.listKubernetesVersionsAsync"
members:
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listKubernetesVersionsAsync(com.azure.core.management.Region)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listKubernetesVersionsAsync(Region region)"
  name: "listKubernetesVersionsAsync(Region region)"
  nameWithType: "KubernetesClusters.listKubernetesVersionsAsync(Region region)"
  summary: "Returns the list of available Kubernetes versions available for the given Azure region."
  parameters:
  - description: "the Azure region to query into"
    name: "region"
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Set<String>> listKubernetesVersionsAsync(Region region)"
  returns:
    description: "a future representation of a set of Kubernetes versions which can be used when creating a service in this\n     region"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.containerservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.1.0
