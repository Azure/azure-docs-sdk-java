### YamlMime:JavaMember
uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withPowerState*"
fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withPowerState"
name: "withPowerState"
nameWithType: "AgentPoolInner.withPowerState"
members:
- uid: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withPowerState(com.azure.resourcemanager.containerservice.models.PowerState)"
  fullName: "com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner.withPowerState(PowerState powerState)"
  name: "withPowerState(PowerState powerState)"
  nameWithType: "AgentPoolInner.withPowerState(PowerState powerState)"
  summary: "Set the powerState property: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded."
  parameters:
  - description: "the powerState value to set."
    name: "powerState"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.PowerState?alt=com.azure.resourcemanager.containerservice.models.PowerState&text=PowerState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AgentPoolInner withPowerState(PowerState powerState)"
  returns:
    description: "the AgentPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner?alt=com.azure.resourcemanager.containerservice.fluent.models.AgentPoolInner&text=AgentPoolInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.containerservice.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.13.0
