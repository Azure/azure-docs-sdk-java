### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync*"
fullName: "com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync"
name: "rebootAsync"
nameWithType: "ComputeNodes.rebootAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId)"
  name: "rebootAsync(String poolId, String nodeId)"
  nameWithType: "ComputeNodes.rebootAsync(String poolId, String nodeId)"
  summary: "Restarts the specified Compute Node. You can restart a Compute Node only if it is in an idle or running state."
  parameters:
  - description: "The ID of the Pool that contains the Compute Node."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Compute Node that you want to restart."
    name: "nodeId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> rebootAsync(String poolId, String nodeId)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions)"
  fullName: "com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)"
  name: "rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)"
  nameWithType: "ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)"
  summary: "Restarts the specified Compute Node. You can restart a Compute Node only if it is in an idle or running state."
  parameters:
  - description: "The ID of the Pool that contains the Compute Node."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Compute Node that you want to restart."
    name: "nodeId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "When to reboot the Compute Node and what to do with currently running Tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData'"
    name: "nodeRebootOption"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption&text=ComputeNodeRebootOption\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "computeNodeRebootOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions&text=ComputeNodeRebootOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, ServiceCallback<Void> serviceCallback)"
  name: "rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Restarts the specified Compute Node. You can restart a Compute Node only if it is in an idle or running state."
  parameters:
  - description: "The ID of the Pool that contains the Compute Node."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Compute Node that you want to restart."
    name: "nodeId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "When to reboot the Compute Node and what to do with currently running Tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData'"
    name: "nodeRebootOption"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption&text=ComputeNodeRebootOption\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "computeNodeRebootOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions&text=ComputeNodeRebootOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, ServiceCallback<Void> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)"
  name: "rebootAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)"
  nameWithType: "ComputeNodes.rebootAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)"
  summary: "Restarts the specified Compute Node. You can restart a Compute Node only if it is in an idle or running state."
  parameters:
  - description: "The ID of the Pool that contains the Compute Node."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Compute Node that you want to restart."
    name: "nodeId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> rebootAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:9.0.0
