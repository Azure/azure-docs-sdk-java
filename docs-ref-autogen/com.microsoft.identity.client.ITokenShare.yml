### YamlMime:ManagedReference
items:
- uid: com.microsoft.identity.client.ITokenShare
  id: ITokenShare
  parent: com.microsoft.identity.client
  children:
  - com.microsoft.identity.client.ITokenShare.getMsaFamilyRefreshToken(String)
  - com.microsoft.identity.client.ITokenShare.getOrgIdFamilyRefreshToken(String)
  - com.microsoft.identity.client.ITokenShare.saveMsaFamilyRefreshToken(String)
  - com.microsoft.identity.client.ITokenShare.saveOrgIdFamilyRefreshToken(String)
  href: com.microsoft.identity.client.ITokenShare.yml
  langs:
  - java
  name: ITokenShare
  nameWithType: ITokenShare
  fullName: com.microsoft.identity.client.ITokenShare
  type: Interface
  source:
    remote: &o0
      path: msal/src/main/java/com/microsoft/identity/client/ITokenShare.java
      branch: master
      repo: https://github.com/AzureAD/microsoft-authentication-library-for-android
    path: msal/src/main/java/com/microsoft/identity/client/ITokenShare.java
    startLine: 30
  package: com.microsoft.identity.client
  summary: "<p>Interface defining necessary methods for TokenShareLibrary (TSL) integration. </p>"
  syntax:
    content: public interface ITokenShare
- uid: com.microsoft.identity.client.ITokenShare.getMsaFamilyRefreshToken(String)
  id: getMsaFamilyRefreshToken(String)
  parent: com.microsoft.identity.client.ITokenShare
  href: com.microsoft.identity.client.ITokenShare.yml
  langs:
  - java
  name: getMsaFamilyRefreshToken(String identifier)
  nameWithType: ITokenShare.getMsaFamilyRefreshToken(String identifier)
  fullName: com.microsoft.identity.client.ITokenShare.getMsaFamilyRefreshToken(String identifier)
  overload: com.microsoft.identity.client.ITokenShare.getMsaFamilyRefreshToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/ITokenShare.java
    startLine: 48
  package: com.microsoft.identity.client
  syntax:
    content: public String getMsaFamilyRefreshToken(String identifier)
    parameters:
    - id: identifier
      type: "26831127"
    return:
      type: "26831127"
- uid: com.microsoft.identity.client.ITokenShare.getOrgIdFamilyRefreshToken(String)
  id: getOrgIdFamilyRefreshToken(String)
  parent: com.microsoft.identity.client.ITokenShare
  href: com.microsoft.identity.client.ITokenShare.yml
  langs:
  - java
  name: getOrgIdFamilyRefreshToken(String identifier)
  nameWithType: ITokenShare.getOrgIdFamilyRefreshToken(String identifier)
  fullName: com.microsoft.identity.client.ITokenShare.getOrgIdFamilyRefreshToken(String identifier)
  overload: com.microsoft.identity.client.ITokenShare.getOrgIdFamilyRefreshToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/ITokenShare.java
    startLine: 36
  package: com.microsoft.identity.client
  syntax:
    content: public String getOrgIdFamilyRefreshToken(String identifier)
    parameters:
    - id: identifier
      type: "26831127"
    return:
      type: "26831127"
- uid: com.microsoft.identity.client.ITokenShare.saveMsaFamilyRefreshToken(String)
  id: saveMsaFamilyRefreshToken(String)
  parent: com.microsoft.identity.client.ITokenShare
  href: com.microsoft.identity.client.ITokenShare.yml
  langs:
  - java
  name: saveMsaFamilyRefreshToken(String refreshToken)
  nameWithType: ITokenShare.saveMsaFamilyRefreshToken(String refreshToken)
  fullName: com.microsoft.identity.client.ITokenShare.saveMsaFamilyRefreshToken(String refreshToken)
  overload: com.microsoft.identity.client.ITokenShare.saveMsaFamilyRefreshToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/ITokenShare.java
    startLine: 54
  package: com.microsoft.identity.client
  syntax:
    content: public void saveMsaFamilyRefreshToken(String refreshToken)
    parameters:
    - id: refreshToken
      type: "26831127"
- uid: com.microsoft.identity.client.ITokenShare.saveOrgIdFamilyRefreshToken(String)
  id: saveOrgIdFamilyRefreshToken(String)
  parent: com.microsoft.identity.client.ITokenShare
  href: com.microsoft.identity.client.ITokenShare.yml
  langs:
  - java
  name: saveOrgIdFamilyRefreshToken(String ssoStateSerializerBlob)
  nameWithType: ITokenShare.saveOrgIdFamilyRefreshToken(String ssoStateSerializerBlob)
  fullName: com.microsoft.identity.client.ITokenShare.saveOrgIdFamilyRefreshToken(String ssoStateSerializerBlob)
  overload: com.microsoft.identity.client.ITokenShare.saveOrgIdFamilyRefreshToken*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/ITokenShare.java
    startLine: 42
  package: com.microsoft.identity.client
  syntax:
    content: public void saveOrgIdFamilyRefreshToken(String ssoStateSerializerBlob)
    parameters:
    - id: ssoStateSerializerBlob
      type: "26831127"
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.identity.client.ITokenShare.getOrgIdFamilyRefreshToken*
  name: getOrgIdFamilyRefreshToken
  nameWithType: ITokenShare.getOrgIdFamilyRefreshToken
  fullName: com.microsoft.identity.client.ITokenShare.getOrgIdFamilyRefreshToken
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.ITokenShare.saveOrgIdFamilyRefreshToken*
  name: saveOrgIdFamilyRefreshToken
  nameWithType: ITokenShare.saveOrgIdFamilyRefreshToken
  fullName: com.microsoft.identity.client.ITokenShare.saveOrgIdFamilyRefreshToken
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.ITokenShare.getMsaFamilyRefreshToken*
  name: getMsaFamilyRefreshToken
  nameWithType: ITokenShare.getMsaFamilyRefreshToken
  fullName: com.microsoft.identity.client.ITokenShare.getMsaFamilyRefreshToken
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.ITokenShare.saveMsaFamilyRefreshToken*
  name: saveMsaFamilyRefreshToken
  nameWithType: ITokenShare.saveMsaFamilyRefreshToken
  fullName: com.microsoft.identity.client.ITokenShare.saveMsaFamilyRefreshToken
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.PublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.PublicClientApplication.yml
  name: PublicClientApplication
  nameWithType: PublicClientApplication
  fullName: com.microsoft.identity.client.PublicClientApplication
  type: Class
  summary: "<p>This is the entry point for developer to create public native applications and make API calls to acquire tokens. </p>\r\n<p>\r\n  <b>Client ID:</b> The clientID of your application is a unique identifier which can be obtained from the app registration portal.</p>\r\n<p>\r\n  <b>AuthorityMetadata:</b> A URL indicating a directory that MSAL can use to obtain tokens. In Azure AD it is of the form <a href=\"https://\">https://</a>&lt;[nstance]/[tenant], where [instance] is the directory host (e.g. <a href=\"https://login.microsoftonline.com\">https://login.microsoftonline.com</a>) and [tenant] is an identifier within the directory itself (e.g. a domain associated to the tenant, such as contoso.onmicrosoft.com, or the GUID representing the TenantID property of the directory) </p>\r\n<p>For B2C, it is of the form <a href=\"https://\">https://</a>[instance]/tfp/[tenant]/[policy] where instance and tenant are same as Azure AD, and [policy] is a string like signup</p>\r\n<p>MSAL <xref uid=\"com.microsoft.identity.client.PublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication\"></xref> provides three constructors allowing the client id to be set either via AndroidManifest.xml metadata or using constructor parameters. Similarly, if developer chooses not to use the default authority <a href=\"https://login.microsoftonline.com,\">https://login.microsoftonline.com,</a> an alternate can also be configured using the manifest, constructor parameters, or in acquire token calls. </p>\r\n<p>Redirect is auto-generated in the library in the format of msal&lt;client-id&gt;://auth, and it cannot be overridden. </p>\r\n<p>Developer <b>MUST</b> have <xref uid=\"com.microsoft.identity.client.BrowserTabActivity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BrowserTabActivity\"></xref> declared in their manifest, which must have the correct intent-filter configured. If the wrong scheme and host is provided, the sdk will fail the <xref uid=\"com.microsoft.identity.client.PublicClientApplication\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PublicClientApplication\"></xref> creation. </p>\r\n<p>Expected format will be: <pre>\r\n&lt;activity\r\n    android:name=\"com.microsoft.identity.client.BrowserTabActivity\"&gt;\r\n    &lt;intent-filter&gt;\r\n        &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\r\n        &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\r\n        &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\r\n        &lt;data android:scheme=\"msal&amp;lt;AppClientId&amp;gt;\"\r\n             android:host=\"auth\" /&gt;\r\n    &lt;/intent-filter&gt;\r\n&lt;/activity&gt;\r\n</pre></p>\r\n<p>Other Terminology:</p>\r\n<p>\r\n  <b>Scopes:</b>Permissions that the developers wants included in the access token received . Not all scopes are guaranteed to be included in the access token returned. </p>\r\n<p>\r\n  <b>Login Hint:</b> Usually an email, to pass to the service at the beginning of the interactive authentication flow. </p>\r\n<p>\r\n  <b>Extra Scopes to Consent:</b> Permissions you want the user to consent to in the same authentication flow, but won't be included in the returned access token. </p>"
  syntax:
    content: public class PublicClientApplication
- uid: com.microsoft.identity.client.exception.MsalClientException
  parent: com.microsoft.identity.client.exception
  href: com.microsoft.identity.client.exception.MsalClientException.yml
  name: MsalClientException
  nameWithType: MsalClientException
  fullName: com.microsoft.identity.client.exception.MsalClientException
  type: Class
  summary: "<p>This exception class represents general errors that are local to the library. Below is the table of proposed codes and a short description of each. </p>\r\n<p>Set of error codes that could be returned from this exception: <ul><li><p>multiple_matching_tokens_detected: There are multiple cache entries found and the sdk cannot identify the correct access or refresh token from the cache. This usually indicates a bug in the sdk for storing tokens or the authority is not provided in the silent request and multiple matching tokens found.  </p></li><li><p>device_network_not_available: No active network is available on the device.  </p></li><li><p>json_parse_failure: The sdk failed to parse the JSON format. </p></li><li><p>io_error: IOException happened, could be the device/network errors.  </p></li><li><p>malformed_url: The url is malformed. Likely caused when constructing the auth request, authority, or redirect URI.  </p></li><li><p>unsupported_encoding: The encoding is not supported by the device.  </p></li><li><p>no_such_algorithm: The algorithm used to generate pkce challenge is not supported.  </p></li><li><p>invalid_jwt: JWT returned by the server is not valid, empty or malformed.  </p></li><li><p>state_mismatch: State from authorization response did not match the state in the authorization request. For authorization requests, the sdk will verify the state returned from redirect and the one sent in the request.  </p></li><li><p>unsupported_url: Unsupported url, cannot perform ADFS authority validation.  </p></li><li><p>authority_validation_not_supported: The authority is not supported for authority validation. The sdk supports b2c authorities, but doesn't support b2c authority validation. Only well-known host will be supported.  </p></li><li><p>chrome_not_installed: Chrome is not installed on the device. The sdk uses chrome custom tab for authorization requests if available, and will fall back to chrome browser.  </p></li><li><p>user_mismatch: The user provided in the acquire token request doesn't match the user returned from server. </p></li></ul></p>"
  syntax:
    content: public class MsalClientException
