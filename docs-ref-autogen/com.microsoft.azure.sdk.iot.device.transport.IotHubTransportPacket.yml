### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.IotHubTransportPacket(Message message, MessageSentCallback eventCallback, Object callbackContext, IotHubStatusCode status, long startTimeMillis, String deviceId)
  name: IotHubTransportPacket(Message message, MessageSentCallback eventCallback, Object callbackContext, IotHubStatusCode status, long startTimeMillis, String deviceId)
  nameWithType: IotHubTransportPacket.IotHubTransportPacket(Message message, MessageSentCallback eventCallback, Object callbackContext, IotHubStatusCode status, long startTimeMillis, String deviceId)
  parameters:
  - description: <p>the message to be sent. </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to be invoked when a response from the IoT Hub is received. </p>
    name: eventCallback
    type: <xref href="com.microsoft.azure.sdk.iot.device.MessageSentCallback?alt=com.microsoft.azure.sdk.iot.device.MessageSentCallback&text=MessageSentCallback" data-throw-if-not-resolved="False"/>
  - description: <p>the context to be passed to the callback. </p>
    name: callbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>the status code associated with the message </p>
    name: status
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubStatusCode?alt=com.microsoft.azure.sdk.iot.device.IotHubStatusCode&text=IotHubStatusCode" data-throw-if-not-resolved="False"/>
  - description: <p>the milliseconds since epoch that this packet was created. Used for tracking how long a packet has been in process for </p>
    name: startTimeMillis
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>The Id of the device that this message will be sent by. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if startTimeMillis is 0 or negative </p>
  summary: >-
    <p>Constructor.</p>

    <p></p>
  syntax: public IotHubTransportPacket(Message message, MessageSentCallback eventCallback, Object callbackContext, IotHubStatusCode status, long startTimeMillis, String deviceId)
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.IotHubTransportPacket(Message,MessageSentCallback,Object,IotHubStatusCode,long,String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getCallback()
  name: getCallback()
  nameWithType: IotHubTransportPacket.getCallback()
  returns:
    description: >-
      <p>the eventCallback function. It can be<code>nullÂ 

          </code> . </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.MessageSentCallback?alt=com.microsoft.azure.sdk.iot.device.MessageSentCallback&text=MessageSentCallback" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the callback to be invoked when a response is received.</p>

    <p></p>
  syntax: public MessageSentCallback getCallback()
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getCallback()
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getContext()
  name: getContext()
  nameWithType: IotHubTransportPacket.getContext()
  returns:
    description: <p>the callback context. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the context to be passed to the callback when it is invoked.</p>

    <p></p>
  syntax: public Object getContext()
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getContext()
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getCurrentRetryAttempt()
  name: getCurrentRetryAttempt()
  nameWithType: IotHubTransportPacket.getCurrentRetryAttempt()
  returns:
    description: <p>the current retry attempt </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for current retry attempt. This count should be incremented using incrementRetryAttempt </p>
  syntax: public int getCurrentRetryAttempt()
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getCurrentRetryAttempt()
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getDeviceId()
  name: getDeviceId()
  nameWithType: IotHubTransportPacket.getDeviceId()
  returns:
    description: <p>The Id of the device that this packet is being sent from. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Get the Id of the device that this packet is being sent from. </p>
  syntax: public String getDeviceId()
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getDeviceId()
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getMessage()
  name: getMessage()
  nameWithType: IotHubTransportPacket.getMessage()
  returns:
    description: <p>the message to be sent. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the message to be sent.</p>

    <p></p>
  syntax: public Message getMessage()
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getMessage()
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getStartTimeMillis()
  name: getStartTimeMillis()
  nameWithType: IotHubTransportPacket.getStartTimeMillis()
  returns:
    description: <p>the number of milliseconds since epoch that this packet was created </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for startTimeMillis </p>
  syntax: public long getStartTimeMillis()
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getStartTimeMillis()
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getStatus()
  name: getStatus()
  nameWithType: IotHubTransportPacket.getStatus()
  returns:
    description: <p>the status of this packet </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubStatusCode?alt=com.microsoft.azure.sdk.iot.device.IotHubStatusCode&text=IotHubStatusCode" data-throw-if-not-resolved="False"/>
  summary: <p>Get the status of this transport packet </p>
  syntax: public IotHubStatusCode getStatus()
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.getStatus()
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.incrementRetryAttempt()
  name: incrementRetryAttempt()
  nameWithType: IotHubTransportPacket.incrementRetryAttempt()
  summary: <p>Increments the saved retry attempt count by 1 </p>
  syntax: public void incrementRetryAttempt()
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.incrementRetryAttempt()
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.setStatus(IotHubStatusCode status)
  name: setStatus(IotHubStatusCode status)
  nameWithType: IotHubTransportPacket.setStatus(IotHubStatusCode status)
  parameters:
  - description: <p>the status to set for this packet </p>
    name: status
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubStatusCode?alt=com.microsoft.azure.sdk.iot.device.IotHubStatusCode&text=IotHubStatusCode" data-throw-if-not-resolved="False"/>
  summary: <p>Set the status of this transport packet </p>
  syntax: public void setStatus(IotHubStatusCode status)
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket.setStatus(IotHubStatusCode)
nameWithType: IotHubTransportPacket
syntax: public class IotHubTransportPacket
type: class
uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket
fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket
name: IotHubTransportPacket
package: com.microsoft.azure.sdk.iot.device.transport
summary: <p>A packet containing the data needed for an IoT Hub transport to send a message. </p>
metadata: {}
