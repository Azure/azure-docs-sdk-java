### YamlMime:JavaMember
nameWithType: DataLakeStoreAccounts.addWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.management.datalake.analytics.DataLakeStoreAccounts.addWithServiceResponseAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName)
  name: addWithServiceResponseAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName)
  nameWithType: DataLakeStoreAccounts.addWithServiceResponseAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Analytics account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Analytics account to which to add the Data Lake Store account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Store account to add. </p>
    name: dataLakeStoreAccountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the specified Data Lake Analytics account to include the additional Data Lake Store account.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> addWithServiceResponseAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName)
  uid: com.microsoft.azure.management.datalake.analytics.DataLakeStoreAccounts.addWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.datalake.analytics.DataLakeStoreAccounts.addWithServiceResponseAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName, AddDataLakeStoreParameters parameters)
  name: addWithServiceResponseAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName, AddDataLakeStoreParameters parameters)
  nameWithType: DataLakeStoreAccounts.addWithServiceResponseAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName, AddDataLakeStoreParameters parameters)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Analytics account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Analytics account to which to add the Data Lake Store account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Store account to add. </p>
    name: dataLakeStoreAccountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The details of the Data Lake Store account. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.AddDataLakeStoreParameters?alt=com.microsoft.azure.management.datalake.analytics.models.AddDataLakeStoreParameters&text=AddDataLakeStoreParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the specified Data Lake Analytics account to include the additional Data Lake Store account.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> addWithServiceResponseAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName, AddDataLakeStoreParameters parameters)
  uid: com.microsoft.azure.management.datalake.analytics.DataLakeStoreAccounts.addWithServiceResponseAsync(String,String,String,AddDataLakeStoreParameters)
uid: com.microsoft.azure.management.datalake.analytics.DataLakeStoreAccounts.addWithServiceResponseAsync*
fullName: com.microsoft.azure.management.datalake.analytics.DataLakeStoreAccounts.addWithServiceResponseAsync
name: addWithServiceResponseAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName)
package: com.microsoft.azure.management.datalake.analytics
metadata: {}
