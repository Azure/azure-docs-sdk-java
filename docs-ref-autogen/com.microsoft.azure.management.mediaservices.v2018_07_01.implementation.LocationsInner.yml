### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner"
  id: "LocationsInner"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  children:
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.LocationsInner(retrofit2.Retrofit,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AzureMediaServicesImpl)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.LocationsService"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailability(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityAsync(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityAsync(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput)"
  langs:
  - "java"
  name: "LocationsInner"
  nameWithType: "LocationsInner"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner"
  type: "Class"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "An instance of this class provides access to all the operations defined in Locations."
  syntax:
    content: "public class LocationsInner"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.LocationsInner(retrofit2.Retrofit,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AzureMediaServicesImpl)"
  id: "LocationsInner(retrofit2.Retrofit,com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AzureMediaServicesImpl)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner"
  langs:
  - "java"
  name: "LocationsInner(Retrofit retrofit, AzureMediaServicesImpl client)"
  nameWithType: "LocationsInner.LocationsInner(Retrofit retrofit, AzureMediaServicesImpl client)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.LocationsInner(Retrofit retrofit, AzureMediaServicesImpl client)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.LocationsInner*"
  type: "Constructor"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Initializes an instance of LocationsInner."
  syntax:
    content: "public LocationsInner(Retrofit retrofit, AzureMediaServicesImpl client)"
    parameters:
    - id: "retrofit"
      type: "retrofit2.Retrofit"
      description: "the Retrofit instance built from a Retrofit Builder."
    - id: "client"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AzureMediaServicesImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailability(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput)"
  id: "checkNameAvailability(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner"
  langs:
  - "java"
  name: "checkNameAvailability(String locationName, CheckNameAvailabilityInput parameters)"
  nameWithType: "LocationsInner.checkNameAvailability(String locationName, CheckNameAvailabilityInput parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailability(String locationName, CheckNameAvailabilityInput parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailability*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Check Name Availability. Checks whether the Media Service resource name is available."
  syntax:
    content: "public EntityNameAvailabilityCheckOutputInner checkNameAvailability(String locationName, CheckNameAvailabilityInput parameters)"
    parameters:
    - id: "locationName"
      type: "java.lang.String"
      description: "The name of the location"
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput"
      description: "The request parameters"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner"
      description: "the EntityNameAvailabilityCheckOutputInner object if successful."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityAsync(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput)"
  id: "checkNameAvailabilityAsync(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner"
  langs:
  - "java"
  name: "checkNameAvailabilityAsync(String locationName, CheckNameAvailabilityInput parameters)"
  nameWithType: "LocationsInner.checkNameAvailabilityAsync(String locationName, CheckNameAvailabilityInput parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityAsync(String locationName, CheckNameAvailabilityInput parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Check Name Availability. Checks whether the Media Service resource name is available."
  syntax:
    content: "public Observable<EntityNameAvailabilityCheckOutputInner> checkNameAvailabilityAsync(String locationName, CheckNameAvailabilityInput parameters)"
    parameters:
    - id: "locationName"
      type: "java.lang.String"
      description: "The name of the location"
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput"
      description: "The request parameters"
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner>"
      description: "the observable to the EntityNameAvailabilityCheckOutputInner object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityAsync(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner>)"
  id: "checkNameAvailabilityAsync(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner"
  langs:
  - "java"
  name: "checkNameAvailabilityAsync(String locationName, CheckNameAvailabilityInput parameters, ServiceCallback<EntityNameAvailabilityCheckOutputInner> serviceCallback)"
  nameWithType: "LocationsInner.checkNameAvailabilityAsync(String locationName, CheckNameAvailabilityInput parameters, ServiceCallback<EntityNameAvailabilityCheckOutputInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityAsync(String locationName, CheckNameAvailabilityInput parameters, ServiceCallback<EntityNameAvailabilityCheckOutputInner> serviceCallback)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Check Name Availability. Checks whether the Media Service resource name is available."
  syntax:
    content: "public ServiceFuture<EntityNameAvailabilityCheckOutputInner> checkNameAvailabilityAsync(String locationName, CheckNameAvailabilityInput parameters, ServiceCallback<EntityNameAvailabilityCheckOutputInner> serviceCallback)"
    parameters:
    - id: "locationName"
      type: "java.lang.String"
      description: "The name of the location"
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput"
      description: "The request parameters"
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput)"
  id: "checkNameAvailabilityWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner"
  langs:
  - "java"
  name: "checkNameAvailabilityWithServiceResponseAsync(String locationName, CheckNameAvailabilityInput parameters)"
  nameWithType: "LocationsInner.checkNameAvailabilityWithServiceResponseAsync(String locationName, CheckNameAvailabilityInput parameters)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityWithServiceResponseAsync(String locationName, CheckNameAvailabilityInput parameters)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Check Name Availability. Checks whether the Media Service resource name is available."
  syntax:
    content: "public Observable<ServiceResponse<EntityNameAvailabilityCheckOutputInner>> checkNameAvailabilityWithServiceResponseAsync(String locationName, CheckNameAvailabilityInput parameters)"
    parameters:
    - id: "locationName"
      type: "java.lang.String"
      description: "The name of the location"
    - id: "parameters"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput"
      description: "The request parameters"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner>>"
      description: "the observable to the EntityNameAvailabilityCheckOutputInner object"
references:
- uid: "retrofit2.Retrofit"
  spec.java:
  - uid: "retrofit2.Retrofit"
    name: "Retrofit"
    fullName: "retrofit2.Retrofit"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AzureMediaServicesImpl"
  name: "AzureMediaServicesImpl"
  nameWithType: "AzureMediaServicesImpl"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AzureMediaServicesImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.LocationsInner*"
  name: "LocationsInner"
  nameWithType: "LocationsInner.LocationsInner"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.LocationsInner"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput"
  name: "CheckNameAvailabilityInput"
  nameWithType: "CheckNameAvailabilityInput"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.CheckNameAvailabilityInput"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner"
  name: "EntityNameAvailabilityCheckOutputInner"
  nameWithType: "EntityNameAvailabilityCheckOutputInner"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailability*"
  name: "checkNameAvailability"
  nameWithType: "LocationsInner.checkNameAvailability"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailability"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner"
    name: "EntityNameAvailabilityCheckOutputInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner"
    name: "EntityNameAvailabilityCheckOutputInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityAsync*"
  name: "checkNameAvailabilityAsync"
  nameWithType: "LocationsInner.checkNameAvailabilityAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner"
    name: "EntityNameAvailabilityCheckOutputInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner"
    name: "EntityNameAvailabilityCheckOutputInner"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.EntityNameAvailabilityCheckOutputInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityWithServiceResponseAsync*"
  name: "checkNameAvailabilityWithServiceResponseAsync"
  nameWithType: "LocationsInner.checkNameAvailabilityWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.checkNameAvailabilityWithServiceResponseAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.LocationsService"
  name: "LocationsInner.LocationsService"
  nameWithType: "LocationsInner.LocationsService"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LocationsInner.LocationsService"
- uid: "com.microsoft.rest.ServiceCallback"
  name: "ServiceCallback"
  nameWithType: "ServiceCallback"
  fullName: "com.microsoft.rest.ServiceCallback"
- uid: "com.microsoft.rest.ServiceFuture"
  name: "ServiceFuture"
  nameWithType: "ServiceFuture"
  fullName: "com.microsoft.rest.ServiceFuture"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
- uid: "com.microsoft.rest.ServiceResponse"
  name: "ServiceResponse"
  nameWithType: "ServiceResponse"
  fullName: "com.microsoft.rest.ServiceResponse"
