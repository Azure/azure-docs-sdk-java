### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.ShardMap(ShardMapManager shardMapManager, StoreShardMap ssm)
  name: ShardMap(ShardMapManager shardMapManager, StoreShardMap ssm)
  nameWithType: ShardMap.ShardMap(ShardMapManager shardMapManager, StoreShardMap ssm)
  parameters:
  - description: <p>Reference to ShardMapManager. </p>
    name: shardMapManager
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  - description: <p>Storage representation. </p>
    name: ssm
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreShardMap?alt=com.microsoft.azure.elasticdb.shard.store.StoreShardMap&text=StoreShardMap" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs an instance of ShardMap.</p>

    <p></p>
  syntax: public ShardMap(ShardMapManager shardMapManager, StoreShardMap ssm)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.ShardMap(ShardMapManager,StoreShardMap)
fields:
- field:
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.shardMapManager
  name: shardMapManager
  nameWithType: ShardMap.shardMapManager
  summary: <p>Reference to ShardMapManager. </p>
  syntax: protected ShardMapManager shardMapManager
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.shardMapManager
- field:
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreShardMap?alt=com.microsoft.azure.elasticdb.shard.store.StoreShardMap&text=StoreShardMap" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.storeShardMap
  name: storeShardMap
  nameWithType: ShardMap.storeShardMap
  summary: <p>Storage representation. </p>
  syntax: protected StoreShardMap storeShardMap
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.storeShardMap
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Cloneable" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.clone()
  name: clone()
  nameWithType: ShardMap.clone()
  returns:
    description: <p>A cloned instance of the shard map. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Clones the given shard map.</p>

    <p></p>
  syntax: public ShardMap clone()
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.clone()
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.cloneCore()
  name: cloneCore()
  nameWithType: ShardMap.cloneCore()
  returns:
    description: <p>Cloned shard map instance. </p>
    type: abstract <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Clones the current shard map instance.</p>

    <p></p>
  syntax: protected abstract ShardMap cloneCore()
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.cloneCore()
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.createShard(ShardCreationInfo shardCreationArgs)
  name: createShard(ShardCreationInfo shardCreationArgs)
  nameWithType: ShardMap.createShard(ShardCreationInfo shardCreationArgs)
  parameters:
  - description: <p>Information about shard to be added. </p>
    name: shardCreationArgs
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardCreationInfo?alt=com.microsoft.azure.elasticdb.shard.base.ShardCreationInfo&text=ShardCreationInfo" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new shard registered with this shard map. </p>
    type: final <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new shard and registers it with the shard map.</p>

    <p></p>
  syntax: public final Shard createShard(ShardCreationInfo shardCreationArgs)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.createShard(ShardCreationInfo)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.createShard(ShardLocation location)
  name: createShard(ShardLocation location)
  nameWithType: ShardMap.createShard(ShardLocation location)
  parameters:
  - description: <p>Location of shard to be added. </p>
    name: location
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A shard attached to this shard map. </p>
    type: final <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Atomically adds a shard to ShardMap using the specified location.</p>

    <p></p>
  syntax: public final Shard createShard(ShardLocation location)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.createShard(ShardLocation)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.deleteShard(Shard shard)
  name: deleteShard(Shard shard)
  nameWithType: ShardMap.deleteShard(Shard shard)
  parameters:
  - description: <p>Shard to remove. </p>
    name: shard
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Removes a shard from ShardMap.</p>

    <p></p>
  syntax: public final void deleteShard(Shard shard)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.deleteShard(Shard)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.getApplicationNameSuffix()
  name: getApplicationNameSuffix()
  nameWithType: ShardMap.getApplicationNameSuffix()
  returns:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  syntax: public final String getApplicationNameSuffix()
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.getApplicationNameSuffix()
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.getId()
  name: getId()
  nameWithType: ShardMap.getId()
  returns:
    type: <xref href="final+UUID?alt=final+UUID&text=final+UUID" data-throw-if-not-resolved="False"/>
  summary: <p>Identity. </p>
  syntax: public final UUID getId()
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.getId()
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.getKeyType()
  name: getKeyType()
  nameWithType: ShardMap.getKeyType()
  returns:
    type: final <xref href="com.microsoft.azure.elasticdb.shard.base.ShardKeyType?alt=com.microsoft.azure.elasticdb.shard.base.ShardKeyType&text=ShardKeyType" data-throw-if-not-resolved="False"/>
  summary: <p>Shard map key type. </p>
  syntax: public final ShardKeyType getKeyType()
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.getKeyType()
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.getMapper()
  name: getMapper()
  nameWithType: ShardMap.getMapper()
  returns:
    description: <p>Appropriate mapper for the given shard map. </p>
    type: abstract&lt;V&gt; <xref href="com.microsoft.azure.elasticdb.shard.mapper.IShardMapper?alt=com.microsoft.azure.elasticdb.shard.mapper.IShardMapper&text=IShardMapper" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the mapper. This method is used by OpenConnection and Lookup of V. </p>

    <p></p>
  syntax: public abstract<V> IShardMapper getMapper()
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.getMapper()
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.getMapType()
  name: getMapType()
  nameWithType: ShardMap.getMapType()
  returns:
    type: final <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMapType?alt=com.microsoft.azure.elasticdb.shard.map.ShardMapType&text=ShardMapType" data-throw-if-not-resolved="False"/>
  summary: <p>Shard map type. </p>
  syntax: public final ShardMapType getMapType()
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.getMapType()
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.getName()
  name: getName()
  nameWithType: ShardMap.getName()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Shard map name. </p>
  syntax: public String getName()
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.getName()
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.getShard(ShardLocation location)
  name: getShard(ShardLocation location)
  nameWithType: ShardMap.getShard(ShardLocation location)
  parameters:
  - description: <p>Location of the shard. </p>
    name: location
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Shard which has the specified location. </p>
    type: final <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Obtains the shard for the specified location.</p>

    <p></p>
  syntax: public final Shard getShard(ShardLocation location)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.getShard(ShardLocation)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.getShardMapManager()
  name: getShardMapManager()
  nameWithType: ShardMap.getShardMapManager()
  returns:
    type: final <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  syntax: public final ShardMapManager getShardMapManager()
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.getShardMapManager()
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.getShards()
  name: getShards()
  nameWithType: ShardMap.getShards()
  returns:
    description: <p>All shards belonging to the shard map. </p>
    type: final List&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets all shards from the shard map.</p>

    <p></p>
  syntax: public final List<Shard> getShards()
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.getShards()
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.getStoreShardMap()
  name: getStoreShardMap()
  nameWithType: ShardMap.getStoreShardMap()
  returns:
    type: final <xref href="com.microsoft.azure.elasticdb.shard.store.StoreShardMap?alt=com.microsoft.azure.elasticdb.shard.store.StoreShardMap&text=StoreShardMap" data-throw-if-not-resolved="False"/>
  syntax: public final StoreShardMap getStoreShardMap()
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.getStoreShardMap()
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnection(IShardProvider shardProvider, String connectionString)
  name: openConnection(IShardProvider shardProvider, String connectionString)
  nameWithType: ShardMap.openConnection(IShardProvider shardProvider, String connectionString)
  parameters:
  - description: <p>Shard provider containing shard to be connected to. </p>
    name: shardProvider
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider%3CValueT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for connection. Must have credentials. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+Connection?alt=final+Connection&text=final+Connection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens a connection to the given shard provider.</p>

    <p></p>
  syntax: public final Connection openConnection(IShardProvider shardProvider, String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnection(IShardProvider,String)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnection(IShardProvider shardProvider, String connectionString, ConnectionOptions options)
  name: openConnection(IShardProvider shardProvider, String connectionString, ConnectionOptions options)
  nameWithType: ShardMap.openConnection(IShardProvider shardProvider, String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Shard provider containing shard to be connected to. </p>
    name: shardProvider
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider%3CValueT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for connection. Must have credentials. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+Connection?alt=final+Connection&text=final+Connection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens a connection to the given shard provider.</p>

    <p></p>
  syntax: public final Connection openConnection(IShardProvider shardProvider, String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnection(IShardProvider,String,ConnectionOptions)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionAsync(IShardProvider shardProvider, String connectionString)
  name: openConnectionAsync(IShardProvider shardProvider, String connectionString)
  nameWithType: ShardMap.openConnectionAsync(IShardProvider shardProvider, String connectionString)
  parameters:
  - description: <p>Shard provider containing shard to be connected to. </p>
    name: shardProvider
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider%3CValueT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for connection. Must have credentials. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task encapsulating the SqlConnection All exceptions are reported via the returned task. </p>
    type: <xref href="final+Callable%3CConnection%3E?alt=final+Callable%3CConnection%3E&text=final+Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously opens a connection to the given shard provider.</p>

    <p></p>
  syntax: public final Callable<Connection> openConnectionAsync(IShardProvider shardProvider, String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionAsync(IShardProvider,String)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionAsync(IShardProvider shardProvider, String connectionString, ConnectionOptions options)
  name: openConnectionAsync(IShardProvider shardProvider, String connectionString, ConnectionOptions options)
  nameWithType: ShardMap.openConnectionAsync(IShardProvider shardProvider, String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Shard provider containing shard to be connected to. </p>
    name: shardProvider
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider%3CValueT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for connection. Must have credentials. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task encapsulating the SqlConnection. </p>
    type: <xref href="final+Callable%3CConnection%3E?alt=final+Callable%3CConnection%3E&text=final+Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously opens a connection to the given shard provider. All exceptions are reported via the returned task.</p>

    <p></p>
  syntax: public final Callable<Connection> openConnectionAsync(IShardProvider shardProvider, String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionAsync(IShardProvider,String,ConnectionOptions)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionForKey(KeyT key, String connectionString)
  name: openConnectionForKey(KeyT key, String connectionString)
  nameWithType: ShardMap.openConnectionForKey(KeyT key, String connectionString)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information such as SQL Server credentials or Integrated Security settings. The hostname of the server and the database name for the shard are obtained from the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An opened SqlConnection. Note that the SqlConnection object returned by this call is not protected against transient faults. Callers should follow best practices to protect the connection against transient faults in their application code, e.g., by using the transient fault handling functionality in the Enterprise Library from Microsoft Patterns and Practices team. This call only works if there is a single default mapping. </p>
    type: <xref href="%3CKeyT%3E+Connection?alt=%3CKeyT%3E+Connection&text=%3CKeyT%3E+Connection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens a regular SqlConnection to the shard to which the specified key value is mapped, with <xref uid="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions.Validate" data-throw-if-not-resolved="false" data-raw-source="ConnectionOptions.Validate"></xref>. </p>

    <p></p>
  syntax: public <KeyT> Connection openConnectionForKey(KeyT key, String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionForKey(KeyT,String)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionForKey(KeyT key, String connectionString, ConnectionOptions options)
  name: openConnectionForKey(KeyT key, String connectionString, ConnectionOptions options)
  nameWithType: ShardMap.openConnectionForKey(KeyT key, String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information such as SQL Server credentials or Integrated Security settings. The hostname of the server and the database name for the shard are obtained from the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Options for validation operations to perform on opened connection. </p>
    name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An opened SqlConnection. Note that the SqlConnection object returned by this call is not protected against transient faults. Callers should follow best practices to protect the connection against transient faults in their application code, e.g., by using the transient fault handling functionality in the Enterprise Library from Microsoft Patterns and Practices team. This call only works if there is a single default mapping. </p>
    type: <xref href="%3CKeyT%3E+Connection?alt=%3CKeyT%3E+Connection&text=%3CKeyT%3E+Connection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens a regular SqlConnection to the shard to which the specified key value is mapped. </p>

    <p></p>
  syntax: public <KeyT> Connection openConnectionForKey(KeyT key, String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionForKey(KeyT,String,ConnectionOptions)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionForKeyAsync(KeyT key, String connectionString)
  name: openConnectionForKeyAsync(KeyT key, String connectionString)
  nameWithType: ShardMap.openConnectionForKeyAsync(KeyT key, String connectionString)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information such as SQL Server credentials or Integrated Security settings. The hostname of the server and the database name for the shard are obtained from the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A Task encapsulating an opened SqlConnection. Note that the SqlConnection object returned by this call is not protected against transient faults. Callers should follow best practices to protect the connection against transient faults in their application code, e.g., by using the transient fault handling functionality in the Enterprise Library from Microsoft Patterns and Practices team. This call only works if there is a single default mapping. </p>
    type: <xref href="%3CKeyT%3E+Callable%3CConnection%3E?alt=%3CKeyT%3E+Callable%3CConnection%3E&text=%3CKeyT%3E+Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously opens a regular SqlConnection to the shard to which the specified key value is mapped, with <xref uid="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions.Validate" data-throw-if-not-resolved="false" data-raw-source="ConnectionOptions.Validate"></xref>. </p>

    <p></p>
  syntax: public <KeyT> Callable<Connection> openConnectionForKeyAsync(KeyT key, String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionForKeyAsync(KeyT,String)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionForKeyAsync(KeyT key, String connectionString, ConnectionOptions options)
  name: openConnectionForKeyAsync(KeyT key, String connectionString, ConnectionOptions options)
  nameWithType: ShardMap.openConnectionForKeyAsync(KeyT key, String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information such as SQL Server credentials or Integrated Security settings. The hostname of the server and the database name for the shard are obtained from the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Options for validation operations to perform on opened connection. </p>
    name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A Task encapsulating an opened SqlConnection. Note that the SqlConnection object returned by this call is not protected against transient faults. Callers should follow best practices to protect the connection against transient faults in their application code, e.g., by using the transient fault handling functionality in the Enterprise Library from Microsoft Patterns and Practices team. This call only works if there is a single default mapping. </p>
    type: <xref href="%3CKeyT%3E+Callable%3CConnection%3E?alt=%3CKeyT%3E+Callable%3CConnection%3E&text=%3CKeyT%3E+Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously opens a regular SqlConnection to the shard to which the specified key value is mapped. </p>

    <p></p>
  syntax: public <KeyT> Callable<Connection> openConnectionForKeyAsync(KeyT key, String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionForKeyAsync(KeyT,String,ConnectionOptions)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.toString()
  name: toString()
  nameWithType: ShardMap.toString()
  returns:
    description: <p>String representation of the object. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Converts the object to its string representation.</p>

    <p></p>
  syntax: public String toString()
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.toString()
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.tryGetShard(ShardLocation location, ReferenceObjectHelper<Shard> shard)
  name: tryGetShard(ShardLocation location, ReferenceObjectHelper<Shard> shard)
  nameWithType: ShardMap.tryGetShard(ShardLocation location, ReferenceObjectHelper<Shard> shard)
  parameters:
  - description: <p>Location of the shard. </p>
    name: location
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  - description: <p>Shard which has the specified location. </p>
    name: shard
    type: ReferenceObjectHelper&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: >-
      <p>

        <code>true</code> if shard with specified location is found, <code>false</code> otherwise. </p>
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Tries to obtains the shard for the specified location.</p>

    <p></p>
  syntax: public final boolean tryGetShard(ShardLocation location, ReferenceObjectHelper<Shard> shard)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.tryGetShard(ShardLocation,ReferenceObjectHelper<Shard>)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.updateShard(Shard currentShard, ShardUpdate update)
  name: updateShard(Shard currentShard, ShardUpdate update)
  nameWithType: ShardMap.updateShard(Shard currentShard, ShardUpdate update)
  parameters:
  - description: <p>Shard being updated. </p>
    name: currentShard
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  - description: <p>Updated properties of the shard. </p>
    name: update
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardUpdate?alt=com.microsoft.azure.elasticdb.shard.base.ShardUpdate&text=ShardUpdate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>New Shard with updated information. </p>
    type: final <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates a shard with the changes specified in the <em>update</em>  parameter.</p>

    <p></p>
  syntax: public final Shard updateShard(Shard currentShard, ShardUpdate update)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.updateShard(Shard,ShardUpdate)
nameWithType: ShardMap
syntax: public class ShardMap
type: class
uid: com.microsoft.azure.elasticdb.shard.map.ShardMap
fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap
name: ShardMap
package: com.microsoft.azure.elasticdb.shard.map
summary: <p>Represents a collection of shards and mappings between keys and shards in the collection. </p>
metadata: {}
