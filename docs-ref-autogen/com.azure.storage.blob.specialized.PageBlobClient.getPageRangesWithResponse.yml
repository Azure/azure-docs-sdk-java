### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse*"
fullName: "com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse"
name: "getPageRangesWithResponse"
nameWithType: "PageBlobClient.getPageRangesWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse(BlobRange blobRange, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  name: "getPageRangesWithResponse(BlobRange blobRange, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "PageBlobClient.getPageRangesWithResponse(BlobRange blobRange, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  summary: "Returns the list of valid page ranges for a page blob or snapshot of a page blob. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(offset);\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n Context context = new Context(key, value);\n \n PageList pageList = client\n     .getPageRangesWithResponse(blobRange, blobRequestConditions, timeout, context).getValue();\n \n System.out.println(\"Valid Page Ranges are:\");\n for (PageRange pageRange : pageList.getPageRange()) {\n     System.out.printf(\"Start: %s, End: %s%n\", pageRange.getStart(), pageRange.getEnd());\n }\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-page-ranges"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRange\" data-throw-if-not-resolved=\"false\">BlobRange</xref>"
    name: "blobRange"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\">BlobRequestConditions</xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<PageList> getPageRangesWithResponse(BlobRange blobRange, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  returns:
    description: "All the page ranges."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.PageList?alt=com.azure.storage.blob.models.PageList&text=PageList\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
