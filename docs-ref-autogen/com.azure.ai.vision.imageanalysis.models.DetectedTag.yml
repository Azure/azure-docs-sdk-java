### YamlMime:JavaType
uid: "com.azure.ai.vision.imageanalysis.models.DetectedTag"
fullName: "com.azure.ai.vision.imageanalysis.models.DetectedTag"
name: "DetectedTag"
nameWithType: "DetectedTag"
summary: "A content entity observation in the image."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DetectedTag**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.vision.imageanalysis.models.DetectedTag?alt=com.azure.ai.vision.imageanalysis.models.DetectedTag&text=DetectedTag\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.ai.vision.imageanalysis.models.DetectedTag.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.ai.vision.imageanalysis.models.DetectedTag.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "DetectedTag.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Detected<wbr>Tag from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DetectedTag fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of DetectedTag from the JsonReader."
  returns:
    description: "An instance of DetectedTag if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.ai.vision.imageanalysis.models.DetectedTag?alt=com.azure.ai.vision.imageanalysis.models.DetectedTag&text=DetectedTag\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.imageanalysis.models.DetectedTag.getConfidence()"
  fullName: "com.azure.ai.vision.imageanalysis.models.DetectedTag.getConfidence()"
  name: "getConfidence()"
  nameWithType: "DetectedTag.getConfidence()"
  summary: "Get the confidence property: A score, in the range of 0 to 1 (inclusive), representing the confidence that this entity was observed."
  syntax: "public double getConfidence()"
  desc: "Get the confidence property: A score, in the range of 0 to 1 (inclusive), representing the confidence that this entity was observed. Higher values indicating higher confidence."
  returns:
    description: "the confidence value."
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.imageanalysis.models.DetectedTag.getName()"
  fullName: "com.azure.ai.vision.imageanalysis.models.DetectedTag.getName()"
  name: "getName()"
  nameWithType: "DetectedTag.getName()"
  summary: "Get the name property: Name of the entity."
  syntax: "public String getName()"
  desc: "Get the name property: Name of the entity."
  returns:
    description: "the name value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.vision.imageanalysis.models.DetectedTag.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.ai.vision.imageanalysis.models.DetectedTag.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "DetectedTag.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A content entity observation in the image. A tag can be a physical object, living being, scenery, or action that appear in the image."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.vision.imageanalysis.models.DetectedTag?alt=com.azure.ai.vision.imageanalysis.models.DetectedTag&text=DetectedTag\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.ai.vision.imageanalysis.models"
artifact: com.azure:azure-ai-vision-imageanalysis:1.0.1
