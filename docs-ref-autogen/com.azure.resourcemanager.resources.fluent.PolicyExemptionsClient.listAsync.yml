### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluent.PolicyExemptionsClient.listAsync*"
fullName: "com.azure.resourcemanager.resources.fluent.PolicyExemptionsClient.listAsync"
name: "listAsync"
nameWithType: "PolicyExemptionsClient.listAsync"
members:
- uid: "com.azure.resourcemanager.resources.fluent.PolicyExemptionsClient.listAsync()"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyExemptionsClient.listAsync()"
  name: "listAsync()"
  nameWithType: "PolicyExemptionsClient.listAsync()"
  summary: "This operation retrieves the list of all policy exemptions associated with the given subscription that match the optional given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq '\\{value\\}''. If $filter is not provided, the unfiltered list includes all policy exemptions associated with the subscription, including those that apply directly or from management groups that contain the given subscription, as well as any applied to objects contained within the subscription."
  syntax: "public abstract PagedFlux<PolicyExemptionInner> listAsync()"
  returns:
    description: "list of policy exemptions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyExemptionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyExemptionInner&text=PolicyExemptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyExemptionsClient.listAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyExemptionsClient.listAsync(String filter)"
  name: "listAsync(String filter)"
  nameWithType: "PolicyExemptionsClient.listAsync(String filter)"
  summary: "This operation retrieves the list of all policy exemptions associated with the given subscription that match the optional given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq '\\{value\\}''. If $filter is not provided, the unfiltered list includes all policy exemptions associated with the subscription, including those that apply directly or from management groups that contain the given subscription, as well as any applied to objects contained within the subscription."
  parameters:
  - description: "The filter to apply on the operation. Valid values for $filter are: 'atScope()', 'atExactScope()',\n     'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter is not provided, no filtering is\n     performed. If $filter is not provided, the unfiltered list includes all policy exemptions associated with the\n     scope, including those that apply directly or apply from containing scopes. If $filter=atScope() is provided,\n     the returned list only includes all policy exemptions that apply to the scope, which is everything in the\n     unfiltered list except those applied to sub scopes contained within the given scope. If\n     $filter=atExactScope() is provided, the returned list only includes all policy exemptions that at the given\n     scope. If $filter=excludeExpired() is provided, the returned list only includes all policy exemptions that\n     either haven't expired or didn't set expiration date. If $filter=policyAssignmentId eq '{value}' is provided.\n     the returned list only includes all policy exemptions that are associated with the give policyAssignmentId."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<PolicyExemptionInner> listAsync(String filter)"
  returns:
    description: "list of policy exemptions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyExemptionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyExemptionInner&text=PolicyExemptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.13.0
