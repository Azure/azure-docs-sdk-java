### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer"
fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer"
name: "ApplicationGatewayBackendHealthServer"
nameWithType: "ApplicationGatewayBackendHealthServer"
summary: "Application gateway backendhealth http settings."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ApplicationGatewayBackendHealthServer"
constructors:
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.ApplicationGatewayBackendHealthServer()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.ApplicationGatewayBackendHealthServer()"
  name: "ApplicationGatewayBackendHealthServer()"
  nameWithType: "ApplicationGatewayBackendHealthServer.ApplicationGatewayBackendHealthServer()"
  syntax: "public ApplicationGatewayBackendHealthServer()"
methods:
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.address()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.address()"
  name: "address()"
  nameWithType: "ApplicationGatewayBackendHealthServer.address()"
  summary: "Get iP address or FQDN of backend server."
  syntax: "public String address()"
  desc: "Get iP address or FQDN of backend server."
  returns:
    description: "the address value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.health()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.health()"
  name: "health()"
  nameWithType: "ApplicationGatewayBackendHealthServer.health()"
  summary: "Get health of backend server."
  syntax: "public ApplicationGatewayBackendHealthServerHealth health()"
  desc: "Get health of backend server. Possible values include: 'Unknown', 'Up', 'Down', 'Partial', 'Draining'."
  returns:
    description: "the health value"
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServerHealth?alt=com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServerHealth&text=ApplicationGatewayBackendHealthServerHealth\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.healthProbeLog()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.healthProbeLog()"
  name: "healthProbeLog()"
  nameWithType: "ApplicationGatewayBackendHealthServer.healthProbeLog()"
  summary: "Get health Probe Log."
  syntax: "public String healthProbeLog()"
  desc: "Get health Probe Log."
  returns:
    description: "the healthProbeLog value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.ipConfiguration()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.ipConfiguration()"
  name: "ipConfiguration()"
  nameWithType: "ApplicationGatewayBackendHealthServer.ipConfiguration()"
  summary: "Get reference to IP configuration of backend server."
  syntax: "public NetworkInterfaceIPConfigurationInner ipConfiguration()"
  desc: "Get reference to IP configuration of backend server."
  returns:
    description: "the ipConfiguration value"
    type: "<xref href=\"com.microsoft.azure.management.network.implementation.NetworkInterfaceIPConfigurationInner?alt=com.microsoft.azure.management.network.implementation.NetworkInterfaceIPConfigurationInner&text=NetworkInterfaceIPConfigurationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.withAddress(java.lang.String)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.withAddress(String address)"
  name: "withAddress(String address)"
  nameWithType: "ApplicationGatewayBackendHealthServer.withAddress(String address)"
  summary: "Set iP address or FQDN of backend server."
  parameters:
  - description: "the address value to set"
    name: "address"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationGatewayBackendHealthServer withAddress(String address)"
  desc: "Set iP address or FQDN of backend server."
  returns:
    description: "the ApplicationGatewayBackendHealthServer object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer?alt=com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer&text=ApplicationGatewayBackendHealthServer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.withHealth(com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServerHealth)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.withHealth(ApplicationGatewayBackendHealthServerHealth health)"
  name: "withHealth(ApplicationGatewayBackendHealthServerHealth health)"
  nameWithType: "ApplicationGatewayBackendHealthServer.withHealth(ApplicationGatewayBackendHealthServerHealth health)"
  summary: "Set health of backend server."
  parameters:
  - description: "the health value to set"
    name: "health"
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServerHealth?alt=com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServerHealth&text=ApplicationGatewayBackendHealthServerHealth\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationGatewayBackendHealthServer withHealth(ApplicationGatewayBackendHealthServerHealth health)"
  desc: "Set health of backend server. Possible values include: 'Unknown', 'Up', 'Down', 'Partial', 'Draining'."
  returns:
    description: "the ApplicationGatewayBackendHealthServer object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer?alt=com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer&text=ApplicationGatewayBackendHealthServer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.withHealthProbeLog(java.lang.String)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.withHealthProbeLog(String healthProbeLog)"
  name: "withHealthProbeLog(String healthProbeLog)"
  nameWithType: "ApplicationGatewayBackendHealthServer.withHealthProbeLog(String healthProbeLog)"
  summary: "Set health Probe Log."
  parameters:
  - description: "the healthProbeLog value to set"
    name: "healthProbeLog"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationGatewayBackendHealthServer withHealthProbeLog(String healthProbeLog)"
  desc: "Set health Probe Log."
  returns:
    description: "the ApplicationGatewayBackendHealthServer object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer?alt=com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer&text=ApplicationGatewayBackendHealthServer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.withIpConfiguration(com.microsoft.azure.management.network.implementation.NetworkInterfaceIPConfigurationInner)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer.withIpConfiguration(NetworkInterfaceIPConfigurationInner ipConfiguration)"
  name: "withIpConfiguration(NetworkInterfaceIPConfigurationInner ipConfiguration)"
  nameWithType: "ApplicationGatewayBackendHealthServer.withIpConfiguration(NetworkInterfaceIPConfigurationInner ipConfiguration)"
  summary: "Set reference to IP configuration of backend server."
  parameters:
  - description: "the ipConfiguration value to set"
    name: "ipConfiguration"
    type: "<xref href=\"com.microsoft.azure.management.network.implementation.NetworkInterfaceIPConfigurationInner?alt=com.microsoft.azure.management.network.implementation.NetworkInterfaceIPConfigurationInner&text=NetworkInterfaceIPConfigurationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationGatewayBackendHealthServer withIpConfiguration(NetworkInterfaceIPConfigurationInner ipConfiguration)"
  desc: "Set reference to IP configuration of backend server."
  returns:
    description: "the ApplicationGatewayBackendHealthServer object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer?alt=com.microsoft.azure.management.network.ApplicationGatewayBackendHealthServer&text=ApplicationGatewayBackendHealthServer\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Application gateway backendhealth http settings."
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
