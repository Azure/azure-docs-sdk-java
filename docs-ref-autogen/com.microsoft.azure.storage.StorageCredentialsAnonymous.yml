### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.StorageCredentialsAnonymous
  id: StorageCredentialsAnonymous
  parent: com.microsoft.azure.storage
  children:
  - com.microsoft.azure.storage.StorageCredentialsAnonymous.ANONYMOUS
  - com.microsoft.azure.storage.StorageCredentialsAnonymous.getInstance()
  - com.microsoft.azure.storage.StorageCredentialsAnonymous.toString(final boolean)
  - com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri(StorageUri,OperationContext)
  - com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri(URI,OperationContext)
  href: com.microsoft.azure.storage.StorageCredentialsAnonymous.yml
  langs:
  - java
  name: StorageCredentialsAnonymous
  nameWithType: StorageCredentialsAnonymous
  fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/StorageCredentialsAnonymous.java
      branch: legacy-master
      repo: https://github.com/azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/StorageCredentialsAnonymous.java
    startLine: 21
  package: com.microsoft.azure.storage
  summary: "<p>Represents credentials for anonymous access. </p>"
  syntax: &o1
    content: public class StorageCredentialsAnonymous extends StorageCredentials
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.storage.StorageCredentials
  inheritedMembers:
  - com.microsoft.azure.storage.StorageCredentials.getAccountName()
  - com.microsoft.azure.storage.StorageCredentials.isHttpsOnly()
  - com.microsoft.azure.storage.StorageCredentials.setHttpsOnly(boolean)
  - com.microsoft.azure.storage.StorageCredentials.transformUri(final URI)
  - com.microsoft.azure.storage.StorageCredentials.transformUri(StorageUri)
  - com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(final Map<String, String>)
  - com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(final String)
- uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.ANONYMOUS
  id: ANONYMOUS
  parent: com.microsoft.azure.storage.StorageCredentialsAnonymous
  href: com.microsoft.azure.storage.StorageCredentialsAnonymous.yml
  langs:
  - java
  name: ANONYMOUS
  nameWithType: StorageCredentialsAnonymous.ANONYMOUS
  fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.ANONYMOUS
  type: Field
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/StorageCredentialsAnonymous.java
    startLine: 25
  package: com.microsoft.azure.storage
  summary: "<p>Stores the singleton instance of this class. </p>"
  syntax:
    content: public static final StorageCredentials ANONYMOUS= new StorageCredentialsAnonymous()
    return:
      type: 93de0ef9com.microsoft.azure.storage.StorageCredentials
- uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.getInstance()
  id: getInstance()
  parent: com.microsoft.azure.storage.StorageCredentialsAnonymous
  href: com.microsoft.azure.storage.StorageCredentialsAnonymous.yml
  langs:
  - java
  name: getInstance()
  nameWithType: StorageCredentialsAnonymous.getInstance()
  fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.getInstance()
  overload: com.microsoft.azure.storage.StorageCredentialsAnonymous.getInstance*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/StorageCredentialsAnonymous.java
    startLine: 32
  package: com.microsoft.azure.storage
  summary: "<p>Returns the singleton instance of the  class.</p>\r\n<p></p>"
  syntax:
    content: protected static StorageCredentials getInstance()
    return:
      type: com.microsoft.azure.storage.StorageCredentials
      description: <p>the singleton instance of this class </p>
- uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.toString(final boolean)
  id: toString(final boolean)
  parent: com.microsoft.azure.storage.StorageCredentialsAnonymous
  href: com.microsoft.azure.storage.StorageCredentialsAnonymous.yml
  langs:
  - java
  name: toString(final boolean exportSecrets)
  nameWithType: StorageCredentialsAnonymous.toString(final boolean exportSecrets)
  fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.toString(final boolean exportSecrets)
  overload: com.microsoft.azure.storage.StorageCredentialsAnonymous.toString*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/StorageCredentialsAnonymous.java
    startLine: 51
  package: com.microsoft.azure.storage
  summary: "<p>Returns a  object that represents this instance.</p>\r\n<p></p>"
  syntax:
    content: public String toString(final boolean exportSecrets)
    parameters:
    - id: exportSecrets
      type: 4dda0764
      description: >-
        <p>

          <code>true</code> to include sensitive data in the string; otherwise, <code>false</code></p>
    return:
      type: "26831127"
      description: <p>a string representation of the credentials, optionally including sensitive data. </p>
- uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri(StorageUri,OperationContext)
  id: transformUri(StorageUri,OperationContext)
  parent: com.microsoft.azure.storage.StorageCredentialsAnonymous
  href: com.microsoft.azure.storage.StorageCredentialsAnonymous.yml
  langs:
  - java
  name: transformUri(StorageUri resourceUri, OperationContext opContext)
  nameWithType: StorageCredentialsAnonymous.transformUri(StorageUri resourceUri, OperationContext opContext)
  fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri(StorageUri resourceUri, OperationContext opContext)
  overload: com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/StorageCredentialsAnonymous.java
    startLine: 61
  package: com.microsoft.azure.storage
  syntax:
    content: public StorageUri transformUri(StorageUri resourceUri, OperationContext opContext)
    parameters:
    - id: resourceUri
      type: com.microsoft.azure.storage.StorageUri
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
    return:
      type: com.microsoft.azure.storage.StorageUri
- uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri(URI,OperationContext)
  id: transformUri(URI,OperationContext)
  parent: com.microsoft.azure.storage.StorageCredentialsAnonymous
  href: com.microsoft.azure.storage.StorageCredentialsAnonymous.yml
  langs:
  - java
  name: transformUri(URI resourceUri, OperationContext opContext)
  nameWithType: StorageCredentialsAnonymous.transformUri(URI resourceUri, OperationContext opContext)
  fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri(URI resourceUri, OperationContext opContext)
  overload: com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/StorageCredentialsAnonymous.java
    startLine: 56
  package: com.microsoft.azure.storage
  syntax:
    content: public URI transformUri(URI resourceUri, OperationContext opContext)
    parameters:
    - id: resourceUri
      type: "62304784"
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
    return:
      type: "62304784"
references:
- uid: 93de0ef9com.microsoft.azure.storage.StorageCredentials
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.StorageCredentials
    name: StorageCredentials
    fullName: com.microsoft.azure.storage.StorageCredentials
    href: com.microsoft.azure.storage.StorageCredentials.yml
- uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.getInstance*
  name: getInstance
  nameWithType: StorageCredentialsAnonymous.getInstance
  fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.getInstance
  package: com.microsoft.azure.storage
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.toString*
  name: toString
  nameWithType: StorageCredentialsAnonymous.toString
  fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.toString
  package: com.microsoft.azure.storage
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri*
  name: transformUri
  nameWithType: StorageCredentialsAnonymous.transformUri
  fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri
  package: com.microsoft.azure.storage
- uid: com.microsoft.azure.storage.StorageCredentials.getAccountName()
  parent: com.microsoft.azure.storage.StorageCredentials
  href: com.microsoft.azure.storage.StorageCredentials.yml
  name: getAccountName()
  nameWithType: StorageCredentials.getAccountName()
  fullName: com.microsoft.azure.storage.StorageCredentials.getAccountName()
  type: Method
  summary: "<p>Returns the associated account name for the credentials. This is null for anonymous and shared access signature credentials.</p>\r\n<p></p>"
  syntax:
    content: public String getAccountName()
    return:
      type: "26831127"
      description: <p>A <code>String</code> that represents the associated account name for the credentials </p>
- uid: com.microsoft.azure.storage.StorageCredentials.isHttpsOnly()
  parent: com.microsoft.azure.storage.StorageCredentials
  href: com.microsoft.azure.storage.StorageCredentials.yml
  name: isHttpsOnly()
  nameWithType: StorageCredentials.isHttpsOnly()
  fullName: com.microsoft.azure.storage.StorageCredentials.isHttpsOnly()
  type: Method
  summary: "<p>Gets whether this  object only allows access via HTTPS.</p>\r\n<p></p>"
  syntax:
    content: public boolean isHttpsOnly()
    return:
      type: 4fc6e284
      description: <p>A <code>boolean</code> representing whether this <code>StorageCredentials</code> object only allows access via HTTPS. </p>
- uid: com.microsoft.azure.storage.StorageCredentials.setHttpsOnly(boolean)
  parent: com.microsoft.azure.storage.StorageCredentials
  href: com.microsoft.azure.storage.StorageCredentials.yml
  name: setHttpsOnly(boolean httpsOnly)
  nameWithType: StorageCredentials.setHttpsOnly(boolean httpsOnly)
  fullName: com.microsoft.azure.storage.StorageCredentials.setHttpsOnly(boolean httpsOnly)
  type: Method
  summary: "<p>Sets whether this  object only allows access via HTTPS. </p>"
  syntax:
    content: protected void setHttpsOnly(boolean httpsOnly)
    parameters:
    - id: httpsOnly
      type: 4fc6e284
      description: <p>A <code>boolean</code> representing whether this <code>StorageCredentials</code> object only allows access via HTTPS. </p>
- uid: com.microsoft.azure.storage.StorageCredentials.transformUri(final URI)
  parent: com.microsoft.azure.storage.StorageCredentials
  href: com.microsoft.azure.storage.StorageCredentials.yml
  name: transformUri(final URI resourceUri)
  nameWithType: StorageCredentials.transformUri(final URI resourceUri)
  fullName: com.microsoft.azure.storage.StorageCredentials.transformUri(final URI resourceUri)
  type: Method
  summary: "<p>Transforms a resource URI into a shared access signature URI, by appending a shared access token.</p>\r\n<p></p>"
  syntax:
    content: public URI transformUri(final URI resourceUri)
    parameters:
    - id: resourceUri
      type: bac42120
      description: <p>A <code>java.net.URI</code> object that represents the resource URI to be transformed.</p>
    return:
      type: "62304784"
      description: <p>A <code>java.net.URI</code> object that represents the signature, including the resource URI and the shared access token.</p>
- uid: com.microsoft.azure.storage.StorageCredentials.transformUri(StorageUri)
  parent: com.microsoft.azure.storage.StorageCredentials
  href: com.microsoft.azure.storage.StorageCredentials.yml
  name: transformUri(StorageUri resourceUri)
  nameWithType: StorageCredentials.transformUri(StorageUri resourceUri)
  fullName: com.microsoft.azure.storage.StorageCredentials.transformUri(StorageUri resourceUri)
  type: Method
  summary: "<p>Transforms a resource URI into a shared access signature URI, by appending a shared access token.</p>\r\n<p></p>"
  syntax:
    content: public StorageUri transformUri(StorageUri resourceUri)
    parameters:
    - id: resourceUri
      type: com.microsoft.azure.storage.StorageUri
      description: <p>A <code>StorageUri</code> object that represents the resource URI to be transformed.</p>
    return:
      type: com.microsoft.azure.storage.StorageUri
      description: <p>A <code>StorageUri</code> object that represents the signature, including the resource URI and the shared access token.</p>
- uid: com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(final Map<String, String>)
  parent: com.microsoft.azure.storage.StorageCredentials
  href: com.microsoft.azure.storage.StorageCredentials.yml
  name: tryParseCredentials(final Map<String, String> settings)
  nameWithType: StorageCredentials.tryParseCredentials(final Map<String, String> settings)
  fullName: com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(final Map<String, String> settings)
  type: Method
  summary: "<p>Tries to determine the storage credentials from a collection of name/value pairs.</p>\r\n<p>\r\nEither include an account name with an account key (specifying values for <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_NAME_NAME\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudStorageAccount#ACCOUNT_NAME_NAME\"></xref> and <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_KEY_NAME\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudStorageAccount#ACCOUNT_KEY_NAME\"></xref> ), or a shared access signature (specifying a value for <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount.SHARED_ACCESS_SIGNATURE_NAME\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudStorageAccount#SHARED_ACCESS_SIGNATURE_NAME\"></xref> ). If you use an account name and account key, do not include a shared access signature, and vice versa.</p>\r\n<p></p>"
  syntax:
    content: protected static StorageCredentials tryParseCredentials(final Map<String, String> settings)
    parameters:
    - id: settings
      type: 15b3ef59
      description: <p>A <code>Map</code> object of the name/value pairs that represent the settings to use to configure the credentials. </p>
    return:
      type: com.microsoft.azure.storage.StorageCredentials
      description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object representing the storage credentials determined from the name/value pairs.</p>
- uid: com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(final String)
  parent: com.microsoft.azure.storage.StorageCredentials
  href: com.microsoft.azure.storage.StorageCredentials.yml
  name: tryParseCredentials(final String connectionString)
  nameWithType: StorageCredentials.tryParseCredentials(final String connectionString)
  fullName: com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(final String connectionString)
  type: Method
  summary: "<p>Tries to determine the storage credentials from a connection string. </p>\r\n<p>The format for the connection string is in the pattern \"&lt;i&gt;keyname=value&lt;/i&gt;\". Multiple key/value pairs can be separated by a semi-colon, for example, \"&lt;i&gt;keyname1=value1;keyname2=value2&lt;/i&gt;\". Either include an account name with an account key or a shared access signature. If you use an account name and account key, do not include a shared access signature, and vice versa. </p>\r\n<p>The same connection string can be used as for <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount.parse(final String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudStorageAccount#parse(String)\"></xref> but here only the account name, account key, and sas key/value pairs will be examined.</p>\r\n<p></p>"
  syntax:
    content: public static StorageCredentials tryParseCredentials(final String connectionString)
    parameters:
    - id: connectionString
      type: 3d93591e
      description: <p>A <code>String</code> that contains the key/value pairs that represent the storage credentials.</p>
    return:
      type: com.microsoft.azure.storage.StorageCredentials
      description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object representing the storage credentials determined from the connection string.</p>
- uid: com.microsoft.azure.storage.StorageCredentials
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.StorageCredentials.yml
  name: StorageCredentials
  nameWithType: StorageCredentials
  fullName: com.microsoft.azure.storage.StorageCredentials
  type: Class
  summary: "<p>Represents a set of credentials used to authenticate access to a Microsoft Azure storage account. This is the base class for the <xref uid=\"com.microsoft.azure.storage.StorageCredentialsAccountAndKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageCredentialsAccountAndKey\"></xref>, <xref uid=\"com.microsoft.azure.storage.StorageCredentialsToken\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageCredentialsToken\"></xref>, and <xref uid=\"com.microsoft.azure.storage.StorageCredentialsSharedAccessSignature\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageCredentialsSharedAccessSignature\"></xref> classes. </p>"
  syntax:
    content: public class StorageCredentials
- uid: com.microsoft.azure.storage.StorageCredentialsAnonymous
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.StorageCredentialsAnonymous.yml
  name: StorageCredentialsAnonymous
  nameWithType: StorageCredentialsAnonymous
  fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous
  type: Class
  summary: "<p>Represents credentials for anonymous access. </p>"
  syntax: *o1
- uid: com.microsoft.azure.storage.OperationContext
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.OperationContext.yml
  name: OperationContext
  nameWithType: OperationContext
  fullName: com.microsoft.azure.storage.OperationContext
  type: Class
  summary: "<p>Represents the current logical operation. A logical operation may have a one-to-many relationship with multiple individual physical requests. </p>"
  syntax:
    content: public class OperationContext
- uid: com.microsoft.azure.storage.StorageUri
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.StorageUri.yml
  name: StorageUri
  nameWithType: StorageUri
  fullName: com.microsoft.azure.storage.StorageUri
  type: Class
  summary: "<p>Holds a list of URIs that represents the storage resource. </p>"
  syntax:
    content: public class StorageUri
