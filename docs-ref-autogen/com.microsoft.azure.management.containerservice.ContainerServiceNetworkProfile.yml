### YamlMime:JavaType
uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile"
fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile"
name: "ContainerServiceNetworkProfile"
nameWithType: "ContainerServiceNetworkProfile"
summary: "Profile of network configuration."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ContainerServiceNetworkProfile"
constructors:
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.ContainerServiceNetworkProfile()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.ContainerServiceNetworkProfile()"
  name: "ContainerServiceNetworkProfile()"
  nameWithType: "ContainerServiceNetworkProfile.ContainerServiceNetworkProfile()"
  syntax: "public ContainerServiceNetworkProfile()"
methods:
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.dnsServiceIP()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.dnsServiceIP()"
  name: "dnsServiceIP()"
  nameWithType: "ContainerServiceNetworkProfile.dnsServiceIP()"
  summary: "Get an IP address assigned to the Kubernetes DNS service."
  syntax: "public String dnsServiceIP()"
  desc: "Get an IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
  returns:
    description: "the dnsServiceIP value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.dockerBridgeCidr()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.dockerBridgeCidr()"
  name: "dockerBridgeCidr()"
  nameWithType: "ContainerServiceNetworkProfile.dockerBridgeCidr()"
  summary: "Get a CIDR notation IP range assigned to the Docker bridge network."
  syntax: "public String dockerBridgeCidr()"
  desc: "Get a CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
  returns:
    description: "the dockerBridgeCidr value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.loadBalancerProfile()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.loadBalancerProfile()"
  name: "loadBalancerProfile()"
  nameWithType: "ContainerServiceNetworkProfile.loadBalancerProfile()"
  summary: "Get profile of the cluster load balancer."
  syntax: "public ManagedClusterLoadBalancerProfile loadBalancerProfile()"
  desc: "Get profile of the cluster load balancer."
  returns:
    description: "the loadBalancerProfile value"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ManagedClusterLoadBalancerProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterLoadBalancerProfile&text=ManagedClusterLoadBalancerProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.loadBalancerSku()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.loadBalancerSku()"
  name: "loadBalancerSku()"
  nameWithType: "ContainerServiceNetworkProfile.loadBalancerSku()"
  summary: "Get the load balancer sku for the managed cluster."
  syntax: "public LoadBalancerSku loadBalancerSku()"
  desc: "Get the load balancer sku for the managed cluster. Possible values include: 'standard', 'basic'."
  returns:
    description: "the loadBalancerSku value"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.LoadBalancerSku?alt=com.microsoft.azure.management.containerservice.LoadBalancerSku&text=LoadBalancerSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.networkMode()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.networkMode()"
  name: "networkMode()"
  nameWithType: "ContainerServiceNetworkProfile.networkMode()"
  summary: "Get network mode used for building Kubernetes network."
  syntax: "public NetworkMode networkMode()"
  desc: "Get network mode used for building Kubernetes network. Possible values include: 'transparent', 'bridge'."
  returns:
    description: "the networkMode value"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.NetworkMode?alt=com.microsoft.azure.management.containerservice.NetworkMode&text=NetworkMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.networkPlugin()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.networkPlugin()"
  name: "networkPlugin()"
  nameWithType: "ContainerServiceNetworkProfile.networkPlugin()"
  summary: "Get network plugin used for building Kubernetes network."
  syntax: "public NetworkPlugin networkPlugin()"
  desc: "Get network plugin used for building Kubernetes network. Possible values include: 'azure', 'kubenet'."
  returns:
    description: "the networkPlugin value"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.NetworkPlugin?alt=com.microsoft.azure.management.containerservice.NetworkPlugin&text=NetworkPlugin\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.networkPolicy()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.networkPolicy()"
  name: "networkPolicy()"
  nameWithType: "ContainerServiceNetworkProfile.networkPolicy()"
  summary: "Get network policy used for building Kubernetes network."
  syntax: "public NetworkPolicy networkPolicy()"
  desc: "Get network policy used for building Kubernetes network. Possible values include: 'calico', 'azure'."
  returns:
    description: "the networkPolicy value"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.NetworkPolicy?alt=com.microsoft.azure.management.containerservice.NetworkPolicy&text=NetworkPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.outboundType()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.outboundType()"
  name: "outboundType()"
  nameWithType: "ContainerServiceNetworkProfile.outboundType()"
  summary: "Get the outbound (egress) routing method."
  syntax: "public OutboundType outboundType()"
  desc: "Get the outbound (egress) routing method. Possible values include: 'loadBalancer', 'userDefinedRouting'."
  returns:
    description: "the outboundType value"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.OutboundType?alt=com.microsoft.azure.management.containerservice.OutboundType&text=OutboundType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.podCidr()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.podCidr()"
  name: "podCidr()"
  nameWithType: "ContainerServiceNetworkProfile.podCidr()"
  summary: "Get a CIDR notation IP range from which to assign pod IPs when kubenet is used."
  syntax: "public String podCidr()"
  desc: "Get a CIDR notation IP range from which to assign pod IPs when kubenet is used."
  returns:
    description: "the podCidr value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.serviceCidr()"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.serviceCidr()"
  name: "serviceCidr()"
  nameWithType: "ContainerServiceNetworkProfile.serviceCidr()"
  summary: "Get a CIDR notation IP range from which to assign service cluster IPs."
  syntax: "public String serviceCidr()"
  desc: "Get a CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
  returns:
    description: "the serviceCidr value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withDnsServiceIP(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withDnsServiceIP(String dnsServiceIP)"
  name: "withDnsServiceIP(String dnsServiceIP)"
  nameWithType: "ContainerServiceNetworkProfile.withDnsServiceIP(String dnsServiceIP)"
  summary: "Set an IP address assigned to the Kubernetes DNS service."
  parameters:
  - description: "the dnsServiceIP value to set"
    name: "dnsServiceIP"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withDnsServiceIP(String dnsServiceIP)"
  desc: "Set an IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withDockerBridgeCidr(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withDockerBridgeCidr(String dockerBridgeCidr)"
  name: "withDockerBridgeCidr(String dockerBridgeCidr)"
  nameWithType: "ContainerServiceNetworkProfile.withDockerBridgeCidr(String dockerBridgeCidr)"
  summary: "Set a CIDR notation IP range assigned to the Docker bridge network."
  parameters:
  - description: "the dockerBridgeCidr value to set"
    name: "dockerBridgeCidr"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withDockerBridgeCidr(String dockerBridgeCidr)"
  desc: "Set a CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withLoadBalancerProfile(com.microsoft.azure.management.containerservice.ManagedClusterLoadBalancerProfile)"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withLoadBalancerProfile(ManagedClusterLoadBalancerProfile loadBalancerProfile)"
  name: "withLoadBalancerProfile(ManagedClusterLoadBalancerProfile loadBalancerProfile)"
  nameWithType: "ContainerServiceNetworkProfile.withLoadBalancerProfile(ManagedClusterLoadBalancerProfile loadBalancerProfile)"
  summary: "Set profile of the cluster load balancer."
  parameters:
  - description: "the loadBalancerProfile value to set"
    name: "loadBalancerProfile"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ManagedClusterLoadBalancerProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterLoadBalancerProfile&text=ManagedClusterLoadBalancerProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withLoadBalancerProfile(ManagedClusterLoadBalancerProfile loadBalancerProfile)"
  desc: "Set profile of the cluster load balancer."
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withLoadBalancerSku(com.microsoft.azure.management.containerservice.LoadBalancerSku)"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withLoadBalancerSku(LoadBalancerSku loadBalancerSku)"
  name: "withLoadBalancerSku(LoadBalancerSku loadBalancerSku)"
  nameWithType: "ContainerServiceNetworkProfile.withLoadBalancerSku(LoadBalancerSku loadBalancerSku)"
  summary: "Set the load balancer sku for the managed cluster."
  parameters:
  - description: "the loadBalancerSku value to set"
    name: "loadBalancerSku"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.LoadBalancerSku?alt=com.microsoft.azure.management.containerservice.LoadBalancerSku&text=LoadBalancerSku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withLoadBalancerSku(LoadBalancerSku loadBalancerSku)"
  desc: "Set the load balancer sku for the managed cluster. Possible values include: 'standard', 'basic'."
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withNetworkMode(com.microsoft.azure.management.containerservice.NetworkMode)"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withNetworkMode(NetworkMode networkMode)"
  name: "withNetworkMode(NetworkMode networkMode)"
  nameWithType: "ContainerServiceNetworkProfile.withNetworkMode(NetworkMode networkMode)"
  summary: "Set network mode used for building Kubernetes network."
  parameters:
  - description: "the networkMode value to set"
    name: "networkMode"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.NetworkMode?alt=com.microsoft.azure.management.containerservice.NetworkMode&text=NetworkMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withNetworkMode(NetworkMode networkMode)"
  desc: "Set network mode used for building Kubernetes network. Possible values include: 'transparent', 'bridge'."
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withNetworkPlugin(com.microsoft.azure.management.containerservice.NetworkPlugin)"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withNetworkPlugin(NetworkPlugin networkPlugin)"
  name: "withNetworkPlugin(NetworkPlugin networkPlugin)"
  nameWithType: "ContainerServiceNetworkProfile.withNetworkPlugin(NetworkPlugin networkPlugin)"
  summary: "Set network plugin used for building Kubernetes network."
  parameters:
  - description: "the networkPlugin value to set"
    name: "networkPlugin"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.NetworkPlugin?alt=com.microsoft.azure.management.containerservice.NetworkPlugin&text=NetworkPlugin\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withNetworkPlugin(NetworkPlugin networkPlugin)"
  desc: "Set network plugin used for building Kubernetes network. Possible values include: 'azure', 'kubenet'."
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withNetworkPolicy(com.microsoft.azure.management.containerservice.NetworkPolicy)"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withNetworkPolicy(NetworkPolicy networkPolicy)"
  name: "withNetworkPolicy(NetworkPolicy networkPolicy)"
  nameWithType: "ContainerServiceNetworkProfile.withNetworkPolicy(NetworkPolicy networkPolicy)"
  summary: "Set network policy used for building Kubernetes network."
  parameters:
  - description: "the networkPolicy value to set"
    name: "networkPolicy"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.NetworkPolicy?alt=com.microsoft.azure.management.containerservice.NetworkPolicy&text=NetworkPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withNetworkPolicy(NetworkPolicy networkPolicy)"
  desc: "Set network policy used for building Kubernetes network. Possible values include: 'calico', 'azure'."
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withOutboundType(com.microsoft.azure.management.containerservice.OutboundType)"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withOutboundType(OutboundType outboundType)"
  name: "withOutboundType(OutboundType outboundType)"
  nameWithType: "ContainerServiceNetworkProfile.withOutboundType(OutboundType outboundType)"
  summary: "Set the outbound (egress) routing method."
  parameters:
  - description: "the outboundType value to set"
    name: "outboundType"
    type: "<xref href=\"com.microsoft.azure.management.containerservice.OutboundType?alt=com.microsoft.azure.management.containerservice.OutboundType&text=OutboundType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withOutboundType(OutboundType outboundType)"
  desc: "Set the outbound (egress) routing method. Possible values include: 'loadBalancer', 'userDefinedRouting'."
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withPodCidr(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withPodCidr(String podCidr)"
  name: "withPodCidr(String podCidr)"
  nameWithType: "ContainerServiceNetworkProfile.withPodCidr(String podCidr)"
  summary: "Set a CIDR notation IP range from which to assign pod IPs when kubenet is used."
  parameters:
  - description: "the podCidr value to set"
    name: "podCidr"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withPodCidr(String podCidr)"
  desc: "Set a CIDR notation IP range from which to assign pod IPs when kubenet is used."
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withServiceCidr(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withServiceCidr(String serviceCidr)"
  name: "withServiceCidr(String serviceCidr)"
  nameWithType: "ContainerServiceNetworkProfile.withServiceCidr(String serviceCidr)"
  summary: "Set a CIDR notation IP range from which to assign service cluster IPs."
  parameters:
  - description: "the serviceCidr value to set"
    name: "serviceCidr"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerServiceNetworkProfile withServiceCidr(String serviceCidr)"
  desc: "Set a CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
  returns:
    description: "the ContainerServiceNetworkProfile object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Profile of network configuration."
metadata: {}
package: "com.microsoft.azure.management.containerservice"
artifact: com.microsoft.azure:azure-mgmt-containerservice:1.41.4
