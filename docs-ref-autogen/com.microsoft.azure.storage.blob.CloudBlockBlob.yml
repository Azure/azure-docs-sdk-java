### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final CloudBlockBlob otherBlob)
  name: CloudBlockBlob(final CloudBlockBlob otherBlob)
  nameWithType: CloudBlockBlob.CloudBlockBlob(final CloudBlockBlob otherBlob)
  parameters:
  - description: <p>A <code>CloudBlockBlob</code> object that represents the block blob to copy. </p>
    name: otherBlob
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlockBlob?alt=com.microsoft.azure.storage.blob.CloudBlockBlob&text=CloudBlockBlob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class by copying values from another cloud block blob.</p>

    <p></p>
  syntax: public CloudBlockBlob(final CloudBlockBlob otherBlob)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final CloudBlockBlob)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final StorageUri blobAbsoluteUri)
  name: CloudBlockBlob(final StorageUri blobAbsoluteUri)
  nameWithType: CloudBlockBlob.CloudBlockBlob(final StorageUri blobAbsoluteUri)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the absolute URI to the blob.</p>
    name: blobAbsoluteUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified absolute StorageUri.</p>

    <p></p>
  syntax: public CloudBlockBlob(final StorageUri blobAbsoluteUri)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final StorageUri)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final StorageUri blobAbsoluteUri, final StorageCredentials credentials)
  name: CloudBlockBlob(final StorageUri blobAbsoluteUri, final StorageCredentials credentials)
  nameWithType: CloudBlockBlob.CloudBlockBlob(final StorageUri blobAbsoluteUri, final StorageCredentials credentials)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the absolute StorageUri to the blob. </p>
    name: blobAbsoluteUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access.</p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified absolute StorageUri and credentials.</p>

    <p></p>
  syntax: public CloudBlockBlob(final StorageUri blobAbsoluteUri, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final StorageUri,final StorageCredentials)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final StorageUri blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  name: CloudBlockBlob(final StorageUri blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  nameWithType: CloudBlockBlob.CloudBlockBlob(final StorageUri blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the absolute StorageUri to the blob. </p>
    name: blobAbsoluteUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the snapshot version, if applicable. </p>
    name: snapshotID
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access. </p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified absolute StorageUri, snapshot ID, and credentials.</p>

    <p></p>
  syntax: public CloudBlockBlob(final StorageUri blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final StorageUri,final String,final StorageCredentials)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final URI blobAbsoluteUri)
  name: CloudBlockBlob(final URI blobAbsoluteUri)
  nameWithType: CloudBlockBlob.CloudBlockBlob(final URI blobAbsoluteUri)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the absolute URI to the blob.</p>
    name: blobAbsoluteUri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified absolute URI.</p>

    <p></p>
  syntax: public CloudBlockBlob(final URI blobAbsoluteUri)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final URI)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final URI blobAbsoluteUri, final StorageCredentials credentials)
  name: CloudBlockBlob(final URI blobAbsoluteUri, final StorageCredentials credentials)
  nameWithType: CloudBlockBlob.CloudBlockBlob(final URI blobAbsoluteUri, final StorageCredentials credentials)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the absolute URI to the blob. </p>
    name: blobAbsoluteUri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access.</p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified absolute URI and credentials.</p>

    <p></p>
  syntax: public CloudBlockBlob(final URI blobAbsoluteUri, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final URI,final StorageCredentials)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final URI blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  name: CloudBlockBlob(final URI blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  nameWithType: CloudBlockBlob.CloudBlockBlob(final URI blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the absolute URI to the blob. </p>
    name: blobAbsoluteUri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the snapshot version, if applicable. </p>
    name: snapshotID
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object used to authenticate access. </p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified absolute URI, snapshot ID, and credentials.</p>

    <p></p>
  syntax: public CloudBlockBlob(final URI blobAbsoluteUri, final String snapshotID, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(final URI,final String,final StorageCredentials)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(String blobName, String snapshotID, CloudBlobContainer container)
  name: CloudBlockBlob(String blobName, String snapshotID, CloudBlobContainer container)
  nameWithType: CloudBlockBlob.CloudBlockBlob(String blobName, String snapshotID, CloudBlobContainer container)
  parameters:
  - description: <p>Name of the blob. </p>
    name: blobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the snapshot version, if applicable. </p>
    name: snapshotID
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The reference to the parent container. </p>
    name: container
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlobContainer?alt=com.microsoft.azure.storage.blob.CloudBlobContainer&text=CloudBlobContainer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified type, name, snapshot ID, and container.</p>

    <p></p>
  syntax: protected CloudBlockBlob(String blobName, String snapshotID, CloudBlobContainer container)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(String,String,CloudBlobContainer)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.blob.ListBlobItem" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.blob.CloudBlob?alt=com.microsoft.azure.storage.blob.CloudBlob&text=CloudBlob" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.storage.blob.CloudBlob.abortCopy(final String)
- com.microsoft.azure.storage.blob.CloudBlob.abortCopy(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.acquireLease()
- com.microsoft.azure.storage.blob.CloudBlob.acquireLease(final Integer,final String)
- com.microsoft.azure.storage.blob.CloudBlob.acquireLease(final Integer,final String,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType()
- com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot()
- com.microsoft.azure.storage.blob.CloudBlob.blobServiceClient
- com.microsoft.azure.storage.blob.CloudBlob.breakLease(final Integer)
- com.microsoft.azure.storage.blob.CloudBlob.breakLease(final Integer,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.changeLease(final String,final AccessCondition)
- com.microsoft.azure.storage.blob.CloudBlob.changeLease(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(final BlobType,String,String,CloudBlobContainer)
- com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(final BlobType,final StorageUri,final String,final StorageCredentials)
- com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(final CloudBlob)
- com.microsoft.azure.storage.blob.CloudBlob.createSnapshot()
- com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(final HashMap<String, String>,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.delete()
- com.microsoft.azure.storage.blob.CloudBlob.delete(final DeleteSnapshotsOption,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists()
- com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists(final DeleteSnapshotsOption,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.download(final OutputStream)
- com.microsoft.azure.storage.blob.CloudBlob.download(final OutputStream,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo()
- com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo(BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl(final RequestOptions)
- com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()
- com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadRange(final long,final Long,final OutputStream)
- com.microsoft.azure.storage.blob.CloudBlob.downloadRange(final long,final Long,final OutputStream,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal(final long,final Long,final byte [],final int,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(final long,final Long,final byte [],final int)
- com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(final long,final Long,final byte [],final int,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(final byte [],final int)
- com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(final byte [],final int,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(final String)
- com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.exists()
- com.microsoft.azure.storage.blob.CloudBlob.exists(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final String)
- com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final String)
- com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final String,final IPRange,final SharedAccessProtocols)
- com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final String,final IPRange,final SharedAccessProtocols,boolean)
- com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey,SharedAccessBlobPolicy)
- com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(final UserDelegationKey,final SharedAccessBlobPolicy,final SharedAccessBlobHeaders,final IPRange,final SharedAccessProtocols)
- com.microsoft.azure.storage.blob.CloudBlob.getContainer()
- com.microsoft.azure.storage.blob.CloudBlob.getCopyState()
- com.microsoft.azure.storage.blob.CloudBlob.getMetadata()
- com.microsoft.azure.storage.blob.CloudBlob.getName()
- com.microsoft.azure.storage.blob.CloudBlob.getParent()
- com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI(final StorageUri,final String,final CloudBlobContainer)
- com.microsoft.azure.storage.blob.CloudBlob.getProperties()
- com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri()
- com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri()
- com.microsoft.azure.storage.blob.CloudBlob.getServiceClient()
- com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID()
- com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()
- com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri()
- com.microsoft.azure.storage.blob.CloudBlob.getStorageUri()
- com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes()
- com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes()
- com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress(final OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.getUri()
- com.microsoft.azure.storage.blob.CloudBlob.isSnapshot()
- com.microsoft.azure.storage.blob.CloudBlob.openInputStream()
- com.microsoft.azure.storage.blob.CloudBlob.openInputStream(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.openInputStream(final long,final Long,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.parent
- com.microsoft.azure.storage.blob.CloudBlob.releaseLease(final AccessCondition)
- com.microsoft.azure.storage.blob.CloudBlob.releaseLease(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.renewLease(final AccessCondition)
- com.microsoft.azure.storage.blob.CloudBlob.renewLease(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.setContainer(final CloudBlobContainer)
- com.microsoft.azure.storage.blob.CloudBlob.setMetadata(final HashMap<String, String>)
- com.microsoft.azure.storage.blob.CloudBlob.setProperties(final BlobProperties)
- com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID(final String)
- com.microsoft.azure.storage.blob.CloudBlob.setStorageUri(final StorageUri)
- com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(final int)
- com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI)
- com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI,final String,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI,String,boolean,final String,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.startCopy(final URI,String,boolean,final String,final RehydratePriority,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl(final URI,final String,final boolean,final boolean,final String,final RehydratePriority,final AccessCondition,final AccessCondition,final BlobRequestOptions)
- com.microsoft.azure.storage.blob.CloudBlob.streamMinimumReadSizeInBytes
- com.microsoft.azure.storage.blob.CloudBlob.streamWriteSizeInBytes
- com.microsoft.azure.storage.blob.CloudBlob.undelete()
- com.microsoft.azure.storage.blob.CloudBlob.undelete(BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse(HttpURLConnection)
- com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse(HttpURLConnection)
- com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(final byte [],final int,final int)
- com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(final byte [],final int,final int,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(final String)
- com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata()
- com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.uploadProperties()
- com.microsoft.azure.storage.blob.CloudBlob.uploadProperties(final AccessCondition,BlobRequestOptions,OperationContext)
- com.microsoft.azure.storage.blob.CloudBlob.validateCPKHeaders(StorageRequest<CloudBlobClient, T, R>,BlobRequestOptions,boolean)
methods:
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList)
  name: commitBlockList(final Iterable<BlockEntry> blockList)
  nameWithType: CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList)
  parameters:
  - description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.blob.BlockEntry" data-throw-if-not-resolved="false" data-raw-source="BlockEntry"></xref> objects that represents the list block items being committed. The <code>size</code> field is ignored.</p>
    name: blockList
    type: final Iterable&lt;<xref href="com.microsoft.azure.storage.blob.BlockEntry?alt=com.microsoft.azure.storage.blob.BlockEntry&text=BlockEntry" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Commits a block list to the storage service. In order to be written as part of a blob, a block must have been successfully written to the server in a prior uploadBlock operation.</p>

    <p></p>
  syntax: public void commitBlockList(final Iterable<BlockEntry> blockList)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry>)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: commitBlockList(final Iterable<BlockEntry> blockList, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.blob.BlockEntry" data-throw-if-not-resolved="false" data-raw-source="BlockEntry"></xref> objects that represents the list block items being committed. The size field is ignored. </p>
    name: blockList
    type: final Iterable&lt;<xref href="com.microsoft.azure.storage.blob.BlockEntry?alt=com.microsoft.azure.storage.blob.BlockEntry&text=BlockEntry" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Commits a block list to the storage service using the specified lease ID, request options, and operation context. In order to be written as part of a blob, a block must have been successfully written to the server in a prior uploadBlock operation.</p>

    <p></p>
  syntax: public void commitBlockList(final Iterable<BlockEntry> blockList, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry>,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList, StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: commitBlockList(final Iterable<BlockEntry> blockList, StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList, StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.blob.BlockEntry" data-throw-if-not-resolved="false" data-raw-source="BlockEntry"></xref> objects that represents the list block items being committed. The size field is ignored. </p>
    name: blockList
    type: final Iterable&lt;<xref href="com.microsoft.azure.storage.blob.BlockEntry?alt=com.microsoft.azure.storage.blob.BlockEntry&text=BlockEntry" data-throw-if-not-resolved="False"/>&gt;
  - name: standardBlobTier
    type: <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Commits a block list to the storage service using the specified lease ID, request options, and operation context. In order to be written as part of a blob, a block must have been successfully written to the server in a prior uploadBlock operation.</p>

    <p></p>
  syntax: public void commitBlockList(final Iterable<BlockEntry> blockList, StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry>,StandardBlobTier,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI(final String blockId, final URI copySource, final Long offset, final Long length)
  name: createBlockFromURI(final String blockId, final URI copySource, final Long offset, final Long length)
  nameWithType: CloudBlockBlob.createBlockFromURI(final String blockId, final URI copySource, final Long offset, final Long length)
  parameters:
  - description: <p>A <code>String</code> that represents the Base-64 encoded block ID. Note for a given blob the length of all Block IDs must be identical. </p>
    name: blockId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The <code>URI</code> of the source data. It can point to any Azure Blob or File that is public or the URL can include a shared access signature. </p>
    name: copySource
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the offset to use as the starting point for the source. </p>
    name: offset
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>Long</code> which represents the number of bytes to copy or <code>null</code> to copy until the end of the blob. </p>
    name: length
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O error occurred. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates a block to be committed as part of the block blob, using the specified block ID and the source URL.</p>

    <p></p>
  syntax: public void createBlockFromURI(final String blockId, final URI copySource, final Long offset, final Long length)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI(final String,final URI,final Long,final Long)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI(final String blockId, final URI copySource, final Long offset, final Long length, String md5, final AccessCondition sourceAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: createBlockFromURI(final String blockId, final URI copySource, final Long offset, final Long length, String md5, final AccessCondition sourceAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.createBlockFromURI(final String blockId, final URI copySource, final Long offset, final Long length, String md5, final AccessCondition sourceAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> that represents the Base-64 encoded block ID. Note for a given blob the length of all Block IDs must be identical. </p>
    name: blockId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The <code>URI</code> of the source data. It can point to any Azure Blob or File that is public or the URL can include a shared access signature. </p>
    name: copySource
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the offset to use as the starting point for the source. </p>
    name: offset
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>Long</code> which represents the number of bytes to copy or <code>null</code> to copy until the end of the blob. </p>
    name: length
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the MD5 caluclated for the range of bytes of the source. </p>
    name: md5
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source blob. </p>
    name: sourceAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Creates a block to be committed as part of the block blob, using the specified block ID, the specified source URL, the specified lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public void createBlockFromURI(final String blockId, final URI copySource, final Long offset, final Long length, String md5, final AccessCondition sourceAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI(final String,final URI,final Long,final Long,String,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList()
  name: downloadBlockList()
  nameWithType: CloudBlockBlob.downloadBlockList()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>An <code>ArrayList</code> object of <xref uid="com.microsoft.azure.storage.blob.BlockEntry" data-throw-if-not-resolved="false" data-raw-source="BlockEntry"></xref> objects that represent the committed list block items downloaded from the block blob.</p>
    type: ArrayList&lt;<xref href="com.microsoft.azure.storage.blob.BlockEntry?alt=com.microsoft.azure.storage.blob.BlockEntry&text=BlockEntry" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Downloads the committed block list from the block blob. </p>

    <p>The committed block list includes the list of blocks that have been successfully committed to the block blob. The list of committed blocks is returned in the same order that they were committed to the blob. No block may appear more than once in the committed block list.</p>

    <p></p>
  syntax: public ArrayList<BlockEntry> downloadBlockList()
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList()
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList(final BlockListingFilter blockListingFilter, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: downloadBlockList(final BlockListingFilter blockListingFilter, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.downloadBlockList(final BlockListingFilter blockListingFilter, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlockListingFilter" data-throw-if-not-resolved="false" data-raw-source="BlockListingFilter"></xref> value that specifies whether to download committed blocks, uncommitted blocks, or all blocks. </p>
    name: blockListingFilter
    type: final <xref href="com.microsoft.azure.storage.blob.BlockListingFilter?alt=com.microsoft.azure.storage.blob.BlockListingFilter&text=BlockListingFilter" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>An <code>ArrayList</code> object of <xref uid="com.microsoft.azure.storage.blob.BlockEntry" data-throw-if-not-resolved="false" data-raw-source="BlockEntry"></xref> objects that represent the list block items downloaded from the block blob.</p>
    type: ArrayList&lt;<xref href="com.microsoft.azure.storage.blob.BlockEntry?alt=com.microsoft.azure.storage.blob.BlockEntry&text=BlockEntry" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Downloads the block list from the block blob using the specified block listing filter, request options, and operation context. </p>

    <p>The committed block list includes the list of blocks that have been successfully committed to the block blob. The list of committed blocks is returned in the same order that they were committed to the blob. No block may appear more than once in the committed block list.</p>

    <p></p>
  syntax: public ArrayList<BlockEntry> downloadBlockList(final BlockListingFilter blockListingFilter, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList(final BlockListingFilter,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText()
  name: downloadText()
  nameWithType: CloudBlockBlob.downloadText()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the blob's contents.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads a blob to a string using the platform's default encoding.</p>

    <p></p>
  syntax: public String downloadText()
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText()
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText(final String charsetName, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: downloadText(final String charsetName, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.downloadText(final String charsetName, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> which represents the name of the charset to use to encode the content. If null, the platform's default encoding is used. </p>
    name: charsetName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the blob's contents.</p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Downloads a blob to a string using the specified encoding.</p>

    <p></p>
  syntax: public String downloadText(final String charsetName, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText(final String,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.isStreamWriteSizeModified()
  name: isStreamWriteSizeModified()
  nameWithType: CloudBlockBlob.isStreamWriteSizeModified()
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the flag that indicates whether the default streamWriteSize was modified. </p>
  syntax: public boolean isStreamWriteSizeModified()
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.isStreamWriteSizeModified()
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream()
  name: openOutputStream()
  nameWithType: CloudBlockBlob.openOutputStream()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref> object used to write data to the blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobOutputStream?alt=com.microsoft.azure.storage.blob.BlobOutputStream&text=BlobOutputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates and opens an output stream to write data to the block blob. If the blob already exists on the service, it will be overwritten. </p>

    <p>To avoid overwriting and instead throw an error, please use the <xref uid="com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream(AccessCondition,BlobRequestOptions,OperationContext)" data-throw-if-not-resolved="false" data-raw-source="openOutputStream(AccessCondition, BlobRequestOptions, OperationContext)"></xref> overload with the appropriate <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref>.</p>

    <p></p>
  syntax: public BlobOutputStream openOutputStream()
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream()
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: openOutputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.openOutputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref> object used to write data to the blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobOutputStream?alt=com.microsoft.azure.storage.blob.BlobOutputStream&text=BlobOutputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates and opens an output stream to write data to the block blob using the specified request options and operation context. If the blob already exists on the service, it will be overwritten. </p>

    <p>To avoid overwriting and instead throw an error, please pass in an <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> generated using <xref uid="com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()" data-throw-if-not-resolved="false" data-raw-source="AccessCondition#generateIfNotExistsCondition()"></xref>.</p>

    <p></p>
  syntax: public BlobOutputStream openOutputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream(AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  name: setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  nameWithType: CloudBlockBlob.setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  parameters:
  - description: <p>An <code>int</code> which represents the maximum block size, in bytes, for writing to a block blob while using a <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref> object, ranging from 16 KB to 100 MB, inclusive. </p>
    name: streamWriteSizeInBytes
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If <code>streamWriteSizeInBytes</code> is less than 16 KB or greater than 100 MB. </p>
  summary: >-
    <p>Sets the number of bytes to buffer when writing to a <xref uid="com.microsoft.azure.storage.blob.BlobOutputStream" data-throw-if-not-resolved="false" data-raw-source="BlobOutputStream"></xref>.</p>

    <p></p>
  syntax: public void setStreamWriteSizeInBytes(final int streamWriteSizeInBytes)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.setStreamWriteSizeInBytes(final int)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(final CloudBlockBlob sourceBlob)
  name: startCopy(final CloudBlockBlob sourceBlob)
  nameWithType: CloudBlockBlob.startCopy(final CloudBlockBlob sourceBlob)
  parameters:
  - description: <p>A <code>CloudBlockBlob</code> object that represents the source blob to copy.</p>
    name: sourceBlob
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlockBlob?alt=com.microsoft.azure.storage.blob.CloudBlockBlob&text=CloudBlockBlob" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a block blob's contents, properties, and metadata to a new block blob.</p>

    <p></p>
  syntax: public final String startCopy(final CloudBlockBlob sourceBlob)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(final CloudBlockBlob)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(final CloudBlockBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: startCopy(final CloudBlockBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.startCopy(final CloudBlockBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>CloudBlockBlob</code> object that represents the source blob to copy. </p>
    name: sourceBlob
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlockBlob?alt=com.microsoft.azure.storage.blob.CloudBlockBlob&text=CloudBlockBlob" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source blob. </p>
    name: sourceAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination blob. </p>
    name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a block blob's contents, properties, and metadata to a new block blob, using the specified access conditions, lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public final String startCopy(final CloudBlockBlob sourceBlob, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(final CloudBlockBlob,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(final CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: startCopy(final CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.startCopy(final CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>CloudBlockBlob</code> object that represents the source blob to copy. </p>
    name: sourceBlob
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlockBlob?alt=com.microsoft.azure.storage.blob.CloudBlockBlob&text=CloudBlockBlob" data-throw-if-not-resolved="False"/>
  - description: <p>An optional hash value used to ensure transactional integrity for the operation. May be <code>null</code> or empty. </p>
    name: contentMd5
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>boolean</code> to enable synchronous server copy of blobs. </p>
    name: syncCopy
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source blob. </p>
    name: sourceAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination blob. </p>
    name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a block blob's contents, properties, and metadata to a new block blob, using the specified access conditions, lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public final String startCopy(final CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(final CloudBlockBlob,String,boolean,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(final CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, final StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: startCopy(final CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, final StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.startCopy(final CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, final StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>CloudBlockBlob</code> object that represents the source blob to copy. </p>
    name: sourceBlob
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlockBlob?alt=com.microsoft.azure.storage.blob.CloudBlockBlob&text=CloudBlockBlob" data-throw-if-not-resolved="False"/>
  - description: <p>An optional hash value used to ensure transactional integrity for the operation. May be <code>null</code> or empty. </p>
    name: contentMd5
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>boolean</code> to enable synchronous server copy of blobs. </p>
    name: syncCopy
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.blob.StandardBlobTier" data-throw-if-not-resolved="false" data-raw-source="StandardBlobTier"></xref> object that represents the tier of the blob. </p>
    name: standardBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.blob.RehydratePriority" data-throw-if-not-resolved="false" data-raw-source="RehydratePriority"></xref> object that represents the rehydrate priority. </p>
    name: rehydratePriority
    type: <xref href="com.microsoft.azure.storage.blob.RehydratePriority?alt=com.microsoft.azure.storage.blob.RehydratePriority&text=RehydratePriority" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source blob. </p>
    name: sourceAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination blob. </p>
    name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a block blob's contents, properties, and metadata to a new block blob, using the blob tier, rehydrate priority, specified access conditions, lease ID, request options, operation context.</p>

    <p></p>
  syntax: public final String startCopy(final CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, final StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(final CloudBlockBlob,String,boolean,final StandardBlobTier,RehydratePriority,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(final CloudFile sourceFile)
  name: startCopy(final CloudFile sourceFile)
  nameWithType: CloudBlockBlob.startCopy(final CloudFile sourceFile)
  parameters:
  - description: <p>A <code>CloudFile</code> object that represents the source file to copy.</p>
    name: sourceFile
    type: final <xref href="com.microsoft.azure.storage.file.CloudFile?alt=com.microsoft.azure.storage.file.CloudFile&text=CloudFile" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a file's contents, properties, and metadata to a new block blob.</p>

    <p></p>
  syntax: public final String startCopy(final CloudFile sourceFile)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(final CloudFile)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(final CloudFile sourceFile, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  name: startCopy(final CloudFile sourceFile, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.startCopy(final CloudFile sourceFile, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>CloudFile</code> object that represents the source file to copy. </p>
    name: sourceFile
    type: final <xref href="com.microsoft.azure.storage.file.CloudFile?alt=com.microsoft.azure.storage.file.CloudFile&text=CloudFile" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the source file. </p>
    name: sourceAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the destination block blob. </p>
    name: destinationAccessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <code>String</code> which represents the copy ID associated with the copy operation.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Requests the service to start copying a file's contents, properties, and metadata to a new block blob, using the specified access conditions, lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public final String startCopy(final CloudFile sourceFile, final AccessCondition sourceAccessCondition, final AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(final CloudFile,final AccessCondition,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.upload(final InputStream sourceStream, final long length)
  name: upload(final InputStream sourceStream, final long length)
  nameWithType: CloudBlockBlob.upload(final InputStream sourceStream, final long length)
  parameters:
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object that represents the input stream to write to the block blob. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the stream data, or -1 if unknown.</p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O error occurred. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the source stream data to the block blob. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void upload(final InputStream sourceStream, final long length)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.upload(final InputStream,final long)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object that represents the input stream to write to the block blob. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the stream data, or -1 if unknown. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O error occurred. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the source stream data to the blob, using the specified lease ID, request options, and operation context. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void upload(final InputStream sourceStream, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.upload(final InputStream,final long,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.upload(final InputStream sourceStream, final long length, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: upload(final InputStream sourceStream, final long length, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.upload(final InputStream sourceStream, final long length, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object that represents the input stream to write to the block blob. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the stream data, or -1 if unknown. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>An String that represents the tier of the blob. </p>
    name: standardBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O error occurred. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads the source stream data to the blob, using the specified lease ID, request options, and operation context. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void upload(final InputStream sourceStream, final long length, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.upload(final InputStream,final long,final StandardBlobTier,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock(final String blockId, final InputStream sourceStream, final long length)
  name: uploadBlock(final String blockId, final InputStream sourceStream, final long length)
  nameWithType: CloudBlockBlob.uploadBlock(final String blockId, final InputStream sourceStream, final long length)
  parameters:
  - description: <p>A <code>String</code> that represents the Base-64 encoded block ID. Note for a given blob the length of all Block IDs must be identical. </p>
    name: blockId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object that represents the input stream to write to the block blob. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the stream data, or -1 if unknown. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O error occurred. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads a block to be committed as part of the block blob, using the specified block ID.</p>

    <p></p>
  syntax: public void uploadBlock(final String blockId, final InputStream sourceStream, final long length)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock(final String,final InputStream,final long)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock(final String blockId, final InputStream sourceStream, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: uploadBlock(final String blockId, final InputStream sourceStream, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.uploadBlock(final String blockId, final InputStream sourceStream, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> that represents the Base-64 encoded block ID. Note for a given blob the length of all Block IDs must be identical. </p>
    name: blockId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> object that represents the input stream to write to the block blob. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the length, in bytes, of the stream data, or -1 if unknown. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If an I/O error occurred. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads a block to be committed as part of the block blob, using the specified block ID, the specified lease ID, request options, and operation context.</p>

    <p></p>
  syntax: public void uploadBlock(final String blockId, final InputStream sourceStream, final long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock(final String,final InputStream,final long,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFromByteArray(final byte[] buffer, final int offset, final int length, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: uploadFromByteArray(final byte[] buffer, final int offset, final int length, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.uploadFromByteArray(final byte[] buffer, final int offset, final int length, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>byte</code> array which represents the data to write to the blob. </p>
    name: buffer
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>int</code> which represents the offset of the byte array from which to start the data upload. </p>
    name: offset
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the number of bytes to upload from the input buffer. </p>
    name: length
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.blob.StandardBlobTier" data-throw-if-not-resolved="false" data-raw-source="StandardBlobTier"></xref> object that represents the tier of the blob. </p>
    name: standardBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob from data in a byte array. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void uploadFromByteArray(final byte[] buffer, final int offset, final int length, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFromByteArray(final byte [],final int,final int,final StandardBlobTier,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFullBlob(final InputStream sourceStream, final long length, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, final BlobRequestOptions options, final OperationContext opContext)
  name: uploadFullBlob(final InputStream sourceStream, final long length, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, final BlobRequestOptions options, final OperationContext opContext)
  nameWithType: CloudBlockBlob.uploadFullBlob(final InputStream sourceStream, final long length, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, final BlobRequestOptions options, final OperationContext opContext)
  parameters:
  - description: <p>A <code>InputStream</code> object that represents the source stream to upload. </p>
    name: sourceStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>The length, in bytes, of the stream, or -1 if unknown. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.blob.StandardBlobTier" data-throw-if-not-resolved="false" data-raw-source="StandardBlobTier"></xref> object that represents the tier of the blob. </p>
    name: standardBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob in a single operation.</p>

    <p></p>
  syntax: protected final void uploadFullBlob(final InputStream sourceStream, final long length, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, final BlobRequestOptions options, final OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFullBlob(final InputStream,final long,final StandardBlobTier,final AccessCondition,final BlobRequestOptions,final OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(final StandardBlobTier standardBlobTier)
  name: uploadStandardBlobTier(final StandardBlobTier standardBlobTier)
  nameWithType: CloudBlockBlob.uploadStandardBlobTier(final StandardBlobTier standardBlobTier)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.StandardBlobTier" data-throw-if-not-resolved="false" data-raw-source="StandardBlobTier"></xref> object which represents the tier of the blob. </p>
    name: standardBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: <p>Sets the blob tier on a block blob on a standard storage account. </p>
  syntax: public void uploadStandardBlobTier(final StandardBlobTier standardBlobTier)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(final StandardBlobTier)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(final StandardBlobTier standardBlobTier, BlobRequestOptions options, OperationContext opContext)
  name: uploadStandardBlobTier(final StandardBlobTier standardBlobTier, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.uploadStandardBlobTier(final StandardBlobTier standardBlobTier, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.StandardBlobTier" data-throw-if-not-resolved="false" data-raw-source="StandardBlobTier"></xref> object which represents the tier of the blob. </p>
    name: standardBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: <p>Sets the tier on a block blob on a standard storage account. </p>
  syntax: public void uploadStandardBlobTier(final StandardBlobTier standardBlobTier, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(final StandardBlobTier,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(final StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, BlobRequestOptions options, OperationContext opContext)
  name: uploadStandardBlobTier(final StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.uploadStandardBlobTier(final StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.StandardBlobTier" data-throw-if-not-resolved="false" data-raw-source="StandardBlobTier"></xref> object which represents the tier of the blob. </p>
    name: standardBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.RehydratePriority" data-throw-if-not-resolved="false" data-raw-source="RehydratePriority"></xref> object which represents the rehydrate priority. </p>
    name: rehydratePriority
    type: <xref href="com.microsoft.azure.storage.blob.RehydratePriority?alt=com.microsoft.azure.storage.blob.RehydratePriority&text=RehydratePriority" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object which represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: <p>Sets the tier on a block blob on a standard storage account. </p>
  syntax: public void uploadStandardBlobTier(final StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(final StandardBlobTier,RehydratePriority,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(final String content)
  name: uploadText(final String content)
  nameWithType: CloudBlockBlob.uploadText(final String content)
  parameters:
  - description: <p>A <code>String</code> which represents the content that will be uploaded to the blob.</p>
    name: content
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob from a string using the platform's default encoding. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void uploadText(final String content)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(final String content, final String charsetName, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: uploadText(final String content, final String charsetName, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.uploadText(final String content, final String charsetName, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> which represents the content that will be uploaded to the blob. </p>
    name: content
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the name of the charset to use to encode the content. If null, the platform's default encoding is used. </p>
    name: charsetName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob from a string using the specified encoding. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void uploadText(final String content, final String charsetName, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(final String,final String,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(final String content, final String charsetName, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: uploadText(final String content, final String charsetName, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.uploadText(final String content, final String charsetName, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> which represents the content that will be uploaded to the blob. </p>
    name: content
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the name of the charset to use to encode the content. If null, the platform's default encoding is used. </p>
    name: charsetName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.blob.StandardBlobTier" data-throw-if-not-resolved="false" data-raw-source="StandardBlobTier"></xref> object that represents the tier of the blob. </p>
    name: standardBlobTier
    type: final <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob from a string using the specified encoding. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void uploadText(final String content, final String charsetName, final StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(final String,final String,final StandardBlobTier,final AccessCondition,BlobRequestOptions,OperationContext)
nameWithType: CloudBlockBlob
syntax: public class CloudBlockBlob extends CloudBlob
type: class
uid: com.microsoft.azure.storage.blob.CloudBlockBlob
fullName: com.microsoft.azure.storage.blob.CloudBlockBlob
name: CloudBlockBlob
package: com.microsoft.azure.storage.blob
summary: <p>Represents a blob that is uploaded as a set of blocks. </p>
metadata: {}
