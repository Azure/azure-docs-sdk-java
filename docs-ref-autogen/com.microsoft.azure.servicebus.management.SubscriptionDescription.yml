### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription
  id: SubscriptionDescription
  parent: com.microsoft.azure.servicebus.management
  children:
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.equals(Object)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession()
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle(Duration)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive(Duration)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations(boolean)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException(boolean)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration(boolean)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus(EntityStatus)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo(String)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo(String)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration(Duration)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount(int)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession(boolean)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata(String)
  - com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription(String,String)
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: SubscriptionDescription
  nameWithType: SubscriptionDescription
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription
  type: Class
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 10
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Represents the metadata description of the subscription. </p>"
  syntax:
    content: public class SubscriptionDescription
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.equals(Object)
  id: equals(Object)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: equals(Object o)
  nameWithType: SubscriptionDescription.equals(Object o)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.equals(Object o)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.equals*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 348
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: "79317049"
    return:
      type: 4fc6e284
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle()
  id: getAutoDeleteOnIdle()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: getAutoDeleteOnIdle()
  nameWithType: SubscriptionDescription.getAutoDeleteOnIdle()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 153
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public Duration getAutoDeleteOnIdle()
    return:
      type: e02a2de0
      description: <p>The idle interval after which the subscription is automatically deleted. Default value is <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ManagementClientConstants#MAX_DURATION"></xref></p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()
  id: getDefaultMessageTimeToLive()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: getDefaultMessageTimeToLive()
  nameWithType: SubscriptionDescription.getDefaultMessageTimeToLive()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 126
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Time-To-Live is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when <xref uid=\"com.microsoft.azure.servicebus.IMessage.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessage#getTimeToLive()\"></xref> is not set on a message itself. Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages. </p>"
  syntax: &o1
    content: public Duration getDefaultMessageTimeToLive()
    return:
      type: e02a2de0
      description: <p>The default time to live value for the messages. Default value is <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ManagementClientConstants#MAX_DURATION"></xref></p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus()
  id: getEntityStatus()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: getEntityStatus()
  nameWithType: SubscriptionDescription.getEntityStatus()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 256
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Gets the status of the entity. When an entity is disabled, that entity cannot send or receive messages. </p>"
  syntax:
    content: public EntityStatus getEntityStatus()
    return:
      type: com.microsoft.azure.servicebus.management.EntityStatus
      description: <p>The current status of the queue (Enabled / Disabled). The default value is Enabled. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo()
  id: getForwardDeadLetteredMessagesTo()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: getForwardDeadLetteredMessagesTo()
  nameWithType: SubscriptionDescription.getForwardDeadLetteredMessagesTo()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 301
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public String getForwardDeadLetteredMessagesTo()
    return:
      type: "26831127"
      description: <p>The path of the recipient entity to which all the dead-lettered messages of this subscription are forwarded to. If set, user cannot manually receive dead-lettered messages from this subscription. The destination entity must already exist. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo()
  id: getForwardTo()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: getForwardTo()
  nameWithType: SubscriptionDescription.getForwardTo()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 273
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public String getForwardTo()
    return:
      type: "26831127"
      description: <p>The path of the recipient entity to which all the messages sent to the subscription are forwarded to. If set, user cannot manually receive messages from this subscription. The destination entity must be an already existing entity. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration()
  id: getLockDuration()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: getLockDuration()
  nameWithType: SubscriptionDescription.getLockDuration()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 86
  package: com.microsoft.azure.servicebus.management
  summary: "<p>The amount of time that the message is locked by a given receiver so that no other receiver receives the same message. </p>"
  syntax:
    content: public Duration getLockDuration()
    return:
      type: e02a2de0
      description: <p>The duration of a peek lock. Default value is 60 seconds. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount()
  id: getMaxDeliveryCount()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: getMaxDeliveryCount()
  nameWithType: SubscriptionDescription.getMaxDeliveryCount()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 215
  package: com.microsoft.azure.servicebus.management
  summary: "<p>The maximum delivery count of a message before it is dead-lettered. The delivery count is increased when a message is received in <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.servicebus.ReceiveMode#PEEKLOCK\"></xref> mode and didn't complete the message before the message lock expired. </p>"
  syntax:
    content: public int getMaxDeliveryCount()
    return:
      type: f75371fa
      description: <p>Default value is 10. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath()
  id: getPath()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: getPath()
  nameWithType: SubscriptionDescription.getPath()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 77
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public String getPath()
    return:
      type: "26831127"
      description: <p>the path of the subscription, including the topic. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName()
  id: getSubscriptionName()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: getSubscriptionName()
  nameWithType: SubscriptionDescription.getSubscriptionName()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 61
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public String getSubscriptionName()
    return:
      type: "26831127"
      description: <p>the subscription name. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath()
  id: getTopicPath()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: getTopicPath()
  nameWithType: SubscriptionDescription.getTopicPath()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 44
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public String getTopicPath()
    return:
      type: "26831127"
      description: <p>the path of the topic. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata()
  id: getUserMetadata()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: getUserMetadata()
  nameWithType: SubscriptionDescription.getUserMetadata()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 327
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public String getUserMetadata()
    return:
      type: "26831127"
      description: <p>Custom metdata that user can associate with the description. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode()
  id: hashCode()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: hashCode()
  nameWithType: SubscriptionDescription.hashCode()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 379
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public int hashCode()
    return:
      type: f75371fa
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations()
  id: isEnableBatchedOperations()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: isEnableBatchedOperations()
  nameWithType: SubscriptionDescription.isEnableBatchedOperations()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 240
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public boolean isEnableBatchedOperations()
    return:
      type: 4fc6e284
      description: <p>Indicates whether server-side batched operations are enabled. Defaults to true. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()
  id: isEnableDeadLetteringOnFilterEvaluationException()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: isEnableDeadLetteringOnFilterEvaluationException()
  nameWithType: SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 197
  package: com.microsoft.azure.servicebus.management
  syntax: &o3
    content: public boolean isEnableDeadLetteringOnFilterEvaluationException()
    return:
      type: 4fc6e284
      description: <p>boolean indicating whether messages need to be forwarded to dead-letter subqueue when subscription rule evaluation fails. Default value is true. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()
  id: isEnableDeadLetteringOnMessageExpiration()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: isEnableDeadLetteringOnMessageExpiration()
  nameWithType: SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 181
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Indicates whether this subscription has dead letter support when a message expires. </p>"
  syntax: &o2
    content: public boolean isEnableDeadLetteringOnMessageExpiration()
    return:
      type: 4fc6e284
      description: <p>If true, the expired messages are moved to dead-letter subqueue. Default value is false. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession()
  id: isRequiresSession()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: isRequiresSession()
  nameWithType: SubscriptionDescription.isRequiresSession()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession()
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 107
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public boolean isRequiresSession()
    return:
      type: 4fc6e284
      description: <p>This indicates whether the subscription supports the concept of session. Sessionful-messages follow FIFO ordering. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle(Duration)
  id: setAutoDeleteOnIdle(Duration)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  nameWithType: SubscriptionDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 161
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
    parameters:
    - id: autoDeleteOnIdle
      type: e02a2de0
      description: <p>- The idle interval after which the subscription is automatically deleted. The minimum duration is 5 minutes. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive(Duration)
  id: setDefaultMessageTimeToLive(Duration)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  nameWithType: SubscriptionDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 135
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
    parameters:
    - id: defaultMessageTimeToLive
      type: e02a2de0
      description: <p>- Sets the default message time to live value. Value cannot be lower than 1 second. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()" data-throw-if-not-resolved="false" data-raw-source="getDefaultMessageTimeToLive()"></xref></p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations(boolean)
  id: setEnableBatchedOperations(boolean)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: setEnableBatchedOperations(boolean enableBatchedOperations)
  nameWithType: SubscriptionDescription.setEnableBatchedOperations(boolean enableBatchedOperations)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations(boolean enableBatchedOperations)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 247
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setEnableBatchedOperations(boolean enableBatchedOperations)
    parameters:
    - id: enableBatchedOperations
      type: 4fc6e284
      description: <p>- Indicates whether server-side batched operations are enabled. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException(boolean)
  id: setEnableDeadLetteringOnFilterEvaluationException(boolean)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: setEnableDeadLetteringOnFilterEvaluationException(boolean enableDeadLetteringOnFilterEvaluationException)
  nameWithType: SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException(boolean enableDeadLetteringOnFilterEvaluationException)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException(boolean enableDeadLetteringOnFilterEvaluationException)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 205
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setEnableDeadLetteringOnFilterEvaluationException(boolean enableDeadLetteringOnFilterEvaluationException)
    parameters:
    - id: enableDeadLetteringOnFilterEvaluationException
      type: 4fc6e284
      description: <p>- True if messages should be dead-lettered on filter evaluation exception. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()" data-throw-if-not-resolved="false" data-raw-source="isEnableDeadLetteringOnFilterEvaluationException()"></xref></p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration(boolean)
  id: setEnableDeadLetteringOnMessageExpiration(boolean)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)
  nameWithType: SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 189
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)
    parameters:
    - id: enableDeadLetteringOnMessageExpiration
      type: 4fc6e284
      description: <p>- True if messages should be dead-lettered on expiration. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()" data-throw-if-not-resolved="false" data-raw-source="isEnableDeadLetteringOnMessageExpiration()"></xref></p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus(EntityStatus)
  id: setEntityStatus(EntityStatus)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: setEntityStatus(EntityStatus status)
  nameWithType: SubscriptionDescription.setEntityStatus(EntityStatus status)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus(EntityStatus status)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 264
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setEntityStatus(EntityStatus status)
    parameters:
    - id: status
      type: com.microsoft.azure.servicebus.management.EntityStatus
      description: <p>- the status of the queue (Enabled / Disabled). When an entity is disabled, that entity cannot send or receive messages. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo(String)
  id: setForwardDeadLetteredMessagesTo(String)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)
  nameWithType: SubscriptionDescription.setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 310
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)
    parameters:
    - id: forwardDeadLetteredMessagesTo
      type: "26831127"
      description: <p>- The path of the recipient entity to which all the dead-lettered messages of this subscription are forwarded to. If set, user cannot manually receive dead-lettered messages from this subscription. The destination entity must already exist. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo(String)
  id: setForwardTo(String)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: setForwardTo(String forwardTo)
  nameWithType: SubscriptionDescription.setForwardTo(String forwardTo)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo(String forwardTo)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 282
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setForwardTo(String forwardTo)
    parameters:
    - id: forwardTo
      type: "26831127"
      description: <p>- The path of the recipient entity to which all the messages sent to the subscription are forwarded to. If set, user cannot manually receive messages from this subscription. The destination entity must be an already existing entity. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration(Duration)
  id: setLockDuration(Duration)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: setLockDuration(Duration lockDuration)
  nameWithType: SubscriptionDescription.setLockDuration(Duration lockDuration)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration(Duration lockDuration)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 96
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Sets The amount of time that the message is locked by a given receiver so that no other receiver receives the same message. </p>"
  syntax:
    content: public void setLockDuration(Duration lockDuration)
    parameters:
    - id: lockDuration
      type: e02a2de0
      description: <p>- The duration of a peek lock. Max value is 5 minutes. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount(int)
  id: setMaxDeliveryCount(int)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: setMaxDeliveryCount(int maxDeliveryCount)
  nameWithType: SubscriptionDescription.setMaxDeliveryCount(int maxDeliveryCount)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount(int maxDeliveryCount)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 225
  package: com.microsoft.azure.servicebus.management
  summary: "<p>The maximum delivery count of a message before it is dead-lettered. The delivery count is increased when a message is received in <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.servicebus.ReceiveMode#PEEKLOCK\"></xref> mode and didn't complete the message before the message lock expired. </p>"
  syntax:
    content: public void setMaxDeliveryCount(int maxDeliveryCount)
    parameters:
    - id: maxDeliveryCount
      type: f75371fa
      description: <p>- Minimum value is 1. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession(boolean)
  id: setRequiresSession(boolean)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: setRequiresSession(boolean requiresSession)
  nameWithType: SubscriptionDescription.setRequiresSession(boolean requiresSession)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession(boolean requiresSession)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 114
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setRequiresSession(boolean requiresSession)
    parameters:
    - id: requiresSession
      type: 4fc6e284
      description: <p>- Set to true if subscription should support sessions. </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata(String)
  id: setUserMetadata(String)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: setUserMetadata(String userMetadata)
  nameWithType: SubscriptionDescription.setUserMetadata(String userMetadata)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata(String userMetadata)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 335
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setUserMetadata(String userMetadata)
    parameters:
    - id: userMetadata
      type: "26831127"
      description: <p>- Custom metdata that user can associate with the description. Cannot be null. Max length is 1024 chars </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription(String,String)
  id: SubscriptionDescription(String,String)
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  langs:
  - java
  name: SubscriptionDescription(String topicPath, String subscriptionName)
  nameWithType: SubscriptionDescription.SubscriptionDescription(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/SubscriptionDescription.java
    startLine: 35
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Initializes a new instance of SubscriptionDescription with the specified relative path. </p>"
  syntax:
    content: public SubscriptionDescription(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: "26831127"
      description: "<p>- Path of the topic Max length is 260 chars. Cannot start or end with a slash. Cannot have restricted characters: '@','?','#','*' </p>"
    - id: subscriptionName
      type: "26831127"
      description: "<p>- Name of the subscription Max length is 50 chars. Cannot have restricted characters: '@','?','#','*','/' </p>"
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription*
  name: SubscriptionDescription
  nameWithType: SubscriptionDescription.SubscriptionDescription
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath*
  name: getTopicPath
  nameWithType: SubscriptionDescription.getTopicPath
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName*
  name: getSubscriptionName
  nameWithType: SubscriptionDescription.getSubscriptionName
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath*
  name: getPath
  nameWithType: SubscriptionDescription.getPath
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath
  package: com.microsoft.azure.servicebus.management
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration*
  name: getLockDuration
  nameWithType: SubscriptionDescription.getLockDuration
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration*
  name: setLockDuration
  nameWithType: SubscriptionDescription.setLockDuration
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration
  package: com.microsoft.azure.servicebus.management
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession*
  name: isRequiresSession
  nameWithType: SubscriptionDescription.isRequiresSession
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession*
  name: setRequiresSession
  nameWithType: SubscriptionDescription.setRequiresSession
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive*
  name: getDefaultMessageTimeToLive
  nameWithType: SubscriptionDescription.getDefaultMessageTimeToLive
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive*
  name: setDefaultMessageTimeToLive
  nameWithType: SubscriptionDescription.setDefaultMessageTimeToLive
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle*
  name: getAutoDeleteOnIdle
  nameWithType: SubscriptionDescription.getAutoDeleteOnIdle
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle*
  name: setAutoDeleteOnIdle
  nameWithType: SubscriptionDescription.setAutoDeleteOnIdle
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration*
  name: isEnableDeadLetteringOnMessageExpiration
  nameWithType: SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration*
  name: setEnableDeadLetteringOnMessageExpiration
  nameWithType: SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException*
  name: isEnableDeadLetteringOnFilterEvaluationException
  nameWithType: SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException*
  name: setEnableDeadLetteringOnFilterEvaluationException
  nameWithType: SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException
  package: com.microsoft.azure.servicebus.management
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount*
  name: getMaxDeliveryCount
  nameWithType: SubscriptionDescription.getMaxDeliveryCount
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount*
  name: setMaxDeliveryCount
  nameWithType: SubscriptionDescription.setMaxDeliveryCount
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations*
  name: isEnableBatchedOperations
  nameWithType: SubscriptionDescription.isEnableBatchedOperations
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations*
  name: setEnableBatchedOperations
  nameWithType: SubscriptionDescription.setEnableBatchedOperations
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus*
  name: getEntityStatus
  nameWithType: SubscriptionDescription.getEntityStatus
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus*
  name: setEntityStatus
  nameWithType: SubscriptionDescription.setEntityStatus
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo*
  name: getForwardTo
  nameWithType: SubscriptionDescription.getForwardTo
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo*
  name: setForwardTo
  nameWithType: SubscriptionDescription.setForwardTo
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo*
  name: getForwardDeadLetteredMessagesTo
  nameWithType: SubscriptionDescription.getForwardDeadLetteredMessagesTo
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo*
  name: setForwardDeadLetteredMessagesTo
  nameWithType: SubscriptionDescription.setForwardDeadLetteredMessagesTo
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata*
  name: getUserMetadata
  nameWithType: SubscriptionDescription.getUserMetadata
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata*
  name: setUserMetadata
  nameWithType: SubscriptionDescription.setUserMetadata
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata
  package: com.microsoft.azure.servicebus.management
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.equals*
  name: equals
  nameWithType: SubscriptionDescription.equals
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.equals
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode*
  name: hashCode
  nameWithType: SubscriptionDescription.hashCode
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.EntityStatus
  parent: com.microsoft.azure.servicebus.management
  href: com.microsoft.azure.servicebus.management.EntityStatus.yml
  name: EntityStatus
  nameWithType: EntityStatus
  fullName: com.microsoft.azure.servicebus.management.EntityStatus
  type: Enum
  summary: "<p>The status of the messaging entity. </p>"
  syntax:
    content: public enum EntityStatus
- uid: com.microsoft.azure.servicebus.management.EntityStatus.Active
  parent: com.microsoft.azure.servicebus.management.EntityStatus
  href: com.microsoft.azure.servicebus.management.EntityStatus.yml
  name: Active
  nameWithType: EntityStatus.Active
  fullName: com.microsoft.azure.servicebus.management.EntityStatus.Active
  type: Field
  summary: "<p>The entity is active. </p>"
  syntax:
    content: public Active=(0)
- uid: com.microsoft.azure.servicebus.rules.RuleDescription
  parent: com.microsoft.azure.servicebus.rules
  href: com.microsoft.azure.servicebus.rules.RuleDescription.yml
  name: RuleDescription
  nameWithType: RuleDescription
  fullName: com.microsoft.azure.servicebus.rules.RuleDescription
  type: Class
  summary: "<p>Representation of a rule defined on service bus topics.</p>\r\n<p></p>"
  syntax:
    content: public class RuleDescription
- uid: com.microsoft.azure.servicebus.IMessage.getTimeToLive()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: getTimeToLive()
  nameWithType: IMessage.getTimeToLive()
  fullName: com.microsoft.azure.servicebus.IMessage.getTimeToLive()
  type: Method
  summary: "<p>Gets the duration before this message expires.</p>\r\n<p>This value is the relative duration after which the message expires, starting from the instant the message has been accepted and stored by the broker, as captured in <xref uid=\"com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getEnqueuedTimeUtc\"></xref>. When not set explicitly, the assumed value is the DefaultTimeToLive set for the respective queue or topic. A message-level TimeToLive value cannot be longer than the entity's DefaultTimeToLive setting and it is silently adjusted if it does.</p>\r\n<p></p>"
  syntax:
    content: public Duration getTimeToLive()
    return:
      type: e02a2de0
      description: <p>Time to Live duration of this message </p>
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  name: getDefaultMessageTimeToLive()
  nameWithType: SubscriptionDescription.getDefaultMessageTimeToLive()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()
  type: Method
  summary: "<p>Time-To-Live is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when <xref uid=\"com.microsoft.azure.servicebus.IMessage.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessage#getTimeToLive()\"></xref> is not set on a message itself. Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages. </p>"
  syntax: *o1
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  name: isEnableDeadLetteringOnMessageExpiration()
  nameWithType: SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()
  type: Method
  summary: "<p>Indicates whether this subscription has dead letter support when a message expires. </p>"
  syntax: *o2
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()
  parent: com.microsoft.azure.servicebus.management.SubscriptionDescription
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  name: isEnableDeadLetteringOnFilterEvaluationException()
  nameWithType: SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()
  type: Method
  syntax: *o3
- uid: com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK
  parent: com.microsoft.azure.servicebus.ReceiveMode
  href: com.microsoft.azure.servicebus.ReceiveMode.yml
  name: PEEKLOCK
  nameWithType: ReceiveMode.PEEKLOCK
  fullName: com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK
  type: Field
  summary: "<p>In this mode, received message is not deleted from the queue or subscription, instead it is temporarily locked to the receiver, making it invisible to other receivers. Then the service waits for one of the three events <ul><li><p>If the receiver processes the message successfully, it calls  and the message will be deleted. </p></li><li><p>If the receiver decides that it can't process the message successfully, it calls  and the message will be unlocked and made available to other receivers. </p></li><li><p>If the receiver wants to defer the processing of the message to a later point in time, it calls  and the message will be deferred. A deferred can only be received by its sequence number. </p></li><li><p>If the receiver wants to dead-letter the message, it calls  and the message will be moved to a special sub-queue called deadletter queue. </p></li><li><p>If the receiver calls neither of these methods within a configurable period of time (by default, 60 seconds), the service assumes the receiver has failed. In this case, it behaves as if the receiver had called , making the message available to other receivers </p></li></ul></p>"
  syntax:
    content: public PEEKLOCK
