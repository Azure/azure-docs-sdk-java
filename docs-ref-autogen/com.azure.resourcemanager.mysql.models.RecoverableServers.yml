### YamlMime:JavaType
uid: "com.azure.resourcemanager.mysql.models.RecoverableServers"
fullName: "com.azure.resourcemanager.mysql.models.RecoverableServers"
name: "RecoverableServers"
nameWithType: "RecoverableServers"
summary: "Resource collection API of Recoverable<wbr>Servers."
syntax: "public interface RecoverableServers"
methods:
- uid: "com.azure.resourcemanager.mysql.models.RecoverableServers.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.mysql.models.RecoverableServers.get(String resourceGroupName, String serverName)"
  name: "get(String resourceGroupName, String serverName)"
  nameWithType: "RecoverableServers.get(String resourceGroupName, String serverName)"
  summary: "Gets a recoverable MySQL Server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server."
    name: "serverName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RecoverableServerResource get(String resourceGroupName, String serverName)"
  desc: "Gets a recoverable MySQL Server."
  returns:
    description: "a recoverable MySQL Server."
    type: "<xref href=\"com.azure.resourcemanager.mysql.models.RecoverableServerResource?alt=com.azure.resourcemanager.mysql.models.RecoverableServerResource&text=RecoverableServerResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mysql.models.RecoverableServers.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mysql.models.RecoverableServers.getWithResponse(String resourceGroupName, String serverName, Context context)"
  name: "getWithResponse(String resourceGroupName, String serverName, Context context)"
  nameWithType: "RecoverableServers.getWithResponse(String resourceGroupName, String serverName, Context context)"
  summary: "Gets a recoverable MySQL Server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server."
    name: "serverName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<RecoverableServerResource> getWithResponse(String resourceGroupName, String serverName, Context context)"
  desc: "Gets a recoverable MySQL Server."
  returns:
    description: "a recoverable MySQL Server along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mysql.models.RecoverableServerResource?alt=com.azure.resourcemanager.mysql.models.RecoverableServerResource&text=RecoverableServerResource\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of RecoverableServers."
metadata: {}
package: "com.azure.resourcemanager.mysql.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mysql:1.0.2
