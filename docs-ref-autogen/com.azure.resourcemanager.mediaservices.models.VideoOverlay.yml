### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay"
fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay"
name: "VideoOverlay"
nameWithType: "VideoOverlay"
summary: "Describes the properties of a video overlay."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.Overlay?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.mediaservices.models.Overlay.audioGainLevel()"
- "com.azure.resourcemanager.mediaservices.models.Overlay.end()"
- "com.azure.resourcemanager.mediaservices.models.Overlay.fadeInDuration()"
- "com.azure.resourcemanager.mediaservices.models.Overlay.fadeOutDuration()"
- "com.azure.resourcemanager.mediaservices.models.Overlay.inputLabel()"
- "com.azure.resourcemanager.mediaservices.models.Overlay.start()"
- "com.azure.resourcemanager.mediaservices.models.Overlay.validate()"
- "com.azure.resourcemanager.mediaservices.models.Overlay.withAudioGainLevel(java.lang.Double)"
- "com.azure.resourcemanager.mediaservices.models.Overlay.withEnd(java.time.Duration)"
- "com.azure.resourcemanager.mediaservices.models.Overlay.withFadeInDuration(java.time.Duration)"
- "com.azure.resourcemanager.mediaservices.models.Overlay.withFadeOutDuration(java.time.Duration)"
- "com.azure.resourcemanager.mediaservices.models.Overlay.withInputLabel(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.models.Overlay.withStart(java.time.Duration)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VideoOverlay extends Overlay"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.VideoOverlay()"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.VideoOverlay()"
  name: "VideoOverlay()"
  nameWithType: "VideoOverlay.VideoOverlay()"
  syntax: "public VideoOverlay()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.cropRectangle()"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.cropRectangle()"
  name: "cropRectangle()"
  nameWithType: "VideoOverlay.cropRectangle()"
  summary: "Get the crop<wbr>Rectangle property: An optional rectangular window used to crop the overlay image or video."
  syntax: "public Rectangle cropRectangle()"
  desc: "Get the cropRectangle property: An optional rectangular window used to crop the overlay image or video."
  returns:
    description: "the cropRectangle value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Rectangle?alt=com.azure.resourcemanager.mediaservices.models.Rectangle&text=Rectangle\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.opacity()"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.opacity()"
  name: "opacity()"
  nameWithType: "VideoOverlay.opacity()"
  summary: "Get the opacity property: The opacity of the overlay."
  syntax: "public Double opacity()"
  desc: "Get the opacity property: The opacity of the overlay. This is a value in the range \\[0 - 1.0\\]. Default is 1.0 which mean the overlay is opaque."
  returns:
    description: "the opacity value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.position()"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.position()"
  name: "position()"
  nameWithType: "VideoOverlay.position()"
  summary: "Get the position property: The location in the input video where the overlay is applied."
  syntax: "public Rectangle position()"
  desc: "Get the position property: The location in the input video where the overlay is applied."
  returns:
    description: "the position value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Rectangle?alt=com.azure.resourcemanager.mediaservices.models.Rectangle&text=Rectangle\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.validate()"
  name: "validate()"
  nameWithType: "VideoOverlay.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.mediaservices.models.Overlay.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withAudioGainLevel(java.lang.Double)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withAudioGainLevel(Double audioGainLevel)"
  name: "withAudioGainLevel(Double audioGainLevel)"
  nameWithType: "VideoOverlay.withAudioGainLevel(Double audioGainLevel)"
  summary: "Set the audio<wbr>Gain<wbr>Level property: The gain level of audio in the overlay."
  overridden: "com.azure.resourcemanager.mediaservices.models.Overlay.withAudioGainLevel(java.lang.Double)"
  parameters:
  - name: "audioGainLevel"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoOverlay withAudioGainLevel(Double audioGainLevel)"
  desc: "Set the audioGainLevel property: The gain level of audio in the overlay. The value should be in the range \\[0, 1.0\\]. The default is 1.0."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoOverlay?alt=com.azure.resourcemanager.mediaservices.models.VideoOverlay&text=VideoOverlay\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withCropRectangle(com.azure.resourcemanager.mediaservices.models.Rectangle)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withCropRectangle(Rectangle cropRectangle)"
  name: "withCropRectangle(Rectangle cropRectangle)"
  nameWithType: "VideoOverlay.withCropRectangle(Rectangle cropRectangle)"
  summary: "Set the crop<wbr>Rectangle property: An optional rectangular window used to crop the overlay image or video."
  parameters:
  - description: "the cropRectangle value to set."
    name: "cropRectangle"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Rectangle?alt=com.azure.resourcemanager.mediaservices.models.Rectangle&text=Rectangle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoOverlay withCropRectangle(Rectangle cropRectangle)"
  desc: "Set the cropRectangle property: An optional rectangular window used to crop the overlay image or video."
  returns:
    description: "the VideoOverlay object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoOverlay?alt=com.azure.resourcemanager.mediaservices.models.VideoOverlay&text=VideoOverlay\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withEnd(java.time.Duration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withEnd(Duration end)"
  name: "withEnd(Duration end)"
  nameWithType: "VideoOverlay.withEnd(Duration end)"
  summary: "Set the end property: The end position, with reference to the input video, at which the overlay ends."
  overridden: "com.azure.resourcemanager.mediaservices.models.Overlay.withEnd(java.time.Duration)"
  parameters:
  - name: "end"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoOverlay withEnd(Duration end)"
  desc: "Set the end property: The end position, with reference to the input video, at which the overlay ends. The value should be in ISO 8601 format. For example, PT30S to end the overlay at 30 seconds into the input video. If not specified or the value is greater than the input video duration, the overlay will be applied until the end of the input video if the overlay media duration is greater than the input video duration, else the overlay will last as long as the overlay media duration."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoOverlay?alt=com.azure.resourcemanager.mediaservices.models.VideoOverlay&text=VideoOverlay\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withFadeInDuration(java.time.Duration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withFadeInDuration(Duration fadeInDuration)"
  name: "withFadeInDuration(Duration fadeInDuration)"
  nameWithType: "VideoOverlay.withFadeInDuration(Duration fadeInDuration)"
  summary: "Set the fade<wbr>InDuration property: The duration over which the overlay fades in onto the input video."
  overridden: "com.azure.resourcemanager.mediaservices.models.Overlay.withFadeInDuration(java.time.Duration)"
  parameters:
  - name: "fadeInDuration"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoOverlay withFadeInDuration(Duration fadeInDuration)"
  desc: "Set the fadeInDuration property: The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade in (same as PT0S)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoOverlay?alt=com.azure.resourcemanager.mediaservices.models.VideoOverlay&text=VideoOverlay\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withFadeOutDuration(java.time.Duration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withFadeOutDuration(Duration fadeOutDuration)"
  name: "withFadeOutDuration(Duration fadeOutDuration)"
  nameWithType: "VideoOverlay.withFadeOutDuration(Duration fadeOutDuration)"
  summary: "Set the fade<wbr>Out<wbr>Duration property: The duration over which the overlay fades out of the input video."
  overridden: "com.azure.resourcemanager.mediaservices.models.Overlay.withFadeOutDuration(java.time.Duration)"
  parameters:
  - name: "fadeOutDuration"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoOverlay withFadeOutDuration(Duration fadeOutDuration)"
  desc: "Set the fadeOutDuration property: The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade out (same as PT0S)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoOverlay?alt=com.azure.resourcemanager.mediaservices.models.VideoOverlay&text=VideoOverlay\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withInputLabel(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withInputLabel(String inputLabel)"
  name: "withInputLabel(String inputLabel)"
  nameWithType: "VideoOverlay.withInputLabel(String inputLabel)"
  summary: "Set the input<wbr>Label property: The label of the job input which is to be used as an overlay."
  overridden: "com.azure.resourcemanager.mediaservices.models.Overlay.withInputLabel(java.lang.String)"
  parameters:
  - name: "inputLabel"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoOverlay withInputLabel(String inputLabel)"
  desc: "Set the inputLabel property: The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify an image file in JPG, PNG, GIF or BMP format, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file. See https://aka.ms/mesformats for the complete list of supported audio and video file formats."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoOverlay?alt=com.azure.resourcemanager.mediaservices.models.VideoOverlay&text=VideoOverlay\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withOpacity(java.lang.Double)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withOpacity(Double opacity)"
  name: "withOpacity(Double opacity)"
  nameWithType: "VideoOverlay.withOpacity(Double opacity)"
  summary: "Set the opacity property: The opacity of the overlay."
  parameters:
  - description: "the opacity value to set."
    name: "opacity"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoOverlay withOpacity(Double opacity)"
  desc: "Set the opacity property: The opacity of the overlay. This is a value in the range \\[0 - 1.0\\]. Default is 1.0 which mean the overlay is opaque."
  returns:
    description: "the VideoOverlay object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoOverlay?alt=com.azure.resourcemanager.mediaservices.models.VideoOverlay&text=VideoOverlay\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withPosition(com.azure.resourcemanager.mediaservices.models.Rectangle)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withPosition(Rectangle position)"
  name: "withPosition(Rectangle position)"
  nameWithType: "VideoOverlay.withPosition(Rectangle position)"
  summary: "Set the position property: The location in the input video where the overlay is applied."
  parameters:
  - description: "the position value to set."
    name: "position"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Rectangle?alt=com.azure.resourcemanager.mediaservices.models.Rectangle&text=Rectangle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoOverlay withPosition(Rectangle position)"
  desc: "Set the position property: The location in the input video where the overlay is applied."
  returns:
    description: "the VideoOverlay object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoOverlay?alt=com.azure.resourcemanager.mediaservices.models.VideoOverlay&text=VideoOverlay\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withStart(java.time.Duration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoOverlay.withStart(Duration start)"
  name: "withStart(Duration start)"
  nameWithType: "VideoOverlay.withStart(Duration start)"
  summary: "Set the start property: The start position, with reference to the input video, at which the overlay starts."
  overridden: "com.azure.resourcemanager.mediaservices.models.Overlay.withStart(java.time.Duration)"
  parameters:
  - name: "start"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoOverlay withStart(Duration start)"
  desc: "Set the start property: The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format. For example, PT05S to start the overlay at 5 seconds into the input video. If not specified the overlay starts from the beginning of the input video."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoOverlay?alt=com.azure.resourcemanager.mediaservices.models.VideoOverlay&text=VideoOverlay\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes the properties of a video overlay."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0
