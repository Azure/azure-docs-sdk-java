### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl
  id: ExpressRoutePortsLocationsClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
  parent: com.azure.resourcemanager.network.implementation
  children:
  - com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.get(java.lang.String)
  - com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getAsync(java.lang.String)
  - com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.list()
  - com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.listAsync()
  langs:
  - java
  name: ExpressRoutePortsLocationsClientImpl
  nameWithType: ExpressRoutePortsLocationsClientImpl
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl
  type: Class
  package: com.azure.resourcemanager.network.implementation
  summary: An instance of this class provides access to all the operations defined in ExpressRoutePortsLocationsClient.
  syntax:
    content: public final class ExpressRoutePortsLocationsClientImpl implements ExpressRoutePortsLocationsClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.network.fluent.ExpressRoutePortsLocationsClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.ExpressRoutePortsLocationsClientImpl(com.azure.resourcemanager.network.implementation.NetworkManagementClientImpl)
  id: ExpressRoutePortsLocationsClientImpl(com.azure.resourcemanager.network.implementation.NetworkManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
  parent: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl
  langs:
  - java
  name: ExpressRoutePortsLocationsClientImpl(NetworkManagementClientImpl client)
  nameWithType: ExpressRoutePortsLocationsClientImpl.ExpressRoutePortsLocationsClientImpl(NetworkManagementClientImpl client)
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.ExpressRoutePortsLocationsClientImpl(NetworkManagementClientImpl client)
  overload: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.ExpressRoutePortsLocationsClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.network.implementation
  summary: Initializes an instance of ExpressRoutePortsLocationsClientImpl.
  syntax:
    content: " ExpressRoutePortsLocationsClientImpl(NetworkManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.network.implementation.NetworkManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.get(java.lang.String)
  id: get(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
  parent: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl
  langs:
  - java
  name: get(String locationName)
  nameWithType: ExpressRoutePortsLocationsClientImpl.get(String locationName)
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.get(String locationName)
  overload: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.get*
  type: Method
  package: com.azure.resourcemanager.network.implementation
  summary: Retrieves a single ExpressRoutePort peering location, including the list of available bandwidths available at said peering location.
  syntax:
    content: public ExpressRoutePortsLocationInner get(String locationName)
    parameters:
    - id: locationName
      type: java.lang.String
      description: Name of the requested ExpressRoutePort peering location.
    return:
      type: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
      description: definition of the ExpressRoutePorts peering location resource.
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getAsync(java.lang.String)
  id: getAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
  parent: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl
  langs:
  - java
  name: getAsync(String locationName)
  nameWithType: ExpressRoutePortsLocationsClientImpl.getAsync(String locationName)
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getAsync(String locationName)
  overload: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getAsync*
  type: Method
  package: com.azure.resourcemanager.network.implementation
  summary: Retrieves a single ExpressRoutePort peering location, including the list of available bandwidths available at said peering location.
  syntax:
    content: public Mono<ExpressRoutePortsLocationInner> getAsync(String locationName)
    parameters:
    - id: locationName
      type: java.lang.String
      description: Name of the requested ExpressRoutePort peering location.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner>
      description: definition of the ExpressRoutePorts peering location resource.
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
  parent: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl
  langs:
  - java
  name: getWithResponse(String locationName, Context context)
  nameWithType: ExpressRoutePortsLocationsClientImpl.getWithResponse(String locationName, Context context)
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getWithResponse(String locationName, Context context)
  overload: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.network.implementation
  summary: Retrieves a single ExpressRoutePort peering location, including the list of available bandwidths available at said peering location.
  syntax:
    content: public Response<ExpressRoutePortsLocationInner> getWithResponse(String locationName, Context context)
    parameters:
    - id: locationName
      type: java.lang.String
      description: Name of the requested ExpressRoutePort peering location.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner>
      description: definition of the ExpressRoutePorts peering location resource.
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getWithResponseAsync(java.lang.String)
  id: getWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
  parent: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl
  langs:
  - java
  name: getWithResponseAsync(String locationName)
  nameWithType: ExpressRoutePortsLocationsClientImpl.getWithResponseAsync(String locationName)
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getWithResponseAsync(String locationName)
  overload: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.implementation
  summary: Retrieves a single ExpressRoutePort peering location, including the list of available bandwidths available at said peering location.
  syntax:
    content: public Mono<Response<ExpressRoutePortsLocationInner>> getWithResponseAsync(String locationName)
    parameters:
    - id: locationName
      type: java.lang.String
      description: Name of the requested ExpressRoutePort peering location.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner>>
      description: definition of the ExpressRoutePorts peering location resource.
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
  parent: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl
  langs:
  - java
  name: list()
  nameWithType: ExpressRoutePortsLocationsClientImpl.list()
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.list()
  overload: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.network.implementation
  summary: Retrieves all ExpressRoutePort peering locations. Does not return available bandwidths for each location. Available bandwidths can only be obtained when retrieving a specific peering location.
  syntax:
    content: public PagedIterable<ExpressRoutePortsLocationInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner>
      description: response for ListExpressRoutePortsLocations API service call.
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
  parent: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl
  langs:
  - java
  name: list(Context context)
  nameWithType: ExpressRoutePortsLocationsClientImpl.list(Context context)
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.list(Context context)
  overload: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.network.implementation
  summary: Retrieves all ExpressRoutePort peering locations. Does not return available bandwidths for each location. Available bandwidths can only be obtained when retrieving a specific peering location.
  syntax:
    content: public PagedIterable<ExpressRoutePortsLocationInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner>
      description: response for ListExpressRoutePortsLocations API service call.
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
  parent: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl
  langs:
  - java
  name: listAsync()
  nameWithType: ExpressRoutePortsLocationsClientImpl.listAsync()
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.listAsync()
  overload: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.network.implementation
  summary: Retrieves all ExpressRoutePort peering locations. Does not return available bandwidths for each location. Available bandwidths can only be obtained when retrieving a specific peering location.
  syntax:
    content: public PagedFlux<ExpressRoutePortsLocationInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner>
      description: response for ListExpressRoutePortsLocations API service call.
references:
- uid: com.azure.resourcemanager.network.implementation.NetworkManagementClientImpl
  name: NetworkManagementClientImpl
  nameWithType: NetworkManagementClientImpl
  fullName: com.azure.resourcemanager.network.implementation.NetworkManagementClientImpl
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.ExpressRoutePortsLocationsClientImpl*
  name: ExpressRoutePortsLocationsClientImpl
  nameWithType: ExpressRoutePortsLocationsClientImpl.ExpressRoutePortsLocationsClientImpl
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.ExpressRoutePortsLocationsClientImpl
  package: com.azure.resourcemanager.network.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
    name: ExpressRoutePortsLocationInner
    fullName: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.listAsync*
  name: listAsync
  nameWithType: ExpressRoutePortsLocationsClientImpl.listAsync
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.listAsync
  package: com.azure.resourcemanager.network.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
    name: ExpressRoutePortsLocationInner
    fullName: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.list*
  name: list
  nameWithType: ExpressRoutePortsLocationsClientImpl.list
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.list
  package: com.azure.resourcemanager.network.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
    name: ExpressRoutePortsLocationInner
    fullName: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: ExpressRoutePortsLocationsClientImpl.getWithResponseAsync
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getWithResponseAsync
  package: com.azure.resourcemanager.network.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
    name: ExpressRoutePortsLocationInner
    fullName: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getAsync*
  name: getAsync
  nameWithType: ExpressRoutePortsLocationsClientImpl.getAsync
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getAsync
  package: com.azure.resourcemanager.network.implementation
- uid: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
  name: ExpressRoutePortsLocationInner
  nameWithType: ExpressRoutePortsLocationInner
  fullName: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.get*
  name: get
  nameWithType: ExpressRoutePortsLocationsClientImpl.get
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.get
  package: com.azure.resourcemanager.network.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
    name: ExpressRoutePortsLocationInner
    fullName: com.azure.resourcemanager.network.fluent.models.ExpressRoutePortsLocationInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getWithResponse*
  name: getWithResponse
  nameWithType: ExpressRoutePortsLocationsClientImpl.getWithResponse
  fullName: com.azure.resourcemanager.network.implementation.ExpressRoutePortsLocationsClientImpl.getWithResponse
  package: com.azure.resourcemanager.network.implementation
- uid: com.azure.resourcemanager.network.fluent.ExpressRoutePortsLocationsClient
  name: ExpressRoutePortsLocationsClient
  nameWithType: ExpressRoutePortsLocationsClient
  fullName: com.azure.resourcemanager.network.fluent.ExpressRoutePortsLocationsClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
