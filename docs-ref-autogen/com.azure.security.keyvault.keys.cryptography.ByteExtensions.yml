### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions"
  id: "ByteExtensions"
  parent: "com.azure.security.keyvault.keys.cryptography"
  children:
  - "com.azure.security.keyvault.keys.cryptography.ByteExtensions.ByteExtensions()"
  - "com.azure.security.keyvault.keys.cryptography.ByteExtensions.or(byte[],byte[])"
  - "com.azure.security.keyvault.keys.cryptography.ByteExtensions.or(byte[],byte[],int)"
  - "com.azure.security.keyvault.keys.cryptography.ByteExtensions.sequenceEqualConstantTime(byte[],byte[])"
  - "com.azure.security.keyvault.keys.cryptography.ByteExtensions.xor(byte[],byte[])"
  - "com.azure.security.keyvault.keys.cryptography.ByteExtensions.xor(byte[],byte[],int)"
  - "com.azure.security.keyvault.keys.cryptography.ByteExtensions.zero(byte[])"
  langs:
  - "java"
  name: "ByteExtensions"
  nameWithType: "ByteExtensions"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions"
  type: "Class"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " class ByteExtensions"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.ByteExtensions()"
  id: "ByteExtensions()"
  parent: "com.azure.security.keyvault.keys.cryptography.ByteExtensions"
  langs:
  - "java"
  name: "ByteExtensions()"
  nameWithType: "ByteExtensions.ByteExtensions()"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.ByteExtensions()"
  overload: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.ByteExtensions*"
  type: "Constructor"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " ByteExtensions()"
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.or(byte[],byte[])"
  id: "or(byte[],byte[])"
  parent: "com.azure.security.keyvault.keys.cryptography.ByteExtensions"
  langs:
  - "java"
  name: "or(byte[] self, byte[] other)"
  nameWithType: "ByteExtensions.or(byte[] self, byte[] other)"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.or(byte[] self, byte[] other)"
  overload: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.or*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "static byte[] or(byte[] self, byte[] other)"
    parameters:
    - id: "self"
      type: "byte[]"
    - id: "other"
      type: "byte[]"
    return:
      type: "byte[]"
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.or(byte[],byte[],int)"
  id: "or(byte[],byte[],int)"
  parent: "com.azure.security.keyvault.keys.cryptography.ByteExtensions"
  langs:
  - "java"
  name: "or(byte[] self, byte[] other, int offset)"
  nameWithType: "ByteExtensions.or(byte[] self, byte[] other, int offset)"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.or(byte[] self, byte[] other, int offset)"
  overload: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.or*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "static byte[] or(byte[] self, byte[] other, int offset)"
    parameters:
    - id: "self"
      type: "byte[]"
    - id: "other"
      type: "byte[]"
    - id: "offset"
      type: "int"
    return:
      type: "byte[]"
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.sequenceEqualConstantTime(byte[],byte[])"
  id: "sequenceEqualConstantTime(byte[],byte[])"
  parent: "com.azure.security.keyvault.keys.cryptography.ByteExtensions"
  langs:
  - "java"
  name: "sequenceEqualConstantTime(byte[] self, byte[] other)"
  nameWithType: "ByteExtensions.sequenceEqualConstantTime(byte[] self, byte[] other)"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.sequenceEqualConstantTime(byte[] self, byte[] other)"
  overload: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.sequenceEqualConstantTime*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "static boolean sequenceEqualConstantTime(byte[] self, byte[] other)"
    parameters:
    - id: "self"
      type: "byte[]"
    - id: "other"
      type: "byte[]"
    return:
      type: "boolean"
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.xor(byte[],byte[])"
  id: "xor(byte[],byte[])"
  parent: "com.azure.security.keyvault.keys.cryptography.ByteExtensions"
  langs:
  - "java"
  name: "xor(byte[] self, byte[] other)"
  nameWithType: "ByteExtensions.xor(byte[] self, byte[] other)"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.xor(byte[] self, byte[] other)"
  overload: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.xor*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "static byte[] xor(byte[] self, byte[] other)"
    parameters:
    - id: "self"
      type: "byte[]"
    - id: "other"
      type: "byte[]"
    return:
      type: "byte[]"
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.xor(byte[],byte[],int)"
  id: "xor(byte[],byte[],int)"
  parent: "com.azure.security.keyvault.keys.cryptography.ByteExtensions"
  langs:
  - "java"
  name: "xor(byte[] self, byte[] other, int offset)"
  nameWithType: "ByteExtensions.xor(byte[] self, byte[] other, int offset)"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.xor(byte[] self, byte[] other, int offset)"
  overload: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.xor*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "static byte[] xor(byte[] self, byte[] other, int offset)"
    parameters:
    - id: "self"
      type: "byte[]"
    - id: "other"
      type: "byte[]"
    - id: "offset"
      type: "int"
    return:
      type: "byte[]"
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.zero(byte[])"
  id: "zero(byte[])"
  parent: "com.azure.security.keyvault.keys.cryptography.ByteExtensions"
  langs:
  - "java"
  name: "zero(byte[] self)"
  nameWithType: "ByteExtensions.zero(byte[] self)"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.zero(byte[] self)"
  overload: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.zero*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "static void zero(byte[] self)"
    parameters:
    - id: "self"
      type: "byte[]"
references:
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.ByteExtensions*"
  name: "ByteExtensions"
  nameWithType: "ByteExtensions.ByteExtensions"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.ByteExtensions"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.or*"
  name: "or"
  nameWithType: "ByteExtensions.or"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.or"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.xor*"
  name: "xor"
  nameWithType: "ByteExtensions.xor"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.xor"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.zero*"
  name: "zero"
  nameWithType: "ByteExtensions.zero"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.zero"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.sequenceEqualConstantTime*"
  name: "sequenceEqualConstantTime"
  nameWithType: "ByteExtensions.sequenceEqualConstantTime"
  fullName: "com.azure.security.keyvault.keys.cryptography.ByteExtensions.sequenceEqualConstantTime"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
