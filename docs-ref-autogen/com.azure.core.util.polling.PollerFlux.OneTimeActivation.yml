### YamlMime:ManagedReference
items:
- uid: "com.azure.core.util.polling.PollerFlux.OneTimeActivation"
  id: "OneTimeActivation"
  parent: "com.azure.core.util.polling"
  children:
  - "com.azure.core.util.polling.PollerFlux.OneTimeActivation.OneTimeActivation(com.azure.core.util.polling.PollingContext<V>,java.util.function.Function<com.azure.core.util.polling.PollingContext<V>,reactor.core.publisher.Mono<R>>,java.util.function.Function<R,com.azure.core.util.polling.PollResponse<V>>)"
  - "com.azure.core.util.polling.PollerFlux.OneTimeActivation.getMono()"
  langs:
  - "java"
  name: "PollerFlux<T,U>.OneTimeActivation<V,R>"
  nameWithType: "PollerFlux<T,U>.OneTimeActivation<V,R>"
  fullName: "com.azure.core.util.polling.PollerFlux<T,U>.OneTimeActivation<V,R>"
  type: "Class"
  package: "com.azure.core.util.polling"
  summary: "A utility to get One-Time-Executable-Mono that execute an activation function at most once. When subscribed to such a Mono it internally subscribes to a Mono that perform an activation function. The One-Time-Executable-Mono caches the result of activation function as a PollResponse in `rootContext`, this cached response will be used by any future subscriptions. Note: The standard cache() operator can't be used to achieve one time execution, because it caches error terminal signal and forward it to any future subscriptions. If there is an error while executing activation function then error should not be cached but it should be forward it to subscription that initiated the failed activation. For any future subscriptions such past error should not be delivered instead activation function should again invoked. Once a subscription result in successful execution of activation function then it will be cached in `rootContext` and will be used by any future subscriptions. The One-Time-Executable-Mono handles concurrent calls to activation. Only one of them will be able to execute the activation function and other subscriptions will keep resubscribing until it sees a activation happened or get a chance to call activation as the one previously entered the critical section got an error on activation."
  syntax:
    content: "private class PollerFlux<T,U>.OneTimeActivation<V,R>"
    typeParameters:
    - id: "V"
    - id: "R"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.util.polling.PollerFlux.OneTimeActivation.OneTimeActivation(com.azure.core.util.polling.PollingContext<V>,java.util.function.Function<com.azure.core.util.polling.PollingContext<V>,reactor.core.publisher.Mono<R>>,java.util.function.Function<R,com.azure.core.util.polling.PollResponse<V>>)"
  id: "OneTimeActivation(com.azure.core.util.polling.PollingContext<V>,java.util.function.Function<com.azure.core.util.polling.PollingContext<V>,reactor.core.publisher.Mono<R>>,java.util.function.Function<R,com.azure.core.util.polling.PollResponse<V>>)"
  parent: "com.azure.core.util.polling.PollerFlux.OneTimeActivation"
  langs:
  - "java"
  name: "OneTimeActivation(PollingContext<V> rootContext, Function<PollingContext<V>,Mono<R>> activationFunction, Function<R,PollResponse<V>> activationPollResponseMapper)"
  nameWithType: "PollerFlux<T,U>.OneTimeActivation<V,R>.OneTimeActivation(PollingContext<V> rootContext, Function<PollingContext<V>,Mono<R>> activationFunction, Function<R,PollResponse<V>> activationPollResponseMapper)"
  fullName: "com.azure.core.util.polling.PollerFlux<T,U>.OneTimeActivation<V,R>.OneTimeActivation(PollingContext<V> rootContext, Function<PollingContext<V>,Mono<R>> activationFunction, Function<R,PollResponse<V>> activationPollResponseMapper)"
  overload: "com.azure.core.util.polling.PollerFlux.OneTimeActivation.OneTimeActivation*"
  type: "Constructor"
  package: "com.azure.core.util.polling"
  summary: "Creates OneTimeActivation."
  syntax:
    content: " OneTimeActivation(PollingContext<V> rootContext, Function<PollingContext<V>,Mono<R>> activationFunction, Function<R,PollResponse<V>> activationPollResponseMapper)"
    parameters:
    - id: "rootContext"
      type: "com.azure.core.util.polling.PollingContext<V>"
      description: "the root context to store PollResponse holding activation result"
    - id: "activationFunction"
      type: "java.util.function.Function<com.azure.core.util.polling.PollingContext<V>,reactor.core.publisher.Mono<R>>"
      description: "function upon call return a Mono representing activation work"
    - id: "activationPollResponseMapper"
      type: "java.util.function.Function<R,com.azure.core.util.polling.PollResponse<V>>"
      description: "mapper to map result of activation work execution to PollResponse"
- uid: "com.azure.core.util.polling.PollerFlux.OneTimeActivation.getMono()"
  id: "getMono()"
  parent: "com.azure.core.util.polling.PollerFlux.OneTimeActivation"
  langs:
  - "java"
  name: "getMono()"
  nameWithType: "PollerFlux<T,U>.OneTimeActivation<V,R>.getMono()"
  fullName: "com.azure.core.util.polling.PollerFlux<T,U>.OneTimeActivation<V,R>.getMono()"
  overload: "com.azure.core.util.polling.PollerFlux.OneTimeActivation.getMono*"
  type: "Method"
  package: "com.azure.core.util.polling"
  summary: "Get the mono containing activation work which on subscription executed only once."
  syntax:
    content: " Mono<Boolean> getMono()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Boolean>"
      description: "the one time executable mono"
references:
- uid: "com.azure.core.util.polling.PollingContext<V>"
  spec.java:
  - uid: "com.azure.core.util.polling.PollingContext"
    name: "PollingContext"
    fullName: "com.azure.core.util.polling.PollingContext"
  - name: "<"
    fullName: "<"
  - uid: "V"
    name: "V"
    fullName: "V"
  - name: ">"
    fullName: ">"
- uid: "java.util.function.Function<com.azure.core.util.polling.PollingContext<V>,reactor.core.publisher.Mono<R>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.util.polling.PollingContext"
    name: "PollingContext"
    fullName: "com.azure.core.util.polling.PollingContext"
  - name: "<"
    fullName: "<"
  - uid: "V"
    name: "V"
    fullName: "V"
  - name: ">"
    fullName: ">"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "R"
    name: "R"
    fullName: "R"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "java.util.function.Function<R,com.azure.core.util.polling.PollResponse<V>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "R"
    name: "R"
    fullName: "R"
  - name: ","
    fullName: ","
  - uid: "com.azure.core.util.polling.PollResponse"
    name: "PollResponse"
    fullName: "com.azure.core.util.polling.PollResponse"
  - name: "<"
    fullName: "<"
  - uid: "V"
    name: "V"
    fullName: "V"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.util.polling.PollerFlux.OneTimeActivation.OneTimeActivation*"
  name: "OneTimeActivation"
  nameWithType: "PollerFlux<T,U>.OneTimeActivation<V,R>.OneTimeActivation"
  fullName: "com.azure.core.util.polling.PollerFlux<T,U>.OneTimeActivation<V,R>.OneTimeActivation"
  package: "com.azure.core.util.polling"
- uid: "reactor.core.publisher.Mono<java.lang.Boolean>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.util.polling.PollerFlux.OneTimeActivation.getMono*"
  name: "getMono"
  nameWithType: "PollerFlux<T,U>.OneTimeActivation<V,R>.getMono"
  fullName: "com.azure.core.util.polling.PollerFlux<T,U>.OneTimeActivation<V,R>.getMono"
  package: "com.azure.core.util.polling"
- uid: "V"
  name: "V"
  nameWithType: "V"
  fullName: "V"
- uid: "R"
  name: "R"
  nameWithType: "R"
  fullName: "R"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.util.polling.PollingContext"
  name: "PollingContext"
  nameWithType: "PollingContext"
  fullName: "com.azure.core.util.polling.PollingContext"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "V>,reactor.core.publisher.Mono"
  name: "V>,Mono"
  nameWithType: "V>,Mono"
  fullName: "V>,reactor.core.publisher.Mono"
- uid: "R,com.azure.core.util.polling.PollResponse"
  name: "R,PollResponse"
  nameWithType: "R,PollResponse"
  fullName: "R,com.azure.core.util.polling.PollResponse"
- uid: "java.lang.Boolean"
  name: "Boolean"
  nameWithType: "Boolean"
  fullName: "java.lang.Boolean"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
