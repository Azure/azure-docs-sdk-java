### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.models.NetworkPeering"
fullName: "com.azure.resourcemanager.network.models.NetworkPeering"
name: "NetworkPeering"
nameWithType: "NetworkPeering"
summary: "An client-side representation of a network peering."
syntax: "public interface NetworkPeering extends IndependentChild<NetworkManager>, HasInnerModel<VirtualNetworkPeeringInner>, Refreshable<NetworkPeering>, Updatable<NetworkPeering.Update>"
methods:
- "com.azure.resourcemanager.network.models.NetworkPeering.checkAccessBetweenNetworks()"
- "com.azure.resourcemanager.network.models.NetworkPeering.gatewayUse()"
- "com.azure.resourcemanager.network.models.NetworkPeering.getRemoteNetwork()"
- "com.azure.resourcemanager.network.models.NetworkPeering.getRemoteNetworkAsync()"
- "com.azure.resourcemanager.network.models.NetworkPeering.getRemotePeering()"
- "com.azure.resourcemanager.network.models.NetworkPeering.getRemotePeeringAsync()"
- "com.azure.resourcemanager.network.models.NetworkPeering.isSameSubscription()"
- "com.azure.resourcemanager.network.models.NetworkPeering.isTrafficForwardingFromRemoteNetworkAllowed()"
- "com.azure.resourcemanager.network.models.NetworkPeering.networkId()"
- "com.azure.resourcemanager.network.models.NetworkPeering.remoteAddressSpaces()"
- "com.azure.resourcemanager.network.models.NetworkPeering.remoteNetworkId()"
- "com.azure.resourcemanager.network.models.NetworkPeering.state()"
type: "interface"
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.IndependentChild?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.IndependentChild&text=IndependentChild\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.NetworkManager?alt=com.azure.resourcemanager.network.NetworkManager&text=NetworkManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel?alt=com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel&text=HasInnerModel\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner&text=VirtualNetworkPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Refreshable?alt=com.azure.resourcemanager.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.NetworkPeering?alt=com.azure.resourcemanager.network.models.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Updatable?alt=com.azure.resourcemanager.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.NetworkPeering.Update?alt=com.azure.resourcemanager.network.models.NetworkPeering.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
