### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.updateWithResponseAsync*"
fullName: "com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.updateWithResponseAsync"
name: "updateWithResponseAsync"
nameWithType: "PolicyAssignmentsClient.updateWithResponseAsync"
members:
- uid: "com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.PolicyAssignmentUpdate)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.updateWithResponseAsync(String scope, String policyAssignmentName, PolicyAssignmentUpdate parameters)"
  name: "updateWithResponseAsync(String scope, String policyAssignmentName, PolicyAssignmentUpdate parameters)"
  nameWithType: "PolicyAssignmentsClient.updateWithResponseAsync(String scope, String policyAssignmentName, PolicyAssignmentUpdate parameters)"
  summary: "This operation updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group."
  parameters:
  - description: "The scope of the policy assignment. Valid scopes are: management group (format:\n     '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the policy assignment."
    name: "policyAssignmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters for policy assignment patch request."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.PolicyAssignmentUpdate?alt=com.azure.resourcemanager.resources.models.PolicyAssignmentUpdate&text=PolicyAssignmentUpdate\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<PolicyAssignmentInner>> updateWithResponseAsync(String scope, String policyAssignmentName, PolicyAssignmentUpdate parameters)"
  returns:
    description: "the policy assignment along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.13.0
