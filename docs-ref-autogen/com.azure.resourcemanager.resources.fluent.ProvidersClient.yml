### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient"
fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient"
name: "ProvidersClient"
nameWithType: "ProvidersClient"
summary: "An instance of this class provides access to all the operations defined in Providers<wbr>Client."
syntax: "public interface ProvidersClient"
methods:
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.get(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.get(String resourceProviderNamespace)"
  name: "get(String resourceProviderNamespace)"
  nameWithType: "ProvidersClient.get(String resourceProviderNamespace)"
  summary: "Gets the specified resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract ProviderInner get(String resourceProviderNamespace)"
  desc: "Gets the specified resource provider."
  returns:
    description: "the specified resource provider."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(String resourceProviderNamespace)"
  name: "getAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersClient.getAsync(String resourceProviderNamespace)"
  summary: "Gets the specified resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<ProviderInner> getAsync(String resourceProviderNamespace)"
  desc: "Gets the specified resource provider."
  returns:
    description: "the specified resource provider on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(String resourceProviderNamespace, String expand)"
  name: "getAsync(String resourceProviderNamespace, String expand)"
  nameWithType: "ProvidersClient.getAsync(String resourceProviderNamespace, String expand)"
  summary: "Gets the specified resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The $expand query parameter. For example, to include property aliases in response, use\n     $expand=resourceTypes/aliases."
    name: "expand"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<ProviderInner> getAsync(String resourceProviderNamespace, String expand)"
  desc: "Gets the specified resource provider."
  returns:
    description: "the specified resource provider on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope(String resourceProviderNamespace)"
  name: "getAtTenantScope(String resourceProviderNamespace)"
  nameWithType: "ProvidersClient.getAtTenantScope(String resourceProviderNamespace)"
  summary: "Gets the specified resource provider at the tenant level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract ProviderInner getAtTenantScope(String resourceProviderNamespace)"
  desc: "Gets the specified resource provider at the tenant level."
  returns:
    description: "the specified resource provider at the tenant level."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(String resourceProviderNamespace)"
  name: "getAtTenantScopeAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersClient.getAtTenantScopeAsync(String resourceProviderNamespace)"
  summary: "Gets the specified resource provider at the tenant level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<ProviderInner> getAtTenantScopeAsync(String resourceProviderNamespace)"
  desc: "Gets the specified resource provider at the tenant level."
  returns:
    description: "the specified resource provider at the tenant level on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(String resourceProviderNamespace, String expand)"
  name: "getAtTenantScopeAsync(String resourceProviderNamespace, String expand)"
  nameWithType: "ProvidersClient.getAtTenantScopeAsync(String resourceProviderNamespace, String expand)"
  summary: "Gets the specified resource provider at the tenant level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The $expand query parameter. For example, to include property aliases in response, use\n     $expand=resourceTypes/aliases."
    name: "expand"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<ProviderInner> getAtTenantScopeAsync(String resourceProviderNamespace, String expand)"
  desc: "Gets the specified resource provider at the tenant level."
  returns:
    description: "the specified resource provider at the tenant level on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponse(String resourceProviderNamespace, String expand, Context context)"
  name: "getAtTenantScopeWithResponse(String resourceProviderNamespace, String expand, Context context)"
  nameWithType: "ProvidersClient.getAtTenantScopeWithResponse(String resourceProviderNamespace, String expand, Context context)"
  summary: "Gets the specified resource provider at the tenant level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The $expand query parameter. For example, to include property aliases in response, use\n     $expand=resourceTypes/aliases."
    name: "expand"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ProviderInner> getAtTenantScopeWithResponse(String resourceProviderNamespace, String expand, Context context)"
  desc: "Gets the specified resource provider at the tenant level."
  returns:
    description: "the specified resource provider at the tenant level along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponseAsync(String resourceProviderNamespace, String expand)"
  name: "getAtTenantScopeWithResponseAsync(String resourceProviderNamespace, String expand)"
  nameWithType: "ProvidersClient.getAtTenantScopeWithResponseAsync(String resourceProviderNamespace, String expand)"
  summary: "Gets the specified resource provider at the tenant level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The $expand query parameter. For example, to include property aliases in response, use\n     $expand=resourceTypes/aliases."
    name: "expand"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<ProviderInner>> getAtTenantScopeWithResponseAsync(String resourceProviderNamespace, String expand)"
  desc: "Gets the specified resource provider at the tenant level."
  returns:
    description: "the specified resource provider at the tenant level along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion\n     of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponse(String resourceProviderNamespace, String expand, Context context)"
  name: "getWithResponse(String resourceProviderNamespace, String expand, Context context)"
  nameWithType: "ProvidersClient.getWithResponse(String resourceProviderNamespace, String expand, Context context)"
  summary: "Gets the specified resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The $expand query parameter. For example, to include property aliases in response, use\n     $expand=resourceTypes/aliases."
    name: "expand"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ProviderInner> getWithResponse(String resourceProviderNamespace, String expand, Context context)"
  desc: "Gets the specified resource provider."
  returns:
    description: "the specified resource provider along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponseAsync(String resourceProviderNamespace, String expand)"
  name: "getWithResponseAsync(String resourceProviderNamespace, String expand)"
  nameWithType: "ProvidersClient.getWithResponseAsync(String resourceProviderNamespace, String expand)"
  summary: "Gets the specified resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The $expand query parameter. For example, to include property aliases in response, use\n     $expand=resourceTypes/aliases."
    name: "expand"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<ProviderInner>> getWithResponseAsync(String resourceProviderNamespace, String expand)"
  desc: "Gets the specified resource provider."
  returns:
    description: "the specified resource provider along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.list()"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.list()"
  name: "list()"
  nameWithType: "ProvidersClient.list()"
  summary: "Gets all resource providers for a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<ProviderInner> list()"
  desc: "Gets all resource providers for a subscription."
  returns:
    description: "all resource providers for a subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.list(java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.list(Integer top, String expand, Context context)"
  name: "list(Integer top, String expand, Context context)"
  nameWithType: "ProvidersClient.list(Integer top, String expand, Context context)"
  summary: "Gets all resource providers for a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The number of results to return. If null is passed returns all deployments."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The properties to include in the results. For example, use &amp;$expand=metadata in the query\n     string to retrieve resource provider metadata. To include property aliases in response, use\n     $expand=resourceTypes/aliases."
    name: "expand"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ProviderInner> list(Integer top, String expand, Context context)"
  desc: "Gets all resource providers for a subscription."
  returns:
    description: "all resource providers for a subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync()"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync()"
  name: "listAsync()"
  nameWithType: "ProvidersClient.listAsync()"
  summary: "Gets all resource providers for a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<ProviderInner> listAsync()"
  desc: "Gets all resource providers for a subscription."
  returns:
    description: "all resource providers for a subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync(java.lang.Integer,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync(Integer top, String expand)"
  name: "listAsync(Integer top, String expand)"
  nameWithType: "ProvidersClient.listAsync(Integer top, String expand)"
  summary: "Gets all resource providers for a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The number of results to return. If null is passed returns all deployments."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The properties to include in the results. For example, use &amp;$expand=metadata in the query\n     string to retrieve resource provider metadata. To include property aliases in response, use\n     $expand=resourceTypes/aliases."
    name: "expand"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<ProviderInner> listAsync(Integer top, String expand)"
  desc: "Gets all resource providers for a subscription."
  returns:
    description: "all resource providers for a subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope()"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope()"
  name: "listAtTenantScope()"
  nameWithType: "ProvidersClient.listAtTenantScope()"
  summary: "Gets all resource providers for the tenant."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<ProviderInner> listAtTenantScope()"
  desc: "Gets all resource providers for the tenant."
  returns:
    description: "all resource providers for the tenant as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope(java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope(Integer top, String expand, Context context)"
  name: "listAtTenantScope(Integer top, String expand, Context context)"
  nameWithType: "ProvidersClient.listAtTenantScope(Integer top, String expand, Context context)"
  summary: "Gets all resource providers for the tenant."
  modifiers:
  - "abstract"
  parameters:
  - description: "The number of results to return. If null is passed returns all providers."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The properties to include in the results. For example, use &amp;$expand=metadata in the query\n     string to retrieve resource provider metadata. To include property aliases in response, use\n     $expand=resourceTypes/aliases."
    name: "expand"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ProviderInner> listAtTenantScope(Integer top, String expand, Context context)"
  desc: "Gets all resource providers for the tenant."
  returns:
    description: "all resource providers for the tenant as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync()"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync()"
  name: "listAtTenantScopeAsync()"
  nameWithType: "ProvidersClient.listAtTenantScopeAsync()"
  summary: "Gets all resource providers for the tenant."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<ProviderInner> listAtTenantScopeAsync()"
  desc: "Gets all resource providers for the tenant."
  returns:
    description: "all resource providers for the tenant as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync(java.lang.Integer,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync(Integer top, String expand)"
  name: "listAtTenantScopeAsync(Integer top, String expand)"
  nameWithType: "ProvidersClient.listAtTenantScopeAsync(Integer top, String expand)"
  summary: "Gets all resource providers for the tenant."
  modifiers:
  - "abstract"
  parameters:
  - description: "The number of results to return. If null is passed returns all providers."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The properties to include in the results. For example, use &amp;$expand=metadata in the query\n     string to retrieve resource provider metadata. To include property aliases in response, use\n     $expand=resourceTypes/aliases."
    name: "expand"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<ProviderInner> listAtTenantScopeAsync(Integer top, String expand)"
  desc: "Gets all resource providers for the tenant."
  returns:
    description: "all resource providers for the tenant as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.register(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.register(String resourceProviderNamespace)"
  name: "register(String resourceProviderNamespace)"
  nameWithType: "ProvidersClient.register(String resourceProviderNamespace)"
  summary: "Registers a subscription with a resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider to register."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract ProviderInner register(String resourceProviderNamespace)"
  desc: "Registers a subscription with a resource provider."
  returns:
    description: "resource provider information."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAsync(String resourceProviderNamespace)"
  name: "registerAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersClient.registerAsync(String resourceProviderNamespace)"
  summary: "Registers a subscription with a resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider to register."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<ProviderInner> registerAsync(String resourceProviderNamespace)"
  desc: "Registers a subscription with a resource provider."
  returns:
    description: "resource provider information on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAtManagementGroupScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAtManagementGroupScope(String resourceProviderNamespace, String groupId)"
  name: "registerAtManagementGroupScope(String resourceProviderNamespace, String groupId)"
  nameWithType: "ProvidersClient.registerAtManagementGroupScope(String resourceProviderNamespace, String groupId)"
  summary: "Registers a management group with a resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider to register."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void registerAtManagementGroupScope(String resourceProviderNamespace, String groupId)"
  desc: "Registers a management group with a resource provider."
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAtManagementGroupScopeAsync(String resourceProviderNamespace, String groupId)"
  name: "registerAtManagementGroupScopeAsync(String resourceProviderNamespace, String groupId)"
  nameWithType: "ProvidersClient.registerAtManagementGroupScopeAsync(String resourceProviderNamespace, String groupId)"
  summary: "Registers a management group with a resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider to register."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> registerAtManagementGroupScopeAsync(String resourceProviderNamespace, String groupId)"
  desc: "Registers a management group with a resource provider."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAtManagementGroupScopeWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAtManagementGroupScopeWithResponse(String resourceProviderNamespace, String groupId, Context context)"
  name: "registerAtManagementGroupScopeWithResponse(String resourceProviderNamespace, String groupId, Context context)"
  nameWithType: "ProvidersClient.registerAtManagementGroupScopeWithResponse(String resourceProviderNamespace, String groupId, Context context)"
  summary: "Registers a management group with a resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider to register."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> registerAtManagementGroupScopeWithResponse(String resourceProviderNamespace, String groupId, Context context)"
  desc: "Registers a management group with a resource provider."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAtManagementGroupScopeWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAtManagementGroupScopeWithResponseAsync(String resourceProviderNamespace, String groupId)"
  name: "registerAtManagementGroupScopeWithResponseAsync(String resourceProviderNamespace, String groupId)"
  nameWithType: "ProvidersClient.registerAtManagementGroupScopeWithResponseAsync(String resourceProviderNamespace, String groupId)"
  summary: "Registers a management group with a resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider to register."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Void>> registerAtManagementGroupScopeWithResponseAsync(String resourceProviderNamespace, String groupId)"
  desc: "Registers a management group with a resource provider."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponse(String resourceProviderNamespace, Context context)"
  name: "registerWithResponse(String resourceProviderNamespace, Context context)"
  nameWithType: "ProvidersClient.registerWithResponse(String resourceProviderNamespace, Context context)"
  summary: "Registers a subscription with a resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider to register."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ProviderInner> registerWithResponse(String resourceProviderNamespace, Context context)"
  desc: "Registers a subscription with a resource provider."
  returns:
    description: "resource provider information along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponseAsync(String resourceProviderNamespace)"
  name: "registerWithResponseAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersClient.registerWithResponseAsync(String resourceProviderNamespace)"
  summary: "Registers a subscription with a resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider to register."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<ProviderInner>> registerWithResponseAsync(String resourceProviderNamespace)"
  desc: "Registers a subscription with a resource provider."
  returns:
    description: "resource provider information along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.unregister(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.unregister(String resourceProviderNamespace)"
  name: "unregister(String resourceProviderNamespace)"
  nameWithType: "ProvidersClient.unregister(String resourceProviderNamespace)"
  summary: "Unregisters a subscription from a resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider to unregister."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract ProviderInner unregister(String resourceProviderNamespace)"
  desc: "Unregisters a subscription from a resource provider."
  returns:
    description: "resource provider information."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterAsync(String resourceProviderNamespace)"
  name: "unregisterAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersClient.unregisterAsync(String resourceProviderNamespace)"
  summary: "Unregisters a subscription from a resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider to unregister."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<ProviderInner> unregisterAsync(String resourceProviderNamespace)"
  desc: "Unregisters a subscription from a resource provider."
  returns:
    description: "resource provider information on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponse(String resourceProviderNamespace, Context context)"
  name: "unregisterWithResponse(String resourceProviderNamespace, Context context)"
  nameWithType: "ProvidersClient.unregisterWithResponse(String resourceProviderNamespace, Context context)"
  summary: "Unregisters a subscription from a resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider to unregister."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ProviderInner> unregisterWithResponse(String resourceProviderNamespace, Context context)"
  desc: "Unregisters a subscription from a resource provider."
  returns:
    description: "resource provider information along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponseAsync(String resourceProviderNamespace)"
  name: "unregisterWithResponseAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersClient.unregisterWithResponseAsync(String resourceProviderNamespace)"
  summary: "Unregisters a subscription from a resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The namespace of the resource provider to unregister."
    name: "resourceProviderNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<ProviderInner>> unregisterWithResponseAsync(String resourceProviderNamespace)"
  desc: "Unregisters a subscription from a resource provider."
  returns:
    description: "resource provider information along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.models.ProviderInner&text=ProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ProvidersClient."
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
