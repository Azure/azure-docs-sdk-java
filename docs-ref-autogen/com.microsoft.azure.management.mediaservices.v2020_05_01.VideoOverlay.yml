### YamlMime:JavaType
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay"
name: "VideoOverlay"
nameWithType: "VideoOverlay"
summary: "Describes the properties of a video overlay."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay&text=Overlay\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.audioGainLevel()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.audioGainLevel&text=audioGainLevel\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.end()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.end&text=end\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.fadeInDuration()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.fadeInDuration&text=fadeInDuration\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.fadeOutDuration()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.fadeOutDuration&text=fadeOutDuration\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.inputLabel()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.inputLabel&text=inputLabel\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.start()?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.start&text=start\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.withAudioGainLevel(java.lang.Double)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.withAudioGainLevel&text=withAudioGainLevel\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.withEnd(org.joda.time.Period)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.withEnd&text=withEnd\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.withFadeInDuration(org.joda.time.Period)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.withFadeInDuration&text=withFadeInDuration\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.withFadeOutDuration(org.joda.time.Period)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.withFadeOutDuration&text=withFadeOutDuration\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.withInputLabel(java.lang.String)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.withInputLabel&text=withInputLabel\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.withStart(org.joda.time.Period)?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay.withStart&text=withStart\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **VideoOverlay**</br> extends <xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Overlay&text=Overlay\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.VideoOverlay()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.VideoOverlay()"
  name: "VideoOverlay()"
  nameWithType: "VideoOverlay.VideoOverlay()"
  syntax: "public VideoOverlay()"
methods:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.cropRectangle()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.cropRectangle()"
  name: "cropRectangle()"
  nameWithType: "VideoOverlay.cropRectangle()"
  summary: "Get an optional rectangular window used to crop the overlay image or video."
  syntax: "public Rectangle cropRectangle()"
  desc: "Get an optional rectangular window used to crop the overlay image or video."
  returns:
    description: "the cropRectangle value"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Rectangle?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Rectangle&text=Rectangle\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.opacity()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.opacity()"
  name: "opacity()"
  nameWithType: "VideoOverlay.opacity()"
  summary: "Get the opacity of the overlay."
  syntax: "public Double opacity()"
  desc: "Get the opacity of the overlay. This is a value in the range \\[0 - 1.0\\]. Default is 1.0 which mean the overlay is opaque."
  returns:
    description: "the opacity value"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.position()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.position()"
  name: "position()"
  nameWithType: "VideoOverlay.position()"
  summary: "Get the location in the input video where the overlay is applied."
  syntax: "public Rectangle position()"
  desc: "Get the location in the input video where the overlay is applied."
  returns:
    description: "the position value"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Rectangle?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Rectangle&text=Rectangle\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.withCropRectangle(com.microsoft.azure.management.mediaservices.v2020_05_01.Rectangle)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.withCropRectangle(Rectangle cropRectangle)"
  name: "withCropRectangle(Rectangle cropRectangle)"
  nameWithType: "VideoOverlay.withCropRectangle(Rectangle cropRectangle)"
  summary: "Set an optional rectangular window used to crop the overlay image or video."
  parameters:
  - description: "the cropRectangle value to set"
    name: "cropRectangle"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Rectangle?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Rectangle&text=Rectangle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoOverlay withCropRectangle(Rectangle cropRectangle)"
  desc: "Set an optional rectangular window used to crop the overlay image or video."
  returns:
    description: "the VideoOverlay object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay&text=VideoOverlay\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.withOpacity(java.lang.Double)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.withOpacity(Double opacity)"
  name: "withOpacity(Double opacity)"
  nameWithType: "VideoOverlay.withOpacity(Double opacity)"
  summary: "Set the opacity of the overlay."
  parameters:
  - description: "the opacity value to set"
    name: "opacity"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoOverlay withOpacity(Double opacity)"
  desc: "Set the opacity of the overlay. This is a value in the range \\[0 - 1.0\\]. Default is 1.0 which mean the overlay is opaque."
  returns:
    description: "the VideoOverlay object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay&text=VideoOverlay\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.withPosition(com.microsoft.azure.management.mediaservices.v2020_05_01.Rectangle)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay.withPosition(Rectangle position)"
  name: "withPosition(Rectangle position)"
  nameWithType: "VideoOverlay.withPosition(Rectangle position)"
  summary: "Set the location in the input video where the overlay is applied."
  parameters:
  - description: "the position value to set"
    name: "position"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.Rectangle?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.Rectangle&text=Rectangle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoOverlay withPosition(Rectangle position)"
  desc: "Set the location in the input video where the overlay is applied."
  returns:
    description: "the VideoOverlay object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.VideoOverlay&text=VideoOverlay\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes the properties of a video overlay."
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
