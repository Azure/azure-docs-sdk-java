### YamlMime:JavaMember
nameWithType: TrustedIdProviders.updateAsync
type: method
members:
- fullName: com.microsoft.azure.management.datalake.store.TrustedIdProviders.updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName)
  name: updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName)
  nameWithType: TrustedIdProviders.updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Store account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Store account to which to update the trusted identity provider. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the trusted identity provider. This is used for differentiation of providers in the account. </p>
    name: trustedIdProviderName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the TrustedIdProvider object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.datalake.store.models.TrustedIdProvider?alt=com.microsoft.azure.management.datalake.store.models.TrustedIdProvider&text=TrustedIdProvider" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the specified trusted identity provider.</p>

    <p></p>
  syntax: public Observable<TrustedIdProvider> updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName)
  uid: com.microsoft.azure.management.datalake.store.TrustedIdProviders.updateAsync(String,String,String)
- fullName: com.microsoft.azure.management.datalake.store.TrustedIdProviders.updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName, final ServiceCallback<TrustedIdProvider> serviceCallback)
  name: updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName, final ServiceCallback<TrustedIdProvider> serviceCallback)
  nameWithType: TrustedIdProviders.updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName, final ServiceCallback<TrustedIdProvider> serviceCallback)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Store account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Store account to which to update the trusted identity provider. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the trusted identity provider. This is used for differentiation of providers in the account. </p>
    name: trustedIdProviderName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.datalake.store.models.TrustedIdProvider?alt=com.microsoft.azure.management.datalake.store.models.TrustedIdProvider&text=TrustedIdProvider" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.datalake.store.models.TrustedIdProvider?alt=com.microsoft.azure.management.datalake.store.models.TrustedIdProvider&text=TrustedIdProvider" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the specified trusted identity provider.</p>

    <p></p>
  syntax: public ServiceFuture<TrustedIdProvider> updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName, final ServiceCallback<TrustedIdProvider> serviceCallback)
  uid: com.microsoft.azure.management.datalake.store.TrustedIdProviders.updateAsync(String,String,String,final ServiceCallback<TrustedIdProvider>)
- fullName: com.microsoft.azure.management.datalake.store.TrustedIdProviders.updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName, UpdateTrustedIdProviderParameters parameters)
  name: updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName, UpdateTrustedIdProviderParameters parameters)
  nameWithType: TrustedIdProviders.updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName, UpdateTrustedIdProviderParameters parameters)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Store account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Store account to which to update the trusted identity provider. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the trusted identity provider. This is used for differentiation of providers in the account. </p>
    name: trustedIdProviderName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to update the trusted identity provider. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.datalake.store.models.UpdateTrustedIdProviderParameters?alt=com.microsoft.azure.management.datalake.store.models.UpdateTrustedIdProviderParameters&text=UpdateTrustedIdProviderParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the TrustedIdProvider object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.datalake.store.models.TrustedIdProvider?alt=com.microsoft.azure.management.datalake.store.models.TrustedIdProvider&text=TrustedIdProvider" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the specified trusted identity provider.</p>

    <p></p>
  syntax: public Observable<TrustedIdProvider> updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName, UpdateTrustedIdProviderParameters parameters)
  uid: com.microsoft.azure.management.datalake.store.TrustedIdProviders.updateAsync(String,String,String,UpdateTrustedIdProviderParameters)
- fullName: com.microsoft.azure.management.datalake.store.TrustedIdProviders.updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName, UpdateTrustedIdProviderParameters parameters, final ServiceCallback<TrustedIdProvider> serviceCallback)
  name: updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName, UpdateTrustedIdProviderParameters parameters, final ServiceCallback<TrustedIdProvider> serviceCallback)
  nameWithType: TrustedIdProviders.updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName, UpdateTrustedIdProviderParameters parameters, final ServiceCallback<TrustedIdProvider> serviceCallback)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Store account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Store account to which to update the trusted identity provider. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the trusted identity provider. This is used for differentiation of providers in the account. </p>
    name: trustedIdProviderName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to update the trusted identity provider. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.datalake.store.models.UpdateTrustedIdProviderParameters?alt=com.microsoft.azure.management.datalake.store.models.UpdateTrustedIdProviderParameters&text=UpdateTrustedIdProviderParameters" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.datalake.store.models.TrustedIdProvider?alt=com.microsoft.azure.management.datalake.store.models.TrustedIdProvider&text=TrustedIdProvider" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.datalake.store.models.TrustedIdProvider?alt=com.microsoft.azure.management.datalake.store.models.TrustedIdProvider&text=TrustedIdProvider" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the specified trusted identity provider.</p>

    <p></p>
  syntax: public ServiceFuture<TrustedIdProvider> updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName, UpdateTrustedIdProviderParameters parameters, final ServiceCallback<TrustedIdProvider> serviceCallback)
  uid: com.microsoft.azure.management.datalake.store.TrustedIdProviders.updateAsync(String,String,String,UpdateTrustedIdProviderParameters,final ServiceCallback<TrustedIdProvider>)
uid: com.microsoft.azure.management.datalake.store.TrustedIdProviders.updateAsync*
fullName: com.microsoft.azure.management.datalake.store.TrustedIdProviders.updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName)
name: updateAsync(String resourceGroupName, String accountName, String trustedIdProviderName)
package: com.microsoft.azure.management.datalake.store
metadata: {}
