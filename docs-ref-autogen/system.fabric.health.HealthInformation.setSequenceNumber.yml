### YamlMime:JavaMember
nameWithType: HealthInformation.setSequenceNumber
type: method
members:
- fullName: system.fabric.health.HealthInformation.setSequenceNumber(long sequenceNumber)
  name: setSequenceNumber(long sequenceNumber)
  nameWithType: HealthInformation.setSequenceNumber(long sequenceNumber)
  parameters:
  - description: <p>A long representing the report sequence number. </p>
    name: sequenceNumber
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if sequenceNumber is less or equals than unknownSequenceNumber </p>
  summary: >-
    <p>Sets the sequence number associated with the report. Must be greater than <xref uid="" data-throw-if-not-resolved="false">system.fabric.health.HealthInformation#unknownSequenceNumber</xref>.</p>

    <p>

      <b>Remarks:</b>The report sequence number is used by health store to detect stale reports. Most of the times, the reporter doesn't need to specify the sequence number. The default value AutoSequenceNumber can be used instead. When a health client receives a report with Auto sequence number, it replaces the auto sequence number with a valid sequence number. The sequence number is guaranteed to increase in the same process, even if the client machine time goes backwards. </p>
  syntax: public void setSequenceNumber(long sequenceNumber)
  uid: system.fabric.health.HealthInformation.setSequenceNumber(long)
uid: system.fabric.health.HealthInformation.setSequenceNumber*
fullName: system.fabric.health.HealthInformation.setSequenceNumber(long sequenceNumber)
name: setSequenceNumber(long sequenceNumber)
package: system.fabric.health
metadata: {}
