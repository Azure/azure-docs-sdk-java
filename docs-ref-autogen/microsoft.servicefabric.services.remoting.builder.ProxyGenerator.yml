### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyGenerator.ProxyGenerator(Class<?> proxyInterfaceType)
  name: ProxyGenerator(Class<?> proxyInterfaceType)
  nameWithType: ProxyGenerator.ProxyGenerator(Class<?> proxyInterfaceType)
  parameters:
  - name: proxyInterfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  syntax: protected ProxyGenerator(Class<?> proxyInterfaceType)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyGenerator.ProxyGenerator(Class<?>)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyGenerator.getProxyInterfaceType()
  name: getProxyInterfaceType()
  nameWithType: ProxyGenerator.getProxyInterfaceType()
  returns:
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  syntax: public Class<?> getProxyInterfaceType()
  uid: microsoft.servicefabric.services.remoting.builder.ProxyGenerator.getProxyInterfaceType()
nameWithType: ProxyGenerator
syntax: public class ProxyGenerator
type: class
uid: microsoft.servicefabric.services.remoting.builder.ProxyGenerator
fullName: microsoft.servicefabric.services.remoting.builder.ProxyGenerator
name: ProxyGenerator
package: microsoft.servicefabric.services.remoting.builder
summary: <p>Abstract class from which Actor ans Services Proxy generator base classes derive. For internal use only. </p>
metadata: {}
