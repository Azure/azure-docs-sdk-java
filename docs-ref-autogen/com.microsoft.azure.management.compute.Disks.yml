### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(ServiceCallback<CreatedResources<ResourceT>>,Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(final ServiceCallback<CreatedResources<ResourceT>>,List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating.define(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteById(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIds(Collection<String>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIds(String...)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIdsAsync(Collection<String>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIdsAsync(String...)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getById(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.list()
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.listAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroup(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroupAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
methods:
- fullName: com.microsoft.azure.management.compute.Disks.grantAccess(String resourceGroupName, String diskName, AccessLevel accessLevel, int accessDuration)
  name: grantAccess(String resourceGroupName, String diskName, AccessLevel accessLevel, int accessDuration)
  nameWithType: Disks.grantAccess(String resourceGroupName, String diskName, AccessLevel accessLevel, int accessDuration)
  parameters:
  - description: <p>a resource group name </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>a disk name </p>
    name: diskName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>access level </p>
    name: accessLevel
    type: <xref href="com.microsoft.azure.management.compute.AccessLevel?alt=com.microsoft.azure.management.compute.AccessLevel&text=AccessLevel" data-throw-if-not-resolved="False"/>
  - description: <p>access duration </p>
    name: accessDuration
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the read-only SAS URI to the disk </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Grants access to a disk.</p>

    <p></p>
  syntax: public String grantAccess(String resourceGroupName, String diskName, AccessLevel accessLevel, int accessDuration)
  uid: com.microsoft.azure.management.compute.Disks.grantAccess(String,String,AccessLevel,int)
- fullName: com.microsoft.azure.management.compute.Disks.grantAccessAsync(String resourceGroupName, String diskName, AccessLevel accessLevel, int accessDuration)
  name: grantAccessAsync(String resourceGroupName, String diskName, AccessLevel accessLevel, int accessDuration)
  nameWithType: Disks.grantAccessAsync(String resourceGroupName, String diskName, AccessLevel accessLevel, int accessDuration)
  parameters:
  - description: <p>the resource group name </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the disk name </p>
    name: diskName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>access level </p>
    name: accessLevel
    type: <xref href="com.microsoft.azure.management.compute.AccessLevel?alt=com.microsoft.azure.management.compute.AccessLevel&text=AccessLevel" data-throw-if-not-resolved="False"/>
  - description: <p>access duration </p>
    name: accessDuration
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call returning a read-only SAS URI to the disk </p>
    type: <xref href="Observable%3CString%3E?alt=Observable%3CString%3E&text=Observable%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Grants access to the disk asynchronously.</p>

    <p></p>
  syntax: public Observable<String> grantAccessAsync(String resourceGroupName, String diskName, AccessLevel accessLevel, int accessDuration)
  uid: com.microsoft.azure.management.compute.Disks.grantAccessAsync(String,String,AccessLevel,int)
- fullName: com.microsoft.azure.management.compute.Disks.grantAccessAsync(String resourceGroupName, String diskName, AccessLevel accessLevel, int accessDuration, ServiceCallback<String> callback)
  name: grantAccessAsync(String resourceGroupName, String diskName, AccessLevel accessLevel, int accessDuration, ServiceCallback<String> callback)
  nameWithType: Disks.grantAccessAsync(String resourceGroupName, String diskName, AccessLevel accessLevel, int accessDuration, ServiceCallback<String> callback)
  parameters:
  - description: <p>the resource group name </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the disk name </p>
    name: diskName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>access level </p>
    name: accessLevel
    type: <xref href="com.microsoft.azure.management.compute.AccessLevel?alt=com.microsoft.azure.management.compute.AccessLevel&text=AccessLevel" data-throw-if-not-resolved="False"/>
  - description: <p>access duration </p>
    name: accessDuration
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure, on success it will pass read-only SAS URI to the disk in callback </p>
    name: callback
    type: <xref href="ServiceCallback%3CString%3E?alt=ServiceCallback%3CString%3E&text=ServiceCallback%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CString%3E?alt=ServiceFuture%3CString%3E&text=ServiceFuture%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Grants access to the disk asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<String> grantAccessAsync(String resourceGroupName, String diskName, AccessLevel accessLevel, int accessDuration, ServiceCallback<String> callback)
  uid: com.microsoft.azure.management.compute.Disks.grantAccessAsync(String,String,AccessLevel,int,ServiceCallback<String>)
- fullName: com.microsoft.azure.management.compute.Disks.revokeAccess(String resourceGroupName, String diskName)
  name: revokeAccess(String resourceGroupName, String diskName)
  nameWithType: Disks.revokeAccess(String resourceGroupName, String diskName)
  parameters:
  - description: <p>the resource group name </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the disk name </p>
    name: diskName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Revoke access granted to a disk.</p>

    <p></p>
  syntax: public void revokeAccess(String resourceGroupName, String diskName)
  uid: com.microsoft.azure.management.compute.Disks.revokeAccess(String,String)
- fullName: com.microsoft.azure.management.compute.Disks.revokeAccessAsync(String resourceGroupName, String diskName)
  name: revokeAccessAsync(String resourceGroupName, String diskName)
  nameWithType: Disks.revokeAccessAsync(String resourceGroupName, String diskName)
  parameters:
  - description: <p>the resource group name </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the disk name </p>
    name: diskName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Revoke access granted to the snapshot asynchronously.</p>

    <p></p>
  syntax: public Completable revokeAccessAsync(String resourceGroupName, String diskName)
  uid: com.microsoft.azure.management.compute.Disks.revokeAccessAsync(String,String)
- fullName: com.microsoft.azure.management.compute.Disks.revokeAccessAsync(String resourceGroupName, String diskName, ServiceCallback<Void> callback)
  name: revokeAccessAsync(String resourceGroupName, String diskName, ServiceCallback<Void> callback)
  nameWithType: Disks.revokeAccessAsync(String resourceGroupName, String diskName, ServiceCallback<Void> callback)
  parameters:
  - description: <p>the resource group name </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the disk name </p>
    name: diskName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Revoke access granted to the snapshot asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> revokeAccessAsync(String resourceGroupName, String diskName, ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.Disks.revokeAccessAsync(String,String,ServiceCallback<Void>)
nameWithType: Disks
syntax: public interface Disks extends SupportsCreating<Disk.DefinitionStages.Blank>,SupportsListing<Disk>,SupportsListingByResourceGroup<Disk>,SupportsGettingByResourceGroup<Disk>,SupportsGettingById<Disk>,SupportsDeletingById,SupportsDeletingByResourceGroup,SupportsBatchCreation<Disk>,SupportsBatchDeletion,HasManager<ComputeManager>,HasInner<DisksInner>
type: interface
uid: com.microsoft.azure.management.compute.Disks
fullName: com.microsoft.azure.management.compute.Disks
name: Disks
package: com.microsoft.azure.management.compute
summary: <p>Entry point to managed disk management API in Azure. </p>
metadata: {}
