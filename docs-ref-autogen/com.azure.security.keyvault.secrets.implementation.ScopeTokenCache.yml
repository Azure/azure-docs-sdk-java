### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache"
  id: "ScopeTokenCache"
  parent: "com.azure.security.keyvault.secrets.implementation"
  children:
  - "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.ScopeTokenCache(java.util.function.Function<com.azure.core.credential.TokenRequestContext,reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>>)"
  - "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.getToken()"
  - "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.setTokenRequest(com.azure.core.credential.TokenRequestContext)"
  langs:
  - "java"
  name: "ScopeTokenCache"
  nameWithType: "ScopeTokenCache"
  fullName: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache"
  type: "Class"
  package: "com.azure.security.keyvault.secrets.implementation"
  summary: "A token cache that supports caching a token and refreshing it."
  syntax:
    content: " class ScopeTokenCache"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.ScopeTokenCache(java.util.function.Function<com.azure.core.credential.TokenRequestContext,reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>>)"
  id: "ScopeTokenCache(java.util.function.Function<com.azure.core.credential.TokenRequestContext,reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>>)"
  parent: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache"
  langs:
  - "java"
  name: "ScopeTokenCache(Function<TokenRequestContext,Mono<AccessToken>> getNew)"
  nameWithType: "ScopeTokenCache.ScopeTokenCache(Function<TokenRequestContext,Mono<AccessToken>> getNew)"
  fullName: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.ScopeTokenCache(Function<TokenRequestContext,Mono<AccessToken>> getNew)"
  overload: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.ScopeTokenCache*"
  type: "Constructor"
  package: "com.azure.security.keyvault.secrets.implementation"
  summary: "Creates an instance of RefreshableTokenCredential with default scheme \"Bearer\"."
  syntax:
    content: " ScopeTokenCache(Function<TokenRequestContext,Mono<AccessToken>> getNew)"
    parameters:
    - id: "getNew"
      type: "java.util.function.Function<com.azure.core.credential.TokenRequestContext,reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>>"
      description: "a method to get a new token"
- uid: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.getToken()"
  id: "getToken()"
  parent: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache"
  langs:
  - "java"
  name: "getToken()"
  nameWithType: "ScopeTokenCache.getToken()"
  fullName: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.getToken()"
  overload: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.getToken*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets.implementation"
  summary: "Asynchronously get a token from either the cache or replenish the cache with a new token."
  syntax:
    content: "public Mono<AccessToken> getToken()"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>"
      description: "a Publisher that emits an AccessToken"
- uid: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.setTokenRequest(com.azure.core.credential.TokenRequestContext)"
  id: "setTokenRequest(com.azure.core.credential.TokenRequestContext)"
  parent: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache"
  langs:
  - "java"
  name: "setTokenRequest(TokenRequestContext request)"
  nameWithType: "ScopeTokenCache.setTokenRequest(TokenRequestContext request)"
  fullName: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.setTokenRequest(TokenRequestContext request)"
  overload: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.setTokenRequest*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets.implementation"
  syntax:
    content: "public void setTokenRequest(TokenRequestContext request)"
    parameters:
    - id: "request"
      type: "com.azure.core.credential.TokenRequestContext"
references:
- uid: "java.util.function.Function<com.azure.core.credential.TokenRequestContext,reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.credential.TokenRequestContext"
    name: "TokenRequestContext"
    fullName: "com.azure.core.credential.TokenRequestContext"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.credential.AccessToken"
    name: "AccessToken"
    fullName: "com.azure.core.credential.AccessToken"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.ScopeTokenCache*"
  name: "ScopeTokenCache"
  nameWithType: "ScopeTokenCache.ScopeTokenCache"
  fullName: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.ScopeTokenCache"
  package: "com.azure.security.keyvault.secrets.implementation"
- uid: "com.azure.core.credential.TokenRequestContext"
  spec.java:
  - uid: "com.azure.core.credential.TokenRequestContext"
    name: "TokenRequestContext"
    fullName: "com.azure.core.credential.TokenRequestContext"
- uid: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.setTokenRequest*"
  name: "setTokenRequest"
  nameWithType: "ScopeTokenCache.setTokenRequest"
  fullName: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.setTokenRequest"
  package: "com.azure.security.keyvault.secrets.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.core.credential.AccessToken>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.credential.AccessToken"
    name: "AccessToken"
    fullName: "com.azure.core.credential.AccessToken"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.getToken*"
  name: "getToken"
  nameWithType: "ScopeTokenCache.getToken"
  fullName: "com.azure.security.keyvault.secrets.implementation.ScopeTokenCache.getToken"
  package: "com.azure.security.keyvault.secrets.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.credential.AccessToken"
  name: "AccessToken"
  nameWithType: "AccessToken"
  fullName: "com.azure.core.credential.AccessToken"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "com.azure.core.credential.TokenRequestContext,reactor.core.publisher.Mono"
  name: "TokenRequestContext,Mono"
  nameWithType: "TokenRequestContext,Mono"
  fullName: "com.azure.core.credential.TokenRequestContext,reactor.core.publisher.Mono"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
