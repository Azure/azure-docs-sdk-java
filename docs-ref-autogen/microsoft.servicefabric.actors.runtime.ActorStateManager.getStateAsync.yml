### YamlMime:JavaMember
nameWithType: ActorStateManager.getStateAsync
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.getStateAsync(String stateName)
  name: getStateAsync(String stateName)
  nameWithType: ActorStateManager.getStateAsync(String stateName)
  parameters:
  - description: <p>Name of the actor state to add. </p>
    name: stateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task that represents the asynchronous get operation. The value of T parameter contains value of actor state with given state name. </p>
    type: <xref href="%3CT%3E+CompletableFuture%3CT%3E?alt=<T> CompletableFuture<T>&text=%3CT%3E+CompletableFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets an actor state with specified state name.</p>

    <p></p>
  syntax: public <T> CompletableFuture<T> getStateAsync(String stateName)
  uid: microsoft.servicefabric.actors.runtime.ActorStateManager.getStateAsync(String)
- fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.getStateAsync(String stateName, CancellationToken cancellationToken)
  name: getStateAsync(String stateName, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.getStateAsync(String stateName, CancellationToken cancellationToken)
  parameters:
  - description: <p>Name of the actor state to add. </p>
    name: stateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task that represents the asynchronous get operation. The value of T parameter contains value of actor state with given state name. </p>
    type: <xref href="%3CT%3E+CompletableFuture%3CT%3E?alt=<T> CompletableFuture<T>&text=%3CT%3E+CompletableFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets an actor state with specified state name.</p>

    <p></p>
  syntax: public <T> CompletableFuture<T> getStateAsync(String stateName, CancellationToken cancellationToken)
  uid: microsoft.servicefabric.actors.runtime.ActorStateManager.getStateAsync(String,CancellationToken)
uid: microsoft.servicefabric.actors.runtime.ActorStateManager.getStateAsync*
fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.getStateAsync(String stateName)
name: getStateAsync(String stateName)
package: microsoft.servicefabric.actors.runtime
metadata: {}
