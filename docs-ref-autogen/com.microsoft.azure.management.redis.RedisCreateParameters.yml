### YamlMime:JavaType
uid: "com.microsoft.azure.management.redis.RedisCreateParameters"
fullName: "com.microsoft.azure.management.redis.RedisCreateParameters"
name: "RedisCreateParameters"
nameWithType: "RedisCreateParameters"
summary: "Parameters supplied to the Create Redis operation."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RedisCreateParameters"
constructors:
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.RedisCreateParameters()"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.RedisCreateParameters()"
  name: "RedisCreateParameters()"
  nameWithType: "RedisCreateParameters.RedisCreateParameters()"
  syntax: "public RedisCreateParameters()"
methods:
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.enableNonSslPort()"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.enableNonSslPort()"
  name: "enableNonSslPort()"
  nameWithType: "RedisCreateParameters.enableNonSslPort()"
  summary: "Get the enableNonSslPort value."
  syntax: "public Boolean enableNonSslPort()"
  returns:
    description: "the enableNonSslPort value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.location()"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.location()"
  name: "location()"
  nameWithType: "RedisCreateParameters.location()"
  summary: "Get the location value."
  syntax: "public String location()"
  returns:
    description: "the location value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.minimumTlsVersion()"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.minimumTlsVersion()"
  name: "minimumTlsVersion()"
  nameWithType: "RedisCreateParameters.minimumTlsVersion()"
  summary: "Get the minimumTlsVersion value."
  syntax: "public TlsVersion minimumTlsVersion()"
  returns:
    description: "the minimumTlsVersion value"
    type: "<xref href=\"com.microsoft.azure.management.redis.TlsVersion?alt=com.microsoft.azure.management.redis.TlsVersion&text=TlsVersion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.redisConfiguration()"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.redisConfiguration()"
  name: "redisConfiguration()"
  nameWithType: "RedisCreateParameters.redisConfiguration()"
  summary: "Get the redisConfiguration value."
  syntax: "public Map<String,String> redisConfiguration()"
  returns:
    description: "the redisConfiguration value"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.shardCount()"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.shardCount()"
  name: "shardCount()"
  nameWithType: "RedisCreateParameters.shardCount()"
  summary: "Get the shardCount value."
  syntax: "public Integer shardCount()"
  returns:
    description: "the shardCount value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.sku()"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.sku()"
  name: "sku()"
  nameWithType: "RedisCreateParameters.sku()"
  summary: "Get the sku value."
  syntax: "public Sku sku()"
  returns:
    description: "the sku value"
    type: "<xref href=\"com.microsoft.azure.management.redis.Sku?alt=com.microsoft.azure.management.redis.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.staticIP()"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.staticIP()"
  name: "staticIP()"
  nameWithType: "RedisCreateParameters.staticIP()"
  summary: "Get the staticIP value."
  syntax: "public String staticIP()"
  returns:
    description: "the staticIP value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.subnetId()"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.subnetId()"
  name: "subnetId()"
  nameWithType: "RedisCreateParameters.subnetId()"
  summary: "Get the subnetId value."
  syntax: "public String subnetId()"
  returns:
    description: "the subnetId value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.tags()"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.tags()"
  name: "tags()"
  nameWithType: "RedisCreateParameters.tags()"
  summary: "Get the tags value."
  syntax: "public Map<String,String> tags()"
  returns:
    description: "the tags value"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.tenantSettings()"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.tenantSettings()"
  name: "tenantSettings()"
  nameWithType: "RedisCreateParameters.tenantSettings()"
  summary: "Get the tenantSettings value."
  syntax: "public Map<String,String> tenantSettings()"
  returns:
    description: "the tenantSettings value"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.withEnableNonSslPort(java.lang.Boolean)"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.withEnableNonSslPort(Boolean enableNonSslPort)"
  name: "withEnableNonSslPort(Boolean enableNonSslPort)"
  nameWithType: "RedisCreateParameters.withEnableNonSslPort(Boolean enableNonSslPort)"
  summary: "Set the enableNonSslPort value."
  parameters:
  - description: "the enableNonSslPort value to set"
    name: "enableNonSslPort"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisCreateParameters withEnableNonSslPort(Boolean enableNonSslPort)"
  returns:
    description: "the RedisCreateParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCreateParameters?alt=com.microsoft.azure.management.redis.RedisCreateParameters&text=RedisCreateParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.withLocation(java.lang.String)"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "RedisCreateParameters.withLocation(String location)"
  summary: "Set the location value."
  parameters:
  - description: "the location value to set"
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisCreateParameters withLocation(String location)"
  returns:
    description: "the RedisCreateParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCreateParameters?alt=com.microsoft.azure.management.redis.RedisCreateParameters&text=RedisCreateParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.withMinimumTlsVersion(com.microsoft.azure.management.redis.TlsVersion)"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.withMinimumTlsVersion(TlsVersion minimumTlsVersion)"
  name: "withMinimumTlsVersion(TlsVersion minimumTlsVersion)"
  nameWithType: "RedisCreateParameters.withMinimumTlsVersion(TlsVersion minimumTlsVersion)"
  summary: "Set the minimumTlsVersion value."
  parameters:
  - description: "the minimumTlsVersion value to set"
    name: "minimumTlsVersion"
    type: "<xref href=\"com.microsoft.azure.management.redis.TlsVersion?alt=com.microsoft.azure.management.redis.TlsVersion&text=TlsVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisCreateParameters withMinimumTlsVersion(TlsVersion minimumTlsVersion)"
  returns:
    description: "the RedisCreateParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCreateParameters?alt=com.microsoft.azure.management.redis.RedisCreateParameters&text=RedisCreateParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.withRedisConfiguration(Map<String,String> redisConfiguration)"
  name: "withRedisConfiguration(Map<String,String> redisConfiguration)"
  nameWithType: "RedisCreateParameters.withRedisConfiguration(Map<String,String> redisConfiguration)"
  summary: "Set the redisConfiguration value."
  parameters:
  - description: "the redisConfiguration value to set"
    name: "redisConfiguration"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RedisCreateParameters withRedisConfiguration(Map<String,String> redisConfiguration)"
  returns:
    description: "the RedisCreateParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCreateParameters?alt=com.microsoft.azure.management.redis.RedisCreateParameters&text=RedisCreateParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.withShardCount(java.lang.Integer)"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.withShardCount(Integer shardCount)"
  name: "withShardCount(Integer shardCount)"
  nameWithType: "RedisCreateParameters.withShardCount(Integer shardCount)"
  summary: "Set the shardCount value."
  parameters:
  - description: "the shardCount value to set"
    name: "shardCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisCreateParameters withShardCount(Integer shardCount)"
  returns:
    description: "the RedisCreateParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCreateParameters?alt=com.microsoft.azure.management.redis.RedisCreateParameters&text=RedisCreateParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.withSku(com.microsoft.azure.management.redis.Sku)"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.withSku(Sku sku)"
  name: "withSku(Sku sku)"
  nameWithType: "RedisCreateParameters.withSku(Sku sku)"
  summary: "Set the sku value."
  parameters:
  - description: "the sku value to set"
    name: "sku"
    type: "<xref href=\"com.microsoft.azure.management.redis.Sku?alt=com.microsoft.azure.management.redis.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisCreateParameters withSku(Sku sku)"
  returns:
    description: "the RedisCreateParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCreateParameters?alt=com.microsoft.azure.management.redis.RedisCreateParameters&text=RedisCreateParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.withStaticIP(java.lang.String)"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.withStaticIP(String staticIP)"
  name: "withStaticIP(String staticIP)"
  nameWithType: "RedisCreateParameters.withStaticIP(String staticIP)"
  summary: "Set the staticIP value."
  parameters:
  - description: "the staticIP value to set"
    name: "staticIP"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisCreateParameters withStaticIP(String staticIP)"
  returns:
    description: "the RedisCreateParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCreateParameters?alt=com.microsoft.azure.management.redis.RedisCreateParameters&text=RedisCreateParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.withSubnetId(java.lang.String)"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.withSubnetId(String subnetId)"
  name: "withSubnetId(String subnetId)"
  nameWithType: "RedisCreateParameters.withSubnetId(String subnetId)"
  summary: "Set the subnetId value."
  parameters:
  - description: "the subnetId value to set"
    name: "subnetId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisCreateParameters withSubnetId(String subnetId)"
  returns:
    description: "the RedisCreateParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCreateParameters?alt=com.microsoft.azure.management.redis.RedisCreateParameters&text=RedisCreateParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "RedisCreateParameters.withTags(Map<String,String> tags)"
  summary: "Set the tags value."
  parameters:
  - description: "the tags value to set"
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RedisCreateParameters withTags(Map<String,String> tags)"
  returns:
    description: "the RedisCreateParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCreateParameters?alt=com.microsoft.azure.management.redis.RedisCreateParameters&text=RedisCreateParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.withTenantSettings(Map<String,String> tenantSettings)"
  name: "withTenantSettings(Map<String,String> tenantSettings)"
  nameWithType: "RedisCreateParameters.withTenantSettings(Map<String,String> tenantSettings)"
  summary: "Set the tenantSettings value."
  parameters:
  - description: "the tenantSettings value to set"
    name: "tenantSettings"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RedisCreateParameters withTenantSettings(Map<String,String> tenantSettings)"
  returns:
    description: "the RedisCreateParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCreateParameters?alt=com.microsoft.azure.management.redis.RedisCreateParameters&text=RedisCreateParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.withZones(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.withZones(List<String> zones)"
  name: "withZones(List<String> zones)"
  nameWithType: "RedisCreateParameters.withZones(List<String> zones)"
  summary: "Set the zones value."
  parameters:
  - description: "the zones value to set"
    name: "zones"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RedisCreateParameters withZones(List<String> zones)"
  returns:
    description: "the RedisCreateParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.redis.RedisCreateParameters?alt=com.microsoft.azure.management.redis.RedisCreateParameters&text=RedisCreateParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.redis.RedisCreateParameters.zones()"
  fullName: "com.microsoft.azure.management.redis.RedisCreateParameters.zones()"
  name: "zones()"
  nameWithType: "RedisCreateParameters.zones()"
  summary: "Get the zones value."
  syntax: "public List<String> zones()"
  returns:
    description: "the zones value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
metadata: {}
package: "com.microsoft.azure.management.redis"
artifact: com.microsoft.azure:azure-mgmt-redis:1.41.4
