### YamlMime:JavaMember
uid: "com.azure.storage.blob.implementation.util.ChunkedDownloadUtils.downloadChunk*"
fullName: "com.azure.storage.blob.implementation.util.ChunkedDownloadUtils.<T>downloadChunk"
name: "<T>downloadChunk"
nameWithType: "ChunkedDownloadUtils.<T>downloadChunk"
members:
- uid: "com.azure.storage.blob.implementation.util.ChunkedDownloadUtils.<T>downloadChunk(java.lang.Integer,com.azure.storage.blob.models.BlobDownloadAsyncResponse,com.azure.storage.blob.models.BlobRange,com.azure.storage.common.ParallelTransferOptions,com.azure.storage.blob.models.BlobRequestConditions,long,java.util.function.BiFunction<com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions,reactor.core.publisher.Mono<com.azure.storage.blob.models.BlobDownloadAsyncResponse>>,java.util.function.Function<com.azure.storage.blob.models.BlobDownloadAsyncResponse,reactor.core.publisher.Flux<T>>)"
  fullName: "com.azure.storage.blob.implementation.util.ChunkedDownloadUtils.<T>downloadChunk(Integer chunkNum, BlobDownloadAsyncResponse initialResponse, BlobRange finalRange, ParallelTransferOptions finalParallelTransferOptions, BlobRequestConditions requestConditions, long newCount, BiFunction<BlobRange,BlobRequestConditions,Mono<BlobDownloadAsyncResponse>> downloader, Function<BlobDownloadAsyncResponse,Flux<T>> returnTransformer)"
  name: "<T>downloadChunk(Integer chunkNum, BlobDownloadAsyncResponse initialResponse, BlobRange finalRange, ParallelTransferOptions finalParallelTransferOptions, BlobRequestConditions requestConditions, long newCount, BiFunction<BlobRange,BlobRequestConditions,Mono<BlobDownloadAsyncResponse>> downloader, Function<BlobDownloadAsyncResponse,Flux<T>> returnTransformer)"
  nameWithType: "ChunkedDownloadUtils.<T>downloadChunk(Integer chunkNum, BlobDownloadAsyncResponse initialResponse, BlobRange finalRange, ParallelTransferOptions finalParallelTransferOptions, BlobRequestConditions requestConditions, long newCount, BiFunction<BlobRange,BlobRequestConditions,Mono<BlobDownloadAsyncResponse>> downloader, Function<BlobDownloadAsyncResponse,Flux<T>> returnTransformer)"
  parameters:
  - name: "chunkNum"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - name: "initialResponse"
    type: "<xref href=\"com.azure.storage.blob.models.BlobDownloadAsyncResponse?alt=com.azure.storage.blob.models.BlobDownloadAsyncResponse&text=BlobDownloadAsyncResponse\" data-throw-if-not-resolved=\"False\" />"
  - name: "finalRange"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
  - name: "finalParallelTransferOptions"
    type: "<xref href=\"com.azure.storage.common.ParallelTransferOptions?alt=com.azure.storage.common.ParallelTransferOptions&text=ParallelTransferOptions\" data-throw-if-not-resolved=\"False\" />"
  - name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - name: "newCount"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - name: "downloader"
    type: "<xref href=\"java.util.function.BiFunction?alt=java.util.function.BiFunction&text=BiFunction\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />,<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobDownloadAsyncResponse?alt=com.azure.storage.blob.models.BlobDownloadAsyncResponse&text=BlobDownloadAsyncResponse\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - name: "returnTransformer"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobDownloadAsyncResponse?alt=com.azure.storage.blob.models.BlobDownloadAsyncResponse&text=BlobDownloadAsyncResponse\" data-throw-if-not-resolved=\"False\" />,<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public static Flux<T> <T>downloadChunk(Integer chunkNum, BlobDownloadAsyncResponse initialResponse, BlobRange finalRange, ParallelTransferOptions finalParallelTransferOptions, BlobRequestConditions requestConditions, long newCount, BiFunction<BlobRange,BlobRequestConditions,Mono<BlobDownloadAsyncResponse>> downloader, Function<BlobDownloadAsyncResponse,Flux<T>> returnTransformer)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.implementation.util"
artifact: com.azure:azure-storage-blob:12.10.2
