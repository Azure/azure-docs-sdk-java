### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.compute._container_service._definition
  id: _definition
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition.yml
  langs:
  - java
  name: ContainerService.Definition
  nameWithType: ContainerService.Definition
  fullName: com.microsoft.azure.management.compute.ContainerService.Definition
  type: Interface
  source:
    remote:
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/ContainerService.java
      branch: 880e2022bf46b71f481107effb7c878a9ae065dd
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/ContainerService.java
    startLine: 104
  package: com.microsoft.azure.management.compute
  summary: <p>Container interface for all the definitions related to a container service. </p>
  syntax:
    content: public interface Definition extends ContainerService.DefinitionStages.Blank,ContainerService.DefinitionStages.WithGroup,ContainerService.DefinitionStages.WithOrchestrator,ContainerService.DefinitionStages.WithMasterNodeCount,ContainerService.DefinitionStages.WithMasterLeafDomainLabel,ContainerService.DefinitionStages.WithLinux,ContainerService.DefinitionStages.WithLinuxRootUsername,ContainerService.DefinitionStages.WithLinuxSshKey,ContainerService.DefinitionStages.WithAgentPool,ContainerService.DefinitionStages.WithServicePrincipalProfile,ContainerService.DefinitionStages.WithDiagnostics,ContainerService.DefinitionStages.WithCreate
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model._creatable.create()
  - com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync()
  - com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool.defineAgentPool(String)
  - com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
  - com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.name()
  - com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withDcosOrchestration()
  - com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics.withDiagnostics()
  - com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withKubernetesOrchestration()
  - com.microsoft.azure.management.compute._container_service._definition_stages._with_linux.withLinux()
  - com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512.withMasterLeafDomainLabel(String)
  - com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a.withMasterNodeCount(ContainerServiceMasterProfileCount)
  - com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92.withRootUsername(String)
  - com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a.withServicePrincipal(String,String)
  - com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key.withSshKey(String)
  - com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withSwarmOrchestration()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTags(Map<String, String>)
references:
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.create()
  parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: create()
  nameWithType: Creatable<T>.create()
  fullName: T com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  type: Method
  summary: >-
    <p>Execute the create request.</p>

    <p></p>
  syntax:
    content: public T create()
    return:
      type: 8ce1ecb9
      description: <p>the create resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  fullName: ServiceFuture<T> com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  type: Method
  summary: >-
    <p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback to handle success and failure </p>
    return:
      type: c0371a4e
      description: <p>a handle to cancel the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  fullName: Observable<Indexable> com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  type: Method
  summary: >-
    <p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>

    <p></p>
  syntax:
    content: public Observable<Indexable> createAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model._indexablea08ddfce
      description: <p>an observable of the request </p>
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool.defineAgentPool(String)
  parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool.yml
  name: defineAgentPool(String name)
  nameWithType: ContainerService.DefinitionStages.WithAgentPool.defineAgentPool(String name)
  fullName: ContainerServiceAgentPool.DefinitionStages.Blank<WithCreate> com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithAgentPool.defineAgentPool(String name)
  type: Method
  summary: >-
    <p>Begins the definition of a agent pool profile to be attached to the container service.</p>

    <p></p>
  syntax:
    content: public ContainerServiceAgentPool.DefinitionStages.Blank<WithCreate> defineAgentPool(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>the name for the agent pool profile </p>
    return:
      type: 58280ecccom.microsoft.azure.management.compute._container_service._definition_stages._with_createa08ddfce
      description: <p>the stage representing configuration for the agent pool profile </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model._indexable
  href: com.microsoft.azure.management.resources.fluentcore.model._indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: String com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.name()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name
  href: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.yml
  name: name()
  nameWithType: HasName.name()
  fullName: String com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  type: Method
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>the name of the resource </p>
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withDcosOrchestration()
  parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.yml
  name: withDcosOrchestration()
  nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
  fullName: WithDiagnostics com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
  type: Method
  summary: <p>Specifies the DCOS orchestration type for the container service. </p>
  syntax:
    content: public WithDiagnostics withDcosOrchestration()
    return:
      type: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics.withDiagnostics()
  parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics.yml
  name: withDiagnostics()
  nameWithType: ContainerService.DefinitionStages.WithDiagnostics.withDiagnostics()
  fullName: WithLinux com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithDiagnostics.withDiagnostics()
  type: Method
  summary: <p>Enable diagnostics. </p>
  syntax:
    content: public WithLinux withDiagnostics()
    return:
      type: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux
      description: <p>the create stage of the definition </p>
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withKubernetesOrchestration()
  parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.yml
  name: withKubernetesOrchestration()
  nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
  fullName: WithServicePrincipalProfile com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
  type: Method
  summary: <p>Specifies the Kubernetes orchestration type for the container service. </p>
  syntax:
    content: public WithServicePrincipalProfile withKubernetesOrchestration()
    return:
      type: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux.withLinux()
  parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux.yml
  name: withLinux()
  nameWithType: ContainerService.DefinitionStages.WithLinux.withLinux()
  fullName: WithLinuxRootUsername com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithLinux.withLinux()
  type: Method
  summary: <p>Begins the definition to specify Linux settings. </p>
  syntax:
    content: public WithLinuxRootUsername withLinux()
    return:
      type: com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92
      description: <p>the stage representing configuration of Linux specific settings </p>
- uid: com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512.withMasterLeafDomainLabel(String)
  parent: com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512
  href: com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512.yml
  name: withMasterLeafDomainLabel(String dnsLabel)
  nameWithType: ContainerService.DefinitionStages.WithMasterLeafDomainLabel.withMasterLeafDomainLabel(String dnsLabel)
  fullName: WithAgentPool com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithMasterLeafDomainLabel.withMasterLeafDomainLabel(String dnsLabel)
  type: Method
  summary: <p>Specifies the master node Dns label. </p>
  syntax:
    content: public WithAgentPool withMasterLeafDomainLabel(String dnsLabel)
    parameters:
    - id: dnsLabel
      type: "26831127"
      description: <p>the Dns prefix </p>
    return:
      type: com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a.withMasterNodeCount(ContainerServiceMasterProfileCount)
  parent: com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a
  href: com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a.yml
  name: withMasterNodeCount(ContainerServiceMasterProfileCount count)
  nameWithType: ContainerService.DefinitionStages.WithMasterNodeCount.withMasterNodeCount(ContainerServiceMasterProfileCount count)
  fullName: WithMasterLeafDomainLabel com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithMasterNodeCount.withMasterNodeCount(ContainerServiceMasterProfileCount count)
  type: Method
  summary: <p>Specifies the master node count. </p>
  syntax:
    content: public WithMasterLeafDomainLabel withMasterNodeCount(ContainerServiceMasterProfileCount count)
    parameters:
    - id: count
      type: com.microsoft.azure.management.compute._container_service_master_profile_count
      description: <p>master profile count (1, 3, 5) </p>
    return:
      type: com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92.withRootUsername(String)
  parent: com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92
  href: com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92.yml
  name: withRootUsername(String rootUserName)
  nameWithType: ContainerService.DefinitionStages.WithLinuxRootUsername.withRootUsername(String rootUserName)
  fullName: WithLinuxSshKey com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithLinuxRootUsername.withRootUsername(String rootUserName)
  type: Method
  summary: <p>Begins the definition to specify Linux root username. </p>
  syntax:
    content: public WithLinuxSshKey withRootUsername(String rootUserName)
    parameters:
    - id: rootUserName
      type: "26831127"
      description: <p>the root username </p>
    return:
      type: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a.withServicePrincipal(String,String)
  parent: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a
  href: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a.yml
  name: withServicePrincipal(String clientId, String secret)
  nameWithType: ContainerService.DefinitionStages.WithServicePrincipalProfile.withServicePrincipal(String clientId, String secret)
  fullName: WithLinux com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithServicePrincipalProfile.withServicePrincipal(String clientId, String secret)
  type: Method
  summary: <p>Properties for cluster service principals. </p>
  syntax:
    content: public WithLinux withServicePrincipal(String clientId, String secret)
    parameters:
    - id: clientId
      type: "26831127"
      description: <p>The ID for the service principal. </p>
    - id: secret
      type: "26831127"
      description: <p>The secret password associated with the service principal. </p>
    return:
      type: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux
      description: <p>the next stage </p>
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key.withSshKey(String)
  parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key.yml
  name: withSshKey(String sshKeyData)
  nameWithType: ContainerService.DefinitionStages.WithLinuxSshKey.withSshKey(String sshKeyData)
  fullName: WithMasterNodeCount com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithLinuxSshKey.withSshKey(String sshKeyData)
  type: Method
  summary: <p>Begins the definition to specify Linux ssh key. </p>
  syntax:
    content: public WithMasterNodeCount withSshKey(String sshKeyData)
    parameters:
    - id: sshKeyData
      type: "26831127"
      description: <p>the SSH key data </p>
    return:
      type: com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withSwarmOrchestration()
  parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.yml
  name: withSwarmOrchestration()
  nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
  fullName: WithDiagnostics com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
  type: Method
  summary: <p>Specifies the Swarm orchestration type for the container service. </p>
  syntax:
    content: public WithDiagnostics withSwarmOrchestration()
    return:
      type: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.yml
  name: withTag(String key, String value)
  nameWithType: Resource.DefinitionWithTags<T>.withTag(String key, String value)
  fullName: T com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTag(String key, String value)
  type: Method
  summary: <p>Adds a tag to the resource. </p>
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  fullName: T com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: <p>Specifies tags for the resource as a <xref uid="" data-throw-if-not-resolved="false">Map</xref>. </p>
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false">Map</xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._blank
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition_stages._blank.yml
  name: ContainerService.DefinitionStages.Blank
  nameWithType: ContainerService.DefinitionStages.Blank
  fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.Blank
  type: Interface
  summary: <p>The first stage of a container service definition. </p>
  syntax:
    content: public interface Blank
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_group
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_group.yml
  name: ContainerService.DefinitionStages.WithGroup
  nameWithType: ContainerService.DefinitionStages.WithGroup
  fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithGroup
  type: Interface
  summary: <p>The stage of the container service definition allowing to specify the resource group. </p>
  syntax:
    content: public interface WithGroup
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.yml
  name: ContainerService.DefinitionStages.WithOrchestrator
  nameWithType: ContainerService.DefinitionStages.WithOrchestrator
  fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator
  type: Interface
  summary: <p>The stage of the container service definition allowing to specify orchestration type. </p>
  syntax:
    content: public interface WithOrchestrator
- uid: com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a.yml
  name: ContainerService.DefinitionStages.WithMasterNodeCount
  nameWithType: ContainerService.DefinitionStages.WithMasterNodeCount
  fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithMasterNodeCount
  type: Interface
  summary: <p>The stage of the container service definition allowing to specify the master node count. </p>
  syntax:
    content: public interface WithMasterNodeCount
- uid: com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512.yml
  name: ContainerService.DefinitionStages.WithMasterLeafDomainLabel
  nameWithType: ContainerService.DefinitionStages.WithMasterLeafDomainLabel
  fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithMasterLeafDomainLabel
  type: Interface
  summary: <p>The stage of the container service definition allowing to specify the master Dns label. </p>
  syntax:
    content: public interface WithMasterLeafDomainLabel
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux.yml
  name: ContainerService.DefinitionStages.WithLinux
  nameWithType: ContainerService.DefinitionStages.WithLinux
  fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithLinux
  type: Interface
  summary: <p>The stage of the container service definition allowing the start of defining Linux specific settings. </p>
  syntax:
    content: public interface WithLinux
- uid: com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92.yml
  name: ContainerService.DefinitionStages.WithLinuxRootUsername
  nameWithType: ContainerService.DefinitionStages.WithLinuxRootUsername
  fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithLinuxRootUsername
  type: Interface
  summary: <p>The stage of the container service definition allowing to specific the Linux root username. </p>
  syntax:
    content: public interface WithLinuxRootUsername
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key.yml
  name: ContainerService.DefinitionStages.WithLinuxSshKey
  nameWithType: ContainerService.DefinitionStages.WithLinuxSshKey
  fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithLinuxSshKey
  type: Interface
  summary: <p>The stage of the container service definition allowing to specific the Linux SSH key. </p>
  syntax:
    content: public interface WithLinuxSshKey
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool.yml
  name: ContainerService.DefinitionStages.WithAgentPool
  nameWithType: ContainerService.DefinitionStages.WithAgentPool
  fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithAgentPool
  type: Interface
  summary: <p>The stage of the container service definition allowing to specify an agent pool profile. </p>
  syntax:
    content: public interface WithAgentPool
- uid: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a.yml
  name: ContainerService.DefinitionStages.WithServicePrincipalProfile
  nameWithType: ContainerService.DefinitionStages.WithServicePrincipalProfile
  fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithServicePrincipalProfile
  type: Interface
  summary: <p>The stage allowing properties for cluster service principals. </p>
  syntax:
    content: public interface WithServicePrincipalProfile
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics.yml
  name: ContainerService.DefinitionStages.WithDiagnostics
  nameWithType: ContainerService.DefinitionStages.WithDiagnostics
  fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithDiagnostics
  type: Interface
  summary: <p>The stage of the container service definition allowing to specific diagnostic settings. </p>
  syntax:
    content: public interface WithDiagnostics
- uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_create
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute._container_service._definition_stages._with_create.yml
  name: ContainerService.DefinitionStages.WithCreate
  nameWithType: ContainerService.DefinitionStages.WithCreate
  fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithCreate
  type: Interface
  summary: <p>The stage of the definition which contains all the minimum required inputs for the resource to be created, but also allows for any other optional settings to be specified. </p>
  syntax:
    content: public interface WithCreate
