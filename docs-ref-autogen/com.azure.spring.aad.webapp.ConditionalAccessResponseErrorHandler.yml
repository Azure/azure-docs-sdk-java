### YamlMime:JavaType
uid: "com.azure.spring.aad.webapp.ConditionalAccessResponseErrorHandler"
fullName: "com.azure.spring.aad.webapp.ConditionalAccessResponseErrorHandler"
name: "ConditionalAccessResponseErrorHandler"
nameWithType: "ConditionalAccessResponseErrorHandler"
summary: "Handle conditional access."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ConditionalAccessResponseErrorHandler implements ResponseErrorHandler"
constructors:
- "com.azure.spring.aad.webapp.ConditionalAccessResponseErrorHandler.ConditionalAccessResponseErrorHandler()"
methods:
- "com.azure.spring.aad.webapp.ConditionalAccessResponseErrorHandler.handleError(org.springframework.http.client.ClientHttpResponse)"
- "com.azure.spring.aad.webapp.ConditionalAccessResponseErrorHandler.hasError(org.springframework.http.client.ClientHttpResponse)"
type: "class"
implements:
- "<xref href=\"org.springframework.web.client.ResponseErrorHandler?alt=org.springframework.web.client.ResponseErrorHandler&text=ResponseErrorHandler\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.spring.aad.webapp"
artifact: com.azure.spring:azure-spring-boot:3.0.0
