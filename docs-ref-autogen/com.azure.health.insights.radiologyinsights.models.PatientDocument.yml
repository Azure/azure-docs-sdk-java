### YamlMime:JavaType
uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument"
fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument"
name: "PatientDocument"
nameWithType: "PatientDocument"
summary: "A clinical document related to a patient."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **PatientDocument**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.health.insights.radiologyinsights.models.PatientDocument?alt=com.azure.health.insights.radiologyinsights.models.PatientDocument&text=PatientDocument\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.PatientDocument(com.azure.health.insights.radiologyinsights.models.ClinicalDocumentContentType,java.lang.String,com.azure.health.insights.radiologyinsights.models.ClinicalDocumentContent)"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.PatientDocument(ClinicalDocumentContentType type, String id, ClinicalDocumentContent content)"
  name: "PatientDocument(ClinicalDocumentContentType type, String id, ClinicalDocumentContent content)"
  nameWithType: "PatientDocument.PatientDocument(ClinicalDocumentContentType type, String id, ClinicalDocumentContent content)"
  summary: "Creates an instance of Patient<wbr>Document class."
  parameters:
  - description: "the type value to set."
    name: "type"
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.ClinicalDocumentContentType?alt=com.azure.health.insights.radiologyinsights.models.ClinicalDocumentContentType&text=ClinicalDocumentContentType\" data-throw-if-not-resolved=\"False\" />"
  - description: "the id value to set."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the content value to set."
    name: "content"
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.ClinicalDocumentContent?alt=com.azure.health.insights.radiologyinsights.models.ClinicalDocumentContent&text=ClinicalDocumentContent\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PatientDocument(ClinicalDocumentContentType type, String id, ClinicalDocumentContent content)"
  desc: "Creates an instance of PatientDocument class."
methods:
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "PatientDocument.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Patient<wbr>Document from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static PatientDocument fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of PatientDocument from the JsonReader."
  returns:
    description: "An instance of PatientDocument if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.PatientDocument?alt=com.azure.health.insights.radiologyinsights.models.PatientDocument&text=PatientDocument\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getAdministrativeMetadata()"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getAdministrativeMetadata()"
  name: "getAdministrativeMetadata()"
  nameWithType: "PatientDocument.getAdministrativeMetadata()"
  summary: "Get the administrative<wbr>Metadata property: Administrative metadata for the document."
  syntax: "public DocumentAdministrativeMetadata getAdministrativeMetadata()"
  desc: "Get the administrativeMetadata property: Administrative metadata for the document."
  returns:
    description: "the administrativeMetadata value."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.DocumentAdministrativeMetadata?alt=com.azure.health.insights.radiologyinsights.models.DocumentAdministrativeMetadata&text=DocumentAdministrativeMetadata\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getAuthors()"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getAuthors()"
  name: "getAuthors()"
  nameWithType: "PatientDocument.getAuthors()"
  summary: "Get the authors property: Document author(s)."
  syntax: "public List<ClinicalDocumentAuthor> getAuthors()"
  desc: "Get the authors property: Document author(s)."
  returns:
    description: "the authors value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.health.insights.radiologyinsights.models.ClinicalDocumentAuthor?alt=com.azure.health.insights.radiologyinsights.models.ClinicalDocumentAuthor&text=ClinicalDocumentAuthor\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getClinicalType()"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getClinicalType()"
  name: "getClinicalType()"
  nameWithType: "PatientDocument.getClinicalType()"
  summary: "Get the clinical<wbr>Type property: The type of the clinical document."
  syntax: "public ClinicalDocumentType getClinicalType()"
  desc: "Get the clinicalType property: The type of the clinical document."
  returns:
    description: "the clinicalType value."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.ClinicalDocumentType?alt=com.azure.health.insights.radiologyinsights.models.ClinicalDocumentType&text=ClinicalDocumentType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getContent()"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getContent()"
  name: "getContent()"
  nameWithType: "PatientDocument.getContent()"
  summary: "Get the content property: The content of the patient document."
  syntax: "public ClinicalDocumentContent getContent()"
  desc: "Get the content property: The content of the patient document."
  returns:
    description: "the content value."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.ClinicalDocumentContent?alt=com.azure.health.insights.radiologyinsights.models.ClinicalDocumentContent&text=ClinicalDocumentContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getCreatedAt()"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getCreatedAt()"
  name: "getCreatedAt()"
  nameWithType: "PatientDocument.getCreatedAt()"
  summary: "Get the created<wbr>At property: The date and time when the document was created."
  syntax: "public OffsetDateTime getCreatedAt()"
  desc: "Get the createdAt property: The date and time when the document was created."
  returns:
    description: "the createdAt value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getId()"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getId()"
  name: "getId()"
  nameWithType: "PatientDocument.getId()"
  summary: "Get the id property: A given identifier for the document."
  syntax: "public String getId()"
  desc: "Get the id property: A given identifier for the document. Has to be unique across all documents for a single patient."
  returns:
    description: "the id value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getLanguage()"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getLanguage()"
  name: "getLanguage()"
  nameWithType: "PatientDocument.getLanguage()"
  summary: "Get the language property: A 2 letter ISO 639-1 representation of the language of the document."
  syntax: "public String getLanguage()"
  desc: "Get the language property: A 2 letter ISO 639-1 representation of the language of the document."
  returns:
    description: "the language value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getSpecialtyType()"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getSpecialtyType()"
  name: "getSpecialtyType()"
  nameWithType: "PatientDocument.getSpecialtyType()"
  summary: "Get the specialty<wbr>Type property: specialty type the document."
  syntax: "public SpecialtyType getSpecialtyType()"
  desc: "Get the specialtyType property: specialty type the document."
  returns:
    description: "the specialtyType value."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.SpecialtyType?alt=com.azure.health.insights.radiologyinsights.models.SpecialtyType&text=SpecialtyType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getType()"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.getType()"
  name: "getType()"
  nameWithType: "PatientDocument.getType()"
  summary: "Get the type property: The type of the patient document, such as 'note' (text document) or 'fhir<wbr>Bundle' (FHIR JSON document)."
  syntax: "public ClinicalDocumentContentType getType()"
  desc: "Get the type property: The type of the patient document, such as 'note' (text document) or 'fhirBundle' (FHIR JSON document)."
  returns:
    description: "the type value."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.ClinicalDocumentContentType?alt=com.azure.health.insights.radiologyinsights.models.ClinicalDocumentContentType&text=ClinicalDocumentContentType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.setAdministrativeMetadata(com.azure.health.insights.radiologyinsights.models.DocumentAdministrativeMetadata)"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.setAdministrativeMetadata(DocumentAdministrativeMetadata administrativeMetadata)"
  name: "setAdministrativeMetadata(DocumentAdministrativeMetadata administrativeMetadata)"
  nameWithType: "PatientDocument.setAdministrativeMetadata(DocumentAdministrativeMetadata administrativeMetadata)"
  summary: "Set the administrative<wbr>Metadata property: Administrative metadata for the document."
  parameters:
  - description: "the administrativeMetadata value to set."
    name: "administrativeMetadata"
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.DocumentAdministrativeMetadata?alt=com.azure.health.insights.radiologyinsights.models.DocumentAdministrativeMetadata&text=DocumentAdministrativeMetadata\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PatientDocument setAdministrativeMetadata(DocumentAdministrativeMetadata administrativeMetadata)"
  desc: "Set the administrativeMetadata property: Administrative metadata for the document."
  returns:
    description: "the PatientDocument object itself."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.PatientDocument?alt=com.azure.health.insights.radiologyinsights.models.PatientDocument&text=PatientDocument\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.setAuthors(java.util.List<com.azure.health.insights.radiologyinsights.models.ClinicalDocumentAuthor>)"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.setAuthors(List<ClinicalDocumentAuthor> authors)"
  name: "setAuthors(List<ClinicalDocumentAuthor> authors)"
  nameWithType: "PatientDocument.setAuthors(List<ClinicalDocumentAuthor> authors)"
  summary: "Set the authors property: Document author(s)."
  parameters:
  - description: "the authors value to set."
    name: "authors"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.health.insights.radiologyinsights.models.ClinicalDocumentAuthor?alt=com.azure.health.insights.radiologyinsights.models.ClinicalDocumentAuthor&text=ClinicalDocumentAuthor\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PatientDocument setAuthors(List<ClinicalDocumentAuthor> authors)"
  desc: "Set the authors property: Document author(s)."
  returns:
    description: "the PatientDocument object itself."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.PatientDocument?alt=com.azure.health.insights.radiologyinsights.models.PatientDocument&text=PatientDocument\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.setClinicalType(com.azure.health.insights.radiologyinsights.models.ClinicalDocumentType)"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.setClinicalType(ClinicalDocumentType clinicalType)"
  name: "setClinicalType(ClinicalDocumentType clinicalType)"
  nameWithType: "PatientDocument.setClinicalType(ClinicalDocumentType clinicalType)"
  summary: "Set the clinical<wbr>Type property: The type of the clinical document."
  parameters:
  - description: "the clinicalType value to set."
    name: "clinicalType"
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.ClinicalDocumentType?alt=com.azure.health.insights.radiologyinsights.models.ClinicalDocumentType&text=ClinicalDocumentType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PatientDocument setClinicalType(ClinicalDocumentType clinicalType)"
  desc: "Set the clinicalType property: The type of the clinical document."
  returns:
    description: "the PatientDocument object itself."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.PatientDocument?alt=com.azure.health.insights.radiologyinsights.models.PatientDocument&text=PatientDocument\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.setCreatedAt(java.time.OffsetDateTime)"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.setCreatedAt(OffsetDateTime createdAt)"
  name: "setCreatedAt(OffsetDateTime createdAt)"
  nameWithType: "PatientDocument.setCreatedAt(OffsetDateTime createdAt)"
  summary: "Set the created<wbr>At property: The date and time when the document was created."
  parameters:
  - description: "the createdAt value to set."
    name: "createdAt"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  syntax: "public PatientDocument setCreatedAt(OffsetDateTime createdAt)"
  desc: "Set the createdAt property: The date and time when the document was created."
  returns:
    description: "the PatientDocument object itself."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.PatientDocument?alt=com.azure.health.insights.radiologyinsights.models.PatientDocument&text=PatientDocument\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.setLanguage(java.lang.String)"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.setLanguage(String language)"
  name: "setLanguage(String language)"
  nameWithType: "PatientDocument.setLanguage(String language)"
  summary: "Set the language property: A 2 letter ISO 639-1 representation of the language of the document."
  parameters:
  - description: "the language value to set."
    name: "language"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PatientDocument setLanguage(String language)"
  desc: "Set the language property: A 2 letter ISO 639-1 representation of the language of the document."
  returns:
    description: "the PatientDocument object itself."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.PatientDocument?alt=com.azure.health.insights.radiologyinsights.models.PatientDocument&text=PatientDocument\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.setSpecialtyType(com.azure.health.insights.radiologyinsights.models.SpecialtyType)"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.setSpecialtyType(SpecialtyType specialtyType)"
  name: "setSpecialtyType(SpecialtyType specialtyType)"
  nameWithType: "PatientDocument.setSpecialtyType(SpecialtyType specialtyType)"
  summary: "Set the specialty<wbr>Type property: specialty type the document."
  parameters:
  - description: "the specialtyType value to set."
    name: "specialtyType"
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.SpecialtyType?alt=com.azure.health.insights.radiologyinsights.models.SpecialtyType&text=SpecialtyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PatientDocument setSpecialtyType(SpecialtyType specialtyType)"
  desc: "Set the specialtyType property: specialty type the document."
  returns:
    description: "the PatientDocument object itself."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.PatientDocument?alt=com.azure.health.insights.radiologyinsights.models.PatientDocument&text=PatientDocument\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.PatientDocument.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.health.insights.radiologyinsights.models.PatientDocument.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "PatientDocument.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A clinical document related to a patient. Document here is in the wide sense - not just a text document (note)."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.health.insights.radiologyinsights.models.PatientDocument?alt=com.azure.health.insights.radiologyinsights.models.PatientDocument&text=PatientDocument\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.health.insights.radiologyinsights.models"
artifact: com.azure:azure-health-insights-radiologyinsights:1.0.0
