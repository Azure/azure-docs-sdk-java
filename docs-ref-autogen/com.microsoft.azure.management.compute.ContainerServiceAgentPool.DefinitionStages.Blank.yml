### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.compute.ContainerServiceAgentPool.DefinitionStages.Blank<ParentT>.withVMCount(int count)
  name: withVMCount(int count)
  nameWithType: ContainerServiceAgentPool.DefinitionStages.Blank<ParentT>.withVMCount(int count)
  parameters:
  - description: <p>the count </p>
    name: count
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.ContainerServiceAgentPool.DefinitionStages.WithVMSize?alt=com.microsoft.azure.management.compute.ContainerServiceAgentPool.DefinitionStages.WithVMSize&text=ContainerServiceAgentPool.DefinitionStages.WithVMSize" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: <p>Specifies the number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). </p>
  syntax: public WithVMSize<ParentT> withVMCount(int count)
  uid: com.microsoft.azure.management.compute.ContainerServiceAgentPool.DefinitionStages.Blank.withVMCount(int)
nameWithType: ContainerServiceAgentPool.DefinitionStages.Blank<ParentT>
syntax: public interface Blank<ParentT>
type: interface
typeParameters:
- description: <p>the stage of the container service definition to return to after attaching this definition </p>
  name: ParentT
uid: com.microsoft.azure.management.compute.ContainerServiceAgentPool.DefinitionStages.Blank
fullName: com.microsoft.azure.management.compute.ContainerServiceAgentPool.DefinitionStages.Blank<ParentT>
name: ContainerServiceAgentPool.DefinitionStages.Blank<ParentT>
package: com.microsoft.azure.management.compute
summary: >-
  <p>The first stage of a container service agent pool definition.</p>

  <p></p>
metadata: {}
