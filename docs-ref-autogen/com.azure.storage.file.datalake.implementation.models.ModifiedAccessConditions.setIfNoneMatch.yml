### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions.setIfNoneMatch*"
fullName: "com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions.setIfNoneMatch"
name: "setIfNoneMatch"
nameWithType: "ModifiedAccessConditions.setIfNoneMatch"
members:
- uid: "com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions.setIfNoneMatch(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions.setIfNoneMatch(String ifNoneMatch)"
  name: "setIfNoneMatch(String ifNoneMatch)"
  nameWithType: "ModifiedAccessConditions.setIfNoneMatch(String ifNoneMatch)"
  summary: "Set the ifNoneMatch property: Specify an ETag value to operate only on blobs without a matching value."
  parameters:
  - description: "the ifNoneMatch value to set."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModifiedAccessConditions setIfNoneMatch(String ifNoneMatch)"
  returns:
    description: "the ModifiedAccessConditions object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions?alt=com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions&text=ModifiedAccessConditions\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.implementation.models"
artifact: com.azure:azure-storage-file-datalake:12.4.1
