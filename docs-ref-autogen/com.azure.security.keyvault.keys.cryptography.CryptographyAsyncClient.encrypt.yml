### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.encrypt*"
fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.encrypt"
name: "encrypt"
nameWithType: "CryptographyAsyncClient.encrypt"
members:
- uid: "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.encrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm,byte[])"
  fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.encrypt(EncryptionAlgorithm algorithm, byte[] plaintext)"
  name: "encrypt(EncryptionAlgorithm algorithm, byte[] plaintext)"
  nameWithType: "CryptographyAsyncClient.encrypt(EncryptionAlgorithm algorithm, byte[] plaintext)"
  summary: "Encrypts an arbitrary sequence of bytes using the configured key. Note that the encrypt operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The encrypt operation is supported for both symmetric keys and asymmetric keys. In case of asymmetric keys public portion of the key is used for encryption. This operation requires the keys/encrypt permission.\n\nThe <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm\" data-throw-if-not-resolved=\"false\" data-raw-source=\"encryption algorithm\"></xref> indicates the type of algorithm to use for encrypting the specified `plaintext`. Possible values for assymetric keys include: <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.RSA1_5\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA1_5\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.RSA_OAEP\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA_OAEP\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.RSA_OAEP_256\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RSA_OAEP_256\"></xref>. Possible values for symmetric keys include: <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A128CBC\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A128CBC\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A128CBC_HS256\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A128CBC-HS256\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A192CBC\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A192CBC\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A192CBC_HS384\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A192CBC-HS384\"></xref>, <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A256CBC\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A256CBC\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm.A256CBC_HS512\" data-throw-if-not-resolved=\"false\" data-raw-source=\"A256CBC-HS512\"></xref>\n\n**Code Samples**\n\nEncrypts the content. Subscribes to the call asynchronously and prints out the encrypted content details when a response has been received.\n\n```java\nbyte[] plainText = new byte[100];\n new Random(0x1234567L).nextBytes(plainText);\n cryptographyAsyncClient.encrypt(EncryptionAlgorithm.RSA_OAEP, plainText)\n     .subscriberContext(reactor.util.context.Context.of(key1, value1, key2, value2))\n     .subscribe(encryptResult ->\n         System.out.printf(\"Received encrypted content of length %d with algorithm %s \\n\",\n             encryptResult.getCipherText().length, encryptResult.getAlgorithm().toString()));\n```"
  parameters:
  - description: "The algorithm to be used for encryption."
    name: "algorithm"
    type: "<xref href=\"com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm?alt=com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm&text=EncryptionAlgorithm\" data-throw-if-not-resolved=\"False\" />"
  - description: "The content to be encrypted."
    name: "plaintext"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public Mono<EncryptResult> encrypt(EncryptionAlgorithm algorithm, byte[] plaintext)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EncryptResult\"></xref> whose <xref uid=\"com.azure.security.keyvault.keys.cryptography.models.EncryptResult.getCipherText()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"cipher text\"></xref>\n     contains the encrypted content."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.cryptography.models.EncryptResult?alt=com.azure.security.keyvault.keys.cryptography.models.EncryptResult&text=EncryptResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys.cryptography"
artifact: com.azure:azure-security-keyvault-keys:4.2.3
