### YamlMime:JavaType
uid: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions"
fullName: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions"
name: "CosmosMicrometerMetricsOptions"
nameWithType: "CosmosMicrometerMetricsOptions"
summary: "Micrometer-specific Azure Cosmos DB SDK metrics options"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.MetricsOptions?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.core.util.MetricsOptions?alt=com.azure.core.util.MetricsOptions&text=MetricsOptions\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.util.MetricsOptions.fromConfiguration(com.azure.core.util.Configuration)?alt=com.azure.core.util.MetricsOptions.fromConfiguration&text=fromConfiguration\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.MetricsOptions.isEnabled()?alt=com.azure.core.util.MetricsOptions.isEnabled&text=isEnabled\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.util.MetricsOptions.setEnabled(boolean)?alt=com.azure.core.util.MetricsOptions.setEnabled&text=setEnabled\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **CosmosMicrometerMetricsOptions**</br> extends <xref href=\"com.azure.core.util.MetricsOptions?alt=com.azure.core.util.MetricsOptions&text=MetricsOptions\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.CosmosMicrometerMetricsOptions()"
  fullName: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.CosmosMicrometerMetricsOptions()"
  name: "CosmosMicrometerMetricsOptions()"
  nameWithType: "CosmosMicrometerMetricsOptions.CosmosMicrometerMetricsOptions()"
  summary: "Instantiates new Micrometer-specific Azure Cosmos DB SDK metrics options"
  syntax: "public CosmosMicrometerMetricsOptions()"
  desc: "Instantiates new Micrometer-specific Azure Cosmos DB SDK metrics options"
methods:
- uid: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.addMetricCategories(com.azure.cosmos.models.CosmosMetricCategory...)"
  fullName: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.addMetricCategories(CosmosMetricCategory[] categories)"
  name: "addMetricCategories(CosmosMetricCategory[] categories)"
  nameWithType: "CosmosMicrometerMetricsOptions.addMetricCategories(CosmosMetricCategory[] categories)"
  summary: "Adds categories of metrics that should be emitted."
  parameters:
  - description: "- a comma-separated list of metric categories that should be emitted"
    name: "categories"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMetricCategory?alt=com.azure.cosmos.models.CosmosMetricCategory&text=CosmosMetricCategory\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CosmosMicrometerMetricsOptions addMetricCategories(CosmosMetricCategory[] categories)"
  desc: "Adds categories of metrics that should be emitted. By default the following categories will be enabled: OperationSummary (required), RequestSummary, DirectChannels, DirectRequests, System (required) (the System and OperationSummary metrics are always collected and can't be disabled when enabling Cosmos metrics) An overview of the different metric categories can be found here: https://aka.ms/azure-cosmos-metrics NOTE: metric categories are mutable. You can safely modify the categories on the CosmosClientTelemetryConfig instance passed into the CosmosClientBuilder after the CosmosClient was created - and changes to the config instance will be reflected at runtime by the client."
  returns:
    description: "current CosmosMicrometerMetricsOptions instance"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMicrometerMetricsOptions?alt=com.azure.cosmos.models.CosmosMicrometerMetricsOptions&text=CosmosMicrometerMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.configureDefaultPercentiles(double...)"
  fullName: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.configureDefaultPercentiles(double[] percentiles)"
  name: "configureDefaultPercentiles(double[] percentiles)"
  nameWithType: "CosmosMicrometerMetricsOptions.configureDefaultPercentiles(double[] percentiles)"
  summary: "Sets the default percentiles that should be captured for metrics (where applicable) unless overridden for a specific meter in its <xref uid=\"com.azure.cosmos.models.CosmosMicrometerMeterOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosMicrometerMeterOptions\"></xref> By default percentiles 0.95 and 0.99 are captured."
  parameters:
  - description: "- the default percentiles to be captured (when they are applicable to a specific meter and\n     there is no override in <xref uid=\"com.azure.cosmos.models.CosmosMicrometerMeterOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosMicrometerMeterOptions\"></xref> for that meter."
    name: "percentiles"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CosmosMicrometerMetricsOptions configureDefaultPercentiles(double[] percentiles)"
  desc: "Sets the default percentiles that should be captured for metrics (where applicable) unless overridden for a specific meter in its <xref uid=\"com.azure.cosmos.models.CosmosMicrometerMeterOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosMicrometerMeterOptions\"></xref> By default percentiles 0.95 and 0.99 are captured. If percentiles is null or empty no percentiles will be captured."
  returns:
    description: "current CosmosMicrometerMetricsOptions instance"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMicrometerMetricsOptions?alt=com.azure.cosmos.models.CosmosMicrometerMetricsOptions&text=CosmosMicrometerMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.configureDefaultTagNames(com.azure.cosmos.models.CosmosMetricTagName...)"
  fullName: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.configureDefaultTagNames(CosmosMetricTagName[] tags)"
  name: "configureDefaultTagNames(CosmosMetricTagName[] tags)"
  nameWithType: "CosmosMicrometerMetricsOptions.configureDefaultTagNames(CosmosMetricTagName[] tags)"
  summary: "Sets the default tags that should be used for metrics (where applicable) unless overridden for a specific meter in its <xref uid=\"com.azure.cosmos.models.CosmosMicrometerMeterOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosMicrometerMeterOptions\"></xref> By default all applicable tags are added for each metric."
  parameters:
  - description: "- the default tags to be used (when they are applicable to a specific meter and there is no\n     override in <xref uid=\"com.azure.cosmos.models.CosmosMicrometerMeterOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosMicrometerMeterOptions\"></xref> for that meter."
    name: "tags"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMetricTagName?alt=com.azure.cosmos.models.CosmosMetricTagName&text=CosmosMetricTagName\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CosmosMicrometerMetricsOptions configureDefaultTagNames(CosmosMetricTagName[] tags)"
  desc: "Sets the default tags that should be used for metrics (where applicable) unless overridden for a specific meter in its <xref uid=\"com.azure.cosmos.models.CosmosMicrometerMeterOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosMicrometerMeterOptions\"></xref> By default all applicable tags are added for each metric. Adding tags/dimensions especially with high cardinality has some overhead - so, this method allows modifying the set of tags to be applied when some are not relevant in a certain use case."
  returns:
    description: "current CosmosMicrometerMetricsOptions instance"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMicrometerMetricsOptions?alt=com.azure.cosmos.models.CosmosMicrometerMetricsOptions&text=CosmosMicrometerMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.configureMeter(com.azure.cosmos.models.CosmosMetricName,com.azure.cosmos.models.CosmosMicrometerMeterOptions)"
  fullName: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.configureMeter(CosmosMetricName meterName, CosmosMicrometerMeterOptions options)"
  name: "configureMeter(CosmosMetricName meterName, CosmosMicrometerMeterOptions options)"
  nameWithType: "CosmosMicrometerMetricsOptions.configureMeter(CosmosMetricName meterName, CosmosMicrometerMeterOptions options)"
  summary: "Allows overriding meter-specific options."
  parameters:
  - description: "the meter name"
    name: "meterName"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMetricName?alt=com.azure.cosmos.models.CosmosMetricName&text=CosmosMetricName\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options to be overridden"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMicrometerMeterOptions?alt=com.azure.cosmos.models.CosmosMicrometerMeterOptions&text=CosmosMicrometerMeterOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosMicrometerMetricsOptions configureMeter(CosmosMetricName meterName, CosmosMicrometerMeterOptions options)"
  desc: "Allows overriding meter-specific options."
  returns:
    description: "current CosmosMicrometerMetricsOptions instance"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMicrometerMetricsOptions?alt=com.azure.cosmos.models.CosmosMicrometerMetricsOptions&text=CosmosMicrometerMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.enableHistogramsByDefault(boolean)"
  fullName: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.enableHistogramsByDefault(boolean publishHistograms)"
  name: "enableHistogramsByDefault(boolean publishHistograms)"
  nameWithType: "CosmosMicrometerMetricsOptions.enableHistogramsByDefault(boolean publishHistograms)"
  summary: "Sets a flag indicating whether by default histograms should be published for metrics (where applicable) unless overridden for a specific meter in its <xref uid=\"com.azure.cosmos.models.CosmosMicrometerMeterOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosMicrometerMeterOptions\"></xref> By default histograms are published."
  parameters:
  - description: "-  a flag indicating whether by default histograms should be published for metrics\n     (when they are applicable to a specific meter and there is no override in <xref uid=\"com.azure.cosmos.models.CosmosMicrometerMeterOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosMicrometerMeterOptions\"></xref> for\n     that meter."
    name: "publishHistograms"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosMicrometerMetricsOptions enableHistogramsByDefault(boolean publishHistograms)"
  desc: "Sets a flag indicating whether by default histograms should be published for metrics (where applicable) unless overridden for a specific meter in its <xref uid=\"com.azure.cosmos.models.CosmosMicrometerMeterOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosMicrometerMeterOptions\"></xref> By default histograms are published. Publishing histograms has its overhead - so, this method allows disabling histograms by default."
  returns:
    description: "current CosmosMicrometerMetricsOptions instance"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMicrometerMetricsOptions?alt=com.azure.cosmos.models.CosmosMicrometerMetricsOptions&text=CosmosMicrometerMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.meterRegistry(io.micrometer.core.instrument.MeterRegistry)"
  fullName: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.meterRegistry(MeterRegistry clientMetricMeterRegistry)"
  name: "meterRegistry(MeterRegistry clientMetricMeterRegistry)"
  nameWithType: "CosmosMicrometerMetricsOptions.meterRegistry(MeterRegistry clientMetricMeterRegistry)"
  summary: "Sets Metric<wbr>Registry to be used to emit client metrics"
  parameters:
  - description: "- the MetricRegistry to be used to emit client metrics"
    name: "clientMetricMeterRegistry"
    type: "<xref href=\"io.micrometer.core.instrument.MeterRegistry?alt=io.micrometer.core.instrument.MeterRegistry&text=MeterRegistry\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosMicrometerMetricsOptions meterRegistry(MeterRegistry clientMetricMeterRegistry)"
  desc: "Sets MetricRegistry to be used to emit client metrics"
  returns:
    description: "current CosmosMicrometerMetricsOptions instance"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMicrometerMetricsOptions?alt=com.azure.cosmos.models.CosmosMicrometerMetricsOptions&text=CosmosMicrometerMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.removeMetricCategories(com.azure.cosmos.models.CosmosMetricCategory...)"
  fullName: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.removeMetricCategories(CosmosMetricCategory[] categories)"
  name: "removeMetricCategories(CosmosMetricCategory[] categories)"
  nameWithType: "CosmosMicrometerMetricsOptions.removeMetricCategories(CosmosMetricCategory[] categories)"
  summary: "Removes categories of metrics that should be emitted."
  parameters:
  - description: "- a comma-separated list of metric categories that should be emitted"
    name: "categories"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMetricCategory?alt=com.azure.cosmos.models.CosmosMetricCategory&text=CosmosMetricCategory\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CosmosMicrometerMetricsOptions removeMetricCategories(CosmosMetricCategory[] categories)"
  desc: "Removes categories of metrics that should be emitted. By default the following categories will be enabled: OperationSummary (required), RequestSummary, DirectChannels, DirectRequests, System (required) (the System and OperationSummary metrics are always collected and can't be disabled when enabling Cosmos metrics) An overview of the different metric categories can be found here: https://aka.ms/azure-cosmos-metrics NOTE: metric categories are mutable. You can safely modify the categories on the CosmosClientTelemetryConfig instance passed into the CosmosClientBuilder after the CosmosClient was created - and changes to the config instance will be reflected at runtime by the client."
  returns:
    description: "current CosmosMicrometerMetricsOptions instance"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMicrometerMetricsOptions?alt=com.azure.cosmos.models.CosmosMicrometerMetricsOptions&text=CosmosMicrometerMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.setEnabled(boolean)"
  fullName: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.setEnabled(boolean enabled)"
  name: "setEnabled(boolean enabled)"
  nameWithType: "CosmosMicrometerMetricsOptions.setEnabled(boolean enabled)"
  overridden: "com.azure.core.util.MetricsOptions.setEnabled(boolean)"
  parameters:
  - name: "enabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosMicrometerMetricsOptions setEnabled(boolean enabled)"
  returns:
    type: "<xref href=\"com.azure.cosmos.models.CosmosMicrometerMetricsOptions?alt=com.azure.cosmos.models.CosmosMicrometerMetricsOptions&text=CosmosMicrometerMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.setMetricCategories(com.azure.cosmos.models.CosmosMetricCategory...)"
  fullName: "com.azure.cosmos.models.CosmosMicrometerMetricsOptions.setMetricCategories(CosmosMetricCategory[] categories)"
  name: "setMetricCategories(CosmosMetricCategory[] categories)"
  nameWithType: "CosmosMicrometerMetricsOptions.setMetricCategories(CosmosMetricCategory[] categories)"
  summary: "Sets the categories of metrics that should be emitted."
  parameters:
  - description: "- a comma-separated list of metric categories that should be emitted"
    name: "categories"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMetricCategory?alt=com.azure.cosmos.models.CosmosMetricCategory&text=CosmosMetricCategory\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CosmosMicrometerMetricsOptions setMetricCategories(CosmosMetricCategory[] categories)"
  desc: "Sets the categories of metrics that should be emitted. By default the following categories will be enabled: OperationSummary (required), RequestSummary, DirectChannels, DirectRequests, System (required) (the System and OperationSummary metrics are always collected and can't be disabled when enabling Cosmos metrics) For most use-cases that should be sufficient. An overview of the different metric categories can be found here: https://aka.ms/azure-cosmos-metrics NOTE: metric categories are mutable. You can safely modify the categories on the CosmosClientTelemetryConfig instance passed into the CosmosClientBuilder after the CosmosClient was created - and changes to the config instance will be reflected at runtime by the client."
  returns:
    description: "current CosmosMicrometerMetricsOptions instance"
    type: "<xref href=\"com.azure.cosmos.models.CosmosMicrometerMetricsOptions?alt=com.azure.cosmos.models.CosmosMicrometerMetricsOptions&text=CosmosMicrometerMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Micrometer-specific Azure Cosmos DB SDK metrics options"
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.44.0
