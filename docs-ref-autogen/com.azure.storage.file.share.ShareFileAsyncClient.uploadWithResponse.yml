### YamlMime:JavaMember
uid: "com.azure.storage.file.share.ShareFileAsyncClient.uploadWithResponse*"
fullName: "com.azure.storage.file.share.ShareFileAsyncClient.uploadWithResponse"
name: "uploadWithResponse"
nameWithType: "ShareFileAsyncClient.uploadWithResponse"
members:
- uid: "com.azure.storage.file.share.ShareFileAsyncClient.uploadWithResponse(reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Long)"
  fullName: "com.azure.storage.file.share.ShareFileAsyncClient.uploadWithResponse(Flux<ByteBuffer> data, long length, Long offset)"
  name: "uploadWithResponse(Flux<ByteBuffer> data, long length, Long offset)"
  nameWithType: "ShareFileAsyncClient.uploadWithResponse(Flux<ByteBuffer> data, long length, Long offset)"
  summary: "Uploads a range of bytes to specific of a file in storage file service. Upload operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nUpload the file from 1024 to 2048 bytes with its metadata and properties and without the contentMD5.\n\n```java\nByteBuffer defaultData = ByteBuffer.wrap(\"default\".getBytes(StandardCharsets.UTF_8));\n shareFileAsyncClient.uploadWithResponse(Flux.just(defaultData), defaultData.remaining(), 0L).subscribe(\n     response -> { },\n     error -> System.err.print(error.toString()),\n     () -> System.out.println(\"Complete deleting the file!\")\n );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  parameters:
  - description: "The data which will upload to the storage file."
    name: "data"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Specifies the number of bytes being transmitted in the request body. When the\n ShareFileRangeWriteType is set to clear, the value of this header must be set to zero."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional starting point of the upload range. It will start from the beginning if it is\n <code>null</code>."
    name: "offset"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<ShareFileUploadInfo>> uploadWithResponse(Flux<ByteBuffer> data, long length, Long offset)"
  returns:
    description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"file upload info\"></xref> with headers and response\n status code."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareFileUploadInfo?alt=com.azure.storage.file.share.models.ShareFileUploadInfo&text=ShareFileUploadInfo\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.storage.file.share.ShareFileAsyncClient.uploadWithResponse(reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.Long,com.azure.storage.file.share.models.ShareRequestConditions)"
  fullName: "com.azure.storage.file.share.ShareFileAsyncClient.uploadWithResponse(Flux<ByteBuffer> data, long length, Long offset, ShareRequestConditions requestConditions)"
  name: "uploadWithResponse(Flux<ByteBuffer> data, long length, Long offset, ShareRequestConditions requestConditions)"
  nameWithType: "ShareFileAsyncClient.uploadWithResponse(Flux<ByteBuffer> data, long length, Long offset, ShareRequestConditions requestConditions)"
  summary: "Uploads a range of bytes to specific of a file in storage file service. Upload operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nUpload the file from 1024 to 2048 bytes with its metadata and properties and without the contentMD5.\n\n```java\nShareRequestConditions requestConditions = new ShareRequestConditions().setLeaseId(leaseId);\n ByteBuffer defaultData = ByteBuffer.wrap(\"default\".getBytes(StandardCharsets.UTF_8));\n shareFileAsyncClient.uploadWithResponse(Flux.just(defaultData), defaultData.remaining(), 0L, requestConditions)\n     .subscribe(\n         response -> { },\n         error -> System.err.print(error.toString()),\n         () -> System.out.println(\"Complete deleting the file!\")\n     );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  parameters:
  - description: "The data which will upload to the storage file."
    name: "data"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Specifies the number of bytes being transmitted in the request body. When the\n ShareFileRangeWriteType is set to clear, the value of this header must be set to zero."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional starting point of the upload range. It will start from the beginning if it is\n <code>null</code>."
    name: "offset"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.file.share.models.ShareRequestConditions?alt=com.azure.storage.file.share.models.ShareRequestConditions&text=ShareRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<ShareFileUploadInfo>> uploadWithResponse(Flux<ByteBuffer> data, long length, Long offset, ShareRequestConditions requestConditions)"
  returns:
    description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"file upload info\"></xref> with headers and response\n status code."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareFileUploadInfo?alt=com.azure.storage.file.share.models.ShareFileUploadInfo&text=ShareFileUploadInfo\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.share"
artifact: com.azure:azure-storage-file-share:12.8.0
