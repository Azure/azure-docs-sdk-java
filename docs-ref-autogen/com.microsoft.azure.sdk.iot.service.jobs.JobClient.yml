### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  id: JobClient
  parent: com.microsoft.azure.sdk.iot.service.jobs
  children:
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob(String)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.createFromConnectionString(String)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob(String)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.getNextJob(Query)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob(Query)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.JobClient()
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob(String)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob(String,Integer)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(JobType,JobStatus)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(JobType,JobStatus,Integer)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleDeviceMethod(String,String,String,Long,Long,Object,Date,long)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin(String,String,DeviceTwinDevice,Date,long)
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: JobClient
  nameWithType: JobClient
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 25
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: "<p>JobClient enables service client to schedule and cancel jobs for a group of devices using the IoTHub. </p>"
  syntax: &o1
    content: public class JobClient
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob(String)
  id: cancelJob(String)
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: cancelJob(String jobId)
  nameWithType: JobClient.cancelJob(String jobId)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob(String jobId)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 252
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: "<p>Cancel a current jod on the IoTHub</p>\r\n<p></p>"
  syntax:
    content: public synchronized JobResult cancelJob(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>Unique Job Id for this job </p>
    return:
      type: cffad4f2com.microsoft.azure.sdk.iot.service.jobs.JobResult
      description: <p>a jobResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>if the jobId is invalid </p>
  - type: cbf33bbe
    description: <p>if the function cannot create a URL for the job, or the IO failed on request </p>
  - type: 0d494ee6
    description: <p>if the http request failed </p>
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.createFromConnectionString(String)
  id: createFromConnectionString(String)
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: createFromConnectionString(String connectionString)
  nameWithType: JobClient.createFromConnectionString(String connectionString)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.createFromConnectionString(String connectionString)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.createFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 43
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: "<p>Static constructor to create instance from connection string</p>\r\n<p></p>"
  syntax:
    content: public static JobClient createFromConnectionString(String connectionString)
    parameters:
    - id: connectionString
      type: "26831127"
      description: <p>The iot hub connection string </p>
    return:
      type: com.microsoft.azure.sdk.iot.service.jobs.JobClient
      description: <p>The instance of JobClient </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the object creation failed </p>
  - type: 3c87bd19
    description: >-
      <p>if the provided connectionString is<code>nullÂ 

          </code> or empty </p>
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob(String)
  id: getJob(String)
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: getJob(String jobId)
  nameWithType: JobClient.getJob(String jobId)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob(String jobId)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 213
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: "<p>Get the current job on the iotHub.</p>\r\n<p></p>"
  syntax:
    content: public synchronized JobResult getJob(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>Unique Job Id for this job </p>
    return:
      type: cffad4f2com.microsoft.azure.sdk.iot.service.jobs.JobResult
      description: <p>a jobResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>if the jobId is invalid </p>
  - type: cbf33bbe
    description: <p>if the function cannot create a URL for the job, or the IO failed on request </p>
  - type: 0d494ee6
    description: <p>if the http request failed </p>
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getNextJob(Query)
  id: getNextJob(Query)
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: getNextJob(Query query)
  nameWithType: JobClient.getNextJob(Query query)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getNextJob(Query query)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getNextJob*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 404
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: "<p>returns the next job result in response. Query's further if page size has been met and has next is not called </p>"
  syntax:
    content: public synchronized JobResult getNextJob(Query query)
    parameters:
    - id: query
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: <p>Query for which to look for next job response by </p>
    return:
      type: cffad4f2com.microsoft.azure.sdk.iot.service.jobs.JobResult
      description: <p>next job result if available </p>
  exceptions:
  - type: 0d494ee6
    description: <p>When IotHub fails to respond </p>
  - type: cbf33bbe
    description: <p>if any of the input parameters are incorrect </p>
  - type: 05807805
    description: <p>if called when no further responses are left </p>
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob(Query)
  id: hasNextJob(Query)
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: hasNextJob(Query query)
  nameWithType: JobClient.hasNextJob(Query query)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob(Query query)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 385
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: "<p>returns the availability of next job result in response. Query's further if page size has been met </p>"
  syntax:
    content: public synchronized boolean hasNextJob(Query query)
    parameters:
    - id: query
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: <p>Query for which to look for next job response by </p>
    return:
      type: 85b427c6
      description: <p>true if next job result is available , false otherwise </p>
  exceptions:
  - type: 0d494ee6
    description: <p>When IotHub fails to respond </p>
  - type: cbf33bbe
    description: <p>if any of the input parameters are incorrect </p>
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.JobClient()
  id: JobClient()
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: JobClient()
  nameWithType: JobClient.JobClient()
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.JobClient()
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.JobClient*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 468
  package: com.microsoft.azure.sdk.iot.service.jobs
  syntax:
    content: protected JobClient()
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob(String)
  id: queryDeviceJob(String)
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: queryDeviceJob(String sqlQuery)
  nameWithType: JobClient.queryDeviceJob(String sqlQuery)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob(String sqlQuery)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 372
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: "<p>Query for device Job limited by default page size of 100 for response </p>"
  syntax:
    content: public synchronized Query queryDeviceJob(String sqlQuery)
    parameters:
    - id: sqlQuery
      type: "26831127"
      description: <p>sql style query over device.jobs </p>
    return:
      type: cffad4f2com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: <p>Query object for this query </p>
  exceptions:
  - type: 0d494ee6
    description: <p>When IotHub fails to respond </p>
  - type: cbf33bbe
    description: <p>When any of the parameters are incorrect </p>
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob(String,Integer)
  id: queryDeviceJob(String,Integer)
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: queryDeviceJob(String sqlQuery, Integer pageSize)
  nameWithType: JobClient.queryDeviceJob(String sqlQuery, Integer pageSize)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob(String sqlQuery, Integer pageSize)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 343
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: "<p>Query for device Job </p>"
  syntax:
    content: public synchronized Query queryDeviceJob(String sqlQuery, Integer pageSize)
    parameters:
    - id: sqlQuery
      type: "26831127"
      description: <p>sql style query over device.jobs </p>
    - id: pageSize
      type: 08effaa0
      description: <p>the value per which to limit the size of query response by. </p>
    return:
      type: cffad4f2com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: <p>Query object for this query </p>
  exceptions:
  - type: 0d494ee6
    description: <p>When IotHub fails to respond </p>
  - type: cbf33bbe
    description: <p>When any of the parameters are incorrect </p>
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(JobType,JobStatus)
  id: queryJobResponse(JobType,JobStatus)
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: queryJobResponse(JobType jobType, JobStatus jobStatus)
  nameWithType: JobClient.queryJobResponse(JobType jobType, JobStatus jobStatus)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(JobType jobType, JobStatus jobStatus)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 461
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: "<p>Query the iot hub for a jobs response. Query response are limited by default page size per attempt </p>"
  syntax:
    content: public synchronized Query queryJobResponse(JobType jobType, JobStatus jobStatus)
    parameters:
    - id: jobType
      type: com.microsoft.azure.sdk.iot.service.jobs.JobType
      description: <p>The type of job to query for </p>
    - id: jobStatus
      type: com.microsoft.azure.sdk.iot.service.jobs.JobStatus
      description: <p>The status of the job to query for </p>
    return:
      type: cffad4f2com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: <p>A query object on which to look for responses by </p>
  exceptions:
  - type: cbf33bbe
    description: <p>If any of the input parameters are incorrect </p>
  - type: 0d494ee6
    description: <p>If IotHub failed to respond </p>
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(JobType,JobStatus,Integer)
  id: queryJobResponse(JobType,JobStatus,Integer)
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: queryJobResponse(JobType jobType, JobStatus jobStatus, Integer pageSize)
  nameWithType: JobClient.queryJobResponse(JobType jobType, JobStatus jobStatus, Integer pageSize)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(JobType jobType, JobStatus jobStatus, Integer pageSize)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 436
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: "<p>Query the iot hub for a jobs response. Query response are limited by page size per attempt </p>"
  syntax:
    content: public synchronized Query queryJobResponse(JobType jobType, JobStatus jobStatus, Integer pageSize)
    parameters:
    - id: jobType
      type: com.microsoft.azure.sdk.iot.service.jobs.JobType
      description: <p>The type of job to query for </p>
    - id: jobStatus
      type: com.microsoft.azure.sdk.iot.service.jobs.JobStatus
      description: <p>The status of the job to query for </p>
    - id: pageSize
      type: 08effaa0
      description: <p>The value to which to limit the job response size by </p>
    return:
      type: cffad4f2com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: <p>A query object on which to look for responses by </p>
  exceptions:
  - type: cbf33bbe
    description: <p>If any of the input parameters are incorrect </p>
  - type: 0d494ee6
    description: <p>If IotHub failed to respond </p>
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleDeviceMethod(String,String,String,Long,Long,Object,Date,long)
  id: scheduleDeviceMethod(String,String,String,Long,Long,Object,Date,long)
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: scheduleDeviceMethod(String jobId, String queryCondition, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload, Date startTimeUtc, long maxExecutionTimeInSeconds)
  nameWithType: JobClient.scheduleDeviceMethod(String jobId, String queryCondition, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload, Date startTimeUtc, long maxExecutionTimeInSeconds)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleDeviceMethod(String jobId, String queryCondition, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload, Date startTimeUtc, long maxExecutionTimeInSeconds)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleDeviceMethod*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 146
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: "<p>Creates a new Job to invoke method on one or multiple devices</p>\r\n<p></p>"
  syntax:
    content: public synchronized JobResult scheduleDeviceMethod(String jobId, String queryCondition, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload, Date startTimeUtc, long maxExecutionTimeInSeconds)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>Unique Job Id for this job </p>
    - id: queryCondition
      type: "26831127"
      description: >-
        <p>Query condition to evaluate which devices to run the job on. It can be<code>nullÂ 

            </code> or empty </p>
    - id: methodName
      type: "26831127"
      description: <p>Method name to be invoked </p>
    - id: responseTimeoutInSeconds
      type: 34f09483
      description: >-
        <p>Maximum interval of time, in seconds, that the Direct Method will wait for answer. It can be<code>nullÂ 

            </code> . </p>
    - id: connectTimeoutInSeconds
      type: 34f09483
      description: >-
        <p>Maximum interval of time, in seconds, that the Direct Method will wait for the connection. It can be<code>nullÂ 

            </code> . </p>
    - id: payload
      type: "79317049"
      description: >-
        <p>Object that contains the payload defined by the user. It can be<code>nullÂ 

            </code> . </p>
    - id: startTimeUtc
      type: "12977444"
      description: <p>Date time in Utc to start the job </p>
    - id: maxExecutionTimeInSeconds
      type: 0364520f
      description: <p>Max execution time in seconds, i.e., ttl duration the job can run </p>
    return:
      type: cffad4f2com.microsoft.azure.sdk.iot.service.jobs.JobResult
      description: <p>a jobResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>if one of the provided parameters is invalid </p>
  - type: cbf33bbe
    description: <p>if the function cannot create a URL for the job, or the IO failed on request </p>
  - type: 0d494ee6
    description: <p>if the http request failed </p>
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin(String,String,DeviceTwinDevice,Date,long)
  id: scheduleUpdateTwin(String,String,DeviceTwinDevice,Date,long)
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  langs:
  - java
  name: scheduleUpdateTwin(String jobId, String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)
  nameWithType: JobClient.scheduleUpdateTwin(String jobId, String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin(String jobId, String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java
    startLine: 73
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: "<p>Creates a new Job to update twin tags and desired properties on one or multiple devices</p>\r\n<p></p>"
  syntax:
    content: public synchronized JobResult scheduleUpdateTwin(String jobId, String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>Unique Job Id for this job </p>
    - id: queryCondition
      type: "26831127"
      description: >-
        <p>Query condition to evaluate which devices to run the job on. It can be<code>nullÂ 

            </code> or empty </p>
    - id: updateTwin
      type: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
      description: <p>Twin object to use for the update </p>
    - id: startTimeUtc
      type: "12977444"
      description: <p>Date time in Utc to start the job </p>
    - id: maxExecutionTimeInSeconds
      type: 0364520f
      description: <p>Max execution time in seconds, i.e., ttl duration the job can run </p>
    return:
      type: cffad4f2com.microsoft.azure.sdk.iot.service.jobs.JobResult
      description: <p>a jobResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>if one of the provided parameters is invalid </p>
  - type: cbf33bbe
    description: <p>if the function cannot create a URL for the job </p>
  - type: 0d494ee6
    description: <p>if the http request failed </p>
references:
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.createFromConnectionString*
  name: createFromConnectionString
  nameWithType: JobClient.createFromConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.createFromConnectionString
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: 0d494ee6
  spec.java:
  - name: IotHubException
    fullName: IotHubException
- uid: "12977444"
  spec.java:
  - name: Date
    fullName: Date
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: cffad4f2com.microsoft.azure.sdk.iot.service.jobs.JobResult
  spec.java:
  - name: 'synchronized '
    fullName: 'synchronized '
  - uid: com.microsoft.azure.sdk.iot.service.jobs.JobResult
    name: JobResult
    fullName: com.microsoft.azure.sdk.iot.service.jobs.JobResult
    href: com.microsoft.azure.sdk.iot.service.jobs.JobResult.yml
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin*
  name: scheduleUpdateTwin
  nameWithType: JobClient.scheduleUpdateTwin
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: 34f09483
  spec.java:
  - name: Long
    fullName: Long
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleDeviceMethod*
  name: scheduleDeviceMethod
  nameWithType: JobClient.scheduleDeviceMethod
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleDeviceMethod
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob*
  name: getJob
  nameWithType: JobClient.getJob
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob*
  name: cancelJob
  nameWithType: JobClient.cancelJob
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: cffad4f2com.microsoft.azure.sdk.iot.service.devicetwin.Query
  spec.java:
  - name: 'synchronized '
    fullName: 'synchronized '
  - uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query
    name: Query
    fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query
    href: com.microsoft.azure.sdk.iot.service.devicetwin.Query.yml
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob*
  name: queryDeviceJob
  nameWithType: JobClient.queryDeviceJob
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: 85b427c6
  spec.java:
  - name: synchronized boolean
    fullName: synchronized boolean
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob*
  name: hasNextJob
  nameWithType: JobClient.hasNextJob
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: 05807805
  spec.java:
  - name: NoSuchElementException
    fullName: NoSuchElementException
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getNextJob*
  name: getNextJob
  nameWithType: JobClient.getNextJob
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getNextJob
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse*
  name: queryJobResponse
  nameWithType: JobClient.queryJobResponse
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.JobClient*
  name: JobClient
  nameWithType: JobClient.JobClient
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.JobClient
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service.IotHubConnectionString.yml
  name: IotHubConnectionString
  nameWithType: IotHubConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
  type: Class
  summary: "<p>Expose all connections string properties and methods for user, device and connection string serialization. </p>"
  syntax:
    content: public class IotHubConnectionString extends IotHubConnectionStringBuilder
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  parent: com.microsoft.azure.sdk.iot.service.jobs
  href: com.microsoft.azure.sdk.iot.service.jobs.JobClient.yml
  name: JobClient
  nameWithType: JobClient
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  type: Class
  summary: "<p>JobClient enables service client to schedule and cancel jobs for a group of devices using the IoTHub. </p>"
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobResult
  parent: com.microsoft.azure.sdk.iot.service.jobs
  href: com.microsoft.azure.sdk.iot.service.jobs.JobResult.yml
  name: JobResult
  nameWithType: JobResult
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobResult
  type: Class
  summary: "<p>Collection with the result of a job operation. </p>"
  syntax:
    content: public class JobResult
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  parent: com.microsoft.azure.sdk.iot.service.devicetwin
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: DeviceTwinDevice
  nameWithType: DeviceTwinDevice
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  type: Class
  summary: "<p>The DeviceTwinDevice class represent the twin on iotHub. implementing constructors and serialization functionality. If object is a representation of the module twin if and only if the moduleId is set. </p>"
  syntax:
    content: public class DeviceTwinDevice
- uid: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  parent: com.microsoft.azure.sdk.iot.service.exceptions
  href: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException.yml
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  type: Class
  summary: "<p>Super class for IotHub exceptions </p>"
  syntax:
    content: public class IotHubException
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query
  parent: com.microsoft.azure.sdk.iot.service.devicetwin
  href: com.microsoft.azure.sdk.iot.service.devicetwin.Query.yml
  name: Query
  nameWithType: Query
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query
  type: Class
  syntax:
    content: public class Query
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobType
  parent: com.microsoft.azure.sdk.iot.service.jobs
  href: com.microsoft.azure.sdk.iot.service.jobs.JobType.yml
  name: JobType
  nameWithType: JobType
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobType
  type: Enum
  syntax:
    content: public enum JobType
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobStatus
  parent: com.microsoft.azure.sdk.iot.service.jobs
  href: com.microsoft.azure.sdk.iot.service.jobs.JobStatus.yml
  name: JobStatus
  nameWithType: JobStatus
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobStatus
  type: Enum
  syntax:
    content: public enum JobStatus
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  parent: com.microsoft.azure.sdk.iot.deps.twin
  href: com.microsoft.azure.sdk.iot.deps.twin.TwinState.yml
  name: TwinState
  nameWithType: TwinState
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinState
  type: Class
  summary: "<p>Representation of a single Twin.</p>\r\n<p>The TwinState can contain one <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinCollection\"></xref> of <b>Tags</b>, and one <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinCollection\"></xref> of <b>properties.desired</b>.</p>\r\n<p>Each entity in the collections can contain a associated <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata\"></xref>.</p>\r\n<p>These metadata are provided by the Service and contains information about the last updated date time, and version.</p>\r\n<p>For instance, the following is a valid TwinState, represented as <code>initialTwinÂ \r\n    </code> in the rest API. <pre><code>{\r\n    Â Â Â Â \"initialTwin\":Â {\r\n    Â Â Â Â Â Â Â Â \"tags\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â \"SpeedUnity\":\"MPH\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â \"$metadata\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4,\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"SpeedUnity\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â }\r\n    Â Â Â Â Â Â Â Â Â Â Â Â },\r\n    Â Â Â Â Â Â Â Â Â Â Â Â \"$version\":4\r\n    Â Â Â Â Â Â Â Â },\r\n    Â Â Â Â Â Â Â Â \"properties\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â \"desired\":Â {\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"MaxSpeed\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"Value\":500,\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"NewValue\":300\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â },\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$metadata\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4,\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"MaxSpeed\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4,\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"Value\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â },\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"NewValue\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â }\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â }\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â },\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$version\":4\r\n    Â Â Â Â Â Â Â Â Â Â Â Â },\r\n    Â Â Â Â Â Â Â Â Â Â Â Â \"reported\":Â {\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"MaxSpeed\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"Value\":500,\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"NewValue\":300\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â },\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$metadata\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":5,\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"MaxSpeed\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4,\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"Value\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":5\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â },\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"NewValue\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â }\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â }\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â },\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$version\":6\r\n    Â Â Â Â Â Â Â Â Â Â Â Â }\r\n    Â Â Â Â Â Â Â Â }\r\n    Â Â Â Â }\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class TwinState
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
  parent: com.microsoft.azure.sdk.iot.deps.twin
  href: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.yml
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
  type: Class
  summary: "<p>Representation of a single Twin collection.</p>\r\n<p>The TwinCollection is an extension of a<code>HashMapÂ \r\n    </code> of<code>StringÂ \r\n    </code> and <code>ObjectÂ \r\n    </code> that contain individual and general versioning mechanism.</p>\r\n<p>By the Twin definition, the<code>ObjectÂ \r\n    </code> can contain types of<code>BooleanÂ \r\n    </code> , <code>NumberÂ \r\n    </code> ,<code>StringÂ \r\n    </code> ,<code>ObjectÂ \r\n    </code> , or a sub-TwinCollection, but it cannot be types defined by the user or arrays.</p>\r\n<p>A TwinCollection can contain up to 5 levels of sub TwinCollections. Once the TwinCollection is a extension of the<code>HashMapÂ \r\n    </code> , both TwinCollection as well as its sub-TwinCollections can be casted to Map of String and Object.</p>\r\n<p>The collection will be represented in the rest API as a JSON in the body. It can or cannot contain the metadata (identified by the <b>$</b> character at the beginning of the key.</p>\r\n<p>Because of the Twin metadata, the character <b>$</b> is not allowed in the entry key.</p>\r\n<p>For instance, the following JSON is a valid TwinCollection with its metadata. <pre><code>{\r\n    Â Â Â Â \"Color\":\"White\",\r\n    Â Â Â Â \"MaxSpeed\":{\r\n    Â Â Â Â Â Â Â Â \"Value\":500,\r\n    Â Â Â Â Â Â Â Â \"NewValue\":300\r\n    Â Â Â Â },\r\n    Â Â Â Â \"$metadata\":{\r\n    Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4,\r\n    Â Â Â Â Â Â Â Â \"Color\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4,\r\n    Â Â Â Â Â Â Â Â },\r\n    Â Â Â Â Â Â Â Â \"MaxSpeed\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4,\r\n    Â Â Â Â Â Â Â Â Â Â Â Â \"Value\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4\r\n    Â Â Â Â Â Â Â Â Â Â Â Â },\r\n    Â Â Â Â Â Â Â Â Â Â Â Â \"NewValue\":{\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"$lastUpdatedVersion\":4\r\n    Â Â Â Â Â Â Â Â Â Â Â Â }\r\n    Â Â Â Â Â Â Â Â }\r\n    Â Â Â Â },\r\n    Â Â Â Â \"$version\":4\r\n    }\r\n    </code></pre></p>\r\n<p>This class exposes the Twin collection with or without metadata as a Map here user can gat both the value and the metadata. For instance, in the above TwinCollection, <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"get(Object)\"></xref> for <b>Color</b> will return <b>White</b> and the <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadataFinal(String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getTwinMetadataFinal(String)\"></xref> for <b>Color</b> will return the Object TwinMetadata that contain <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata.getLastUpdated()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata#getLastUpdated()\"></xref> that will returns the<code>DateÂ \r\n    </code><b>2017-09-21T02:07:44.238Z</b> and <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata.getLastUpdatedVersion()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TwinMetadata#getLastUpdatedVersion()\"></xref> that will returns the<code>IntegerÂ \r\n    </code><b>4</b>.</p>\r\n<p>For the nested TwinCollection, you can do the same, for instance, the following code will return the value and metadata of the <b>NewValue</b> nested in <b>MaxSpeed</b>: <pre><code>//Â GetÂ theÂ valueÂ ofÂ theÂ MaxSpeed,Â whichÂ isÂ aÂ innerÂ TwinCollection.\r\n    TwinCollectionÂ innerMaxSpeedÂ =Â (TwinCollection)Â twinCollection.get(\"MaxSpeed\");\r\n    \r\n    //Â FromÂ theÂ innerÂ TwinCollection,Â getÂ theÂ valueÂ ofÂ theÂ NewValue.\r\n    LongÂ maxSpeedNewValueÂ =Â innerMaxSpeed.get(\"NewValue\");\r\n    \r\n    //Â AsÂ inÂ theÂ rootÂ TwinCollection,Â theÂ innerÂ TwinCollectionÂ containÂ itsÂ ownÂ metadata.\r\n    //Â So,Â getÂ theÂ metadataÂ informationÂ forÂ theÂ innerÂ NewValue.\r\n    TwinMetadataÂ maxSpeedNewValueMetadataÂ =Â innerMaxSpeed.getTwinMetadataFinal(\"NewValue\");\r\n    DateÂ newValueLastUpdatedÂ =Â maxSpeedNewValueMetadata.getLastUpdated();Â //ShallÂ containÂ `2017-09-21T02:07:44.238Z`\r\n    IntegerÂ newValueLastUpdatedVersionÂ =Â maxSpeedNewValueMetadata.getLastUpdatedVersion();Â //ShallÂ containÂ `4`\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class TwinCollection
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Pair
  parent: com.microsoft.azure.sdk.iot.service.devicetwin
  href: com.microsoft.azure.sdk.iot.service.devicetwin.Pair.yml
  name: Pair
  nameWithType: Pair
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Pair
  type: Class
  syntax:
    content: public class Pair
