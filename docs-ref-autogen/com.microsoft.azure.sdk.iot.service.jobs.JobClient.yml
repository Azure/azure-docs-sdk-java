### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  id: JobClient
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs
  children:
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.JobClient()
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.createFromConnectionString(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.getNextJob(com.microsoft.azure.sdk.iot.service.devicetwin.Query)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob(com.microsoft.azure.sdk.iot.service.devicetwin.Query)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob(java.lang.String,java.lang.Integer)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(com.microsoft.azure.sdk.iot.service.jobs.JobType,com.microsoft.azure.sdk.iot.service.jobs.JobStatus)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(com.microsoft.azure.sdk.iot.service.jobs.JobType,com.microsoft.azure.sdk.iot.service.jobs.JobStatus,java.lang.Integer)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleDeviceMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object,java.util.Date,long)
  - com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice,java.util.Date,long)
  langs:
  - java
  name: JobClient
  nameWithType: JobClient
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  type: Class
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: JobClient enables service client to schedule and cancel jobs for a group of devices using the IoTHub.
  syntax:
    content: public class JobClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.JobClient()
  id: JobClient()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  langs:
  - java
  name: JobClient()
  nameWithType: JobClient.JobClient()
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.JobClient()
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.JobClient*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service.jobs
  syntax:
    content: protected JobClient()
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob(java.lang.String)
  id: cancelJob(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  langs:
  - java
  name: cancelJob(String jobId)
  nameWithType: JobClient.cancelJob(String jobId)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob(String jobId)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: Cancel a current jod on the IoTHub
  syntax:
    content: public synchronized JobResult cancelJob(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: Unique Job Id for this job
    return:
      type: com.microsoft.azure.sdk.iot.service.jobs.JobResult
      description: a jobResult object
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: if the jobId is invalid
  - type: java.io.IOException
    description: if the jobId is invalid
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: if the jobId is invalid
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.createFromConnectionString(java.lang.String)
  id: createFromConnectionString(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  langs:
  - java
  name: createFromConnectionString(String connectionString)
  nameWithType: JobClient.createFromConnectionString(String connectionString)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.createFromConnectionString(String connectionString)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.createFromConnectionString*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: Static constructor to create instance from connection string
  syntax:
    content: public static JobClient createFromConnectionString(String connectionString)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: The iot hub connection string
    return:
      type: com.microsoft.azure.sdk.iot.service.jobs.JobClient
      description: The instance of JobClient
  exceptions:
  - type: java.io.IOException
    description: if the object creation failed
  - type: java.lang.IllegalArgumentException
    description: if the object creation failed
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob(java.lang.String)
  id: getJob(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  langs:
  - java
  name: getJob(String jobId)
  nameWithType: JobClient.getJob(String jobId)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob(String jobId)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: Get the current job on the iotHub.
  syntax:
    content: public synchronized JobResult getJob(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: Unique Job Id for this job
    return:
      type: com.microsoft.azure.sdk.iot.service.jobs.JobResult
      description: a jobResult object
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: if the jobId is invalid
  - type: java.io.IOException
    description: if the jobId is invalid
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: if the jobId is invalid
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getNextJob(com.microsoft.azure.sdk.iot.service.devicetwin.Query)
  id: getNextJob(com.microsoft.azure.sdk.iot.service.devicetwin.Query)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  langs:
  - java
  name: getNextJob(Query query)
  nameWithType: JobClient.getNextJob(Query query)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getNextJob(Query query)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getNextJob*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: returns the next job result in response. Query's further if page size has been met and has next is not called
  syntax:
    content: public synchronized JobResult getNextJob(Query query)
    parameters:
    - id: query
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: Query for which to look for next job response by
    return:
      type: com.microsoft.azure.sdk.iot.service.jobs.JobResult
      description: next job result if available
  exceptions:
  - type: java.io.IOException
    description: When IotHub fails to respond
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: When IotHub fails to respond
  - type: java.util.NoSuchElementException
    description: When IotHub fails to respond
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob(com.microsoft.azure.sdk.iot.service.devicetwin.Query)
  id: hasNextJob(com.microsoft.azure.sdk.iot.service.devicetwin.Query)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  langs:
  - java
  name: hasNextJob(Query query)
  nameWithType: JobClient.hasNextJob(Query query)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob(Query query)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: returns the availability of next job result in response. Query's further if page size has been met
  syntax:
    content: public synchronized boolean hasNextJob(Query query)
    parameters:
    - id: query
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: Query for which to look for next job response by
    return:
      type: boolean
      description: true if next job result is available , false otherwise
  exceptions:
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: When IotHub fails to respond
  - type: java.io.IOException
    description: When IotHub fails to respond
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob(java.lang.String)
  id: queryDeviceJob(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  langs:
  - java
  name: queryDeviceJob(String sqlQuery)
  nameWithType: JobClient.queryDeviceJob(String sqlQuery)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob(String sqlQuery)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: Query for device Job limited by default page size of 100 for response
  syntax:
    content: public synchronized Query queryDeviceJob(String sqlQuery)
    parameters:
    - id: sqlQuery
      type: java.lang.String
      description: sql style query over device.jobs
    return:
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: Query object for this query
  exceptions:
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: When IotHub fails to respond
  - type: java.io.IOException
    description: When IotHub fails to respond
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob(java.lang.String,java.lang.Integer)
  id: queryDeviceJob(java.lang.String,java.lang.Integer)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  langs:
  - java
  name: queryDeviceJob(String sqlQuery, Integer pageSize)
  nameWithType: JobClient.queryDeviceJob(String sqlQuery, Integer pageSize)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob(String sqlQuery, Integer pageSize)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: Query for device Job
  syntax:
    content: public synchronized Query queryDeviceJob(String sqlQuery, Integer pageSize)
    parameters:
    - id: sqlQuery
      type: java.lang.String
      description: sql style query over device.jobs
    - id: pageSize
      type: java.lang.Integer
      description: the value per which to limit the size of query response by.
    return:
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: Query object for this query
  exceptions:
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: When IotHub fails to respond
  - type: java.io.IOException
    description: When IotHub fails to respond
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(com.microsoft.azure.sdk.iot.service.jobs.JobType,com.microsoft.azure.sdk.iot.service.jobs.JobStatus)
  id: queryJobResponse(com.microsoft.azure.sdk.iot.service.jobs.JobType,com.microsoft.azure.sdk.iot.service.jobs.JobStatus)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  langs:
  - java
  name: queryJobResponse(JobType jobType, JobStatus jobStatus)
  nameWithType: JobClient.queryJobResponse(JobType jobType, JobStatus jobStatus)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(JobType jobType, JobStatus jobStatus)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: Query the iot hub for a jobs response. Query response are limited by default page size per attempt
  syntax:
    content: public synchronized Query queryJobResponse(JobType jobType, JobStatus jobStatus)
    parameters:
    - id: jobType
      type: com.microsoft.azure.sdk.iot.service.jobs.JobType
      description: The type of job to query for
    - id: jobStatus
      type: com.microsoft.azure.sdk.iot.service.jobs.JobStatus
      description: The status of the job to query for
    return:
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: A query object on which to look for responses by
  exceptions:
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: If any of the input parameters are incorrect
  - type: java.io.IOException
    description: If any of the input parameters are incorrect
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(com.microsoft.azure.sdk.iot.service.jobs.JobType,com.microsoft.azure.sdk.iot.service.jobs.JobStatus,java.lang.Integer)
  id: queryJobResponse(com.microsoft.azure.sdk.iot.service.jobs.JobType,com.microsoft.azure.sdk.iot.service.jobs.JobStatus,java.lang.Integer)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  langs:
  - java
  name: queryJobResponse(JobType jobType, JobStatus jobStatus, Integer pageSize)
  nameWithType: JobClient.queryJobResponse(JobType jobType, JobStatus jobStatus, Integer pageSize)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(JobType jobType, JobStatus jobStatus, Integer pageSize)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: Query the iot hub for a jobs response. Query response are limited by page size per attempt
  syntax:
    content: public synchronized Query queryJobResponse(JobType jobType, JobStatus jobStatus, Integer pageSize)
    parameters:
    - id: jobType
      type: com.microsoft.azure.sdk.iot.service.jobs.JobType
      description: The type of job to query for
    - id: jobStatus
      type: com.microsoft.azure.sdk.iot.service.jobs.JobStatus
      description: The status of the job to query for
    - id: pageSize
      type: java.lang.Integer
      description: The value to which to limit the job response size by
    return:
      type: com.microsoft.azure.sdk.iot.service.devicetwin.Query
      description: A query object on which to look for responses by
  exceptions:
  - type: java.io.IOException
    description: If any of the input parameters are incorrect
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: If any of the input parameters are incorrect
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleDeviceMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object,java.util.Date,long)
  id: scheduleDeviceMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Object,java.util.Date,long)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  langs:
  - java
  name: scheduleDeviceMethod(String jobId, String queryCondition, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload, Date startTimeUtc, long maxExecutionTimeInSeconds)
  nameWithType: JobClient.scheduleDeviceMethod(String jobId, String queryCondition, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload, Date startTimeUtc, long maxExecutionTimeInSeconds)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleDeviceMethod(String jobId, String queryCondition, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload, Date startTimeUtc, long maxExecutionTimeInSeconds)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleDeviceMethod*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: Creates a new Job to invoke method on one or multiple devices
  syntax:
    content: public synchronized JobResult scheduleDeviceMethod(String jobId, String queryCondition, String methodName, Long responseTimeoutInSeconds, Long connectTimeoutInSeconds, Object payload, Date startTimeUtc, long maxExecutionTimeInSeconds)
    parameters:
    - id: jobId
      type: java.lang.String
      description: Unique Job Id for this job
    - id: queryCondition
      type: java.lang.String
      description: Query condition to evaluate which devices to run the job on. It can be <code>null</code> or empty
    - id: methodName
      type: java.lang.String
      description: Method name to be invoked
    - id: responseTimeoutInSeconds
      type: java.lang.Long
      description: Maximum interval of time, in seconds, that the Direct Method will wait for answer. It can be <code>null</code>.
    - id: connectTimeoutInSeconds
      type: java.lang.Long
      description: Maximum interval of time, in seconds, that the Direct Method will wait for the connection. It can be <code>null</code>.
    - id: payload
      type: java.lang.Object
      description: Object that contains the payload defined by the user. It can be <code>null</code>.
    - id: startTimeUtc
      type: java.util.Date
      description: Date time in Utc to start the job
    - id: maxExecutionTimeInSeconds
      type: long
      description: Max execution time in seconds, i.e., ttl duration the job can run
    return:
      type: com.microsoft.azure.sdk.iot.service.jobs.JobResult
      description: a jobResult object
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: if one of the provided parameters is invalid
  - type: java.io.IOException
    description: if one of the provided parameters is invalid
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: if one of the provided parameters is invalid
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice,java.util.Date,long)
  id: scheduleUpdateTwin(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice,java.util.Date,long)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.jobs.JobClient
  langs:
  - java
  name: scheduleUpdateTwin(String jobId, String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)
  nameWithType: JobClient.scheduleUpdateTwin(String jobId, String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin(String jobId, String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)
  overload: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.jobs
  summary: Creates a new Job to update twin tags and desired properties on one or multiple devices
  syntax:
    content: public synchronized JobResult scheduleUpdateTwin(String jobId, String queryCondition, DeviceTwinDevice updateTwin, Date startTimeUtc, long maxExecutionTimeInSeconds)
    parameters:
    - id: jobId
      type: java.lang.String
      description: Unique Job Id for this job
    - id: queryCondition
      type: java.lang.String
      description: Query condition to evaluate which devices to run the job on. It can be <code>null</code> or empty
    - id: updateTwin
      type: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
      description: Twin object to use for the update
    - id: startTimeUtc
      type: java.util.Date
      description: Date time in Utc to start the job
    - id: maxExecutionTimeInSeconds
      type: long
      description: Max execution time in seconds, i.e., ttl duration the job can run
    return:
      type: com.microsoft.azure.sdk.iot.service.jobs.JobResult
      description: a jobResult object
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: if one of the provided parameters is invalid
  - type: java.io.IOException
    description: if one of the provided parameters is invalid
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: if one of the provided parameters is invalid
references:
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.JobClient*
  name: JobClient
  nameWithType: JobClient.JobClient
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.JobClient
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.createFromConnectionString*
  name: createFromConnectionString
  nameWithType: JobClient.createFromConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.createFromConnectionString
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  name: DeviceTwinDevice
  nameWithType: DeviceTwinDevice
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
- uid: java.util.Date
  spec.java:
  - uid: java.util.Date
    name: Date
    fullName: java.util.Date
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobResult
  name: JobResult
  nameWithType: JobResult
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobResult
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin*
  name: scheduleUpdateTwin
  nameWithType: JobClient.scheduleUpdateTwin
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleUpdateTwin
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: java.lang.Long
  spec.java:
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleDeviceMethod*
  name: scheduleDeviceMethod
  nameWithType: JobClient.scheduleDeviceMethod
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.scheduleDeviceMethod
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob*
  name: getJob
  nameWithType: JobClient.getJob
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob*
  name: cancelJob
  nameWithType: JobClient.cancelJob
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.Query
  name: Query
  nameWithType: Query
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.Query
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob*
  name: queryDeviceJob
  nameWithType: JobClient.queryDeviceJob
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryDeviceJob
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob*
  name: hasNextJob
  nameWithType: JobClient.hasNextJob
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: java.util.NoSuchElementException
  spec.java:
  - uid: java.util.NoSuchElementException
    name: NoSuchElementException
    fullName: java.util.NoSuchElementException
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getNextJob*
  name: getNextJob
  nameWithType: JobClient.getNextJob
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.getNextJob
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobType
  name: JobType
  nameWithType: JobType
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobType
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobStatus
  name: JobStatus
  nameWithType: JobStatus
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobStatus
- uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse*
  name: queryJobResponse
  nameWithType: JobClient.queryJobResponse
  fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse
  package: com.microsoft.azure.sdk.iot.service.jobs
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
