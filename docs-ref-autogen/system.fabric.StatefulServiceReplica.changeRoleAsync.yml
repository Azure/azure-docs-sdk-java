### YamlMime:JavaMember
nameWithType: StatefulServiceReplica.changeRoleAsync
type: method
members:
- fullName: system.fabric.StatefulServiceReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  name: changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: StatefulServiceReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  parameters:
  - description: <p>The updated <xref uid="system.fabric.ReplicaRole" data-throw-if-not-resolved="false">system.fabric.ReplicaRole</xref> that this replica should transition to. </p>
    name: newRole
    type: <xref href="system.fabric.ReplicaRole?alt=system.fabric.ReplicaRole&text=ReplicaRole" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> of type <xref uid="" data-throw-if-not-resolved="false">java.lang.String</xref>, the serviceâ€™s new connection address that is to be associated with the replica via Service Fabric Naming. </p>
    type: <xref href="CompletableFuture%3CString%3E?alt=CompletableFuture<String>&text=CompletableFuture%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Changes the role of a Primary or Secondary replica.</p>

    <p>

      <b>Remarks:</b>The new role is indicated as a parameter. When the service transitions to the new role, the service has a chance to update its current listening address. The listening address is the address where clients connect to it. This enables the service when it is a Primary replica to only claim some resources such as ports when communication from clients is expected. </p>
  syntax: public CompletableFuture<String> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  uid: system.fabric.StatefulServiceReplica.changeRoleAsync(ReplicaRole,CancellationToken)
uid: system.fabric.StatefulServiceReplica.changeRoleAsync*
fullName: system.fabric.StatefulServiceReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
name: changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
package: system.fabric
metadata: {}
