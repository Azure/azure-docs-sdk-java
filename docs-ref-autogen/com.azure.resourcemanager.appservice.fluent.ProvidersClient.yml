### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient"
fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient"
name: "ProvidersClient"
nameWithType: "ProvidersClient"
summary: "An instance of this class provides access to all the operations defined in Providers<wbr>Client."
syntax: "public interface ProvidersClient"
methods:
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacks()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacks()"
  name: "getAvailableStacks()"
  nameWithType: "ProvidersClient.getAvailableStacks()"
  summary: "Description for Get available application frameworks and their versions."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<ApplicationStackResourceInner> getAvailableStacks()"
  desc: "Description for Get available application frameworks and their versions."
  returns:
    description: "collection of Application Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner&text=ApplicationStackResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacks(com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacks(ProviderOsTypeSelected osTypeSelected, Context context)"
  name: "getAvailableStacks(ProviderOsTypeSelected osTypeSelected, Context context)"
  nameWithType: "ProvidersClient.getAvailableStacks(ProviderOsTypeSelected osTypeSelected, Context context)"
  summary: "Description for Get available application frameworks and their versions."
  modifiers:
  - "abstract"
  parameters:
  - description: "The osTypeSelected parameter."
    name: "osTypeSelected"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected?alt=com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected&text=ProviderOsTypeSelected\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ApplicationStackResourceInner> getAvailableStacks(ProviderOsTypeSelected osTypeSelected, Context context)"
  desc: "Description for Get available application frameworks and their versions."
  returns:
    description: "collection of Application Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner&text=ApplicationStackResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacksAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacksAsync()"
  name: "getAvailableStacksAsync()"
  nameWithType: "ProvidersClient.getAvailableStacksAsync()"
  summary: "Description for Get available application frameworks and their versions."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<ApplicationStackResourceInner> getAvailableStacksAsync()"
  desc: "Description for Get available application frameworks and their versions."
  returns:
    description: "collection of Application Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner&text=ApplicationStackResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacksAsync(com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacksAsync(ProviderOsTypeSelected osTypeSelected)"
  name: "getAvailableStacksAsync(ProviderOsTypeSelected osTypeSelected)"
  nameWithType: "ProvidersClient.getAvailableStacksAsync(ProviderOsTypeSelected osTypeSelected)"
  summary: "Description for Get available application frameworks and their versions."
  modifiers:
  - "abstract"
  parameters:
  - description: "The osTypeSelected parameter."
    name: "osTypeSelected"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected?alt=com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected&text=ProviderOsTypeSelected\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<ApplicationStackResourceInner> getAvailableStacksAsync(ProviderOsTypeSelected osTypeSelected)"
  desc: "Description for Get available application frameworks and their versions."
  returns:
    description: "collection of Application Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner&text=ApplicationStackResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacks()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacks()"
  name: "getFunctionAppStacks()"
  nameWithType: "ProvidersClient.getFunctionAppStacks()"
  summary: "Description for Get available Function app frameworks and their versions."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<FunctionAppStackInner> getFunctionAppStacks()"
  desc: "Description for Get available Function app frameworks and their versions."
  returns:
    description: "collection of Function app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner&text=FunctionAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacks(com.azure.resourcemanager.appservice.models.ProviderStackOsType,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacks(ProviderStackOsType stackOsType, Context context)"
  name: "getFunctionAppStacks(ProviderStackOsType stackOsType, Context context)"
  nameWithType: "ProvidersClient.getFunctionAppStacks(ProviderStackOsType stackOsType, Context context)"
  summary: "Description for Get available Function app frameworks and their versions."
  modifiers:
  - "abstract"
  parameters:
  - description: "Stack OS Type."
    name: "stackOsType"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderStackOsType?alt=com.azure.resourcemanager.appservice.models.ProviderStackOsType&text=ProviderStackOsType\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<FunctionAppStackInner> getFunctionAppStacks(ProviderStackOsType stackOsType, Context context)"
  desc: "Description for Get available Function app frameworks and their versions."
  returns:
    description: "collection of Function app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner&text=FunctionAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacksAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacksAsync()"
  name: "getFunctionAppStacksAsync()"
  nameWithType: "ProvidersClient.getFunctionAppStacksAsync()"
  summary: "Description for Get available Function app frameworks and their versions."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<FunctionAppStackInner> getFunctionAppStacksAsync()"
  desc: "Description for Get available Function app frameworks and their versions."
  returns:
    description: "collection of Function app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner&text=FunctionAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacksAsync(com.azure.resourcemanager.appservice.models.ProviderStackOsType)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacksAsync(ProviderStackOsType stackOsType)"
  name: "getFunctionAppStacksAsync(ProviderStackOsType stackOsType)"
  nameWithType: "ProvidersClient.getFunctionAppStacksAsync(ProviderStackOsType stackOsType)"
  summary: "Description for Get available Function app frameworks and their versions."
  modifiers:
  - "abstract"
  parameters:
  - description: "Stack OS Type."
    name: "stackOsType"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderStackOsType?alt=com.azure.resourcemanager.appservice.models.ProviderStackOsType&text=ProviderStackOsType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<FunctionAppStackInner> getFunctionAppStacksAsync(ProviderStackOsType stackOsType)"
  desc: "Description for Get available Function app frameworks and their versions."
  returns:
    description: "collection of Function app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner&text=FunctionAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacksForLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacksForLocation(String location)"
  name: "getFunctionAppStacksForLocation(String location)"
  nameWithType: "ProvidersClient.getFunctionAppStacksForLocation(String location)"
  summary: "Description for Get available Function app frameworks and their versions for location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Function App stack location."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<FunctionAppStackInner> getFunctionAppStacksForLocation(String location)"
  desc: "Description for Get available Function app frameworks and their versions for location."
  returns:
    description: "collection of Function app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner&text=FunctionAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacksForLocation(java.lang.String,com.azure.resourcemanager.appservice.models.ProviderStackOsType,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacksForLocation(String location, ProviderStackOsType stackOsType, Context context)"
  name: "getFunctionAppStacksForLocation(String location, ProviderStackOsType stackOsType, Context context)"
  nameWithType: "ProvidersClient.getFunctionAppStacksForLocation(String location, ProviderStackOsType stackOsType, Context context)"
  summary: "Description for Get available Function app frameworks and their versions for location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Function App stack location."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Stack OS Type."
    name: "stackOsType"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderStackOsType?alt=com.azure.resourcemanager.appservice.models.ProviderStackOsType&text=ProviderStackOsType\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<FunctionAppStackInner> getFunctionAppStacksForLocation(String location, ProviderStackOsType stackOsType, Context context)"
  desc: "Description for Get available Function app frameworks and their versions for location."
  returns:
    description: "collection of Function app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner&text=FunctionAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacksForLocationAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacksForLocationAsync(String location)"
  name: "getFunctionAppStacksForLocationAsync(String location)"
  nameWithType: "ProvidersClient.getFunctionAppStacksForLocationAsync(String location)"
  summary: "Description for Get available Function app frameworks and their versions for location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Function App stack location."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<FunctionAppStackInner> getFunctionAppStacksForLocationAsync(String location)"
  desc: "Description for Get available Function app frameworks and their versions for location."
  returns:
    description: "collection of Function app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner&text=FunctionAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacksForLocationAsync(java.lang.String,com.azure.resourcemanager.appservice.models.ProviderStackOsType)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getFunctionAppStacksForLocationAsync(String location, ProviderStackOsType stackOsType)"
  name: "getFunctionAppStacksForLocationAsync(String location, ProviderStackOsType stackOsType)"
  nameWithType: "ProvidersClient.getFunctionAppStacksForLocationAsync(String location, ProviderStackOsType stackOsType)"
  summary: "Description for Get available Function app frameworks and their versions for location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Function App stack location."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Stack OS Type."
    name: "stackOsType"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderStackOsType?alt=com.azure.resourcemanager.appservice.models.ProviderStackOsType&text=ProviderStackOsType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<FunctionAppStackInner> getFunctionAppStacksForLocationAsync(String location, ProviderStackOsType stackOsType)"
  desc: "Description for Get available Function app frameworks and their versions for location."
  returns:
    description: "collection of Function app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.FunctionAppStackInner&text=FunctionAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacks()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacks()"
  name: "getWebAppStacks()"
  nameWithType: "ProvidersClient.getWebAppStacks()"
  summary: "Description for Get available Web app frameworks and their versions."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<WebAppStackInner> getWebAppStacks()"
  desc: "Description for Get available Web app frameworks and their versions."
  returns:
    description: "collection of Web app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner&text=WebAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacks(com.azure.resourcemanager.appservice.models.ProviderStackOsType,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacks(ProviderStackOsType stackOsType, Context context)"
  name: "getWebAppStacks(ProviderStackOsType stackOsType, Context context)"
  nameWithType: "ProvidersClient.getWebAppStacks(ProviderStackOsType stackOsType, Context context)"
  summary: "Description for Get available Web app frameworks and their versions."
  modifiers:
  - "abstract"
  parameters:
  - description: "Stack OS Type."
    name: "stackOsType"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderStackOsType?alt=com.azure.resourcemanager.appservice.models.ProviderStackOsType&text=ProviderStackOsType\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<WebAppStackInner> getWebAppStacks(ProviderStackOsType stackOsType, Context context)"
  desc: "Description for Get available Web app frameworks and their versions."
  returns:
    description: "collection of Web app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner&text=WebAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacksAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacksAsync()"
  name: "getWebAppStacksAsync()"
  nameWithType: "ProvidersClient.getWebAppStacksAsync()"
  summary: "Description for Get available Web app frameworks and their versions."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<WebAppStackInner> getWebAppStacksAsync()"
  desc: "Description for Get available Web app frameworks and their versions."
  returns:
    description: "collection of Web app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner&text=WebAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacksAsync(com.azure.resourcemanager.appservice.models.ProviderStackOsType)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacksAsync(ProviderStackOsType stackOsType)"
  name: "getWebAppStacksAsync(ProviderStackOsType stackOsType)"
  nameWithType: "ProvidersClient.getWebAppStacksAsync(ProviderStackOsType stackOsType)"
  summary: "Description for Get available Web app frameworks and their versions."
  modifiers:
  - "abstract"
  parameters:
  - description: "Stack OS Type."
    name: "stackOsType"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderStackOsType?alt=com.azure.resourcemanager.appservice.models.ProviderStackOsType&text=ProviderStackOsType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<WebAppStackInner> getWebAppStacksAsync(ProviderStackOsType stackOsType)"
  desc: "Description for Get available Web app frameworks and their versions."
  returns:
    description: "collection of Web app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner&text=WebAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacksForLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacksForLocation(String location)"
  name: "getWebAppStacksForLocation(String location)"
  nameWithType: "ProvidersClient.getWebAppStacksForLocation(String location)"
  summary: "Description for Get available Web app frameworks and their versions for location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Web App stack location."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<WebAppStackInner> getWebAppStacksForLocation(String location)"
  desc: "Description for Get available Web app frameworks and their versions for location."
  returns:
    description: "collection of Web app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner&text=WebAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacksForLocation(java.lang.String,com.azure.resourcemanager.appservice.models.ProviderStackOsType,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacksForLocation(String location, ProviderStackOsType stackOsType, Context context)"
  name: "getWebAppStacksForLocation(String location, ProviderStackOsType stackOsType, Context context)"
  nameWithType: "ProvidersClient.getWebAppStacksForLocation(String location, ProviderStackOsType stackOsType, Context context)"
  summary: "Description for Get available Web app frameworks and their versions for location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Web App stack location."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Stack OS Type."
    name: "stackOsType"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderStackOsType?alt=com.azure.resourcemanager.appservice.models.ProviderStackOsType&text=ProviderStackOsType\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<WebAppStackInner> getWebAppStacksForLocation(String location, ProviderStackOsType stackOsType, Context context)"
  desc: "Description for Get available Web app frameworks and their versions for location."
  returns:
    description: "collection of Web app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner&text=WebAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacksForLocationAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacksForLocationAsync(String location)"
  name: "getWebAppStacksForLocationAsync(String location)"
  nameWithType: "ProvidersClient.getWebAppStacksForLocationAsync(String location)"
  summary: "Description for Get available Web app frameworks and their versions for location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Web App stack location."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<WebAppStackInner> getWebAppStacksForLocationAsync(String location)"
  desc: "Description for Get available Web app frameworks and their versions for location."
  returns:
    description: "collection of Web app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner&text=WebAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacksForLocationAsync(java.lang.String,com.azure.resourcemanager.appservice.models.ProviderStackOsType)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getWebAppStacksForLocationAsync(String location, ProviderStackOsType stackOsType)"
  name: "getWebAppStacksForLocationAsync(String location, ProviderStackOsType stackOsType)"
  nameWithType: "ProvidersClient.getWebAppStacksForLocationAsync(String location, ProviderStackOsType stackOsType)"
  summary: "Description for Get available Web app frameworks and their versions for location."
  modifiers:
  - "abstract"
  parameters:
  - description: "Web App stack location."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Stack OS Type."
    name: "stackOsType"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderStackOsType?alt=com.azure.resourcemanager.appservice.models.ProviderStackOsType&text=ProviderStackOsType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<WebAppStackInner> getWebAppStacksForLocationAsync(String location, ProviderStackOsType stackOsType)"
  desc: "Description for Get available Web app frameworks and their versions for location."
  returns:
    description: "collection of Web app Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.WebAppStackInner&text=WebAppStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.list()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.list()"
  name: "list()"
  nameWithType: "ProvidersClient.list()"
  summary: "Description for Get available application frameworks and their versions."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<ApplicationStackResourceInner> list()"
  desc: "Description for Get available application frameworks and their versions."
  returns:
    description: "collection of Application Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner&text=ApplicationStackResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.list(com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.list(ProviderOsTypeSelected osTypeSelected, Context context)"
  name: "list(ProviderOsTypeSelected osTypeSelected, Context context)"
  nameWithType: "ProvidersClient.list(ProviderOsTypeSelected osTypeSelected, Context context)"
  summary: "Description for Get available application frameworks and their versions."
  modifiers:
  - "abstract"
  parameters:
  - description: "The osTypeSelected parameter."
    name: "osTypeSelected"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected?alt=com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected&text=ProviderOsTypeSelected\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ApplicationStackResourceInner> list(ProviderOsTypeSelected osTypeSelected, Context context)"
  desc: "Description for Get available application frameworks and their versions."
  returns:
    description: "collection of Application Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner&text=ApplicationStackResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.listAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.listAsync()"
  name: "listAsync()"
  nameWithType: "ProvidersClient.listAsync()"
  summary: "Description for Get available application frameworks and their versions."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<ApplicationStackResourceInner> listAsync()"
  desc: "Description for Get available application frameworks and their versions."
  returns:
    description: "collection of Application Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner&text=ApplicationStackResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.listAsync(com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.listAsync(ProviderOsTypeSelected osTypeSelected)"
  name: "listAsync(ProviderOsTypeSelected osTypeSelected)"
  nameWithType: "ProvidersClient.listAsync(ProviderOsTypeSelected osTypeSelected)"
  summary: "Description for Get available application frameworks and their versions."
  modifiers:
  - "abstract"
  parameters:
  - description: "The osTypeSelected parameter."
    name: "osTypeSelected"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected?alt=com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected&text=ProviderOsTypeSelected\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<ApplicationStackResourceInner> listAsync(ProviderOsTypeSelected osTypeSelected)"
  desc: "Description for Get available application frameworks and their versions."
  returns:
    description: "collection of Application Stacks as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner?alt=com.azure.resourcemanager.appservice.fluent.models.ApplicationStackResourceInner&text=ApplicationStackResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.listOperations()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.listOperations()"
  name: "listOperations()"
  nameWithType: "ProvidersClient.listOperations()"
  summary: "Description for Gets all available operations for the Microsoft.<wbr>Web resource provider."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<CsmOperationDescriptionInner> listOperations()"
  desc: "Description for Gets all available operations for the Microsoft.Web resource provider. Also exposes resource metric definitions."
  returns:
    description: "collection of Azure resource manager operation metadata as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.CsmOperationDescriptionInner?alt=com.azure.resourcemanager.appservice.fluent.models.CsmOperationDescriptionInner&text=CsmOperationDescriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.listOperations(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.listOperations(Context context)"
  name: "listOperations(Context context)"
  nameWithType: "ProvidersClient.listOperations(Context context)"
  summary: "Description for Gets all available operations for the Microsoft.<wbr>Web resource provider."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<CsmOperationDescriptionInner> listOperations(Context context)"
  desc: "Description for Gets all available operations for the Microsoft.Web resource provider. Also exposes resource metric definitions."
  returns:
    description: "collection of Azure resource manager operation metadata as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.CsmOperationDescriptionInner?alt=com.azure.resourcemanager.appservice.fluent.models.CsmOperationDescriptionInner&text=CsmOperationDescriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.listOperationsAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.listOperationsAsync()"
  name: "listOperationsAsync()"
  nameWithType: "ProvidersClient.listOperationsAsync()"
  summary: "Description for Gets all available operations for the Microsoft.<wbr>Web resource provider."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<CsmOperationDescriptionInner> listOperationsAsync()"
  desc: "Description for Gets all available operations for the Microsoft.Web resource provider. Also exposes resource metric definitions."
  returns:
    description: "collection of Azure resource manager operation metadata as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.CsmOperationDescriptionInner?alt=com.azure.resourcemanager.appservice.fluent.models.CsmOperationDescriptionInner&text=CsmOperationDescriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ProvidersClient."
metadata: {}
package: "com.azure.resourcemanager.appservice.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.19.0
