### YamlMime:JavaType
uid: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger"
fullName: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger"
name: "MemoryLogger"
nameWithType: "MemoryLogger"
summary: "A static class to control SDK logging into an in-memory buffer."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **MemoryLogger**"
methods:
- uid: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.dump()"
  fullName: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.dump()"
  name: "dump()"
  nameWithType: "MemoryLogger.dump()"
  summary: "Returns the content of the whole memory buffer as a list of Strings."
  modifiers:
  - "static"
  syntax: "public static List<String> dump()"
  desc: "Returns the content of the whole memory buffer as a list of Strings. For example, you can access it as a String list by calling MemoryLogger.dump(). It does not block other SDK threads from continuing to log into the buffer."
  returns:
    description: "A list of Strings of the contents of the memory buffer copied into it."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.dump(java.io.OutputStream)"
  fullName: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.dump(OutputStream outStream)"
  name: "dump(OutputStream outStream)"
  nameWithType: "MemoryLogger.dump(OutputStream outStream)"
  summary: "Writes the content of the whole memory buffer to an object that implements java.<wbr>io.<wbr>Output<wbr>Stream."
  modifiers:
  - "static"
  parameters:
  - description: "OutputStream object to write to."
    name: "outStream"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void dump(OutputStream outStream)"
  exceptions:
  - description: "If an I/O error occurs."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Writes the content of the whole memory buffer to an object that implements java.io.OutputStream. For example, System.out (for console output). It does not block other SDK threads from continuing to log into the buffer."
- uid: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.dump(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.dump(String filePath)"
  name: "dump(String filePath)"
  nameWithType: "MemoryLogger.dump(String filePath)"
  summary: "Writes the content of the whole memory buffer to the specified file."
  modifiers:
  - "static"
  parameters:
  - description: "Path to a log file on local disk."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void dump(String filePath)"
  desc: "Writes the content of the whole memory buffer to the specified file. It does not block other SDK threads from continuing to log into the buffer."
- uid: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.setFilters()"
  fullName: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.setFilters()"
  name: "setFilters()"
  nameWithType: "MemoryLogger.setFilters()"
  summary: "Clears filters for memory logging."
  modifiers:
  - "static"
  syntax: "public static void setFilters()"
  desc: "Clears filters for memory logging."
- uid: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.setFilters(java.lang.String[])"
  fullName: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.setFilters(String[] filters)"
  name: "setFilters(String[] filters)"
  nameWithType: "MemoryLogger.setFilters(String[] filters)"
  summary: "Sets filters for memory logging."
  modifiers:
  - "static"
  parameters:
  - description: "Filters to use, or an empty list to remove previously set filters."
    name: "filters"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static void setFilters(String[] filters)"
  desc: "Sets filters for memory logging. Once filters are set, memory logger will only be updated with log strings containing at least one of the strings specified by the filters. The match is case sensitive."
- uid: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.setLevel(com.microsoft.cognitiveservices.speech.diagnostics.logging.Level)"
  fullName: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.setLevel(Level level)"
  name: "setLevel(Level level)"
  nameWithType: "MemoryLogger.setLevel(Level level)"
  summary: "Sets the level of the messages to be captured by the logger."
  modifiers:
  - "static"
  parameters:
  - description: "Maximum level of detail to be captured by the logger."
    name: "level"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.diagnostics.logging.Level?alt=com.microsoft.cognitiveservices.speech.diagnostics.logging.Level&text=Level\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void setLevel(Level level)"
  desc: "Sets the level of the messages to be captured by the logger."
- uid: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.start()"
  fullName: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.start()"
  name: "start()"
  nameWithType: "MemoryLogger.start()"
  summary: "Starts logging into the internal memory buffer."
  modifiers:
  - "static"
  syntax: "public static void start()"
  desc: "Starts logging into the internal memory buffer."
- uid: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.stop()"
  fullName: "com.microsoft.cognitiveservices.speech.diagnostics.logging.MemoryLogger.stop()"
  name: "stop()"
  nameWithType: "MemoryLogger.stop()"
  summary: "Stops logging into the internal memory buffer."
  modifiers:
  - "static"
  syntax: "public static void stop()"
  desc: "Stops logging into the internal memory buffer."
type: "class"
desc: "A static class to control SDK logging into an in-memory buffer. Turning on logging while running your Speech SDK scenario provides detailed information from the SDK's core native components. If you report an issue to Microsoft, you may be asked to provide logs to help Microsoft diagnose the issue. Your application should not take dependency on particular log strings, as they may change from one SDK release to another without notice. MemoryLogger is designed for the case where you want to get access to logs that were taken in the short duration before some unexpected event happens. For example, if you are running a Speech Recognizer, you may want to dump the MemoryLogger after getting an event indicating recognition was canceled due to some error. The size of the memory buffer is fixed at 2MB and cannot be changed. This is a \"ring\" buffer, that is, new log strings written replace the oldest ones in the buffer. Added in version 1.42.0\n\nMemory logging is a process wide construct. That means that if (for example) you have multiple speech recognizer objects running in parallel, there will be one memory buffer containing interleaved logs from all recognizers. You cannot get a separate logs for each recognizer."
metadata: {}
package: "com.microsoft.cognitiveservices.speech.diagnostics.logging"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.43.0
