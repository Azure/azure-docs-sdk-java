### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  id: EncryptionScopesClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation
  children:
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.get(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.list(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.listAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patch(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.put(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  langs:
  - java
  name: EncryptionScopesClientImpl
  nameWithType: EncryptionScopesClientImpl
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  type: Class
  package: com.azure.resourcemanager.storage.implementation
  summary: An instance of this class provides access to all the operations defined in EncryptionScopesClient.
  syntax:
    content: public final class EncryptionScopesClientImpl implements EncryptionScopesClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.storage.fluent.EncryptionScopesClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.EncryptionScopesClientImpl(com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl)
  id: EncryptionScopesClientImpl(com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: EncryptionScopesClientImpl(StorageManagementClientImpl client)
  nameWithType: EncryptionScopesClientImpl.EncryptionScopesClientImpl(StorageManagementClientImpl client)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.EncryptionScopesClientImpl(StorageManagementClientImpl client)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.EncryptionScopesClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.storage.implementation
  summary: Initializes an instance of EncryptionScopesClientImpl.
  syntax:
    content: " EncryptionScopesClientImpl(StorageManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.get(java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: get(String resourceGroupName, String accountName, String encryptionScopeName)
  nameWithType: EncryptionScopesClientImpl.get(String resourceGroupName, String accountName, String encryptionScopeName)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.get(String resourceGroupName, String accountName, String encryptionScopeName)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.get*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Returns the properties for the specified encryption scope.
  syntax:
    content: public EncryptionScopeInner get(String resourceGroupName, String accountName, String encryptionScopeName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: encryptionScopeName
      type: java.lang.String
      description: >-
        The name of the encryption scope within the specified storage account. Encryption
             scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-)
             only. Every dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
      description: the Encryption Scope resource.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: getAsync(String resourceGroupName, String accountName, String encryptionScopeName)
  nameWithType: EncryptionScopesClientImpl.getAsync(String resourceGroupName, String accountName, String encryptionScopeName)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getAsync(String resourceGroupName, String accountName, String encryptionScopeName)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Returns the properties for the specified encryption scope.
  syntax:
    content: public Mono<EncryptionScopeInner> getAsync(String resourceGroupName, String accountName, String encryptionScopeName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: encryptionScopeName
      type: java.lang.String
      description: >-
        The name of the encryption scope within the specified storage account. Encryption
             scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-)
             only. Every dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
      description: the Encryption Scope resource.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String accountName, String encryptionScopeName, Context context)
  nameWithType: EncryptionScopesClientImpl.getWithResponse(String resourceGroupName, String accountName, String encryptionScopeName, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getWithResponse(String resourceGroupName, String accountName, String encryptionScopeName, Context context)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Returns the properties for the specified encryption scope.
  syntax:
    content: public Response<EncryptionScopeInner> getWithResponse(String resourceGroupName, String accountName, String encryptionScopeName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: encryptionScopeName
      type: java.lang.String
      description: >-
        The name of the encryption scope within the specified storage account. Encryption
             scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-)
             only. Every dash (-) character must be immediately preceded and followed by a letter or number.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
      description: the Encryption Scope resource.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String accountName, String encryptionScopeName)
  nameWithType: EncryptionScopesClientImpl.getWithResponseAsync(String resourceGroupName, String accountName, String encryptionScopeName)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getWithResponseAsync(String resourceGroupName, String accountName, String encryptionScopeName)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Returns the properties for the specified encryption scope.
  syntax:
    content: public Mono<Response<EncryptionScopeInner>> getWithResponseAsync(String resourceGroupName, String accountName, String encryptionScopeName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: encryptionScopeName
      type: java.lang.String
      description: >-
        The name of the encryption scope within the specified storage account. Encryption
             scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-)
             only. Every dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>>
      description: the Encryption Scope resource.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.list(java.lang.String,java.lang.String)
  id: list(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: list(String resourceGroupName, String accountName)
  nameWithType: EncryptionScopesClientImpl.list(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.list(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all the encryption scopes available under the specified storage account.
  syntax:
    content: public PagedIterable<EncryptionScopeInner> list(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
      description: >-
        list of encryption scopes requested, and if paging is required, a URL to the next page of encryption
             scopes.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: list(String resourceGroupName, String accountName, Context context)
  nameWithType: EncryptionScopesClientImpl.list(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.list(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all the encryption scopes available under the specified storage account.
  syntax:
    content: public PagedIterable<EncryptionScopeInner> list(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
      description: >-
        list of encryption scopes requested, and if paging is required, a URL to the next page of encryption
             scopes.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.listAsync(java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: listAsync(String resourceGroupName, String accountName)
  nameWithType: EncryptionScopesClientImpl.listAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.listAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all the encryption scopes available under the specified storage account.
  syntax:
    content: public PagedFlux<EncryptionScopeInner> listAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
      description: >-
        list of encryption scopes requested, and if paging is required, a URL to the next page of encryption
             scopes.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patch(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  id: patch(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: patch(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  nameWithType: EncryptionScopesClientImpl.patch(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patch(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patch*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.
  syntax:
    content: public EncryptionScopeInner patch(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: encryptionScopeName
      type: java.lang.String
      description: >-
        The name of the encryption scope within the specified storage account. Encryption
             scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-)
             only. Every dash (-) character must be immediately preceded and followed by a letter or number.
    - id: encryptionScope
      type: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
      description: The Encryption Scope resource.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
      description: the Encryption Scope resource.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  id: patchAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: patchAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  nameWithType: EncryptionScopesClientImpl.patchAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.
  syntax:
    content: public Mono<EncryptionScopeInner> patchAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: encryptionScopeName
      type: java.lang.String
      description: >-
        The name of the encryption scope within the specified storage account. Encryption
             scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-)
             only. Every dash (-) character must be immediately preceded and followed by a letter or number.
    - id: encryptionScope
      type: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
      description: The Encryption Scope resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
      description: the Encryption Scope resource.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner,com.azure.core.util.Context)
  id: patchWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: patchWithResponse(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope, Context context)
  nameWithType: EncryptionScopesClientImpl.patchWithResponse(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchWithResponse(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope, Context context)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.
  syntax:
    content: public Response<EncryptionScopeInner> patchWithResponse(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: encryptionScopeName
      type: java.lang.String
      description: >-
        The name of the encryption scope within the specified storage account. Encryption
             scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-)
             only. Every dash (-) character must be immediately preceded and followed by a letter or number.
    - id: encryptionScope
      type: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
      description: The Encryption Scope resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
      description: the Encryption Scope resource.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  id: patchWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: patchWithResponseAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  nameWithType: EncryptionScopesClientImpl.patchWithResponseAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchWithResponseAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.
  syntax:
    content: public Mono<Response<EncryptionScopeInner>> patchWithResponseAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: encryptionScopeName
      type: java.lang.String
      description: >-
        The name of the encryption scope within the specified storage account. Encryption
             scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-)
             only. Every dash (-) character must be immediately preceded and followed by a letter or number.
    - id: encryptionScope
      type: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
      description: The Encryption Scope resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>>
      description: the Encryption Scope resource.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.put(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  id: put(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: put(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  nameWithType: EncryptionScopesClientImpl.put(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.put(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.put*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request.
  syntax:
    content: public EncryptionScopeInner put(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: encryptionScopeName
      type: java.lang.String
      description: >-
        The name of the encryption scope within the specified storage account. Encryption
             scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-)
             only. Every dash (-) character must be immediately preceded and followed by a letter or number.
    - id: encryptionScope
      type: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
      description: The Encryption Scope resource.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
      description: the Encryption Scope resource.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  id: putAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: putAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  nameWithType: EncryptionScopesClientImpl.putAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request.
  syntax:
    content: public Mono<EncryptionScopeInner> putAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: encryptionScopeName
      type: java.lang.String
      description: >-
        The name of the encryption scope within the specified storage account. Encryption
             scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-)
             only. Every dash (-) character must be immediately preceded and followed by a letter or number.
    - id: encryptionScope
      type: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
      description: The Encryption Scope resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
      description: the Encryption Scope resource.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner,com.azure.core.util.Context)
  id: putWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: putWithResponse(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope, Context context)
  nameWithType: EncryptionScopesClientImpl.putWithResponse(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putWithResponse(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope, Context context)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request.
  syntax:
    content: public Response<EncryptionScopeInner> putWithResponse(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: encryptionScopeName
      type: java.lang.String
      description: >-
        The name of the encryption scope within the specified storage account. Encryption
             scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-)
             only. Every dash (-) character must be immediately preceded and followed by a letter or number.
    - id: encryptionScope
      type: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
      description: The Encryption Scope resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
      description: the Encryption Scope resource.
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  id: putWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl
  langs:
  - java
  name: putWithResponseAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  nameWithType: EncryptionScopesClientImpl.putWithResponseAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putWithResponseAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
  overload: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request.
  syntax:
    content: public Mono<Response<EncryptionScopeInner>> putWithResponseAsync(String resourceGroupName, String accountName, String encryptionScopeName, EncryptionScopeInner encryptionScope)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: encryptionScopeName
      type: java.lang.String
      description: >-
        The name of the encryption scope within the specified storage account. Encryption
             scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-)
             only. Every dash (-) character must be immediately preceded and followed by a letter or number.
    - id: encryptionScope
      type: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
      description: The Encryption Scope resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>>
      description: the Encryption Scope resource.
references:
- uid: com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl
  name: StorageManagementClientImpl
  nameWithType: StorageManagementClientImpl
  fullName: com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.EncryptionScopesClientImpl*
  name: EncryptionScopesClientImpl
  nameWithType: EncryptionScopesClientImpl.EncryptionScopesClientImpl
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.EncryptionScopesClientImpl
  package: com.azure.resourcemanager.storage.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
  name: EncryptionScopeInner
  nameWithType: EncryptionScopeInner
  fullName: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
    name: EncryptionScopeInner
    fullName: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putWithResponseAsync*
  name: putWithResponseAsync
  nameWithType: EncryptionScopesClientImpl.putWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
    name: EncryptionScopeInner
    fullName: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putAsync*
  name: putAsync
  nameWithType: EncryptionScopesClientImpl.putAsync
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.put*
  name: put
  nameWithType: EncryptionScopesClientImpl.put
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.put
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
    name: EncryptionScopeInner
    fullName: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putWithResponse*
  name: putWithResponse
  nameWithType: EncryptionScopesClientImpl.putWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.putWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchWithResponseAsync*
  name: patchWithResponseAsync
  nameWithType: EncryptionScopesClientImpl.patchWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchAsync*
  name: patchAsync
  nameWithType: EncryptionScopesClientImpl.patchAsync
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patch*
  name: patch
  nameWithType: EncryptionScopesClientImpl.patch
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patch
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchWithResponse*
  name: patchWithResponse
  nameWithType: EncryptionScopesClientImpl.patchWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.patchWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: EncryptionScopesClientImpl.getWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getAsync*
  name: getAsync
  nameWithType: EncryptionScopesClientImpl.getAsync
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.get*
  name: get
  nameWithType: EncryptionScopesClientImpl.get
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.get
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getWithResponse*
  name: getWithResponse
  nameWithType: EncryptionScopesClientImpl.getWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.getWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
    name: EncryptionScopeInner
    fullName: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.listAsync*
  name: listAsync
  nameWithType: EncryptionScopesClientImpl.listAsync
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.listAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
    name: EncryptionScopeInner
    fullName: com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.list*
  name: list
  nameWithType: EncryptionScopesClientImpl.list
  fullName: com.azure.resourcemanager.storage.implementation.EncryptionScopesClientImpl.list
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.EncryptionScopesClient
  name: EncryptionScopesClient
  nameWithType: EncryptionScopesClient
  fullName: com.azure.resourcemanager.storage.fluent.EncryptionScopesClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
