### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber"
fullName: "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber"
name: "SynchronousEventSubscriber"
nameWithType: "SynchronousEventSubscriber"
summary: "Subscriber that takes <xref uid=\"com.azure.messaging.eventhubs.implementation.SynchronousReceiveWork\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SynchronousReceiveWork\"></xref> and publishes events to them in the order received."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"reactor.core.publisher.BaseSubscriber\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "reactor.core.publisher.BaseSubscriber.cancel()"
- "reactor.core.publisher.BaseSubscriber.dispose()"
- "reactor.core.publisher.BaseSubscriber.hookFinally(reactor.core.publisher.SignalType)"
- "reactor.core.publisher.BaseSubscriber.hookOnCancel()"
- "reactor.core.publisher.BaseSubscriber.hookOnComplete()"
- "reactor.core.publisher.BaseSubscriber.hookOnError(java.lang.Throwable)"
- "reactor.core.publisher.BaseSubscriber.hookOnNext(T)"
- "reactor.core.publisher.BaseSubscriber.hookOnSubscribe(org.reactivestreams.Subscription)"
- "reactor.core.publisher.BaseSubscriber.isDisposed()"
- "reactor.core.publisher.BaseSubscriber.onComplete()"
- "reactor.core.publisher.BaseSubscriber.onError(java.lang.Throwable)"
- "reactor.core.publisher.BaseSubscriber.onNext(T)"
- "reactor.core.publisher.BaseSubscriber.onSubscribe(org.reactivestreams.Subscription)"
- "reactor.core.publisher.BaseSubscriber.request(long)"
- "reactor.core.publisher.BaseSubscriber.requestUnbounded()"
- "reactor.core.publisher.BaseSubscriber.toString()"
- "reactor.core.publisher.BaseSubscriber.upstream()"
syntax: "public class SynchronousEventSubscriber extends BaseSubscriber<PartitionEvent>"
constructors:
- "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.SynchronousEventSubscriber(com.azure.messaging.eventhubs.implementation.SynchronousReceiveWork)"
methods:
- "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.dispose()"
- "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.hookOnComplete()"
- "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.hookOnError(java.lang.Throwable)"
- "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.hookOnNext(com.azure.messaging.eventhubs.models.PartitionEvent)"
- "com.azure.messaging.eventhubs.implementation.SynchronousEventSubscriber.hookOnSubscribe(org.reactivestreams.Subscription)"
type: "class"
metadata: {}
package: "com.azure.messaging.eventhubs.implementation"
artifact: com.azure:azure-messaging-eventhubs:5.7.0
