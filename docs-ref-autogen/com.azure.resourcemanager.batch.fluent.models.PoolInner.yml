### YamlMime:JavaType
uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner"
fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner"
name: "PoolInner"
nameWithType: "PoolInner"
summary: "Contains information about a pool."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PoolInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.PoolInner()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.PoolInner()"
  name: "PoolInner()"
  nameWithType: "PoolInner.PoolInner()"
  syntax: "public PoolInner()"
methods:
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.allocationState()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.allocationState()"
  name: "allocationState()"
  nameWithType: "PoolInner.allocationState()"
  summary: "Get the allocationState property: Whether the pool is resizing."
  syntax: "public AllocationState allocationState()"
  returns:
    description: "the allocationState value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.AllocationState?alt=com.azure.resourcemanager.batch.models.AllocationState&text=AllocationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.allocationStateTransitionTime()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.allocationStateTransitionTime()"
  name: "allocationStateTransitionTime()"
  nameWithType: "PoolInner.allocationStateTransitionTime()"
  summary: "Get the allocationStateTransitionTime property: The time at which the pool entered its current allocation state."
  syntax: "public OffsetDateTime allocationStateTransitionTime()"
  returns:
    description: "the allocationStateTransitionTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.applicationLicenses()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.applicationLicenses()"
  name: "applicationLicenses()"
  nameWithType: "PoolInner.applicationLicenses()"
  summary: "Get the applicationLicenses property: The list of application licenses the Batch service will make available on each compute node in the pool. The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail."
  syntax: "public List<String> applicationLicenses()"
  returns:
    description: "the applicationLicenses value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.applicationPackages()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.applicationPackages()"
  name: "applicationPackages()"
  nameWithType: "PoolInner.applicationPackages()"
  summary: "Get the applicationPackages property: The list of application packages to be installed on each compute node in the pool. Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool."
  syntax: "public List<ApplicationPackageReference> applicationPackages()"
  returns:
    description: "the applicationPackages value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.ApplicationPackageReference?alt=com.azure.resourcemanager.batch.models.ApplicationPackageReference&text=ApplicationPackageReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.autoScaleRun()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.autoScaleRun()"
  name: "autoScaleRun()"
  nameWithType: "PoolInner.autoScaleRun()"
  summary: "Get the autoScaleRun property: The results and errors from an execution of a pool autoscale formula. This property is set only if the pool automatically scales, i.e. autoScaleSettings are used."
  syntax: "public AutoScaleRun autoScaleRun()"
  returns:
    description: "the autoScaleRun value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.AutoScaleRun?alt=com.azure.resourcemanager.batch.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.certificates()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.certificates()"
  name: "certificates()"
  nameWithType: "PoolInner.certificates()"
  summary: "Get the certificates property: The list of certificates to be installed on each compute node in the pool. For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ\\_BATCH\\_CERTIFICATES\\_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\\{user-name\\}/certs) and certificates are placed in that directory."
  syntax: "public List<CertificateReference> certificates()"
  returns:
    description: "the certificates value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.CertificateReference?alt=com.azure.resourcemanager.batch.models.CertificateReference&text=CertificateReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.creationTime()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.creationTime()"
  name: "creationTime()"
  nameWithType: "PoolInner.creationTime()"
  summary: "Get the creationTime property: The creation time of the pool."
  syntax: "public OffsetDateTime creationTime()"
  returns:
    description: "the creationTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.currentDedicatedNodes()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.currentDedicatedNodes()"
  name: "currentDedicatedNodes()"
  nameWithType: "PoolInner.currentDedicatedNodes()"
  summary: "Get the currentDedicatedNodes property: The number of compute nodes currently in the pool."
  syntax: "public Integer currentDedicatedNodes()"
  returns:
    description: "the currentDedicatedNodes value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.currentLowPriorityNodes()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.currentLowPriorityNodes()"
  name: "currentLowPriorityNodes()"
  nameWithType: "PoolInner.currentLowPriorityNodes()"
  summary: "Get the currentLowPriorityNodes property: The number of Spot/low-priority compute nodes currently in the pool."
  syntax: "public Integer currentLowPriorityNodes()"
  returns:
    description: "the currentLowPriorityNodes value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.deploymentConfiguration()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.deploymentConfiguration()"
  name: "deploymentConfiguration()"
  nameWithType: "PoolInner.deploymentConfiguration()"
  summary: "Get the deploymentConfiguration property: Deployment configuration properties. Using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS)."
  syntax: "public DeploymentConfiguration deploymentConfiguration()"
  returns:
    description: "the deploymentConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DeploymentConfiguration?alt=com.azure.resourcemanager.batch.models.DeploymentConfiguration&text=DeploymentConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.displayName()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.displayName()"
  name: "displayName()"
  nameWithType: "PoolInner.displayName()"
  summary: "Get the displayName property: The display name for the pool. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  syntax: "public String displayName()"
  returns:
    description: "the displayName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.etag()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.etag()"
  name: "etag()"
  nameWithType: "PoolInner.etag()"
  summary: "Get the etag property: The ETag of the resource, used for concurrency statements."
  syntax: "public String etag()"
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.identity()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.identity()"
  name: "identity()"
  nameWithType: "PoolInner.identity()"
  summary: "Get the identity property: The type of identity used for the Batch Pool."
  syntax: "public BatchPoolIdentity identity()"
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.BatchPoolIdentity?alt=com.azure.resourcemanager.batch.models.BatchPoolIdentity&text=BatchPoolIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.interNodeCommunication()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.interNodeCommunication()"
  name: "interNodeCommunication()"
  nameWithType: "PoolInner.interNodeCommunication()"
  summary: "Get the interNodeCommunication property: Whether the pool permits direct communication between nodes. This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'."
  syntax: "public InterNodeCommunicationState interNodeCommunication()"
  returns:
    description: "the interNodeCommunication value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.InterNodeCommunicationState?alt=com.azure.resourcemanager.batch.models.InterNodeCommunicationState&text=InterNodeCommunicationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.lastModified()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.lastModified()"
  name: "lastModified()"
  nameWithType: "PoolInner.lastModified()"
  summary: "Get the lastModified property: The last modified time of the pool. This is the last time at which the pool level data, such as the targetDedicatedNodes or autoScaleSettings, changed. It does not factor in node-level changes such as a compute node changing state."
  syntax: "public OffsetDateTime lastModified()"
  returns:
    description: "the lastModified value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.metadata()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.metadata()"
  name: "metadata()"
  nameWithType: "PoolInner.metadata()"
  summary: "Get the metadata property: A list of name-value pairs associated with the pool as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  syntax: "public List<MetadataItem> metadata()"
  returns:
    description: "the metadata value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.MetadataItem?alt=com.azure.resourcemanager.batch.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.mountConfiguration()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.mountConfiguration()"
  name: "mountConfiguration()"
  nameWithType: "PoolInner.mountConfiguration()"
  summary: "Get the mountConfiguration property: A list of file systems to mount on each node in the pool. This supports Azure Files, NFS, CIFS/SMB, and Blobfuse."
  syntax: "public List<MountConfiguration> mountConfiguration()"
  returns:
    description: "the mountConfiguration value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.MountConfiguration?alt=com.azure.resourcemanager.batch.models.MountConfiguration&text=MountConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.networkConfiguration()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.networkConfiguration()"
  name: "networkConfiguration()"
  nameWithType: "PoolInner.networkConfiguration()"
  summary: "Get the networkConfiguration property: The network configuration for a pool."
  syntax: "public NetworkConfiguration networkConfiguration()"
  returns:
    description: "the networkConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NetworkConfiguration?alt=com.azure.resourcemanager.batch.models.NetworkConfiguration&text=NetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.provisioningState()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PoolInner.provisioningState()"
  summary: "Get the provisioningState property: The current state of the pool."
  syntax: "public PoolProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.PoolProvisioningState?alt=com.azure.resourcemanager.batch.models.PoolProvisioningState&text=PoolProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.provisioningStateTransitionTime()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.provisioningStateTransitionTime()"
  name: "provisioningStateTransitionTime()"
  nameWithType: "PoolInner.provisioningStateTransitionTime()"
  summary: "Get the provisioningStateTransitionTime property: The time at which the pool entered its current state."
  syntax: "public OffsetDateTime provisioningStateTransitionTime()"
  returns:
    description: "the provisioningStateTransitionTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.resizeOperationStatus()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.resizeOperationStatus()"
  name: "resizeOperationStatus()"
  nameWithType: "PoolInner.resizeOperationStatus()"
  summary: "Get the resizeOperationStatus property: Details about the current or last completed resize operation. Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady)."
  syntax: "public ResizeOperationStatus resizeOperationStatus()"
  returns:
    description: "the resizeOperationStatus value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ResizeOperationStatus?alt=com.azure.resourcemanager.batch.models.ResizeOperationStatus&text=ResizeOperationStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.scaleSettings()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.scaleSettings()"
  name: "scaleSettings()"
  nameWithType: "PoolInner.scaleSettings()"
  summary: "Get the scaleSettings property: Scale settings for the pool Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes."
  syntax: "public ScaleSettings scaleSettings()"
  returns:
    description: "the scaleSettings value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ScaleSettings?alt=com.azure.resourcemanager.batch.models.ScaleSettings&text=ScaleSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.startTask()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.startTask()"
  name: "startTask()"
  nameWithType: "PoolInner.startTask()"
  summary: "Get the startTask property: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged. In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool."
  syntax: "public StartTask startTask()"
  returns:
    description: "the startTask value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.StartTask?alt=com.azure.resourcemanager.batch.models.StartTask&text=StartTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.taskSchedulingPolicy()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.taskSchedulingPolicy()"
  name: "taskSchedulingPolicy()"
  nameWithType: "PoolInner.taskSchedulingPolicy()"
  summary: "Get the taskSchedulingPolicy property: Specifies how tasks should be distributed across compute nodes. If not specified, the default is spread."
  syntax: "public TaskSchedulingPolicy taskSchedulingPolicy()"
  returns:
    description: "the taskSchedulingPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.TaskSchedulingPolicy?alt=com.azure.resourcemanager.batch.models.TaskSchedulingPolicy&text=TaskSchedulingPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.taskSlotsPerNode()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.taskSlotsPerNode()"
  name: "taskSlotsPerNode()"
  nameWithType: "PoolInner.taskSlotsPerNode()"
  summary: "Get the taskSlotsPerNode property: The number of task slots that can be used to run concurrent tasks on a single compute node in the pool. The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256."
  syntax: "public Integer taskSlotsPerNode()"
  returns:
    description: "the taskSlotsPerNode value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.userAccounts()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.userAccounts()"
  name: "userAccounts()"
  nameWithType: "PoolInner.userAccounts()"
  summary: "Get the userAccounts property: The list of user accounts to be created on each node in the pool."
  syntax: "public List<UserAccount> userAccounts()"
  returns:
    description: "the userAccounts value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.UserAccount?alt=com.azure.resourcemanager.batch.models.UserAccount&text=UserAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.validate()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.validate()"
  name: "validate()"
  nameWithType: "PoolInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.vmSize()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.vmSize()"
  name: "vmSize()"
  nameWithType: "PoolInner.vmSize()"
  summary: "Get the vmSize property: The size of virtual machines in the pool. All VMs in a pool are the same size. For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD\\_A0 and those with premium storage (STANDARD\\_GS, STANDARD\\_DS, and STANDARD\\_DSV2 series)."
  syntax: "public String vmSize()"
  returns:
    description: "the vmSize value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withApplicationLicenses(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withApplicationLicenses(List<String> applicationLicenses)"
  name: "withApplicationLicenses(List<String> applicationLicenses)"
  nameWithType: "PoolInner.withApplicationLicenses(List<String> applicationLicenses)"
  summary: "Set the applicationLicenses property: The list of application licenses the Batch service will make available on each compute node in the pool. The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail."
  parameters:
  - description: "the applicationLicenses value to set."
    name: "applicationLicenses"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolInner withApplicationLicenses(List<String> applicationLicenses)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withApplicationPackages(java.util.List<com.azure.resourcemanager.batch.models.ApplicationPackageReference>)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withApplicationPackages(List<ApplicationPackageReference> applicationPackages)"
  name: "withApplicationPackages(List<ApplicationPackageReference> applicationPackages)"
  nameWithType: "PoolInner.withApplicationPackages(List<ApplicationPackageReference> applicationPackages)"
  summary: "Set the applicationPackages property: The list of application packages to be installed on each compute node in the pool. Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool."
  parameters:
  - description: "the applicationPackages value to set."
    name: "applicationPackages"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.ApplicationPackageReference?alt=com.azure.resourcemanager.batch.models.ApplicationPackageReference&text=ApplicationPackageReference\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolInner withApplicationPackages(List<ApplicationPackageReference> applicationPackages)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withCertificates(java.util.List<com.azure.resourcemanager.batch.models.CertificateReference>)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withCertificates(List<CertificateReference> certificates)"
  name: "withCertificates(List<CertificateReference> certificates)"
  nameWithType: "PoolInner.withCertificates(List<CertificateReference> certificates)"
  summary: "Set the certificates property: The list of certificates to be installed on each compute node in the pool. For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ\\_BATCH\\_CERTIFICATES\\_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\\{user-name\\}/certs) and certificates are placed in that directory."
  parameters:
  - description: "the certificates value to set."
    name: "certificates"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.CertificateReference?alt=com.azure.resourcemanager.batch.models.CertificateReference&text=CertificateReference\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolInner withCertificates(List<CertificateReference> certificates)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withDeploymentConfiguration(com.azure.resourcemanager.batch.models.DeploymentConfiguration)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)"
  name: "withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)"
  nameWithType: "PoolInner.withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)"
  summary: "Set the deploymentConfiguration property: Deployment configuration properties. Using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS)."
  parameters:
  - description: "the deploymentConfiguration value to set."
    name: "deploymentConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DeploymentConfiguration?alt=com.azure.resourcemanager.batch.models.DeploymentConfiguration&text=DeploymentConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolInner withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withDisplayName(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withDisplayName(String displayName)"
  name: "withDisplayName(String displayName)"
  nameWithType: "PoolInner.withDisplayName(String displayName)"
  summary: "Set the displayName property: The display name for the pool. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  parameters:
  - description: "the displayName value to set."
    name: "displayName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolInner withDisplayName(String displayName)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withIdentity(com.azure.resourcemanager.batch.models.BatchPoolIdentity)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withIdentity(BatchPoolIdentity identity)"
  name: "withIdentity(BatchPoolIdentity identity)"
  nameWithType: "PoolInner.withIdentity(BatchPoolIdentity identity)"
  summary: "Set the identity property: The type of identity used for the Batch Pool."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.BatchPoolIdentity?alt=com.azure.resourcemanager.batch.models.BatchPoolIdentity&text=BatchPoolIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolInner withIdentity(BatchPoolIdentity identity)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withInterNodeCommunication(com.azure.resourcemanager.batch.models.InterNodeCommunicationState)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)"
  name: "withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)"
  nameWithType: "PoolInner.withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)"
  summary: "Set the interNodeCommunication property: Whether the pool permits direct communication between nodes. This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'."
  parameters:
  - description: "the interNodeCommunication value to set."
    name: "interNodeCommunication"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.InterNodeCommunicationState?alt=com.azure.resourcemanager.batch.models.InterNodeCommunicationState&text=InterNodeCommunicationState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolInner withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withMetadata(java.util.List<com.azure.resourcemanager.batch.models.MetadataItem>)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withMetadata(List<MetadataItem> metadata)"
  name: "withMetadata(List<MetadataItem> metadata)"
  nameWithType: "PoolInner.withMetadata(List<MetadataItem> metadata)"
  summary: "Set the metadata property: A list of name-value pairs associated with the pool as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  parameters:
  - description: "the metadata value to set."
    name: "metadata"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.MetadataItem?alt=com.azure.resourcemanager.batch.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolInner withMetadata(List<MetadataItem> metadata)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withMountConfiguration(java.util.List<com.azure.resourcemanager.batch.models.MountConfiguration>)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withMountConfiguration(List<MountConfiguration> mountConfiguration)"
  name: "withMountConfiguration(List<MountConfiguration> mountConfiguration)"
  nameWithType: "PoolInner.withMountConfiguration(List<MountConfiguration> mountConfiguration)"
  summary: "Set the mountConfiguration property: A list of file systems to mount on each node in the pool. This supports Azure Files, NFS, CIFS/SMB, and Blobfuse."
  parameters:
  - description: "the mountConfiguration value to set."
    name: "mountConfiguration"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.MountConfiguration?alt=com.azure.resourcemanager.batch.models.MountConfiguration&text=MountConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolInner withMountConfiguration(List<MountConfiguration> mountConfiguration)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withNetworkConfiguration(com.azure.resourcemanager.batch.models.NetworkConfiguration)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withNetworkConfiguration(NetworkConfiguration networkConfiguration)"
  name: "withNetworkConfiguration(NetworkConfiguration networkConfiguration)"
  nameWithType: "PoolInner.withNetworkConfiguration(NetworkConfiguration networkConfiguration)"
  summary: "Set the networkConfiguration property: The network configuration for a pool."
  parameters:
  - description: "the networkConfiguration value to set."
    name: "networkConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NetworkConfiguration?alt=com.azure.resourcemanager.batch.models.NetworkConfiguration&text=NetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolInner withNetworkConfiguration(NetworkConfiguration networkConfiguration)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withScaleSettings(com.azure.resourcemanager.batch.models.ScaleSettings)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withScaleSettings(ScaleSettings scaleSettings)"
  name: "withScaleSettings(ScaleSettings scaleSettings)"
  nameWithType: "PoolInner.withScaleSettings(ScaleSettings scaleSettings)"
  summary: "Set the scaleSettings property: Scale settings for the pool Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes."
  parameters:
  - description: "the scaleSettings value to set."
    name: "scaleSettings"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ScaleSettings?alt=com.azure.resourcemanager.batch.models.ScaleSettings&text=ScaleSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolInner withScaleSettings(ScaleSettings scaleSettings)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withStartTask(com.azure.resourcemanager.batch.models.StartTask)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withStartTask(StartTask startTask)"
  name: "withStartTask(StartTask startTask)"
  nameWithType: "PoolInner.withStartTask(StartTask startTask)"
  summary: "Set the startTask property: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged. In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool."
  parameters:
  - description: "the startTask value to set."
    name: "startTask"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.StartTask?alt=com.azure.resourcemanager.batch.models.StartTask&text=StartTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolInner withStartTask(StartTask startTask)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withTaskSchedulingPolicy(com.azure.resourcemanager.batch.models.TaskSchedulingPolicy)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)"
  name: "withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)"
  nameWithType: "PoolInner.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)"
  summary: "Set the taskSchedulingPolicy property: Specifies how tasks should be distributed across compute nodes. If not specified, the default is spread."
  parameters:
  - description: "the taskSchedulingPolicy value to set."
    name: "taskSchedulingPolicy"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.TaskSchedulingPolicy?alt=com.azure.resourcemanager.batch.models.TaskSchedulingPolicy&text=TaskSchedulingPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolInner withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withTaskSlotsPerNode(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withTaskSlotsPerNode(Integer taskSlotsPerNode)"
  name: "withTaskSlotsPerNode(Integer taskSlotsPerNode)"
  nameWithType: "PoolInner.withTaskSlotsPerNode(Integer taskSlotsPerNode)"
  summary: "Set the taskSlotsPerNode property: The number of task slots that can be used to run concurrent tasks on a single compute node in the pool. The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256."
  parameters:
  - description: "the taskSlotsPerNode value to set."
    name: "taskSlotsPerNode"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolInner withTaskSlotsPerNode(Integer taskSlotsPerNode)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withUserAccounts(java.util.List<com.azure.resourcemanager.batch.models.UserAccount>)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withUserAccounts(List<UserAccount> userAccounts)"
  name: "withUserAccounts(List<UserAccount> userAccounts)"
  nameWithType: "PoolInner.withUserAccounts(List<UserAccount> userAccounts)"
  summary: "Set the userAccounts property: The list of user accounts to be created on each node in the pool."
  parameters:
  - description: "the userAccounts value to set."
    name: "userAccounts"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.UserAccount?alt=com.azure.resourcemanager.batch.models.UserAccount&text=UserAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolInner withUserAccounts(List<UserAccount> userAccounts)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withVmSize(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolInner.withVmSize(String vmSize)"
  name: "withVmSize(String vmSize)"
  nameWithType: "PoolInner.withVmSize(String vmSize)"
  summary: "Set the vmSize property: The size of virtual machines in the pool. All VMs in a pool are the same size. For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD\\_A0 and those with premium storage (STANDARD\\_GS, STANDARD\\_DS, and STANDARD\\_DSV2 series)."
  parameters:
  - description: "the vmSize value to set."
    name: "vmSize"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolInner withVmSize(String vmSize)"
  returns:
    description: "the PoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolInner?alt=com.azure.resourcemanager.batch.fluent.models.PoolInner&text=PoolInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.batch.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batch:1.0.0
