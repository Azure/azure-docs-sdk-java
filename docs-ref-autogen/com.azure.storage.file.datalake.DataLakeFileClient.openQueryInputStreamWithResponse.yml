### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeFileClient.openQueryInputStreamWithResponse*"
fullName: "com.azure.storage.file.datalake.DataLakeFileClient.openQueryInputStreamWithResponse"
name: "openQueryInputStreamWithResponse"
nameWithType: "DataLakeFileClient.openQueryInputStreamWithResponse"
members:
- uid: "com.azure.storage.file.datalake.DataLakeFileClient.openQueryInputStreamWithResponse(com.azure.storage.file.datalake.options.FileQueryOptions)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileClient.openQueryInputStreamWithResponse(FileQueryOptions queryOptions)"
  name: "openQueryInputStreamWithResponse(FileQueryOptions queryOptions)"
  nameWithType: "DataLakeFileClient.openQueryInputStreamWithResponse(FileQueryOptions queryOptions)"
  summary: "Opens an input stream to query the file.\n\nFor more information, see the [Azure Docs][]\n\n**Code Samples**\n\n```java\nString expression = \"SELECT * from BlobStorage\";\n FileQuerySerialization input = new FileQueryDelimitedSerialization()\n     .setColumnSeparator(',')\n     .setEscapeChar('\\n')\n     .setRecordSeparator('\\n')\n     .setHeadersPresent(true)\n     .setFieldQuote('\"');\n FileQuerySerialization output = new FileQueryJsonSerialization()\n     .setRecordSeparator('\\n');\n DataLakeRequestConditions requestConditions = new DataLakeRequestConditions()\n     .setLeaseId(\"leaseId\");\n Consumer<FileQueryError> errorConsumer = System.out::println;\n Consumer<FileQueryProgress> progressConsumer = progress -> System.out.println(\"total file bytes read: \"\n     + progress.getBytesScanned());\n FileQueryOptions queryOptions = new FileQueryOptions(expression)\n     .setInputSerialization(input)\n     .setOutputSerialization(output)\n     .setRequestConditions(requestConditions)\n     .setErrorConsumer(errorConsumer)\n     .setProgressConsumer(progressConsumer);\n \n InputStream inputStream = client.openQueryInputStreamWithResponse(queryOptions).getValue();\n // Now you can read from the input stream like you would normally.\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/query-blob-contents"
  parameters:
  - description: "<xref uid=\"com.azure.storage.file.datalake.options.FileQueryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"The query options\"></xref>."
    name: "queryOptions"
    type: "<xref href=\"com.azure.storage.file.datalake.options.FileQueryOptions?alt=com.azure.storage.file.datalake.options.FileQueryOptions&text=FileQueryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<InputStream> openQueryInputStreamWithResponse(FileQueryOptions queryOptions)"
  returns:
    description: "A response containing status code and HTTP headers including an <code>InputStream</code> object\n that represents the stream to use for reading the query response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.4.0
