### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.Jobs.terminate*"
fullName: "com.microsoft.azure.batch.protocol.Jobs.terminate"
name: "terminate"
nameWithType: "Jobs.terminate"
members:
- uid: "com.microsoft.azure.batch.protocol.Jobs.terminate(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.terminate(String jobId)"
  name: "terminate(String jobId)"
  nameWithType: "Jobs.terminate(String jobId)"
  summary: "Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled."
  parameters:
  - description: "The ID of the Job to terminate."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void terminate(String jobId)"
- uid: "com.microsoft.azure.batch.protocol.Jobs.terminate(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  name: "terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  nameWithType: "Jobs.terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  summary: "Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled."
  parameters:
  - description: "The ID of the Job to terminate."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The text you want to appear as the Job's TerminateReason. The default is 'UserTerminate'."
    name: "terminateReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobTerminateOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobTerminateOptions?alt=com.microsoft.azure.batch.protocol.models.JobTerminateOptions&text=JobTerminateOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:9.0.0
