### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset"
fullName: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset"
name: "VideoAnalyzerPreset"
nameWithType: "VideoAnalyzerPreset"
summary: "A video analyzer preset that extracts insights (rich metadata) from both audio and video, and outputs a JSON format file."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.Preset?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.AudioAnalyzerPreset?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.mediaservices.models.AudioAnalyzerPreset.audioLanguage()"
- "com.azure.resourcemanager.mediaservices.models.AudioAnalyzerPreset.experimentalOptions()"
- "com.azure.resourcemanager.mediaservices.models.AudioAnalyzerPreset.mode()"
- "com.azure.resourcemanager.mediaservices.models.AudioAnalyzerPreset.validate()"
- "com.azure.resourcemanager.mediaservices.models.AudioAnalyzerPreset.withAudioLanguage(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.models.AudioAnalyzerPreset.withExperimentalOptions(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.resourcemanager.mediaservices.models.AudioAnalyzerPreset.withMode(com.azure.resourcemanager.mediaservices.models.AudioAnalysisMode)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VideoAnalyzerPreset extends AudioAnalyzerPreset"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.VideoAnalyzerPreset()"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.VideoAnalyzerPreset()"
  name: "VideoAnalyzerPreset()"
  nameWithType: "VideoAnalyzerPreset.VideoAnalyzerPreset()"
  syntax: "public VideoAnalyzerPreset()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.insightsToExtract()"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.insightsToExtract()"
  name: "insightsToExtract()"
  nameWithType: "VideoAnalyzerPreset.insightsToExtract()"
  summary: "Get the insights<wbr>ToExtract property: Defines the type of insights that you want the service to generate."
  syntax: "public InsightsType insightsToExtract()"
  desc: "Get the insightsToExtract property: Defines the type of insights that you want the service to generate. The allowed values are 'AudioInsightsOnly', 'VideoInsightsOnly', and 'AllInsights'. The default is AllInsights. If you set this to AllInsights and the input is audio only, then only audio insights are generated. Similarly if the input is video only, then only video insights are generated. It is recommended that you not use AudioInsightsOnly if you expect some of your inputs to be video only; or use VideoInsightsOnly if you expect some of your inputs to be audio only. Your Jobs in such conditions would error out."
  returns:
    description: "the insightsToExtract value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.InsightsType?alt=com.azure.resourcemanager.mediaservices.models.InsightsType&text=InsightsType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.validate()"
  name: "validate()"
  nameWithType: "VideoAnalyzerPreset.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.mediaservices.models.AudioAnalyzerPreset.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.withAudioLanguage(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.withAudioLanguage(String audioLanguage)"
  name: "withAudioLanguage(String audioLanguage)"
  nameWithType: "VideoAnalyzerPreset.withAudioLanguage(String audioLanguage)"
  summary: "Set the audio<wbr>Language property: The language for the audio payload in the input using the BCP-47 format of 'language tag-region' (e.<wbr>g: 'en-US')."
  overridden: "com.azure.resourcemanager.mediaservices.models.AudioAnalyzerPreset.withAudioLanguage(java.lang.String)"
  parameters:
  - name: "audioLanguage"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoAnalyzerPreset withAudioLanguage(String audioLanguage)"
  desc: "Set the audioLanguage property: The language for the audio payload in the input using the BCP-47 format of 'language tag-region' (e.g: 'en-US'). If you know the language of your content, it is recommended that you specify it. The language must be specified explicitly for AudioAnalysisMode::Basic, since automatic language detection is not included in basic mode. If the language isn't specified or set to null, automatic language detection will choose the first language detected and process with the selected language for the duration of the file. It does not currently support dynamically switching between languages after the first language is detected. The automatic detection works best with audio recordings with clearly discernable speech. If automatic detection fails to find the language, transcription would fallback to 'en-US'.\" The list of supported languages is available here: https://go.microsoft.com/fwlink/?linkid=2109463."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset?alt=com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset&text=VideoAnalyzerPreset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.withExperimentalOptions(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.withExperimentalOptions(Map<String,String> experimentalOptions)"
  name: "withExperimentalOptions(Map<String,String> experimentalOptions)"
  nameWithType: "VideoAnalyzerPreset.withExperimentalOptions(Map<String,String> experimentalOptions)"
  summary: "Set the experimental<wbr>Options property: Dictionary containing key value pairs for parameters not exposed in the preset itself."
  overridden: "com.azure.resourcemanager.mediaservices.models.AudioAnalyzerPreset.withExperimentalOptions(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "experimentalOptions"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VideoAnalyzerPreset withExperimentalOptions(Map<String,String> experimentalOptions)"
  desc: "Set the experimentalOptions property: Dictionary containing key value pairs for parameters not exposed in the preset itself."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset?alt=com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset&text=VideoAnalyzerPreset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.withInsightsToExtract(com.azure.resourcemanager.mediaservices.models.InsightsType)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.withInsightsToExtract(InsightsType insightsToExtract)"
  name: "withInsightsToExtract(InsightsType insightsToExtract)"
  nameWithType: "VideoAnalyzerPreset.withInsightsToExtract(InsightsType insightsToExtract)"
  summary: "Set the insights<wbr>ToExtract property: Defines the type of insights that you want the service to generate."
  parameters:
  - description: "the insightsToExtract value to set."
    name: "insightsToExtract"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.InsightsType?alt=com.azure.resourcemanager.mediaservices.models.InsightsType&text=InsightsType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoAnalyzerPreset withInsightsToExtract(InsightsType insightsToExtract)"
  desc: "Set the insightsToExtract property: Defines the type of insights that you want the service to generate. The allowed values are 'AudioInsightsOnly', 'VideoInsightsOnly', and 'AllInsights'. The default is AllInsights. If you set this to AllInsights and the input is audio only, then only audio insights are generated. Similarly if the input is video only, then only video insights are generated. It is recommended that you not use AudioInsightsOnly if you expect some of your inputs to be video only; or use VideoInsightsOnly if you expect some of your inputs to be audio only. Your Jobs in such conditions would error out."
  returns:
    description: "the VideoAnalyzerPreset object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset?alt=com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset&text=VideoAnalyzerPreset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.withMode(com.azure.resourcemanager.mediaservices.models.AudioAnalysisMode)"
  fullName: "com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset.withMode(AudioAnalysisMode mode)"
  name: "withMode(AudioAnalysisMode mode)"
  nameWithType: "VideoAnalyzerPreset.withMode(AudioAnalysisMode mode)"
  summary: "Set the mode property: Determines the set of audio analysis operations to be performed."
  overridden: "com.azure.resourcemanager.mediaservices.models.AudioAnalyzerPreset.withMode(com.azure.resourcemanager.mediaservices.models.AudioAnalysisMode)"
  parameters:
  - name: "mode"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.AudioAnalysisMode?alt=com.azure.resourcemanager.mediaservices.models.AudioAnalysisMode&text=AudioAnalysisMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VideoAnalyzerPreset withMode(AudioAnalysisMode mode)"
  desc: "Set the mode property: Determines the set of audio analysis operations to be performed. If unspecified, the Standard AudioAnalysisMode would be chosen."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset?alt=com.azure.resourcemanager.mediaservices.models.VideoAnalyzerPreset&text=VideoAnalyzerPreset\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A video analyzer preset that extracts insights (rich metadata) from both audio and video, and outputs a JSON format file."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0
