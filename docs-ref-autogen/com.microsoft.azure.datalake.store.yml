### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.datalake.store
  id: store
  children:
  - com.microsoft.azure.datalake.store.ADLException
  - com.microsoft.azure.datalake.store.ADLFileInputStream
  - com.microsoft.azure.datalake.store.ADLFileOutputStream
  - com.microsoft.azure.datalake.store.ADLStoreClient
  - com.microsoft.azure.datalake.store.ADLStoreOptions
  - com.microsoft.azure.datalake.store.ContentSummary
  - com.microsoft.azure.datalake.store.Core
  - com.microsoft.azure.datalake.store.DirectoryEntry
  - com.microsoft.azure.datalake.store.DirectoryEntryType
  - com.microsoft.azure.datalake.store.ExpiryOption
  - com.microsoft.azure.datalake.store.IfExists
  - com.microsoft.azure.datalake.store.LatencyTracker
  - com.microsoft.azure.datalake.store.OperationResponse
  - com.microsoft.azure.datalake.store.QueryParams
  - com.microsoft.azure.datalake.store.RequestOptions
  - com.microsoft.azure.datalake.store.SSLSocketFactoryEx
  - com.microsoft.azure.datalake.store.SSLSocketFactoryEx.SSLChannelMode
  - com.microsoft.azure.datalake.store.SyncFlag
  - com.microsoft.azure.datalake.store.UserGroupRepresentation
  - com.microsoft.azure.datalake.store.Utils
  href: com.microsoft.azure.datalake.store.yml
  langs:
  - java
  name: com.microsoft.azure.datalake.store
  nameWithType: com.microsoft.azure.datalake.store
  fullName: com.microsoft.azure.datalake.store
  type: Namespace
  source:
    remote:
      path: '[generated]'
    path: '[generated]'
  summary: "<p>The main Azure Data Lake Store SDK classes. If you are new to the SDK, start exploring from the <xref uid=\"com.microsoft.azure.datalake.store.ADLStoreClient\" data-throw-if-not-resolved=\"false\">com.microsoft.azure.datalake.store.ADLStoreClient</xref> class. </p>"
  syntax:
    content: package com.microsoft.azure.datalake.store
references:
- uid: com.microsoft.azure.datalake.store.acl
  href: com.microsoft.azure.datalake.store.acl.yml
  name: com.microsoft.azure.datalake.store.acl
  nameWithType: com.microsoft.azure.datalake.store.acl
  fullName: com.microsoft.azure.datalake.store.acl
  type: Namespace
  summary: "<p>Objects used for ACLs. These objects are used as parameters to the ACL calls in <xref uid=\"com.microsoft.azure.datalake.store.Core\" data-throw-if-not-resolved=\"false\">com.microsoft.azure.datalake.store.Core</xref> and <xref uid=\"com.microsoft.azure.datalake.store.ADLStoreClient\" data-throw-if-not-resolved=\"false\">com.microsoft.azure.datalake.store.ADLStoreClient</xref> classes. </p>"
  syntax:
    content: package com.microsoft.azure.datalake.store.acl
- uid: com.microsoft.azure.datalake.store.oauth2
  href: com.microsoft.azure.datalake.store.oauth2.yml
  name: com.microsoft.azure.datalake.store.oauth2
  nameWithType: com.microsoft.azure.datalake.store.oauth2
  fullName: com.microsoft.azure.datalake.store.oauth2
  type: Namespace
  summary: "<p>Classes to help fetch and manage Azure ActiveDirectory tokens </p>"
  syntax:
    content: package com.microsoft.azure.datalake.store.oauth2
- uid: com.microsoft.azure.datalake.store.retrypolicies
  href: com.microsoft.azure.datalake.store.retrypolicies.yml
  name: com.microsoft.azure.datalake.store.retrypolicies
  nameWithType: com.microsoft.azure.datalake.store.retrypolicies
  fullName: com.microsoft.azure.datalake.store.retrypolicies
  type: Namespace
  summary: "<p>All the retry policies. </p>"
  syntax:
    content: package com.microsoft.azure.datalake.store.retrypolicies
- uid: com.microsoft.azure.datalake.store.ADLStoreClient
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.ADLStoreClient.yml
  name: ADLStoreClient
  nameWithType: ADLStoreClient
  fullName: com.microsoft.azure.datalake.store.ADLStoreClient
  type: Class
  summary: "<p>\r\n  <code>ADLStoreClient \r\n    </code> class represents a client to Azure Data Lake. It can be used to perform operations on files and directories. </p>"
  syntax:
    content: public class ADLStoreClient
- uid: com.microsoft.azure.datalake.store.ADLException
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.ADLException.yml
  name: ADLException
  nameWithType: ADLException
  fullName: com.microsoft.azure.datalake.store.ADLException
  type: Class
  summary: "<p>Exception type returned by Azure Data Lake SDK methods. Derives from <xref uid=\"\" data-throw-if-not-resolved=\"false\">IOException</xref>. Contains a number of additional fields that contain information about the success or failure of a server call. </p>"
  syntax:
    content: public class ADLException
- uid: com.microsoft.azure.datalake.store.ADLFileInputStream
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.ADLFileInputStream.yml
  name: ADLFileInputStream
  nameWithType: ADLFileInputStream
  fullName: com.microsoft.azure.datalake.store.ADLFileInputStream
  type: Class
  summary: "<p>ADLFileInputStream can be used to read data from an open file on ADL. It is a buffering stream, that reads data from the server in bulk, and then satisfies user reads from the buffer. Default buffer size is 4MB.</p>\r\n<p>\r\n  <b>Thread-safety</b>: Note that methods in this class are NOT thread-safe. </p>"
  syntax:
    content: public class ADLFileInputStream
- uid: com.microsoft.azure.datalake.store.ADLFileOutputStream
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.ADLFileOutputStream.yml
  name: ADLFileOutputStream
  nameWithType: ADLFileOutputStream
  fullName: com.microsoft.azure.datalake.store.ADLFileOutputStream
  type: Class
  summary: "<p>\r\n  <code>ADLFileOutputStream \r\n    </code> is used to add data to an Azure Data Lake File. It is a buffering stream that accumulates user writes, and then writes to the server in chunks. Default chunk size is 4MB.</p>\r\n<p>\r\n  <b>Thread-safety</b>: Note that methods in this class are NOT thread-safe.</p>"
  syntax:
    content: public class ADLFileOutputStream
- uid: com.microsoft.azure.datalake.store.ADLStoreOptions
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.ADLStoreOptions.yml
  name: ADLStoreOptions
  nameWithType: ADLStoreOptions
  fullName: com.microsoft.azure.datalake.store.ADLStoreOptions
  type: Class
  summary: "<p>Options to configure the behavior of <xref uid=\"com.microsoft.azure.datalake.store.ADLStoreClient\" data-throw-if-not-resolved=\"false\">ADLStoreClient</xref></p>"
  syntax:
    content: public class ADLStoreOptions
- uid: com.microsoft.azure.datalake.store.ContentSummary
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.ContentSummary.yml
  name: ContentSummary
  nameWithType: ContentSummary
  fullName: com.microsoft.azure.datalake.store.ContentSummary
  type: Class
  summary: "<p>structure that contains the return values from getContentSummary call. </p>"
  syntax:
    content: public class ContentSummary
- uid: com.microsoft.azure.datalake.store.Core
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.Core.yml
  name: Core
  nameWithType: Core
  fullName: com.microsoft.azure.datalake.store.Core
  type: Class
  summary: "<p>protocol.Core class implements the calls for the RESP API. There is one method in Core for every REST API supported by the server. </p>\r\n<p>The methods in this class tend to be lower-level, exposing all the details of the underlying operation. To call the methods, instantiate a <xref uid=\"com.microsoft.azure.datalake.store.RequestOptions\" data-throw-if-not-resolved=\"false\">RequestOptions</xref> object first. Assign any of the member values as needed (e.g., the RetryPolicy). Then create a new <xref uid=\"com.microsoft.azure.datalake.store.OperationResponse\" data-throw-if-not-resolved=\"false\">OperationResponse</xref> object. The <xref uid=\"com.microsoft.azure.datalake.store.OperationResponse\" data-throw-if-not-resolved=\"false\">OperationResponse</xref> is used for passing the call results and stats back from the call. </p>\r\n<p>Failures originating in Core methods are communicated back through the <xref uid=\"com.microsoft.azure.datalake.store.OperationResponse\" data-throw-if-not-resolved=\"false\">OperationResponse</xref> parameter. </p>\r\n<p>\r\n  <b>Thread Safety: </b> all static methods in this class are thread-safe</p>"
  syntax:
    content: public class Core
- uid: com.microsoft.azure.datalake.store.DirectoryEntry
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.DirectoryEntry.yml
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: com.microsoft.azure.datalake.store.DirectoryEntry
  type: Class
  summary: "<p>filesystem metadata of a directory enrty (a file or a directory) in ADL. </p>"
  syntax:
    content: public class DirectoryEntry
- uid: com.microsoft.azure.datalake.store.DirectoryEntryType
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.DirectoryEntryType.yml
  name: DirectoryEntryType
  nameWithType: DirectoryEntryType
  fullName: com.microsoft.azure.datalake.store.DirectoryEntryType
  type: Enum
  summary: "<p>enum to indicate whether a directory entry is a file or a directory. </p>"
  syntax:
    content: public enum DirectoryEntryType
- uid: com.microsoft.azure.datalake.store.ExpiryOption
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.ExpiryOption.yml
  name: ExpiryOption
  nameWithType: ExpiryOption
  fullName: com.microsoft.azure.datalake.store.ExpiryOption
  type: Enum
  summary: "<p>Enum specifying how to interpret the expiry time specified in setExpiry call. </p>"
  syntax:
    content: public enum ExpiryOption
- uid: com.microsoft.azure.datalake.store.IfExists
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.IfExists.yml
  name: IfExists
  nameWithType: IfExists
  fullName: com.microsoft.azure.datalake.store.IfExists
  type: Enum
  summary: "<p>Enum specifying actions to take if attempting to create a file that already exists. </p>"
  syntax:
    content: public enum IfExists
- uid: com.microsoft.azure.datalake.store.LatencyTracker
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.LatencyTracker.yml
  name: LatencyTracker
  nameWithType: LatencyTracker
  fullName: com.microsoft.azure.datalake.store.LatencyTracker
  type: Class
  summary: "<p>\r\n  <code>LatencyTracker \r\n    </code> keeps track of client-preceived request latencies, to be reported on the next REST request. Every request adds its result (success/failure and latency) to LatencyTracker. When a request is made, the SDK checks LatencyTracker to see if there are any latency stats to be reported. If so, the stats are added as an HTTP header (<code>x-ms-adl-client-latency \r\n    </code> ) on the next request. </p>\r\n<p>To disable this reporting, user can call <xref uid=\"com.microsoft.azure.datalake.store.LatencyTracker.disable()\" data-throw-if-not-resolved=\"false\">disable()</xref>. </p>\r\n<p>Contents of data reported back: <ul><li><p>Client Request ID of last request </p></li><li><p>latency in milliseconds </p></li><li><p>error code (if request failed) </p></li><li><p>Operation </p></li><li><p>Request+response body Size </p></li><li><p>number for AzureDataLakeStoreClient that made this call </p></li></ul></p>"
  syntax:
    content: public class LatencyTracker
- uid: com.microsoft.azure.datalake.store.OperationResponse
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.OperationResponse.yml
  name: OperationResponse
  nameWithType: OperationResponse
  fullName: com.microsoft.azure.datalake.store.OperationResponse
  type: Class
  summary: "<p>information about a response from a server call.</p>\r\n<p>This class is a container for all the information from making a server call. </p>"
  syntax:
    content: public class OperationResponse
- uid: com.microsoft.azure.datalake.store.QueryParams
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.QueryParams.yml
  name: QueryParams
  nameWithType: QueryParams
  fullName: com.microsoft.azure.datalake.store.QueryParams
  type: Class
  summary: "<p>Internal class for SDK's internal use. DO NOT USE. </p>"
  syntax:
    content: public class QueryParams
- uid: com.microsoft.azure.datalake.store.RequestOptions
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.RequestOptions.yml
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.microsoft.azure.datalake.store.RequestOptions
  type: Class
  summary: "<p>common options to control the behavior of server calls </p>"
  syntax:
    content: public class RequestOptions
- uid: com.microsoft.azure.datalake.store.SSLSocketFactoryEx
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.SSLSocketFactoryEx.yml
  name: SSLSocketFactoryEx
  nameWithType: SSLSocketFactoryEx
  fullName: com.microsoft.azure.datalake.store.SSLSocketFactoryEx
  type: Class
  summary: "<p>Extension to use native OpenSSL library instead of JSE for better performance. </p>"
  syntax:
    content: public class SSLSocketFactoryEx
- uid: com.microsoft.azure.datalake.store.SyncFlag
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.SyncFlag.yml
  name: SyncFlag
  nameWithType: SyncFlag
  fullName: com.microsoft.azure.datalake.store.SyncFlag
  type: Enum
  summary: "<p>Indicator flags to backend during append. </p>"
  syntax:
    content: public enum SyncFlag
- uid: com.microsoft.azure.datalake.store.UserGroupRepresentation
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.UserGroupRepresentation.yml
  name: UserGroupRepresentation
  nameWithType: UserGroupRepresentation
  fullName: com.microsoft.azure.datalake.store.UserGroupRepresentation
  type: Enum
  summary: "<p>Enum specifying how user and group objects should be represented in calls that return user and group ID. </p>"
  syntax:
    content: public enum UserGroupRepresentation
- uid: com.microsoft.azure.datalake.store.Utils
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.Utils.yml
  name: Utils
  nameWithType: Utils
  fullName: com.microsoft.azure.datalake.store.Utils
  type: Class
  summary: "<p>Utility methods to enable one-liners for simple functionality.</p>\r\n<p>The methods are all based on calls to the SDK methods, these are just convenience methods for common tasks. </p>"
  syntax:
    content: public class Utils
- uid: com.microsoft.azure.datalake.store.SSLSocketFactoryEx.SSLChannelMode
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store.SSLSocketFactoryEx.SSLChannelMode.yml
  name: SSLSocketFactoryEx.SSLChannelMode
  nameWithType: SSLSocketFactoryEx.SSLChannelMode
  fullName: com.microsoft.azure.datalake.store.SSLSocketFactoryEx.SSLChannelMode
  type: Enum
  syntax:
    content: public enum SSLChannelMode
