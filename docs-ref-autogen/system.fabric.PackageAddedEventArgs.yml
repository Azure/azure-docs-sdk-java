### YamlMime:ManagedReference
items:
- uid: system.fabric.PackageAddedEventArgs
  id: PackageAddedEventArgs
  parent: system.fabric
  children:
  - system.fabric.PackageAddedEventArgs.getPackage()
  - system.fabric.PackageAddedEventArgs.PackageAddedEventArgs(T)
  - system.fabric.PackageAddedEventArgs.setPackage(T)
  href: system.fabric.PackageAddedEventArgs.yml
  langs:
  - java
  name: PackageAddedEventArgs<T>
  nameWithType: PackageAddedEventArgs<T>
  fullName: system.fabric.PackageAddedEventArgs<T>
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/PackageAddedEventArgs.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/PackageAddedEventArgs.java
    startLine: 10
  package: system.fabric
  summary: "<p>Describes a package added event. </p>"
  syntax:
    content: public class PackageAddedEventArgs<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>Type of the package being described. See <xref uid="system.fabric.CodePackage" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CodePackage"></xref>, <xref uid="system.fabric.ConfigurationPackage" data-throw-if-not-resolved="false" data-raw-source="system.fabric.ConfigurationPackage"></xref> and <xref uid="system.fabric.DataPackage" data-throw-if-not-resolved="false" data-raw-source="system.fabric.DataPackage"></xref>. Also see <xref uid="system.fabric.CodePackageActivationContext.getCodePackageAddedEvent()" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CodePackageActivationContext#getCodePackageAddedEvent()"></xref>, <xref uid="system.fabric.CodePackageActivationContext.getConfigurationPackageAddedEvent()" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CodePackageActivationContext#getConfigurationPackageAddedEvent()"></xref> and <xref uid="system.fabric.CodePackageActivationContext.getDataPackageAddedEvent()" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CodePackageActivationContext#getDataPackageAddedEvent()"></xref>. </p>
  inheritance:
  - java.lang.Object
- uid: system.fabric.PackageAddedEventArgs.getPackage()
  id: getPackage()
  parent: system.fabric.PackageAddedEventArgs
  href: system.fabric.PackageAddedEventArgs.yml
  langs:
  - java
  name: getPackage()
  nameWithType: PackageAddedEventArgs<T>.getPackage()
  fullName: system.fabric.PackageAddedEventArgs<T>.getPackage()
  overload: system.fabric.PackageAddedEventArgs.getPackage*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/PackageAddedEventArgs.java
    startLine: 27
  package: system.fabric
  summary: "<p>Gets the code, data, or configuration package that was added to the Service Manifest. </p>"
  syntax:
    content: public T getPackage()
    return:
      type: 8ce1ecb9
      description: <p>Code, data, or configuration package that was added to the Service Manifest. </p>
- uid: system.fabric.PackageAddedEventArgs.PackageAddedEventArgs(T)
  id: PackageAddedEventArgs(T)
  parent: system.fabric.PackageAddedEventArgs
  href: system.fabric.PackageAddedEventArgs.yml
  langs:
  - java
  name: PackageAddedEventArgs(T pkg)
  nameWithType: PackageAddedEventArgs<T>.PackageAddedEventArgs(T pkg)
  fullName: system.fabric.PackageAddedEventArgs<T>.PackageAddedEventArgs(T pkg)
  overload: system.fabric.PackageAddedEventArgs.PackageAddedEventArgs*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/PackageAddedEventArgs.java
    startLine: 19
  package: system.fabric
  summary: "<p>Creates a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.PackageAddedEventArgs\"></xref> class. </p>"
  syntax:
    content: public PackageAddedEventArgs(T pkg)
    parameters:
    - id: pkg
      type: 8ce1ecb9
      description: <p>Code, Config or Data package. See <xref uid="system.fabric.CodePackage" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CodePackage"></xref>, <xref uid="system.fabric.ConfigurationPackage" data-throw-if-not-resolved="false" data-raw-source="system.fabric.ConfigurationPackage"></xref> and <xref uid="system.fabric.DataPackage" data-throw-if-not-resolved="false" data-raw-source="system.fabric.DataPackage"></xref>. </p>
- uid: system.fabric.PackageAddedEventArgs.setPackage(T)
  id: setPackage(T)
  parent: system.fabric.PackageAddedEventArgs
  href: system.fabric.PackageAddedEventArgs.yml
  langs:
  - java
  name: setPackage(T pkg)
  nameWithType: PackageAddedEventArgs<T>.setPackage(T pkg)
  fullName: system.fabric.PackageAddedEventArgs<T>.setPackage(T pkg)
  overload: system.fabric.PackageAddedEventArgs.setPackage*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/PackageAddedEventArgs.java
    startLine: 35
  package: system.fabric
  summary: "<p>Sets the code, data, or configuration package that was added to the Service Manifest. </p>"
  syntax:
    content: public void setPackage(T pkg)
    parameters:
    - id: pkg
      type: 8ce1ecb9
      description: <p>code, data, or configuration package that was added to the Service Manifest. </p>
references:
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: system.fabric.PackageAddedEventArgs.PackageAddedEventArgs*
  name: PackageAddedEventArgs
  nameWithType: PackageAddedEventArgs<T>.PackageAddedEventArgs
  fullName: system.fabric.PackageAddedEventArgs<T>.PackageAddedEventArgs
  package: system.fabric
- uid: system.fabric.PackageAddedEventArgs.getPackage*
  name: getPackage
  nameWithType: PackageAddedEventArgs<T>.getPackage
  fullName: system.fabric.PackageAddedEventArgs<T>.getPackage
  package: system.fabric
- uid: system.fabric.PackageAddedEventArgs.setPackage*
  name: setPackage
  nameWithType: PackageAddedEventArgs<T>.setPackage
  fullName: system.fabric.PackageAddedEventArgs<T>.setPackage
  package: system.fabric
- uid: system.fabric.CodePackage
  parent: system.fabric
  href: system.fabric.CodePackage.yml
  name: CodePackage
  nameWithType: CodePackage
  fullName: system.fabric.CodePackage
  type: Class
  summary: "<p>Represents the code package definition. </p>"
  syntax:
    content: public class CodePackage
- uid: system.fabric.ConfigurationPackage
  parent: system.fabric
  href: system.fabric.ConfigurationPackage.yml
  name: ConfigurationPackage
  nameWithType: ConfigurationPackage
  fullName: system.fabric.ConfigurationPackage
  type: Class
  summary: "<p>Represents a configuration package. </p>"
  syntax:
    content: public class ConfigurationPackage
- uid: system.fabric.DataPackage
  parent: system.fabric
  href: system.fabric.DataPackage.yml
  name: DataPackage
  nameWithType: DataPackage
  fullName: system.fabric.DataPackage
  type: Class
  summary: "<p>Defines a data package of an application. </p>"
  syntax:
    content: public class DataPackage
- uid: system.fabric.CodePackageActivationContext.getCodePackageAddedEvent()
  parent: system.fabric.CodePackageActivationContext
  href: system.fabric.CodePackageActivationContext.yml
  name: getCodePackageAddedEvent()
  nameWithType: CodePackageActivationContext.getCodePackageAddedEvent()
  fullName: system.fabric.CodePackageActivationContext.getCodePackageAddedEvent()
  type: Method
  summary: "<p>CodePackageAddedEvent should be used to register listeners to listen to the events that are generated on adding new Code package to service manifest.</p>\r\n<p></p>"
  syntax:
    content: public Observable<PackageAddedEventArgs<CodePackage>> getCodePackageAddedEvent()
    return:
      type: system.fabric.Observable78504a52system.fabric.PackageAddedEventArgs78504a52system.fabric.CodePackagee7daa122
      description: <p>Getter for the CodePackageAddedEvent <xref uid="system.fabric.Observable" data-throw-if-not-resolved="false" data-raw-source="system.fabric.Observable"></xref>. </p>
- uid: system.fabric.CodePackageActivationContext.getConfigurationPackageAddedEvent()
  parent: system.fabric.CodePackageActivationContext
  href: system.fabric.CodePackageActivationContext.yml
  name: getConfigurationPackageAddedEvent()
  nameWithType: CodePackageActivationContext.getConfigurationPackageAddedEvent()
  fullName: system.fabric.CodePackageActivationContext.getConfigurationPackageAddedEvent()
  type: Method
  summary: "<p>ConfigurationPackageAddedEvent should be used to register listeners to listen to the events that are generated on adding new Config package to service manifest.</p>\r\n<p></p>"
  syntax:
    content: public Observable<PackageAddedEventArgs<ConfigurationPackage>> getConfigurationPackageAddedEvent()
    return:
      type: system.fabric.Observable78504a52system.fabric.PackageAddedEventArgs78504a52system.fabric.ConfigurationPackagee7daa122
      description: <p>Getter for the ConfigurationPackageAddedEvent <xref uid="system.fabric.Observable" data-throw-if-not-resolved="false" data-raw-source="system.fabric.Observable"></xref>. </p>
- uid: system.fabric.CodePackageActivationContext.getDataPackageAddedEvent()
  parent: system.fabric.CodePackageActivationContext
  href: system.fabric.CodePackageActivationContext.yml
  name: getDataPackageAddedEvent()
  nameWithType: CodePackageActivationContext.getDataPackageAddedEvent()
  fullName: system.fabric.CodePackageActivationContext.getDataPackageAddedEvent()
  type: Method
  summary: "<p>DataPackageAddedEvent should be used to register listeners to listen to the events that are generated on adding new Data package to service manifest.</p>\r\n<p></p>"
  syntax:
    content: public Observable<PackageAddedEventArgs<DataPackage>> getDataPackageAddedEvent()
    return:
      type: system.fabric.Observable78504a52system.fabric.PackageAddedEventArgs78504a52system.fabric.DataPackagee7daa122
      description: <p>Getter for the DataPackageAddedEvent <xref uid="system.fabric.Observable" data-throw-if-not-resolved="false" data-raw-source="system.fabric.Observable"></xref>. </p>
