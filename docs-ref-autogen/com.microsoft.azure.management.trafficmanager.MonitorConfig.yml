### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.intervalInSeconds()
  name: intervalInSeconds()
  nameWithType: MonitorConfig.intervalInSeconds()
  returns:
    description: <p>the intervalInSeconds value </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the intervalInSeconds value.</p>

    <p></p>
  syntax: public Long intervalInSeconds()
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.intervalInSeconds()
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.path()
  name: path()
  nameWithType: MonitorConfig.path()
  returns:
    description: <p>the path value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the path value.</p>

    <p></p>
  syntax: public String path()
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.path()
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.port()
  name: port()
  nameWithType: MonitorConfig.port()
  returns:
    description: <p>the port value </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the port value.</p>

    <p></p>
  syntax: public Long port()
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.port()
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.profileMonitorStatus()
  name: profileMonitorStatus()
  nameWithType: MonitorConfig.profileMonitorStatus()
  returns:
    description: <p>the profileMonitorStatus value </p>
    type: <xref href="com.microsoft.azure.management.trafficmanager.ProfileMonitorStatus?alt=com.microsoft.azure.management.trafficmanager.ProfileMonitorStatus&text=ProfileMonitorStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the profileMonitorStatus value.</p>

    <p></p>
  syntax: public ProfileMonitorStatus profileMonitorStatus()
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.profileMonitorStatus()
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.protocol()
  name: protocol()
  nameWithType: MonitorConfig.protocol()
  returns:
    description: <p>the protocol value </p>
    type: <xref href="com.microsoft.azure.management.trafficmanager.MonitorProtocol?alt=com.microsoft.azure.management.trafficmanager.MonitorProtocol&text=MonitorProtocol" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the protocol value.</p>

    <p></p>
  syntax: public MonitorProtocol protocol()
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.protocol()
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.timeoutInSeconds()
  name: timeoutInSeconds()
  nameWithType: MonitorConfig.timeoutInSeconds()
  returns:
    description: <p>the timeoutInSeconds value </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the timeoutInSeconds value.</p>

    <p></p>
  syntax: public Long timeoutInSeconds()
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.timeoutInSeconds()
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.toleratedNumberOfFailures()
  name: toleratedNumberOfFailures()
  nameWithType: MonitorConfig.toleratedNumberOfFailures()
  returns:
    description: <p>the toleratedNumberOfFailures value </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the toleratedNumberOfFailures value.</p>

    <p></p>
  syntax: public Long toleratedNumberOfFailures()
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.toleratedNumberOfFailures()
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.withIntervalInSeconds(Long intervalInSeconds)
  name: withIntervalInSeconds(Long intervalInSeconds)
  nameWithType: MonitorConfig.withIntervalInSeconds(Long intervalInSeconds)
  parameters:
  - description: <p>the intervalInSeconds value to set </p>
    name: intervalInSeconds
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MonitorConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the intervalInSeconds value.</p>

    <p></p>
  syntax: public MonitorConfig withIntervalInSeconds(Long intervalInSeconds)
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.withIntervalInSeconds(Long)
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.withPath(String path)
  name: withPath(String path)
  nameWithType: MonitorConfig.withPath(String path)
  parameters:
  - description: <p>the path value to set </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MonitorConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the path value.</p>

    <p></p>
  syntax: public MonitorConfig withPath(String path)
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.withPath(String)
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.withPort(Long port)
  name: withPort(Long port)
  nameWithType: MonitorConfig.withPort(Long port)
  parameters:
  - description: <p>the port value to set </p>
    name: port
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MonitorConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the port value.</p>

    <p></p>
  syntax: public MonitorConfig withPort(Long port)
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.withPort(Long)
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.withProfileMonitorStatus(ProfileMonitorStatus profileMonitorStatus)
  name: withProfileMonitorStatus(ProfileMonitorStatus profileMonitorStatus)
  nameWithType: MonitorConfig.withProfileMonitorStatus(ProfileMonitorStatus profileMonitorStatus)
  parameters:
  - description: <p>the profileMonitorStatus value to set </p>
    name: profileMonitorStatus
    type: <xref href="com.microsoft.azure.management.trafficmanager.ProfileMonitorStatus?alt=com.microsoft.azure.management.trafficmanager.ProfileMonitorStatus&text=ProfileMonitorStatus" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MonitorConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the profileMonitorStatus value.</p>

    <p></p>
  syntax: public MonitorConfig withProfileMonitorStatus(ProfileMonitorStatus profileMonitorStatus)
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.withProfileMonitorStatus(ProfileMonitorStatus)
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.withProtocol(MonitorProtocol protocol)
  name: withProtocol(MonitorProtocol protocol)
  nameWithType: MonitorConfig.withProtocol(MonitorProtocol protocol)
  parameters:
  - description: <p>the protocol value to set </p>
    name: protocol
    type: <xref href="com.microsoft.azure.management.trafficmanager.MonitorProtocol?alt=com.microsoft.azure.management.trafficmanager.MonitorProtocol&text=MonitorProtocol" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MonitorConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the protocol value.</p>

    <p></p>
  syntax: public MonitorConfig withProtocol(MonitorProtocol protocol)
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.withProtocol(MonitorProtocol)
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.withTimeoutInSeconds(Long timeoutInSeconds)
  name: withTimeoutInSeconds(Long timeoutInSeconds)
  nameWithType: MonitorConfig.withTimeoutInSeconds(Long timeoutInSeconds)
  parameters:
  - description: <p>the timeoutInSeconds value to set </p>
    name: timeoutInSeconds
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MonitorConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the timeoutInSeconds value.</p>

    <p></p>
  syntax: public MonitorConfig withTimeoutInSeconds(Long timeoutInSeconds)
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.withTimeoutInSeconds(Long)
- fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig.withToleratedNumberOfFailures(Long toleratedNumberOfFailures)
  name: withToleratedNumberOfFailures(Long toleratedNumberOfFailures)
  nameWithType: MonitorConfig.withToleratedNumberOfFailures(Long toleratedNumberOfFailures)
  parameters:
  - description: <p>the toleratedNumberOfFailures value to set </p>
    name: toleratedNumberOfFailures
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MonitorConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the toleratedNumberOfFailures value.</p>

    <p></p>
  syntax: public MonitorConfig withToleratedNumberOfFailures(Long toleratedNumberOfFailures)
  uid: com.microsoft.azure.management.trafficmanager.MonitorConfig.withToleratedNumberOfFailures(Long)
nameWithType: MonitorConfig
syntax: public class MonitorConfig
type: class
uid: com.microsoft.azure.management.trafficmanager.MonitorConfig
fullName: com.microsoft.azure.management.trafficmanager.MonitorConfig
name: MonitorConfig
package: com.microsoft.azure.management.trafficmanager
summary: <p>Class containing endpoint monitoring settings in a Traffic Manager profile. </p>
metadata: {}
