### YamlMime:JavaType
uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig"
fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig"
name: "MonitorConfig"
nameWithType: "MonitorConfig"
summary: "Class containing endpoint monitoring settings in a Traffic Manager profile."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class MonitorConfig"
constructors:
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.MonitorConfig()"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.MonitorConfig()"
  name: "MonitorConfig()"
  nameWithType: "MonitorConfig.MonitorConfig()"
  syntax: "public MonitorConfig()"
methods:
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.customHeaders()"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.customHeaders()"
  name: "customHeaders()"
  nameWithType: "MonitorConfig.customHeaders()"
  summary: "Get list of custom headers."
  syntax: "public List<MonitorConfigCustomHeadersItem> customHeaders()"
  desc: "Get list of custom headers."
  returns:
    description: "the customHeaders value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfigCustomHeadersItem?alt=com.microsoft.azure.management.trafficmanager.MonitorConfigCustomHeadersItem&text=MonitorConfigCustomHeadersItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.expectedStatusCodeRanges()"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.expectedStatusCodeRanges()"
  name: "expectedStatusCodeRanges()"
  nameWithType: "MonitorConfig.expectedStatusCodeRanges()"
  summary: "Get list of expected status code ranges."
  syntax: "public List<MonitorConfigExpectedStatusCodeRangesItem> expectedStatusCodeRanges()"
  desc: "Get list of expected status code ranges."
  returns:
    description: "the expectedStatusCodeRanges value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfigExpectedStatusCodeRangesItem?alt=com.microsoft.azure.management.trafficmanager.MonitorConfigExpectedStatusCodeRangesItem&text=MonitorConfigExpectedStatusCodeRangesItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.intervalInSeconds()"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.intervalInSeconds()"
  name: "intervalInSeconds()"
  nameWithType: "MonitorConfig.intervalInSeconds()"
  summary: "Get the monitor interval for endpoints in this profile."
  syntax: "public Long intervalInSeconds()"
  desc: "Get the monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile."
  returns:
    description: "the intervalInSeconds value"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.path()"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.path()"
  name: "path()"
  nameWithType: "MonitorConfig.path()"
  summary: "Get the path relative to the endpoint domain name used to probe for endpoint health."
  syntax: "public String path()"
  desc: "Get the path relative to the endpoint domain name used to probe for endpoint health."
  returns:
    description: "the path value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.port()"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.port()"
  name: "port()"
  nameWithType: "MonitorConfig.port()"
  summary: "Get the TCP port used to probe for endpoint health."
  syntax: "public Long port()"
  desc: "Get the TCP port used to probe for endpoint health."
  returns:
    description: "the port value"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.profileMonitorStatus()"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.profileMonitorStatus()"
  name: "profileMonitorStatus()"
  nameWithType: "MonitorConfig.profileMonitorStatus()"
  summary: "Get the profile-level monitoring status of the Traffic Manager profile."
  syntax: "public ProfileMonitorStatus profileMonitorStatus()"
  desc: "Get the profile-level monitoring status of the Traffic Manager profile. Possible values include: 'CheckingEndpoints', 'Online', 'Degraded', 'Disabled', 'Inactive'."
  returns:
    description: "the profileMonitorStatus value"
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.ProfileMonitorStatus?alt=com.microsoft.azure.management.trafficmanager.ProfileMonitorStatus&text=ProfileMonitorStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.protocol()"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.protocol()"
  name: "protocol()"
  nameWithType: "MonitorConfig.protocol()"
  summary: "Get the protocol (HTTP, HTTPS or TCP) used to probe for endpoint health."
  syntax: "public MonitorProtocol protocol()"
  desc: "Get the protocol (HTTP, HTTPS or TCP) used to probe for endpoint health. Possible values include: 'HTTP', 'HTTPS', 'TCP'."
  returns:
    description: "the protocol value"
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorProtocol?alt=com.microsoft.azure.management.trafficmanager.MonitorProtocol&text=MonitorProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.timeoutInSeconds()"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.timeoutInSeconds()"
  name: "timeoutInSeconds()"
  nameWithType: "MonitorConfig.timeoutInSeconds()"
  summary: "Get the monitor timeout for endpoints in this profile."
  syntax: "public Long timeoutInSeconds()"
  desc: "Get the monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check."
  returns:
    description: "the timeoutInSeconds value"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.toleratedNumberOfFailures()"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.toleratedNumberOfFailures()"
  name: "toleratedNumberOfFailures()"
  nameWithType: "MonitorConfig.toleratedNumberOfFailures()"
  summary: "Get the number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check."
  syntax: "public Long toleratedNumberOfFailures()"
  desc: "Get the number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check."
  returns:
    description: "the toleratedNumberOfFailures value"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withCustomHeaders(java.util.List<com.microsoft.azure.management.trafficmanager.MonitorConfigCustomHeadersItem>)"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withCustomHeaders(List<MonitorConfigCustomHeadersItem> customHeaders)"
  name: "withCustomHeaders(List<MonitorConfigCustomHeadersItem> customHeaders)"
  nameWithType: "MonitorConfig.withCustomHeaders(List<MonitorConfigCustomHeadersItem> customHeaders)"
  summary: "Set list of custom headers."
  parameters:
  - description: "the customHeaders value to set"
    name: "customHeaders"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfigCustomHeadersItem?alt=com.microsoft.azure.management.trafficmanager.MonitorConfigCustomHeadersItem&text=MonitorConfigCustomHeadersItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MonitorConfig withCustomHeaders(List<MonitorConfigCustomHeadersItem> customHeaders)"
  desc: "Set list of custom headers."
  returns:
    description: "the MonitorConfig object itself."
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withExpectedStatusCodeRanges(java.util.List<com.microsoft.azure.management.trafficmanager.MonitorConfigExpectedStatusCodeRangesItem>)"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withExpectedStatusCodeRanges(List<MonitorConfigExpectedStatusCodeRangesItem> expectedStatusCodeRanges)"
  name: "withExpectedStatusCodeRanges(List<MonitorConfigExpectedStatusCodeRangesItem> expectedStatusCodeRanges)"
  nameWithType: "MonitorConfig.withExpectedStatusCodeRanges(List<MonitorConfigExpectedStatusCodeRangesItem> expectedStatusCodeRanges)"
  summary: "Set list of expected status code ranges."
  parameters:
  - description: "the expectedStatusCodeRanges value to set"
    name: "expectedStatusCodeRanges"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfigExpectedStatusCodeRangesItem?alt=com.microsoft.azure.management.trafficmanager.MonitorConfigExpectedStatusCodeRangesItem&text=MonitorConfigExpectedStatusCodeRangesItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MonitorConfig withExpectedStatusCodeRanges(List<MonitorConfigExpectedStatusCodeRangesItem> expectedStatusCodeRanges)"
  desc: "Set list of expected status code ranges."
  returns:
    description: "the MonitorConfig object itself."
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withIntervalInSeconds(java.lang.Long)"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withIntervalInSeconds(Long intervalInSeconds)"
  name: "withIntervalInSeconds(Long intervalInSeconds)"
  nameWithType: "MonitorConfig.withIntervalInSeconds(Long intervalInSeconds)"
  summary: "Set the monitor interval for endpoints in this profile."
  parameters:
  - description: "the intervalInSeconds value to set"
    name: "intervalInSeconds"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorConfig withIntervalInSeconds(Long intervalInSeconds)"
  desc: "Set the monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile."
  returns:
    description: "the MonitorConfig object itself."
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withPath(java.lang.String)"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withPath(String path)"
  name: "withPath(String path)"
  nameWithType: "MonitorConfig.withPath(String path)"
  summary: "Set the path relative to the endpoint domain name used to probe for endpoint health."
  parameters:
  - description: "the path value to set"
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorConfig withPath(String path)"
  desc: "Set the path relative to the endpoint domain name used to probe for endpoint health."
  returns:
    description: "the MonitorConfig object itself."
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withPort(java.lang.Long)"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withPort(Long port)"
  name: "withPort(Long port)"
  nameWithType: "MonitorConfig.withPort(Long port)"
  summary: "Set the TCP port used to probe for endpoint health."
  parameters:
  - description: "the port value to set"
    name: "port"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorConfig withPort(Long port)"
  desc: "Set the TCP port used to probe for endpoint health."
  returns:
    description: "the MonitorConfig object itself."
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withProfileMonitorStatus(com.microsoft.azure.management.trafficmanager.ProfileMonitorStatus)"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withProfileMonitorStatus(ProfileMonitorStatus profileMonitorStatus)"
  name: "withProfileMonitorStatus(ProfileMonitorStatus profileMonitorStatus)"
  nameWithType: "MonitorConfig.withProfileMonitorStatus(ProfileMonitorStatus profileMonitorStatus)"
  summary: "Set the profile-level monitoring status of the Traffic Manager profile."
  parameters:
  - description: "the profileMonitorStatus value to set"
    name: "profileMonitorStatus"
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.ProfileMonitorStatus?alt=com.microsoft.azure.management.trafficmanager.ProfileMonitorStatus&text=ProfileMonitorStatus\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorConfig withProfileMonitorStatus(ProfileMonitorStatus profileMonitorStatus)"
  desc: "Set the profile-level monitoring status of the Traffic Manager profile. Possible values include: 'CheckingEndpoints', 'Online', 'Degraded', 'Disabled', 'Inactive'."
  returns:
    description: "the MonitorConfig object itself."
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withProtocol(com.microsoft.azure.management.trafficmanager.MonitorProtocol)"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withProtocol(MonitorProtocol protocol)"
  name: "withProtocol(MonitorProtocol protocol)"
  nameWithType: "MonitorConfig.withProtocol(MonitorProtocol protocol)"
  summary: "Set the protocol (HTTP, HTTPS or TCP) used to probe for endpoint health."
  parameters:
  - description: "the protocol value to set"
    name: "protocol"
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorProtocol?alt=com.microsoft.azure.management.trafficmanager.MonitorProtocol&text=MonitorProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorConfig withProtocol(MonitorProtocol protocol)"
  desc: "Set the protocol (HTTP, HTTPS or TCP) used to probe for endpoint health. Possible values include: 'HTTP', 'HTTPS', 'TCP'."
  returns:
    description: "the MonitorConfig object itself."
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withTimeoutInSeconds(java.lang.Long)"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withTimeoutInSeconds(Long timeoutInSeconds)"
  name: "withTimeoutInSeconds(Long timeoutInSeconds)"
  nameWithType: "MonitorConfig.withTimeoutInSeconds(Long timeoutInSeconds)"
  summary: "Set the monitor timeout for endpoints in this profile."
  parameters:
  - description: "the timeoutInSeconds value to set"
    name: "timeoutInSeconds"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorConfig withTimeoutInSeconds(Long timeoutInSeconds)"
  desc: "Set the monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check."
  returns:
    description: "the MonitorConfig object itself."
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withToleratedNumberOfFailures(java.lang.Long)"
  fullName: "com.microsoft.azure.management.trafficmanager.MonitorConfig.withToleratedNumberOfFailures(Long toleratedNumberOfFailures)"
  name: "withToleratedNumberOfFailures(Long toleratedNumberOfFailures)"
  nameWithType: "MonitorConfig.withToleratedNumberOfFailures(Long toleratedNumberOfFailures)"
  summary: "Set the number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check."
  parameters:
  - description: "the toleratedNumberOfFailures value to set"
    name: "toleratedNumberOfFailures"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MonitorConfig withToleratedNumberOfFailures(Long toleratedNumberOfFailures)"
  desc: "Set the number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check."
  returns:
    description: "the MonitorConfig object itself."
    type: "<xref href=\"com.microsoft.azure.management.trafficmanager.MonitorConfig?alt=com.microsoft.azure.management.trafficmanager.MonitorConfig&text=MonitorConfig\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Class containing endpoint monitoring settings in a Traffic Manager profile."
metadata: {}
package: "com.microsoft.azure.management.trafficmanager"
artifact: com.microsoft.azure:azure-mgmt-trafficmanager:1.41.4
