### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner"
fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner"
name: "RouteFilterInner"
nameWithType: "RouteFilterInner"
summary: "Route Filter Resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RouteFilterInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.RouteFilterInner()"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.RouteFilterInner()"
  name: "RouteFilterInner()"
  nameWithType: "RouteFilterInner.RouteFilterInner()"
  syntax: "public RouteFilterInner()"
methods:
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.etag()"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.etag()"
  name: "etag()"
  nameWithType: "RouteFilterInner.etag()"
  summary: "Get the etag property: A unique read-only string that changes whenever the resource is updated."
  syntax: "public String etag()"
  desc: "Get the etag property: A unique read-only string that changes whenever the resource is updated."
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.id()"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.id()"
  name: "id()"
  nameWithType: "RouteFilterInner.id()"
  summary: "Get the id property: Resource ID."
  overridden: "com.azure.core.management.ProxyResource.id()"
  syntax: "public String id()"
  desc: "Get the id property: Resource ID."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.ipv6Peerings()"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.ipv6Peerings()"
  name: "ipv6Peerings()"
  nameWithType: "RouteFilterInner.ipv6Peerings()"
  summary: "Get the ipv6Peerings property: A collection of references to express route circuit ipv6 peerings."
  syntax: "public List<ExpressRouteCircuitPeeringInner> ipv6Peerings()"
  desc: "Get the ipv6Peerings property: A collection of references to express route circuit ipv6 peerings."
  returns:
    description: "the ipv6Peerings value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.peerings()"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.peerings()"
  name: "peerings()"
  nameWithType: "RouteFilterInner.peerings()"
  summary: "Get the peerings property: A collection of references to express route circuit peerings."
  syntax: "public List<ExpressRouteCircuitPeeringInner> peerings()"
  desc: "Get the peerings property: A collection of references to express route circuit peerings."
  returns:
    description: "the peerings value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.provisioningState()"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "RouteFilterInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning state of the route filter resource."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: The provisioning state of the route filter resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.network.models.ProvisioningState?alt=com.azure.resourcemanager.network.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.rules()"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.rules()"
  name: "rules()"
  nameWithType: "RouteFilterInner.rules()"
  summary: "Get the rules property: Collection of Route<wbr>Filter<wbr>Rules contained within a route filter."
  syntax: "public List<RouteFilterRuleInner> rules()"
  desc: "Get the rules property: Collection of RouteFilterRules contained within a route filter."
  returns:
    description: "the rules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.RouteFilterRuleInner?alt=com.azure.resourcemanager.network.fluent.models.RouteFilterRuleInner&text=RouteFilterRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.validate()"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.validate()"
  name: "validate()"
  nameWithType: "RouteFilterInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.withId(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.withId(String id)"
  name: "withId(String id)"
  nameWithType: "RouteFilterInner.withId(String id)"
  summary: "Set the id property: Resource ID."
  parameters:
  - description: "the id value to set."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouteFilterInner withId(String id)"
  desc: "Set the id property: Resource ID."
  returns:
    description: "the RouteFilterInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.RouteFilterInner?alt=com.azure.resourcemanager.network.fluent.models.RouteFilterInner&text=RouteFilterInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "RouteFilterInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouteFilterInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.RouteFilterInner?alt=com.azure.resourcemanager.network.fluent.models.RouteFilterInner&text=RouteFilterInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.withRules(java.util.List<com.azure.resourcemanager.network.fluent.models.RouteFilterRuleInner>)"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.withRules(List<RouteFilterRuleInner> rules)"
  name: "withRules(List<RouteFilterRuleInner> rules)"
  nameWithType: "RouteFilterInner.withRules(List<RouteFilterRuleInner> rules)"
  summary: "Set the rules property: Collection of Route<wbr>Filter<wbr>Rules contained within a route filter."
  parameters:
  - description: "the rules value to set."
    name: "rules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.RouteFilterRuleInner?alt=com.azure.resourcemanager.network.fluent.models.RouteFilterRuleInner&text=RouteFilterRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RouteFilterInner withRules(List<RouteFilterRuleInner> rules)"
  desc: "Set the rules property: Collection of RouteFilterRules contained within a route filter."
  returns:
    description: "the RouteFilterInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.RouteFilterInner?alt=com.azure.resourcemanager.network.fluent.models.RouteFilterInner&text=RouteFilterInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "RouteFilterInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RouteFilterInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.RouteFilterInner?alt=com.azure.resourcemanager.network.fluent.models.RouteFilterInner&text=RouteFilterInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Route Filter Resource."
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.16.0
