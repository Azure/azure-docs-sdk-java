### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup<ResultT, TaskT extends TaskItem<ResultT>.TaskGroup(String rootTaskItemId, TaskT rootTaskItem, TaskGroupTerminateOnErrorStrategy taskGroupTerminateOnErrorStrategy)
  name: TaskGroup(String rootTaskItemId, TaskT rootTaskItem, TaskGroupTerminateOnErrorStrategy taskGroupTerminateOnErrorStrategy)
  nameWithType: TaskGroup<ResultT,TaskT>.TaskGroup(String rootTaskItemId, TaskT rootTaskItem, TaskGroupTerminateOnErrorStrategy taskGroupTerminateOnErrorStrategy)
  parameters:
  - description: <p>the id of the root task in the group </p>
    name: rootTaskItemId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the root task </p>
    name: rootTaskItem
    type: <xref href="TaskT?alt=TaskT&text=TaskT" data-throw-if-not-resolved="False"/>
  - description: <p>group termination strategy to be used on error </p>
    name: taskGroupTerminateOnErrorStrategy
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy?alt=com.microsoft.azure.management.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy&text=TaskGroupTerminateOnErrorStrategy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates TaskGroup.</p>

    <p></p>
  syntax: public TaskGroup(String rootTaskItemId, TaskT rootTaskItem, TaskGroupTerminateOnErrorStrategy taskGroupTerminateOnErrorStrategy)
  uid: com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.TaskGroup(String,TaskT,TaskGroupTerminateOnErrorStrategy)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.dag.DAGraph?alt=com.microsoft.azure.management.resources.fluentcore.dag.DAGraph&text=DAGraph%3CDataT%2CNodeT%2CNodeT%3E" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.dag.DAGraph.DAGraph(NodeT)
- com.microsoft.azure.management.resources.fluentcore.dag.DAGraph.getNext()
- com.microsoft.azure.management.resources.fluentcore.dag.DAGraph.getNode(String)
- com.microsoft.azure.management.resources.fluentcore.dag.DAGraph.hasParent()
- com.microsoft.azure.management.resources.fluentcore.dag.DAGraph.isPreparer()
- com.microsoft.azure.management.resources.fluentcore.dag.DAGraph.isRootNode(NodeT)
- com.microsoft.azure.management.resources.fluentcore.dag.DAGraph.merge(DAGraph<DataT, NodeT>)
- com.microsoft.azure.management.resources.fluentcore.dag.DAGraph.mergeChildToParent(String,NodeT)
- com.microsoft.azure.management.resources.fluentcore.dag.DAGraph.prepare()
- com.microsoft.azure.management.resources.fluentcore.dag.DAGraph.reportCompletion(NodeT)
- com.microsoft.azure.management.resources.fluentcore.dag.DAGraph.reportError(NodeT,Throwable)
methods:
- fullName: com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup<ResultT, TaskT extends TaskItem<ResultT>.executeAsync()
  name: executeAsync()
  nameWithType: TaskGroup<ResultT,TaskT>.executeAsync()
  returns:
    description: <p>an observable that emits the result of tasks in the order they finishes. </p>
    type: <xref href="Observable%3CResultT%3E?alt=Observable%3CResultT%3E&text=Observable%3CResultT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Executes tasks in the group.</p>

    <p></p>
  syntax: public Observable<ResultT> executeAsync()
  uid: com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.executeAsync()
- fullName: com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup<ResultT, TaskT extends TaskItem<ResultT>.merge(TaskGroup<ResultT, TaskT> parentTaskGroup)
  name: merge(TaskGroup<ResultT, TaskT> parentTaskGroup)
  nameWithType: TaskGroup<ResultT,TaskT>.merge(TaskGroup<ResultT, TaskT> parentTaskGroup)
  parameters:
  - description: <p>the parent task group </p>
    name: parentTaskGroup
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup?alt=com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup&text=TaskGroup" data-throw-if-not-resolved="False"/>&lt;ResultT, TaskT&gt;
  summary: >-
    <p>Merge this group with the given group containing root task depends on this group.</p>

    <p></p>
  syntax: public void merge(TaskGroup<ResultT, TaskT> parentTaskGroup)
  uid: com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.merge(TaskGroup<ResultT, TaskT>)
- fullName: com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup<ResultT, TaskT extends TaskItem<ResultT>.taskResult(String taskId)
  name: taskResult(String taskId)
  nameWithType: TaskGroup<ResultT,TaskT>.taskResult(String taskId)
  parameters:
  - description: <p>the task item id </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the task result, null will be returned if task has not yet been executed </p>
    type: <xref href="ResultT?alt=ResultT&text=ResultT" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the result produced by a task in the group.</p>

    <p></p>
  syntax: public ResultT taskResult(String taskId)
  uid: com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.taskResult(String)
nameWithType: TaskGroup<ResultT,TaskT>
syntax: public class TaskGroup<ResultT,TaskT extends TaskItem<ResultT>> extends DAGraph<TaskT, TaskGroupEntry<ResultT, TaskT>>
type: class
typeParameters:
- description: <p>type of the result returned by the tasks in the group </p>
  name: ResultT
- description: <p>type of the tasks in the group that can return a value </p>
  name: TaskT
uid: com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup
fullName: com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup<ResultT,TaskT>
name: TaskGroup<ResultT,TaskT>
package: com.microsoft.azure.management.resources.fluentcore.dag
summary: >-
  <p>Type representing a group of task entries, each entry holds a <xref uid="com.microsoft.azure.management.resources.fluentcore.dag.TaskItem" data-throw-if-not-resolved="false" data-raw-source="TaskItem"></xref> and associated dependency information.</p>

  <p></p>
metadata: {}
