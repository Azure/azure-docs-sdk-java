### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.table.TableEntity
  id: TableEntity
  parent: com.microsoft.azure.storage.table
  children:
  - com.microsoft.azure.storage.table.TableEntity.getEtag()
  - com.microsoft.azure.storage.table.TableEntity.getPartitionKey()
  - com.microsoft.azure.storage.table.TableEntity.getRowKey()
  - com.microsoft.azure.storage.table.TableEntity.getTimestamp()
  - com.microsoft.azure.storage.table.TableEntity.readEntity(HashMap<String, EntityProperty>,OperationContext)
  - com.microsoft.azure.storage.table.TableEntity.setEtag(String)
  - com.microsoft.azure.storage.table.TableEntity.setPartitionKey(String)
  - com.microsoft.azure.storage.table.TableEntity.setRowKey(String)
  - com.microsoft.azure.storage.table.TableEntity.setTimestamp(Date)
  - com.microsoft.azure.storage.table.TableEntity.writeEntity(OperationContext)
  href: com.microsoft.azure.storage.table.TableEntity.yml
  langs:
  - java
  name: TableEntity
  nameWithType: TableEntity
  fullName: com.microsoft.azure.storage.table.TableEntity
  type: Interface
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
      branch: legacy-master
      repo: https://github.com/azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
    startLine: 73
  package: com.microsoft.azure.storage.table
  summary: "<p>An interface required for table entity types. The <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> interface declares getter and setter methods for the common entity properties, and  and  methods for serialization and deserialization of all entity properties using a property map. Create classes implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity. </p>\r\n<p>The Storage client library includes two implementations of <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> that provide for simple property access and serialization: </p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> and provides a simple property map to store and retrieve properties. Use a <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties. You can also use this type to perform bulk table updates of heterogeneous entities without losing property information. </p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> is an implementation of <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> that uses reflection-based serialization and deserialization behavior in its  and  methods. <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref>-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically. </p>\r\n<p>Any class that implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> by invoking the static methods  in  and  in . The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically. When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data. The reflection code looks for getter and setter methods in pairs of the form </p>\r\n<p></p>\r\n<p>and </p>\r\n<p></p>\r\n<p>where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property. See the table in the class description for <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> for a map of property types to their Java equivalents. The <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention. Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotations are case sensitive for matching property names with reflection. Use the <xref uid=\"com.microsoft.azure.storage.table.Ignore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Ignore\"></xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization. Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation in a subclass that uses the reflection methods. </p>\r\n<p></p>"
  syntax: &o1
    content: public interface TableEntity
- uid: com.microsoft.azure.storage.table.TableEntity.getEtag()
  id: getEtag()
  parent: com.microsoft.azure.storage.table.TableEntity
  href: com.microsoft.azure.storage.table.TableEntity.yml
  langs:
  - java
  name: getEtag()
  nameWithType: TableEntity.getEtag()
  fullName: com.microsoft.azure.storage.table.TableEntity.getEtag()
  overload: com.microsoft.azure.storage.table.TableEntity.getEtag*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
    startLine: 82
  package: com.microsoft.azure.storage.table
  summary: "<p>Gets the ETag value to verify for the entity. This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage. The client cannot update this value on the service.</p>\r\n<p></p>"
  syntax:
    content: public String getEtag()
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents the ETag for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableEntity.getPartitionKey()
  id: getPartitionKey()
  parent: com.microsoft.azure.storage.table.TableEntity
  href: com.microsoft.azure.storage.table.TableEntity.yml
  langs:
  - java
  name: getPartitionKey()
  nameWithType: TableEntity.getPartitionKey()
  fullName: com.microsoft.azure.storage.table.TableEntity.getPartitionKey()
  overload: com.microsoft.azure.storage.table.TableEntity.getPartitionKey*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
    startLine: 90
  package: com.microsoft.azure.storage.table
  summary: "<p>Gets the PartitionKey value for the entity.</p>\r\n<p></p>"
  syntax:
    content: public String getPartitionKey()
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents the PartitionKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableEntity.getRowKey()
  id: getRowKey()
  parent: com.microsoft.azure.storage.table.TableEntity
  href: com.microsoft.azure.storage.table.TableEntity.yml
  langs:
  - java
  name: getRowKey()
  nameWithType: TableEntity.getRowKey()
  fullName: com.microsoft.azure.storage.table.TableEntity.getRowKey()
  overload: com.microsoft.azure.storage.table.TableEntity.getRowKey*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
    startLine: 98
  package: com.microsoft.azure.storage.table
  summary: "<p>Gets the RowKey value for the entity.</p>\r\n<p></p>"
  syntax:
    content: public String getRowKey()
    return:
      type: "26831127"
      description: <p>A <code>String</code> which represents the RowKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableEntity.getTimestamp()
  id: getTimestamp()
  parent: com.microsoft.azure.storage.table.TableEntity
  href: com.microsoft.azure.storage.table.TableEntity.yml
  langs:
  - java
  name: getTimestamp()
  nameWithType: TableEntity.getTimestamp()
  fullName: com.microsoft.azure.storage.table.TableEntity.getTimestamp()
  overload: com.microsoft.azure.storage.table.TableEntity.getTimestamp*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
    startLine: 106
  package: com.microsoft.azure.storage.table
  summary: "<p>Gets the Timestamp for the entity. The server manages the value of Timestamp, which cannot be modified.</p>\r\n<p></p>"
  syntax:
    content: public Date getTimestamp()
    return:
      type: "12977444"
      description: <p>A <code>java.util.Date</code> object which represents the Timestamp value for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableEntity.readEntity(HashMap<String, EntityProperty>,OperationContext)
  id: readEntity(HashMap<String, EntityProperty>,OperationContext)
  parent: com.microsoft.azure.storage.table.TableEntity
  href: com.microsoft.azure.storage.table.TableEntity.yml
  langs:
  - java
  name: readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)
  nameWithType: TableEntity.readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)
  fullName: com.microsoft.azure.storage.table.TableEntity.readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)
  overload: com.microsoft.azure.storage.table.TableEntity.readEntity*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
    startLine: 121
  package: com.microsoft.azure.storage.table
  summary: "<p>Populates an instance of the object implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> using the specified properties parameter, which represents a map of  property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> data typed values.</p>\r\n<p></p>"
  syntax:
    content: public void readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)
    parameters:
    - id: properties
      type: 292b5718com.microsoft.azure.storage.table.EntityPropertya08ddfce
      description: <p>The <code>java.util.HashMap</code> of <code>String</code> to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values to use to populate the table entity instance. </p>
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object used to track the execution of the operation.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If an error occurs during the operation. </p>
- uid: com.microsoft.azure.storage.table.TableEntity.setEtag(String)
  id: setEtag(String)
  parent: com.microsoft.azure.storage.table.TableEntity
  href: com.microsoft.azure.storage.table.TableEntity.yml
  langs:
  - java
  name: setEtag(String etag)
  nameWithType: TableEntity.setEtag(String etag)
  fullName: com.microsoft.azure.storage.table.TableEntity.setEtag(String etag)
  overload: com.microsoft.azure.storage.table.TableEntity.setEtag*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
    startLine: 131
  package: com.microsoft.azure.storage.table
  summary: "<p>Sets the ETag value to verify for the entity. This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage. The client cannot update this value on the service.</p>\r\n<p></p>"
  syntax:
    content: public void setEtag(String etag)
    parameters:
    - id: etag
      type: "26831127"
      description: <p>A <code>String</code> which specifies the ETag to set for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableEntity.setPartitionKey(String)
  id: setPartitionKey(String)
  parent: com.microsoft.azure.storage.table.TableEntity
  href: com.microsoft.azure.storage.table.TableEntity.yml
  langs:
  - java
  name: setPartitionKey(String partitionKey)
  nameWithType: TableEntity.setPartitionKey(String partitionKey)
  fullName: com.microsoft.azure.storage.table.TableEntity.setPartitionKey(String partitionKey)
  overload: com.microsoft.azure.storage.table.TableEntity.setPartitionKey*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
    startLine: 139
  package: com.microsoft.azure.storage.table
  summary: "<p>Sets the PartitionKey value for the entity.</p>\r\n<p></p>"
  syntax:
    content: public void setPartitionKey(String partitionKey)
    parameters:
    - id: partitionKey
      type: "26831127"
      description: <p>A <code>String</code> which specifies the PartitionKey value to set for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableEntity.setRowKey(String)
  id: setRowKey(String)
  parent: com.microsoft.azure.storage.table.TableEntity
  href: com.microsoft.azure.storage.table.TableEntity.yml
  langs:
  - java
  name: setRowKey(String rowKey)
  nameWithType: TableEntity.setRowKey(String rowKey)
  fullName: com.microsoft.azure.storage.table.TableEntity.setRowKey(String rowKey)
  overload: com.microsoft.azure.storage.table.TableEntity.setRowKey*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
    startLine: 147
  package: com.microsoft.azure.storage.table
  summary: "<p>Sets the RowKey value for the entity.</p>\r\n<p></p>"
  syntax:
    content: public void setRowKey(String rowKey)
    parameters:
    - id: rowKey
      type: "26831127"
      description: <p>A <code>String</code> which specifies the RowKey value to set for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableEntity.setTimestamp(Date)
  id: setTimestamp(Date)
  parent: com.microsoft.azure.storage.table.TableEntity
  href: com.microsoft.azure.storage.table.TableEntity.yml
  langs:
  - java
  name: setTimestamp(Date timeStamp)
  nameWithType: TableEntity.setTimestamp(Date timeStamp)
  fullName: com.microsoft.azure.storage.table.TableEntity.setTimestamp(Date timeStamp)
  overload: com.microsoft.azure.storage.table.TableEntity.setTimestamp*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
    startLine: 156
  package: com.microsoft.azure.storage.table
  summary: "<p>Sets the Timestamp value for the entity. Note that timestamp is a read-only property on the service and should not be set by the user.</p>\r\n<p></p>"
  syntax:
    content: public void setTimestamp(Date timeStamp)
    parameters:
    - id: timeStamp
      type: "12977444"
      description: <p>A <code>java.util.Date</code> which specifies the Timestamp value to set for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableEntity.writeEntity(OperationContext)
  id: writeEntity(OperationContext)
  parent: com.microsoft.azure.storage.table.TableEntity
  href: com.microsoft.azure.storage.table.TableEntity.yml
  langs:
  - java
  name: writeEntity(OperationContext opContext)
  nameWithType: TableEntity.writeEntity(OperationContext opContext)
  fullName: com.microsoft.azure.storage.table.TableEntity.writeEntity(OperationContext opContext)
  overload: com.microsoft.azure.storage.table.TableEntity.writeEntity*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
    startLine: 172
  package: com.microsoft.azure.storage.table
  summary: "<p>Returns a map of  property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> data typed values that represents the serialized content of the table entity instance.</p>\r\n<p></p>"
  syntax:
    content: public HashMap<String, EntityProperty> writeEntity(OperationContext opContext)
    parameters:
    - id: opContext
      type: com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object used to track the execution of the operation.</p>
    return:
      type: 292b5718com.microsoft.azure.storage.table.EntityPropertya08ddfce
      description: <p>A <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values representing the properties of the table entity.</p>
  exceptions:
  - type: ca4f407a
    description: <p>If an error occurs during the operation. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.storage.table.TableEntity.getEtag*
  name: getEtag
  nameWithType: TableEntity.getEtag
  fullName: com.microsoft.azure.storage.table.TableEntity.getEtag
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableEntity.getPartitionKey*
  name: getPartitionKey
  nameWithType: TableEntity.getPartitionKey
  fullName: com.microsoft.azure.storage.table.TableEntity.getPartitionKey
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableEntity.getRowKey*
  name: getRowKey
  nameWithType: TableEntity.getRowKey
  fullName: com.microsoft.azure.storage.table.TableEntity.getRowKey
  package: com.microsoft.azure.storage.table
- uid: "12977444"
  spec.java:
  - name: Date
    fullName: Date
- uid: com.microsoft.azure.storage.table.TableEntity.getTimestamp*
  name: getTimestamp
  nameWithType: TableEntity.getTimestamp
  fullName: com.microsoft.azure.storage.table.TableEntity.getTimestamp
  package: com.microsoft.azure.storage.table
- uid: ca4f407a
  spec.java:
  - name: StorageException
    fullName: StorageException
- uid: 292b5718com.microsoft.azure.storage.table.EntityPropertya08ddfce
  spec.java:
  - name: 'HashMap<String, '
    fullName: 'HashMap<String, '
  - uid: com.microsoft.azure.storage.table.EntityProperty
    name: EntityProperty
    fullName: com.microsoft.azure.storage.table.EntityProperty
    href: com.microsoft.azure.storage.table.EntityProperty.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.table.TableEntity.readEntity*
  name: readEntity
  nameWithType: TableEntity.readEntity
  fullName: com.microsoft.azure.storage.table.TableEntity.readEntity
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableEntity.setEtag*
  name: setEtag
  nameWithType: TableEntity.setEtag
  fullName: com.microsoft.azure.storage.table.TableEntity.setEtag
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableEntity.setPartitionKey*
  name: setPartitionKey
  nameWithType: TableEntity.setPartitionKey
  fullName: com.microsoft.azure.storage.table.TableEntity.setPartitionKey
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableEntity.setRowKey*
  name: setRowKey
  nameWithType: TableEntity.setRowKey
  fullName: com.microsoft.azure.storage.table.TableEntity.setRowKey
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableEntity.setTimestamp*
  name: setTimestamp
  nameWithType: TableEntity.setTimestamp
  fullName: com.microsoft.azure.storage.table.TableEntity.setTimestamp
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableEntity.writeEntity*
  name: writeEntity
  nameWithType: TableEntity.writeEntity
  fullName: com.microsoft.azure.storage.table.TableEntity.writeEntity
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table.TableServiceEntity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableServiceEntity.yml
  name: TableServiceEntity
  nameWithType: TableServiceEntity
  fullName: com.microsoft.azure.storage.table.TableServiceEntity
  type: Class
  summary: "<p>The <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> class represents the base object type for a table entity in the Storage service. <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> provides a base implementation for the <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> interface that provides  and  methods that by default serialize and deserialize all properties via reflection. A table entity class may extend this class and override the  and  methods to provide customized or more performant serialization logic. </p>\r\n<p>The use of reflection allows subclasses of <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> to be serialized and deserialized without having to implement the serialization code themselves. When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data. To take advantage of the automatic serialization code, your table entity classes should provide getter and setter methods for each property in the corresponding table entity in Microsoft Azure table storage. The reflection code looks for getter and setter methods in pairs of the form </p>\r\n<p></p>\r\n<p>and </p>\r\n<p></p>\r\n<p>where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property. See the table below for a map of property types to their Java equivalents. The <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention. Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotations are case sensitive for matching property names with reflection. Use the <xref uid=\"com.microsoft.azure.storage.table.Ignore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Ignore\"></xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization. Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation in a subclass. </p>\r\n<p>The following table shows the supported property data types in Microsoft Azure storage and the corresponding Java types when deserialized. <table rows=\"9\" cols=\"4\"><caption>Supported property data types in Microsoft Azure storage</caption><row><entry thead=\"yes\"><p>Storage Type </p></entry><entry thead=\"yes\"><p>EdmType Value </p></entry><entry thead=\"yes\"><p>Java Type </p></entry><entry thead=\"yes\"><p>Description  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.Binary</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.BINARY\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#BINARY\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>An array of bytes up to 64 KB in size.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.Boolean</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.BOOLEAN\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#BOOLEAN\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A Boolean value.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.DateTime</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.DATE_TIME\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#DATE_TIME\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A 64-bit value expressed as Coordinated Universal Time (UTC). The supported range begins from 12:00 midnight, January 1, 1601 A.D. (C.E.), UTC. The range ends at December 31, 9999.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.Double</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.DOUBLE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#DOUBLE\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A 64-bit double-precision floating point value.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.Guid</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.GUID\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#GUID\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A 128-bit globally unique identifier.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.Int32</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.INT32\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#INT32\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A 32-bit integer value.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.Int64</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.INT64\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#INT64\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A 64-bit integer value.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.String</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.STRING\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#STRING\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A UTF-16-encoded value. String values may be up to 64 KB in size.  </p></entry></row></table></p>\r\n<p>See the MSDN topic <a href=\"http://msdn.microsoft.com//library/azure/dd179338.aspx\">Understanding the Table Service Data Model</a> for an overview of tables, entities, and properties as used in the Microsoft Azure Storage service. </p>\r\n<p>For an overview of the available EDM primitive data types and names, see the</p>\r\n<p>\r\n  <a href=\"http://www.odata.org/developers/protocols/overview#AbstractTypeSystem\">Primitive Data Types</a> section of the <a href=\"http://www.odata.org/developers/protocols/overview\">OData Protocol Overview</a>. </p>\r\n<p></p>"
  syntax:
    content: public class TableServiceEntity
- uid: com.microsoft.azure.storage.table.TableServiceEntity.getEtag()
  parent: com.microsoft.azure.storage.table.TableServiceEntity
  href: com.microsoft.azure.storage.table.TableServiceEntity.yml
  name: getEtag()
  nameWithType: TableServiceEntity.getEtag()
  fullName: com.microsoft.azure.storage.table.TableServiceEntity.getEtag()
  type: Method
  summary: "<p>Gets the ETag value to verify for the entity. This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage. The client cannot update this value on the service.</p>\r\n<p></p>"
  syntax:
    content: public String getEtag()
    return:
      type: "26831127"
      description: <p>A <code>String</code> containing the ETag for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableServiceEntity.getPartitionKey()
  parent: com.microsoft.azure.storage.table.TableServiceEntity
  href: com.microsoft.azure.storage.table.TableServiceEntity.yml
  name: getPartitionKey()
  nameWithType: TableServiceEntity.getPartitionKey()
  fullName: com.microsoft.azure.storage.table.TableServiceEntity.getPartitionKey()
  type: Method
  summary: "<p>Gets the PartitionKey value for the entity.</p>\r\n<p></p>"
  syntax:
    content: public String getPartitionKey()
    return:
      type: "26831127"
      description: <p>A <code>String</code> containing the PartitionKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableServiceEntity.getRowKey()
  parent: com.microsoft.azure.storage.table.TableServiceEntity
  href: com.microsoft.azure.storage.table.TableServiceEntity.yml
  name: getRowKey()
  nameWithType: TableServiceEntity.getRowKey()
  fullName: com.microsoft.azure.storage.table.TableServiceEntity.getRowKey()
  type: Method
  summary: "<p>Gets the RowKey value for the entity.</p>\r\n<p></p>"
  syntax:
    content: public String getRowKey()
    return:
      type: "26831127"
      description: <p>A <code>String</code> containing the RowKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableServiceEntity.getTimestamp()
  parent: com.microsoft.azure.storage.table.TableServiceEntity
  href: com.microsoft.azure.storage.table.TableServiceEntity.yml
  name: getTimestamp()
  nameWithType: TableServiceEntity.getTimestamp()
  fullName: com.microsoft.azure.storage.table.TableServiceEntity.getTimestamp()
  type: Method
  summary: "<p>Gets the Timestamp for the entity. The server manages the value of Timestamp, which cannot be modified.</p>\r\n<p></p>"
  syntax:
    content: public Date getTimestamp()
    return:
      type: "12977444"
      description: <p>A <code>java.util.Date</code> object which represents the Timestamp value for the entity. </p>
- uid: com.microsoft.azure.storage.table.DynamicTableEntity.readEntity(final HashMap<String, EntityProperty>,final OperationContext)
  parent: com.microsoft.azure.storage.table.DynamicTableEntity
  href: com.microsoft.azure.storage.table.DynamicTableEntity.yml
  name: readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  nameWithType: DynamicTableEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  fullName: com.microsoft.azure.storage.table.DynamicTableEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  type: Method
  summary: "<p>Populates this <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> instance using the specified map of property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> data typed values.</p>\r\n<p></p>"
  syntax:
    content: public void readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
    parameters:
    - id: properties
      type: 2e8e1cc0com.microsoft.azure.storage.table.EntityPropertya08ddfce
      description: <p>The <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values to store in this <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> instance. </p>
    - id: opContext
      type: 93de0ef9com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object used to track the execution of the operation. </p>
- uid: com.microsoft.azure.storage.table.TableServiceEntity.readEntity(final HashMap<String, EntityProperty>,final OperationContext)
  parent: com.microsoft.azure.storage.table.TableServiceEntity
  href: com.microsoft.azure.storage.table.TableServiceEntity.yml
  name: readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  nameWithType: TableServiceEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  fullName: com.microsoft.azure.storage.table.TableServiceEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  type: Method
  summary: "<p>Populates this table entity instance using the map of property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> data typed values. </p>\r\n<p>This method invokes <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(final Object,final HashMap&lt;String, EntityProperty&gt;,final OperationContext)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity#readEntityWithReflection\"></xref> to populate the table entity instance the method is called on using reflection. Table entity classes that extend <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> can take advantage of this behavior by implementing getter and setter methods for the particular properties of the table entity in Microsoft Azure storage the class represents. </p>\r\n<p>Override this method in classes that extend <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> to invoke custom serialization code.</p>\r\n<p></p>"
  syntax:
    content: public void readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
    parameters:
    - id: properties
      type: 2e8e1cc0com.microsoft.azure.storage.table.EntityPropertya08ddfce
      description: <p>The <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data values to deserialize and store in this table entity instance. </p>
    - id: opContext
      type: 93de0ef9com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object used to track the execution of the operation. </p>
- uid: com.microsoft.azure.storage.table.EntityProperty
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.EntityProperty.yml
  name: EntityProperty
  nameWithType: EntityProperty
  fullName: com.microsoft.azure.storage.table.EntityProperty
  type: Class
  summary: "<p>A class which represents a single typed property value in a table entity. An <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> stores the data type as an <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType\"></xref>. The value, which may be  for object types, but not for primitive types, is serialized and stored as a . </p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> provides overloaded constructors and overloads of the  method for supported value types. Each overloaded constructor or  method sets the <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType\"></xref> and serializes the value appropriately based on the parameter type. </p>\r\n<p>Use one of the <em>Type</em> methods to deserialize an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> as the appropriate Java type. The method will throw a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParseException\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalArgumentException\"></xref> if the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> cannot be deserialized as the Java type. </p>"
  syntax:
    content: public class EntityProperty
- uid: com.microsoft.azure.storage.OperationContext
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.OperationContext.yml
  name: OperationContext
  nameWithType: OperationContext
  fullName: com.microsoft.azure.storage.OperationContext
  type: Class
  summary: "<p>Represents the current logical operation. A logical operation may have a one-to-many relationship with multiple individual physical requests. </p>"
  syntax:
    content: public class OperationContext
- uid: com.microsoft.azure.storage.StorageException
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.StorageException.yml
  name: StorageException
  nameWithType: StorageException
  fullName: com.microsoft.azure.storage.StorageException
  type: Class
  summary: "<p>Represents an exception for the Microsoft Azure storage service. </p>"
  syntax:
    content: public class StorageException
- uid: com.microsoft.azure.storage.table.TableEntity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableEntity.yml
  name: TableEntity
  nameWithType: TableEntity
  fullName: com.microsoft.azure.storage.table.TableEntity
  type: Interface
  summary: "<p>An interface required for table entity types. The <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> interface declares getter and setter methods for the common entity properties, and  and  methods for serialization and deserialization of all entity properties using a property map. Create classes implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity. </p>\r\n<p>The Storage client library includes two implementations of <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> that provide for simple property access and serialization: </p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> and provides a simple property map to store and retrieve properties. Use a <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties. You can also use this type to perform bulk table updates of heterogeneous entities without losing property information. </p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> is an implementation of <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> that uses reflection-based serialization and deserialization behavior in its  and  methods. <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref>-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically. </p>\r\n<p>Any class that implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> by invoking the static methods  in  and  in . The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically. When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data. The reflection code looks for getter and setter methods in pairs of the form </p>\r\n<p></p>\r\n<p>and </p>\r\n<p></p>\r\n<p>where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property. See the table in the class description for <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> for a map of property types to their Java equivalents. The <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention. Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotations are case sensitive for matching property names with reflection. Use the <xref uid=\"com.microsoft.azure.storage.table.Ignore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Ignore\"></xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization. Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation in a subclass that uses the reflection methods. </p>\r\n<p></p>"
  syntax: *o1
- uid: com.microsoft.azure.storage.table.TableServiceEntity.setEtag(final String)
  parent: com.microsoft.azure.storage.table.TableServiceEntity
  href: com.microsoft.azure.storage.table.TableServiceEntity.yml
  name: setEtag(final String etag)
  nameWithType: TableServiceEntity.setEtag(final String etag)
  fullName: com.microsoft.azure.storage.table.TableServiceEntity.setEtag(final String etag)
  type: Method
  summary: "<p>Sets the ETag value to verify for the entity. This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage. The client cannot update this value on the service.</p>\r\n<p></p>"
  syntax:
    content: public void setEtag(final String etag)
    parameters:
    - id: etag
      type: 3d93591e
      description: <p>A <code>String</code> containing the ETag for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableServiceEntity.setPartitionKey(final String)
  parent: com.microsoft.azure.storage.table.TableServiceEntity
  href: com.microsoft.azure.storage.table.TableServiceEntity.yml
  name: setPartitionKey(final String partitionKey)
  nameWithType: TableServiceEntity.setPartitionKey(final String partitionKey)
  fullName: com.microsoft.azure.storage.table.TableServiceEntity.setPartitionKey(final String partitionKey)
  type: Method
  summary: "<p>Sets the PartitionKey value for the entity.</p>\r\n<p></p>"
  syntax:
    content: public void setPartitionKey(final String partitionKey)
    parameters:
    - id: partitionKey
      type: 3d93591e
      description: <p>A <code>String</code> containing the PartitionKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableServiceEntity.setRowKey(final String)
  parent: com.microsoft.azure.storage.table.TableServiceEntity
  href: com.microsoft.azure.storage.table.TableServiceEntity.yml
  name: setRowKey(final String rowKey)
  nameWithType: TableServiceEntity.setRowKey(final String rowKey)
  fullName: com.microsoft.azure.storage.table.TableServiceEntity.setRowKey(final String rowKey)
  type: Method
  summary: "<p>Sets the RowKey value for the entity.</p>\r\n<p></p>"
  syntax:
    content: public void setRowKey(final String rowKey)
    parameters:
    - id: rowKey
      type: 3d93591e
      description: <p>A <code>String</code> containing the RowKey value for the entity. </p>
- uid: com.microsoft.azure.storage.table.TableServiceEntity.setTimestamp(final Date)
  parent: com.microsoft.azure.storage.table.TableServiceEntity
  href: com.microsoft.azure.storage.table.TableServiceEntity.yml
  name: setTimestamp(final Date timeStamp)
  nameWithType: TableServiceEntity.setTimestamp(final Date timeStamp)
  fullName: com.microsoft.azure.storage.table.TableServiceEntity.setTimestamp(final Date timeStamp)
  type: Method
  summary: "<p>Sets the  value for the entity. Note that the timestamp property is a read-only property, set by the service only.</p>\r\n<p></p>"
  syntax:
    content: public void setTimestamp(final Date timeStamp)
    parameters:
    - id: timeStamp
      type: 970a8f17
      description: <p>A <code>java.util.Date</code> containing the <code>timeStamp</code> value for the entity. </p>
- uid: com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity(final OperationContext)
  parent: com.microsoft.azure.storage.table.DynamicTableEntity
  href: com.microsoft.azure.storage.table.DynamicTableEntity.yml
  name: writeEntity(final OperationContext opContext)
  nameWithType: DynamicTableEntity.writeEntity(final OperationContext opContext)
  fullName: com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity(final OperationContext opContext)
  type: Method
  summary: "<p>Returns the map of property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> data values from this <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> instance.</p>\r\n<p></p>"
  syntax:
    content: public HashMap<String, EntityProperty> writeEntity(final OperationContext opContext)
    parameters:
    - id: opContext
      type: 93de0ef9com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object used to track the execution of the operation.</p>
    return:
      type: 292b5718com.microsoft.azure.storage.table.EntityPropertya08ddfce
      description: <p>A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values stored in this <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> instance.</p>
- uid: com.microsoft.azure.storage.table.TableServiceEntity.writeEntity(final OperationContext)
  parent: com.microsoft.azure.storage.table.TableServiceEntity
  href: com.microsoft.azure.storage.table.TableServiceEntity.yml
  name: writeEntity(final OperationContext opContext)
  nameWithType: TableServiceEntity.writeEntity(final OperationContext opContext)
  fullName: com.microsoft.azure.storage.table.TableServiceEntity.writeEntity(final OperationContext opContext)
  type: Method
  summary: "<p>Returns a map of property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> data typed values created by serializing this table entity instance. </p>\r\n<p>This method invokes <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection(final Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"writeEntityWithReflection\"></xref> to serialize the table entity instance the method is called on using reflection. Table entity classes that extend <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> can take advantage of this behavior by implementing getter and setter methods for the particular properties of the table entity in Microsoft Azure storage the class represents. Note that the property names \"PartitionKey\", \"RowKey\", and \"Timestamp\" are reserved and will be ignored if set on other methods with the <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation. </p>\r\n<p>Override this method in classes that extend <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> to invoke custom serialization code.</p>\r\n<p></p>"
  syntax:
    content: public HashMap<String, EntityProperty> writeEntity(final OperationContext opContext)
    parameters:
    - id: opContext
      type: 93de0ef9com.microsoft.azure.storage.OperationContext
      description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object used to track the execution of the operation. </p>
    return:
      type: 292b5718com.microsoft.azure.storage.table.EntityPropertya08ddfce
      description: <p>A <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values representing the properties serialized from this table entity instance. </p>
- uid: com.microsoft.azure.storage.table.DynamicTableEntity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.DynamicTableEntity.yml
  name: DynamicTableEntity
  nameWithType: DynamicTableEntity
  fullName: com.microsoft.azure.storage.table.DynamicTableEntity
  type: Class
  summary: "<p>A <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> type which allows callers direct access to the property map of the entity. This class extends <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> to eliminate the use of reflection for serialization and deserialization. </p>"
  syntax:
    content: public class DynamicTableEntity extends TableServiceEntity
- uid: com.microsoft.azure.storage.table.StoreAs
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.StoreAs.yml
  name: StoreAs
  nameWithType: StoreAs
  fullName: com.microsoft.azure.storage.table.StoreAs
  type: Interface
  summary: "<p>An annotation used to override the name a property is serialized and deserialized with using reflection. Use this annotation to specify the property name to associate with the data stored by a setter method or retrieved by a getter method in a class implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> that uses reflection-based serialization and deserialization. Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the  annotation. </p>\r\n<p>Example: </p>\r\n<p></p>\r\n<p></p>\r\n<p>This example shows how the methods that would get and set an entity property named <em>ObjectPropertyName</em> in the default case can be annotated to get and set an entity property named <em>EntityPropertyName</em>. See the documentation for <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> for more information on using reflection-based serialization and deserialization.</p>\r\n<p></p>"
  syntax:
    content: public interface StoreAs
- uid: com.microsoft.azure.storage.table.Ignore
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.Ignore.yml
  name: Ignore
  nameWithType: Ignore
  fullName: com.microsoft.azure.storage.table.Ignore
  type: Interface
  summary: "<p>An annotation set on a method to prevent its use in serializing or deserializing a property by reflection. Apply the  annotation to methods in a class implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> to force them to be ignored during reflection-based serialization and deserialization. See the documentation for <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> for more information on using reflection-based serialization and deserialization.</p>\r\n<p></p>"
  syntax:
    content: public interface Ignore
