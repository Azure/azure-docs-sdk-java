### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.NetworkPeerings"
fullName: "com.microsoft.azure.management.network.NetworkPeerings"
name: "NetworkPeerings"
nameWithType: "NetworkPeerings"
summary: "Entry point to network peering management API."
syntax: "public interface NetworkPeerings extends SupportsCreating<NetworkPeering.DefinitionStages.Blank>, SupportsDeletingById, SupportsGettingById<NetworkPeering>, SupportsBatchCreation<NetworkPeering>, SupportsDeletingByParent, SupportsListing<NetworkPeering>, HasManager<NetworkManager>, HasInner<VirtualNetworkPeeringsInner>"
methods:
- uid: "com.microsoft.azure.management.network.NetworkPeerings.getByRemoteNetwork(com.microsoft.azure.management.network.Network)"
  fullName: "com.microsoft.azure.management.network.NetworkPeerings.getByRemoteNetwork(Network network)"
  name: "getByRemoteNetwork(Network network)"
  nameWithType: "NetworkPeerings.getByRemoteNetwork(Network network)"
  summary: "Finds the peering, if any, that is associated with the specified network."
  modifiers:
  - "abstract"
  parameters:
  - description: "an existing network"
    name: "network"
    type: "<xref href=\"com.microsoft.azure.management.network.Network?alt=com.microsoft.azure.management.network.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract NetworkPeering getByRemoteNetwork(Network network)"
  desc: "Finds the peering, if any, that is associated with the specified network.\n\n(Note that this makes a separate call to Azure.)"
  returns:
    description: "a network peering, or null if none exists"
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkPeering?alt=com.microsoft.azure.management.network.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkPeerings.getByRemoteNetwork(java.lang.String)"
  fullName: "com.microsoft.azure.management.network.NetworkPeerings.getByRemoteNetwork(String remoteNetworkResourceId)"
  name: "getByRemoteNetwork(String remoteNetworkResourceId)"
  nameWithType: "NetworkPeerings.getByRemoteNetwork(String remoteNetworkResourceId)"
  summary: "Finds the peering, if any, that is associated with the specified network."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID of an existing network"
    name: "remoteNetworkResourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract NetworkPeering getByRemoteNetwork(String remoteNetworkResourceId)"
  desc: "Finds the peering, if any, that is associated with the specified network.\n\n(Note that this makes a separate call to Azure.)"
  returns:
    description: "a network peering, or null if none exists"
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkPeering?alt=com.microsoft.azure.management.network.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NetworkPeerings.getByRemoteNetworkAsync(com.microsoft.azure.management.network.Network)"
  fullName: "com.microsoft.azure.management.network.NetworkPeerings.getByRemoteNetworkAsync(Network network)"
  name: "getByRemoteNetworkAsync(Network network)"
  nameWithType: "NetworkPeerings.getByRemoteNetworkAsync(Network network)"
  summary: "Asynchronously finds the peering, if any, that is associated with the specified network."
  modifiers:
  - "abstract"
  parameters:
  - description: "an existing network"
    name: "network"
    type: "<xref href=\"com.microsoft.azure.management.network.Network?alt=com.microsoft.azure.management.network.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<NetworkPeering> getByRemoteNetworkAsync(Network network)"
  desc: "Asynchronously finds the peering, if any, that is associated with the specified network.\n\n(Note that this makes a separate call to Azure.)"
  returns:
    description: "a representation of the future computation of this call, evaluating to null if no such peering is found"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.NetworkPeering?alt=com.microsoft.azure.management.network.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NetworkPeerings.getByRemoteNetworkAsync(java.lang.String)"
  fullName: "com.microsoft.azure.management.network.NetworkPeerings.getByRemoteNetworkAsync(String remoteNetworkResourceId)"
  name: "getByRemoteNetworkAsync(String remoteNetworkResourceId)"
  nameWithType: "NetworkPeerings.getByRemoteNetworkAsync(String remoteNetworkResourceId)"
  summary: "Asynchronously finds the peering, if any, that is associated with the specified network."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID of an existing network"
    name: "remoteNetworkResourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<NetworkPeering> getByRemoteNetworkAsync(String remoteNetworkResourceId)"
  desc: "Asynchronously finds the peering, if any, that is associated with the specified network.\n\n(Note that this makes a separate call to Azure.)"
  returns:
    description: "a representation of the future computation of this call, evaluating to null if no such peering is found"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.NetworkPeering?alt=com.microsoft.azure.management.network.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Entry point to network peering management API."
implements:
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByParent?alt=com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByParent&text=SupportsDeletingByParent\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById?alt=com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById&text=SupportsGettingById\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.NetworkPeering?alt=com.microsoft.azure.management.network.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.implementation.NetworkManager?alt=com.microsoft.azure.management.network.implementation.NetworkManager&text=NetworkManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation?alt=com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation&text=SupportsBatchCreation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.NetworkPeering?alt=com.microsoft.azure.management.network.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating?alt=com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.NetworkPeering.DefinitionStages.Blank?alt=com.microsoft.azure.management.network.NetworkPeering.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById?alt=com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById&text=SupportsDeletingById\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing?alt=com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing&text=SupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.NetworkPeering?alt=com.microsoft.azure.management.network.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.HasInner?alt=com.microsoft.azure.management.resources.fluentcore.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.implementation.VirtualNetworkPeeringsInner?alt=com.microsoft.azure.management.network.implementation.VirtualNetworkPeeringsInner&text=VirtualNetworkPeeringsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
