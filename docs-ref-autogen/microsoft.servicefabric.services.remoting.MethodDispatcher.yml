### YamlMime:JavaType
methods:
- fullName: microsoft.servicefabric.services.remoting.MethodDispatcher.dispatch(Object objectImplementation, int methodId, Object requestBody)
  name: dispatch(Object objectImplementation, int methodId, Object requestBody)
  nameWithType: MethodDispatcher.dispatch(Object objectImplementation, int methodId, Object requestBody)
  parameters:
  - name: objectImplementation
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - name: requestBody
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  syntax: public void dispatch(Object objectImplementation, int methodId, Object requestBody)
  uid: microsoft.servicefabric.services.remoting.MethodDispatcher.dispatch(Object,int,Object)
- fullName: microsoft.servicefabric.services.remoting.MethodDispatcher.dispatchAsync(Object objectImplementation, int methodId, Object requestBody, CancellationToken cancellationToken)
  name: dispatchAsync(Object objectImplementation, int methodId, Object requestBody, CancellationToken cancellationToken)
  nameWithType: MethodDispatcher.dispatchAsync(Object objectImplementation, int methodId, Object requestBody, CancellationToken cancellationToken)
  parameters:
  - name: objectImplementation
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - name: requestBody
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3CObject%3E?alt=CompletableFuture%3CObject%3E&text=CompletableFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  syntax: public CompletableFuture<Object> dispatchAsync(Object objectImplementation, int methodId, Object requestBody, CancellationToken cancellationToken)
  uid: microsoft.servicefabric.services.remoting.MethodDispatcher.dispatchAsync(Object,int,Object,CancellationToken)
- fullName: microsoft.servicefabric.services.remoting.MethodDispatcher.getInterfaceId()
  name: getInterfaceId()
  nameWithType: MethodDispatcher.getInterfaceId()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int getInterfaceId()
  uid: microsoft.servicefabric.services.remoting.MethodDispatcher.getInterfaceId()
- fullName: microsoft.servicefabric.services.remoting.MethodDispatcher.getMethodName(int methodId)
  name: getMethodName(int methodId)
  nameWithType: MethodDispatcher.getMethodName(int methodId)
  parameters:
  - name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getMethodName(int methodId)
  uid: microsoft.servicefabric.services.remoting.MethodDispatcher.getMethodName(int)
nameWithType: MethodDispatcher
syntax: public interface MethodDispatcher
type: interface
uid: microsoft.servicefabric.services.remoting.MethodDispatcher
fullName: microsoft.servicefabric.services.remoting.MethodDispatcher
name: MethodDispatcher
package: microsoft.servicefabric.services.remoting
summary: <p>This interface defines api to handle dispatches requests from the client to the interface/method of the remoted object. </p>
metadata: {}
