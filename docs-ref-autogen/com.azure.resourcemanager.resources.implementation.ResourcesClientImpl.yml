### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  id: ResourcesClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation
  children:
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateByIdAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDelete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDelete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteById(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteById(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteByIdAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResourcesAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateByIdAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResourcesAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistence(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceById(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateByIdAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateByIdWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteById(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteById(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteByIdAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteByIdWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getById(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.list()
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.list(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listAsync()
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listAsync(java.lang.String,java.lang.String,java.lang.Integer)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroup(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResourcesAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResourcesWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateByIdAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateByIdWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResourcesAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  - com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResourcesWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  langs:
  - java
  name: ResourcesClientImpl
  nameWithType: ResourcesClientImpl
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  type: Class
  package: com.azure.resourcemanager.resources.implementation
  summary: An instance of this class provides access to all the operations defined in ResourcesClient.
  syntax:
    content: public final class ResourcesClientImpl implements InnerSupportsListing<GenericResourceExpandedInner>, ResourcesClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
  - com.azure.resourcemanager.resources.fluent.ResourcesClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.ResourcesClientImpl(com.azure.resourcemanager.resources.implementation.ResourceManagementClientImpl)
  id: ResourcesClientImpl(com.azure.resourcemanager.resources.implementation.ResourceManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: ResourcesClientImpl(ResourceManagementClientImpl client)
  nameWithType: ResourcesClientImpl.ResourcesClientImpl(ResourceManagementClientImpl client)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.ResourcesClientImpl(ResourceManagementClientImpl client)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.ResourcesClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.resources.implementation
  summary: Initializes an instance of ResourcesClientImpl.
  syntax:
    content: " ResourcesClientImpl(ResourceManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.resources.implementation.ResourceManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.beginCreateOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Creates a resource.
  syntax:
    content: public SyncPoller<PollResult<GenericResourceInner>,GenericResourceInner> beginCreateOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to create.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to create.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
  nameWithType: ResourcesClientImpl.beginCreateOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Creates a resource.
  syntax:
    content: public SyncPoller<PollResult<GenericResourceInner>,GenericResourceInner> beginCreateOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to create.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to create.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginCreateOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.beginCreateOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Creates a resource.
  syntax:
    content: public PollerFlux<PollResult<GenericResourceInner>,GenericResourceInner> beginCreateOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to create.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to create.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: beginCreateOrUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginCreateOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.beginCreateOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Create a resource by ID.
  syntax:
    content: public SyncPoller<PollResult<GenericResourceInner>,GenericResourceInner> beginCreateOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginCreateOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
  nameWithType: ResourcesClientImpl.beginCreateOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Create a resource by ID.
  syntax:
    content: public SyncPoller<PollResult<GenericResourceInner>,GenericResourceInner> beginCreateOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateByIdAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: beginCreateOrUpdateByIdAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginCreateOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.beginCreateOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateByIdAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Create a resource by ID.
  syntax:
    content: public PollerFlux<PollResult<GenericResourceInner>,GenericResourceInner> beginCreateOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDelete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  nameWithType: ResourcesClientImpl.beginDelete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDelete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource to delete. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to delete.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDelete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
  nameWithType: ResourcesClientImpl.beginDelete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDelete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource to delete. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to delete.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginDeleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  nameWithType: ResourcesClientImpl.beginDeleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource to delete. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to delete.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteById(java.lang.String,java.lang.String)
  id: beginDeleteById(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginDeleteById(String resourceId, String apiVersion)
  nameWithType: ResourcesClientImpl.beginDeleteById(String resourceId, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteById(String resourceId, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource by ID.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeleteById(String resourceId, String apiVersion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteById(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteById(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginDeleteById(String resourceId, String apiVersion, Context context)
  nameWithType: ResourcesClientImpl.beginDeleteById(String resourceId, String apiVersion, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteById(String resourceId, String apiVersion, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource by ID.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeleteById(String resourceId, String apiVersion, Context context)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteByIdAsync(java.lang.String,java.lang.String)
  id: beginDeleteByIdAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginDeleteByIdAsync(String resourceId, String apiVersion)
  nameWithType: ResourcesClientImpl.beginDeleteByIdAsync(String resourceId, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteByIdAsync(String resourceId, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteByIdAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource by ID.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteByIdAsync(String resourceId, String apiVersion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  id: beginMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  nameWithType: ResourcesClientImpl.beginMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResources*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  id: beginMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  nameWithType: ResourcesClientImpl.beginMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResources*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResourcesAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  id: beginMoveResourcesAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  nameWithType: ResourcesClientImpl.beginMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResourcesAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: beginUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.beginUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource.
  syntax:
    content: public SyncPoller<PollResult<GenericResourceInner>,GenericResourceInner> beginUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to update.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to update.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  id: beginUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
  nameWithType: ResourcesClientImpl.beginUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource.
  syntax:
    content: public SyncPoller<PollResult<GenericResourceInner>,GenericResourceInner> beginUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to update.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to update.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.beginUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource.
  syntax:
    content: public PollerFlux<PollResult<GenericResourceInner>,GenericResourceInner> beginUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to update.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to update.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: beginUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.beginUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource by ID.
  syntax:
    content: public SyncPoller<PollResult<GenericResourceInner>,GenericResourceInner> beginUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  id: beginUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
  nameWithType: ResourcesClientImpl.beginUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource by ID.
  syntax:
    content: public SyncPoller<PollResult<GenericResourceInner>,GenericResourceInner> beginUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateByIdAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: beginUpdateByIdAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.beginUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateByIdAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource by ID.
  syntax:
    content: public PollerFlux<PollResult<GenericResourceInner>,GenericResourceInner> beginUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  id: beginValidateMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginValidateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  nameWithType: ResourcesClientImpl.beginValidateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResources*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginValidateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to validate for move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  id: beginValidateMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginValidateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  nameWithType: ResourcesClientImpl.beginValidateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResources*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginValidateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to validate for move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResourcesAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  id: beginValidateMoveResourcesAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: beginValidateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  nameWithType: ResourcesClientImpl.beginValidateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResourcesAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginValidateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to validate for move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistence(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: checkExistence(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: checkExistence(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  nameWithType: ResourcesClientImpl.checkExistence(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistence(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistence*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Checks whether a resource exists.
  syntax:
    content: public boolean checkExistence(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group containing the resource to check. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The resource provider of the resource to check.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to check whether it exists.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: boolean
      description: whether resource exists.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: checkExistenceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: checkExistenceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  nameWithType: ResourcesClientImpl.checkExistenceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Checks whether a resource exists.
  syntax:
    content: public Mono<Boolean> checkExistenceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group containing the resource to check. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The resource provider of the resource to check.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to check whether it exists.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Boolean>
      description: whether resource exists.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceById(java.lang.String,java.lang.String)
  id: checkExistenceById(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: checkExistenceById(String resourceId, String apiVersion)
  nameWithType: ResourcesClientImpl.checkExistenceById(String resourceId, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceById(String resourceId, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Checks by ID whether a resource exists.
  syntax:
    content: public boolean checkExistenceById(String resourceId, String apiVersion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: boolean
      description: whether resource exists.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdAsync(java.lang.String,java.lang.String)
  id: checkExistenceByIdAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: checkExistenceByIdAsync(String resourceId, String apiVersion)
  nameWithType: ResourcesClientImpl.checkExistenceByIdAsync(String resourceId, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdAsync(String resourceId, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Checks by ID whether a resource exists.
  syntax:
    content: public Mono<Boolean> checkExistenceByIdAsync(String resourceId, String apiVersion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Boolean>
      description: whether resource exists.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: checkExistenceByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: checkExistenceByIdWithResponse(String resourceId, String apiVersion, Context context)
  nameWithType: ResourcesClientImpl.checkExistenceByIdWithResponse(String resourceId, String apiVersion, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdWithResponse(String resourceId, String apiVersion, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdWithResponse*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Checks by ID whether a resource exists.
  syntax:
    content: public Response<Boolean> checkExistenceByIdWithResponse(String resourceId, String apiVersion, Context context)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Boolean>
      description: the response.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdWithResponseAsync(java.lang.String,java.lang.String)
  id: checkExistenceByIdWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: checkExistenceByIdWithResponseAsync(String resourceId, String apiVersion)
  nameWithType: ResourcesClientImpl.checkExistenceByIdWithResponseAsync(String resourceId, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdWithResponseAsync(String resourceId, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Checks by ID whether a resource exists.
  syntax:
    content: public Mono<Response<Boolean>> checkExistenceByIdWithResponseAsync(String resourceId, String apiVersion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Boolean>>
      description: whether resource exists.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: checkExistenceWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: checkExistenceWithResponse(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
  nameWithType: ResourcesClientImpl.checkExistenceWithResponse(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceWithResponse(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceWithResponse*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Checks whether a resource exists.
  syntax:
    content: public Response<Boolean> checkExistenceWithResponse(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group containing the resource to check. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The resource provider of the resource to check.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to check whether it exists.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Boolean>
      description: the response.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: checkExistenceWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: checkExistenceWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  nameWithType: ResourcesClientImpl.checkExistenceWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Checks whether a resource exists.
  syntax:
    content: public Mono<Response<Boolean>> checkExistenceWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group containing the resource to check. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The resource provider of the resource to check.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to check whether it exists.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Boolean>>
      description: whether resource exists.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: createOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.createOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Creates a resource.
  syntax:
    content: public GenericResourceInner createOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to create.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to create.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
  nameWithType: ResourcesClientImpl.createOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Creates a resource.
  syntax:
    content: public GenericResourceInner createOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to create.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to create.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.createOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Creates a resource.
  syntax:
    content: public Mono<GenericResourceInner> createOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to create.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to create.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: createOrUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: createOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.createOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Create a resource by ID.
  syntax:
    content: public GenericResourceInner createOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  id: createOrUpdateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: createOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
  nameWithType: ResourcesClientImpl.createOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Create a resource by ID.
  syntax:
    content: public GenericResourceInner createOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateByIdAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: createOrUpdateByIdAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: createOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.createOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateByIdAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Create a resource by ID.
  syntax:
    content: public Mono<GenericResourceInner> createOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateByIdWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: createOrUpdateByIdWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: createOrUpdateByIdWithResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.createOrUpdateByIdWithResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateByIdWithResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateByIdWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Create a resource by ID.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateByIdWithResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Creates a resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to create.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to create.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  nameWithType: ResourcesClientImpl.delete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.delete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource.
  syntax:
    content: public void delete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource to delete. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to delete.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
  nameWithType: ResourcesClientImpl.delete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.delete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource.
  syntax:
    content: public void delete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource to delete. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to delete.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  nameWithType: ResourcesClientImpl.deleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource to delete. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to delete.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteById(java.lang.String,java.lang.String)
  id: deleteById(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: deleteById(String resourceId, String apiVersion)
  nameWithType: ResourcesClientImpl.deleteById(String resourceId, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteById(String resourceId, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource by ID.
  syntax:
    content: public void deleteById(String resourceId, String apiVersion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteById(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteById(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: deleteById(String resourceId, String apiVersion, Context context)
  nameWithType: ResourcesClientImpl.deleteById(String resourceId, String apiVersion, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteById(String resourceId, String apiVersion, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource by ID.
  syntax:
    content: public void deleteById(String resourceId, String apiVersion, Context context)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteByIdAsync(java.lang.String,java.lang.String)
  id: deleteByIdAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: deleteByIdAsync(String resourceId, String apiVersion)
  nameWithType: ResourcesClientImpl.deleteByIdAsync(String resourceId, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteByIdAsync(String resourceId, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteByIdAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource by ID.
  syntax:
    content: public Mono<Void> deleteByIdAsync(String resourceId, String apiVersion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteByIdWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteByIdWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: deleteByIdWithResponseAsync(String resourceId, String apiVersion)
  nameWithType: ResourcesClientImpl.deleteByIdWithResponseAsync(String resourceId, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteByIdWithResponseAsync(String resourceId, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteByIdWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource by ID.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteByIdWithResponseAsync(String resourceId, String apiVersion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  nameWithType: ResourcesClientImpl.deleteWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Deletes a resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource to delete. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to delete.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: get(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  nameWithType: ResourcesClientImpl.get(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.get(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.get*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Gets a resource.
  syntax:
    content: public GenericResourceInner get(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group containing the resource to get. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to get.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: a resource.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: getAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  nameWithType: ResourcesClientImpl.getAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Gets a resource.
  syntax:
    content: public Mono<GenericResourceInner> getAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group containing the resource to get. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to get.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: a resource.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getById(java.lang.String,java.lang.String)
  id: getById(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: getById(String resourceId, String apiVersion)
  nameWithType: ResourcesClientImpl.getById(String resourceId, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getById(String resourceId, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Gets a resource by ID.
  syntax:
    content: public GenericResourceInner getById(String resourceId, String apiVersion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: a resource by ID.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdAsync(java.lang.String,java.lang.String)
  id: getByIdAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: getByIdAsync(String resourceId, String apiVersion)
  nameWithType: ResourcesClientImpl.getByIdAsync(String resourceId, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdAsync(String resourceId, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Gets a resource by ID.
  syntax:
    content: public Mono<GenericResourceInner> getByIdAsync(String resourceId, String apiVersion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: a resource by ID.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: getByIdWithResponse(String resourceId, String apiVersion, Context context)
  nameWithType: ResourcesClientImpl.getByIdWithResponse(String resourceId, String apiVersion, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdWithResponse(String resourceId, String apiVersion, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdWithResponse*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Gets a resource by ID.
  syntax:
    content: public Response<GenericResourceInner> getByIdWithResponse(String resourceId, String apiVersion, Context context)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: a resource by ID.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdWithResponseAsync(java.lang.String,java.lang.String)
  id: getByIdWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: getByIdWithResponseAsync(String resourceId, String apiVersion)
  nameWithType: ResourcesClientImpl.getByIdWithResponseAsync(String resourceId, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdWithResponseAsync(String resourceId, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Gets a resource by ID.
  syntax:
    content: public Mono<Response<GenericResourceInner>> getByIdWithResponseAsync(String resourceId, String apiVersion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>>
      description: a resource by ID.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
  nameWithType: ResourcesClientImpl.getWithResponse(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getWithResponse(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Gets a resource.
  syntax:
    content: public Response<GenericResourceInner> getWithResponse(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group containing the resource to get. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to get.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: a resource.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  nameWithType: ResourcesClientImpl.getWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Gets a resource.
  syntax:
    content: public Mono<Response<GenericResourceInner>> getWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group containing the resource to get. The name is case
             insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to get.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>>
      description: a resource.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: list()
  nameWithType: ResourcesClientImpl.list()
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.list()
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Get all the resources in a subscription.
  syntax:
    content: public PagedIterable<GenericResourceExpandedInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
      description: all the resources in a subscription.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.list(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: list(String filter, String expand, Integer top, Context context)
  nameWithType: ResourcesClientImpl.list(String filter, String expand, Integer top, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.list(String filter, String expand, Integer top, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Get all the resources in a subscription.
  syntax:
    content: public PagedIterable<GenericResourceExpandedInner> list(String filter, String expand, Integer top, Context context)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals)
             or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan,
             plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For
             example, to filter by a resource type, use: $filter=resourceType eq
             'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the
             filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example,
             to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo',
             name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or
             operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name
             and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value,
             the tags for each resource are not returned in the results.&lt;br&gt;&lt;br&gt;You can use some properties
             together when filtering. The combinations you can use are: substringof and/or resourceType, plan and
             plan/publisher and plan/name, identity and identity/principalId.
    - id: expand
      type: java.lang.String
      description: >-
        Comma-separated list of additional properties to be included in the response. Valid values include
             `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`.
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed, returns all resource groups.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
      description: all the resources in a subscription.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: listAsync()
  nameWithType: ResourcesClientImpl.listAsync()
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listAsync()
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Get all the resources in a subscription.
  syntax:
    content: public PagedFlux<GenericResourceExpandedInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
      description: all the resources in a subscription.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listAsync(java.lang.String,java.lang.String,java.lang.Integer)
  id: listAsync(java.lang.String,java.lang.String,java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: listAsync(String filter, String expand, Integer top)
  nameWithType: ResourcesClientImpl.listAsync(String filter, String expand, Integer top)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listAsync(String filter, String expand, Integer top)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Get all the resources in a subscription.
  syntax:
    content: public PagedFlux<GenericResourceExpandedInner> listAsync(String filter, String expand, Integer top)
    parameters:
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals)
             or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan,
             plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For
             example, to filter by a resource type, use: $filter=resourceType eq
             'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the
             filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example,
             to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo',
             name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or
             operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name
             and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value,
             the tags for each resource are not returned in the results.&lt;br&gt;&lt;br&gt;You can use some properties
             together when filtering. The combinations you can use are: substringof and/or resourceType, plan and
             plan/publisher and plan/name, identity and identity/principalId.
    - id: expand
      type: java.lang.String
      description: >-
        Comma-separated list of additional properties to be included in the response. Valid values include
             `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`.
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed, returns all resource groups.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
      description: all the resources in a subscription.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: ResourcesClientImpl.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Get all the resources for a resource group.
  syntax:
    content: public PagedIterable<GenericResourceExpandedInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The resource group with the resources to get.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
      description: all the resources for a resource group.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroup(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, String filter, String expand, Integer top, Context context)
  nameWithType: ResourcesClientImpl.listByResourceGroup(String resourceGroupName, String filter, String expand, Integer top, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroup(String resourceGroupName, String filter, String expand, Integer top, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Get all the resources for a resource group.
  syntax:
    content: public PagedIterable<GenericResourceExpandedInner> listByResourceGroup(String resourceGroupName, String filter, String expand, Integer top, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The resource group with the resources to get.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals)
             or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan,
             plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For
             example, to filter by a resource type, use: $filter=resourceType eq
             'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the
             filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example,
             to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo',
             name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or
             operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name
             and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value,
             the tags for each resource are not returned in the results.&lt;br&gt;&lt;br&gt;You can use some properties
             together when filtering. The combinations you can use are: substringof and/or resourceType, plan and
             plan/publisher and plan/name, identity and identity/principalId.
    - id: expand
      type: java.lang.String
      description: >-
        Comma-separated list of additional properties to be included in the response. Valid values include
             `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`.
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed, returns all resources.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
      description: all the resources for a resource group.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: ResourcesClientImpl.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Get all the resources for a resource group.
  syntax:
    content: public PagedFlux<GenericResourceExpandedInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The resource group with the resources to get.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
      description: all the resources for a resource group.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)
  id: listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName, String filter, String expand, Integer top)
  nameWithType: ResourcesClientImpl.listByResourceGroupAsync(String resourceGroupName, String filter, String expand, Integer top)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroupAsync(String resourceGroupName, String filter, String expand, Integer top)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Get all the resources for a resource group.
  syntax:
    content: public PagedFlux<GenericResourceExpandedInner> listByResourceGroupAsync(String resourceGroupName, String filter, String expand, Integer top)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The resource group with the resources to get.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals)
             or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan,
             plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For
             example, to filter by a resource type, use: $filter=resourceType eq
             'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the
             filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example,
             to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo',
             name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or
             operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name
             and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value,
             the tags for each resource are not returned in the results.&lt;br&gt;&lt;br&gt;You can use some properties
             together when filtering. The combinations you can use are: substringof and/or resourceType, plan and
             plan/publisher and plan/name, identity and identity/principalId.
    - id: expand
      type: java.lang.String
      description: >-
        Comma-separated list of additional properties to be included in the response. Valid values include
             `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`.
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed, returns all resources.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
      description: all the resources for a resource group.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  id: moveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: moveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  nameWithType: ResourcesClientImpl.moveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResources*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes.
  syntax:
    content: public void moveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  id: moveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: moveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  nameWithType: ResourcesClientImpl.moveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResources*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes.
  syntax:
    content: public void moveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResourcesAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  id: moveResourcesAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: moveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  nameWithType: ResourcesClientImpl.moveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResourcesAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes.
  syntax:
    content: public Mono<Void> moveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResourcesWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  id: moveResourcesWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: moveResourcesWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  nameWithType: ResourcesClientImpl.moveResourcesWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResourcesWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResourcesWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> moveResourcesWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.update(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.update(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource.
  syntax:
    content: public GenericResourceInner update(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to update.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to update.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
  nameWithType: ResourcesClientImpl.update(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.update(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource.
  syntax:
    content: public GenericResourceInner update(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to update.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to update.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: updateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: updateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.updateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource.
  syntax:
    content: public Mono<GenericResourceInner> updateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to update.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to update.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: updateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: updateById(String resourceId, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.updateById(String resourceId, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateById(String resourceId, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource by ID.
  syntax:
    content: public GenericResourceInner updateById(String resourceId, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  id: updateById(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: updateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
  nameWithType: ResourcesClientImpl.updateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateById*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource by ID.
  syntax:
    content: public GenericResourceInner updateById(String resourceId, String apiVersion, GenericResourceInner parameters, Context context)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateByIdAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: updateByIdAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: updateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.updateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateByIdAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource by ID.
  syntax:
    content: public Mono<GenericResourceInner> updateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateByIdWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: updateByIdWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: updateByIdWithResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.updateByIdWithResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateByIdWithResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateByIdWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource by ID.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateByIdWithResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: >-
        The fully qualified ID of the resource, including the resource name and resource type. Use the
             format,
             /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  nameWithType: ResourcesClientImpl.updateWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: Updates a resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group for the resource. The name is case insensitive.
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: parentResourcePath
      type: java.lang.String
      description: The parent resource identity.
    - id: resourceType
      type: java.lang.String
      description: The resource type of the resource to update.
    - id: resourceName
      type: java.lang.String
      description: The name of the resource to update.
    - id: apiVersion
      type: java.lang.String
      description: The API version to use for the operation.
    - id: parameters
      type: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
      description: Resource information.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: resource information.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  id: validateMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: validateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  nameWithType: ResourcesClientImpl.validateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResources*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation.
  syntax:
    content: public void validateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to validate for move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  id: validateMoveResources(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: validateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  nameWithType: ResourcesClientImpl.validateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResources*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation.
  syntax:
    content: public void validateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to validate for move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResourcesAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  id: validateMoveResourcesAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: validateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  nameWithType: ResourcesClientImpl.validateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResourcesAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation.
  syntax:
    content: public Mono<Void> validateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to validate for move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResourcesWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  id: validateMoveResourcesWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl
  langs:
  - java
  name: validateMoveResourcesWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  nameWithType: ResourcesClientImpl.validateMoveResourcesWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResourcesWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  overload: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResourcesWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.implementation
  summary: This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> validateMoveResourcesWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
    parameters:
    - id: sourceResourceGroupName
      type: java.lang.String
      description: The name of the resource group containing the resources to validate for move.
    - id: parameters
      type: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
      description: Parameters of move resources.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
references:
- uid: com.azure.resourcemanager.resources.implementation.ResourceManagementClientImpl
  name: ResourceManagementClientImpl
  nameWithType: ResourceManagementClientImpl
  fullName: com.azure.resourcemanager.resources.implementation.ResourceManagementClientImpl
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.ResourcesClientImpl*
  name: ResourcesClientImpl
  nameWithType: ResourcesClientImpl.ResourcesClientImpl
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.ResourcesClientImpl
  package: com.azure.resourcemanager.resources.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner
    name: GenericResourceExpandedInner
    fullName: com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: ResourcesClientImpl.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroupAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner
    name: GenericResourceExpandedInner
    fullName: com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: ResourcesClientImpl.listByResourceGroup
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listByResourceGroup
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
  name: ResourcesMoveInfo
  nameWithType: ResourcesMoveInfo
  fullName: com.azure.resourcemanager.resources.models.ResourcesMoveInfo
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResourcesWithResponseAsync*
  name: moveResourcesWithResponseAsync
  nameWithType: ResourcesClientImpl.moveResourcesWithResponseAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResourcesWithResponseAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResourcesAsync*
  name: beginMoveResourcesAsync
  nameWithType: ResourcesClientImpl.beginMoveResourcesAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResourcesAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResources*
  name: beginMoveResources
  nameWithType: ResourcesClientImpl.beginMoveResources
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginMoveResources
  package: com.azure.resourcemanager.resources.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResourcesAsync*
  name: moveResourcesAsync
  nameWithType: ResourcesClientImpl.moveResourcesAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResourcesAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResources*
  name: moveResources
  nameWithType: ResourcesClientImpl.moveResources
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.moveResources
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResourcesWithResponseAsync*
  name: validateMoveResourcesWithResponseAsync
  nameWithType: ResourcesClientImpl.validateMoveResourcesWithResponseAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResourcesWithResponseAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResourcesAsync*
  name: beginValidateMoveResourcesAsync
  nameWithType: ResourcesClientImpl.beginValidateMoveResourcesAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResourcesAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResources*
  name: beginValidateMoveResources
  nameWithType: ResourcesClientImpl.beginValidateMoveResources
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginValidateMoveResources
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResourcesAsync*
  name: validateMoveResourcesAsync
  nameWithType: ResourcesClientImpl.validateMoveResourcesAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResourcesAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResources*
  name: validateMoveResources
  nameWithType: ResourcesClientImpl.validateMoveResources
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.validateMoveResources
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listAsync*
  name: listAsync
  nameWithType: ResourcesClientImpl.listAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.listAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.list*
  name: list
  nameWithType: ResourcesClientImpl.list
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.list
  package: com.azure.resourcemanager.resources.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Boolean>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceWithResponseAsync*
  name: checkExistenceWithResponseAsync
  nameWithType: ResourcesClientImpl.checkExistenceWithResponseAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceWithResponseAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: reactor.core.publisher.Mono<java.lang.Boolean>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceAsync*
  name: checkExistenceAsync
  nameWithType: ResourcesClientImpl.checkExistenceAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistence*
  name: checkExistence
  nameWithType: ResourcesClientImpl.checkExistence
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistence
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.core.http.rest.Response<java.lang.Boolean>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceWithResponse*
  name: checkExistenceWithResponse
  nameWithType: ResourcesClientImpl.checkExistenceWithResponse
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceWithResponse
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: ResourcesClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteAsync*
  name: beginDeleteAsync
  nameWithType: ResourcesClientImpl.beginDeleteAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDelete*
  name: beginDelete
  nameWithType: ResourcesClientImpl.beginDelete
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDelete
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: ResourcesClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.delete*
  name: delete
  nameWithType: ResourcesClientImpl.delete
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.delete
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
  name: GenericResourceInner
  nameWithType: GenericResourceInner
  fullName: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: ResourcesClientImpl.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
    name: GenericResourceInner
    fullName: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
    name: GenericResourceInner
    fullName: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateAsync*
  name: beginCreateOrUpdateAsync
  nameWithType: ResourcesClientImpl.beginCreateOrUpdateAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
    name: GenericResourceInner
    fullName: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
    name: GenericResourceInner
    fullName: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: ResourcesClientImpl.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdate
  package: com.azure.resourcemanager.resources.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
    name: GenericResourceInner
    fullName: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: ResourcesClientImpl.createOrUpdateAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdate*
  name: createOrUpdate
  nameWithType: ResourcesClientImpl.createOrUpdate
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdate
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: ResourcesClientImpl.updateWithResponseAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateWithResponseAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateAsync*
  name: beginUpdateAsync
  nameWithType: ResourcesClientImpl.beginUpdateAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdate*
  name: beginUpdate
  nameWithType: ResourcesClientImpl.beginUpdate
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdate
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateAsync*
  name: updateAsync
  nameWithType: ResourcesClientImpl.updateAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.update*
  name: update
  nameWithType: ResourcesClientImpl.update
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.update
  package: com.azure.resourcemanager.resources.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
    name: GenericResourceInner
    fullName: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: ResourcesClientImpl.getWithResponseAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getWithResponseAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getAsync*
  name: getAsync
  nameWithType: ResourcesClientImpl.getAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.get*
  name: get
  nameWithType: ResourcesClientImpl.get
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.get
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
    name: GenericResourceInner
    fullName: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getWithResponse*
  name: getWithResponse
  nameWithType: ResourcesClientImpl.getWithResponse
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getWithResponse
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdWithResponseAsync*
  name: checkExistenceByIdWithResponseAsync
  nameWithType: ResourcesClientImpl.checkExistenceByIdWithResponseAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdWithResponseAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdAsync*
  name: checkExistenceByIdAsync
  nameWithType: ResourcesClientImpl.checkExistenceByIdAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceById*
  name: checkExistenceById
  nameWithType: ResourcesClientImpl.checkExistenceById
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceById
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdWithResponse*
  name: checkExistenceByIdWithResponse
  nameWithType: ResourcesClientImpl.checkExistenceByIdWithResponse
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.checkExistenceByIdWithResponse
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteByIdWithResponseAsync*
  name: deleteByIdWithResponseAsync
  nameWithType: ResourcesClientImpl.deleteByIdWithResponseAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteByIdWithResponseAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteByIdAsync*
  name: beginDeleteByIdAsync
  nameWithType: ResourcesClientImpl.beginDeleteByIdAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteByIdAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteById*
  name: beginDeleteById
  nameWithType: ResourcesClientImpl.beginDeleteById
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginDeleteById
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteByIdAsync*
  name: deleteByIdAsync
  nameWithType: ResourcesClientImpl.deleteByIdAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteByIdAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteById*
  name: deleteById
  nameWithType: ResourcesClientImpl.deleteById
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.deleteById
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateByIdWithResponseAsync*
  name: createOrUpdateByIdWithResponseAsync
  nameWithType: ResourcesClientImpl.createOrUpdateByIdWithResponseAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateByIdWithResponseAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateByIdAsync*
  name: beginCreateOrUpdateByIdAsync
  nameWithType: ResourcesClientImpl.beginCreateOrUpdateByIdAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateByIdAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateById*
  name: beginCreateOrUpdateById
  nameWithType: ResourcesClientImpl.beginCreateOrUpdateById
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginCreateOrUpdateById
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateByIdAsync*
  name: createOrUpdateByIdAsync
  nameWithType: ResourcesClientImpl.createOrUpdateByIdAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateByIdAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateById*
  name: createOrUpdateById
  nameWithType: ResourcesClientImpl.createOrUpdateById
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.createOrUpdateById
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateByIdWithResponseAsync*
  name: updateByIdWithResponseAsync
  nameWithType: ResourcesClientImpl.updateByIdWithResponseAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateByIdWithResponseAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateByIdAsync*
  name: beginUpdateByIdAsync
  nameWithType: ResourcesClientImpl.beginUpdateByIdAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateByIdAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateById*
  name: beginUpdateById
  nameWithType: ResourcesClientImpl.beginUpdateById
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.beginUpdateById
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateByIdAsync*
  name: updateByIdAsync
  nameWithType: ResourcesClientImpl.updateByIdAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateByIdAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateById*
  name: updateById
  nameWithType: ResourcesClientImpl.updateById
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.updateById
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdWithResponseAsync*
  name: getByIdWithResponseAsync
  nameWithType: ResourcesClientImpl.getByIdWithResponseAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdWithResponseAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdAsync*
  name: getByIdAsync
  nameWithType: ResourcesClientImpl.getByIdAsync
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdAsync
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getById*
  name: getById
  nameWithType: ResourcesClientImpl.getById
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getById
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdWithResponse*
  name: getByIdWithResponse
  nameWithType: ResourcesClientImpl.getByIdWithResponse
  fullName: com.azure.resourcemanager.resources.implementation.ResourcesClientImpl.getByIdWithResponse
  package: com.azure.resourcemanager.resources.implementation
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
  name: InnerSupportsListing<GenericResourceExpandedInner>
  nameWithType: InnerSupportsListing<GenericResourceExpandedInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner>
- uid: com.azure.resourcemanager.resources.fluent.ResourcesClient
  name: ResourcesClient
  nameWithType: ResourcesClient
  fullName: com.azure.resourcemanager.resources.fluent.ResourcesClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner
  name: GenericResourceExpandedInner
  nameWithType: GenericResourceExpandedInner
  fullName: com.azure.resourcemanager.resources.fluent.models.GenericResourceExpandedInner
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.lang.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
  name: GenericResourceInner>,GenericResourceInner
  nameWithType: GenericResourceInner>,GenericResourceInner
  fullName: com.azure.resourcemanager.resources.fluent.models.GenericResourceInner>,com.azure.resourcemanager.resources.fluent.models.GenericResourceInner
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
