### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.runtime
  id: runtime
  children:
  - microsoft.servicefabric.actors.runtime._actor_base
  - microsoft.servicefabric.actors.runtime._actor_call_type
  - microsoft.servicefabric.actors.runtime._actor_concurrency_settings
  - microsoft.servicefabric.actors.runtime._actor_event_proxy
  - microsoft.servicefabric.actors.runtime._actor_garbage_collection
  - microsoft.servicefabric.actors.runtime._actor_garbage_collection_settings
  - microsoft.servicefabric.actors.runtime._actor_method_context
  - microsoft.servicefabric.actors.runtime._actor_reentrancy_mode
  - microsoft.servicefabric.actors.runtime._actor_reminder
  - microsoft.servicefabric.actors.runtime._actor_reminder_collection
  - microsoft.servicefabric.actors.runtime._actor_reminder_settings
  - microsoft.servicefabric.actors.runtime._actor_reminder_state
  - microsoft.servicefabric.actors.runtime._actor_runtime
  - microsoft.servicefabric.actors.runtime._actor_service_attribute
  - microsoft.servicefabric.actors.runtime._actor_service_settings
  - microsoft.servicefabric.actors.runtime._actor_state_change
  - microsoft.servicefabric.actors.runtime._actor_state_manager
  - microsoft.servicefabric.actors.runtime._actor_state_provider
  - microsoft.servicefabric.actors.runtime._actor_timer
  - microsoft.servicefabric.actors.runtime._actor_type_extensions
  - microsoft.servicefabric.actors.runtime._actor_type_information
  - microsoft.servicefabric.actors.runtime._fabric_actor
  - microsoft.servicefabric.actors.runtime._fabric_actor_service
  - microsoft.servicefabric.actors.runtime._reentrancy_mode
  - microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  - microsoft.servicefabric.actors.runtime._remindable
  - microsoft.servicefabric.actors.runtime._state_change_kind
  - microsoft.servicefabric.actors.runtime._state_persistence
  - microsoft.servicefabric.actors.runtime._state_persistence_attribute
  - microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime.yml
  langs:
  - java
  name: microsoft.servicefabric.actors.runtime
  nameWithType: microsoft.servicefabric.actors.runtime
  fullName: microsoft.servicefabric.actors.runtime
  type: Namespace
  source:
    remote:
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorActivator.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorActivator.java
  syntax:
    content: package microsoft.servicefabric.actors.runtime
references:
- uid: microsoft.servicefabric.actors.runtime.internal
- uid: microsoft.servicefabric.actors.runtime._actor_base
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_base.yml
  name: ActorBase
  nameWithType: ActorBase
  fullName: microsoft.servicefabric.actors.runtime.ActorBase
  type: Class
  summary: >-
    <p>Represents base class for actors. <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.Actor</xref></p>

    <p>

      <b>Remarks:</b>This is a base type for actor, it provides the functionality that is common across actors implemented by actor deriving from <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.Actor</xref> The state is preserved across actor garbage collections and fail-overs. The storage and retrieval of the state is provided by the actor state provider <xref uid="microsoft.servicefabric.actors.runtime._actor_state_provider" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.runtime.ActorStateProvider</xref>. </p>
  syntax:
    content: public class ActorBase
- uid: microsoft.servicefabric.actors.runtime._actor_call_type
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_call_type.yml
  name: ActorCallType
  nameWithType: ActorCallType
  fullName: microsoft.servicefabric.actors.runtime.ActorCallType
  type: Enum
  summary: >-
    <p>Represents the call-type associated with the method invoked by actor runtime. </p>

    <p>

      <b>Remarks:</b>This is provided as part of <xref uid="microsoft.servicefabric.actors.runtime._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> which is passed as argument to <xref uid="microsoft.servicefabric.actors.runtime._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref> and <xref uid="microsoft.servicefabric.actors.runtime._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>. </p>
  syntax:
    content: public enum ActorCallType
- uid: microsoft.servicefabric.actors.runtime._actor_concurrency_settings
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_concurrency_settings.yml
  name: ActorConcurrencySettings
  nameWithType: ActorConcurrencySettings
  fullName: microsoft.servicefabric.actors.runtime.ActorConcurrencySettings
  type: Class
  summary: <p>The method calls on an actor dispatched via in turn with support for logical call context based reentrancy. This class provides the settings to configure the turn based concurrency lock for actors. </p>
  syntax:
    content: public class ActorConcurrencySettings
- uid: microsoft.servicefabric.actors.runtime._actor_event_proxy
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_event_proxy.yml
  name: ActorEventProxy
  nameWithType: ActorEventProxy
  fullName: microsoft.servicefabric.actors.runtime.ActorEventProxy
  type: Class
  summary: <p>Provides the base implementation for the proxy to invoke methods on actor event subscribers. </p>
  syntax:
    content: public class ActorEventProxy extends ProxyBase
- uid: microsoft.servicefabric.actors.runtime._actor_garbage_collection
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_garbage_collection.yml
  name: ActorGarbageCollection
  nameWithType: ActorGarbageCollection
  fullName: microsoft.servicefabric.actors.runtime.ActorGarbageCollection
  type: Interface
  summary: <p>Settings to configures Garbage Collection behavior of <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Service. </p>
  syntax:
    content: public interface ActorGarbageCollection
- uid: microsoft.servicefabric.actors.runtime._actor_garbage_collection_settings
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_garbage_collection_settings.yml
  name: ActorGarbageCollectionSettings
  nameWithType: ActorGarbageCollectionSettings
  fullName: microsoft.servicefabric.actors.runtime.ActorGarbageCollectionSettings
  type: Class
  summary: <p>Settings to configures Garbage Collection behavior of <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Service. </p>
  syntax:
    content: public class ActorGarbageCollectionSettings
- uid: microsoft.servicefabric.actors.runtime._actor_method_context
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_method_context.yml
  name: ActorMethodContext
  nameWithType: ActorMethodContext
  fullName: microsoft.servicefabric.actors.runtime.ActorMethodContext
  type: Class
  summary: <p>An <xref uid="microsoft.servicefabric.actors.runtime._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> contains information about the method that is invoked by actor runtime and is passed as an argument to <xref uid="microsoft.servicefabric.actors.runtime._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref> and <xref uid="microsoft.servicefabric.actors.runtime._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>. </p>
  syntax:
    content: public class ActorMethodContext
- uid: microsoft.servicefabric.actors.runtime._actor_reentrancy_mode
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_reentrancy_mode.yml
  name: ActorReentrancyMode
  nameWithType: ActorReentrancyMode
  fullName: microsoft.servicefabric.actors.runtime.ActorReentrancyMode
  type: Enum
  summary: <p>Specifies Reentrancy mode for actor method calls. </p>
  syntax:
    content: public enum ActorReentrancyMode
- uid: microsoft.servicefabric.actors.runtime._actor_reminder
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_reminder.yml
  name: ActorReminder
  nameWithType: ActorReminder
  fullName: microsoft.servicefabric.actors.runtime.ActorReminder
  type: Interface
  summary: <p>Encapsulates Reminder set on an <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref></p>
  syntax:
    content: public interface ActorReminder
- uid: microsoft.servicefabric.actors.runtime._actor_reminder_collection
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_reminder_collection.yml
  name: ActorReminderCollection
  nameWithType: ActorReminderCollection
  fullName: microsoft.servicefabric.actors.runtime.ActorReminderCollection
  type: Interface
  summary: <p>Captures <xref uid="microsoft.servicefabric.actors.runtime._actor_reminder_state" data-throw-if-not-resolved="false">ActorReminderState</xref> for Actors </p>
  syntax:
    content: public interface ActorReminderCollection
- uid: microsoft.servicefabric.actors.runtime._actor_reminder_settings
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_reminder_settings.yml
  name: ActorReminderSettings
  nameWithType: ActorReminderSettings
  fullName: microsoft.servicefabric.actors.runtime.ActorReminderSettings
  type: Class
  summary: <p>This class provides settings to configure the behavior of reminders. </p>
  syntax:
    content: public class ActorReminderSettings
- uid: microsoft.servicefabric.actors.runtime._actor_reminder_state
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_reminder_state.yml
  name: ActorReminderState
  nameWithType: ActorReminderState
  fullName: microsoft.servicefabric.actors.runtime.ActorReminderState
  type: Interface
  summary: <p>Represents internal state of <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Reminder </p>
  syntax:
    content: public interface ActorReminderState extends ActorReminder
- uid: microsoft.servicefabric.actors.runtime._actor_runtime
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_runtime.yml
  name: ActorRuntime
  nameWithType: ActorRuntime
  fullName: microsoft.servicefabric.actors.runtime.ActorRuntime
  type: Class
  summary: <p>Contains methods to register actor type with Service Fabric runtime. </p>
  syntax:
    content: public class ActorRuntime
- uid: microsoft.servicefabric.actors.runtime._actor_service_attribute
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_service_attribute.yml
  name: ActorServiceAttribute
  nameWithType: ActorServiceAttribute
  fullName: microsoft.servicefabric.actors.runtime.ActorServiceAttribute
  type: Interface
  summary: <p>This attributes allows configuring the properties of the actor service. The attribute is applied on the actor type. </p>
  syntax:
    content: public interface ActorServiceAttribute
- uid: microsoft.servicefabric.actors.runtime._actor_service_settings
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_service_settings.yml
  name: ActorServiceSettings
  nameWithType: ActorServiceSettings
  fullName: microsoft.servicefabric.actors.runtime.ActorServiceSettings
  type: Class
  summary: <p>Settings to configures behavior of <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Service. </p>
  syntax:
    content: public class ActorServiceSettings
- uid: microsoft.servicefabric.actors.runtime._actor_state_change
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_state_change.yml
  name: ActorStateChange
  nameWithType: ActorStateChange
  fullName: microsoft.servicefabric.actors.runtime.ActorStateChange
  type: Class
  summary: <p>Represents change to an actor state with a given state name. </p>
  syntax:
    content: public class ActorStateChange
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  name: ActorStateManager
  nameWithType: ActorStateManager
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager
  type: Interface
  summary: <p>Represents the interface that state manager for <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> implements. </p>
  syntax:
    content: public interface ActorStateManager
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  name: ActorStateProvider
  nameWithType: ActorStateProvider
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider
  type: Interface
  summary: <p>Represents the interface that an actor state provider needs to implement for actor runtime to communicate with it. </p>
  syntax:
    content: public interface ActorStateProvider extends StateProviderReplica
- uid: microsoft.servicefabric.actors.runtime._actor_timer
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_timer.yml
  name: ActorTimer
  nameWithType: ActorTimer
  fullName: microsoft.servicefabric.actors.runtime.ActorTimer
  type: Interface
  summary: <p>Represents Timer set on an <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref></p>
  syntax:
    content: public interface ActorTimer
- uid: microsoft.servicefabric.actors.runtime._actor_type_extensions
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_type_extensions.yml
  name: ActorTypeExtensions
  nameWithType: ActorTypeExtensions
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions
  type: Class
  summary: <p>Contains extension method for <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> types. </p>
  syntax:
    content: public class ActorTypeExtensions
- uid: microsoft.servicefabric.actors.runtime._actor_type_information
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation
  type: Class
  summary: <p>Contains information about the type implementing an actor. </p>
  syntax:
    content: public class ActorTypeInformation
- uid: microsoft.servicefabric.actors.runtime._fabric_actor
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._fabric_actor.yml
  name: FabricActor
  nameWithType: FabricActor
  fullName: microsoft.servicefabric.actors.runtime.FabricActor
  type: Class
  summary: >-
    <p>Represents a actor that can have multiple reliable 'named' states associated with it. <xref uid="microsoft.servicefabric.actors.runtime._actor_base" data-throw-if-not-resolved="false">ActorBase</xref></p>

    <p>

      <b>Remarks:</b>The state is preserved across actor garbage collections and fail-overs. The storage and retrieval of the state is provided by the actor state provider <xref uid="microsoft.servicefabric.actors.runtime._actor_state_provider" data-throw-if-not-resolved="false">ActorStateProvider</xref>. </p>
  syntax:
    content: public class FabricActor extends ActorBase
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  name: FabricActorService
  nameWithType: FabricActorService
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService
  type: Class
  summary: >-
    <p>Represents the base class for Microsoft Service Fabric based reliable actors service. </p>

    <p>

      <b>Remarks:</b>Derive from this class to implement your own custom actor service if you want to override any service level behavior for your actors. </p>
  syntax:
    content: public class FabricActorService extends StatefulServiceBase implements ActorService
- uid: microsoft.servicefabric.actors.runtime._reentrancy_mode
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._reentrancy_mode.yml
  name: ReentrancyMode
  nameWithType: ReentrancyMode
  fullName: microsoft.servicefabric.actors.runtime.ReentrancyMode
  type: Enum
  summary: <p>Specifies Reentrancy mode for actor method calls. </p>
  syntax:
    content: public enum ReentrancyMode
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: ReliableCollectionsActorStateProvider
  nameWithType: ReliableCollectionsActorStateProvider
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  type: Class
  syntax:
    content: public class ReliableCollectionsActorStateProvider implements ActorStateProvider
- uid: microsoft.servicefabric.actors.runtime._remindable
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._remindable.yml
  name: Remindable
  nameWithType: Remindable
  fullName: microsoft.servicefabric.actors.runtime.Remindable
  type: Interface
  summary: <p>Interface which actors that use reminders must implement. </p>
  syntax:
    content: public interface Remindable
- uid: microsoft.servicefabric.actors.runtime._state_change_kind
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._state_change_kind.yml
  name: StateChangeKind
  nameWithType: StateChangeKind
  fullName: microsoft.servicefabric.actors.runtime.StateChangeKind
  type: Enum
  summary: <p>Represents kind of state change for an actor state when <xref uid="" data-throw-if-not-resolved="false">ActorStateProvider#saveStateAsync(ActorId, java.util.List, CancellationToken)</xref> saves changes to a set of actor states. </p>
  syntax:
    content: public enum StateChangeKind
- uid: microsoft.servicefabric.actors.runtime._state_persistence
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._state_persistence.yml
  name: StatePersistence
  nameWithType: StatePersistence
  fullName: microsoft.servicefabric.actors.runtime.StatePersistence
  type: Enum
  summary: <p>Indicates how actor state is stored for an actor service. </p>
  syntax:
    content: public enum StatePersistence
- uid: microsoft.servicefabric.actors.runtime._state_persistence_attribute
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._state_persistence_attribute.yml
  name: StatePersistenceAttribute
  nameWithType: StatePersistenceAttribute
  fullName: microsoft.servicefabric.actors.runtime.StatePersistenceAttribute
  type: Interface
  summary: <p>Indicates whether actor state should be volatile (in-memory only), persisted, or not stored at all. The store type given to this attribute must match the type of state provider used in the actor service. </p>
  syntax:
    content: public interface StatePersistenceAttribute
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: VolatileActorStateProvider
  nameWithType: VolatileActorStateProvider
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider
  type: Class
  summary: >-
    <p>

      <xref uid="microsoft.servicefabric.actors.runtime._actor_state_provider" data-throw-if-not-resolved="false">ActorStateProvider</xref> implementation for Volatile persistence i.e <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> state is kept in-memory only. </p>
  syntax:
    content: public class VolatileActorStateProvider implements ActorStateProvider,StateProvider
