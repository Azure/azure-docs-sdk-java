### YamlMime:JavaPackage
uid: "com.azure.core.credential"
fullName: "com.azure.core.credential"
name: "com.azure.core.credential"
summary: "<p>\n Azure Core Credential library is designed to simplify the process of authenticating and authorizing access\n to Azure services from Java applications."
classes:
- "com.azure.core.credential.AccessToken"
- "com.azure.core.credential.AzureKeyCredential"
- "com.azure.core.credential.AzureNamedKey"
- "com.azure.core.credential.AzureNamedKeyCredential"
- "com.azure.core.credential.AzureSasCredential"
- "com.azure.core.credential.BasicAuthenticationCredential"
- "com.azure.core.credential.KeyCredential"
- "com.azure.core.credential.SimpleTokenCache"
- "com.azure.core.credential.TokenRequestContext"
interfaces:
- "com.azure.core.credential.TokenCredential"
desc: "<p>\n Azure Core Credential library is designed to simplify the process of authenticating and authorizing access\n to Azure services from Java applications. The SDK provides a set of classes and methods that handle authentication\n and credential management, allowing developers to securely connect to Azure services without dealing with the\n low-level details of authentication protocols.\n </p>\n\n <p>\n The library provides a unified way to obtain credentials for various Azure authentication\n mechanisms, such as Azure Active Directory (AAD), shared access signatures, and API keys. It abstracts the\n complexities of authentication and provides a consistent programming model for accessing Azure services.\n </p>\n\n <p>\n By using the library, users can easily integrate Azure authentication into their applications, retrieve the\n required credentials based on the desired authentication method, and use those credentials to authenticate\n requests to Azure services like Azure Storage, Azure Key Vault, Azure Service Bus, and more.\n </p>\n\n <p>\n The library offers several authentication types for authenticating with Azure services. Here are some of the\n authentication mechanisms supported by the library:\n </p>\n <ul>\n <li>Azure Active Directory (AAD) Authentication</li>\n <li>Shared Access Signature (SAS) Authentication</li>\n <li>Key Based Authentication</li>\n </ul>\n\n <h2>Azure Active Directory (AAD) Authentication</h2>\n\n <p>\n This type of authentication allows you to authenticate using Azure Active Directory and obtain a token to access\n Azure resources. You can authenticate with AAD using client secrets, client certificates, or user credentials.\n The library offers <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.credential.TokenCredential\"></xref> interface which is accepted as an argument\n on the client builders in Azure SDKs where AAD authentication is supported.\n You can refer to and include our\n <a href=\"https://learn.microsoft.com/java/api/overview/azure/identity-readme?view=azure-java-stable\">Azure\n Identity</a>\n library in your application as it offers pluggable implementation of\n <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.credential.TokenCredential\"></xref> for various AAD based authentication mechanism including\n service principal, managed identity, and more.\n </p>\n\n <br>\n\n <hr>\n\n <h2>Shared Access Signature (SAS) Authentication</h2>\n\n <p>\n Shared Access Signatures enable you to grant time-limited access to Azure resources. The library offers\n <xref uid=\"com.azure.core.credential.AzureSasCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.credential.AzureSasCredential\"></xref> which allows you to authenticate using a shared access\n signature, which is a string-based token that grants access to specific resources for a specific period.\n </p>\n\n <p>\n <strong>Sample: Azure SAS Authentication</strong>\n </p>\n\n <p>\n The following code sample demonstrates the creation of a <xref uid=\"com.azure.core.credential.AzureSasCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.credential.AzureSasCredential\"></xref>,\n using the sas token to configure it.\n </p>\n\n <!-- src_embed com.azure.core.credential.azureSasCredential -->\n <pre>\n AzureSasCredential azureSasCredential =\n     new AzureSasCredential&#40;&quot;AZURE-SERVICE-SAS-KEY&quot;&#41;;\n </pre>\n <!-- end com.azure.core.credential.azureSasCredential -->\n\n <br>\n\n <hr>\n\n <h2>Key Based Authentication</h2>\n\n <p>\n A key is a unique identifier or token that is associated with a specific user or application. It serves as a\n simple form of authentication to ensure that only authorized clients can access the protected resources or APIs.\n This authentication is commonly used for accessing certain services, such as Azure Cognitive Services, Azure Search,\n or Azure Management APIs. Each service may have its own specific way of using API keys, but the general concept\n remains the same. The library offers <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.credential.AzureKeyCredential\"></xref> and\n <xref uid=\"com.azure.core.credential.AzureNamedKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.credential.AzureNamedKeyCredential\"></xref> which can allows you to authenticate using a key.\n </p>\n\n\n <p>\n <strong>Sample: Azure Key Authentication</strong>\n </p>\n\n <p>\n The following code sample demonstrates the creation of a <xref uid=\"com.azure.core.credential.AzureKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.credential.AzureKeyCredential\"></xref>,\n using the Azure service key to configure it.\n </p>\n\n <!-- src_embed com.azure.core.credential.azureKeyCredential -->\n <pre>\n AzureKeyCredential azureKeyCredential = new AzureKeyCredential&#40;&quot;AZURE-SERVICE-KEY&quot;&#41;;\n </pre>\n <!-- end com.azure.core.credential.azureKeyCredential -->"
metadata: {}
package: "com.azure.core.credential"
artifact: com.azure:azure-core:1.49.0
