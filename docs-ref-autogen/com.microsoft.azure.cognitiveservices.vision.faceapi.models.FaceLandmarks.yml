### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyebrowLeftInner()
  name: eyebrowLeftInner()
  nameWithType: FaceLandmarks.eyebrowLeftInner()
  returns:
    description: <p>the eyebrowLeftInner value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the eyebrowLeftInner value.</p>

    <p></p>
  syntax: public Coordinate eyebrowLeftInner()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyebrowLeftInner()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyebrowLeftOuter()
  name: eyebrowLeftOuter()
  nameWithType: FaceLandmarks.eyebrowLeftOuter()
  returns:
    description: <p>the eyebrowLeftOuter value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the eyebrowLeftOuter value.</p>

    <p></p>
  syntax: public Coordinate eyebrowLeftOuter()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyebrowLeftOuter()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyebrowRightInner()
  name: eyebrowRightInner()
  nameWithType: FaceLandmarks.eyebrowRightInner()
  returns:
    description: <p>the eyebrowRightInner value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the eyebrowRightInner value.</p>

    <p></p>
  syntax: public Coordinate eyebrowRightInner()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyebrowRightInner()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyebrowRightOuter()
  name: eyebrowRightOuter()
  nameWithType: FaceLandmarks.eyebrowRightOuter()
  returns:
    description: <p>the eyebrowRightOuter value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the eyebrowRightOuter value.</p>

    <p></p>
  syntax: public Coordinate eyebrowRightOuter()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyebrowRightOuter()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeLeftBottom()
  name: eyeLeftBottom()
  nameWithType: FaceLandmarks.eyeLeftBottom()
  returns:
    description: <p>the eyeLeftBottom value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the eyeLeftBottom value.</p>

    <p></p>
  syntax: public Coordinate eyeLeftBottom()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeLeftBottom()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeLeftInner()
  name: eyeLeftInner()
  nameWithType: FaceLandmarks.eyeLeftInner()
  returns:
    description: <p>the eyeLeftInner value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the eyeLeftInner value.</p>

    <p></p>
  syntax: public Coordinate eyeLeftInner()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeLeftInner()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeLeftOuter()
  name: eyeLeftOuter()
  nameWithType: FaceLandmarks.eyeLeftOuter()
  returns:
    description: <p>the eyeLeftOuter value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the eyeLeftOuter value.</p>

    <p></p>
  syntax: public Coordinate eyeLeftOuter()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeLeftOuter()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeLeftTop()
  name: eyeLeftTop()
  nameWithType: FaceLandmarks.eyeLeftTop()
  returns:
    description: <p>the eyeLeftTop value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the eyeLeftTop value.</p>

    <p></p>
  syntax: public Coordinate eyeLeftTop()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeLeftTop()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeRightBottom()
  name: eyeRightBottom()
  nameWithType: FaceLandmarks.eyeRightBottom()
  returns:
    description: <p>the eyeRightBottom value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the eyeRightBottom value.</p>

    <p></p>
  syntax: public Coordinate eyeRightBottom()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeRightBottom()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeRightInner()
  name: eyeRightInner()
  nameWithType: FaceLandmarks.eyeRightInner()
  returns:
    description: <p>the eyeRightInner value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the eyeRightInner value.</p>

    <p></p>
  syntax: public Coordinate eyeRightInner()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeRightInner()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeRightOuter()
  name: eyeRightOuter()
  nameWithType: FaceLandmarks.eyeRightOuter()
  returns:
    description: <p>the eyeRightOuter value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the eyeRightOuter value.</p>

    <p></p>
  syntax: public Coordinate eyeRightOuter()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeRightOuter()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeRightTop()
  name: eyeRightTop()
  nameWithType: FaceLandmarks.eyeRightTop()
  returns:
    description: <p>the eyeRightTop value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the eyeRightTop value.</p>

    <p></p>
  syntax: public Coordinate eyeRightTop()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.eyeRightTop()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.mouthLeft()
  name: mouthLeft()
  nameWithType: FaceLandmarks.mouthLeft()
  returns:
    description: <p>the mouthLeft value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the mouthLeft value.</p>

    <p></p>
  syntax: public Coordinate mouthLeft()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.mouthLeft()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.mouthRight()
  name: mouthRight()
  nameWithType: FaceLandmarks.mouthRight()
  returns:
    description: <p>the mouthRight value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the mouthRight value.</p>

    <p></p>
  syntax: public Coordinate mouthRight()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.mouthRight()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseLeftAlarOutTip()
  name: noseLeftAlarOutTip()
  nameWithType: FaceLandmarks.noseLeftAlarOutTip()
  returns:
    description: <p>the noseLeftAlarOutTip value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the noseLeftAlarOutTip value.</p>

    <p></p>
  syntax: public Coordinate noseLeftAlarOutTip()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseLeftAlarOutTip()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseLeftAlarTop()
  name: noseLeftAlarTop()
  nameWithType: FaceLandmarks.noseLeftAlarTop()
  returns:
    description: <p>the noseLeftAlarTop value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the noseLeftAlarTop value.</p>

    <p></p>
  syntax: public Coordinate noseLeftAlarTop()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseLeftAlarTop()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseRightAlarOutTip()
  name: noseRightAlarOutTip()
  nameWithType: FaceLandmarks.noseRightAlarOutTip()
  returns:
    description: <p>the noseRightAlarOutTip value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the noseRightAlarOutTip value.</p>

    <p></p>
  syntax: public Coordinate noseRightAlarOutTip()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseRightAlarOutTip()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseRightAlarTop()
  name: noseRightAlarTop()
  nameWithType: FaceLandmarks.noseRightAlarTop()
  returns:
    description: <p>the noseRightAlarTop value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the noseRightAlarTop value.</p>

    <p></p>
  syntax: public Coordinate noseRightAlarTop()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseRightAlarTop()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseRootLeft()
  name: noseRootLeft()
  nameWithType: FaceLandmarks.noseRootLeft()
  returns:
    description: <p>the noseRootLeft value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the noseRootLeft value.</p>

    <p></p>
  syntax: public Coordinate noseRootLeft()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseRootLeft()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseRootRight()
  name: noseRootRight()
  nameWithType: FaceLandmarks.noseRootRight()
  returns:
    description: <p>the noseRootRight value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the noseRootRight value.</p>

    <p></p>
  syntax: public Coordinate noseRootRight()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseRootRight()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseTip()
  name: noseTip()
  nameWithType: FaceLandmarks.noseTip()
  returns:
    description: <p>the noseTip value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the noseTip value.</p>

    <p></p>
  syntax: public Coordinate noseTip()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.noseTip()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.pupilLeft()
  name: pupilLeft()
  nameWithType: FaceLandmarks.pupilLeft()
  returns:
    description: <p>the pupilLeft value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the pupilLeft value.</p>

    <p></p>
  syntax: public Coordinate pupilLeft()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.pupilLeft()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.pupilRight()
  name: pupilRight()
  nameWithType: FaceLandmarks.pupilRight()
  returns:
    description: <p>the pupilRight value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the pupilRight value.</p>

    <p></p>
  syntax: public Coordinate pupilRight()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.pupilRight()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.underLipBottom()
  name: underLipBottom()
  nameWithType: FaceLandmarks.underLipBottom()
  returns:
    description: <p>the underLipBottom value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the underLipBottom value.</p>

    <p></p>
  syntax: public Coordinate underLipBottom()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.underLipBottom()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.underLipTop()
  name: underLipTop()
  nameWithType: FaceLandmarks.underLipTop()
  returns:
    description: <p>the underLipTop value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the underLipTop value.</p>

    <p></p>
  syntax: public Coordinate underLipTop()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.underLipTop()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.upperLipBottom()
  name: upperLipBottom()
  nameWithType: FaceLandmarks.upperLipBottom()
  returns:
    description: <p>the upperLipBottom value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the upperLipBottom value.</p>

    <p></p>
  syntax: public Coordinate upperLipBottom()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.upperLipBottom()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.upperLipTop()
  name: upperLipTop()
  nameWithType: FaceLandmarks.upperLipTop()
  returns:
    description: <p>the upperLipTop value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the upperLipTop value.</p>

    <p></p>
  syntax: public Coordinate upperLipTop()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.upperLipTop()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyebrowLeftInner(Coordinate eyebrowLeftInner)
  name: withEyebrowLeftInner(Coordinate eyebrowLeftInner)
  nameWithType: FaceLandmarks.withEyebrowLeftInner(Coordinate eyebrowLeftInner)
  parameters:
  - description: <p>the eyebrowLeftInner value to set </p>
    name: eyebrowLeftInner
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the eyebrowLeftInner value.</p>

    <p></p>
  syntax: public FaceLandmarks withEyebrowLeftInner(Coordinate eyebrowLeftInner)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyebrowLeftInner(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyebrowLeftOuter(Coordinate eyebrowLeftOuter)
  name: withEyebrowLeftOuter(Coordinate eyebrowLeftOuter)
  nameWithType: FaceLandmarks.withEyebrowLeftOuter(Coordinate eyebrowLeftOuter)
  parameters:
  - description: <p>the eyebrowLeftOuter value to set </p>
    name: eyebrowLeftOuter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the eyebrowLeftOuter value.</p>

    <p></p>
  syntax: public FaceLandmarks withEyebrowLeftOuter(Coordinate eyebrowLeftOuter)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyebrowLeftOuter(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyebrowRightInner(Coordinate eyebrowRightInner)
  name: withEyebrowRightInner(Coordinate eyebrowRightInner)
  nameWithType: FaceLandmarks.withEyebrowRightInner(Coordinate eyebrowRightInner)
  parameters:
  - description: <p>the eyebrowRightInner value to set </p>
    name: eyebrowRightInner
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the eyebrowRightInner value.</p>

    <p></p>
  syntax: public FaceLandmarks withEyebrowRightInner(Coordinate eyebrowRightInner)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyebrowRightInner(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyebrowRightOuter(Coordinate eyebrowRightOuter)
  name: withEyebrowRightOuter(Coordinate eyebrowRightOuter)
  nameWithType: FaceLandmarks.withEyebrowRightOuter(Coordinate eyebrowRightOuter)
  parameters:
  - description: <p>the eyebrowRightOuter value to set </p>
    name: eyebrowRightOuter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the eyebrowRightOuter value.</p>

    <p></p>
  syntax: public FaceLandmarks withEyebrowRightOuter(Coordinate eyebrowRightOuter)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyebrowRightOuter(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeLeftBottom(Coordinate eyeLeftBottom)
  name: withEyeLeftBottom(Coordinate eyeLeftBottom)
  nameWithType: FaceLandmarks.withEyeLeftBottom(Coordinate eyeLeftBottom)
  parameters:
  - description: <p>the eyeLeftBottom value to set </p>
    name: eyeLeftBottom
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the eyeLeftBottom value.</p>

    <p></p>
  syntax: public FaceLandmarks withEyeLeftBottom(Coordinate eyeLeftBottom)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeLeftBottom(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeLeftInner(Coordinate eyeLeftInner)
  name: withEyeLeftInner(Coordinate eyeLeftInner)
  nameWithType: FaceLandmarks.withEyeLeftInner(Coordinate eyeLeftInner)
  parameters:
  - description: <p>the eyeLeftInner value to set </p>
    name: eyeLeftInner
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the eyeLeftInner value.</p>

    <p></p>
  syntax: public FaceLandmarks withEyeLeftInner(Coordinate eyeLeftInner)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeLeftInner(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeLeftOuter(Coordinate eyeLeftOuter)
  name: withEyeLeftOuter(Coordinate eyeLeftOuter)
  nameWithType: FaceLandmarks.withEyeLeftOuter(Coordinate eyeLeftOuter)
  parameters:
  - description: <p>the eyeLeftOuter value to set </p>
    name: eyeLeftOuter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the eyeLeftOuter value.</p>

    <p></p>
  syntax: public FaceLandmarks withEyeLeftOuter(Coordinate eyeLeftOuter)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeLeftOuter(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeLeftTop(Coordinate eyeLeftTop)
  name: withEyeLeftTop(Coordinate eyeLeftTop)
  nameWithType: FaceLandmarks.withEyeLeftTop(Coordinate eyeLeftTop)
  parameters:
  - description: <p>the eyeLeftTop value to set </p>
    name: eyeLeftTop
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the eyeLeftTop value.</p>

    <p></p>
  syntax: public FaceLandmarks withEyeLeftTop(Coordinate eyeLeftTop)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeLeftTop(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeRightBottom(Coordinate eyeRightBottom)
  name: withEyeRightBottom(Coordinate eyeRightBottom)
  nameWithType: FaceLandmarks.withEyeRightBottom(Coordinate eyeRightBottom)
  parameters:
  - description: <p>the eyeRightBottom value to set </p>
    name: eyeRightBottom
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the eyeRightBottom value.</p>

    <p></p>
  syntax: public FaceLandmarks withEyeRightBottom(Coordinate eyeRightBottom)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeRightBottom(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeRightInner(Coordinate eyeRightInner)
  name: withEyeRightInner(Coordinate eyeRightInner)
  nameWithType: FaceLandmarks.withEyeRightInner(Coordinate eyeRightInner)
  parameters:
  - description: <p>the eyeRightInner value to set </p>
    name: eyeRightInner
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the eyeRightInner value.</p>

    <p></p>
  syntax: public FaceLandmarks withEyeRightInner(Coordinate eyeRightInner)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeRightInner(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeRightOuter(Coordinate eyeRightOuter)
  name: withEyeRightOuter(Coordinate eyeRightOuter)
  nameWithType: FaceLandmarks.withEyeRightOuter(Coordinate eyeRightOuter)
  parameters:
  - description: <p>the eyeRightOuter value to set </p>
    name: eyeRightOuter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the eyeRightOuter value.</p>

    <p></p>
  syntax: public FaceLandmarks withEyeRightOuter(Coordinate eyeRightOuter)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeRightOuter(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeRightTop(Coordinate eyeRightTop)
  name: withEyeRightTop(Coordinate eyeRightTop)
  nameWithType: FaceLandmarks.withEyeRightTop(Coordinate eyeRightTop)
  parameters:
  - description: <p>the eyeRightTop value to set </p>
    name: eyeRightTop
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the eyeRightTop value.</p>

    <p></p>
  syntax: public FaceLandmarks withEyeRightTop(Coordinate eyeRightTop)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withEyeRightTop(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withMouthLeft(Coordinate mouthLeft)
  name: withMouthLeft(Coordinate mouthLeft)
  nameWithType: FaceLandmarks.withMouthLeft(Coordinate mouthLeft)
  parameters:
  - description: <p>the mouthLeft value to set </p>
    name: mouthLeft
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the mouthLeft value.</p>

    <p></p>
  syntax: public FaceLandmarks withMouthLeft(Coordinate mouthLeft)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withMouthLeft(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withMouthRight(Coordinate mouthRight)
  name: withMouthRight(Coordinate mouthRight)
  nameWithType: FaceLandmarks.withMouthRight(Coordinate mouthRight)
  parameters:
  - description: <p>the mouthRight value to set </p>
    name: mouthRight
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the mouthRight value.</p>

    <p></p>
  syntax: public FaceLandmarks withMouthRight(Coordinate mouthRight)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withMouthRight(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseLeftAlarOutTip(Coordinate noseLeftAlarOutTip)
  name: withNoseLeftAlarOutTip(Coordinate noseLeftAlarOutTip)
  nameWithType: FaceLandmarks.withNoseLeftAlarOutTip(Coordinate noseLeftAlarOutTip)
  parameters:
  - description: <p>the noseLeftAlarOutTip value to set </p>
    name: noseLeftAlarOutTip
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the noseLeftAlarOutTip value.</p>

    <p></p>
  syntax: public FaceLandmarks withNoseLeftAlarOutTip(Coordinate noseLeftAlarOutTip)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseLeftAlarOutTip(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseLeftAlarTop(Coordinate noseLeftAlarTop)
  name: withNoseLeftAlarTop(Coordinate noseLeftAlarTop)
  nameWithType: FaceLandmarks.withNoseLeftAlarTop(Coordinate noseLeftAlarTop)
  parameters:
  - description: <p>the noseLeftAlarTop value to set </p>
    name: noseLeftAlarTop
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the noseLeftAlarTop value.</p>

    <p></p>
  syntax: public FaceLandmarks withNoseLeftAlarTop(Coordinate noseLeftAlarTop)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseLeftAlarTop(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseRightAlarOutTip(Coordinate noseRightAlarOutTip)
  name: withNoseRightAlarOutTip(Coordinate noseRightAlarOutTip)
  nameWithType: FaceLandmarks.withNoseRightAlarOutTip(Coordinate noseRightAlarOutTip)
  parameters:
  - description: <p>the noseRightAlarOutTip value to set </p>
    name: noseRightAlarOutTip
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the noseRightAlarOutTip value.</p>

    <p></p>
  syntax: public FaceLandmarks withNoseRightAlarOutTip(Coordinate noseRightAlarOutTip)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseRightAlarOutTip(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseRightAlarTop(Coordinate noseRightAlarTop)
  name: withNoseRightAlarTop(Coordinate noseRightAlarTop)
  nameWithType: FaceLandmarks.withNoseRightAlarTop(Coordinate noseRightAlarTop)
  parameters:
  - description: <p>the noseRightAlarTop value to set </p>
    name: noseRightAlarTop
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the noseRightAlarTop value.</p>

    <p></p>
  syntax: public FaceLandmarks withNoseRightAlarTop(Coordinate noseRightAlarTop)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseRightAlarTop(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseRootLeft(Coordinate noseRootLeft)
  name: withNoseRootLeft(Coordinate noseRootLeft)
  nameWithType: FaceLandmarks.withNoseRootLeft(Coordinate noseRootLeft)
  parameters:
  - description: <p>the noseRootLeft value to set </p>
    name: noseRootLeft
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the noseRootLeft value.</p>

    <p></p>
  syntax: public FaceLandmarks withNoseRootLeft(Coordinate noseRootLeft)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseRootLeft(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseRootRight(Coordinate noseRootRight)
  name: withNoseRootRight(Coordinate noseRootRight)
  nameWithType: FaceLandmarks.withNoseRootRight(Coordinate noseRootRight)
  parameters:
  - description: <p>the noseRootRight value to set </p>
    name: noseRootRight
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the noseRootRight value.</p>

    <p></p>
  syntax: public FaceLandmarks withNoseRootRight(Coordinate noseRootRight)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseRootRight(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseTip(Coordinate noseTip)
  name: withNoseTip(Coordinate noseTip)
  nameWithType: FaceLandmarks.withNoseTip(Coordinate noseTip)
  parameters:
  - description: <p>the noseTip value to set </p>
    name: noseTip
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the noseTip value.</p>

    <p></p>
  syntax: public FaceLandmarks withNoseTip(Coordinate noseTip)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withNoseTip(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withPupilLeft(Coordinate pupilLeft)
  name: withPupilLeft(Coordinate pupilLeft)
  nameWithType: FaceLandmarks.withPupilLeft(Coordinate pupilLeft)
  parameters:
  - description: <p>the pupilLeft value to set </p>
    name: pupilLeft
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the pupilLeft value.</p>

    <p></p>
  syntax: public FaceLandmarks withPupilLeft(Coordinate pupilLeft)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withPupilLeft(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withPupilRight(Coordinate pupilRight)
  name: withPupilRight(Coordinate pupilRight)
  nameWithType: FaceLandmarks.withPupilRight(Coordinate pupilRight)
  parameters:
  - description: <p>the pupilRight value to set </p>
    name: pupilRight
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the pupilRight value.</p>

    <p></p>
  syntax: public FaceLandmarks withPupilRight(Coordinate pupilRight)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withPupilRight(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withUnderLipBottom(Coordinate underLipBottom)
  name: withUnderLipBottom(Coordinate underLipBottom)
  nameWithType: FaceLandmarks.withUnderLipBottom(Coordinate underLipBottom)
  parameters:
  - description: <p>the underLipBottom value to set </p>
    name: underLipBottom
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the underLipBottom value.</p>

    <p></p>
  syntax: public FaceLandmarks withUnderLipBottom(Coordinate underLipBottom)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withUnderLipBottom(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withUnderLipTop(Coordinate underLipTop)
  name: withUnderLipTop(Coordinate underLipTop)
  nameWithType: FaceLandmarks.withUnderLipTop(Coordinate underLipTop)
  parameters:
  - description: <p>the underLipTop value to set </p>
    name: underLipTop
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the underLipTop value.</p>

    <p></p>
  syntax: public FaceLandmarks withUnderLipTop(Coordinate underLipTop)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withUnderLipTop(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withUpperLipBottom(Coordinate upperLipBottom)
  name: withUpperLipBottom(Coordinate upperLipBottom)
  nameWithType: FaceLandmarks.withUpperLipBottom(Coordinate upperLipBottom)
  parameters:
  - description: <p>the upperLipBottom value to set </p>
    name: upperLipBottom
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the upperLipBottom value.</p>

    <p></p>
  syntax: public FaceLandmarks withUpperLipBottom(Coordinate upperLipBottom)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withUpperLipBottom(Coordinate)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withUpperLipTop(Coordinate upperLipTop)
  name: withUpperLipTop(Coordinate upperLipTop)
  nameWithType: FaceLandmarks.withUpperLipTop(Coordinate upperLipTop)
  parameters:
  - description: <p>the upperLipTop value to set </p>
    name: upperLipTop
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Coordinate&text=Coordinate" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the FaceLandmarks object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks&text=FaceLandmarks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the upperLipTop value.</p>

    <p></p>
  syntax: public FaceLandmarks withUpperLipTop(Coordinate upperLipTop)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks.withUpperLipTop(Coordinate)
nameWithType: FaceLandmarks
syntax: public class FaceLandmarks
type: class
uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks
fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceLandmarks
name: FaceLandmarks
package: com.microsoft.azure.cognitiveservices.vision.faceapi.models
summary: <p>A collection of 27-point face landmarks pointing to the important positions of face components. </p>
metadata: {}
