### YamlMime:JavaMember
nameWithType: Remindable.receiveReminderAsync
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.Remindable.receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
  name: receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
  nameWithType: Remindable.receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
  parameters:
  - description: <p>Name of the reminder. </p>
    name: reminderName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Context associated with this reminder was passed to Actors runtime when reminder was created. </p>
    name: context
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>Time when reminder with name reminderName is due </p>
    name: timeSpan
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  - description: <p>The time interval between triggering of reminder with name reminderName. </p>
    name: period
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task that represents the asynchronous operation performed by this callback. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture<?>&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reminder call back invoked when an actor reminder is triggered.</p>

    <p>

      <b>Remarks:</b> When a reminder is triggered, Actors runtime will invoke receiveReminderAsync method on the Actor. An actor can register multiple reminders and the ReceiveReminderAsync method is invoked any time any of those reminders is triggered. The actor can use the reminder name that is passed in to the receiveReminderAsync method to figure out which reminder was triggered. The Actors runtime saves the actor state when the receiveReminderAsync call completes. If an error occurs in saving the state, that actor object will be deactivated and a new instance will be activated, to specify that the state need not be saved upon completion of the reminder. </p>
  syntax: public CompletableFuture<?> receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
  uid: microsoft.servicefabric.actors.runtime.Remindable.receiveReminderAsync(String,byte [],Duration,Duration)
uid: microsoft.servicefabric.actors.runtime.Remindable.receiveReminderAsync*
fullName: microsoft.servicefabric.actors.runtime.Remindable.receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
name: receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
package: microsoft.servicefabric.actors.runtime
metadata: {}
