### YamlMime:JavaMember
uid: "com.azure.cosmos.CosmosAsyncConflict.read*"
fullName: "com.azure.cosmos.CosmosAsyncConflict.read"
name: "read"
nameWithType: "CosmosAsyncConflict.read"
members:
- uid: "com.azure.cosmos.CosmosAsyncConflict.read(com.azure.cosmos.models.CosmosConflictRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncConflict.read(CosmosConflictRequestOptions options)"
  name: "read(CosmosConflictRequestOptions options)"
  nameWithType: "CosmosAsyncConflict.read(CosmosConflictRequestOptions options)"
  summary: "Reads a conflict.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a single resource response with the read conflict. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  parameters:
  - description: "the request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosConflictRequestOptions?alt=com.azure.cosmos.models.CosmosConflictRequestOptions&text=CosmosConflictRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosConflictResponse> read(CosmosConflictRequestOptions options)"
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single resource response with the read\n conflict or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosConflictResponse?alt=com.azure.cosmos.models.CosmosConflictResponse&text=CosmosConflictResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.11.0
