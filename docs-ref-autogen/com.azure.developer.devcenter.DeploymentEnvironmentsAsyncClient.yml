### YamlMime:JavaType
uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient"
fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient"
name: "DeploymentEnvironmentsAsyncClient"
nameWithType: "DeploymentEnvironmentsAsyncClient"
summary: "Initializes a new instance of the asynchronous Deployment<wbr>Environments<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DeploymentEnvironmentsAsyncClient**"
methods:
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.beginCreateOrUpdateEnvironment(java.lang.String,java.lang.String,com.azure.developer.devcenter.models.DevCenterEnvironment)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.beginCreateOrUpdateEnvironment(String projectName, String userId, DevCenterEnvironment environment)"
  name: "beginCreateOrUpdateEnvironment(String projectName, String userId, DevCenterEnvironment environment)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.beginCreateOrUpdateEnvironment(String projectName, String userId, DevCenterEnvironment environment)"
  summary: "Creates or updates an environment."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Represents an environment."
    name: "environment"
    type: "<xref href=\"com.azure.developer.devcenter.models.DevCenterEnvironment?alt=com.azure.developer.devcenter.models.DevCenterEnvironment&text=DevCenterEnvironment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<DevCenterOperationDetails,DevCenterEnvironment> beginCreateOrUpdateEnvironment(String projectName, String userId, DevCenterEnvironment environment)"
  desc: "Creates or updates an environment."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of properties of an environment."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.devcenter.models.DevCenterOperationDetails?alt=com.azure.developer.devcenter.models.DevCenterOperationDetails&text=DevCenterOperationDetails\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.developer.devcenter.models.DevCenterEnvironment?alt=com.azure.developer.devcenter.models.DevCenterEnvironment&text=DevCenterEnvironment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.beginCreateOrUpdateEnvironment(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.beginCreateOrUpdateEnvironment(String projectName, String userId, String environmentName, BinaryData body, RequestOptions requestOptions)"
  name: "beginCreateOrUpdateEnvironment(String projectName, String userId, String environmentName, BinaryData body, RequestOptions requestOptions)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.beginCreateOrUpdateEnvironment(String projectName, String userId, String environmentName, BinaryData body, RequestOptions requestOptions)"
  summary: "Creates or updates an environment."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the environment."
    name: "environmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Represents an environment."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginCreateOrUpdateEnvironment(String projectName, String userId, String environmentName, BinaryData body, RequestOptions requestOptions)"
  desc: "Creates or updates an environment.\n\n**Request Body Schema**\n\n```java\n{\n     parameters (Optional): {\n         String: Object (Required)\n     }\n     name: String (Required)\n     environmentType: String (Required)\n     user: String (Optional)\n     provisioningState: String(Succeeded/Failed/Canceled/Creating/Accepted/Deleting/Updating/Preparing/Running/Syncing/MovingResources/TransientFailure/StorageProvisioningFailed) (Optional)\n     resourceGroupId: String (Optional)\n     catalogName: String (Required)\n     environmentDefinitionName: String (Required)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     parameters (Optional): {\n         String: Object (Required)\n     }\n     name: String (Required)\n     environmentType: String (Required)\n     user: String (Optional)\n     provisioningState: String(Succeeded/Failed/Canceled/Creating/Accepted/Deleting/Updating/Preparing/Running/Syncing/MovingResources/TransientFailure/StorageProvisioningFailed) (Optional)\n     resourceGroupId: String (Optional)\n     catalogName: String (Required)\n     environmentDefinitionName: String (Required)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of properties of an environment."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.beginDeleteEnvironment(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.beginDeleteEnvironment(String projectName, String userId, String environmentName)"
  name: "beginDeleteEnvironment(String projectName, String userId, String environmentName)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.beginDeleteEnvironment(String projectName, String userId, String environmentName)"
  summary: "Deletes an environment and all its associated resources."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the environment."
    name: "environmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PollerFlux<DevCenterOperationDetails,Void> beginDeleteEnvironment(String projectName, String userId, String environmentName)"
  desc: "Deletes an environment and all its associated resources."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of the current status of an async operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.devcenter.models.DevCenterOperationDetails?alt=com.azure.developer.devcenter.models.DevCenterOperationDetails&text=DevCenterOperationDetails\" data-throw-if-not-resolved=\"False\" />,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.beginDeleteEnvironment(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.beginDeleteEnvironment(String projectName, String userId, String environmentName, RequestOptions requestOptions)"
  name: "beginDeleteEnvironment(String projectName, String userId, String environmentName, RequestOptions requestOptions)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.beginDeleteEnvironment(String projectName, String userId, String environmentName, RequestOptions requestOptions)"
  summary: "Deletes an environment and all its associated resources."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the environment."
    name: "environmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,Void> beginDeleteEnvironment(String projectName, String userId, String environmentName, RequestOptions requestOptions)"
  desc: "Deletes an environment and all its associated resources.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     name: String (Required)\n     status: String(NotStarted/Running/Succeeded/Failed/Canceled) (Required)\n     resourceId: String (Optional)\n     startTime: OffsetDateTime (Optional)\n     endTime: OffsetDateTime (Optional)\n     percentComplete: Double (Optional)\n     properties: Object (Optional)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of the current status of an async operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.getCatalog(java.lang.String,java.lang.String)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.getCatalog(String projectName, String catalogName)"
  name: "getCatalog(String projectName, String catalogName)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.getCatalog(String projectName, String catalogName)"
  summary: "Gets the specified catalog within the project."
  parameters:
  - description: "Name of the project."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the catalog."
    name: "catalogName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<DevCenterCatalog> getCatalog(String projectName, String catalogName)"
  desc: "Gets the specified catalog within the project."
  returns:
    description: "the specified catalog within the project on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.developer.devcenter.models.DevCenterCatalog?alt=com.azure.developer.devcenter.models.DevCenterCatalog&text=DevCenterCatalog\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.getCatalogWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.getCatalogWithResponse(String projectName, String catalogName, RequestOptions requestOptions)"
  name: "getCatalogWithResponse(String projectName, String catalogName, RequestOptions requestOptions)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.getCatalogWithResponse(String projectName, String catalogName, RequestOptions requestOptions)"
  summary: "Gets the specified catalog within the project."
  parameters:
  - description: "Name of the project."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the catalog."
    name: "catalogName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getCatalogWithResponse(String projectName, String catalogName, RequestOptions requestOptions)"
  desc: "Gets the specified catalog within the project.\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n }\n```"
  returns:
    description: "the specified catalog within the project along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.getEnvironment(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.getEnvironment(String projectName, String userId, String environmentName)"
  name: "getEnvironment(String projectName, String userId, String environmentName)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.getEnvironment(String projectName, String userId, String environmentName)"
  summary: "Gets an environment."
  parameters:
  - description: "Name of the project."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Environment name."
    name: "environmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<DevCenterEnvironment> getEnvironment(String projectName, String userId, String environmentName)"
  desc: "Gets an environment."
  returns:
    description: "an environment on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.developer.devcenter.models.DevCenterEnvironment?alt=com.azure.developer.devcenter.models.DevCenterEnvironment&text=DevCenterEnvironment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.getEnvironmentDefinition(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.getEnvironmentDefinition(String projectName, String catalogName, String definitionName)"
  name: "getEnvironmentDefinition(String projectName, String catalogName, String definitionName)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.getEnvironmentDefinition(String projectName, String catalogName, String definitionName)"
  summary: "Get an environment definition from a catalog."
  parameters:
  - description: "Name of the project."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the catalog."
    name: "catalogName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the environment definition."
    name: "definitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<EnvironmentDefinition> getEnvironmentDefinition(String projectName, String catalogName, String definitionName)"
  desc: "Get an environment definition from a catalog."
  returns:
    description: "an environment definition from a catalog on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.developer.devcenter.models.EnvironmentDefinition?alt=com.azure.developer.devcenter.models.EnvironmentDefinition&text=EnvironmentDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.getEnvironmentDefinitionWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.getEnvironmentDefinitionWithResponse(String projectName, String catalogName, String definitionName, RequestOptions requestOptions)"
  name: "getEnvironmentDefinitionWithResponse(String projectName, String catalogName, String definitionName, RequestOptions requestOptions)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.getEnvironmentDefinitionWithResponse(String projectName, String catalogName, String definitionName, RequestOptions requestOptions)"
  summary: "Get an environment definition from a catalog."
  parameters:
  - description: "Name of the project."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the catalog."
    name: "catalogName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the environment definition."
    name: "definitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getEnvironmentDefinitionWithResponse(String projectName, String catalogName, String definitionName, RequestOptions requestOptions)"
  desc: "Get an environment definition from a catalog.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     name: String (Required)\n     catalogName: String (Required)\n     description: String (Optional)\n     parameters (Optional): [\n          (Optional){\n             id: String (Required)\n             name: String (Optional)\n             description: String (Optional)\n             default: String (Optional)\n             type: String(array/boolean/integer/number/object/string) (Required)\n             readOnly: Boolean (Optional)\n             required: boolean (Required)\n             allowed (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n     parametersSchema: String (Optional)\n     templatePath: String (Optional)\n }\n```"
  returns:
    description: "an environment definition from a catalog along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.getEnvironmentWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.getEnvironmentWithResponse(String projectName, String userId, String environmentName, RequestOptions requestOptions)"
  name: "getEnvironmentWithResponse(String projectName, String userId, String environmentName, RequestOptions requestOptions)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.getEnvironmentWithResponse(String projectName, String userId, String environmentName, RequestOptions requestOptions)"
  summary: "Gets an environment."
  parameters:
  - description: "Name of the project."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Environment name."
    name: "environmentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getEnvironmentWithResponse(String projectName, String userId, String environmentName, RequestOptions requestOptions)"
  desc: "Gets an environment.\n\n**Response Body Schema**\n\n```java\n{\n     parameters (Optional): {\n         String: Object (Required)\n     }\n     name: String (Required)\n     environmentType: String (Required)\n     user: String (Optional)\n     provisioningState: String(Succeeded/Failed/Canceled/Creating/Accepted/Deleting/Updating/Preparing/Running/Syncing/MovingResources/TransientFailure/StorageProvisioningFailed) (Optional)\n     resourceGroupId: String (Optional)\n     catalogName: String (Required)\n     environmentDefinitionName: String (Required)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n }\n```"
  returns:
    description: "an environment along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listAllEnvironments(java.lang.String)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listAllEnvironments(String projectName)"
  name: "listAllEnvironments(String projectName)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.listAllEnvironments(String projectName)"
  summary: "Lists the environments for a project."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<DevCenterEnvironment> listAllEnvironments(String projectName)"
  desc: "Lists the environments for a project."
  returns:
    description: "paged collection of Environment items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.devcenter.models.DevCenterEnvironment?alt=com.azure.developer.devcenter.models.DevCenterEnvironment&text=DevCenterEnvironment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listAllEnvironments(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listAllEnvironments(String projectName, RequestOptions requestOptions)"
  name: "listAllEnvironments(String projectName, RequestOptions requestOptions)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.listAllEnvironments(String projectName, RequestOptions requestOptions)"
  summary: "Lists the environments for a project."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listAllEnvironments(String projectName, RequestOptions requestOptions)"
  desc: "Lists the environments for a project.\n\n**Response Body Schema**\n\n```java\n{\n     parameters (Optional): {\n         String: Object (Required)\n     }\n     name: String (Required)\n     environmentType: String (Required)\n     user: String (Optional)\n     provisioningState: String(Succeeded/Failed/Canceled/Creating/Accepted/Deleting/Updating/Preparing/Running/Syncing/MovingResources/TransientFailure/StorageProvisioningFailed) (Optional)\n     resourceGroupId: String (Optional)\n     catalogName: String (Required)\n     environmentDefinitionName: String (Required)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n }\n```"
  returns:
    description: "paged collection of Environment items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listCatalogs(java.lang.String)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listCatalogs(String projectName)"
  name: "listCatalogs(String projectName)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.listCatalogs(String projectName)"
  summary: "Lists all of the catalogs available for a project."
  parameters:
  - description: "Name of the project."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<DevCenterCatalog> listCatalogs(String projectName)"
  desc: "Lists all of the catalogs available for a project."
  returns:
    description: "paged collection of Catalog items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.devcenter.models.DevCenterCatalog?alt=com.azure.developer.devcenter.models.DevCenterCatalog&text=DevCenterCatalog\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listCatalogs(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listCatalogs(String projectName, RequestOptions requestOptions)"
  name: "listCatalogs(String projectName, RequestOptions requestOptions)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.listCatalogs(String projectName, RequestOptions requestOptions)"
  summary: "Lists all of the catalogs available for a project."
  parameters:
  - description: "Name of the project."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listCatalogs(String projectName, RequestOptions requestOptions)"
  desc: "Lists all of the catalogs available for a project.\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n }\n```"
  returns:
    description: "paged collection of Catalog items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironmentDefinitions(java.lang.String)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironmentDefinitions(String projectName)"
  name: "listEnvironmentDefinitions(String projectName)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.listEnvironmentDefinitions(String projectName)"
  summary: "Lists all environment definitions available for a project."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<EnvironmentDefinition> listEnvironmentDefinitions(String projectName)"
  desc: "Lists all environment definitions available for a project."
  returns:
    description: "paged collection of EnvironmentDefinition items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.devcenter.models.EnvironmentDefinition?alt=com.azure.developer.devcenter.models.EnvironmentDefinition&text=EnvironmentDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironmentDefinitions(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironmentDefinitions(String projectName, RequestOptions requestOptions)"
  name: "listEnvironmentDefinitions(String projectName, RequestOptions requestOptions)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.listEnvironmentDefinitions(String projectName, RequestOptions requestOptions)"
  summary: "Lists all environment definitions available for a project."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listEnvironmentDefinitions(String projectName, RequestOptions requestOptions)"
  desc: "Lists all environment definitions available for a project.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     name: String (Required)\n     catalogName: String (Required)\n     description: String (Optional)\n     parameters (Optional): [\n          (Optional){\n             id: String (Required)\n             name: String (Optional)\n             description: String (Optional)\n             default: String (Optional)\n             type: String(array/boolean/integer/number/object/string) (Required)\n             readOnly: Boolean (Optional)\n             required: boolean (Required)\n             allowed (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n     parametersSchema: String (Optional)\n     templatePath: String (Optional)\n }\n```"
  returns:
    description: "paged collection of EnvironmentDefinition items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironmentDefinitionsByCatalog(java.lang.String,java.lang.String)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironmentDefinitionsByCatalog(String projectName, String catalogName)"
  name: "listEnvironmentDefinitionsByCatalog(String projectName, String catalogName)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.listEnvironmentDefinitionsByCatalog(String projectName, String catalogName)"
  summary: "Lists all environment definitions available within a catalog."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the catalog."
    name: "catalogName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<EnvironmentDefinition> listEnvironmentDefinitionsByCatalog(String projectName, String catalogName)"
  desc: "Lists all environment definitions available within a catalog."
  returns:
    description: "paged collection of EnvironmentDefinition items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.devcenter.models.EnvironmentDefinition?alt=com.azure.developer.devcenter.models.EnvironmentDefinition&text=EnvironmentDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironmentDefinitionsByCatalog(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironmentDefinitionsByCatalog(String projectName, String catalogName, RequestOptions requestOptions)"
  name: "listEnvironmentDefinitionsByCatalog(String projectName, String catalogName, RequestOptions requestOptions)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.listEnvironmentDefinitionsByCatalog(String projectName, String catalogName, RequestOptions requestOptions)"
  summary: "Lists all environment definitions available within a catalog."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the catalog."
    name: "catalogName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listEnvironmentDefinitionsByCatalog(String projectName, String catalogName, RequestOptions requestOptions)"
  desc: "Lists all environment definitions available within a catalog.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     name: String (Required)\n     catalogName: String (Required)\n     description: String (Optional)\n     parameters (Optional): [\n          (Optional){\n             id: String (Required)\n             name: String (Optional)\n             description: String (Optional)\n             default: String (Optional)\n             type: String(array/boolean/integer/number/object/string) (Required)\n             readOnly: Boolean (Optional)\n             required: boolean (Required)\n             allowed (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n     parametersSchema: String (Optional)\n     templatePath: String (Optional)\n }\n```"
  returns:
    description: "paged collection of EnvironmentDefinition items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironmentTypes(java.lang.String)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironmentTypes(String projectName)"
  name: "listEnvironmentTypes(String projectName)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.listEnvironmentTypes(String projectName)"
  summary: "Lists all environment types configured for a project."
  parameters:
  - description: "Name of the project."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<DevCenterEnvironmentType> listEnvironmentTypes(String projectName)"
  desc: "Lists all environment types configured for a project."
  returns:
    description: "paged collection of EnvironmentType items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.devcenter.models.DevCenterEnvironmentType?alt=com.azure.developer.devcenter.models.DevCenterEnvironmentType&text=DevCenterEnvironmentType\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironmentTypes(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironmentTypes(String projectName, RequestOptions requestOptions)"
  name: "listEnvironmentTypes(String projectName, RequestOptions requestOptions)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.listEnvironmentTypes(String projectName, RequestOptions requestOptions)"
  summary: "Lists all environment types configured for a project."
  parameters:
  - description: "Name of the project."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listEnvironmentTypes(String projectName, RequestOptions requestOptions)"
  desc: "Lists all environment types configured for a project.\n\n**Response Body Schema**\n\n```java\n{\n     name: String (Required)\n     deploymentTargetId: String (Required)\n     status: String(Enabled/Disabled) (Required)\n }\n```"
  returns:
    description: "paged collection of EnvironmentType items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironments(java.lang.String,java.lang.String)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironments(String projectName, String userId)"
  name: "listEnvironments(String projectName, String userId)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.listEnvironments(String projectName, String userId)"
  summary: "Lists the environments for a project and user."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<DevCenterEnvironment> listEnvironments(String projectName, String userId)"
  desc: "Lists the environments for a project and user."
  returns:
    description: "paged collection of Environment items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.devcenter.models.DevCenterEnvironment?alt=com.azure.developer.devcenter.models.DevCenterEnvironment&text=DevCenterEnvironment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironments(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.devcenter.DeploymentEnvironmentsAsyncClient.listEnvironments(String projectName, String userId, RequestOptions requestOptions)"
  name: "listEnvironments(String projectName, String userId, RequestOptions requestOptions)"
  nameWithType: "DeploymentEnvironmentsAsyncClient.listEnvironments(String projectName, String userId, RequestOptions requestOptions)"
  summary: "Lists the environments for a project and user."
  parameters:
  - description: "The DevCenter Project upon which to execute operations."
    name: "projectName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The AAD object id of the user. If value is 'me', the identity is taken from the authentication\n context."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listEnvironments(String projectName, String userId, RequestOptions requestOptions)"
  desc: "Lists the environments for a project and user.\n\n**Response Body Schema**\n\n```java\n{\n     parameters (Optional): {\n         String: Object (Required)\n     }\n     name: String (Required)\n     environmentType: String (Required)\n     user: String (Optional)\n     provisioningState: String(Succeeded/Failed/Canceled/Creating/Accepted/Deleting/Updating/Preparing/Running/Syncing/MovingResources/TransientFailure/StorageProvisioningFailed) (Optional)\n     resourceGroupId: String (Optional)\n     catalogName: String (Required)\n     environmentDefinitionName: String (Required)\n     error (Optional): {\n         code: String (Required)\n         message: String (Required)\n         target: String (Optional)\n         details (Optional): [\n             (recursive schema, see above)\n         ]\n         innererror (Optional): {\n             code: String (Optional)\n             innererror (Optional): (recursive schema, see innererror above)\n         }\n     }\n }\n```"
  returns:
    description: "paged collection of Environment items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous DeploymentEnvironmentsClient type."
metadata: {}
package: "com.azure.developer.devcenter"
artifact: com.azure:azure-developer-devcenter:1.0.7
