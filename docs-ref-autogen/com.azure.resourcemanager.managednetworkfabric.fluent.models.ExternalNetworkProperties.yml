### YamlMime:JavaType
uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties"
fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties"
name: "ExternalNetworkProperties"
nameWithType: "ExternalNetworkProperties"
summary: "External Network Properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource?alt=com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource&text=AnnotationResource\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.annotation()?alt=com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.annotation&text=annotation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.fromJson(com.azure.json.JsonReader)?alt=com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.toJson(com.azure.json.JsonWriter)?alt=com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.validate()?alt=com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.withAnnotation(java.lang.String)?alt=com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.withAnnotation&text=withAnnotation\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ExternalNetworkProperties**</br> extends <xref href=\"com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource?alt=com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource&text=AnnotationResource\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.ExternalNetworkProperties()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.ExternalNetworkProperties()"
  name: "ExternalNetworkProperties()"
  nameWithType: "ExternalNetworkProperties.ExternalNetworkProperties()"
  summary: "Creates an instance of External<wbr>Network<wbr>Properties class."
  syntax: "public ExternalNetworkProperties()"
  desc: "Creates an instance of ExternalNetworkProperties class."
methods:
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.administrativeState()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.administrativeState()"
  name: "administrativeState()"
  nameWithType: "ExternalNetworkProperties.administrativeState()"
  summary: "Get the administrative<wbr>State property: Administrative state of the resource."
  syntax: "public AdministrativeState administrativeState()"
  desc: "Get the administrativeState property: Administrative state of the resource."
  returns:
    description: "the administrativeState value."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.AdministrativeState?alt=com.azure.resourcemanager.managednetworkfabric.models.AdministrativeState&text=AdministrativeState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.configurationState()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.configurationState()"
  name: "configurationState()"
  nameWithType: "ExternalNetworkProperties.configurationState()"
  summary: "Get the configuration<wbr>State property: Configuration state of the resource."
  syntax: "public ConfigurationState configurationState()"
  desc: "Get the configurationState property: Configuration state of the resource."
  returns:
    description: "the configurationState value."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.ConfigurationState?alt=com.azure.resourcemanager.managednetworkfabric.models.ConfigurationState&text=ConfigurationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.exportRoutePolicy()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.exportRoutePolicy()"
  name: "exportRoutePolicy()"
  nameWithType: "ExternalNetworkProperties.exportRoutePolicy()"
  summary: "Get the export<wbr>Route<wbr>Policy property: Export Route Policy either IPv4 or IPv6."
  syntax: "public ExportRoutePolicy exportRoutePolicy()"
  desc: "Get the exportRoutePolicy property: Export Route Policy either IPv4 or IPv6."
  returns:
    description: "the exportRoutePolicy value."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.ExportRoutePolicy?alt=com.azure.resourcemanager.managednetworkfabric.models.ExportRoutePolicy&text=ExportRoutePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.exportRoutePolicyId()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.exportRoutePolicyId()"
  name: "exportRoutePolicyId()"
  nameWithType: "ExternalNetworkProperties.exportRoutePolicyId()"
  summary: "Get the export<wbr>Route<wbr>Policy<wbr>Id property: ARM Resource ID of the Route<wbr>Policy."
  syntax: "public String exportRoutePolicyId()"
  desc: "Get the exportRoutePolicyId property: ARM Resource ID of the RoutePolicy. This is used for the backward compatibility."
  returns:
    description: "the exportRoutePolicyId value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "ExternalNetworkProperties.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of External<wbr>Network<wbr>Properties from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ExternalNetworkProperties fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of ExternalNetworkProperties from the JsonReader."
  returns:
    description: "An instance of ExternalNetworkProperties if the JsonReader was pointing to an instance of it, or null if\n it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties?alt=com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties&text=ExternalNetworkProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.importRoutePolicy()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.importRoutePolicy()"
  name: "importRoutePolicy()"
  nameWithType: "ExternalNetworkProperties.importRoutePolicy()"
  summary: "Get the import<wbr>Route<wbr>Policy property: Import Route Policy either IPv4 or IPv6."
  syntax: "public ImportRoutePolicy importRoutePolicy()"
  desc: "Get the importRoutePolicy property: Import Route Policy either IPv4 or IPv6."
  returns:
    description: "the importRoutePolicy value."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.ImportRoutePolicy?alt=com.azure.resourcemanager.managednetworkfabric.models.ImportRoutePolicy&text=ImportRoutePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.importRoutePolicyId()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.importRoutePolicyId()"
  name: "importRoutePolicyId()"
  nameWithType: "ExternalNetworkProperties.importRoutePolicyId()"
  summary: "Get the import<wbr>Route<wbr>Policy<wbr>Id property: ARM Resource ID of the Route<wbr>Policy."
  syntax: "public String importRoutePolicyId()"
  desc: "Get the importRoutePolicyId property: ARM Resource ID of the RoutePolicy. This is used for the backward compatibility."
  returns:
    description: "the importRoutePolicyId value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.networkToNetworkInterconnectId()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.networkToNetworkInterconnectId()"
  name: "networkToNetworkInterconnectId()"
  nameWithType: "ExternalNetworkProperties.networkToNetworkInterconnectId()"
  summary: "Get the network<wbr>ToNetwork<wbr>Interconnect<wbr>Id property: ARM Resource ID of the network<wbr>ToNetwork<wbr>Interconnect<wbr>Id of the External<wbr>Network resource."
  syntax: "public String networkToNetworkInterconnectId()"
  desc: "Get the networkToNetworkInterconnectId property: ARM Resource ID of the networkToNetworkInterconnectId of the ExternalNetwork resource."
  returns:
    description: "the networkToNetworkInterconnectId value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.optionAProperties()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.optionAProperties()"
  name: "optionAProperties()"
  nameWithType: "ExternalNetworkProperties.optionAProperties()"
  summary: "Get the option<wbr>AProperties property: option A properties object."
  syntax: "public ExternalNetworkPropertiesOptionAProperties optionAProperties()"
  desc: "Get the optionAProperties property: option A properties object."
  returns:
    description: "the optionAProperties value."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.ExternalNetworkPropertiesOptionAProperties?alt=com.azure.resourcemanager.managednetworkfabric.models.ExternalNetworkPropertiesOptionAProperties&text=ExternalNetworkPropertiesOptionAProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.optionBProperties()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.optionBProperties()"
  name: "optionBProperties()"
  nameWithType: "ExternalNetworkProperties.optionBProperties()"
  summary: "Get the option<wbr>BProperties property: option B properties object."
  syntax: "public L3OptionBProperties optionBProperties()"
  desc: "Get the optionBProperties property: option B properties object."
  returns:
    description: "the optionBProperties value."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.L3OptionBProperties?alt=com.azure.resourcemanager.managednetworkfabric.models.L3OptionBProperties&text=L3OptionBProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.peeringOption()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.peeringOption()"
  name: "peeringOption()"
  nameWithType: "ExternalNetworkProperties.peeringOption()"
  summary: "Get the peering<wbr>Option property: Peering option list."
  syntax: "public PeeringOption peeringOption()"
  desc: "Get the peeringOption property: Peering option list."
  returns:
    description: "the peeringOption value."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.PeeringOption?alt=com.azure.resourcemanager.managednetworkfabric.models.PeeringOption&text=PeeringOption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ExternalNetworkProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning state of the resource."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.ProvisioningState?alt=com.azure.resourcemanager.managednetworkfabric.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "ExternalNetworkProperties.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.validate()"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.validate()"
  name: "validate()"
  nameWithType: "ExternalNetworkProperties.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withAnnotation(java.lang.String)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withAnnotation(String annotation)"
  name: "withAnnotation(String annotation)"
  nameWithType: "ExternalNetworkProperties.withAnnotation(String annotation)"
  summary: "Set the annotation property: Switch configuration description."
  overridden: "com.azure.resourcemanager.managednetworkfabric.models.AnnotationResource.withAnnotation(java.lang.String)"
  parameters:
  - name: "annotation"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ExternalNetworkProperties withAnnotation(String annotation)"
  desc: "Set the annotation property: Switch configuration description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties?alt=com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties&text=ExternalNetworkProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withExportRoutePolicy(com.azure.resourcemanager.managednetworkfabric.models.ExportRoutePolicy)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withExportRoutePolicy(ExportRoutePolicy exportRoutePolicy)"
  name: "withExportRoutePolicy(ExportRoutePolicy exportRoutePolicy)"
  nameWithType: "ExternalNetworkProperties.withExportRoutePolicy(ExportRoutePolicy exportRoutePolicy)"
  summary: "Set the export<wbr>Route<wbr>Policy property: Export Route Policy either IPv4 or IPv6."
  parameters:
  - description: "the exportRoutePolicy value to set."
    name: "exportRoutePolicy"
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.ExportRoutePolicy?alt=com.azure.resourcemanager.managednetworkfabric.models.ExportRoutePolicy&text=ExportRoutePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExternalNetworkProperties withExportRoutePolicy(ExportRoutePolicy exportRoutePolicy)"
  desc: "Set the exportRoutePolicy property: Export Route Policy either IPv4 or IPv6."
  returns:
    description: "the ExternalNetworkProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties?alt=com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties&text=ExternalNetworkProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withExportRoutePolicyId(java.lang.String)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withExportRoutePolicyId(String exportRoutePolicyId)"
  name: "withExportRoutePolicyId(String exportRoutePolicyId)"
  nameWithType: "ExternalNetworkProperties.withExportRoutePolicyId(String exportRoutePolicyId)"
  summary: "Set the export<wbr>Route<wbr>Policy<wbr>Id property: ARM Resource ID of the Route<wbr>Policy."
  parameters:
  - description: "the exportRoutePolicyId value to set."
    name: "exportRoutePolicyId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ExternalNetworkProperties withExportRoutePolicyId(String exportRoutePolicyId)"
  desc: "Set the exportRoutePolicyId property: ARM Resource ID of the RoutePolicy. This is used for the backward compatibility."
  returns:
    description: "the ExternalNetworkProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties?alt=com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties&text=ExternalNetworkProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withImportRoutePolicy(com.azure.resourcemanager.managednetworkfabric.models.ImportRoutePolicy)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withImportRoutePolicy(ImportRoutePolicy importRoutePolicy)"
  name: "withImportRoutePolicy(ImportRoutePolicy importRoutePolicy)"
  nameWithType: "ExternalNetworkProperties.withImportRoutePolicy(ImportRoutePolicy importRoutePolicy)"
  summary: "Set the import<wbr>Route<wbr>Policy property: Import Route Policy either IPv4 or IPv6."
  parameters:
  - description: "the importRoutePolicy value to set."
    name: "importRoutePolicy"
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.ImportRoutePolicy?alt=com.azure.resourcemanager.managednetworkfabric.models.ImportRoutePolicy&text=ImportRoutePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExternalNetworkProperties withImportRoutePolicy(ImportRoutePolicy importRoutePolicy)"
  desc: "Set the importRoutePolicy property: Import Route Policy either IPv4 or IPv6."
  returns:
    description: "the ExternalNetworkProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties?alt=com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties&text=ExternalNetworkProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withImportRoutePolicyId(java.lang.String)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withImportRoutePolicyId(String importRoutePolicyId)"
  name: "withImportRoutePolicyId(String importRoutePolicyId)"
  nameWithType: "ExternalNetworkProperties.withImportRoutePolicyId(String importRoutePolicyId)"
  summary: "Set the import<wbr>Route<wbr>Policy<wbr>Id property: ARM Resource ID of the Route<wbr>Policy."
  parameters:
  - description: "the importRoutePolicyId value to set."
    name: "importRoutePolicyId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ExternalNetworkProperties withImportRoutePolicyId(String importRoutePolicyId)"
  desc: "Set the importRoutePolicyId property: ARM Resource ID of the RoutePolicy. This is used for the backward compatibility."
  returns:
    description: "the ExternalNetworkProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties?alt=com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties&text=ExternalNetworkProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withNetworkToNetworkInterconnectId(java.lang.String)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withNetworkToNetworkInterconnectId(String networkToNetworkInterconnectId)"
  name: "withNetworkToNetworkInterconnectId(String networkToNetworkInterconnectId)"
  nameWithType: "ExternalNetworkProperties.withNetworkToNetworkInterconnectId(String networkToNetworkInterconnectId)"
  summary: "Set the network<wbr>ToNetwork<wbr>Interconnect<wbr>Id property: ARM Resource ID of the network<wbr>ToNetwork<wbr>Interconnect<wbr>Id of the External<wbr>Network resource."
  parameters:
  - description: "the networkToNetworkInterconnectId value to set."
    name: "networkToNetworkInterconnectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ExternalNetworkProperties withNetworkToNetworkInterconnectId(String networkToNetworkInterconnectId)"
  desc: "Set the networkToNetworkInterconnectId property: ARM Resource ID of the networkToNetworkInterconnectId of the ExternalNetwork resource."
  returns:
    description: "the ExternalNetworkProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties?alt=com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties&text=ExternalNetworkProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withOptionAProperties(com.azure.resourcemanager.managednetworkfabric.models.ExternalNetworkPropertiesOptionAProperties)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withOptionAProperties(ExternalNetworkPropertiesOptionAProperties optionAProperties)"
  name: "withOptionAProperties(ExternalNetworkPropertiesOptionAProperties optionAProperties)"
  nameWithType: "ExternalNetworkProperties.withOptionAProperties(ExternalNetworkPropertiesOptionAProperties optionAProperties)"
  summary: "Set the option<wbr>AProperties property: option A properties object."
  parameters:
  - description: "the optionAProperties value to set."
    name: "optionAProperties"
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.ExternalNetworkPropertiesOptionAProperties?alt=com.azure.resourcemanager.managednetworkfabric.models.ExternalNetworkPropertiesOptionAProperties&text=ExternalNetworkPropertiesOptionAProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExternalNetworkProperties withOptionAProperties(ExternalNetworkPropertiesOptionAProperties optionAProperties)"
  desc: "Set the optionAProperties property: option A properties object."
  returns:
    description: "the ExternalNetworkProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties?alt=com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties&text=ExternalNetworkProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withOptionBProperties(com.azure.resourcemanager.managednetworkfabric.models.L3OptionBProperties)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withOptionBProperties(L3OptionBProperties optionBProperties)"
  name: "withOptionBProperties(L3OptionBProperties optionBProperties)"
  nameWithType: "ExternalNetworkProperties.withOptionBProperties(L3OptionBProperties optionBProperties)"
  summary: "Set the option<wbr>BProperties property: option B properties object."
  parameters:
  - description: "the optionBProperties value to set."
    name: "optionBProperties"
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.L3OptionBProperties?alt=com.azure.resourcemanager.managednetworkfabric.models.L3OptionBProperties&text=L3OptionBProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExternalNetworkProperties withOptionBProperties(L3OptionBProperties optionBProperties)"
  desc: "Set the optionBProperties property: option B properties object."
  returns:
    description: "the ExternalNetworkProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties?alt=com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties&text=ExternalNetworkProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withPeeringOption(com.azure.resourcemanager.managednetworkfabric.models.PeeringOption)"
  fullName: "com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties.withPeeringOption(PeeringOption peeringOption)"
  name: "withPeeringOption(PeeringOption peeringOption)"
  nameWithType: "ExternalNetworkProperties.withPeeringOption(PeeringOption peeringOption)"
  summary: "Set the peering<wbr>Option property: Peering option list."
  parameters:
  - description: "the peeringOption value to set."
    name: "peeringOption"
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.models.PeeringOption?alt=com.azure.resourcemanager.managednetworkfabric.models.PeeringOption&text=PeeringOption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExternalNetworkProperties withPeeringOption(PeeringOption peeringOption)"
  desc: "Set the peeringOption property: Peering option list."
  returns:
    description: "the ExternalNetworkProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties?alt=com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkProperties&text=ExternalNetworkProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "External Network Properties."
metadata: {}
package: "com.azure.resourcemanager.managednetworkfabric.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-managednetworkfabric:1.1.0
