### YamlMime:JavaMember
uid: "com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk*"
fullName: "com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk"
name: "withExistingDataDisk"
nameWithType: "VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk"
members:
- uid: "com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(com.azure.resourcemanager.compute.models.Disk)"
  fullName: "com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk disk)"
  name: "withExistingDataDisk(Disk disk)"
  nameWithType: "VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk disk)"
  summary: "Associates an existing source managed disk with the VM."
  parameters:
  - description: "a managed disk"
    name: "disk"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.Disk?alt=com.azure.resourcemanager.compute.models.Disk&text=Disk\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract VirtualMachine.Update withExistingDataDisk(Disk disk)"
  returns:
    description: "the next stage of the update"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.VirtualMachine.Update?alt=com.azure.resourcemanager.compute.models.VirtualMachine.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(com.azure.resourcemanager.compute.models.Disk,int,com.azure.resourcemanager.compute.models.CachingTypes)"
  fullName: "com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk disk, int lun, CachingTypes cachingType)"
  name: "withExistingDataDisk(Disk disk, int lun, CachingTypes cachingType)"
  nameWithType: "VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk disk, int lun, CachingTypes cachingType)"
  summary: "Specifies an existing source managed disk and settings."
  parameters:
  - description: "the managed disk"
    name: "disk"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.Disk?alt=com.azure.resourcemanager.compute.models.Disk&text=Disk\" data-throw-if-not-resolved=\"False\" />"
  - description: "the disk LUN"
    name: "lun"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "a caching type"
    name: "cachingType"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CachingTypes?alt=com.azure.resourcemanager.compute.models.CachingTypes&text=CachingTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract VirtualMachine.Update withExistingDataDisk(Disk disk, int lun, CachingTypes cachingType)"
  returns:
    description: "the next stage of the update"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.VirtualMachine.Update?alt=com.azure.resourcemanager.compute.models.VirtualMachine.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(com.azure.resourcemanager.compute.models.Disk,int,int,com.azure.resourcemanager.compute.models.CachingTypes)"
  fullName: "com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk disk, int newSizeInGB, int lun, CachingTypes cachingType)"
  name: "withExistingDataDisk(Disk disk, int newSizeInGB, int lun, CachingTypes cachingType)"
  nameWithType: "VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk disk, int newSizeInGB, int lun, CachingTypes cachingType)"
  summary: "Specifies an existing source managed disk and settings."
  parameters:
  - description: "a managed disk"
    name: "disk"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.Disk?alt=com.azure.resourcemanager.compute.models.Disk&text=Disk\" data-throw-if-not-resolved=\"False\" />"
  - description: "the disk resize size in GB"
    name: "newSizeInGB"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the disk LUN"
    name: "lun"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "a caching type"
    name: "cachingType"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CachingTypes?alt=com.azure.resourcemanager.compute.models.CachingTypes&text=CachingTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract VirtualMachine.Update withExistingDataDisk(Disk disk, int newSizeInGB, int lun, CachingTypes cachingType)"
  returns:
    description: "the next stage of the update"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.VirtualMachine.Update?alt=com.azure.resourcemanager.compute.models.VirtualMachine.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.1.0
