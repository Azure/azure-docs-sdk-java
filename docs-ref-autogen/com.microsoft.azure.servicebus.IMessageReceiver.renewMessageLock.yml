### YamlMime:JavaMember
uid: "com.microsoft.azure.servicebus.IMessageReceiver.renewMessageLock*"
fullName: "com.microsoft.azure.servicebus.IMessageReceiver.renewMessageLock"
name: "renewMessageLock"
nameWithType: "IMessageReceiver.renewMessageLock"
members:
- uid: "com.microsoft.azure.servicebus.IMessageReceiver.renewMessageLock(com.microsoft.azure.servicebus.IMessage)"
  fullName: "com.microsoft.azure.servicebus.IMessageReceiver.renewMessageLock(IMessage message)"
  name: "renewMessageLock(IMessage message)"
  nameWithType: "IMessageReceiver.renewMessageLock(IMessage message)"
  summary: "Renews the lock on the message specified by the lock token. The lock will be renewed based on the setting specified on the entity. When a message is received in <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode#PEEKLOCK\"></xref> mode, the message is locked on the server for this receiver instance for a duration as specified during the Queue/Subscription creation (LockDuration). If processing of the message requires longer than this duration, the lock needs to be renewed. For each renewal, the lock is reset to the entity's LockDuration value."
  parameters:
  - description: "The <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> to be renewed"
    name: "message"
    type: "<xref href=\"com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Instant renewMessageLock(IMessage message)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "The new locked until UTC time."
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessageReceiver.renewMessageLock(java.util.UUID)"
  fullName: "com.microsoft.azure.servicebus.IMessageReceiver.renewMessageLock(UUID lockToken)"
  name: "renewMessageLock(UUID lockToken)"
  nameWithType: "IMessageReceiver.renewMessageLock(UUID lockToken)"
  summary: "Renews the lock on the message specified by the lock token. The lock will be renewed based on the setting specified on the entity. When a message is received in <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMode#PEEKLOCK\"></xref> mode, the message is locked on the server for this receiver instance for a duration as specified during the Queue/Subscription creation (LockDuration). If processing of the message requires longer than this duration, the lock needs to be renewed. For each renewal, the lock is reset to the entity's LockDuration value. Note - calling this will not update <xref uid=\"com.microsoft.azure.servicebus.Message.getLockedUntilUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockedUntilUtc()\"></xref> and updated lockedUntilUtc must be tracked by the application."
  parameters:
  - description: "Message lock token <xref uid=\"com.microsoft.azure.servicebus.Message.getLockToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message#getLockToken()\"></xref>"
    name: "lockToken"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Instant renewMessageLock(UUID lockToken)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "The new locked until UTC time."
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.servicebus"
artifact: com.microsoft.azure:azure-servicebus:3.6.0
