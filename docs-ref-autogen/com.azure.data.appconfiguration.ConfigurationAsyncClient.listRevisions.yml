### YamlMime:JavaMember
uid: "com.azure.data.appconfiguration.ConfigurationAsyncClient.listRevisions*"
fullName: "com.azure.data.appconfiguration.ConfigurationAsyncClient.listRevisions"
name: "listRevisions"
nameWithType: "ConfigurationAsyncClient.listRevisions"
members:
- uid: "com.azure.data.appconfiguration.ConfigurationAsyncClient.listRevisions(com.azure.data.appconfiguration.models.SettingSelector)"
  fullName: "com.azure.data.appconfiguration.ConfigurationAsyncClient.listRevisions(SettingSelector selector)"
  name: "listRevisions(SettingSelector selector)"
  nameWithType: "ConfigurationAsyncClient.listRevisions(SettingSelector selector)"
  summary: "Lists chronological/historical representation of <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref> resource(s). Revisions are provided in descending order from their <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting.getLastModified()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"lastModified\"></xref> date. Revisions expire after a period of time, see [Pricing][] for more information. If `selector` is `null`, then all the <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSettings\"></xref> are fetched in their current state. Otherwise, the results returned match the parameters given in `selector`.\n\n**Code Samples**\n\nRetrieve all revisions of the setting that has the key \"prodDBConnection\".\n\n```java\nclient.listRevisions(new SettingSelector().setKeyFilter(\"prodDBConnection\"))\n     .subscriberContext(Context.of(key1, value1, key2, value2))\n     .subscribe(setting ->\n         System.out.printf(\"Key: %s, Value: %s\", setting.getKey(), setting.getValue()));\n```\n\n\n[Pricing]: https://azure.microsoft.com/en-us/pricing/details/app-configuration/"
  parameters:
  - description: "Optional. Used to filter configuration setting revisions from the service."
    name: "selector"
    type: "<xref href=\"com.azure.data.appconfiguration.models.SettingSelector?alt=com.azure.data.appconfiguration.models.SettingSelector&text=SettingSelector\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<ConfigurationSetting> listRevisions(SettingSelector selector)"
  returns:
    description: "Revisions of the ConfigurationSetting"
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.data.appconfiguration"
artifact: com.azure:azure-data-appconfiguration:1.1.8
