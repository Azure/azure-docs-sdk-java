### YamlMime:JavaMember
uid: "com.azure.resourcemanager.appplatform.implementation.SpringAppDeploymentImpl.withExistingSource*"
fullName: "com.azure.resourcemanager.appplatform.implementation.SpringAppDeploymentImpl.withExistingSource"
name: "withExistingSource"
nameWithType: "SpringAppDeploymentImpl.withExistingSource"
members:
- uid: "com.azure.resourcemanager.appplatform.implementation.SpringAppDeploymentImpl.withExistingSource(com.azure.resourcemanager.appplatform.models.UserSourceType,java.lang.String)"
  fullName: "com.azure.resourcemanager.appplatform.implementation.SpringAppDeploymentImpl.withExistingSource(UserSourceType type, String relativePath)"
  name: "withExistingSource(UserSourceType type, String relativePath)"
  nameWithType: "SpringAppDeploymentImpl.withExistingSource(UserSourceType type, String relativePath)"
  summary: "Specifies the a existing source in the cloud storage."
  parameters:
  - name: "type"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.UserSourceType?alt=com.azure.resourcemanager.appplatform.models.UserSourceType&text=UserSourceType\" data-throw-if-not-resolved=\"False\" />"
  - name: "relativePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SpringAppDeploymentImpl withExistingSource(UserSourceType type, String relativePath)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.appplatform.implementation.SpringAppDeploymentImpl?alt=com.azure.resourcemanager.appplatform.implementation.SpringAppDeploymentImpl&text=SpringAppDeploymentImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.appplatform.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.1.0
