### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.ElisionTokenFilter"
fullName: "com.azure.search.documents.indexes.models.ElisionTokenFilter"
name: "ElisionTokenFilter"
nameWithType: "ElisionTokenFilter"
summary: "Removes elisions."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.search.documents.indexes.models.TokenFilter.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ElisionTokenFilter extends TokenFilter"
constructors:
- uid: "com.azure.search.documents.indexes.models.ElisionTokenFilter.ElisionTokenFilter(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.ElisionTokenFilter.ElisionTokenFilter(String name)"
  name: "ElisionTokenFilter(String name)"
  nameWithType: "ElisionTokenFilter.ElisionTokenFilter(String name)"
  summary: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.TokenFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenFilter\"></xref>."
  parameters:
  - description: "The name of the token filter. It must only contain letters, digits,\n spaces, dashes or underscores, can only start and end with alphanumeric\n characters, and is limited to 128 characters."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ElisionTokenFilter(String name)"
  desc: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.TokenFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenFilter\"></xref>."
methods:
- uid: "com.azure.search.documents.indexes.models.ElisionTokenFilter.getArticles()"
  fullName: "com.azure.search.documents.indexes.models.ElisionTokenFilter.getArticles()"
  name: "getArticles()"
  nameWithType: "ElisionTokenFilter.getArticles()"
  summary: "Get the articles property: The set of articles to remove."
  syntax: "public List<String> getArticles()"
  desc: "Get the articles property: The set of articles to remove."
  returns:
    description: "the articles value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.ElisionTokenFilter.setArticles(java.lang.String...)"
  fullName: "com.azure.search.documents.indexes.models.ElisionTokenFilter.setArticles(String[] articles)"
  name: "setArticles(String[] articles)"
  nameWithType: "ElisionTokenFilter.setArticles(String[] articles)"
  summary: "Set the articles property: The set of articles to remove."
  parameters:
  - description: "the articles value to set."
    name: "articles"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public ElisionTokenFilter setArticles(String[] articles)"
  desc: "Set the articles property: The set of articles to remove."
  returns:
    description: "the ElisionTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.ElisionTokenFilter?alt=com.azure.search.documents.indexes.models.ElisionTokenFilter&text=ElisionTokenFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.ElisionTokenFilter.setArticles(java.util.List<java.lang.String>)"
  fullName: "com.azure.search.documents.indexes.models.ElisionTokenFilter.setArticles(List<String> articles)"
  name: "setArticles(List<String> articles)"
  nameWithType: "ElisionTokenFilter.setArticles(List<String> articles)"
  summary: "Set the articles property: The set of articles to remove."
  parameters:
  - description: "the articles value to set."
    name: "articles"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ElisionTokenFilter setArticles(List<String> articles)"
  desc: "Set the articles property: The set of articles to remove."
  returns:
    description: "the ElisionTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.ElisionTokenFilter?alt=com.azure.search.documents.indexes.models.ElisionTokenFilter&text=ElisionTokenFilter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Removes elisions. For example, \"l'avion\" (the plane) will be converted to \"avion\" (plane). This token filter is implemented using Apache Lucene."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.4.13
