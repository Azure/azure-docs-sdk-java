### YamlMime:JavaMember
uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getUnexpectedException*"
fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getUnexpectedException"
name: "getUnexpectedException"
nameWithType: "HttpResponseDecodeData.getUnexpectedException"
members:
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getUnexpectedException(int)"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData.getUnexpectedException(int code)"
  name: "getUnexpectedException(int code)"
  nameWithType: "HttpResponseDecodeData.getUnexpectedException(int code)"
  summary: "Get the <xref uid=\"com.azure.core.implementation.http.UnexpectedExceptionInformation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnexpectedExceptionInformation\"></xref> that will be used to generate a RestException if the HTTP response status code is not one of the expected status codes."
  parameters:
  - description: "Exception HTTP status code return from a REST API."
    name: "code"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default UnexpectedExceptionInformation getUnexpectedException(int code)"
  returns:
    description: "the UnexpectedExceptionInformation to generate an exception to throw or return."
    type: "<xref href=\"com.azure.core.implementation.http.UnexpectedExceptionInformation?alt=com.azure.core.implementation.http.UnexpectedExceptionInformation&text=UnexpectedExceptionInformation\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.implementation.serializer"
artifact: com.azure:azure-core:1.15.0
