### YamlMime:JavaType
uid: "com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient"
fullName: "com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient"
name: "TenantActivityLogsClient"
nameWithType: "TenantActivityLogsClient"
summary: "An instance of this class provides access to all the operations defined in Tenant<wbr>Activity<wbr>Logs<wbr>Client."
syntax: "public interface **TenantActivityLogsClient**"
methods:
- uid: "com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.list()"
  fullName: "com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.list()"
  name: "list()"
  nameWithType: "TenantActivityLogsClient.list()"
  summary: "Gets the Activity Logs for the Tenant.<br>Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).<br>One thing to point out here is that this API does \\*not\\* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<EventDataInner> list()"
  desc: "Gets the Activity Logs for the Tenant.<br>Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).<br>One thing to point out here is that this API does \\*not\\* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level."
  returns:
    description: "the Activity Logs for the Tenant.&lt;br&gt;Everything that is applicable to the API to get the Activity\n Logs for the subscription is applicable to this API (the parameters, $filter, etc.).&lt;br&gt;One thing to point\n out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only\n surfaces the logs that were generated at the tenant level as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.monitor.fluent.models.EventDataInner?alt=com.azure.resourcemanager.monitor.fluent.models.EventDataInner&text=EventDataInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.list(String filter, String select, Context context)"
  name: "list(String filter, String select, Context context)"
  nameWithType: "TenantActivityLogsClient.list(String filter, String select, Context context)"
  summary: "Gets the Activity Logs for the Tenant.<br>Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).<br>One thing to point out here is that this API does \\*not\\* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level."
  modifiers:
  - "abstract"
  parameters:
  - description: "Reduces the set of data collected. &lt;br&gt;The **$filter** is very restricted and allows only the\n following patterns.&lt;br&gt;- List events for a resource group: $filter=eventTimestamp ge '&lt;Start Time&gt;'\n and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and resourceGroupName eq\n '&lt;ResourceGroupName&gt;'.&lt;br&gt;- List events for resource: $filter=eventTimestamp ge '&lt;Start Time&gt;'\n and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and resourceUri eq\n '&lt;ResourceURI&gt;'.&lt;br&gt;- List events for a subscription: $filter=eventTimestamp ge '&lt;Start Time&gt;'\n and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation'.&lt;br&gt;- List events for a\n resource provider: $filter=eventTimestamp ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and\n eventChannels eq 'Admin, Operation' and resourceProvider eq '&lt;ResourceProviderName&gt;'.&lt;br&gt;- List\n events for a correlation Id: api-version=2014-04-01&amp;$filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z'\n and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and correlationId eq\n '&lt;CorrelationID&gt;'.&lt;br&gt;**NOTE**: No other syntax is allowed."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Used to fetch events with only the given properties.&lt;br&gt;The **$select** argument is a comma\n separated list of property names to be returned. Possible values are: *authorization*, *claims*, *correlationId*,\n *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*, *operationId*,\n *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*, *status*,\n *submissionTimestamp*, *subStatus*, *subscriptionId*."
    name: "select"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<EventDataInner> list(String filter, String select, Context context)"
  desc: "Gets the Activity Logs for the Tenant.<br>Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).<br>One thing to point out here is that this API does \\*not\\* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level."
  returns:
    description: "the Activity Logs for the Tenant.&lt;br&gt;Everything that is applicable to the API to get the Activity\n Logs for the subscription is applicable to this API (the parameters, $filter, etc.).&lt;br&gt;One thing to point\n out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only\n surfaces the logs that were generated at the tenant level as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.monitor.fluent.models.EventDataInner?alt=com.azure.resourcemanager.monitor.fluent.models.EventDataInner&text=EventDataInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.listAsync()"
  fullName: "com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.listAsync()"
  name: "listAsync()"
  nameWithType: "TenantActivityLogsClient.listAsync()"
  summary: "Gets the Activity Logs for the Tenant.<br>Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).<br>One thing to point out here is that this API does \\*not\\* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<EventDataInner> listAsync()"
  desc: "Gets the Activity Logs for the Tenant.<br>Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).<br>One thing to point out here is that this API does \\*not\\* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level."
  returns:
    description: "the Activity Logs for the Tenant.&lt;br&gt;Everything that is applicable to the API to get the Activity\n Logs for the subscription is applicable to this API (the parameters, $filter, etc.).&lt;br&gt;One thing to point\n out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only\n surfaces the logs that were generated at the tenant level as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.monitor.fluent.models.EventDataInner?alt=com.azure.resourcemanager.monitor.fluent.models.EventDataInner&text=EventDataInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.listAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.listAsync(String filter, String select)"
  name: "listAsync(String filter, String select)"
  nameWithType: "TenantActivityLogsClient.listAsync(String filter, String select)"
  summary: "Gets the Activity Logs for the Tenant.<br>Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).<br>One thing to point out here is that this API does \\*not\\* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level."
  modifiers:
  - "abstract"
  parameters:
  - description: "Reduces the set of data collected. &lt;br&gt;The **$filter** is very restricted and allows only the\n following patterns.&lt;br&gt;- List events for a resource group: $filter=eventTimestamp ge '&lt;Start Time&gt;'\n and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and resourceGroupName eq\n '&lt;ResourceGroupName&gt;'.&lt;br&gt;- List events for resource: $filter=eventTimestamp ge '&lt;Start Time&gt;'\n and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and resourceUri eq\n '&lt;ResourceURI&gt;'.&lt;br&gt;- List events for a subscription: $filter=eventTimestamp ge '&lt;Start Time&gt;'\n and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation'.&lt;br&gt;- List events for a\n resource provider: $filter=eventTimestamp ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and\n eventChannels eq 'Admin, Operation' and resourceProvider eq '&lt;ResourceProviderName&gt;'.&lt;br&gt;- List\n events for a correlation Id: api-version=2014-04-01&amp;$filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z'\n and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and correlationId eq\n '&lt;CorrelationID&gt;'.&lt;br&gt;**NOTE**: No other syntax is allowed."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Used to fetch events with only the given properties.&lt;br&gt;The **$select** argument is a comma\n separated list of property names to be returned. Possible values are: *authorization*, *claims*, *correlationId*,\n *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*, *operationId*,\n *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*, *status*,\n *submissionTimestamp*, *subStatus*, *subscriptionId*."
    name: "select"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<EventDataInner> listAsync(String filter, String select)"
  desc: "Gets the Activity Logs for the Tenant.<br>Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).<br>One thing to point out here is that this API does \\*not\\* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level."
  returns:
    description: "the Activity Logs for the Tenant.&lt;br&gt;Everything that is applicable to the API to get the Activity\n Logs for the subscription is applicable to this API (the parameters, $filter, etc.).&lt;br&gt;One thing to point\n out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only\n surfaces the logs that were generated at the tenant level as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.monitor.fluent.models.EventDataInner?alt=com.azure.resourcemanager.monitor.fluent.models.EventDataInner&text=EventDataInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in TenantActivityLogsClient."
metadata: {}
package: "com.azure.resourcemanager.monitor.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-monitor:2.37.0
