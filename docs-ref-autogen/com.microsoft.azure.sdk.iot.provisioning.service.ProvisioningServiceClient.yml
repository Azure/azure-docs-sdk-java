### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient"
fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient"
name: "ProvisioningServiceClient"
nameWithType: "ProvisioningServiceClient"
summary: "Device Provisioning Service Client."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ProvisioningServiceClient"
methods:
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(QuerySpecification querySpecification)"
  name: "createEnrollmentGroupQuery(QuerySpecification querySpecification)"
  nameWithType: "ProvisioningServiceClient.createEnrollmentGroupQuery(QuerySpecification querySpecification)"
  summary: "Factory to create an enrollment<wbr>Group query."
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref> with the SQL query. It cannot be <code>null</code>."
    name: "querySpecification"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification&text=QuerySpecification\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Query createEnrollmentGroupQuery(QuerySpecification querySpecification)"
  desc: "Factory to create an enrollmentGroup query.\n\nThis method will create a new enrollment group query on Device Provisioning Service and return it as a <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator.\n\nThe Device Provisioning Service expects a SQL query in the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref>, for instance `\"SELECT * FROM enrollments\"`."
  returns:
    description: "The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.Query?alt=com.microsoft.azure.sdk.iot.provisioning.service.Query&text=Query\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(QuerySpecification querySpecification, int pageSize)"
  name: "createEnrollmentGroupQuery(QuerySpecification querySpecification, int pageSize)"
  nameWithType: "ProvisioningServiceClient.createEnrollmentGroupQuery(QuerySpecification querySpecification, int pageSize)"
  summary: "Factory to create an enrollment<wbr>Group query."
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref> with the SQL query. It cannot be <code>null</code>."
    name: "querySpecification"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification&text=QuerySpecification\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Query createEnrollmentGroupQuery(QuerySpecification querySpecification, int pageSize)"
  desc: "Factory to create an enrollmentGroup query.\n\nThis method will create a new enrollment group query on Device Provisioning Service and return it as a <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator.\n\nThe Device Provisioning Service expects a SQL query in the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref>, for instance `\"SELECT * FROM enrollments\"`.\n\nFor each iteration, the Query will return a List of objects correspondent to the query result. The maximum number of items per iteration can be specified by the pageSize. It is optional, you can provide **0** for default pageSize or use the API <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createEnrollmentGroupQuery(QuerySpecification)\"></xref>."
  returns:
    description: "The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.Query?alt=com.microsoft.azure.sdk.iot.provisioning.service.Query&text=Query\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId)"
  name: "createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId)"
  nameWithType: "ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId)"
  summary: "Factory to create a registration status query."
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref> with the SQL query. It cannot be <code>null</code>."
    name: "querySpecification"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification&text=QuerySpecification\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty."
    name: "enrollmentGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Query createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId)"
  desc: "Factory to create a registration status query.\n\nThis method will create a new registration status query for a specific enrollment group on the Device Provisioning Service and return it as a <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator.\n\nThe Device Provisioning Service expects a SQL query in the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref>, for instance `\"SELECT * FROM enrollments\"`."
  returns:
    description: "The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.Query?alt=com.microsoft.azure.sdk.iot.provisioning.service.Query&text=Query\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)"
  name: "createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)"
  nameWithType: "ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)"
  summary: "Factory to create a registration status query."
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref> with the SQL query. It cannot be <code>null</code>."
    name: "querySpecification"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification&text=QuerySpecification\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty."
    name: "enrollmentGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Query createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)"
  desc: "Factory to create a registration status query.\n\nThis method will create a new registration status query for a specific enrollment group on the Device Provisioning Service and return it as a <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator.\n\nThe Device Provisioning Service expects a SQL query in the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref>, for instance `\"SELECT * FROM enrollments\"`.\n\nFor each iteration, the Query will return a List of objects correspondent to the query result. The maximum number of items per iteration can be specified by the pageSize. It is optional, you can provide **0** for default pageSize or use the API <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createIndividualEnrollmentQuery(QuerySpecification)\"></xref>."
  returns:
    description: "The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.Query?alt=com.microsoft.azure.sdk.iot.provisioning.service.Query&text=Query\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId)"
  name: "createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId)"
  nameWithType: "ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId)"
  deprecatedTag: "As of release 1.0.0, replaced by <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createEnrollmentGroupRegistrationStateQuery(QuerySpecification, String)\"></xref> ()\\}"
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref> with the SQL query. It cannot be <code>null</code>."
    name: "querySpecification"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification&text=QuerySpecification\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty."
    name: "enrollmentGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic Query createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId)"
  hasDeprecatedTag: true
  returns:
    description: "The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.Query?alt=com.microsoft.azure.sdk.iot.provisioning.service.Query&text=Query\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)"
  name: "createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)"
  nameWithType: "ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)"
  deprecatedTag: "As of release 1.0.0, replaced by <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createEnrollmentGroupRegistrationStateQuery(QuerySpecification, String, int)\"></xref> ()\\}"
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref> with the SQL query. It cannot be <code>null</code>."
    name: "querySpecification"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification&text=QuerySpecification\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty."
    name: "enrollmentGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic Query createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)"
  hasDeprecatedTag: true
  returns:
    description: "The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.Query?alt=com.microsoft.azure.sdk.iot.provisioning.service.Query&text=Query\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createFromConnectionString(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createFromConnectionString(String connectionString)"
  name: "createFromConnectionString(String connectionString)"
  nameWithType: "ProvisioningServiceClient.createFromConnectionString(String connectionString)"
  summary: "Create a new instance of the `DeviceProvisioningServiceClient` that exposes the API to the Device Provisioning Service."
  modifiers:
  - "static"
  parameters:
  - description: "the <code>String</code> that cares the connection string of the Device Provisioning Service."
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ProvisioningServiceClient createFromConnectionString(String connectionString)"
  desc: "Create a new instance of the `DeviceProvisioningServiceClient` that exposes the API to the Device Provisioning Service.\n\nThe Device Provisioning Service Client is created based on a **Provisioning Connection String**.\n\nOnce you create a Device Provisioning Service on Azure, you can get the connection string on the Azure portal."
  returns:
    description: "The <code>ProvisioningServiceClient</code> with the new instance of this object."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient?alt=com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient&text=ProvisioningServiceClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification querySpecification)"
  name: "createIndividualEnrollmentQuery(QuerySpecification querySpecification)"
  nameWithType: "ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification querySpecification)"
  summary: "Factory to create a individual<wbr>Enrollment query."
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref> with the SQL query. It cannot be <code>null</code>."
    name: "querySpecification"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification&text=QuerySpecification\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Query createIndividualEnrollmentQuery(QuerySpecification querySpecification)"
  desc: "Factory to create a individualEnrollment query.\n\nThis method will create a new individualEnrollment query for Device Provisioning Service and return it as a <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator.\n\nThe Device Provisioning Service expects a SQL query in the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref>, for instance `\"SELECT * FROM enrollments\"`."
  returns:
    description: "The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.Query?alt=com.microsoft.azure.sdk.iot.provisioning.service.Query&text=Query\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification querySpecification, int pageSize)"
  name: "createIndividualEnrollmentQuery(QuerySpecification querySpecification, int pageSize)"
  nameWithType: "ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification querySpecification, int pageSize)"
  summary: "Factory to create a individual<wbr>Enrollment query."
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref> with the SQL query. It cannot be <code>null</code>."
    name: "querySpecification"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification&text=QuerySpecification\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Query createIndividualEnrollmentQuery(QuerySpecification querySpecification, int pageSize)"
  desc: "Factory to create a individualEnrollment query.\n\nThis method will create a new individualEnrollment query for Device Provisioning Service and return it as a <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator.\n\nThe Device Provisioning Service expects a SQL query in the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref>, for instance `\"SELECT * FROM enrollments\"`.\n\nFor each iteration, the Query will return a List of objects correspondent to the query result. The maximum number of items per iteration can be specified by the pageSize. It is optional, you can provide **0** for default pageSize or use the API <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createIndividualEnrollmentQuery(QuerySpecification)\"></xref>."
  returns:
    description: "The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> iterator."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.Query?alt=com.microsoft.azure.sdk.iot.provisioning.service.Query&text=Query\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateEnrollmentGroup(com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateEnrollmentGroup(EnrollmentGroup enrollmentGroup)"
  name: "createOrUpdateEnrollmentGroup(EnrollmentGroup enrollmentGroup)"
  nameWithType: "ProvisioningServiceClient.createOrUpdateEnrollmentGroup(EnrollmentGroup enrollmentGroup)"
  summary: "Create or update an enrollment group record."
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref> object that describes the individualEnrollment that will be created of updated."
    name: "enrollmentGroup"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup&text=EnrollmentGroup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EnrollmentGroup createOrUpdateEnrollmentGroup(EnrollmentGroup enrollmentGroup)"
  exceptions:
  - description: "if the Provisioning was not able to create or update the enrollment"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Create or update an enrollment group record.\n\nThis API creates a new enrollment group or update a existed one. All enrollment group in the Device Provisioning Service contains a unique identifier called enrollmentGroupId. If this API is called with an enrollmentGroupId that already exists, it will replace the existed enrollmentGroup information by the new one. On the other hand, if the enrollmentGroupId does not exit, it will be created.\n\nTo use the Device Provisioning Service API, you must include the follow package on your application.\n\n```java\n// Include the following imports to use the Device Provisioning Service APIs.\n import com.microsoft.azure.sdk.iot.provisioning.service.*;\n```\n\n**Sample:**\n\nThe follow code will create a new enrollmentGroup that will provisioning multiple devices to the ContosoHub.azure-devices.net.\n\n```java\n// EnrollmentGroup information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String ENROLLMENT_GROUP_ID = \"enrollmentGroupId-1\";\n private static final String IOTHUB_HOST_NAME = \"ContosoHub.azure-devices.net\";\n private static String PUBLIC_CERTIFICATE_STRING =\n         \"-----BEGIN CERTIFICATE-----\\n\" +\n         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n         \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n         \"-----END CERTIFICATE-----\\n\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Create a new enrollmentGroup configurations.\n     Attestation attestation = X509Attestation.createFromSigningCertificates(PUBLIC_KEY_CERTIFICATE_STRING);\n     EnrollmentGroup enrollmentGroup =\n         new EnrollmentGroup(\n             enrollmentGroupId,\n             attestation);\n     enrollmentGroup.setIotHubHostName(IOTHUB_HOST_NAME);\n     enrollmentGroup.setProvisioningStatus(ProvisioningStatus.ENABLED);\n\n     // Create a new enrollmentGroup.\n     EnrollmentGroup enrollmentGroupResult =  provisioningServiceClient.createOrUpdateEnrollmentGroup(enrollmentGroup);\n }\n```"
  returns:
    description: "An <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref> object with the result of the create or update requested."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup&text=EnrollmentGroup\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment(com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment(IndividualEnrollment individualEnrollment)"
  name: "createOrUpdateIndividualEnrollment(IndividualEnrollment individualEnrollment)"
  nameWithType: "ProvisioningServiceClient.createOrUpdateIndividualEnrollment(IndividualEnrollment individualEnrollment)"
  summary: "Create or update a individual Device Enrollment record."
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> object that describes the individualEnrollment that will be created of\n                   updated. It cannot be <code>null</code>."
    name: "individualEnrollment"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment&text=IndividualEnrollment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IndividualEnrollment createOrUpdateIndividualEnrollment(IndividualEnrollment individualEnrollment)"
  exceptions:
  - description: "if the provided parameter is not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Create or update a individual Device Enrollment record.\n\nThis API creates a new individualEnrollment or update a existed one. All enrollments in the Device Provisioning Service contains a unique identifier called registrationId. If this API is called for an individualEnrollment with a registrationId that already exists, it will replace the existed individualEnrollment information by the new one. On the other hand, if the registrationId does not exit, this API will create a new individualEnrollment.\n\nTo use the Device Provisioning Service API, you must include the follow package on your application.\n\n```java\n// Include the following imports to use the Device Provisioning Service APIs.\n import com.microsoft.azure.sdk.iot.provisioning.service.*;\n```\n\n**Sample:**\n\nThe follow code will create a new individualEnrollment that will provisioning the ContosoDevice1000 to the ContosoHub.azure-devices.net using TPM attestation.\n\n```java\n// IndividualEnrollment information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String TPM_ENDORSEMENT_KEY = \"tpm-endorsement-key\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n private static final String DEVICE_ID = \"ContosoDevice1000\";\n private static final String IOTHUB_HOST_NAME = \"ContosoHub.azure-devices.net\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Create a new individualEnrollment configurations.\n     Attestation attestation = new TpmAttestation(TPM_ENDORSEMENT_KEY);\n     IndividualEnrollment individualEnrollment =\n        new IndividualEnrollment(\n             REGISTRATION_ID,\n             attestation);\n     individualEnrollment.setDeviceId(DEVICE_ID);\n     individualEnrollment.setIotHubHostName(IOTHUB_HOST_NAME);\n     individualEnrollment.setProvisioningStatus(ProvisioningStatus.DISABLED);\n\n     // Create a new individualEnrollment.\n     IndividualEnrollment enrollmentResult =  deviceProvisioningServiceClient.createOrUpdateIndividualEnrollment(individualEnrollment);\n }\n```\n\nIf the registrationId already exists, this method will update existed enrollments. Note that update the individualEnrollment will not change the status of the device that was already registered using the old individualEnrollment.\n\nThe follow code will update the provisioningStatus of the previous individualEnrollment from **disabled** to **enabled**.\n\n```java\n// IndividualEnrollment information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Get the content of the previous individualEnrollment.\n     IndividualEnrollment individualEnrollment =  deviceProvisioningServiceClient.getIndividualEnrollment(REGISTRATION_ID);\n\n     // Change the provisioning status, from disabled to enabled\n     individualEnrollment.setProvisioningStatus(ProvisioningStatus.ENABLED);\n\n     // Update the individualEnrollment information.\n     IndividualEnrollment enrollmentResult =  deviceProvisioningServiceClient.createOrUpdateIndividualEnrollment(individualEnrollment);\n }\n```"
  returns:
    description: "An <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> object with the result of the create or update requested."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment&text=IndividualEnrollment\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(DeviceRegistrationState deviceRegistrationState)"
  name: "deleteDeviceRegistrationState(DeviceRegistrationState deviceRegistrationState)"
  nameWithType: "ProvisioningServiceClient.deleteDeviceRegistrationState(DeviceRegistrationState deviceRegistrationState)"
  summary: "Delete the Registration Status information."
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> that identifies the deviceRegistrationState. It cannot be <code>null</code>."
    name: "deviceRegistrationState"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState&text=DeviceRegistrationState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteDeviceRegistrationState(DeviceRegistrationState deviceRegistrationState)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            registration status information for the provided DeviceRegistrationState."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Delete the Registration Status information.\n\nThis method will remove the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> from the Device Provisioning Service using the provided <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> information. The Device Provisioning Service will care about the id and the eTag on the DeviceRegistrationState. If you want to delete the deviceRegistrationState regardless the eTag, you can use the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteDeviceRegistrationState(String)\"></xref> passing only the id.\n\nIf the id does not exists or the eTag does not matches, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the deviceRegistrationState \"registrationId-1\".\n\n```java\n// Registration Status information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Get the registration status information.\n     DeviceRegistrationState registrationStateResult =  deviceProvisioningServiceClient.getDeviceRegistrationState(REGISTRATION_ID);\n\n     // Delete the registration status information.\n     deviceProvisioningServiceClient.deleteDeviceRegistrationState(registrationStateResult);\n }\n```"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(String id)"
  name: "deleteDeviceRegistrationState(String id)"
  nameWithType: "ProvisioningServiceClient.deleteDeviceRegistrationState(String id)"
  summary: "Delete the registration status information."
  parameters:
  - description: "the <code>String</code> that identifies the deviceRegistrationState. It cannot be <code>null</code> or empty."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteDeviceRegistrationState(String id)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            deviceRegistrationState information for the provided registrationId."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Delete the registration status information.\n\nThis method will remove the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> from the Device Provisioning Service using the provided id. It will delete the registration status regardless the eTag. It means that this API correspond to the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteDeviceRegistrationState(String, String)\"></xref> with the `eTag=\"*\"`.\n\nIf the id does not exists, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the registration status \"registrationId-1\".\n\n```java\n// deviceRegistrationState information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Delete the registration status information.\n     deviceProvisioningServiceClient.deleteDeviceRegistrationState(REGISTRATION_ID);\n }\n```"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(String id, String eTag)"
  name: "deleteDeviceRegistrationState(String id, String eTag)"
  nameWithType: "ProvisioningServiceClient.deleteDeviceRegistrationState(String id, String eTag)"
  summary: "Delete the registration status information."
  parameters:
  - description: "the <code>String</code> that identifies the deviceRegistrationState. It cannot be <code>null</code> or empty."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>String</code> with the deviceRegistrationState eTag. It can be <code>null</code> or empty.\n             The Device Provisioning Service will ignore it in all of these cases."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteDeviceRegistrationState(String id, String eTag)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            deviceRegistrationState information for the provided registrationId and eTag."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Delete the registration status information.\n\nThis method will remove the registration status from the Device Provisioning Service using the provided id and eTag. If you want to delete the registration status regardless the eTag, you can use <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteDeviceRegistrationState(String)\"></xref> or you can pass the eTag as `null`, empty, or `\"*\"`.\n\nIf the id does not exists or the eTag does not matches, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the deviceRegistrationState \"registrationId-1\" regardless the eTag.\n\n```java\n// Registration Status information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n private Static final String ANY_ETAG = \"*\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Delete the deviceRegistrationState information.\n     deviceProvisioningServiceClient.deleteDeviceRegistrationState(REGISTRATION_ID, ANY_ETAG);\n }\n```"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(DeviceRegistrationState deviceRegistrationState)"
  name: "deleteDeviceRegistrationStatus(DeviceRegistrationState deviceRegistrationState)"
  nameWithType: "ProvisioningServiceClient.deleteDeviceRegistrationStatus(DeviceRegistrationState deviceRegistrationState)"
  deprecatedTag: "As of release 1.0.0, replaced by <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteDeviceRegistrationState(DeviceRegistrationState)\"></xref> ()\\}"
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> that identifies the deviceRegistrationState. It cannot be <code>null</code>."
    name: "deviceRegistrationState"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState&text=DeviceRegistrationState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic void deleteDeviceRegistrationStatus(DeviceRegistrationState deviceRegistrationState)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            registration status information for the provided DeviceRegistrationState."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  hasDeprecatedTag: true
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(String id)"
  name: "deleteDeviceRegistrationStatus(String id)"
  nameWithType: "ProvisioningServiceClient.deleteDeviceRegistrationStatus(String id)"
  deprecatedTag: "As of release 1.0.0, replaced by <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteDeviceRegistrationState(String)\"></xref> ()\\}"
  parameters:
  - description: "the <code>String</code> that identifies the deviceRegistrationState. It cannot be <code>null</code> or empty."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic void deleteDeviceRegistrationStatus(String id)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            deviceRegistrationState information for the provided registrationId."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  hasDeprecatedTag: true
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(String id, String eTag)"
  name: "deleteDeviceRegistrationStatus(String id, String eTag)"
  nameWithType: "ProvisioningServiceClient.deleteDeviceRegistrationStatus(String id, String eTag)"
  deprecatedTag: "As of release 1.0.0, replaced by <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteDeviceRegistrationState(String, String)\"></xref> ()\\}"
  parameters:
  - description: "the <code>String</code> that identifies the deviceRegistrationState. It cannot be <code>null</code> or empty."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>String</code> with the deviceRegistrationState eTag. It can be <code>null</code> or empty.\n             The Device Provisioning Service will ignore it in all of these cases."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic void deleteDeviceRegistrationStatus(String id, String eTag)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            deviceRegistrationState information for the provided registrationId and eTag."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  hasDeprecatedTag: true
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(EnrollmentGroup enrollmentGroup)"
  name: "deleteEnrollmentGroup(EnrollmentGroup enrollmentGroup)"
  nameWithType: "ProvisioningServiceClient.deleteEnrollmentGroup(EnrollmentGroup enrollmentGroup)"
  summary: "Delete the enrollment<wbr>Group information."
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref> that identifies the enrollmentGroup. It cannot be <code>null</code>."
    name: "enrollmentGroup"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup&text=EnrollmentGroup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteEnrollmentGroup(EnrollmentGroup enrollmentGroup)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            enrollmentGroup information for the provided enrollmentGroup."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Delete the enrollmentGroup information.\n\nThis method will remove the enrollmentGroup from the Device Provisioning Service using the provided <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref> information. The Device Provisioning Service will care about the enrollmentGroupId and the eTag on the enrollmentGroup. If you want to delete the enrollment regardless the eTag, you can set the `eTag=\"*\"` into the enrollmentGroup, or use the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteEnrollmentGroup(String)\"></xref> passing only the enrollmentGroupId.\n\nNote that delete the enrollmentGroup will not remove the Devices itself from the IotHub.\n\nIf the enrollmentGroupId does not exists or the eTag does not matches, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the enrollmentGroup \"enrollmentGroupId-1\".\n\n```java\n// EnrollmentGroup information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String ENROLLMENT_GROUP_ID = \"enrollmentGroupId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Get the enrollmentGroup information.\n     EnrollmentGroup enrollmentGroupResult =  deviceProvisioningServiceClient.getEnrollmentGroup(ENROLLMENT_GROUP_ID);\n\n     // Delete the enrollmentGroup information.\n     deviceProvisioningServiceClient.deleteEnrollmentGroup(enrollmentResult);\n }\n```"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(String enrollmentGroupId)"
  name: "deleteEnrollmentGroup(String enrollmentGroupId)"
  nameWithType: "ProvisioningServiceClient.deleteEnrollmentGroup(String enrollmentGroupId)"
  summary: "Delete the enrollment<wbr>Group information."
  parameters:
  - description: "the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty."
    name: "enrollmentGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteEnrollmentGroup(String enrollmentGroupId)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            enrollmentGroup information for the provided enrollmentGroupId."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Delete the enrollmentGroup information.\n\nThis method will remove the enrollmentGroup from the Device Provisioning Service using the provided enrollmentGroupId. It will delete the enrollmentGroup regardless the eTag. It means that this API correspond to the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteEnrollmentGroup(String, String)\"></xref> with the `eTag=\"*\"`.\n\nNote that delete the enrollmentGroup will not remove the Devices itself from the IotHub.\n\nIf the enrollmentGroupId does not exists, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the enrollmentGroup \"enrollmentGroupId-1\".\n\n```java\n// EnrollmentGroup information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String ENROLLMENT_GROUP_ID = \"enrollmentGroupId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Delete the enrollmentGroup information.\n     deviceProvisioningServiceClient.deleteEnrollmentGroup(ENROLLMENT_GROUP_ID);\n }\n```"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(String enrollmentGroupId, String eTag)"
  name: "deleteEnrollmentGroup(String enrollmentGroupId, String eTag)"
  nameWithType: "ProvisioningServiceClient.deleteEnrollmentGroup(String enrollmentGroupId, String eTag)"
  summary: "Delete the enrollment<wbr>Group information."
  parameters:
  - description: "the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty."
    name: "enrollmentGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>String</code> with the enrollmentGroup eTag. It can be <code>null</code> or empty.\n             The Device Provisioning Service will ignore it in all of these cases."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteEnrollmentGroup(String enrollmentGroupId, String eTag)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to delete the\n                                            enrollmentGroup information for the provided enrollmentGroupId and eTag."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Delete the enrollmentGroup information.\n\nThis method will remove the enrollmentGroup from the Device Provisioning Service using the provided enrollmentGroupId and eTag. If you want to delete the enrollmentGroup regardless the eTag, you can use <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteEnrollmentGroup(String)\"></xref> or you can pass the eTag as `null`, empty, or `\"*\"`.\n\nNote that delete the enrollmentGroup will not remove the Device itself from the IotHub.\n\nIf the enrollmentGroupId does not exists or eTag does not matches, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the enrollmentGroup \"enrollmentGroupId-1\" regardless the eTag.\n\n```java\n// enrollmentGroup information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String ENROLLMENT_GROUP_ID = \"enrollmentGroupId-1\";\n private Static final String ANY_ETAG = \"*\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Delete the enrollmentGroup information.\n     deviceProvisioningServiceClient.deleteEnrollmentGroup(ENROLLMENT_GROUP_ID, ANY_ETAG);\n }\n```"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(IndividualEnrollment individualEnrollment)"
  name: "deleteIndividualEnrollment(IndividualEnrollment individualEnrollment)"
  nameWithType: "ProvisioningServiceClient.deleteIndividualEnrollment(IndividualEnrollment individualEnrollment)"
  summary: "Delete the individual<wbr>Enrollment information."
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> that identifies the individualEnrollment. It cannot be <code>null</code>."
    name: "individualEnrollment"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment&text=IndividualEnrollment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteIndividualEnrollment(IndividualEnrollment individualEnrollment)"
  exceptions:
  - description: "if the provided parameter is not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Delete the individualEnrollment information.\n\nThis method will remove the individualEnrollment from the Device Provisioning Service using the provided <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> information. The Device Provisioning Service will care about the registrationId and the eTag on the individualEnrollment. If you want to delete the individualEnrollment regardless the eTag, you can set the `eTag=\"*\"` into the individualEnrollment, or use the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteIndividualEnrollment(String)\"></xref> passing only the registrationId.\n\nNote that delete the individualEnrollment will not remove the Device itself from the IotHub.\n\nIf the registrationId does not exists or the eTag not matches, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the individualEnrollment \"registrationId-1\".\n\n```java\n// IndividualEnrollment information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Get the individualEnrollment information.\n     IndividualEnrollment enrollmentResult =  deviceProvisioningServiceClient.getIndividualEnrollment(REGISTRATION_ID);\n\n     // Delete the individualEnrollment information.\n     deviceProvisioningServiceClient.deleteIndividualEnrollment(enrollmentResult);\n }\n```"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId)"
  name: "deleteIndividualEnrollment(String registrationId)"
  nameWithType: "ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId)"
  summary: "Delete the individual<wbr>Enrollment information."
  parameters:
  - description: "the <code>String</code> that identifies the individualEnrollment. It cannot be <code>null</code> or empty."
    name: "registrationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteIndividualEnrollment(String registrationId)"
  exceptions:
  - description: "if the provided registrationId is not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Delete the individualEnrollment information.\n\nThis method will remove the individualEnrollment from the Device Provisioning Service using the provided registrationId. It will delete the enrollment regardless the eTag. It means that this API correspond to the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteIndividualEnrollment(String, String)\"></xref> with the `eTag=\"*\"`.\n\nNote that delete the enrollment will not remove the Device itself from the IotHub.\n\nIf the registrationId does not exists, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the individualEnrollment \"registrationId-1\".\n\n```java\n// IndividualEnrollment information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Delete the individualEnrollment information.\n     deviceProvisioningServiceClient.deleteIndividualEnrollment(REGISTRATION_ID);\n }\n```"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId, String eTag)"
  name: "deleteIndividualEnrollment(String registrationId, String eTag)"
  nameWithType: "ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId, String eTag)"
  summary: "Delete the individual<wbr>Enrollment information."
  parameters:
  - description: "the <code>String</code> that identifies the individualEnrollment. It cannot be <code>null</code> or empty."
    name: "registrationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>String</code> with the IndividualEnrollment eTag. It can be <code>null</code> or empty.\n             The Device Provisioning Service will ignore it in all of these cases."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteIndividualEnrollment(String registrationId, String eTag)"
  exceptions:
  - description: "if the provided registrationId is not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Delete the individualEnrollment information.\n\nThis method will remove the individualEnrollment from the Device Provisioning Service using the provided registrationId and eTag. If you want to delete the enrollment regardless the eTag, you can use <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteIndividualEnrollment(String)\"></xref> or you can pass the eTag as `null`, empty, or `\"*\"`.\n\nNote that delete the enrollment will not remove the Device itself from the IotHub.\n\nIf the registrationId does not exists or the eTag does not matches, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will delete the information about the individualEnrollment \"registrationId-1\" regardless the eTag.\n\n```java\n// IndividualEnrollment information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n private Static final String ANY_ETAG = \"*\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Delete the individualEnrollment information.\n     deviceProvisioningServiceClient.deleteIndividualEnrollment(REGISTRATION_ID, ANY_ETAG);\n }\n```"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getDeviceRegistrationState(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getDeviceRegistrationState(String id)"
  name: "getDeviceRegistrationState(String id)"
  nameWithType: "ProvisioningServiceClient.getDeviceRegistrationState(String id)"
  summary: "Retrieve the registration status information."
  parameters:
  - description: "the <code>String</code> that identifies the deviceRegistrationState. It cannot be <code>null</code> or empty."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DeviceRegistrationState getDeviceRegistrationState(String id)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to retrieve the\n                                            deviceRegistrationState information for the provided registrationId."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieve the registration status information.\n\nThis method will return the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> for the provided id. It will retrieve the correspondent deviceRegistrationState from the Device Provisioning Service, and return it in the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> object.\n\nIf the id do not exists, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will get and print the information about the deviceRegistrationState \"registrationId-1\".\n\n```java\n// Registration status information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Get the deviceRegistrationState information.\n     DeviceRegistrationState registrationStateResult =  deviceProvisioningServiceClient.getDeviceRegistrationState(REGISTRATION_ID);\n     System.out.println(registrationStateResult.toString());\n }\n```"
  returns:
    description: "The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceRegistrationState\"></xref> with the content of the deviceRegistrationState in the Provisioning Device Service."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState&text=DeviceRegistrationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroup(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroup(String enrollmentGroupId)"
  name: "getEnrollmentGroup(String enrollmentGroupId)"
  nameWithType: "ProvisioningServiceClient.getEnrollmentGroup(String enrollmentGroupId)"
  summary: "Retrieve the enrollment<wbr>Group information."
  parameters:
  - description: "the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty."
    name: "enrollmentGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EnrollmentGroup getEnrollmentGroup(String enrollmentGroupId)"
  exceptions:
  - description: "if the Provisioning Device Service was not able to retrieve the\n                                            enrollmentGroup information for the provided enrollmentGroupId."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieve the enrollmentGroup information.\n\nThis method will return the enrollmentGroup information for the provided enrollmentGroupId. It will retrieve the correspondent enrollmentGroup from the Device Provisioning Service, and return it in the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref> object.\n\nIf the enrollmentGroupId does not exists, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will get and print the information about the enrollmentGroupId \"enrollmentGroupId-1\".\n\n```java\n// EnrollmentGroup information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String ENROLLMENT_GROUP_ID = \"enrollmentGroupId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Get the individualEnrollment information.\n     EnrollmentGroup enrollmentGroupResult =  deviceProvisioningServiceClient.getEnrollmentGroup(ENROLLMENT_GROUP_ID);\n     System.out.println(enrollmentGroupResult.toString());\n }\n```"
  returns:
    description: "The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref> with the content of the enrollmentGroup in the Provisioning Device Service."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup&text=EnrollmentGroup\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroupAttestationMechanism(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroupAttestationMechanism(String enrollmentGroupId)"
  name: "getEnrollmentGroupAttestationMechanism(String enrollmentGroupId)"
  nameWithType: "ProvisioningServiceClient.getEnrollmentGroupAttestationMechanism(String enrollmentGroupId)"
  summary: "Get the attestation mechanism details for a given enrollment group"
  parameters:
  - description: "the group id of the enrollment group to look up the attestation mechanism for"
    name: "enrollmentGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AttestationMechanism getEnrollmentGroupAttestationMechanism(String enrollmentGroupId)"
  exceptions:
  - description: "if any exception is thrown while getting the attestation mechanism"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get the attestation mechanism details for a given enrollment group"
  returns:
    description: "the attestation mechanism of the given enrollment group"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism&text=AttestationMechanism\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollment(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollment(String registrationId)"
  name: "getIndividualEnrollment(String registrationId)"
  nameWithType: "ProvisioningServiceClient.getIndividualEnrollment(String registrationId)"
  summary: "Retrieve the individual<wbr>Enrollment information."
  parameters:
  - description: "the <code>String</code> that identifies the individualEnrollment. It cannot be <code>null</code> or empty."
    name: "registrationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IndividualEnrollment getIndividualEnrollment(String registrationId)"
  exceptions:
  - description: "if the provided parameter is not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Retrieve the individualEnrollment information.\n\nThis method will return the enrollment information for the provided registrationId. It will retrieve the correspondent individualEnrollment from the Device Provisioning Service, and return it in the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> object.\n\nIf the registrationId do not exists, this method will throw <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientNotFoundException\"></xref>. for more exceptions that this method can throw, please see <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClientExceptionManager\"></xref>\n\n**Sample:**\n\nThe follow code will get and print the information about the individualEnrollment \"registrationId-1\".\n\n```java\n// IndividualEnrollment information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String REGISTRATION_ID = \"registrationId-1\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Get the individualEnrollment information.\n     IndividualEnrollment enrollmentResult =  deviceProvisioningServiceClient.getIndividualEnrollment(REGISTRATION_ID);\n     System.out.println(enrollmentResult.toString());\n }\n```"
  returns:
    description: "The <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> with the content of the individualEnrollment in the Provisioning Device Service."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment&text=IndividualEnrollment\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollmentAttestationMechanism(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollmentAttestationMechanism(String registrationId)"
  name: "getIndividualEnrollmentAttestationMechanism(String registrationId)"
  nameWithType: "ProvisioningServiceClient.getIndividualEnrollmentAttestationMechanism(String registrationId)"
  summary: "Get the attestation mechanism details for a given individual enrollment"
  parameters:
  - description: "the registration id of the individual enrollment to look up the attestation mechanism for"
    name: "registrationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AttestationMechanism getIndividualEnrollmentAttestationMechanism(String registrationId)"
  exceptions:
  - description: "if any exception is thrown while getting the attestation mechanism"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Get the attestation mechanism details for a given individual enrollment"
  returns:
    description: "the attestation mechanism of the given individual enrollment"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism&text=AttestationMechanism\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation(com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode,java.util.Collection<com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment>)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)"
  name: "runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)"
  nameWithType: "ProvisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)"
  summary: "Create, update or delete a set of individual Device Enrollments."
  parameters:
  - description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BulkOperationMode\"></xref> that defines the single operation to do over the individualEnrollments. It cannot be <code>null</code>."
    name: "bulkOperationMode"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode&text=BulkOperationMode\" data-throw-if-not-resolved=\"False\" />"
  - description: "the collection of <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> that contains the description of each individualEnrollment. It cannot be <code>null</code> or empty."
    name: "individualEnrollments"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment&text=IndividualEnrollment\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BulkEnrollmentOperationResult runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)"
  exceptions:
  - description: "if the provided parameters are not correct."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Create, update or delete a set of individual Device Enrollments.\n\nThis API provide the means to do a single operation over multiple individualEnrollments. A valid operation is determined by <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BulkOperationMode\"></xref>, and can be 'create', 'update', 'updateIfMatchETag', or 'delete'.\n\nTo use the Device Provisioning Service API, you must include the follow package on your application.\n\n```java\n// Include the following imports to use the Device Provisioning Service APIs.\n import com.microsoft.azure.sdk.iot.provisioning.service.*;\n```\n\n**Sample:**\n\nThe follow code will create two new enrollment that will provisioning the ContosoDevice1000 and ContosoDevice1001 to the ContosoHub.azure-devices.net using TPM attestation.\n\n```java\n// IndividualEnrollment information.\n private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\n                                                              \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\n                                                              \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\n private static final String TPM_ENDORSEMENT_KEY = \"tpm-endorsement-key\";\n private static final String IOTHUB_HOST_NAME = \"ContosoHub.azure-devices.net\";\n\n private static final String REGISTRATION_ID_1 = \"registrationId-1\";\n private static final String DEVICE_ID_1 = \"ContosoDevice1000\";\n\n private static final String REGISTRATION_ID_2 = \"registrationId-2\";\n private static final String DEVICE_ID_2 = \"ContosoDevice1001\";\n\n public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\n {\n     // Create a Device Provisioning Service Client.\n     DeviceProvisioningServiceClient deviceProvisioningServiceClient =\n         DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\n\n     // Create two new individualEnrollment configurations.\n     Attestation attestation = new TpmAttestation(TPM_ENDORSEMENT_KEY);\n     IndividualEnrollment enrollment1 =\n        new IndividualEnrollment(\n             REGISTRATION_ID_1,\n             attestation);\n     enrollment1.setDeviceId(DEVICE_ID_1);\n     enrollment1.setIotHubHostName(IOTHUB_HOST_NAME);\n     enrollment1.setProvisioningStatus(ProvisioningStatus.DISABLED);\n\n     IndividualEnrollment enrollment2 =\n        new IndividualEnrollment(\n             REGISTRATION_ID_2,\n             attestation);\n     enrollment2.setDeviceId(DEVICE_ID_2);\n     enrollment2.setIotHubHostName(IOTHUB_HOST_NAME);\n     enrollment2.setProvisioningStatus(ProvisioningStatus.DISABLED);\n\n     // Add these 2 individualEnrollments to a list of individualEnrollments.\n     List individualEnrollments = new LinkedList<>();\n     individualEnrollments.add(enrollment1);\n     individualEnrollments.add(enrollment2);\n\n     // Create these 2 new individualEnrollment using the bulk operation.\n     BulkEnrollmentOperationResult bulkEnrollmentOperationResult =  provisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode.create, individualEnrollments);\n }\n```"
  returns:
    description: "A <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BulkEnrollmentOperationResult\"></xref> object with the result of operation for each enrollment."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult&text=BulkEnrollmentOperationResult\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Device Provisioning Service Client.\n\nThe IoT Hub Device Provisioning Service is a helper service for IoT Hub that enables automatic device provisioning to a specified IoT hub without requiring human intervention. You can use the Device Provisioning Service to provision millions of devices in a secure and scalable manner.\n\nThis java SDK provides an API to help developers to create and maintain Enrollments on the IoT Hub Device Provisioning Service, it translate the rest API in java Objects and Methods.\n\nTo use the this SDK, you must include the follow package on your application.\n\n```java\n// Include the following imports to use the Device Provisioning Service APIs.\n import com.microsoft.azure.sdk.iot.provisioning.service.*;\n```\n\nThe main APIs are exposed by the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClient\"></xref>, it contains the public Methods that the application shall call to create and maintain the Enrollments. The Objects in the **configs** package shall be filled and passed as parameters of the public API, for example, to create a new enrollment, the application shall create the object <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> with the appropriate enrollment configurations, and call the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment(com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createOrUpdateIndividualEnrollment(IndividualEnrollment)\"></xref>.\n\nThe IoT Hub Device Provisioning Service supports SQL queries too. The application can create a new query using one of the queries factories, for instance <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createIndividualEnrollmentQuery(QuerySpecification)\"></xref>, passing the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QuerySpecification\"></xref>, with the SQL query. This factory returns a <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Query\"></xref> object, which is an active iterator.\n\nThis java SDK can be represented in the follow diagram, the first layer are the public APIs the your application shall use:\n\n```java\n+===============+       +==========================================+                           +============+   +===+\n |    configs    |------>|         ProvisioningServiceClient        |                        +->|    Query   |   |   |\n +===============+       +==+=================+==================+==+                        |  +======+=====+   | e |\n                           /                  |                   \\                          |         |         | x |\n                          /                   |                    \\                         |         |         | c |\n +-----------------------+-----+  +-----------+------------+  +-----+---------------------+  |         |         | e |\n | IndividualEnrollmentManager |  | EnrollmentGroupManager |  | RegistrationStatusManager |  |         |         | p |\n +---------------+------+------+  +-----------+------+-----+  +-------------+-------+-----+  |         |         | t |\n                  \\      \\                    |       \\                     |        \\       |         |         | i |\n                   \\      +----------------------------+------------------------------+------+         |         | o |\n                    \\                         |                             |                          |         | n |\n  +--------+      +--+------------------------+-----------------------------+--------------------------+-----+   | s |\n  |  auth  |----->|                                     ContractApiHttp                                      |   |   |\n  +--------+      +-------------------------------------------+----------------------------------------------+   +===+\n                                                              |\n                                                              |\n                        +-------------------------------------+------------------------------------------+\n                        |                 com.microsoft.azure.sdk.iot.deps.transport.http                |\n                        +--------------------------------------------------------------------------------+\n```"
metadata: {}
package: "com.microsoft.azure.sdk.iot.provisioning.service"
artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
