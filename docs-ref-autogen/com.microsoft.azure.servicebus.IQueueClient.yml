### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID,Map<String, Object>)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.abandon(UUID,Map<String, Object>,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID,Map<String, Object>)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.abandonAsync(UUID,Map<String, Object>,TransactionContext)
- com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage(long)
- com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessageAsync(long)
- com.microsoft.azure.servicebus.ICloseable.close()
- com.microsoft.azure.servicebus.ICloseable.closeAsync()
- com.microsoft.azure.servicebus.IMessageAndSessionPump.complete(UUID)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.complete(UUID,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.completeAsync(UUID)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.completeAsync(UUID,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,Map<String, Object>)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,Map<String, Object>,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,String,String)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,String,String,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,String,String,Map<String, Object>)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetter(UUID,String,String,Map<String, Object>,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,Map<String, Object>)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,Map<String, Object>,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,String,String)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,String,String,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,String,String,Map<String, Object>)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.deadLetterAsync(UUID,String,String,Map<String, Object>,TransactionContext)
- com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
- com.microsoft.azure.servicebus.IMessageAndSessionPump.getPrefetchCount()
- com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler,ExecutorService)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler,MessageHandlerOptions)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.registerMessageHandler(IMessageHandler,MessageHandlerOptions,ExecutorService)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler,ExecutorService)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler,SessionHandlerOptions)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.registerSessionHandler(ISessionHandler,SessionHandlerOptions,ExecutorService)
- com.microsoft.azure.servicebus.IMessageSender.scheduleMessage(IMessage,Instant)
- com.microsoft.azure.servicebus.IMessageSender.scheduleMessage(IMessage,Instant,TransactionContext)
- com.microsoft.azure.servicebus.IMessageSender.scheduleMessageAsync(IMessage,Instant)
- com.microsoft.azure.servicebus.IMessageSender.scheduleMessageAsync(IMessage,Instant,TransactionContext)
- com.microsoft.azure.servicebus.IMessageSender.send(IMessage)
- com.microsoft.azure.servicebus.IMessageSender.send(IMessage,TransactionContext)
- com.microsoft.azure.servicebus.IMessageSender.sendAsync(IMessage)
- com.microsoft.azure.servicebus.IMessageSender.sendAsync(IMessage,TransactionContext)
- com.microsoft.azure.servicebus.IMessageSender.sendBatch(Collection<? extends IMessage>)
- com.microsoft.azure.servicebus.IMessageSender.sendBatch(Collection<? extends IMessage>,TransactionContext)
- com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage>)
- com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage>,TransactionContext)
- com.microsoft.azure.servicebus.IMessageAndSessionPump.setPrefetchCount(int)
methods:
- com.microsoft.azure.servicebus.IQueueClient.getQueueName()
- com.microsoft.azure.servicebus.IQueueClient.getReceiveMode()
nameWithType: IQueueClient
syntax: public interface IQueueClient extends IMessageSender,IMessageEntityClient
type: interface
uid: com.microsoft.azure.servicebus.IQueueClient
fullName: com.microsoft.azure.servicebus.IQueueClient
name: IQueueClient
package: com.microsoft.azure.servicebus
summary: <p>QueueClient can be used for all basic interactions with a Service Bus Queue. </p>
metadata: {}
