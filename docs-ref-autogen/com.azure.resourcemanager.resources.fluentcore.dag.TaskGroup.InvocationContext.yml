### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext"
fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext"
name: "TaskGroup.InvocationContext"
nameWithType: "TaskGroup.InvocationContext"
summary: "A mutable type that can be used to pass data around task items during the invocation of the TaskGroup."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static final class TaskGroup.InvocationContext"
fields:
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext.KEY_SKIP_TASKS"
methods:
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext.get(java.lang.String)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext.hasKey(java.lang.String)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext.put(java.lang.String,java.lang.Object)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext.taskGroup()"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext.terminateOnErrorStrategy()"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext.withTerminateOnErrorStrategy(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupTerminateOnErrorStrategy)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.dag"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
