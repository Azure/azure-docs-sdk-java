### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.Subscription"
fullName: "com.microsoft.azure.management.resources.Subscription"
name: "Subscription"
nameWithType: "Subscription"
summary: "An immutable client-side representation of an Azure subscription."
syntax: "public interface Subscription extends Indexable, HasInner<SubscriptionInner>"
methods:
- uid: "com.microsoft.azure.management.resources.Subscription.displayName()"
  fullName: "com.microsoft.azure.management.resources.Subscription.displayName()"
  name: "displayName()"
  nameWithType: "Subscription.displayName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String displayName()"
  returns:
    description: "the name of the subscription for humans to read"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.Subscription.getLocationByRegion(com.microsoft.azure.management.resources.fluentcore.arm.Region)"
  fullName: "com.microsoft.azure.management.resources.Subscription.getLocationByRegion(Region region)"
  name: "getLocationByRegion(Region region)"
  nameWithType: "Subscription.getLocationByRegion(Region region)"
  summary: "Gets the data center location for the specified region, if the selected subscription has access to it."
  modifiers:
  - "abstract"
  parameters:
  - description: "an Azure region"
    name: "region"
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Location getLocationByRegion(Region region)"
  desc: "Gets the data center location for the specified region, if the selected subscription has access to it."
  returns:
    description: "an Azure data center location, or null if the location is not accessible to this subscription"
    type: "<xref href=\"com.microsoft.azure.management.resources.Location?alt=com.microsoft.azure.management.resources.Location&text=Location\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.Subscription.listLocations()"
  fullName: "com.microsoft.azure.management.resources.Subscription.listLocations()"
  name: "listLocations()"
  nameWithType: "Subscription.listLocations()"
  summary: "List the locations the subscription has access to."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedList<Location> listLocations()"
  desc: "List the locations the subscription has access to."
  returns:
    description: "the lazy list of locations"
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.Location?alt=com.microsoft.azure.management.resources.Location&text=Location\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.Subscription.managedByTenants()"
  fullName: "com.microsoft.azure.management.resources.Subscription.managedByTenants()"
  name: "managedByTenants()"
  nameWithType: "Subscription.managedByTenants()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<ManagedByTenant> managedByTenants()"
  returns:
    description: "the array containing the tenants managing the subscription"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.ManagedByTenant?alt=com.microsoft.azure.management.resources.ManagedByTenant&text=ManagedByTenant\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.Subscription.state()"
  fullName: "com.microsoft.azure.management.resources.Subscription.state()"
  name: "state()"
  nameWithType: "Subscription.state()"
  modifiers:
  - "abstract"
  syntax: "public abstract SubscriptionState state()"
  returns:
    description: "the state of the subscription."
    type: "<xref href=\"com.microsoft.azure.management.resources.SubscriptionState?alt=com.microsoft.azure.management.resources.SubscriptionState&text=SubscriptionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.Subscription.subscriptionId()"
  fullName: "com.microsoft.azure.management.resources.Subscription.subscriptionId()"
  name: "subscriptionId()"
  nameWithType: "Subscription.subscriptionId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String subscriptionId()"
  returns:
    description: "the UUID of the subscription"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.Subscription.subscriptionPolicies()"
  fullName: "com.microsoft.azure.management.resources.Subscription.subscriptionPolicies()"
  name: "subscriptionPolicies()"
  nameWithType: "Subscription.subscriptionPolicies()"
  modifiers:
  - "abstract"
  syntax: "public abstract SubscriptionPolicies subscriptionPolicies()"
  returns:
    description: "the policies defined in the subscription"
    type: "<xref href=\"com.microsoft.azure.management.resources.SubscriptionPolicies?alt=com.microsoft.azure.management.resources.SubscriptionPolicies&text=SubscriptionPolicies\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.Subscription.tenantId()"
  fullName: "com.microsoft.azure.management.resources.Subscription.tenantId()"
  name: "tenantId()"
  nameWithType: "Subscription.tenantId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String tenantId()"
  returns:
    description: "the UUID of the subscription tenant"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of an Azure subscription."
implements:
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.HasInner?alt=com.microsoft.azure.management.resources.fluentcore.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.implementation.SubscriptionInner?alt=com.microsoft.azure.management.resources.implementation.SubscriptionInner&text=SubscriptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Indexable?alt=com.microsoft.azure.management.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.management.resources"
artifact: com.microsoft.azure:azure-mgmt-resources:1.41.4
