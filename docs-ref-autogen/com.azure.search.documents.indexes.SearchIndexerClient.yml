### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.SearchIndexerClient
  id: SearchIndexerClient
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes
  children:
  - com.azure.search.documents.indexes.SearchIndexerClient.createDataSourceConnection(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection)
  - com.azure.search.documents.indexes.SearchIndexerClient.createDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.createIndexer(com.azure.search.documents.indexes.models.SearchIndexer)
  - com.azure.search.documents.indexes.SearchIndexerClient.createIndexerWithResponse(com.azure.search.documents.indexes.models.SearchIndexer,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnection(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection)
  - com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection,boolean,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexer(com.azure.search.documents.indexes.models.SearchIndexer)
  - com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexerWithResponse(com.azure.search.documents.indexes.models.SearchIndexer,boolean,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateSkillset(com.azure.search.documents.indexes.models.SearchIndexerSkillset)
  - com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateSkillsetWithResponse(com.azure.search.documents.indexes.models.SearchIndexerSkillset,boolean,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.createSkillset(com.azure.search.documents.indexes.models.SearchIndexerSkillset)
  - com.azure.search.documents.indexes.SearchIndexerClient.createSkillsetWithResponse(com.azure.search.documents.indexes.models.SearchIndexerSkillset,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.deleteDataSourceConnection(java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerClient.deleteDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection,boolean,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.deleteIndexer(java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerClient.deleteIndexerWithResponse(com.azure.search.documents.indexes.models.SearchIndexer,boolean,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.deleteSkillset(java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerClient.deleteSkillsetWithResponse(com.azure.search.documents.indexes.models.SearchIndexerSkillset,boolean,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.getDataSourceConnection(java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerClient.getDataSourceConnectionWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.getEndpoint()
  - com.azure.search.documents.indexes.SearchIndexerClient.getIndexer(java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerClient.getIndexerStatus(java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerClient.getIndexerStatusWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.getIndexerWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.getSkillset(java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerClient.getSkillsetWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnectionNames()
  - com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnectionNames(com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnections()
  - com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnections(com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.listIndexerNames()
  - com.azure.search.documents.indexes.SearchIndexerClient.listIndexerNames(com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.listIndexers()
  - com.azure.search.documents.indexes.SearchIndexerClient.listIndexers(com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.listSkillsetNames()
  - com.azure.search.documents.indexes.SearchIndexerClient.listSkillsetNames(com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.listSkillsets()
  - com.azure.search.documents.indexes.SearchIndexerClient.listSkillsets(com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.resetIndexer(java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerClient.resetIndexerWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.SearchIndexerClient.runIndexer(java.lang.String)
  - com.azure.search.documents.indexes.SearchIndexerClient.runIndexerWithResponse(java.lang.String,com.azure.core.util.Context)
  langs:
  - java
  name: SearchIndexerClient
  nameWithType: SearchIndexerClient
  fullName: com.azure.search.documents.indexes.SearchIndexerClient
  type: Class
  package: com.azure.search.documents.indexes
  summary: This class provides a client that contains the operations for creating, getting, listing, updating, or deleting data source connections, indexers, or skillsets and running or resetting indexers in an Azure Cognitive Search service.
  syntax:
    content: public class SearchIndexerClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.SearchIndexerClient.SearchIndexerClient(com.azure.search.documents.indexes.SearchIndexerAsyncClient)
  id: SearchIndexerClient(com.azure.search.documents.indexes.SearchIndexerAsyncClient)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: SearchIndexerClient(SearchIndexerAsyncClient searchIndexerAsyncClient)
  nameWithType: SearchIndexerClient.SearchIndexerClient(SearchIndexerAsyncClient searchIndexerAsyncClient)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.SearchIndexerClient(SearchIndexerAsyncClient searchIndexerAsyncClient)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.SearchIndexerClient*
  type: Constructor
  package: com.azure.search.documents.indexes
  syntax:
    content: " SearchIndexerClient(SearchIndexerAsyncClient searchIndexerAsyncClient)"
    parameters:
    - id: searchIndexerAsyncClient
      type: com.azure.search.documents.indexes.SearchIndexerAsyncClient
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createDataSourceConnection(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection)
  id: createDataSourceConnection(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: createDataSourceConnection(SearchIndexerDataSourceConnection dataSourceConnection)
  nameWithType: SearchIndexerClient.createDataSourceConnection(SearchIndexerDataSourceConnection dataSourceConnection)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createDataSourceConnection(SearchIndexerDataSourceConnection dataSourceConnection)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.createDataSourceConnection*
  type: Method
  package: com.azure.search.documents.indexes
  summary: "Creates a new Azure Cognitive Search data source\n\n**Code Sample**\n\nCreate search indexer data source connection named \"dataSource\".\n\n```java\nSearchIndexerDataSourceConnection dataSource = searchIndexerClient.getDataSourceConnection(\"dataSource\");\n dataSource.setContainer(new SearchIndexerDataContainer(\"updatecontainer\"));\n \n SearchIndexerDataSourceConnection updateDataSource = searchIndexerClient.createOrUpdateDataSourceConnection(dataSource);\n System.out.printf(\"The dataSource name is %s. The container name of dataSource is %s.%n\",\n     updateDataSource.getName(), updateDataSource.getContainer().getName());\n```"
  syntax:
    content: public SearchIndexerDataSourceConnection createDataSourceConnection(SearchIndexerDataSourceConnection dataSourceConnection)
    parameters:
    - id: dataSourceConnection
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: The definition of the data source to create
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: the data source that was created.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection,com.azure.core.util.Context)
  id: createDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: createDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, Context context)
  nameWithType: SearchIndexerClient.createDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.createDataSourceConnectionWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: "Creates a new Azure Cognitive Search data source\n\n**Code Sample**\n\nCreate search indexer data source connection named \"dataSource\".\n\n```java\nSearchIndexerDataSourceConnection dataSource = new SearchIndexerDataSourceConnection(\"dataSource\",\n     SearchIndexerDataSourceType.AZURE_BLOB, \"{connectionString}\",\n     new SearchIndexerDataContainer(\"container\"));\n Response<SearchIndexerDataSourceConnection> dataSourceFromService =\n     searchIndexerClient.createDataSourceConnectionWithResponse(dataSource, new Context(key1, value1));\n \n System.out.printf(\"The status code of the response is %s. The data source name is %s.%n\",\n     dataSourceFromService.getStatusCode(), dataSourceFromService.getValue().getName());\n```"
  syntax:
    content: public Response<SearchIndexerDataSourceConnection> createDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, Context context)
    parameters:
    - id: dataSourceConnection
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: the definition of the data source to create doesn't match specified values
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection>
      description: a response containing data source that was created.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createIndexer(com.azure.search.documents.indexes.models.SearchIndexer)
  id: createIndexer(com.azure.search.documents.indexes.models.SearchIndexer)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: createIndexer(SearchIndexer indexer)
  nameWithType: SearchIndexerClient.createIndexer(SearchIndexer indexer)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createIndexer(SearchIndexer indexer)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.createIndexer*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Creates a new Azure Cognitive Search indexer.


    **Code Sample**


    Create search indexer named "searchIndexer".


    ```java

    SearchIndexer searchIndexer = new SearchIndexer("searchIndexer", "dataSource",
         "searchIndex");
     SearchIndexer indexerFromService = searchIndexerClient.createIndexer(searchIndexer);
     System.out.printf("The indexer name is %s. The etag of indexer is %s.%n", indexerFromService.getName(),
         indexerFromService.getETag());
    ```
  syntax:
    content: public SearchIndexer createIndexer(SearchIndexer indexer)
    parameters:
    - id: indexer
      type: com.azure.search.documents.indexes.models.SearchIndexer
      description: definition of the indexer to create.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexer
      description: the created Indexer.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createIndexerWithResponse(com.azure.search.documents.indexes.models.SearchIndexer,com.azure.core.util.Context)
  id: createIndexerWithResponse(com.azure.search.documents.indexes.models.SearchIndexer,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: createIndexerWithResponse(SearchIndexer indexer, Context context)
  nameWithType: SearchIndexerClient.createIndexerWithResponse(SearchIndexer indexer, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createIndexerWithResponse(SearchIndexer indexer, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.createIndexerWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: "Creates a new Azure Cognitive Search indexer.\n\n**Code Sample**\n\nCreate search indexer named \"searchIndexer\".\n\n```java\nSearchIndexer searchIndexer = new SearchIndexer(\"searchIndexer\", \"dataSource\",\n     \"searchIndex\");\n Response<SearchIndexer> indexerFromServiceResponse = searchIndexerClient.createIndexerWithResponse(\n     searchIndexer, new Context(key1, value1));\n \n System.out.printf(\"The status code of the response is %s. The indexer name is %s.%n\",\n     indexerFromServiceResponse.getStatusCode(), indexerFromServiceResponse.getValue().getName());\n```"
  syntax:
    content: public Response<SearchIndexer> createIndexerWithResponse(SearchIndexer indexer, Context context)
    parameters:
    - id: indexer
      type: com.azure.search.documents.indexes.models.SearchIndexer
      description: definition of the indexer to create
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexer>
      description: a response containing the created Indexer.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnection(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection)
  id: createOrUpdateDataSourceConnection(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: createOrUpdateDataSourceConnection(SearchIndexerDataSourceConnection dataSourceConnection)
  nameWithType: SearchIndexerClient.createOrUpdateDataSourceConnection(SearchIndexerDataSourceConnection dataSourceConnection)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnection(SearchIndexerDataSourceConnection dataSourceConnection)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnection*
  type: Method
  package: com.azure.search.documents.indexes
  summary: "Creates a new Azure Cognitive Search data source or updates a data source if it already exists\n\n**Code Sample**\n\nCreate or update search indexer data source connection named \"dataSource\".\n\n```java\nSearchIndexerDataSourceConnection dataSource = searchIndexerClient.getDataSourceConnection(\"dataSource\");\n dataSource.setContainer(new SearchIndexerDataContainer(\"updatecontainer\"));\n \n SearchIndexerDataSourceConnection updateDataSource = searchIndexerClient.createOrUpdateDataSourceConnection(dataSource);\n System.out.printf(\"The dataSource name is %s. The container name of dataSource is %s.%n\",\n     updateDataSource.getName(), updateDataSource.getContainer().getName());\n```"
  syntax:
    content: public SearchIndexerDataSourceConnection createOrUpdateDataSourceConnection(SearchIndexerDataSourceConnection dataSourceConnection)
    parameters:
    - id: dataSourceConnection
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: The definition of the data source to create or update.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: the data source that was created or updated.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection,boolean,com.azure.core.util.Context)
  id: createOrUpdateDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection,boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, boolean onlyIfUnchanged, Context context)
  nameWithType: SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, boolean onlyIfUnchanged, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, boolean onlyIfUnchanged, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: "Creates a new Azure Cognitive Search data source or updates a data source if it already exists.\n\n**Code Sample**\n\nCreate or update search indexer data source connection named \"dataSource\".\n\n```java\nSearchIndexerDataSourceConnection dataSource = searchIndexerClient.getDataSourceConnection(\"dataSource\");\n dataSource.setContainer(new SearchIndexerDataContainer(\"updatecontainer\"));\n \n Response<SearchIndexerDataSourceConnection> updateDataSource = searchIndexerClient\n     .createOrUpdateDataSourceConnectionWithResponse(dataSource, true, new Context(key1, value1));\n System.out.printf(\"The status code of the response is %s.%nThe dataSource name is %s. \"\n     + \"The container name of dataSource is %s.%n\", updateDataSource.getStatusCode(),\n     updateDataSource.getValue().getName(), updateDataSource.getValue().getContainer().getName());\n```"
  syntax:
    content: public Response<SearchIndexerDataSourceConnection> createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, boolean onlyIfUnchanged, Context context)
    parameters:
    - id: dataSourceConnection
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: the <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> to create or update
    - id: onlyIfUnchanged
      type: boolean
      description: >-
        <code>true</code> to update if the <code>dataSourceConnection</code> is the same as the current
         service value.
         <code>false</code> to always update existing value.
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection>
      description: a response containing data source that was created or updated.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexer(com.azure.search.documents.indexes.models.SearchIndexer)
  id: createOrUpdateIndexer(com.azure.search.documents.indexes.models.SearchIndexer)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: createOrUpdateIndexer(SearchIndexer indexer)
  nameWithType: SearchIndexerClient.createOrUpdateIndexer(SearchIndexer indexer)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexer(SearchIndexer indexer)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexer*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Creates a new Azure Cognitive Search indexer or updates an indexer if it already exists.


    **Code Sample**


    Create or update search indexer named "searchIndexer".


    ```java

    SearchIndexer searchIndexerFromService = searchIndexerClient.getIndexer("searchIndexer");
     searchIndexerFromService.setFieldMappings(Collections.singletonList(
         new FieldMapping("hotelName").setTargetFieldName("HotelName")));
     SearchIndexer updateIndexer = searchIndexerClient.createOrUpdateIndexer(searchIndexerFromService);
     System.out.printf("The indexer name is %s. The target field name of indexer is %s.%n",
         updateIndexer.getName(), updateIndexer.getFieldMappings().get(0).getTargetFieldName());
    ```
  syntax:
    content: public SearchIndexer createOrUpdateIndexer(SearchIndexer indexer)
    parameters:
    - id: indexer
      type: com.azure.search.documents.indexes.models.SearchIndexer
      description: The definition of the indexer to create or update.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexer
      description: a response containing the created Indexer.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexerWithResponse(com.azure.search.documents.indexes.models.SearchIndexer,boolean,com.azure.core.util.Context)
  id: createOrUpdateIndexerWithResponse(com.azure.search.documents.indexes.models.SearchIndexer,boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: createOrUpdateIndexerWithResponse(SearchIndexer indexer, boolean onlyIfUnchanged, Context context)
  nameWithType: SearchIndexerClient.createOrUpdateIndexerWithResponse(SearchIndexer indexer, boolean onlyIfUnchanged, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexerWithResponse(SearchIndexer indexer, boolean onlyIfUnchanged, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexerWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Creates a new Azure Cognitive Search indexer or updates an indexer if it already exists.


    **Code Sample**


    Create or update search indexer named "searchIndexer".


    ```java

    SearchIndexer searchIndexerFromService = searchIndexerClient.getIndexer("searchIndexer");
     searchIndexerFromService.setFieldMappings(Collections.singletonList(
         new FieldMapping("hotelName").setTargetFieldName("HotelName")));
     Response<SearchIndexer> indexerFromService = searchIndexerClient.createOrUpdateIndexerWithResponse(
         searchIndexerFromService, true, new Context(key1, value1));
     System.out.printf("The status code of the response is %s.%nThe indexer name is %s. "
         + "The target field name of indexer is %s.%n", indexerFromService.getStatusCode(),
         indexerFromService.getValue().getName(),
         indexerFromService.getValue().getFieldMappings().get(0).getTargetFieldName());
    ```
  syntax:
    content: public Response<SearchIndexer> createOrUpdateIndexerWithResponse(SearchIndexer indexer, boolean onlyIfUnchanged, Context context)
    parameters:
    - id: indexer
      type: com.azure.search.documents.indexes.models.SearchIndexer
      description: The <xref uid="com.azure.search.documents.indexes.models.SearchIndexer" data-throw-if-not-resolved="false">SearchIndexer</xref> to create or update.
    - id: onlyIfUnchanged
      type: boolean
      description: >-
        <code>true</code> to update if the <code>indexer</code> is the same as the current service value.
         <code>false</code> to always update existing value.
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexer>
      description: A response object containing the Indexer.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateSkillset(com.azure.search.documents.indexes.models.SearchIndexerSkillset)
  id: createOrUpdateSkillset(com.azure.search.documents.indexes.models.SearchIndexerSkillset)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: createOrUpdateSkillset(SearchIndexerSkillset skillset)
  nameWithType: SearchIndexerClient.createOrUpdateSkillset(SearchIndexerSkillset skillset)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateSkillset(SearchIndexerSkillset skillset)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateSkillset*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Creates a new Azure Cognitive Search skillset or updates a skillset if it already exists.


    **Code Sample**


    Create or update search indexer skillset "searchIndexerSkillset".


    ```java

    SearchIndexerSkillset indexerSkillset = searchIndexerClient.getSkillset("searchIndexerSkilset");
     indexerSkillset.setDescription("This is new description!");
     SearchIndexerSkillset updateSkillset = searchIndexerClient.createOrUpdateSkillset(indexerSkillset);
     System.out.printf("The indexer skillset name is %s. The description of indexer skillset is %s.%n",
         updateSkillset.getName(), updateSkillset.getDescription());
    ```
  syntax:
    content: public SearchIndexerSkillset createOrUpdateSkillset(SearchIndexerSkillset skillset)
    parameters:
    - id: skillset
      type: com.azure.search.documents.indexes.models.SearchIndexerSkillset
      description: the <xref uid="com.azure.search.documents.indexes.models.SearchIndexerSkillset" data-throw-if-not-resolved="false">SearchIndexerSkillset</xref> to create or update.
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerSkillset
      description: the skillset that was created or updated.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateSkillsetWithResponse(com.azure.search.documents.indexes.models.SearchIndexerSkillset,boolean,com.azure.core.util.Context)
  id: createOrUpdateSkillsetWithResponse(com.azure.search.documents.indexes.models.SearchIndexerSkillset,boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: createOrUpdateSkillsetWithResponse(SearchIndexerSkillset skillset, boolean onlyIfUnchanged, Context context)
  nameWithType: SearchIndexerClient.createOrUpdateSkillsetWithResponse(SearchIndexerSkillset skillset, boolean onlyIfUnchanged, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateSkillsetWithResponse(SearchIndexerSkillset skillset, boolean onlyIfUnchanged, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateSkillsetWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Creates a new Azure Cognitive Search skillset or updates a skillset if it already exists.


    **Code Sample**


    Create or update search indexer skillset "searchIndexerSkillset".


    ```java

    SearchIndexerSkillset indexerSkillset = searchIndexerClient.getSkillset("searchIndexerSkilset");
     indexerSkillset.setDescription("This is new description!");
     Response<SearchIndexerSkillset> updateSkillsetResponse = searchIndexerClient.createOrUpdateSkillsetWithResponse(
         indexerSkillset, true, new Context(key1, value1));
     System.out.printf("The status code of the response is %s.%nThe indexer skillset name is %s. "
             + "The description of indexer skilset is %s.%n", updateSkillsetResponse.getStatusCode(),
         updateSkillsetResponse.getValue().getName(),
         updateSkillsetResponse.getValue().getDescription());
    ```
  syntax:
    content: public Response<SearchIndexerSkillset> createOrUpdateSkillsetWithResponse(SearchIndexerSkillset skillset, boolean onlyIfUnchanged, Context context)
    parameters:
    - id: skillset
      type: com.azure.search.documents.indexes.models.SearchIndexerSkillset
      description: the <xref uid="com.azure.search.documents.indexes.models.SearchIndexerSkillset" data-throw-if-not-resolved="false">SearchIndexerSkillset</xref> to create or update.
    - id: onlyIfUnchanged
      type: boolean
      description: >-
        <code>true</code> to update if the <code>skillset</code> is the same as the current service value.
         <code>false</code> to always update existing value.
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexerSkillset>
      description: a response containing the skillset that was created or updated.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createSkillset(com.azure.search.documents.indexes.models.SearchIndexerSkillset)
  id: createSkillset(com.azure.search.documents.indexes.models.SearchIndexerSkillset)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: createSkillset(SearchIndexerSkillset skillset)
  nameWithType: SearchIndexerClient.createSkillset(SearchIndexerSkillset skillset)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createSkillset(SearchIndexerSkillset skillset)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.createSkillset*
  type: Method
  package: com.azure.search.documents.indexes
  summary: "Creates a new skillset in an Azure Cognitive Search service.\n\n**Code Sample**\n\nCreate search indexer skillset \"searchIndexerSkillset\".\n\n```java\nList<InputFieldMappingEntry> inputs = Collections.singletonList(\n     new InputFieldMappingEntry(\"image\")\n         .setSource(\"/document/normalized_images/*\")\n );\n \n List<OutputFieldMappingEntry> outputs = Arrays.asList(\n     new OutputFieldMappingEntry(\"text\")\n         .setTargetName(\"mytext\"),\n     new OutputFieldMappingEntry(\"layoutText\")\n         .setTargetName(\"myLayoutText\")\n );\n SearchIndexerSkillset searchIndexerSkillset = new SearchIndexerSkillset(\"searchIndexerSkillset\",\n     Collections.singletonList(new OcrSkill(inputs, outputs)\n         .setShouldDetectOrientation(true)\n         .setDefaultLanguageCode(null)\n         .setName(\"myocr\")\n         .setDescription(\"Extracts text (plain and structured) from image.\")\n         .setContext(\"/document/normalized_images/*\")));\n SearchIndexerSkillset skillset = searchIndexerClient.createSkillset(searchIndexerSkillset);\n System.out.printf(\"The indexer skillset name is %s. The etag of indexer skillset is %s.%n\",\n     skillset.getName(), skillset.getETag());\n```"
  syntax:
    content: public SearchIndexerSkillset createSkillset(SearchIndexerSkillset skillset)
    parameters:
    - id: skillset
      type: com.azure.search.documents.indexes.models.SearchIndexerSkillset
      description: definition of the skillset containing one or more cognitive skills
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerSkillset
      description: the created SearchIndexerSkillset.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createSkillsetWithResponse(com.azure.search.documents.indexes.models.SearchIndexerSkillset,com.azure.core.util.Context)
  id: createSkillsetWithResponse(com.azure.search.documents.indexes.models.SearchIndexerSkillset,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: createSkillsetWithResponse(SearchIndexerSkillset skillset, Context context)
  nameWithType: SearchIndexerClient.createSkillsetWithResponse(SearchIndexerSkillset skillset, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createSkillsetWithResponse(SearchIndexerSkillset skillset, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.createSkillsetWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: "Creates a new skillset in an Azure Cognitive Search service.\n\n**Code Sample**\n\nCreate search indexer skillset \"searchIndexerSkillset\".\n\n```java\nList<InputFieldMappingEntry> inputs = Collections.singletonList(\n     new InputFieldMappingEntry(\"image\")\n         .setSource(\"/document/normalized_images/*\")\n );\n \n List<OutputFieldMappingEntry> outputs = Arrays.asList(\n     new OutputFieldMappingEntry(\"text\")\n         .setTargetName(\"mytext\"),\n     new OutputFieldMappingEntry(\"layoutText\")\n         .setTargetName(\"myLayoutText\")\n );\n SearchIndexerSkillset searchIndexerSkillset = new SearchIndexerSkillset(\"searchIndexerSkillset\",\n     Collections.singletonList(new OcrSkill(inputs, outputs)\n         .setShouldDetectOrientation(true)\n         .setDefaultLanguageCode(null)\n         .setName(\"myocr\")\n         .setDescription(\"Extracts text (plain and structured) from image.\")\n         .setContext(\"/document/normalized_images/*\")));\n Response<SearchIndexerSkillset> skillsetWithResponse =\n     searchIndexerClient.createSkillsetWithResponse(searchIndexerSkillset, new Context(key1, value1));\n System.out.printf(\"The status code of the response is %s. The indexer skillset name is %s.%n\",\n     skillsetWithResponse.getStatusCode(), skillsetWithResponse.getValue().getName());\n```"
  syntax:
    content: public Response<SearchIndexerSkillset> createSkillsetWithResponse(SearchIndexerSkillset skillset, Context context)
    parameters:
    - id: skillset
      type: com.azure.search.documents.indexes.models.SearchIndexerSkillset
      description: definition of the skillset containing one or more cognitive skills
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexerSkillset>
      description: a response containing the created SearchIndexerSkillset.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.deleteDataSourceConnection(java.lang.String)
  id: deleteDataSourceConnection(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: deleteDataSourceConnection(String dataSourceConnectionName)
  nameWithType: SearchIndexerClient.deleteDataSourceConnection(String dataSourceConnectionName)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.deleteDataSourceConnection(String dataSourceConnectionName)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.deleteDataSourceConnection*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Delete a DataSource


    **Code Sample**


    Delete all search indexer data source connection named "dataSource".


    ```java

    searchIndexerClient.deleteDataSourceConnection("dataSource");

    ```
  syntax:
    content: public void deleteDataSourceConnection(String dataSourceConnectionName)
    parameters:
    - id: dataSourceConnectionName
      type: java.lang.String
      description: the name of the data source to be deleted
- uid: com.azure.search.documents.indexes.SearchIndexerClient.deleteDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection,boolean,com.azure.core.util.Context)
  id: deleteDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection,boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: deleteDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, boolean onlyIfUnchanged, Context context)
  nameWithType: SearchIndexerClient.deleteDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, boolean onlyIfUnchanged, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.deleteDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, boolean onlyIfUnchanged, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.deleteDataSourceConnectionWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Delete a DataSource with Response


    **Code Sample**


    Delete all search indexer data source connection named "dataSource".


    ```java

    SearchIndexerDataSourceConnection dataSource =
         searchIndexerClient.getDataSourceConnection("dataSource");
     Response<Void> deleteResponse = searchIndexerClient.deleteDataSourceConnectionWithResponse(dataSource, true,
         new Context(key1, value1));
     System.out.printf("The status code of the response is %d.%n", deleteResponse.getStatusCode());
    ```
  syntax:
    content: public Response<Void> deleteDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, boolean onlyIfUnchanged, Context context)
    parameters:
    - id: dataSourceConnection
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: the <xref uid="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> to be deleted.
    - id: onlyIfUnchanged
      type: boolean
      description: >-
        <code>true</code> to delete if the <code>dataSourceConnection</code> is the same as the current
         service value.
         <code>false</code> to always delete existing value.
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: an empty response
- uid: com.azure.search.documents.indexes.SearchIndexerClient.deleteIndexer(java.lang.String)
  id: deleteIndexer(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: deleteIndexer(String indexerName)
  nameWithType: SearchIndexerClient.deleteIndexer(String indexerName)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.deleteIndexer(String indexerName)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.deleteIndexer*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Deletes an Azure Cognitive Search indexer.


    **Code Sample**


    Delete search indexer named "searchIndexer".


    ```java

    searchIndexerClient.deleteIndexer("searchIndexer");

    ```
  syntax:
    content: public void deleteIndexer(String indexerName)
    parameters:
    - id: indexerName
      type: java.lang.String
      description: the name of the indexer to delete
- uid: com.azure.search.documents.indexes.SearchIndexerClient.deleteIndexerWithResponse(com.azure.search.documents.indexes.models.SearchIndexer,boolean,com.azure.core.util.Context)
  id: deleteIndexerWithResponse(com.azure.search.documents.indexes.models.SearchIndexer,boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: deleteIndexerWithResponse(SearchIndexer indexer, boolean onlyIfUnchanged, Context context)
  nameWithType: SearchIndexerClient.deleteIndexerWithResponse(SearchIndexer indexer, boolean onlyIfUnchanged, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.deleteIndexerWithResponse(SearchIndexer indexer, boolean onlyIfUnchanged, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.deleteIndexerWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Deletes an Azure Cognitive Search indexer.


    **Code Sample**


    Delete search indexe named "searchIndexer".


    ```java

    SearchIndexer searchIndexer = searchIndexerClient.getIndexer("searchIndexer");
     Response<Void> deleteResponse = searchIndexerClient.deleteIndexerWithResponse(searchIndexer, true,
         new Context(key1, value1));
     System.out.printf("The status code of the response is %d.%n", deleteResponse.getStatusCode());
    ```
  syntax:
    content: public Response<Void> deleteIndexerWithResponse(SearchIndexer indexer, boolean onlyIfUnchanged, Context context)
    parameters:
    - id: indexer
      type: com.azure.search.documents.indexes.models.SearchIndexer
      description: the search <xref uid="com.azure.search.documents.indexes.models.SearchIndexer" data-throw-if-not-resolved="false">SearchIndexer</xref>
    - id: onlyIfUnchanged
      type: boolean
      description: >-
        <code>true</code> to delete if the <code>indexer</code> is the same as the current service value.
         <code>false</code> to always delete existing value.
    - id: context
      type: com.azure.core.util.Context
      description: the context
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: a response signalling completion.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.deleteSkillset(java.lang.String)
  id: deleteSkillset(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: deleteSkillset(String skillsetName)
  nameWithType: SearchIndexerClient.deleteSkillset(String skillsetName)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.deleteSkillset(String skillsetName)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.deleteSkillset*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Deletes a cognitive skillset in an Azure Cognitive Search service.


    **Code Sample**


    Delete search indexer skillset "searchIndexerSkillset".


    ```java

    searchIndexerClient.deleteSkillset("searchIndexerSkillset");

    ```
  syntax:
    content: public void deleteSkillset(String skillsetName)
    parameters:
    - id: skillsetName
      type: java.lang.String
      description: the name of the skillset to delete
- uid: com.azure.search.documents.indexes.SearchIndexerClient.deleteSkillsetWithResponse(com.azure.search.documents.indexes.models.SearchIndexerSkillset,boolean,com.azure.core.util.Context)
  id: deleteSkillsetWithResponse(com.azure.search.documents.indexes.models.SearchIndexerSkillset,boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: deleteSkillsetWithResponse(SearchIndexerSkillset skillset, boolean onlyIfUnchanged, Context context)
  nameWithType: SearchIndexerClient.deleteSkillsetWithResponse(SearchIndexerSkillset skillset, boolean onlyIfUnchanged, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.deleteSkillsetWithResponse(SearchIndexerSkillset skillset, boolean onlyIfUnchanged, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.deleteSkillsetWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Deletes a cognitive skillset in an Azure Cognitive Search service.


    **Code Sample**


    Delete search indexer skillset "searchIndexerSkillset".


    ```java

    SearchIndexerSkillset searchIndexerSkilset = searchIndexerClient.getSkillset("searchIndexerSkilset");
     Response<Void> deleteResponse = searchIndexerClient.deleteSkillsetWithResponse(searchIndexerSkilset, true,
         new Context(key1, value1));
     System.out.printf("The status code of the response is %d.%n", deleteResponse.getStatusCode());
    ```
  syntax:
    content: public Response<Void> deleteSkillsetWithResponse(SearchIndexerSkillset skillset, boolean onlyIfUnchanged, Context context)
    parameters:
    - id: skillset
      type: com.azure.search.documents.indexes.models.SearchIndexerSkillset
      description: the <xref uid="com.azure.search.documents.indexes.models.SearchIndexerSkillset" data-throw-if-not-resolved="false">SearchIndexerSkillset</xref> to delete.
    - id: onlyIfUnchanged
      type: boolean
      description: >-
        <code>true</code> to delete if the <code>skillset</code> is the same as the current service value.
         <code>false</code> to always delete existing value.
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: a response signalling completion.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getDataSourceConnection(java.lang.String)
  id: getDataSourceConnection(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: getDataSourceConnection(String dataSourceConnectionName)
  nameWithType: SearchIndexerClient.getDataSourceConnection(String dataSourceConnectionName)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getDataSourceConnection(String dataSourceConnectionName)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.getDataSourceConnection*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Retrieves a DataSource from an Azure Cognitive Search service.


    **Code Sample**


    Get search indexer data source connection named "dataSource".


    ```java

    SearchIndexerDataSourceConnection dataSource =
         searchIndexerClient.getDataSourceConnection("dataSource");
     System.out.printf("The dataSource name is %s. The etag of dataSource is %s.%n", dataSource.getName(),
         dataSource.getETag());
    ```
  syntax:
    content: public SearchIndexerDataSourceConnection getDataSourceConnection(String dataSourceConnectionName)
    parameters:
    - id: dataSourceConnectionName
      type: java.lang.String
      description: the name of the data source to retrieve
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
      description: the DataSource.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getDataSourceConnectionWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getDataSourceConnectionWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: getDataSourceConnectionWithResponse(String dataSourceConnectionName, Context context)
  nameWithType: SearchIndexerClient.getDataSourceConnectionWithResponse(String dataSourceConnectionName, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getDataSourceConnectionWithResponse(String dataSourceConnectionName, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.getDataSourceConnectionWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: "Retrieves a DataSource from an Azure Cognitive Search service.\n\n**Code Sample**\n\nGet search indexer data source connection named \"dataSource\".\n\n```java\nResponse<SearchIndexerDataSourceConnection> dataSource =\n     searchIndexerClient.getDataSourceConnectionWithResponse(\n         \"dataSource\", new Context(key1, value1));\n \n System.out.printf(\"The status code of the response is %s. The data source name is %s.%n\",\n     dataSource.getStatusCode(), dataSource.getValue().getName());\n```"
  syntax:
    content: public Response<SearchIndexerDataSourceConnection> getDataSourceConnectionWithResponse(String dataSourceConnectionName, Context context)
    parameters:
    - id: dataSourceConnectionName
      type: java.lang.String
      description: the name of the data source to retrieve
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection>
      description: a response containing the DataSource.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getEndpoint()
  id: getEndpoint()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: getEndpoint()
  nameWithType: SearchIndexerClient.getEndpoint()
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getEndpoint()
  overload: com.azure.search.documents.indexes.SearchIndexerClient.getEndpoint*
  type: Method
  package: com.azure.search.documents.indexes
  summary: Gets the endpoint for the Azure Cognitive Search service.
  syntax:
    content: public String getEndpoint()
    return:
      type: java.lang.String
      description: the endpoint value.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getIndexer(java.lang.String)
  id: getIndexer(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: getIndexer(String indexerName)
  nameWithType: SearchIndexerClient.getIndexer(String indexerName)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getIndexer(String indexerName)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.getIndexer*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Retrieves an indexer definition.


    **Code Sample**


    Get search indexer with name "searchIndexer".


    ```java

    SearchIndexer indexerFromService =
         searchIndexerClient.getIndexer("searchIndexer");
     System.out.printf("The indexer name is %s. The etag of indexer is %s.%n", indexerFromService.getName(),
         indexerFromService.getETag());
    ```
  syntax:
    content: public SearchIndexer getIndexer(String indexerName)
    parameters:
    - id: indexerName
      type: java.lang.String
      description: the name of the indexer to retrieve
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexer
      description: the indexer.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerStatus(java.lang.String)
  id: getIndexerStatus(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: getIndexerStatus(String indexerName)
  nameWithType: SearchIndexerClient.getIndexerStatus(String indexerName)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerStatus(String indexerName)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerStatus*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Returns the current status and execution history of an indexer.


    **Code Sample**


    Get search indexer status.


    ```java

    SearchIndexerStatus indexerStatus = searchIndexerClient.getIndexerStatus("searchIndexer");
     System.out.printf("The indexer status is %s.%n", indexerStatus.getStatus());
    ```
  syntax:
    content: public SearchIndexerStatus getIndexerStatus(String indexerName)
    parameters:
    - id: indexerName
      type: java.lang.String
      description: the name of the indexer for which to retrieve status
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerStatus
      description: a response with the indexer execution info.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerStatusWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getIndexerStatusWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: getIndexerStatusWithResponse(String indexerName, Context context)
  nameWithType: SearchIndexerClient.getIndexerStatusWithResponse(String indexerName, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerStatusWithResponse(String indexerName, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerStatusWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Returns the current status and execution history of an indexer.


    **Code Sample**


    Get search indexer status.


    ```java

    Response<SearchIndexerStatus> response = searchIndexerClient.getIndexerStatusWithResponse("searchIndexer",
         new Context(key1, value1));
     System.out.printf("The status code of the response is %s.%nThe indexer status is %s.%n",
         response.getStatusCode(), response.getValue().getStatus());
    ```
  syntax:
    content: public Response<SearchIndexerStatus> getIndexerStatusWithResponse(String indexerName, Context context)
    parameters:
    - id: indexerName
      type: java.lang.String
      description: the name of the indexer for which to retrieve status
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexerStatus>
      description: a response with the indexer execution info.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getIndexerWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: getIndexerWithResponse(String indexerName, Context context)
  nameWithType: SearchIndexerClient.getIndexerWithResponse(String indexerName, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerWithResponse(String indexerName, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: "Retrieves an indexer definition.\n\n**Code Sample**\n\nGet search indexer with name \"searchIndexer\".\n\n```java\nResponse<SearchIndexer> indexerFromServiceResponse = searchIndexerClient.getIndexerWithResponse(\n     \"searchIndexer\", new Context(key1, value1));\n \n System.out.printf(\"The status code of the response is %s. The indexer name is %s.%n\",\n     indexerFromServiceResponse.getStatusCode(), indexerFromServiceResponse.getValue().getName());\n```"
  syntax:
    content: public Response<SearchIndexer> getIndexerWithResponse(String indexerName, Context context)
    parameters:
    - id: indexerName
      type: java.lang.String
      description: the name of the indexer to retrieve
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexer>
      description: a response containing the indexer.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getSkillset(java.lang.String)
  id: getSkillset(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: getSkillset(String skillsetName)
  nameWithType: SearchIndexerClient.getSkillset(String skillsetName)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getSkillset(String skillsetName)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.getSkillset*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Retrieves a skillset definition.


    **Code Sample**


    Get search indexer skillset "searchIndexerSkillset".


    ```java

    SearchIndexerSkillset indexerSkillset =
         searchIndexerClient.getSkillset("searchIndexerSkillset");
     System.out.printf("The indexer skillset name is %s. The etag of indexer skillset is %s.%n",
         indexerSkillset.getName(), indexerSkillset.getETag());
    ```
  syntax:
    content: public SearchIndexerSkillset getSkillset(String skillsetName)
    parameters:
    - id: skillsetName
      type: java.lang.String
      description: the name of the skillset to retrieve
    return:
      type: com.azure.search.documents.indexes.models.SearchIndexerSkillset
      description: the SearchIndexerSkillset.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getSkillsetWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getSkillsetWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: getSkillsetWithResponse(String skillsetName, Context context)
  nameWithType: SearchIndexerClient.getSkillsetWithResponse(String skillsetName, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getSkillsetWithResponse(String skillsetName, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.getSkillsetWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: "Retrieves a skillset definition.\n\n**Code Sample**\n\nGet search indexer skillset \"searchIndexerSkillset\".\n\n```java\nResponse<SearchIndexerSkillset> skillsetWithResponse = searchIndexerClient.getSkillsetWithResponse(\n     \"searchIndexerSkillset\", new Context(key1, value1));\n \n System.out.printf(\"The status code of the response is %s. The indexer skillset name is %s.%n\",\n     skillsetWithResponse.getStatusCode(), skillsetWithResponse.getValue().getName());\n```"
  syntax:
    content: public Response<SearchIndexerSkillset> getSkillsetWithResponse(String skillsetName, Context context)
    parameters:
    - id: skillsetName
      type: java.lang.String
      description: the name of the skillset to retrieve
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexerSkillset>
      description: a response containing the SearchIndexerSkillset.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnectionNames()
  id: listDataSourceConnectionNames()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: listDataSourceConnectionNames()
  nameWithType: SearchIndexerClient.listDataSourceConnectionNames()
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnectionNames()
  overload: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnectionNames*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    List all DataSource names from an Azure Cognitive Search service.


    **Code Sample**


    List all search indexer data source connection names.


    ```java

    PagedIterable<String> dataSources = searchIndexerClient.listDataSourceConnectionNames();
     for (String dataSourceName: dataSources) {
         System.out.printf("The dataSource name is %s.%n", dataSourceName);
     }
    ```
  syntax:
    content: public PagedIterable<String> listDataSourceConnectionNames()
    return:
      type: com.azure.core.http.rest.PagedIterable<java.lang.String>
      description: a list of DataSources names
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnectionNames(com.azure.core.util.Context)
  id: listDataSourceConnectionNames(com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: listDataSourceConnectionNames(Context context)
  nameWithType: SearchIndexerClient.listDataSourceConnectionNames(Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnectionNames(Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnectionNames*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    List all DataSources names from an Azure Cognitive Search service.


    **Code Sample**


    List all search indexer data source connection names.


    ```java

    PagedIterable<String> dataSources = searchIndexerClient.listDataSourceConnectionNames(new Context(key1, value1));
     System.out.println("The status code of the response is"
         + dataSources.iterableByPage().iterator().next().getStatusCode());
     for (String dataSourceName: dataSources) {
         System.out.printf("The dataSource name is %s.%n", dataSourceName);
     }
    ```
  syntax:
    content: public PagedIterable<String> listDataSourceConnectionNames(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<java.lang.String>
      description: a response containing the list of DataSource names.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnections()
  id: listDataSourceConnections()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: listDataSourceConnections()
  nameWithType: SearchIndexerClient.listDataSourceConnections()
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnections()
  overload: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnections*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    List all DataSources from an Azure Cognitive Search service.


    **Code Sample**


    List all search indexer data source connections.


    ```java

    PagedIterable<SearchIndexerDataSourceConnection> dataSources = searchIndexerClient.listDataSourceConnections();
     for (SearchIndexerDataSourceConnection dataSource: dataSources) {
         System.out.printf("The dataSource name is %s. The etag of dataSource is %s.%n", dataSource.getName(),
             dataSource.getETag());
     }
    ```
  syntax:
    content: public PagedIterable<SearchIndexerDataSourceConnection> listDataSourceConnections()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection>
      description: a list of DataSources
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnections(com.azure.core.util.Context)
  id: listDataSourceConnections(com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: listDataSourceConnections(Context context)
  nameWithType: SearchIndexerClient.listDataSourceConnections(Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnections(Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnections*
  type: Method
  package: com.azure.search.documents.indexes
  summary: "List all DataSources from an Azure Cognitive Search service.\n\n**Code Sample**\n\nList all search indexer data source connections.\n\n```java\nPagedIterable<SearchIndexerDataSourceConnection> dataSources =\n     searchIndexerClient.listDataSourceConnections(new Context(key1, value1));\n \n System.out.println(\"The status code of the response is\"\n     + dataSources.iterableByPage().iterator().next().getStatusCode());\n for (SearchIndexerDataSourceConnection dataSource: dataSources) {\n     System.out.printf(\"The dataSource name is %s. The etag of dataSource is %s.%n\",\n         dataSource.getName(), dataSource.getETag());\n }\n```"
  syntax:
    content: public PagedIterable<SearchIndexerDataSourceConnection> listDataSourceConnections(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection>
      description: a response containing the list of DataSources.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listIndexerNames()
  id: listIndexerNames()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: listIndexerNames()
  nameWithType: SearchIndexerClient.listIndexerNames()
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listIndexerNames()
  overload: com.azure.search.documents.indexes.SearchIndexerClient.listIndexerNames*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Lists all indexers names for an Azure Cognitive Search service.


    **Code Sample**


    List all search indexer names.


    ```java

    PagedIterable<String> indexers = searchIndexerClient.listIndexerNames();
     for (String indexerName: indexers) {
         System.out.printf("The indexer name is %s.%n", indexerName);
     }
    ```
  syntax:
    content: public PagedIterable<String> listIndexerNames()
    return:
      type: com.azure.core.http.rest.PagedIterable<java.lang.String>
      description: all Indexer names from the Search service .
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listIndexerNames(com.azure.core.util.Context)
  id: listIndexerNames(com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: listIndexerNames(Context context)
  nameWithType: SearchIndexerClient.listIndexerNames(Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listIndexerNames(Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.listIndexerNames*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Lists all indexers names for an Azure Cognitive Search service.


    **Code Sample**


    List all search indexer names.


    ```java

    PagedIterable<String> indexers = searchIndexerClient.listIndexerNames(new Context(key1, value1));
     System.out.println("The status code of the response is"
         + indexers.iterableByPage().iterator().next().getStatusCode());
     for (String indexerName: indexers) {
         System.out.printf("The indexer name is %s.%n", indexerName);
     }
    ```
  syntax:
    content: public PagedIterable<String> listIndexerNames(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.PagedIterable<java.lang.String>
      description: all Indexer names from the Search service.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listIndexers()
  id: listIndexers()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: listIndexers()
  nameWithType: SearchIndexerClient.listIndexers()
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listIndexers()
  overload: com.azure.search.documents.indexes.SearchIndexerClient.listIndexers*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Lists all indexers available for an Azure Cognitive Search service.


    **Code Sample**


    List all search indexers.


    ```java

    PagedIterable<SearchIndexer> indexers = searchIndexerClient.listIndexers();
     for (SearchIndexer indexer: indexers) {
         System.out.printf("The indexer name is %s. The etag of indexer is %s.%n", indexer.getName(),
             indexer.getETag());
     }
    ```
  syntax:
    content: public PagedIterable<SearchIndexer> listIndexers()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.search.documents.indexes.models.SearchIndexer>
      description: all Indexers from the Search service.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listIndexers(com.azure.core.util.Context)
  id: listIndexers(com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: listIndexers(Context context)
  nameWithType: SearchIndexerClient.listIndexers(Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listIndexers(Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.listIndexers*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Lists all indexers available for an Azure Cognitive Search service.


    **Code Sample**


    List all search indexers.


    ```java

    PagedIterable<SearchIndexer> indexers = searchIndexerClient.listIndexers(new Context(key1, value1));
     System.out.println("The status code of the response is"
         + indexers.iterableByPage().iterator().next().getStatusCode());
     for (SearchIndexer indexer: indexers) {
         System.out.printf("The indexer name is %s. The etag of index is %s.%n",
             indexer.getName(), indexer.getETag());
     }
    ```
  syntax:
    content: public PagedIterable<SearchIndexer> listIndexers(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.search.documents.indexes.models.SearchIndexer>
      description: all Indexers from the Search service.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsetNames()
  id: listSkillsetNames()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: listSkillsetNames()
  nameWithType: SearchIndexerClient.listSkillsetNames()
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsetNames()
  overload: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsetNames*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Lists all skillset names for an Azure Cognitive Search service.


    **Code Sample**


    List all search indexer skillset names.


    ```java

    PagedIterable<String> skillsetNames = searchIndexerClient.listSkillsetNames();
     for (String skillsetName: skillsetNames) {
         System.out.printf("The indexer skillset name is %s.%n", skillsetName);
     }
    ```
  syntax:
    content: public PagedIterable<String> listSkillsetNames()
    return:
      type: com.azure.core.http.rest.PagedIterable<java.lang.String>
      description: the list of skillset names.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsetNames(com.azure.core.util.Context)
  id: listSkillsetNames(com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: listSkillsetNames(Context context)
  nameWithType: SearchIndexerClient.listSkillsetNames(Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsetNames(Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsetNames*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Lists all skillset names for an Azure Cognitive Search service.


    **Code Sample**


    List all search indexer skillset names with response.


    ```java

    PagedIterable<String> skillsetNames = searchIndexerClient.listSkillsetNames(new Context(key1, value1));
     System.out.println("The status code of the response is"
         + skillsetNames.iterableByPage().iterator().next().getStatusCode());
     for (String skillsetName: skillsetNames) {
         System.out.printf("The indexer skillset name is %s.%n", skillsetName);
     }
    ```
  syntax:
    content: public PagedIterable<String> listSkillsetNames(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.PagedIterable<java.lang.String>
      description: the list of skillset names.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsets()
  id: listSkillsets()
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: listSkillsets()
  nameWithType: SearchIndexerClient.listSkillsets()
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsets()
  overload: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsets*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Lists all skillsets available for an Azure Cognitive Search service.


    **Code Sample**


    List all search indexer skillsets.


    ```java

    PagedIterable<SearchIndexerSkillset> indexerSkillsets = searchIndexerClient.listSkillsets();
     for (SearchIndexerSkillset skillset: indexerSkillsets) {
         System.out.printf("The skillset name is %s. The etag of skillset is %s.%n", skillset.getName(),
             skillset.getETag());
     }
    ```
  syntax:
    content: public PagedIterable<SearchIndexerSkillset> listSkillsets()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.search.documents.indexes.models.SearchIndexerSkillset>
      description: the list of skillsets.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsets(com.azure.core.util.Context)
  id: listSkillsets(com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: listSkillsets(Context context)
  nameWithType: SearchIndexerClient.listSkillsets(Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsets(Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsets*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Lists all skillsets available for an Azure Cognitive Search service.


    **Code Sample**


    List all search indexer skillsets.


    ```java

    PagedIterable<SearchIndexerSkillset> indexerSkillsets = searchIndexerClient.listSkillsets(new Context(key1, value1));
     System.out.println("The status code of the response is"
         + indexerSkillsets.iterableByPage().iterator().next().getStatusCode());
     for (SearchIndexerSkillset skillset: indexerSkillsets) {
         System.out.printf("The skillset name is %s. The etag of skillset is %s.%n",
             skillset.getName(), skillset.getETag());
     }
    ```
  syntax:
    content: public PagedIterable<SearchIndexerSkillset> listSkillsets(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.search.documents.indexes.models.SearchIndexerSkillset>
      description: the list of skillsets.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.resetIndexer(java.lang.String)
  id: resetIndexer(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: resetIndexer(String indexerName)
  nameWithType: SearchIndexerClient.resetIndexer(String indexerName)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.resetIndexer(String indexerName)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.resetIndexer*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Resets the change tracking state associated with an indexer.


    **Code Sample**


    Reset search indexer named "searchIndexer".


    ```java

    searchIndexerClient.resetIndexer("searchIndexer");

    ```
  syntax:
    content: public void resetIndexer(String indexerName)
    parameters:
    - id: indexerName
      type: java.lang.String
      description: the name of the indexer to reset
- uid: com.azure.search.documents.indexes.SearchIndexerClient.resetIndexerWithResponse(java.lang.String,com.azure.core.util.Context)
  id: resetIndexerWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: resetIndexerWithResponse(String indexerName, Context context)
  nameWithType: SearchIndexerClient.resetIndexerWithResponse(String indexerName, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.resetIndexerWithResponse(String indexerName, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.resetIndexerWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Resets the change tracking state associated with an indexer.


    **Code Sample**


    Reset search indexer named "searchIndexer".


    ```java

    Response<Void> response = searchIndexerClient.resetIndexerWithResponse("searchIndexer",
         new Context(key1, value1));
     System.out.println("The status code of the response is " + response.getStatusCode());
    ```
  syntax:
    content: public Response<Void> resetIndexerWithResponse(String indexerName, Context context)
    parameters:
    - id: indexerName
      type: java.lang.String
      description: the name of the indexer to reset
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: a response signalling completion.
- uid: com.azure.search.documents.indexes.SearchIndexerClient.runIndexer(java.lang.String)
  id: runIndexer(java.lang.String)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: runIndexer(String indexerName)
  nameWithType: SearchIndexerClient.runIndexer(String indexerName)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.runIndexer(String indexerName)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.runIndexer*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Runs an indexer on-demand.


    **Code Sample**


    Run search indexer named "searchIndexer".


    ```java

    searchIndexerClient.runIndexer("searchIndexer");

    ```
  syntax:
    content: public void runIndexer(String indexerName)
    parameters:
    - id: indexerName
      type: java.lang.String
      description: the name of the indexer to run
- uid: com.azure.search.documents.indexes.SearchIndexerClient.runIndexerWithResponse(java.lang.String,com.azure.core.util.Context)
  id: runIndexerWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.0.0
  parent: com.azure.search.documents.indexes.SearchIndexerClient
  langs:
  - java
  name: runIndexerWithResponse(String indexerName, Context context)
  nameWithType: SearchIndexerClient.runIndexerWithResponse(String indexerName, Context context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.runIndexerWithResponse(String indexerName, Context context)
  overload: com.azure.search.documents.indexes.SearchIndexerClient.runIndexerWithResponse*
  type: Method
  package: com.azure.search.documents.indexes
  summary: >-
    Runs an indexer on-demand.


    **Code Sample**


    Run search indexer named "searchIndexer".


    ```java

    Response<Void> response = searchIndexerClient.runIndexerWithResponse("searchIndexer",
         new Context(key1, value1));
     System.out.println("The status code of the response is " + response.getStatusCode());
    ```
  syntax:
    content: public Response<Void> runIndexerWithResponse(String indexerName, Context context)
    parameters:
    - id: indexerName
      type: java.lang.String
      description: the name of the indexer to run
    - id: context
      type: com.azure.core.util.Context
      description: additional context that is passed through the HTTP pipeline during the service call
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: a response signalling completion.
references:
- uid: com.azure.search.documents.indexes.SearchIndexerAsyncClient
  name: SearchIndexerAsyncClient
  nameWithType: SearchIndexerAsyncClient
  fullName: com.azure.search.documents.indexes.SearchIndexerAsyncClient
- uid: com.azure.search.documents.indexes.SearchIndexerClient.SearchIndexerClient*
  name: SearchIndexerClient
  nameWithType: SearchIndexerClient.SearchIndexerClient
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.SearchIndexerClient
  package: com.azure.search.documents.indexes
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getEndpoint*
  name: getEndpoint
  nameWithType: SearchIndexerClient.getEndpoint
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getEndpoint
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
  name: SearchIndexerDataSourceConnection
  nameWithType: SearchIndexerDataSourceConnection
  fullName: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnection*
  name: createOrUpdateDataSourceConnection
  nameWithType: SearchIndexerClient.createOrUpdateDataSourceConnection
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnection
  package: com.azure.search.documents.indexes
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
    name: SearchIndexerDataSourceConnection
    fullName: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse*
  name: createOrUpdateDataSourceConnectionWithResponse
  nameWithType: SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createDataSourceConnection*
  name: createDataSourceConnection
  nameWithType: SearchIndexerClient.createDataSourceConnection
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createDataSourceConnection
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createDataSourceConnectionWithResponse*
  name: createDataSourceConnectionWithResponse
  nameWithType: SearchIndexerClient.createDataSourceConnectionWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createDataSourceConnectionWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getDataSourceConnection*
  name: getDataSourceConnection
  nameWithType: SearchIndexerClient.getDataSourceConnection
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getDataSourceConnection
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getDataSourceConnectionWithResponse*
  name: getDataSourceConnectionWithResponse
  nameWithType: SearchIndexerClient.getDataSourceConnectionWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getDataSourceConnectionWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.core.http.rest.PagedIterable<com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
    name: SearchIndexerDataSourceConnection
    fullName: com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnections*
  name: listDataSourceConnections
  nameWithType: SearchIndexerClient.listDataSourceConnections
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnections
  package: com.azure.search.documents.indexes
- uid: com.azure.core.http.rest.PagedIterable<java.lang.String>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnectionNames*
  name: listDataSourceConnectionNames
  nameWithType: SearchIndexerClient.listDataSourceConnectionNames
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listDataSourceConnectionNames
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.deleteDataSourceConnection*
  name: deleteDataSourceConnection
  nameWithType: SearchIndexerClient.deleteDataSourceConnection
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.deleteDataSourceConnection
  package: com.azure.search.documents.indexes
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.SearchIndexerClient.deleteDataSourceConnectionWithResponse*
  name: deleteDataSourceConnectionWithResponse
  nameWithType: SearchIndexerClient.deleteDataSourceConnectionWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.deleteDataSourceConnectionWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.models.SearchIndexer
  name: SearchIndexer
  nameWithType: SearchIndexer
  fullName: com.azure.search.documents.indexes.models.SearchIndexer
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createIndexer*
  name: createIndexer
  nameWithType: SearchIndexerClient.createIndexer
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createIndexer
  package: com.azure.search.documents.indexes
- uid: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexer>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.SearchIndexer
    name: SearchIndexer
    fullName: com.azure.search.documents.indexes.models.SearchIndexer
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createIndexerWithResponse*
  name: createIndexerWithResponse
  nameWithType: SearchIndexerClient.createIndexerWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createIndexerWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexer*
  name: createOrUpdateIndexer
  nameWithType: SearchIndexerClient.createOrUpdateIndexer
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexer
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexerWithResponse*
  name: createOrUpdateIndexerWithResponse
  nameWithType: SearchIndexerClient.createOrUpdateIndexerWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexerWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.core.http.rest.PagedIterable<com.azure.search.documents.indexes.models.SearchIndexer>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.SearchIndexer
    name: SearchIndexer
    fullName: com.azure.search.documents.indexes.models.SearchIndexer
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listIndexers*
  name: listIndexers
  nameWithType: SearchIndexerClient.listIndexers
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listIndexers
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listIndexerNames*
  name: listIndexerNames
  nameWithType: SearchIndexerClient.listIndexerNames
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listIndexerNames
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getIndexer*
  name: getIndexer
  nameWithType: SearchIndexerClient.getIndexer
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getIndexer
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerWithResponse*
  name: getIndexerWithResponse
  nameWithType: SearchIndexerClient.getIndexerWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.deleteIndexer*
  name: deleteIndexer
  nameWithType: SearchIndexerClient.deleteIndexer
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.deleteIndexer
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.deleteIndexerWithResponse*
  name: deleteIndexerWithResponse
  nameWithType: SearchIndexerClient.deleteIndexerWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.deleteIndexerWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.resetIndexer*
  name: resetIndexer
  nameWithType: SearchIndexerClient.resetIndexer
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.resetIndexer
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.resetIndexerWithResponse*
  name: resetIndexerWithResponse
  nameWithType: SearchIndexerClient.resetIndexerWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.resetIndexerWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.runIndexer*
  name: runIndexer
  nameWithType: SearchIndexerClient.runIndexer
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.runIndexer
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.runIndexerWithResponse*
  name: runIndexerWithResponse
  nameWithType: SearchIndexerClient.runIndexerWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.runIndexerWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.models.SearchIndexerStatus
  name: SearchIndexerStatus
  nameWithType: SearchIndexerStatus
  fullName: com.azure.search.documents.indexes.models.SearchIndexerStatus
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerStatus*
  name: getIndexerStatus
  nameWithType: SearchIndexerClient.getIndexerStatus
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerStatus
  package: com.azure.search.documents.indexes
- uid: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexerStatus>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.SearchIndexerStatus
    name: SearchIndexerStatus
    fullName: com.azure.search.documents.indexes.models.SearchIndexerStatus
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerStatusWithResponse*
  name: getIndexerStatusWithResponse
  nameWithType: SearchIndexerClient.getIndexerStatusWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getIndexerStatusWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.models.SearchIndexerSkillset
  name: SearchIndexerSkillset
  nameWithType: SearchIndexerSkillset
  fullName: com.azure.search.documents.indexes.models.SearchIndexerSkillset
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createSkillset*
  name: createSkillset
  nameWithType: SearchIndexerClient.createSkillset
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createSkillset
  package: com.azure.search.documents.indexes
- uid: com.azure.core.http.rest.Response<com.azure.search.documents.indexes.models.SearchIndexerSkillset>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.SearchIndexerSkillset
    name: SearchIndexerSkillset
    fullName: com.azure.search.documents.indexes.models.SearchIndexerSkillset
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createSkillsetWithResponse*
  name: createSkillsetWithResponse
  nameWithType: SearchIndexerClient.createSkillsetWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createSkillsetWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getSkillset*
  name: getSkillset
  nameWithType: SearchIndexerClient.getSkillset
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getSkillset
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.getSkillsetWithResponse*
  name: getSkillsetWithResponse
  nameWithType: SearchIndexerClient.getSkillsetWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.getSkillsetWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.core.http.rest.PagedIterable<com.azure.search.documents.indexes.models.SearchIndexerSkillset>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.models.SearchIndexerSkillset
    name: SearchIndexerSkillset
    fullName: com.azure.search.documents.indexes.models.SearchIndexerSkillset
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsets*
  name: listSkillsets
  nameWithType: SearchIndexerClient.listSkillsets
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsets
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsetNames*
  name: listSkillsetNames
  nameWithType: SearchIndexerClient.listSkillsetNames
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.listSkillsetNames
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateSkillset*
  name: createOrUpdateSkillset
  nameWithType: SearchIndexerClient.createOrUpdateSkillset
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateSkillset
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateSkillsetWithResponse*
  name: createOrUpdateSkillsetWithResponse
  nameWithType: SearchIndexerClient.createOrUpdateSkillsetWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateSkillsetWithResponse
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.deleteSkillset*
  name: deleteSkillset
  nameWithType: SearchIndexerClient.deleteSkillset
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.deleteSkillset
  package: com.azure.search.documents.indexes
- uid: com.azure.search.documents.indexes.SearchIndexerClient.deleteSkillsetWithResponse*
  name: deleteSkillsetWithResponse
  nameWithType: SearchIndexerClient.deleteSkillsetWithResponse
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.deleteSkillsetWithResponse
  package: com.azure.search.documents.indexes
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
