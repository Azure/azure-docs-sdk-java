### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient
  id: AzureServiceClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.fluentcore
  children:
  - com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.<T,U>getLroFinalResultOrError(com.azure.core.util.polling.AsyncPollResponse<com.azure.core.management.polling.PollResult<T>,U>)
  - com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.<T,U>getLroResult(reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.AzureServiceClient(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,com.azure.core.management.AzureEnvironment)
  - com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getContext()
  - com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getDefaultPollInterval()
  - com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getHttpPipeline()
  - com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.mergeContext(com.azure.core.util.Context)
  langs:
  - java
  name: AzureServiceClient
  nameWithType: AzureServiceClient
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient
  type: Class
  package: com.azure.resourcemanager.resources.fluentcore
  summary: ServiceClient is the abstraction for accessing REST operations and their payload data types.
  syntax:
    content: public abstract class AzureServiceClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.<T,U>getLroFinalResultOrError(com.azure.core.util.polling.AsyncPollResponse<com.azure.core.management.polling.PollResult<T>,U>)
  id: <T,U>getLroFinalResultOrError(com.azure.core.util.polling.AsyncPollResponse<com.azure.core.management.polling.PollResult<T>,U>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient
  langs:
  - java
  name: <T,U>getLroFinalResultOrError(AsyncPollResponse<PollResult<T>,U> response)
  nameWithType: AzureServiceClient.<T,U>getLroFinalResultOrError(AsyncPollResponse<PollResult<T>,U> response)
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.<T,U>getLroFinalResultOrError(AsyncPollResponse<PollResult<T>,U> response)
  overload: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getLroFinalResultOrError*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore
  summary: Gets the final result, or an error, based on last async poll response.
  syntax:
    content: public Mono<U> <T,U>getLroFinalResultOrError(AsyncPollResponse<PollResult<T>,U> response)
    parameters:
    - id: response
      type: com.azure.core.util.polling.AsyncPollResponse<com.azure.core.management.polling.PollResult<T>,U>
      description: the last async poll response.
    return:
      type: reactor.core.publisher.Mono<U>
      description: the final result, or an error.
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.<T,U>getLroResult(reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,com.azure.core.util.Context)
  id: <T,U>getLroResult(reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient
  langs:
  - java
  name: <T,U>getLroResult(Mono<Response<Flux<ByteBuffer>>> lroInit, HttpPipeline httpPipeline, Type pollResultType, Type finalResultType, Context context)
  nameWithType: AzureServiceClient.<T,U>getLroResult(Mono<Response<Flux<ByteBuffer>>> lroInit, HttpPipeline httpPipeline, Type pollResultType, Type finalResultType, Context context)
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.<T,U>getLroResult(Mono<Response<Flux<ByteBuffer>>> lroInit, HttpPipeline httpPipeline, Type pollResultType, Type finalResultType, Context context)
  overload: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getLroResult*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore
  summary: Gets long running operation result.
  syntax:
    content: public PollerFlux<PollResult<T>,U> <T,U>getLroResult(Mono<Response<Flux<ByteBuffer>>> lroInit, HttpPipeline httpPipeline, Type pollResultType, Type finalResultType, Context context)
    parameters:
    - id: lroInit
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the raw response of init operation.
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: the http pipeline.
    - id: pollResultType
      type: java.lang.reflect.Type
      description: type of poll result.
    - id: finalResultType
      type: java.lang.reflect.Type
      description: type of final result.
    - id: context
      type: com.azure.core.util.Context
      description: the context shared by all requests.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<T>,U>
      description: poller flux for poll result and final result.
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.AzureServiceClient(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,com.azure.core.management.AzureEnvironment)
  id: AzureServiceClient(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,com.azure.core.management.AzureEnvironment)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient
  langs:
  - java
  name: AzureServiceClient(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, AzureEnvironment environment)
  nameWithType: AzureServiceClient.AzureServiceClient(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, AzureEnvironment environment)
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.AzureServiceClient(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, AzureEnvironment environment)
  overload: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.AzureServiceClient*
  type: Constructor
  package: com.azure.resourcemanager.resources.fluentcore
  syntax:
    content: protected AzureServiceClient(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, AzureEnvironment environment)
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
    - id: serializerAdapter
      type: com.azure.core.util.serializer.SerializerAdapter
    - id: environment
      type: com.azure.core.management.AzureEnvironment
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getContext()
  id: getContext()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient
  langs:
  - java
  name: getContext()
  nameWithType: AzureServiceClient.getContext()
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getContext()
  overload: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getContext*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore
  summary: Gets default client context.
  syntax:
    content: public Context getContext()
    return:
      type: com.azure.core.util.Context
      description: the default client context.
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getDefaultPollInterval()
  id: getDefaultPollInterval()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient
  langs:
  - java
  name: getDefaultPollInterval()
  nameWithType: AzureServiceClient.getDefaultPollInterval()
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getDefaultPollInterval()
  overload: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getDefaultPollInterval*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore
  summary: Gets The default poll interval for long-running operation.
  syntax:
    content: public abstract Duration getDefaultPollInterval()
    return:
      type: java.time.Duration
      description: the defaultPollInterval value.
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getHttpPipeline()
  id: getHttpPipeline()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient
  langs:
  - java
  name: getHttpPipeline()
  nameWithType: AzureServiceClient.getHttpPipeline()
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getHttpPipeline()
  overload: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getHttpPipeline*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore
  summary: Gets The HTTP pipeline to send requests through.
  syntax:
    content: public HttpPipeline getHttpPipeline()
    return:
      type: com.azure.core.http.HttpPipeline
      description: the httpPipeline value.
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.mergeContext(com.azure.core.util.Context)
  id: mergeContext(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0
  parent: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient
  langs:
  - java
  name: mergeContext(Context context)
  nameWithType: AzureServiceClient.mergeContext(Context context)
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.mergeContext(Context context)
  overload: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.mergeContext*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore
  summary: Merges default client context with provided context.
  syntax:
    content: public Context mergeContext(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: the context to be merged with default client context.
    return:
      type: com.azure.core.util.Context
      description: the merged context.
references:
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.core.util.serializer.SerializerAdapter
  spec.java:
  - uid: com.azure.core.util.serializer.SerializerAdapter
    name: SerializerAdapter
    fullName: com.azure.core.util.serializer.SerializerAdapter
- uid: com.azure.core.management.AzureEnvironment
  spec.java:
  - uid: com.azure.core.management.AzureEnvironment
    name: AzureEnvironment
    fullName: com.azure.core.management.AzureEnvironment
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.AzureServiceClient*
  name: AzureServiceClient
  nameWithType: AzureServiceClient.AzureServiceClient
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.AzureServiceClient
  package: com.azure.resourcemanager.resources.fluentcore
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getHttpPipeline*
  name: getHttpPipeline
  nameWithType: AzureServiceClient.getHttpPipeline
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getHttpPipeline
  package: com.azure.resourcemanager.resources.fluentcore
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getDefaultPollInterval*
  name: getDefaultPollInterval
  nameWithType: AzureServiceClient.getDefaultPollInterval
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getDefaultPollInterval
  package: com.azure.resourcemanager.resources.fluentcore
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getContext*
  name: getContext
  nameWithType: AzureServiceClient.getContext
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getContext
  package: com.azure.resourcemanager.resources.fluentcore
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.mergeContext*
  name: mergeContext
  nameWithType: AzureServiceClient.mergeContext
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.mergeContext
  package: com.azure.resourcemanager.resources.fluentcore
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.lang.reflect.Type
  spec.java:
  - uid: java.lang.reflect.Type
    name: Type
    fullName: java.lang.reflect.Type
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<T>,U>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: U
    name: U
    fullName: U
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getLroResult*
  name: <T,U>getLroResult
  nameWithType: AzureServiceClient.<T,U>getLroResult
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.<T,U>getLroResult
  package: com.azure.resourcemanager.resources.fluentcore
- uid: com.azure.core.util.polling.AsyncPollResponse<com.azure.core.management.polling.PollResult<T>,U>
  spec.java:
  - uid: com.azure.core.util.polling.AsyncPollResponse
    name: AsyncPollResponse
    fullName: com.azure.core.util.polling.AsyncPollResponse
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: U
    name: U
    fullName: U
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<U>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: U
    name: U
    fullName: U
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getLroFinalResultOrError*
  name: <T,U>getLroFinalResultOrError
  nameWithType: AzureServiceClient.<T,U>getLroFinalResultOrError
  fullName: com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.<T,U>getLroFinalResultOrError
  package: com.azure.resourcemanager.resources.fluentcore
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: T>,U
  name: T>,U
  nameWithType: T>,U
  fullName: T>,U
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.AsyncPollResponse
  name: AsyncPollResponse
  nameWithType: AsyncPollResponse
  fullName: com.azure.core.util.polling.AsyncPollResponse
- uid: U
  name: U
  nameWithType: U
  fullName: U
