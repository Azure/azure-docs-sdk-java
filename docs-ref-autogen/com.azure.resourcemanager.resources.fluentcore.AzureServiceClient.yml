### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient"
fullName: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient"
name: "AzureServiceClient"
nameWithType: "AzureServiceClient"
summary: "Service<wbr>Client is the abstraction for accessing REST operations and their payload data types."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public abstract class AzureServiceClient"
constructors:
- uid: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.AzureServiceClient(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,com.azure.core.management.AzureEnvironment)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.AzureServiceClient(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, AzureEnvironment environment)"
  name: "AzureServiceClient(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, AzureEnvironment environment)"
  nameWithType: "AzureServiceClient.AzureServiceClient(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, AzureEnvironment environment)"
  summary: "Creates a new instance of <xref uid=\"com.azure.resourcemanager.resources.fluentcore.AzureServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureServiceClient\"></xref>."
  modifiers:
  - "protected"
  parameters:
  - description: "The HttpPipline used by the client."
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "The SerializerAdapter used by the client."
    name: "serializerAdapter"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerAdapter?alt=com.azure.core.util.serializer.SerializerAdapter&text=SerializerAdapter\" data-throw-if-not-resolved=\"False\" />"
  - description: "The AzureEnvironment used by the client."
    name: "environment"
    type: "<xref href=\"com.azure.core.management.AzureEnvironment?alt=com.azure.core.management.AzureEnvironment&text=AzureEnvironment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected AzureServiceClient(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, AzureEnvironment environment)"
  desc: "Creates a new instance of <xref uid=\"com.azure.resourcemanager.resources.fluentcore.AzureServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureServiceClient\"></xref>."
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.<T,U>getLroFinalResultOrError(com.azure.core.util.polling.AsyncPollResponse<com.azure.core.management.polling.PollResult<T>,U>)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.<T,U>getLroFinalResultOrError(AsyncPollResponse<PollResult<T>,U> response)"
  name: "<T,U>getLroFinalResultOrError(AsyncPollResponse<PollResult<T>,U> response)"
  nameWithType: "AzureServiceClient.<T,U>getLroFinalResultOrError(AsyncPollResponse<PollResult<T>,U> response)"
  summary: "Gets the final result, or an error, based on last async poll response."
  parameters:
  - description: "the last async poll response."
    name: "response"
    type: "<xref href=\"com.azure.core.util.polling.AsyncPollResponse?alt=com.azure.core.util.polling.AsyncPollResponse&text=AsyncPollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<U> <T,U>getLroFinalResultOrError(AsyncPollResponse<PollResult<T>,U> response)"
  desc: "Gets the final result, or an error, based on last async poll response."
  returns:
    description: "the final result, or an error."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.<T,U>getLroResult(reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.<T,U>getLroResult(Mono<Response<Flux<ByteBuffer>>> lroInit, HttpPipeline httpPipeline, Type pollResultType, Type finalResultType, Context context)"
  name: "<T,U>getLroResult(Mono<Response<Flux<ByteBuffer>>> lroInit, HttpPipeline httpPipeline, Type pollResultType, Type finalResultType, Context context)"
  nameWithType: "AzureServiceClient.<T,U>getLroResult(Mono<Response<Flux<ByteBuffer>>> lroInit, HttpPipeline httpPipeline, Type pollResultType, Type finalResultType, Context context)"
  summary: "Gets long running operation result."
  parameters:
  - description: "the raw response of init operation."
    name: "lroInit"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
  - description: "the http pipeline."
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "type of poll result."
    name: "pollResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "type of final result."
    name: "finalResultType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Type.html\">Type</a>"
  - description: "the context shared by all requests."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<PollResult<T>,U> <T,U>getLroResult(Mono<Response<Flux<ByteBuffer>>> lroInit, HttpPipeline httpPipeline, Type pollResultType, Type finalResultType, Context context)"
  desc: "Gets long running operation result."
  returns:
    description: "poller flux for poll result and final result."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getContext()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getContext()"
  name: "getContext()"
  nameWithType: "AzureServiceClient.getContext()"
  summary: "Gets default client context."
  syntax: "public Context getContext()"
  desc: "Gets default client context."
  returns:
    description: "the default client context."
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getDefaultPollInterval()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getDefaultPollInterval()"
  name: "getDefaultPollInterval()"
  nameWithType: "AzureServiceClient.getDefaultPollInterval()"
  summary: "Gets The default poll interval for long-running operation."
  modifiers:
  - "abstract"
  syntax: "public abstract Duration getDefaultPollInterval()"
  desc: "Gets The default poll interval for long-running operation."
  returns:
    description: "the defaultPollInterval value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
- uid: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getHttpPipeline()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.getHttpPipeline()"
  name: "getHttpPipeline()"
  nameWithType: "AzureServiceClient.getHttpPipeline()"
  summary: "Gets The HTTP pipeline to send requests through."
  syntax: "public HttpPipeline getHttpPipeline()"
  desc: "Gets The HTTP pipeline to send requests through."
  returns:
    description: "the httpPipeline value."
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.mergeContext(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.AzureServiceClient.mergeContext(Context context)"
  name: "mergeContext(Context context)"
  nameWithType: "AzureServiceClient.mergeContext(Context context)"
  summary: "Merges default client context with provided context."
  parameters:
  - description: "the context to be merged with default client context."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Context mergeContext(Context context)"
  desc: "Merges default client context with provided context."
  returns:
    description: "the merged context."
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "ServiceClient is the abstraction for accessing REST operations and their payload data types."
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
