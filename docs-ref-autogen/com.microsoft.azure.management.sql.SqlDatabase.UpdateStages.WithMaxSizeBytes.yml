### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes
  id: WithMaxSizeBytes
  parent: com.microsoft.azure.management.sql
  children:
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes(long)
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.yml
  langs:
  - java
  name: SqlDatabase.UpdateStages.WithMaxSizeBytes
  nameWithType: SqlDatabase.UpdateStages.WithMaxSizeBytes
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 1071
  package: com.microsoft.azure.management.sql
  summary: "<p>The SQL Database definition to set the Max Size in Bytes for database. </p>"
  syntax:
    content: public interface WithMaxSizeBytes
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes(long)
  id: withMaxSizeBytes(long)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.yml
  langs:
  - java
  name: withMaxSizeBytes(long maxSizeBytes)
  nameWithType: SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes(long maxSizeBytes)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes(long maxSizeBytes)
  overload: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 1081
  package: com.microsoft.azure.management.sql
  summary: "<p>Sets the max size in bytes for SQL Database. </p>"
  syntax:
    content: public Update withMaxSizeBytes(long maxSizeBytes)
    parameters:
    - id: maxSizeBytes
      type: 0364520f
      description: '<p>max size of the Azure SQL Database expressed in bytes. Note: Only the following sizes are supported (in addition to limitations being placed on each edition): { 100 MB | 500 MB |1 GB | 5 GB | 10 GB | 20 GB | 30 GB … 150 GB | 200 GB … 500 GB } </p>'
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the update. </p>
references:
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes*
  name: withMaxSizeBytes
  nameWithType: SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.SqlDatabase.Update
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.Update.yml
  name: SqlDatabase.Update
  nameWithType: SqlDatabase.Update
  fullName: com.microsoft.azure.management.sql.SqlDatabase.Update
  type: Interface
  summary: "<p>The template for a SqlDatabase update operation, containing all the settings that can be modified.</p>\r\n<p>The template for a SQLDatabase modifyState operation, containing all the settings that can be modified. </p>"
  syntax:
    content: public interface Update extends SqlDatabase.UpdateStages.WithEdition,SqlDatabase.UpdateStages.WithElasticPoolName,SqlDatabase.UpdateStages.WithMaxSizeBytes,SqlDatabase.UpdateStages.WithServiceObjective,Appliable<SqlDatabase>,SqlDatabase.UpdateStages.WithEdition,SqlDatabase.UpdateStages.WithElasticPoolName,SqlDatabase.UpdateStages.WithMaxSizeBytes,SqlDatabase.UpdateStages.WithServiceObjective,Resource.UpdateWithTags<SqlDatabase.Update>,Appliable<SqlDatabase>
