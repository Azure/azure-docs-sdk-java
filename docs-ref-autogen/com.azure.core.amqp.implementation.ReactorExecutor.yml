### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.implementation.ReactorExecutor"
  id: "ReactorExecutor"
  parent: "com.azure.core.amqp.implementation"
  children:
  - "com.azure.core.amqp.implementation.ReactorExecutor.ReactorExecutor(org.apache.qpid.proton.reactor.Reactor,reactor.core.scheduler.Scheduler,java.lang.String,com.azure.core.amqp.implementation.AmqpExceptionHandler,java.time.Duration,java.lang.String)"
  - "com.azure.core.amqp.implementation.ReactorExecutor.close()"
  - "com.azure.core.amqp.implementation.ReactorExecutor.start()"
  langs:
  - "java"
  name: "ReactorExecutor"
  nameWithType: "ReactorExecutor"
  fullName: "com.azure.core.amqp.implementation.ReactorExecutor"
  type: "Class"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " class ReactorExecutor implements Closeable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Closeable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.amqp.implementation.ReactorExecutor.ReactorExecutor(org.apache.qpid.proton.reactor.Reactor,reactor.core.scheduler.Scheduler,java.lang.String,com.azure.core.amqp.implementation.AmqpExceptionHandler,java.time.Duration,java.lang.String)"
  id: "ReactorExecutor(org.apache.qpid.proton.reactor.Reactor,reactor.core.scheduler.Scheduler,java.lang.String,com.azure.core.amqp.implementation.AmqpExceptionHandler,java.time.Duration,java.lang.String)"
  parent: "com.azure.core.amqp.implementation.ReactorExecutor"
  langs:
  - "java"
  name: "ReactorExecutor(Reactor reactor, Scheduler scheduler, String connectionId, AmqpExceptionHandler exceptionHandler, Duration timeout, String hostname)"
  nameWithType: "ReactorExecutor.ReactorExecutor(Reactor reactor, Scheduler scheduler, String connectionId, AmqpExceptionHandler exceptionHandler, Duration timeout, String hostname)"
  fullName: "com.azure.core.amqp.implementation.ReactorExecutor.ReactorExecutor(Reactor reactor, Scheduler scheduler, String connectionId, AmqpExceptionHandler exceptionHandler, Duration timeout, String hostname)"
  overload: "com.azure.core.amqp.implementation.ReactorExecutor.ReactorExecutor*"
  type: "Constructor"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " ReactorExecutor(Reactor reactor, Scheduler scheduler, String connectionId, AmqpExceptionHandler exceptionHandler, Duration timeout, String hostname)"
    parameters:
    - id: "reactor"
      type: "org.apache.qpid.proton.reactor.Reactor"
    - id: "scheduler"
      type: "reactor.core.scheduler.Scheduler"
    - id: "connectionId"
      type: "java.lang.String"
    - id: "exceptionHandler"
      type: "com.azure.core.amqp.implementation.AmqpExceptionHandler"
    - id: "timeout"
      type: "java.time.Duration"
    - id: "hostname"
      type: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ReactorExecutor.close()"
  id: "close()"
  parent: "com.azure.core.amqp.implementation.ReactorExecutor"
  langs:
  - "java"
  name: "close()"
  nameWithType: "ReactorExecutor.close()"
  fullName: "com.azure.core.amqp.implementation.ReactorExecutor.close()"
  overload: "com.azure.core.amqp.implementation.ReactorExecutor.close*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public void close()"
- uid: "com.azure.core.amqp.implementation.ReactorExecutor.start()"
  id: "start()"
  parent: "com.azure.core.amqp.implementation.ReactorExecutor"
  langs:
  - "java"
  name: "start()"
  nameWithType: "ReactorExecutor.start()"
  fullName: "com.azure.core.amqp.implementation.ReactorExecutor.start()"
  overload: "com.azure.core.amqp.implementation.ReactorExecutor.start*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  summary: "Starts the reactor and will begin processing any reactor events until there are no longer any left or <xref uid=\"com.azure.core.amqp.implementation.ReactorExecutor.close()\" data-throw-if-not-resolved=\"false\">#close()</xref> is called."
  syntax:
    content: " void start()"
references:
- uid: "org.apache.qpid.proton.reactor.Reactor"
  spec.java:
  - uid: "org.apache.qpid.proton.reactor.Reactor"
    name: "Reactor"
    fullName: "org.apache.qpid.proton.reactor.Reactor"
- uid: "reactor.core.scheduler.Scheduler"
  spec.java:
  - uid: "reactor.core.scheduler.Scheduler"
    name: "Scheduler"
    fullName: "reactor.core.scheduler.Scheduler"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.AmqpExceptionHandler"
  name: "AmqpExceptionHandler"
  nameWithType: "AmqpExceptionHandler"
  fullName: "com.azure.core.amqp.implementation.AmqpExceptionHandler"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.core.amqp.implementation.ReactorExecutor.ReactorExecutor*"
  name: "ReactorExecutor"
  nameWithType: "ReactorExecutor.ReactorExecutor"
  fullName: "com.azure.core.amqp.implementation.ReactorExecutor.ReactorExecutor"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorExecutor.start*"
  name: "start"
  nameWithType: "ReactorExecutor.start"
  fullName: "com.azure.core.amqp.implementation.ReactorExecutor.start"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorExecutor.close*"
  name: "close"
  nameWithType: "ReactorExecutor.close"
  fullName: "com.azure.core.amqp.implementation.ReactorExecutor.close"
  package: "com.azure.core.amqp.implementation"
- uid: "java.io.Closeable"
  name: "Closeable"
  nameWithType: "Closeable"
  fullName: "java.io.Closeable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
