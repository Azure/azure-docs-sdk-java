### YamlMime:JavaMember
uid: "com.azure.spring.integration.core.api.SubscribeByGroupOperation.subscribe*"
fullName: "com.azure.spring.integration.core.api.SubscribeByGroupOperation.subscribe"
name: "subscribe"
nameWithType: "SubscribeByGroupOperation.subscribe"
members:
- uid: "com.azure.spring.integration.core.api.SubscribeByGroupOperation.subscribe(java.lang.String,java.lang.String,java.util.function.Consumer<org.springframework.messaging.Message<?>>)"
  fullName: "com.azure.spring.integration.core.api.SubscribeByGroupOperation.subscribe(String destination, String consumerGroup, Consumer<Message<?>> consumer)"
  name: "subscribe(String destination, String consumerGroup, Consumer<Message<?>> consumer)"
  nameWithType: "SubscribeByGroupOperation.subscribe(String destination, String consumerGroup, Consumer<Message<?>> consumer)"
  parameters:
  - name: "destination"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "consumerGroup"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "consumer"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.springframework.messaging.Message?alt=org.springframework.messaging.Message&text=Message\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;&gt;"
  syntax: "public default boolean subscribe(String destination, String consumerGroup, Consumer<Message<?>> consumer)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.integration.core.api.SubscribeByGroupOperation.subscribe(java.lang.String,java.lang.String,java.util.function.Consumer<org.springframework.messaging.Message<?>>,java.lang.Class<?>)"
  fullName: "com.azure.spring.integration.core.api.SubscribeByGroupOperation.subscribe(String destination, String consumerGroup, Consumer<Message<?>> consumer, Class<?> messagePayloadType)"
  name: "subscribe(String destination, String consumerGroup, Consumer<Message<?>> consumer, Class<?> messagePayloadType)"
  nameWithType: "SubscribeByGroupOperation.subscribe(String destination, String consumerGroup, Consumer<Message<?>> consumer, Class<?> messagePayloadType)"
  summary: "Register a message consumer to a given destination with a given consumer group."
  parameters:
  - description: "destination"
    name: "destination"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "consumer group name"
    name: "consumerGroup"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "consumer"
    name: "consumer"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.springframework.messaging.Message?alt=org.springframework.messaging.Message&text=Message\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;&gt;"
  - description: "message payload type"
    name: "messagePayloadType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public abstract boolean subscribe(String destination, String consumerGroup, Consumer<Message<?>> consumer, Class<?> messagePayloadType)"
  returns:
    description: "<code>true</code> if the consumer was subscribed or <code>false</code> if it\n was already subscribed."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.spring.integration.core.api"
artifact: com.azure.spring:azure-spring-integration-core:2.0.0
