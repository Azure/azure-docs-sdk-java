### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.PatternCaptureTokenFilter"
fullName: "com.azure.search.documents.indexes.models.PatternCaptureTokenFilter"
name: "PatternCaptureTokenFilter"
nameWithType: "PatternCaptureTokenFilter"
summary: "Uses Java regexes to emit multiple tokens - one for each capture group in one or more patterns."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.search.documents.indexes.models.TokenFilter.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PatternCaptureTokenFilter extends TokenFilter"
constructors:
- uid: "com.azure.search.documents.indexes.models.PatternCaptureTokenFilter.PatternCaptureTokenFilter(java.lang.String,java.util.List<java.lang.String>)"
  fullName: "com.azure.search.documents.indexes.models.PatternCaptureTokenFilter.PatternCaptureTokenFilter(String name, List<String> patterns)"
  name: "PatternCaptureTokenFilter(String name, List<String> patterns)"
  nameWithType: "PatternCaptureTokenFilter.PatternCaptureTokenFilter(String name, List<String> patterns)"
  summary: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.PatternCaptureTokenFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PatternCaptureTokenFilter\"></xref>."
  parameters:
  - description: "The name of the token filter. It must only contain letters, digits,\n spaces, dashes or underscores, can only start and end with alphanumeric\n characters, and is limited to 128 characters."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "A list of patterns to match against each token."
    name: "patterns"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PatternCaptureTokenFilter(String name, List<String> patterns)"
  desc: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.PatternCaptureTokenFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PatternCaptureTokenFilter\"></xref>."
methods:
- uid: "com.azure.search.documents.indexes.models.PatternCaptureTokenFilter.getPatterns()"
  fullName: "com.azure.search.documents.indexes.models.PatternCaptureTokenFilter.getPatterns()"
  name: "getPatterns()"
  nameWithType: "PatternCaptureTokenFilter.getPatterns()"
  summary: "Get the patterns property: A list of patterns to match against each token."
  syntax: "public List<String> getPatterns()"
  desc: "Get the patterns property: A list of patterns to match against each token."
  returns:
    description: "the patterns value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.PatternCaptureTokenFilter.isPreserveOriginal()"
  fullName: "com.azure.search.documents.indexes.models.PatternCaptureTokenFilter.isPreserveOriginal()"
  name: "isPreserveOriginal()"
  nameWithType: "PatternCaptureTokenFilter.isPreserveOriginal()"
  summary: "Get the preserve<wbr>Original property: A value indicating whether to return the original token even if one of the patterns matches."
  syntax: "public Boolean isPreserveOriginal()"
  desc: "Get the preserveOriginal property: A value indicating whether to return the original token even if one of the patterns matches. Default is true."
  returns:
    description: "the preserveOriginal value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.PatternCaptureTokenFilter.setPreserveOriginal(java.lang.Boolean)"
  fullName: "com.azure.search.documents.indexes.models.PatternCaptureTokenFilter.setPreserveOriginal(Boolean preserveOriginal)"
  name: "setPreserveOriginal(Boolean preserveOriginal)"
  nameWithType: "PatternCaptureTokenFilter.setPreserveOriginal(Boolean preserveOriginal)"
  summary: "Set the preserve<wbr>Original property: A value indicating whether to return the original token even if one of the patterns matches."
  parameters:
  - description: "the preserveOriginal value to set."
    name: "preserveOriginal"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PatternCaptureTokenFilter setPreserveOriginal(Boolean preserveOriginal)"
  desc: "Set the preserveOriginal property: A value indicating whether to return the original token even if one of the patterns matches. Default is true."
  returns:
    description: "the PatternCaptureTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.PatternCaptureTokenFilter?alt=com.azure.search.documents.indexes.models.PatternCaptureTokenFilter&text=PatternCaptureTokenFilter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Uses Java regexes to emit multiple tokens - one for each capture group in one or more patterns. This token filter is implemented using Apache Lucene."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.4.13
