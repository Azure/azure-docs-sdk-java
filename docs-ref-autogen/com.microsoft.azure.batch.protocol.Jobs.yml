### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.Jobs"
fullName: "com.microsoft.azure.batch.protocol.Jobs"
name: "Jobs"
nameWithType: "Jobs"
summary: "An instance of this class provides access to all the operations defined in Jobs."
syntax: "public interface Jobs"
methods:
- uid: "com.microsoft.azure.batch.protocol.Jobs.add(com.microsoft.azure.batch.protocol.models.JobAddParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.add(JobAddParameter job)"
  name: "add(JobAddParameter job)"
  nameWithType: "Jobs.add(JobAddParameter job)"
  summary: "Adds a Job to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Job to be added."
    name: "job"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void add(JobAddParameter job)"
  desc: "Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
- uid: "com.microsoft.azure.batch.protocol.Jobs.add(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.add(JobAddParameter job, JobAddOptions jobAddOptions)"
  name: "add(JobAddParameter job, JobAddOptions jobAddOptions)"
  nameWithType: "Jobs.add(JobAddParameter job, JobAddOptions jobAddOptions)"
  summary: "Adds a Job to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Job to be added."
    name: "job"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobAddOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddOptions?alt=com.microsoft.azure.batch.protocol.models.JobAddOptions&text=JobAddOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void add(JobAddParameter job, JobAddOptions jobAddOptions)"
  desc: "Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
- uid: "com.microsoft.azure.batch.protocol.Jobs.addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job)"
  name: "addAsync(JobAddParameter job)"
  nameWithType: "Jobs.addAsync(JobAddParameter job)"
  summary: "Adds a Job to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Job to be added."
    name: "job"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> addAsync(JobAddParameter job)"
  desc: "Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions)"
  name: "addAsync(JobAddParameter job, JobAddOptions jobAddOptions)"
  nameWithType: "Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions)"
  summary: "Adds a Job to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Job to be added."
    name: "job"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobAddOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddOptions?alt=com.microsoft.azure.batch.protocol.models.JobAddOptions&text=JobAddOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> addAsync(JobAddParameter job, JobAddOptions jobAddOptions)"
  desc: "Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions, ServiceCallback<Void> serviceCallback)"
  name: "addAsync(JobAddParameter job, JobAddOptions jobAddOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Adds a Job to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Job to be added."
    name: "job"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobAddOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddOptions?alt=com.microsoft.azure.batch.protocol.models.JobAddOptions&text=JobAddOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> addAsync(JobAddParameter job, JobAddOptions jobAddOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job, ServiceCallback<Void> serviceCallback)"
  name: "addAsync(JobAddParameter job, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.addAsync(JobAddParameter job, ServiceCallback<Void> serviceCallback)"
  summary: "Adds a Job to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Job to be added."
    name: "job"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> addAsync(JobAddParameter job, ServiceCallback<Void> serviceCallback)"
  desc: "Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(JobAddParameter job)"
  name: "addWithServiceResponseAsync(JobAddParameter job)"
  nameWithType: "Jobs.addWithServiceResponseAsync(JobAddParameter job)"
  summary: "Adds a Job to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Job to be added."
    name: "job"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobAddHeaders>> addWithServiceResponseAsync(JobAddParameter job)"
  desc: "Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddHeaders?alt=com.microsoft.azure.batch.protocol.models.JobAddHeaders&text=JobAddHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)"
  name: "addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)"
  nameWithType: "Jobs.addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)"
  summary: "Adds a Job to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Job to be added."
    name: "job"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddParameter?alt=com.microsoft.azure.batch.protocol.models.JobAddParameter&text=JobAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobAddOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddOptions?alt=com.microsoft.azure.batch.protocol.models.JobAddOptions&text=JobAddOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobAddHeaders>> addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)"
  desc: "Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobAddHeaders?alt=com.microsoft.azure.batch.protocol.models.JobAddHeaders&text=JobAddHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.delete(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.delete(String jobId)"
  name: "delete(String jobId)"
  nameWithType: "Jobs.delete(String jobId)"
  summary: "Deletes a Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to delete."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String jobId)"
  desc: "Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted."
- uid: "com.microsoft.azure.batch.protocol.Jobs.delete(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.delete(String jobId, JobDeleteOptions jobDeleteOptions)"
  name: "delete(String jobId, JobDeleteOptions jobDeleteOptions)"
  nameWithType: "Jobs.delete(String jobId, JobDeleteOptions jobDeleteOptions)"
  summary: "Deletes a Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to delete."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobDeleteOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.JobDeleteOptions&text=JobDeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String jobId, JobDeleteOptions jobDeleteOptions)"
  desc: "Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted."
- uid: "com.microsoft.azure.batch.protocol.Jobs.deleteAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId)"
  name: "deleteAsync(String jobId)"
  nameWithType: "Jobs.deleteAsync(String jobId)"
  summary: "Deletes a Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to delete."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> deleteAsync(String jobId)"
  desc: "Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)"
  name: "deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)"
  nameWithType: "Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)"
  summary: "Deletes a Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to delete."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobDeleteOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.JobDeleteOptions&text=JobDeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)"
  desc: "Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, ServiceCallback<Void> serviceCallback)"
  name: "deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Deletes a Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to delete."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobDeleteOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.JobDeleteOptions&text=JobDeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId, ServiceCallback<Void> serviceCallback)"
  name: "deleteAsync(String jobId, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.deleteAsync(String jobId, ServiceCallback<Void> serviceCallback)"
  summary: "Deletes a Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to delete."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> deleteAsync(String jobId, ServiceCallback<Void> serviceCallback)"
  desc: "Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(String jobId)"
  name: "deleteWithServiceResponseAsync(String jobId)"
  nameWithType: "Jobs.deleteWithServiceResponseAsync(String jobId)"
  summary: "Deletes a Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to delete."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobDeleteHeaders>> deleteWithServiceResponseAsync(String jobId)"
  desc: "Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobDeleteHeaders?alt=com.microsoft.azure.batch.protocol.models.JobDeleteHeaders&text=JobDeleteHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)"
  name: "deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)"
  nameWithType: "Jobs.deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)"
  summary: "Deletes a Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to delete."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobDeleteOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.JobDeleteOptions&text=JobDeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobDeleteHeaders>> deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)"
  desc: "Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobDeleteHeaders?alt=com.microsoft.azure.batch.protocol.models.JobDeleteHeaders&text=JobDeleteHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.disable(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.disable(String jobId, DisableJobOption disableTasks)"
  name: "disable(String jobId, DisableJobOption disableTasks)"
  nameWithType: "Jobs.disable(String jobId, DisableJobOption disableTasks)"
  summary: "Disables the specified Job, preventing new Tasks from running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to disable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    name: "disableTasks"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.DisableJobOption?alt=com.microsoft.azure.batch.protocol.models.DisableJobOption&text=DisableJobOption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void disable(String jobId, DisableJobOption disableTasks)"
  desc: "Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409."
- uid: "com.microsoft.azure.batch.protocol.Jobs.disable(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)"
  name: "disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)"
  nameWithType: "Jobs.disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)"
  summary: "Disables the specified Job, preventing new Tasks from running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to disable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    name: "disableTasks"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.DisableJobOption?alt=com.microsoft.azure.batch.protocol.models.DisableJobOption&text=DisableJobOption\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobDisableOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobDisableOptions?alt=com.microsoft.azure.batch.protocol.models.JobDisableOptions&text=JobDisableOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)"
  desc: "Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409."
- uid: "com.microsoft.azure.batch.protocol.Jobs.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks)"
  name: "disableAsync(String jobId, DisableJobOption disableTasks)"
  nameWithType: "Jobs.disableAsync(String jobId, DisableJobOption disableTasks)"
  summary: "Disables the specified Job, preventing new Tasks from running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to disable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    name: "disableTasks"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.DisableJobOption?alt=com.microsoft.azure.batch.protocol.models.DisableJobOption&text=DisableJobOption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> disableAsync(String jobId, DisableJobOption disableTasks)"
  desc: "Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)"
  name: "disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)"
  nameWithType: "Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)"
  summary: "Disables the specified Job, preventing new Tasks from running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to disable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    name: "disableTasks"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.DisableJobOption?alt=com.microsoft.azure.batch.protocol.models.DisableJobOption&text=DisableJobOption\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobDisableOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobDisableOptions?alt=com.microsoft.azure.batch.protocol.models.JobDisableOptions&text=JobDisableOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)"
  desc: "Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, ServiceCallback<Void> serviceCallback)"
  name: "disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Disables the specified Job, preventing new Tasks from running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to disable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    name: "disableTasks"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.DisableJobOption?alt=com.microsoft.azure.batch.protocol.models.DisableJobOption&text=DisableJobOption\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobDisableOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobDisableOptions?alt=com.microsoft.azure.batch.protocol.models.JobDisableOptions&text=JobDisableOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks, ServiceCallback<Void> serviceCallback)"
  name: "disableAsync(String jobId, DisableJobOption disableTasks, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.disableAsync(String jobId, DisableJobOption disableTasks, ServiceCallback<Void> serviceCallback)"
  summary: "Disables the specified Job, preventing new Tasks from running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to disable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    name: "disableTasks"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.DisableJobOption?alt=com.microsoft.azure.batch.protocol.models.DisableJobOption&text=DisableJobOption\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> disableAsync(String jobId, DisableJobOption disableTasks, ServiceCallback<Void> serviceCallback)"
  desc: "Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)"
  name: "disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)"
  nameWithType: "Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)"
  summary: "Disables the specified Job, preventing new Tasks from running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to disable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    name: "disableTasks"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.DisableJobOption?alt=com.microsoft.azure.batch.protocol.models.DisableJobOption&text=DisableJobOption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobDisableHeaders>> disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)"
  desc: "Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobDisableHeaders?alt=com.microsoft.azure.batch.protocol.models.JobDisableHeaders&text=JobDisableHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)"
  name: "disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)"
  nameWithType: "Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)"
  summary: "Disables the specified Job, preventing new Tasks from running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to disable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    name: "disableTasks"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.DisableJobOption?alt=com.microsoft.azure.batch.protocol.models.DisableJobOption&text=DisableJobOption\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobDisableOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobDisableOptions?alt=com.microsoft.azure.batch.protocol.models.JobDisableOptions&text=JobDisableOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobDisableHeaders>> disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)"
  desc: "Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobDisableHeaders?alt=com.microsoft.azure.batch.protocol.models.JobDisableHeaders&text=JobDisableHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.enable(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.enable(String jobId)"
  name: "enable(String jobId)"
  nameWithType: "Jobs.enable(String jobId)"
  summary: "Enables the specified Job, allowing new Tasks to run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to enable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void enable(String jobId)"
  desc: "Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run."
- uid: "com.microsoft.azure.batch.protocol.Jobs.enable(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.enable(String jobId, JobEnableOptions jobEnableOptions)"
  name: "enable(String jobId, JobEnableOptions jobEnableOptions)"
  nameWithType: "Jobs.enable(String jobId, JobEnableOptions jobEnableOptions)"
  summary: "Enables the specified Job, allowing new Tasks to run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to enable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobEnableOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobEnableOptions?alt=com.microsoft.azure.batch.protocol.models.JobEnableOptions&text=JobEnableOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void enable(String jobId, JobEnableOptions jobEnableOptions)"
  desc: "Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run."
- uid: "com.microsoft.azure.batch.protocol.Jobs.enableAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId)"
  name: "enableAsync(String jobId)"
  nameWithType: "Jobs.enableAsync(String jobId)"
  summary: "Enables the specified Job, allowing new Tasks to run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to enable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> enableAsync(String jobId)"
  desc: "Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions)"
  name: "enableAsync(String jobId, JobEnableOptions jobEnableOptions)"
  nameWithType: "Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions)"
  summary: "Enables the specified Job, allowing new Tasks to run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to enable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobEnableOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobEnableOptions?alt=com.microsoft.azure.batch.protocol.models.JobEnableOptions&text=JobEnableOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> enableAsync(String jobId, JobEnableOptions jobEnableOptions)"
  desc: "Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions, ServiceCallback<Void> serviceCallback)"
  name: "enableAsync(String jobId, JobEnableOptions jobEnableOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Enables the specified Job, allowing new Tasks to run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to enable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobEnableOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobEnableOptions?alt=com.microsoft.azure.batch.protocol.models.JobEnableOptions&text=JobEnableOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> enableAsync(String jobId, JobEnableOptions jobEnableOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.enableAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId, ServiceCallback<Void> serviceCallback)"
  name: "enableAsync(String jobId, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.enableAsync(String jobId, ServiceCallback<Void> serviceCallback)"
  summary: "Enables the specified Job, allowing new Tasks to run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to enable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> enableAsync(String jobId, ServiceCallback<Void> serviceCallback)"
  desc: "Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(String jobId)"
  name: "enableWithServiceResponseAsync(String jobId)"
  nameWithType: "Jobs.enableWithServiceResponseAsync(String jobId)"
  summary: "Enables the specified Job, allowing new Tasks to run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to enable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobEnableHeaders>> enableWithServiceResponseAsync(String jobId)"
  desc: "Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobEnableHeaders?alt=com.microsoft.azure.batch.protocol.models.JobEnableHeaders&text=JobEnableHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)"
  name: "enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)"
  nameWithType: "Jobs.enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)"
  summary: "Enables the specified Job, allowing new Tasks to run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to enable."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobEnableOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobEnableOptions?alt=com.microsoft.azure.batch.protocol.models.JobEnableOptions&text=JobEnableOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobEnableHeaders>> enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)"
  desc: "Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobEnableHeaders?alt=com.microsoft.azure.batch.protocol.models.JobEnableHeaders&text=JobEnableHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.get(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.get(String jobId)"
  name: "get(String jobId)"
  nameWithType: "Jobs.get(String jobId)"
  summary: "Gets information about the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CloudJob get(String jobId)"
  desc: "Gets information about the specified Job."
  returns:
    description: "the CloudJob object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Jobs.get(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.get(String jobId, JobGetOptions jobGetOptions)"
  name: "get(String jobId, JobGetOptions jobGetOptions)"
  nameWithType: "Jobs.get(String jobId, JobGetOptions jobGetOptions)"
  summary: "Gets information about the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobGetOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetOptions&text=JobGetOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CloudJob get(String jobId, JobGetOptions jobGetOptions)"
  desc: "Gets information about the specified Job."
  returns:
    description: "the CloudJob object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics()"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics()"
  name: "getAllLifetimeStatistics()"
  nameWithType: "Jobs.getAllLifetimeStatistics()"
  summary: "Gets lifetime summary statistics for all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract JobStatistics getAllLifetimeStatistics()"
  desc: "Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the JobStatistics object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)"
  name: "getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)"
  nameWithType: "Jobs.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)"
  summary: "Gets lifetime summary statistics for all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "jobGetAllLifetimeStatisticsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions&text=JobGetAllLifetimeStatisticsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract JobStatistics getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)"
  desc: "Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the JobStatistics object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync()"
  name: "getAllLifetimeStatisticsAsync()"
  nameWithType: "Jobs.getAllLifetimeStatisticsAsync()"
  summary: "Gets lifetime summary statistics for all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<JobStatistics> getAllLifetimeStatisticsAsync()"
  desc: "Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the observable to the JobStatistics object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)"
  name: "getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)"
  nameWithType: "Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)"
  summary: "Gets lifetime summary statistics for all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "jobGetAllLifetimeStatisticsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions&text=JobGetAllLifetimeStatisticsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<JobStatistics> getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)"
  desc: "Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the observable to the JobStatistics object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.JobStatistics>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, ServiceCallback<JobStatistics> serviceCallback)"
  name: "getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, ServiceCallback<JobStatistics> serviceCallback)"
  nameWithType: "Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, ServiceCallback<JobStatistics> serviceCallback)"
  summary: "Gets lifetime summary statistics for all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "jobGetAllLifetimeStatisticsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions&text=JobGetAllLifetimeStatisticsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<JobStatistics> getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, ServiceCallback<JobStatistics> serviceCallback)"
  desc: "Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.JobStatistics>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(ServiceCallback<JobStatistics> serviceCallback)"
  name: "getAllLifetimeStatisticsAsync(ServiceCallback<JobStatistics> serviceCallback)"
  nameWithType: "Jobs.getAllLifetimeStatisticsAsync(ServiceCallback<JobStatistics> serviceCallback)"
  summary: "Gets lifetime summary statistics for all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<JobStatistics> getAllLifetimeStatisticsAsync(ServiceCallback<JobStatistics> serviceCallback)"
  desc: "Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()"
  name: "getAllLifetimeStatisticsWithServiceResponseAsync()"
  nameWithType: "Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()"
  summary: "Gets lifetime summary statistics for all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<JobStatistics,JobGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync()"
  desc: "Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the observable to the JobStatistics object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders?alt=com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders&text=JobGetAllLifetimeStatisticsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)"
  name: "getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)"
  nameWithType: "Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)"
  summary: "Gets lifetime summary statistics for all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "jobGetAllLifetimeStatisticsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions&text=JobGetAllLifetimeStatisticsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<JobStatistics,JobGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)"
  desc: "Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the observable to the JobStatistics object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobStatistics?alt=com.microsoft.azure.batch.protocol.models.JobStatistics&text=JobStatistics\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders?alt=com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders&text=JobGetAllLifetimeStatisticsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId)"
  name: "getAsync(String jobId)"
  nameWithType: "Jobs.getAsync(String jobId)"
  summary: "Gets information about the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<CloudJob> getAsync(String jobId)"
  desc: "Gets information about the specified Job."
  returns:
    description: "the observable to the CloudJob object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId, JobGetOptions jobGetOptions)"
  name: "getAsync(String jobId, JobGetOptions jobGetOptions)"
  nameWithType: "Jobs.getAsync(String jobId, JobGetOptions jobGetOptions)"
  summary: "Gets information about the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobGetOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetOptions&text=JobGetOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<CloudJob> getAsync(String jobId, JobGetOptions jobGetOptions)"
  desc: "Gets information about the specified Job."
  returns:
    description: "the observable to the CloudJob object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId, JobGetOptions jobGetOptions, ServiceCallback<CloudJob> serviceCallback)"
  name: "getAsync(String jobId, JobGetOptions jobGetOptions, ServiceCallback<CloudJob> serviceCallback)"
  nameWithType: "Jobs.getAsync(String jobId, JobGetOptions jobGetOptions, ServiceCallback<CloudJob> serviceCallback)"
  summary: "Gets information about the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobGetOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetOptions&text=JobGetOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<CloudJob> getAsync(String jobId, JobGetOptions jobGetOptions, ServiceCallback<CloudJob> serviceCallback)"
  desc: "Gets information about the specified Job."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId, ServiceCallback<CloudJob> serviceCallback)"
  name: "getAsync(String jobId, ServiceCallback<CloudJob> serviceCallback)"
  nameWithType: "Jobs.getAsync(String jobId, ServiceCallback<CloudJob> serviceCallback)"
  summary: "Gets information about the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<CloudJob> getAsync(String jobId, ServiceCallback<CloudJob> serviceCallback)"
  desc: "Gets information about the specified Job."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String jobId)"
  name: "getTaskCounts(String jobId)"
  nameWithType: "Jobs.getTaskCounts(String jobId)"
  summary: "Gets the Task counts for the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TaskCountsResult getTaskCounts(String jobId)"
  desc: "Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running. Note that the numbers returned may not always be up to date. If you need exact task counts, use a list query."
  returns:
    description: "the TaskCountsResult object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskCountsResult?alt=com.microsoft.azure.batch.protocol.models.TaskCountsResult&text=TaskCountsResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)"
  name: "getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)"
  nameWithType: "Jobs.getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)"
  summary: "Gets the Task counts for the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobGetTaskCountsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions&text=JobGetTaskCountsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TaskCountsResult getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)"
  desc: "Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running. Note that the numbers returned may not always be up to date. If you need exact task counts, use a list query."
  returns:
    description: "the TaskCountsResult object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskCountsResult?alt=com.microsoft.azure.batch.protocol.models.TaskCountsResult&text=TaskCountsResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String jobId)"
  name: "getTaskCountsAsync(String jobId)"
  nameWithType: "Jobs.getTaskCountsAsync(String jobId)"
  summary: "Gets the Task counts for the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<TaskCountsResult> getTaskCountsAsync(String jobId)"
  desc: "Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running. Note that the numbers returned may not always be up to date. If you need exact task counts, use a list query."
  returns:
    description: "the observable to the TaskCountsResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskCountsResult?alt=com.microsoft.azure.batch.protocol.models.TaskCountsResult&text=TaskCountsResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)"
  name: "getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)"
  nameWithType: "Jobs.getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)"
  summary: "Gets the Task counts for the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobGetTaskCountsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions&text=JobGetTaskCountsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<TaskCountsResult> getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)"
  desc: "Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running. Note that the numbers returned may not always be up to date. If you need exact task counts, use a list query."
  returns:
    description: "the observable to the TaskCountsResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskCountsResult?alt=com.microsoft.azure.batch.protocol.models.TaskCountsResult&text=TaskCountsResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskCountsResult>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions, ServiceCallback<TaskCountsResult> serviceCallback)"
  name: "getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions, ServiceCallback<TaskCountsResult> serviceCallback)"
  nameWithType: "Jobs.getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions, ServiceCallback<TaskCountsResult> serviceCallback)"
  summary: "Gets the Task counts for the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobGetTaskCountsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions&text=JobGetTaskCountsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskCountsResult?alt=com.microsoft.azure.batch.protocol.models.TaskCountsResult&text=TaskCountsResult\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<TaskCountsResult> getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions, ServiceCallback<TaskCountsResult> serviceCallback)"
  desc: "Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running. Note that the numbers returned may not always be up to date. If you need exact task counts, use a list query."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskCountsResult?alt=com.microsoft.azure.batch.protocol.models.TaskCountsResult&text=TaskCountsResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskCountsResult>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String jobId, ServiceCallback<TaskCountsResult> serviceCallback)"
  name: "getTaskCountsAsync(String jobId, ServiceCallback<TaskCountsResult> serviceCallback)"
  nameWithType: "Jobs.getTaskCountsAsync(String jobId, ServiceCallback<TaskCountsResult> serviceCallback)"
  summary: "Gets the Task counts for the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskCountsResult?alt=com.microsoft.azure.batch.protocol.models.TaskCountsResult&text=TaskCountsResult\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<TaskCountsResult> getTaskCountsAsync(String jobId, ServiceCallback<TaskCountsResult> serviceCallback)"
  desc: "Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running. Note that the numbers returned may not always be up to date. If you need exact task counts, use a list query."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskCountsResult?alt=com.microsoft.azure.batch.protocol.models.TaskCountsResult&text=TaskCountsResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String jobId)"
  name: "getTaskCountsWithServiceResponseAsync(String jobId)"
  nameWithType: "Jobs.getTaskCountsWithServiceResponseAsync(String jobId)"
  summary: "Gets the Task counts for the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<TaskCountsResult,JobGetTaskCountsHeaders>> getTaskCountsWithServiceResponseAsync(String jobId)"
  desc: "Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running. Note that the numbers returned may not always be up to date. If you need exact task counts, use a list query."
  returns:
    description: "the observable to the TaskCountsResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskCountsResult?alt=com.microsoft.azure.batch.protocol.models.TaskCountsResult&text=TaskCountsResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders?alt=com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders&text=JobGetTaskCountsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)"
  name: "getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)"
  nameWithType: "Jobs.getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)"
  summary: "Gets the Task counts for the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobGetTaskCountsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions&text=JobGetTaskCountsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<TaskCountsResult,JobGetTaskCountsHeaders>> getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)"
  desc: "Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running. Note that the numbers returned may not always be up to date. If you need exact task counts, use a list query."
  returns:
    description: "the observable to the TaskCountsResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskCountsResult?alt=com.microsoft.azure.batch.protocol.models.TaskCountsResult&text=TaskCountsResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders?alt=com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders&text=JobGetTaskCountsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(String jobId)"
  name: "getWithServiceResponseAsync(String jobId)"
  nameWithType: "Jobs.getWithServiceResponseAsync(String jobId)"
  summary: "Gets information about the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<CloudJob,JobGetHeaders>> getWithServiceResponseAsync(String jobId)"
  desc: "Gets information about the specified Job."
  returns:
    description: "the observable to the CloudJob object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetHeaders?alt=com.microsoft.azure.batch.protocol.models.JobGetHeaders&text=JobGetHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)"
  name: "getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)"
  nameWithType: "Jobs.getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)"
  summary: "Gets information about the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobGetOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetOptions&text=JobGetOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<CloudJob,JobGetHeaders>> getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)"
  desc: "Gets information about the specified Job."
  returns:
    description: "the observable to the CloudJob object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobGetHeaders?alt=com.microsoft.azure.batch.protocol.models.JobGetHeaders&text=JobGetHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.list()"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.list()"
  name: "list()"
  nameWithType: "Jobs.list()"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedList<CloudJob> list()"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the PagedList&lt;CloudJob&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.list(com.microsoft.azure.batch.protocol.models.JobListOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.list(JobListOptions jobListOptions)"
  name: "list(JobListOptions jobListOptions)"
  nameWithType: "Jobs.list(JobListOptions jobListOptions)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "jobListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListOptions?alt=com.microsoft.azure.batch.protocol.models.JobListOptions&text=JobListOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<CloudJob> list(JobListOptions jobListOptions)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the PagedList&lt;CloudJob&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listAsync()"
  name: "listAsync()"
  nameWithType: "Jobs.listAsync()"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<Page<CloudJob>> listAsync()"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listAsync(ListOperationCallback<CloudJob> serviceCallback)"
  name: "listAsync(ListOperationCallback<CloudJob> serviceCallback)"
  nameWithType: "Jobs.listAsync(ListOperationCallback<CloudJob> serviceCallback)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudJob>> listAsync(ListOperationCallback<CloudJob> serviceCallback)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listAsync(com.microsoft.azure.batch.protocol.models.JobListOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listAsync(JobListOptions jobListOptions)"
  name: "listAsync(JobListOptions jobListOptions)"
  nameWithType: "Jobs.listAsync(JobListOptions jobListOptions)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "jobListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListOptions?alt=com.microsoft.azure.batch.protocol.models.JobListOptions&text=JobListOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<CloudJob>> listAsync(JobListOptions jobListOptions)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listAsync(com.microsoft.azure.batch.protocol.models.JobListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listAsync(JobListOptions jobListOptions, ListOperationCallback<CloudJob> serviceCallback)"
  name: "listAsync(JobListOptions jobListOptions, ListOperationCallback<CloudJob> serviceCallback)"
  nameWithType: "Jobs.listAsync(JobListOptions jobListOptions, ListOperationCallback<CloudJob> serviceCallback)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "jobListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListOptions?alt=com.microsoft.azure.batch.protocol.models.JobListOptions&text=JobListOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudJob>> listAsync(JobListOptions jobListOptions, ListOperationCallback<CloudJob> serviceCallback)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(String jobScheduleId)"
  name: "listFromJobSchedule(String jobScheduleId)"
  nameWithType: "Jobs.listFromJobSchedule(String jobScheduleId)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job Schedule from which you want to get a list of Jobs."
    name: "jobScheduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<CloudJob> listFromJobSchedule(String jobScheduleId)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the PagedList&lt;CloudJob&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)"
  name: "listFromJobSchedule(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)"
  nameWithType: "Jobs.listFromJobSchedule(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job Schedule from which you want to get a list of Jobs."
    name: "jobScheduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListFromJobScheduleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions?alt=com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions&text=JobListFromJobScheduleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<CloudJob> listFromJobSchedule(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the PagedList&lt;CloudJob&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(String jobScheduleId)"
  name: "listFromJobScheduleAsync(String jobScheduleId)"
  nameWithType: "Jobs.listFromJobScheduleAsync(String jobScheduleId)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job Schedule from which you want to get a list of Jobs."
    name: "jobScheduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<CloudJob>> listFromJobScheduleAsync(String jobScheduleId)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(String jobScheduleId, ListOperationCallback<CloudJob> serviceCallback)"
  name: "listFromJobScheduleAsync(String jobScheduleId, ListOperationCallback<CloudJob> serviceCallback)"
  nameWithType: "Jobs.listFromJobScheduleAsync(String jobScheduleId, ListOperationCallback<CloudJob> serviceCallback)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job Schedule from which you want to get a list of Jobs."
    name: "jobScheduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudJob>> listFromJobScheduleAsync(String jobScheduleId, ListOperationCallback<CloudJob> serviceCallback)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)"
  name: "listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)"
  nameWithType: "Jobs.listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job Schedule from which you want to get a list of Jobs."
    name: "jobScheduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListFromJobScheduleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions?alt=com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions&text=JobListFromJobScheduleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<CloudJob>> listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions, ListOperationCallback<CloudJob> serviceCallback)"
  name: "listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions, ListOperationCallback<CloudJob> serviceCallback)"
  nameWithType: "Jobs.listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions, ListOperationCallback<CloudJob> serviceCallback)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job Schedule from which you want to get a list of Jobs."
    name: "jobScheduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListFromJobScheduleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions?alt=com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions&text=JobListFromJobScheduleOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudJob>> listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions, ListOperationCallback<CloudJob> serviceCallback)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(String nextPageLink)"
  name: "listFromJobScheduleNext(String nextPageLink)"
  nameWithType: "Jobs.listFromJobScheduleNext(String nextPageLink)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<CloudJob> listFromJobScheduleNext(String nextPageLink)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the PagedList&lt;CloudJob&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)"
  name: "listFromJobScheduleNext(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)"
  nameWithType: "Jobs.listFromJobScheduleNext(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListFromJobScheduleNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions&text=JobListFromJobScheduleNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<CloudJob> listFromJobScheduleNext(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the PagedList&lt;CloudJob&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(String nextPageLink)"
  name: "listFromJobScheduleNextAsync(String nextPageLink)"
  nameWithType: "Jobs.listFromJobScheduleNextAsync(String nextPageLink)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<CloudJob>> listFromJobScheduleNextAsync(String nextPageLink)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)"
  name: "listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)"
  nameWithType: "Jobs.listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListFromJobScheduleNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions&text=JobListFromJobScheduleNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<CloudJob>> listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  name: "listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  nameWithType: "Jobs.listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListFromJobScheduleNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions&text=JobListFromJobScheduleNextOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ServiceFuture object tracking the Retrofit calls"
    name: "serviceFuture"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudJob>> listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  name: "listFromJobScheduleNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  nameWithType: "Jobs.listFromJobScheduleNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ServiceFuture object tracking the Retrofit calls"
    name: "serviceFuture"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudJob>> listFromJobScheduleNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink)"
  name: "listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "Jobs.listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListFromJobScheduleHeaders>> listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders?alt=com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders&text=JobListFromJobScheduleHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)"
  name: "listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)"
  nameWithType: "Jobs.listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListFromJobScheduleNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions&text=JobListFromJobScheduleNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListFromJobScheduleHeaders>> listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders?alt=com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders&text=JobListFromJobScheduleHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(String jobScheduleId)"
  name: "listFromJobScheduleWithServiceResponseAsync(String jobScheduleId)"
  nameWithType: "Jobs.listFromJobScheduleWithServiceResponseAsync(String jobScheduleId)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job Schedule from which you want to get a list of Jobs."
    name: "jobScheduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListFromJobScheduleHeaders>> listFromJobScheduleWithServiceResponseAsync(String jobScheduleId)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders?alt=com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders&text=JobListFromJobScheduleHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)"
  name: "listFromJobScheduleWithServiceResponseAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)"
  nameWithType: "Jobs.listFromJobScheduleWithServiceResponseAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)"
  summary: "Lists the Jobs that have been created under the specified Job Schedule."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job Schedule from which you want to get a list of Jobs."
    name: "jobScheduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListFromJobScheduleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions?alt=com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions&text=JobListFromJobScheduleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListFromJobScheduleHeaders>> listFromJobScheduleWithServiceResponseAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)"
  desc: "Lists the Jobs that have been created under the specified Job Schedule."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders?alt=com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders&text=JobListFromJobScheduleHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listNext(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listNext(String nextPageLink)"
  name: "listNext(String nextPageLink)"
  nameWithType: "Jobs.listNext(String nextPageLink)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<CloudJob> listNext(String nextPageLink)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the PagedList&lt;CloudJob&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listNext(String nextPageLink, JobListNextOptions jobListNextOptions)"
  name: "listNext(String nextPageLink, JobListNextOptions jobListNextOptions)"
  nameWithType: "Jobs.listNext(String nextPageLink, JobListNextOptions jobListNextOptions)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListNextOptions&text=JobListNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<CloudJob> listNext(String nextPageLink, JobListNextOptions jobListNextOptions)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the PagedList&lt;CloudJob&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listNextAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listNextAsync(String nextPageLink)"
  name: "listNextAsync(String nextPageLink)"
  nameWithType: "Jobs.listNextAsync(String nextPageLink)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<CloudJob>> listNextAsync(String nextPageLink)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions)"
  name: "listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions)"
  nameWithType: "Jobs.listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListNextOptions&text=JobListNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<CloudJob>> listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  name: "listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  nameWithType: "Jobs.listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListNextOptions&text=JobListNextOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ServiceFuture object tracking the Retrofit calls"
    name: "serviceFuture"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudJob>> listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  name: "listNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  nameWithType: "Jobs.listNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ServiceFuture object tracking the Retrofit calls"
    name: "serviceFuture"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudJob>> listNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(String nextPageLink)"
  name: "listNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "Jobs.listNextWithServiceResponseAsync(String nextPageLink)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListHeaders>> listNextWithServiceResponseAsync(String nextPageLink)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.JobListHeaders?alt=com.microsoft.azure.batch.protocol.models.JobListHeaders&text=JobListHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(String nextPageLink, JobListNextOptions jobListNextOptions)"
  name: "listNextWithServiceResponseAsync(String nextPageLink, JobListNextOptions jobListNextOptions)"
  nameWithType: "Jobs.listNextWithServiceResponseAsync(String nextPageLink, JobListNextOptions jobListNextOptions)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListNextOptions&text=JobListNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListHeaders>> listNextWithServiceResponseAsync(String nextPageLink, JobListNextOptions jobListNextOptions)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.JobListHeaders?alt=com.microsoft.azure.batch.protocol.models.JobListHeaders&text=JobListHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(String jobId)"
  name: "listPreparationAndReleaseTaskStatus(String jobId)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatus(String jobId)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(String jobId)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)"
  name: "listPreparationAndReleaseTaskStatus(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatus(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListPreparationAndReleaseTaskStatusOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions&text=JobListPreparationAndReleaseTaskStatusOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId)"
  name: "listPreparationAndReleaseTaskStatusAsync(String jobId)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(String jobId)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  name: "listPreparationAndReleaseTaskStatusAsync(String jobId, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(String jobId, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)"
  name: "listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListPreparationAndReleaseTaskStatusOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions&text=JobListPreparationAndReleaseTaskStatusOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  name: "listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListPreparationAndReleaseTaskStatusOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions&text=JobListPreparationAndReleaseTaskStatusOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(String nextPageLink)"
  name: "listPreparationAndReleaseTaskStatusNext(String nextPageLink)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusNext(String nextPageLink)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatusNext(String nextPageLink)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)"
  name: "listPreparationAndReleaseTaskStatusNext(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusNext(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListPreparationAndReleaseTaskStatusNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions&text=JobListPreparationAndReleaseTaskStatusNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatusNext(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink)"
  name: "listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)"
  name: "listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListPreparationAndReleaseTaskStatusNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions&text=JobListPreparationAndReleaseTaskStatusNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  name: "listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListPreparationAndReleaseTaskStatusNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions&text=JobListPreparationAndReleaseTaskStatusNextOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ServiceFuture object tracking the Retrofit calls"
    name: "serviceFuture"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  name: "listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ServiceFuture object tracking the Retrofit calls"
    name: "serviceFuture"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink)"
  name: "listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>,JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders&text=JobListPreparationAndReleaseTaskStatusHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)"
  name: "listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListPreparationAndReleaseTaskStatusNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions&text=JobListPreparationAndReleaseTaskStatusNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>,JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders&text=JobListPreparationAndReleaseTaskStatusHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId)"
  name: "listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>,JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders&text=JobListPreparationAndReleaseTaskStatusHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)"
  name: "listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)"
  nameWithType: "Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)"
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobListPreparationAndReleaseTaskStatusOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions&text=JobListPreparationAndReleaseTaskStatusOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>,JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)"
  desc: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
  returns:
    description: "the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation&text=JobPreparationAndReleaseTaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders?alt=com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders&text=JobListPreparationAndReleaseTaskStatusHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync()"
  name: "listWithServiceResponseAsync()"
  nameWithType: "Jobs.listWithServiceResponseAsync()"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListHeaders>> listWithServiceResponseAsync()"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.JobListHeaders?alt=com.microsoft.azure.batch.protocol.models.JobListHeaders&text=JobListHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobListOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync(JobListOptions jobListOptions)"
  name: "listWithServiceResponseAsync(JobListOptions jobListOptions)"
  nameWithType: "Jobs.listWithServiceResponseAsync(JobListOptions jobListOptions)"
  summary: "Lists all of the Jobs in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "jobListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobListOptions?alt=com.microsoft.azure.batch.protocol.models.JobListOptions&text=JobListOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListHeaders>> listWithServiceResponseAsync(JobListOptions jobListOptions)"
  desc: "Lists all of the Jobs in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudJob&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudJob?alt=com.microsoft.azure.batch.protocol.models.CloudJob&text=CloudJob\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.JobListHeaders?alt=com.microsoft.azure.batch.protocol.models.JobListHeaders&text=JobListHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.patch(String jobId, JobPatchParameter jobPatchParameter)"
  name: "patch(String jobId, JobPatchParameter jobPatchParameter)"
  nameWithType: "Jobs.patch(String jobId, JobPatchParameter jobPatchParameter)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void patch(String jobId, JobPatchParameter jobPatchParameter)"
  desc: "Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints."
- uid: "com.microsoft.azure.batch.protocol.Jobs.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)"
  name: "patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)"
  nameWithType: "Jobs.patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobPatchOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchOptions?alt=com.microsoft.azure.batch.protocol.models.JobPatchOptions&text=JobPatchOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)"
  desc: "Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints."
- uid: "com.microsoft.azure.batch.protocol.Jobs.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter)"
  name: "patchAsync(String jobId, JobPatchParameter jobPatchParameter)"
  nameWithType: "Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter)"
  desc: "Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)"
  name: "patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)"
  nameWithType: "Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobPatchOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchOptions?alt=com.microsoft.azure.batch.protocol.models.JobPatchOptions&text=JobPatchOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)"
  desc: "Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, ServiceCallback<Void> serviceCallback)"
  name: "patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobPatchOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchOptions?alt=com.microsoft.azure.batch.protocol.models.JobPatchOptions&text=JobPatchOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, ServiceCallback<Void> serviceCallback)"
  name: "patchAsync(String jobId, JobPatchParameter jobPatchParameter, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, ServiceCallback<Void> serviceCallback)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, ServiceCallback<Void> serviceCallback)"
  desc: "Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)"
  name: "patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)"
  nameWithType: "Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobPatchHeaders>> patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)"
  desc: "Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchHeaders?alt=com.microsoft.azure.batch.protocol.models.JobPatchHeaders&text=JobPatchHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)"
  name: "patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)"
  nameWithType: "Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchParameter?alt=com.microsoft.azure.batch.protocol.models.JobPatchParameter&text=JobPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobPatchOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchOptions?alt=com.microsoft.azure.batch.protocol.models.JobPatchOptions&text=JobPatchOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobPatchHeaders>> patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)"
  desc: "Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobPatchHeaders?alt=com.microsoft.azure.batch.protocol.models.JobPatchHeaders&text=JobPatchHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.terminate(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.terminate(String jobId)"
  name: "terminate(String jobId)"
  nameWithType: "Jobs.terminate(String jobId)"
  summary: "Terminates the specified Job, marking it as completed."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to terminate."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void terminate(String jobId)"
  desc: "Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled."
- uid: "com.microsoft.azure.batch.protocol.Jobs.terminate(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  name: "terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  nameWithType: "Jobs.terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  summary: "Terminates the specified Job, marking it as completed."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to terminate."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The text you want to appear as the Job's TerminateReason. The default is 'UserTerminate'."
    name: "terminateReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobTerminateOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobTerminateOptions?alt=com.microsoft.azure.batch.protocol.models.JobTerminateOptions&text=JobTerminateOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  desc: "Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled."
- uid: "com.microsoft.azure.batch.protocol.Jobs.terminateAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId)"
  name: "terminateAsync(String jobId)"
  nameWithType: "Jobs.terminateAsync(String jobId)"
  summary: "Terminates the specified Job, marking it as completed."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to terminate."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> terminateAsync(String jobId)"
  desc: "Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.terminateAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId, ServiceCallback<Void> serviceCallback)"
  name: "terminateAsync(String jobId, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.terminateAsync(String jobId, ServiceCallback<Void> serviceCallback)"
  summary: "Terminates the specified Job, marking it as completed."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to terminate."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> terminateAsync(String jobId, ServiceCallback<Void> serviceCallback)"
  desc: "Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.terminateAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  name: "terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  nameWithType: "Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  summary: "Terminates the specified Job, marking it as completed."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to terminate."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The text you want to appear as the Job's TerminateReason. The default is 'UserTerminate'."
    name: "terminateReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobTerminateOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobTerminateOptions?alt=com.microsoft.azure.batch.protocol.models.JobTerminateOptions&text=JobTerminateOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  desc: "Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.terminateAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, ServiceCallback<Void> serviceCallback)"
  name: "terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Terminates the specified Job, marking it as completed."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to terminate."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The text you want to appear as the Job's TerminateReason. The default is 'UserTerminate'."
    name: "terminateReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobTerminateOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobTerminateOptions?alt=com.microsoft.azure.batch.protocol.models.JobTerminateOptions&text=JobTerminateOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(String jobId)"
  name: "terminateWithServiceResponseAsync(String jobId)"
  nameWithType: "Jobs.terminateWithServiceResponseAsync(String jobId)"
  summary: "Terminates the specified Job, marking it as completed."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to terminate."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobTerminateHeaders>> terminateWithServiceResponseAsync(String jobId)"
  desc: "Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobTerminateHeaders?alt=com.microsoft.azure.batch.protocol.models.JobTerminateHeaders&text=JobTerminateHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  name: "terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  nameWithType: "Jobs.terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  summary: "Terminates the specified Job, marking it as completed."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job to terminate."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The text you want to appear as the Job's TerminateReason. The default is 'UserTerminate'."
    name: "terminateReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobTerminateOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobTerminateOptions?alt=com.microsoft.azure.batch.protocol.models.JobTerminateOptions&text=JobTerminateOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobTerminateHeaders>> terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)"
  desc: "Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobTerminateHeaders?alt=com.microsoft.azure.batch.protocol.models.JobTerminateHeaders&text=JobTerminateHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter)"
  name: "update(String jobId, JobUpdateParameter jobUpdateParameter)"
  nameWithType: "Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobUpdateParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobUpdateParameter&text=JobUpdateParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void update(String jobId, JobUpdateParameter jobUpdateParameter)"
  desc: "Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints."
- uid: "com.microsoft.azure.batch.protocol.Jobs.update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)"
  name: "update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)"
  nameWithType: "Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobUpdateParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobUpdateParameter&text=JobUpdateParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobUpdateOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateOptions?alt=com.microsoft.azure.batch.protocol.models.JobUpdateOptions&text=JobUpdateOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)"
  desc: "Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints."
- uid: "com.microsoft.azure.batch.protocol.Jobs.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)"
  name: "updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)"
  nameWithType: "Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobUpdateParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobUpdateParameter&text=JobUpdateParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)"
  desc: "Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)"
  name: "updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)"
  nameWithType: "Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobUpdateParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobUpdateParameter&text=JobUpdateParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobUpdateOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateOptions?alt=com.microsoft.azure.batch.protocol.models.JobUpdateOptions&text=JobUpdateOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)"
  desc: "Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, ServiceCallback<Void> serviceCallback)"
  name: "updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobUpdateParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobUpdateParameter&text=JobUpdateParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobUpdateOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateOptions?alt=com.microsoft.azure.batch.protocol.models.JobUpdateOptions&text=JobUpdateOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, ServiceCallback<Void> serviceCallback)"
  name: "updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, ServiceCallback<Void> serviceCallback)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobUpdateParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobUpdateParameter&text=JobUpdateParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, ServiceCallback<Void> serviceCallback)"
  desc: "Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)"
  name: "updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)"
  nameWithType: "Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobUpdateParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobUpdateParameter&text=JobUpdateParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobUpdateHeaders>> updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)"
  desc: "Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateHeaders?alt=com.microsoft.azure.batch.protocol.models.JobUpdateHeaders&text=JobUpdateHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)"
  name: "updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)"
  nameWithType: "Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)"
  summary: "Updates the properties of the specified Job."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Job whose properties you want to update."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "jobUpdateParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobUpdateParameter&text=JobUpdateParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "jobUpdateOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateOptions?alt=com.microsoft.azure.batch.protocol.models.JobUpdateOptions&text=JobUpdateOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,JobUpdateHeaders>> updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)"
  desc: "Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.JobUpdateHeaders?alt=com.microsoft.azure.batch.protocol.models.JobUpdateHeaders&text=JobUpdateHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in Jobs."
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:9.0.0
