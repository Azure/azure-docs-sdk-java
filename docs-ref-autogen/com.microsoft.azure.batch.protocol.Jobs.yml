### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.Jobs
  id: Jobs
  parent: com.microsoft.azure.batch.protocol
  children:
  - com.microsoft.azure.batch.protocol.Jobs.add(JobAddParameter)
  - com.microsoft.azure.batch.protocol.Jobs.add(JobAddParameter,JobAddOptions)
  - com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter)
  - com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter,JobAddOptions)
  - com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter,JobAddOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(JobAddParameter)
  - com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(JobAddParameter,JobAddOptions)
  - com.microsoft.azure.batch.protocol.Jobs.delete(String)
  - com.microsoft.azure.batch.protocol.Jobs.delete(String,JobDeleteOptions)
  - com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String)
  - com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String,JobDeleteOptions)
  - com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String,JobDeleteOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(String,JobDeleteOptions)
  - com.microsoft.azure.batch.protocol.Jobs.disable(String,DisableJobOption)
  - com.microsoft.azure.batch.protocol.Jobs.disable(String,DisableJobOption,JobDisableOptions)
  - com.microsoft.azure.batch.protocol.Jobs.disableAsync(String,DisableJobOption)
  - com.microsoft.azure.batch.protocol.Jobs.disableAsync(String,DisableJobOption,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.disableAsync(String,DisableJobOption,JobDisableOptions)
  - com.microsoft.azure.batch.protocol.Jobs.disableAsync(String,DisableJobOption,JobDisableOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(String,DisableJobOption)
  - com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(String,DisableJobOption,JobDisableOptions)
  - com.microsoft.azure.batch.protocol.Jobs.enable(String)
  - com.microsoft.azure.batch.protocol.Jobs.enable(String,JobEnableOptions)
  - com.microsoft.azure.batch.protocol.Jobs.enableAsync(String)
  - com.microsoft.azure.batch.protocol.Jobs.enableAsync(String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.enableAsync(String,JobEnableOptions)
  - com.microsoft.azure.batch.protocol.Jobs.enableAsync(String,JobEnableOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(String,JobEnableOptions)
  - com.microsoft.azure.batch.protocol.Jobs.get(String)
  - com.microsoft.azure.batch.protocol.Jobs.get(String,JobGetOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics()
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync()
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics>)
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions,final ServiceCallback<JobStatistics>)
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getAsync(String)
  - com.microsoft.azure.batch.protocol.Jobs.getAsync(String,final ServiceCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.getAsync(String,JobGetOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getAsync(String,JobGetOptions,final ServiceCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String,JobGetTaskCountsOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String,final ServiceCallback<TaskCounts>)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String,JobGetTaskCountsOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String,JobGetTaskCountsOptions,final ServiceCallback<TaskCounts>)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String,JobGetTaskCountsOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(String,JobGetOptions)
  - com.microsoft.azure.batch.protocol.Jobs.list()
  - com.microsoft.azure.batch.protocol.Jobs.list(final JobListOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listAsync()
  - com.microsoft.azure.batch.protocol.Jobs.listAsync(final JobListOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listAsync(final JobListOptions,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listAsync(final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(final String,final JobListFromJobScheduleOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(final String,final JobListFromJobScheduleNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(final String,final JobListFromJobScheduleNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(final String,final JobListFromJobScheduleOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listNext(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listNext(final String,final JobListNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String,final JobListNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String,final JobListNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(final String,final JobListNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync(final JobListOptions)
  - com.microsoft.azure.batch.protocol.Jobs.patch(String,JobPatchParameter)
  - com.microsoft.azure.batch.protocol.Jobs.patch(String,JobPatchParameter,JobPatchOptions)
  - com.microsoft.azure.batch.protocol.Jobs.patchAsync(String,JobPatchParameter)
  - com.microsoft.azure.batch.protocol.Jobs.patchAsync(String,JobPatchParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.patchAsync(String,JobPatchParameter,JobPatchOptions)
  - com.microsoft.azure.batch.protocol.Jobs.patchAsync(String,JobPatchParameter,JobPatchOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(String,JobPatchParameter)
  - com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(String,JobPatchParameter,JobPatchOptions)
  - com.microsoft.azure.batch.protocol.Jobs.terminate(String)
  - com.microsoft.azure.batch.protocol.Jobs.terminate(String,String,JobTerminateOptions)
  - com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String)
  - com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String,String,JobTerminateOptions)
  - com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String,String,JobTerminateOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(String,String,JobTerminateOptions)
  - com.microsoft.azure.batch.protocol.Jobs.update(String,JobUpdateParameter)
  - com.microsoft.azure.batch.protocol.Jobs.update(String,JobUpdateParameter,JobUpdateOptions)
  - com.microsoft.azure.batch.protocol.Jobs.updateAsync(String,JobUpdateParameter)
  - com.microsoft.azure.batch.protocol.Jobs.updateAsync(String,JobUpdateParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.updateAsync(String,JobUpdateParameter,JobUpdateOptions)
  - com.microsoft.azure.batch.protocol.Jobs.updateAsync(String,JobUpdateParameter,JobUpdateOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(String,JobUpdateParameter)
  - com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(String,JobUpdateParameter,JobUpdateOptions)
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: Jobs
  nameWithType: Jobs
  fullName: com.microsoft.azure.batch.protocol.Jobs
  type: Interface
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
      branch: master
      repo: https://github.com/Azure/azure-batch-sdk-for-java
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 62
  package: com.microsoft.azure.batch.protocol
  summary: "<p>An instance of this class provides access to all the operations defined in Jobs. </p>"
  syntax:
    content: public interface Jobs
- uid: com.microsoft.azure.batch.protocol.Jobs.add(JobAddParameter)
  id: add(JobAddParameter)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: add(JobAddParameter job)
  nameWithType: Jobs.add(JobAddParameter job)
  fullName: com.microsoft.azure.batch.protocol.Jobs.add(JobAddParameter job)
  overload: com.microsoft.azure.batch.protocol.Jobs.add*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 784
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public void add(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: <p>The job to be added. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.add(JobAddParameter,JobAddOptions)
  id: add(JobAddParameter,JobAddOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: add(JobAddParameter job, JobAddOptions jobAddOptions)
  nameWithType: Jobs.add(JobAddParameter job, JobAddOptions jobAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.add(JobAddParameter job, JobAddOptions jobAddOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.add*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 826
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public void add(JobAddParameter job, JobAddOptions jobAddOptions)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: <p>The job to be added. </p>
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models.JobAddOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter)
  id: addAsync(JobAddParameter)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: addAsync(JobAddParameter job)
  nameWithType: Jobs.addAsync(JobAddParameter job)
  fullName: com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job)
  overload: com.microsoft.azure.batch.protocol.Jobs.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 805
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> addAsync(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: <p>The job to be added. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter,final ServiceCallback<Void>)
  id: addAsync(JobAddParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: addAsync(JobAddParameter job, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.addAsync(JobAddParameter job, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 795
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> addAsync(JobAddParameter job, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: <p>The job to be added. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter,JobAddOptions)
  id: addAsync(JobAddParameter,JobAddOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  nameWithType: Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 849
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: <p>The job to be added. </p>
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models.JobAddOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter,JobAddOptions,final ServiceCallback<Void>)
  id: addAsync(JobAddParameter,JobAddOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: addAsync(JobAddParameter job, JobAddOptions jobAddOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 838
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> addAsync(JobAddParameter job, JobAddOptions jobAddOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: <p>The job to be added. </p>
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models.JobAddOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(JobAddParameter)
  id: addWithServiceResponseAsync(JobAddParameter)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: addWithServiceResponseAsync(JobAddParameter job)
  nameWithType: Jobs.addWithServiceResponseAsync(JobAddParameter job)
  fullName: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(JobAddParameter job)
  overload: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 815
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobAddHeaders>> addWithServiceResponseAsync(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: <p>The job to be added. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobAddHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(JobAddParameter,JobAddOptions)
  id: addWithServiceResponseAsync(JobAddParameter,JobAddOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  nameWithType: Jobs.addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 860
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a job to the specified account. The Batch service supports two ways to control the work done as part of a job. In the first approach, the user specifies a Job Manager task. The Batch service launches this task when it is ready to start the job. The Job Manager task controls all other tasks that run under this job, by using the Task APIs. In the second approach, the user directly controls the execution of tasks under an active job, by using the Task APIs. Also note: when naming jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobAddHeaders>> addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: <p>The job to be added. </p>
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models.JobAddOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobAddHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.delete(String)
  id: delete(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: delete(String jobId)
  nameWithType: Jobs.delete(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.delete(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.delete*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 153
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the job to the deleting state. All update operations on a job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the job is being deleted.</p>\r\n<p></p>"
  syntax:
    content: public void delete(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.delete(String,JobDeleteOptions)
  id: delete(String,JobDeleteOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: delete(String jobId, JobDeleteOptions jobDeleteOptions)
  nameWithType: Jobs.delete(String jobId, JobDeleteOptions jobDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.delete(String jobId, JobDeleteOptions jobDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.delete*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 195
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the job to the deleting state. All update operations on a job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the job is being deleted.</p>\r\n<p></p>"
  syntax:
    content: public void delete(String jobId, JobDeleteOptions jobDeleteOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String)
  id: deleteAsync(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: deleteAsync(String jobId)
  nameWithType: Jobs.deleteAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 174
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the job to the deleting state. All update operations on a job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the job is being deleted.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deleteAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String,final ServiceCallback<Void>)
  id: deleteAsync(String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: deleteAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.deleteAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 164
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the job to the deleting state. All update operations on a job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the job is being deleted.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String jobId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String,JobDeleteOptions)
  id: deleteAsync(String,JobDeleteOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  nameWithType: Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 218
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the job to the deleting state. All update operations on a job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the job is being deleted.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String,JobDeleteOptions,final ServiceCallback<Void>)
  id: deleteAsync(String,JobDeleteOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 207
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the job to the deleting state. All update operations on a job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the job is being deleted.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(String)
  id: deleteWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: deleteWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.deleteWithServiceResponseAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 184
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the job to the deleting state. All update operations on a job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the job is being deleted.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobDeleteHeaders>> deleteWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobDeleteHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(String,JobDeleteOptions)
  id: deleteWithServiceResponseAsync(String,JobDeleteOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  nameWithType: Jobs.deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 229
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a job. Deleting a job also deletes all tasks that are part of that job, and all job statistics. This also overrides the retention period for task data; that is, if the job contains tasks which are still retained on compute nodes, the Batch services deletes those tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the job to the deleting state. All update operations on a job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the job is being deleted.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobDeleteHeaders>> deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to delete. </p>
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobDeleteHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.disable(String,DisableJobOption)
  id: disable(String,DisableJobOption)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: disable(String jobId, DisableJobOption disableTasks)
  nameWithType: Jobs.disable(String jobId, DisableJobOption disableTasks)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disable(String jobId, DisableJobOption disableTasks)
  overload: com.microsoft.azure.batch.protocol.Jobs.disable*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 512
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>\r\n<p></p>"
  syntax:
    content: public void disable(String jobId, DisableJobOption disableTasks)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "<p>What to do with active tasks associated with the job. Possible values include: 'requeue', 'terminate', 'wait' </p>"
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.disable(String,DisableJobOption,JobDisableOptions)
  id: disable(String,DisableJobOption,JobDisableOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: Jobs.disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.disable*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 558
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>\r\n<p></p>"
  syntax:
    content: public void disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "<p>What to do with active tasks associated with the job. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models.JobDisableOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.disableAsync(String,DisableJobOption)
  id: disableAsync(String,DisableJobOption)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: disableAsync(String jobId, DisableJobOption disableTasks)
  nameWithType: Jobs.disableAsync(String jobId, DisableJobOption disableTasks)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks)
  overload: com.microsoft.azure.batch.protocol.Jobs.disableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 535
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> disableAsync(String jobId, DisableJobOption disableTasks)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "<p>What to do with active tasks associated with the job. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.disableAsync(String,DisableJobOption,final ServiceCallback<Void>)
  id: disableAsync(String,DisableJobOption,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: disableAsync(String jobId, DisableJobOption disableTasks, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.disableAsync(String jobId, DisableJobOption disableTasks, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.disableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 524
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> disableAsync(String jobId, DisableJobOption disableTasks, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "<p>What to do with active tasks associated with the job. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.disableAsync(String,DisableJobOption,JobDisableOptions)
  id: disableAsync(String,DisableJobOption,JobDisableOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.disableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 583
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "<p>What to do with active tasks associated with the job. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models.JobDisableOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.disableAsync(String,DisableJobOption,JobDisableOptions,final ServiceCallback<Void>)
  id: disableAsync(String,DisableJobOption,JobDisableOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.disableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 571
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "<p>What to do with active tasks associated with the job. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models.JobDisableOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(String,DisableJobOption)
  id: disableWithServiceResponseAsync(String,DisableJobOption)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
  nameWithType: Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
  overload: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 546
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobDisableHeaders>> disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "<p>What to do with active tasks associated with the job. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobDisableHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(String,DisableJobOption,JobDisableOptions)
  id: disableWithServiceResponseAsync(String,DisableJobOption,JobDisableOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 595
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables the specified job, preventing new tasks from running. The Batch Service immediately moves the job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running tasks of the job. The job remains in the disabling state until the disable operation is completed and all tasks have been dealt with according to the disableTasks option; the job then moves to the disabled state. No new tasks are started under the job until it moves back to active state. If you try to disable a job that is in any state other than active, disabling, or disabled, the request fails with status code 409.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobDisableHeaders>> disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to disable. </p>
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "<p>What to do with active tasks associated with the job. Possible values include: 'requeue', 'terminate', 'wait' </p>"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models.JobDisableOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobDisableHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.enable(String)
  id: enable(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: enable(String jobId)
  nameWithType: Jobs.enable(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enable(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.enable*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 606
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 180 days. Therefore, if you enable a job containing active tasks which were added more than 180 days ago, those tasks will not run.</p>\r\n<p></p>"
  syntax:
    content: public void enable(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.enable(String,JobEnableOptions)
  id: enable(String,JobEnableOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: enable(String jobId, JobEnableOptions jobEnableOptions)
  nameWithType: Jobs.enable(String jobId, JobEnableOptions jobEnableOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enable(String jobId, JobEnableOptions jobEnableOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.enable*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 648
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 180 days. Therefore, if you enable a job containing active tasks which were added more than 180 days ago, those tasks will not run.</p>\r\n<p></p>"
  syntax:
    content: public void enable(String jobId, JobEnableOptions jobEnableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models.JobEnableOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.enableAsync(String)
  id: enableAsync(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: enableAsync(String jobId)
  nameWithType: Jobs.enableAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.enableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 627
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 180 days. Therefore, if you enable a job containing active tasks which were added more than 180 days ago, those tasks will not run.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> enableAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.enableAsync(String,final ServiceCallback<Void>)
  id: enableAsync(String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: enableAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.enableAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.enableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 617
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 180 days. Therefore, if you enable a job containing active tasks which were added more than 180 days ago, those tasks will not run.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> enableAsync(String jobId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.enableAsync(String,JobEnableOptions)
  id: enableAsync(String,JobEnableOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: enableAsync(String jobId, JobEnableOptions jobEnableOptions)
  nameWithType: Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.enableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 671
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 180 days. Therefore, if you enable a job containing active tasks which were added more than 180 days ago, those tasks will not run.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> enableAsync(String jobId, JobEnableOptions jobEnableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models.JobEnableOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.enableAsync(String,JobEnableOptions,final ServiceCallback<Void>)
  id: enableAsync(String,JobEnableOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: enableAsync(String jobId, JobEnableOptions jobEnableOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.enableAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 660
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 180 days. Therefore, if you enable a job containing active tasks which were added more than 180 days ago, those tasks will not run.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> enableAsync(String jobId, JobEnableOptions jobEnableOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models.JobEnableOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(String)
  id: enableWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: enableWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.enableWithServiceResponseAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 637
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 180 days. Therefore, if you enable a job containing active tasks which were added more than 180 days ago, those tasks will not run.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobEnableHeaders>> enableWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobEnableHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(String,JobEnableOptions)
  id: enableWithServiceResponseAsync(String,JobEnableOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
  nameWithType: Jobs.enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 682
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables the specified job, allowing new tasks to run. When you call this API, the Batch service sets a disabled job to the enabling state. After the this operation is completed, the job moves to the active state, and scheduling of new tasks under the job resumes. The Batch service does not allow a task to remain in the active state for more than 180 days. Therefore, if you enable a job containing active tasks which were added more than 180 days ago, those tasks will not run.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobEnableHeaders>> enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to enable. </p>
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models.JobEnableOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobEnableHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.get(String)
  id: get(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: get(String jobId)
  nameWithType: Jobs.get(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.get(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 240
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified job.</p>\r\n<p></p>"
  syntax:
    content: public CloudJob get(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudJob
      description: <p>the CloudJob object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.get(String,JobGetOptions)
  id: get(String,JobGetOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: get(String jobId, JobGetOptions jobGetOptions)
  nameWithType: Jobs.get(String jobId, JobGetOptions jobGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.get(String jobId, JobGetOptions jobGetOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 279
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified job.</p>\r\n<p></p>"
  syntax:
    content: public CloudJob get(String jobId, JobGetOptions jobGetOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudJob
      description: <p>the CloudJob object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics()
  id: getAllLifetimeStatistics()
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getAllLifetimeStatistics()
  nameWithType: Jobs.getAllLifetimeStatistics()
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics()
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 72
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public JobStatistics getAllLifetimeStatistics()
    return:
      type: com.microsoft.azure.batch.protocol.models.JobStatistics
      description: <p>the JobStatistics object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: Jobs.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 111
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public JobStatistics getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.JobStatistics
      description: <p>the JobStatistics object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync()
  id: getAllLifetimeStatisticsAsync()
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getAllLifetimeStatisticsAsync()
  nameWithType: Jobs.getAllLifetimeStatisticsAsync()
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync()
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 91
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public Observable<JobStatistics> getAllLifetimeStatisticsAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.JobStatisticsa08ddfce
      description: <p>the observable to the JobStatistics object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics>)
  id: getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  nameWithType: Jobs.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 82
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<JobStatistics> getAllLifetimeStatisticsAsync(final ServiceCallback<JobStatistics> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.JobStatisticsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.JobStatisticsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 132
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public Observable<JobStatistics> getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.JobStatisticsa08ddfce
      description: <p>the observable to the JobStatistics object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions,final ServiceCallback<JobStatistics>)
  id: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions,final ServiceCallback<JobStatistics>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  nameWithType: Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 122
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<JobStatistics> getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, final ServiceCallback<JobStatistics> serviceCallback)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.JobStatisticsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.JobStatisticsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()
  id: getAllLifetimeStatisticsWithServiceResponseAsync()
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getAllLifetimeStatisticsWithServiceResponseAsync()
  nameWithType: Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 100
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<JobStatistics, JobGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync()
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.JobStatisticsb33c76fccom.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaderse7daa122
      description: <p>the observable to the JobStatistics object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 142
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<JobStatistics, JobGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.JobStatisticsb33c76fccom.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaderse7daa122
      description: <p>the observable to the JobStatistics object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getAsync(String)
  id: getAsync(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getAsync(String jobId)
  nameWithType: Jobs.getAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 259
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified job.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CloudJob> getAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the observable to the CloudJob object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getAsync(String,final ServiceCallback<CloudJob>)
  id: getAsync(String,final ServiceCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getAsync(String jobId, final ServiceCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.getAsync(String jobId, final ServiceCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId, final ServiceCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 250
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified job.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CloudJob> getAsync(String jobId, final ServiceCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getAsync(String,JobGetOptions)
  id: getAsync(String,JobGetOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getAsync(String jobId, JobGetOptions jobGetOptions)
  nameWithType: Jobs.getAsync(String jobId, JobGetOptions jobGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId, JobGetOptions jobGetOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 300
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified job.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CloudJob> getAsync(String jobId, JobGetOptions jobGetOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the observable to the CloudJob object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getAsync(String,JobGetOptions,final ServiceCallback<CloudJob>)
  id: getAsync(String,JobGetOptions,final ServiceCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getAsync(String jobId, JobGetOptions jobGetOptions, final ServiceCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.getAsync(String jobId, JobGetOptions jobGetOptions, final ServiceCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId, JobGetOptions jobGetOptions, final ServiceCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 290
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified job.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CloudJob> getAsync(String jobId, JobGetOptions jobGetOptions, final ServiceCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String)
  id: getTaskCounts(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getTaskCounts(String jobId)
  nameWithType: Jobs.getTaskCounts(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1115
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>\r\n<p></p>"
  syntax:
    content: public TaskCounts getTaskCounts(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskCounts
      description: <p>the TaskCounts object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String,JobGetTaskCountsOptions)
  id: getTaskCounts(String,JobGetTaskCountsOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  nameWithType: Jobs.getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1158
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>\r\n<p></p>"
  syntax:
    content: public TaskCounts getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetTaskCountsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskCounts
      description: <p>the TaskCounts object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String)
  id: getTaskCountsAsync(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getTaskCountsAsync(String jobId)
  nameWithType: Jobs.getTaskCountsAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1136
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>\r\n<p></p>"
  syntax:
    content: public Observable<TaskCounts> getTaskCountsAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.TaskCountsa08ddfce
      description: <p>the observable to the TaskCounts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String,final ServiceCallback<TaskCounts>)
  id: getTaskCountsAsync(String,final ServiceCallback<TaskCounts>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getTaskCountsAsync(String jobId, final ServiceCallback<TaskCounts> serviceCallback)
  nameWithType: Jobs.getTaskCountsAsync(String jobId, final ServiceCallback<TaskCounts> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String jobId, final ServiceCallback<TaskCounts> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1126
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<TaskCounts> getTaskCountsAsync(String jobId, final ServiceCallback<TaskCounts> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.TaskCountsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.TaskCountsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String,JobGetTaskCountsOptions)
  id: getTaskCountsAsync(String,JobGetTaskCountsOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  nameWithType: Jobs.getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1181
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>\r\n<p></p>"
  syntax:
    content: public Observable<TaskCounts> getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetTaskCountsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.TaskCountsa08ddfce
      description: <p>the observable to the TaskCounts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String,JobGetTaskCountsOptions,final ServiceCallback<TaskCounts>)
  id: getTaskCountsAsync(String,JobGetTaskCountsOptions,final ServiceCallback<TaskCounts>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions, final ServiceCallback<TaskCounts> serviceCallback)
  nameWithType: Jobs.getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions, final ServiceCallback<TaskCounts> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions, final ServiceCallback<TaskCounts> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1170
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<TaskCounts> getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions, final ServiceCallback<TaskCounts> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetTaskCountsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.TaskCountsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.TaskCountsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String)
  id: getTaskCountsWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getTaskCountsWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.getTaskCountsWithServiceResponseAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1146
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<TaskCounts, JobGetTaskCountsHeaders>> getTaskCountsWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.TaskCountsb33c76fccom.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaderse7daa122
      description: <p>the observable to the TaskCounts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String,JobGetTaskCountsOptions)
  id: getTaskCountsWithServiceResponseAsync(String,JobGetTaskCountsOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  nameWithType: Jobs.getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1192
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<TaskCounts, JobGetTaskCountsHeaders>> getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetTaskCountsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.TaskCountsb33c76fccom.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaderse7daa122
      description: <p>the observable to the TaskCounts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(String)
  id: getWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.getWithServiceResponseAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 268
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified job.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<CloudJob, JobGetHeaders>> getWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.CloudJobb33c76fccom.microsoft.azure.batch.protocol.models.JobGetHeaderse7daa122
      description: <p>the observable to the CloudJob object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(String,JobGetOptions)
  id: getWithServiceResponseAsync(String,JobGetOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
  nameWithType: Jobs.getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 310
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified job.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<CloudJob, JobGetHeaders>> getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job. </p>
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.CloudJobb33c76fccom.microsoft.azure.batch.protocol.models.JobGetHeaderse7daa122
      description: <p>the observable to the CloudJob object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.list()
  id: list()
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: list()
  nameWithType: Jobs.list()
  fullName: com.microsoft.azure.batch.protocol.Jobs.list()
  overload: com.microsoft.azure.batch.protocol.Jobs.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 870
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CloudJob> list()
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.list(final JobListOptions)
  id: list(final JobListOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: list(final JobListOptions jobListOptions)
  nameWithType: Jobs.list(final JobListOptions jobListOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.list(final JobListOptions jobListOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 905
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CloudJob> list(final JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listAsync()
  id: listAsync()
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listAsync()
  nameWithType: Jobs.listAsync()
  fullName: com.microsoft.azure.batch.protocol.Jobs.listAsync()
  overload: com.microsoft.azure.batch.protocol.Jobs.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 887
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CloudJob>> listAsync()
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listAsync(final JobListOptions)
  id: listAsync(final JobListOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listAsync(final JobListOptions jobListOptions)
  nameWithType: Jobs.listAsync(final JobListOptions jobListOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listAsync(final JobListOptions jobListOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 924
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CloudJob>> listAsync(final JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listAsync(final JobListOptions,final ListOperationCallback<CloudJob>)
  id: listAsync(final JobListOptions,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listAsync(final JobListOptions jobListOptions, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listAsync(final JobListOptions jobListOptions, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listAsync(final JobListOptions jobListOptions, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 915
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CloudJob>> listAsync(final JobListOptions jobListOptions, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listAsync(final ListOperationCallback<CloudJob>)
  id: listAsync(final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listAsync(final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listAsync(final ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listAsync(final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 879
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CloudJob>> listAsync(final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(final String)
  id: listFromJobSchedule(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobSchedule(final String jobScheduleId)
  nameWithType: Jobs.listFromJobSchedule(final String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(final String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 944
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CloudJob> listFromJobSchedule(final String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(final String,final JobListFromJobScheduleOptions)
  id: listFromJobSchedule(final String,final JobListFromJobScheduleOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobSchedule(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: Jobs.listFromJobSchedule(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 983
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CloudJob> listFromJobSchedule(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String)
  id: listFromJobScheduleAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleAsync(final String jobScheduleId)
  nameWithType: Jobs.listFromJobScheduleAsync(final String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 963
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CloudJob>> listFromJobScheduleAsync(final String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions)
  id: listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: Jobs.listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1004
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CloudJob>> listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions,final ListOperationCallback<CloudJob>)
  id: listFromJobScheduleAsync(final String,final JobListFromJobScheduleOptions,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 994
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CloudJob>> listFromJobScheduleAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String,final ListOperationCallback<CloudJob>)
  id: listFromJobScheduleAsync(final String,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleAsync(final String jobScheduleId, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listFromJobScheduleAsync(final String jobScheduleId, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(final String jobScheduleId, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 954
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CloudJob>> listFromJobScheduleAsync(final String jobScheduleId, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(final String)
  id: listFromJobScheduleNext(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleNext(final String nextPageLink)
  nameWithType: Jobs.listFromJobScheduleNext(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1286
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CloudJob> listFromJobScheduleNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(final String,final JobListFromJobScheduleNextOptions)
  id: listFromJobScheduleNext(final String,final JobListFromJobScheduleNextOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleNext(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: Jobs.listFromJobScheduleNext(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1326
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CloudJob> listFromJobScheduleNext(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String)
  id: listFromJobScheduleNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleNextAsync(final String nextPageLink)
  nameWithType: Jobs.listFromJobScheduleNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1306
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CloudJob>> listFromJobScheduleNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions)
  id: listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: Jobs.listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1348
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CloudJob>> listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  id: listFromJobScheduleNextAsync(final String,final JobListFromJobScheduleNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1338
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CloudJob>> listFromJobScheduleNextAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  id: listFromJobScheduleNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listFromJobScheduleNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1297
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CloudJob>> listFromJobScheduleNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(final String)
  id: listFromJobScheduleNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: Jobs.listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1315
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudJob8135b5ebcom.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaderse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(final String,final JobListFromJobScheduleNextOptions)
  id: listFromJobScheduleNextWithServiceResponseAsync(final String,final JobListFromJobScheduleNextOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: Jobs.listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1358
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleNextWithServiceResponseAsync(final String nextPageLink, final JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListFromJobScheduleNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudJob8135b5ebcom.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaderse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(final String)
  id: listFromJobScheduleWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId)
  nameWithType: Jobs.listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 972
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudJob8135b5ebcom.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaderse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(final String,final JobListFromJobScheduleOptions)
  id: listFromJobScheduleWithServiceResponseAsync(final String,final JobListFromJobScheduleOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: Jobs.listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1014
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the jobs that have been created under the specified job schedule.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListFromJobScheduleHeaders>> listFromJobScheduleWithServiceResponseAsync(final String jobScheduleId, final JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: 3d93591e
      description: <p>The ID of the job schedule from which you want to get a list of jobs. </p>
    - id: jobListFromJobScheduleOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudJob8135b5ebcom.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaderse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listNext(final String)
  id: listNext(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listNext(final String nextPageLink)
  nameWithType: Jobs.listNext(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNext(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1203
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CloudJob> listNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listNext(final String,final JobListNextOptions)
  id: listNext(final String,final JobListNextOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listNext(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  nameWithType: Jobs.listNext(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNext(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1243
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CloudJob> listNext(final String nextPageLink, final JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the PagedList&lt;CloudJob&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String)
  id: listNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink)
  nameWithType: Jobs.listNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1223
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CloudJob>> listNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String,final JobListNextOptions)
  id: listNextAsync(final String,final JobListNextOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  nameWithType: Jobs.listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1265
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CloudJob>> listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String,final JobListNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  id: listNextAsync(final String,final JobListNextOptions,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1255
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CloudJob>> listNextAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListNextOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  id: listNextAsync(final String,final ServiceFuture<List<CloudJob>>,final ListOperationCallback<CloudJob>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1214
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CloudJob>> listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudJob>> serviceFuture, final ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(final String)
  id: listNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: Jobs.listNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1232
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudJob8135b5ebcom.microsoft.azure.batch.protocol.models.JobListHeaderse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(final String,final JobListNextOptions)
  id: listNextWithServiceResponseAsync(final String,final JobListNextOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  nameWithType: Jobs.listNextWithServiceResponseAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1275
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink, final JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudJob8135b5ebcom.microsoft.azure.batch.protocol.models.JobListHeaderse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(final String)
  id: listPreparationAndReleaseTaskStatus(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatus(final String jobId)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatus(final String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(final String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1026
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformationa08ddfce
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  id: listPreparationAndReleaseTaskStatus(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatus(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatus(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1069
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformationa08ddfce
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String)
  id: listPreparationAndReleaseTaskStatusAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusAsync(final String jobId)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1047
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  id: listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1092
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  id: listPreparationAndReleaseTaskStatusAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1081
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  id: listPreparationAndReleaseTaskStatusAsync(final String,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusAsync(final String jobId, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(final String jobId, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1037
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(final String jobId, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(final String)
  id: listPreparationAndReleaseTaskStatusNext(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNext(final String nextPageLink)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNext(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1370
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatusNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformationa08ddfce
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  id: listPreparationAndReleaseTaskStatusNext(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNext(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNext(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1414
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatusNext(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformationa08ddfce
      description: <p>the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String)
  id: listPreparationAndReleaseTaskStatusNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1392
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  id: listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1438
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  id: listPreparationAndReleaseTaskStatusNextAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1427
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  id: listPreparationAndReleaseTaskStatusNextAsync(final String,final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>>,final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1382
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(final String nextPageLink, final ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, final ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String)
  id: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1402
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation8135b5ebcom.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaderse7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  id: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusNextOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1449
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(final String nextPageLink, final JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation8135b5ebcom.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaderse7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String)
  id: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1057
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation8135b5ebcom.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaderse7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  id: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String,final JobListPreparationAndReleaseTaskStatusOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 1103
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run. This API returns the Job Preparation and Job Release task status on all compute nodes that have run the Job Preparation or Job Release task. This includes nodes which have since been removed from the pool. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>, JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusWithServiceResponseAsync(final String jobId, final JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job. </p>
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation8135b5ebcom.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaderse7daa122
      description: <p>the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync()
  id: listWithServiceResponseAsync()
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listWithServiceResponseAsync()
  nameWithType: Jobs.listWithServiceResponseAsync()
  fullName: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 895
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listWithServiceResponseAsync()
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudJob8135b5ebcom.microsoft.azure.batch.protocol.models.JobListHeaderse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync(final JobListOptions)
  id: listWithServiceResponseAsync(final JobListOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: listWithServiceResponseAsync(final JobListOptions jobListOptions)
  nameWithType: Jobs.listWithServiceResponseAsync(final JobListOptions jobListOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync(final JobListOptions jobListOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 933
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the jobs in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudJob>, JobListHeaders>> listWithServiceResponseAsync(final JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudJob8135b5ebcom.microsoft.azure.batch.protocol.models.JobListHeaderse7daa122
      description: <p>the observable to the PagedList&lt;CloudJob&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.patch(String,JobPatchParameter)
  id: patch(String,JobPatchParameter)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: patch(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: Jobs.patch(String jobId, JobPatchParameter jobPatchParameter)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patch(String jobId, JobPatchParameter jobPatchParameter)
  overload: com.microsoft.azure.batch.protocol.Jobs.patch*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 322
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public void patch(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: <p>The parameters for the request. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.patch(String,JobPatchParameter,JobPatchOptions)
  id: patch(String,JobPatchParameter,JobPatchOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  nameWithType: Jobs.patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.patch*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 368
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public void patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: <p>The parameters for the request. </p>
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models.JobPatchOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.patchAsync(String,JobPatchParameter)
  id: patchAsync(String,JobPatchParameter)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter)
  overload: com.microsoft.azure.batch.protocol.Jobs.patchAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 345
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.patchAsync(String,JobPatchParameter,final ServiceCallback<Void>)
  id: patchAsync(String,JobPatchParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.patchAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 334
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.patchAsync(String,JobPatchParameter,JobPatchOptions)
  id: patchAsync(String,JobPatchParameter,JobPatchOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  nameWithType: Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.patchAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 393
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: <p>The parameters for the request. </p>
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models.JobPatchOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.patchAsync(String,JobPatchParameter,JobPatchOptions,final ServiceCallback<Void>)
  id: patchAsync(String,JobPatchParameter,JobPatchOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.patchAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 381
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: <p>The parameters for the request. </p>
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models.JobPatchOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(String,JobPatchParameter)
  id: patchWithServiceResponseAsync(String,JobPatchParameter)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
  overload: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 356
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobPatchHeaders>> patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobPatchHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(String,JobPatchParameter,JobPatchOptions)
  id: patchWithServiceResponseAsync(String,JobPatchParameter,JobPatchOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  nameWithType: Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 405
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This replaces only the job properties specified in the request. For example, if the job has constraints, and a request does not specify the constraints element, then the job keeps the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobPatchHeaders>> patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: <p>The parameters for the request. </p>
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models.JobPatchOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobPatchHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.terminate(String)
  id: terminate(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: terminate(String jobId)
  nameWithType: Jobs.terminate(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminate(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminate*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 693
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any running tasks associated with the job and runs any required job release tasks. Then the job moves into the completed state. If there are any tasks in the job in the active state, they will remain in the active state. Once a job is terminated, new tasks cannot be added and any remaining active tasks will not be scheduled.</p>\r\n<p></p>"
  syntax:
    content: public void terminate(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.terminate(String,String,JobTerminateOptions)
  id: terminate(String,String,JobTerminateOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  nameWithType: Jobs.terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminate*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 736
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any running tasks associated with the job and runs any required job release tasks. Then the job moves into the completed state. If there are any tasks in the job in the active state, they will remain in the active state. Once a job is terminated, new tasks cannot be added and any remaining active tasks will not be scheduled.</p>\r\n<p></p>"
  syntax:
    content: public void terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: terminateReason
      type: "26831127"
      description: <p>The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'. </p>
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String)
  id: terminateAsync(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: terminateAsync(String jobId)
  nameWithType: Jobs.terminateAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 714
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any running tasks associated with the job and runs any required job release tasks. Then the job moves into the completed state. If there are any tasks in the job in the active state, they will remain in the active state. Once a job is terminated, new tasks cannot be added and any remaining active tasks will not be scheduled.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> terminateAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String,final ServiceCallback<Void>)
  id: terminateAsync(String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: terminateAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.terminateAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 704
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any running tasks associated with the job and runs any required job release tasks. Then the job moves into the completed state. If there are any tasks in the job in the active state, they will remain in the active state. Once a job is terminated, new tasks cannot be added and any remaining active tasks will not be scheduled.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> terminateAsync(String jobId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String,String,JobTerminateOptions)
  id: terminateAsync(String,String,JobTerminateOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  nameWithType: Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 761
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any running tasks associated with the job and runs any required job release tasks. Then the job moves into the completed state. If there are any tasks in the job in the active state, they will remain in the active state. Once a job is terminated, new tasks cannot be added and any remaining active tasks will not be scheduled.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: terminateReason
      type: "26831127"
      description: <p>The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'. </p>
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String,String,JobTerminateOptions,final ServiceCallback<Void>)
  id: terminateAsync(String,String,JobTerminateOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 749
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any running tasks associated with the job and runs any required job release tasks. Then the job moves into the completed state. If there are any tasks in the job in the active state, they will remain in the active state. Once a job is terminated, new tasks cannot be added and any remaining active tasks will not be scheduled.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: terminateReason
      type: "26831127"
      description: <p>The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'. </p>
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(String)
  id: terminateWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: terminateWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.terminateWithServiceResponseAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 724
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any running tasks associated with the job and runs any required job release tasks. Then the job moves into the completed state. If there are any tasks in the job in the active state, they will remain in the active state. Once a job is terminated, new tasks cannot be added and any remaining active tasks will not be scheduled.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobTerminateHeaders>> terminateWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobTerminateHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(String,String,JobTerminateOptions)
  id: terminateWithServiceResponseAsync(String,String,JobTerminateOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  nameWithType: Jobs.terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 773
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Terminates the specified job, marking it as completed. When a Terminate Job request is received, the Batch service sets the job to the terminating state. The Batch service then terminates any running tasks associated with the job and runs any required job release tasks. Then the job moves into the completed state. If there are any tasks in the job in the active state, they will remain in the active state. Once a job is terminated, new tasks cannot be added and any remaining active tasks will not be scheduled.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobTerminateHeaders>> terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job to terminate. </p>
    - id: terminateReason
      type: "26831127"
      description: <p>The text you want to appear as the job's TerminateReason. The default is 'UserTerminate'. </p>
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobTerminateHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.update(String,JobUpdateParameter)
  id: update(String,JobUpdateParameter)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: update(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter)
  fullName: com.microsoft.azure.batch.protocol.Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter)
  overload: com.microsoft.azure.batch.protocol.Jobs.update*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 417
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This fully replaces all the updatable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public void update(String jobId, JobUpdateParameter jobUpdateParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: <p>The parameters for the request. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.update(String,JobUpdateParameter,JobUpdateOptions)
  id: update(String,JobUpdateParameter,JobUpdateOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.update*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 463
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This fully replaces all the updatable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public void update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: <p>The parameters for the request. </p>
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String,JobUpdateParameter)
  id: updateAsync(String,JobUpdateParameter)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  overload: com.microsoft.azure.batch.protocol.Jobs.updateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 440
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This fully replaces all the updatable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String,JobUpdateParameter,final ServiceCallback<Void>)
  id: updateAsync(String,JobUpdateParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.updateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 429
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This fully replaces all the updatable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String,JobUpdateParameter,JobUpdateOptions)
  id: updateAsync(String,JobUpdateParameter,JobUpdateOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.updateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 488
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This fully replaces all the updatable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: <p>The parameters for the request. </p>
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String,JobUpdateParameter,JobUpdateOptions,final ServiceCallback<Void>)
  id: updateAsync(String,JobUpdateParameter,JobUpdateOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.updateAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 476
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This fully replaces all the updatable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: <p>The parameters for the request. </p>
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(String,JobUpdateParameter)
  id: updateWithServiceResponseAsync(String,JobUpdateParameter)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  overload: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 451
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This fully replaces all the updatable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobUpdateHeaders>> updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobUpdateHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(String,JobUpdateParameter,JobUpdateOptions)
  id: updateWithServiceResponseAsync(String,JobUpdateParameter,JobUpdateOptions)
  parent: com.microsoft.azure.batch.protocol.Jobs
  href: com.microsoft.azure.batch.protocol.Jobs.yml
  langs:
  - java
  name: updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Jobs.java
    startLine: 500
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified job. This fully replaces all the updatable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, JobUpdateHeaders>> updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job whose properties you want to update. </p>
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: <p>The parameters for the request. </p>
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.JobUpdateHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: c8683d81
  spec.java:
  - name: BatchErrorException
    fullName: BatchErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics*
  name: getAllLifetimeStatistics
  nameWithType: Jobs.getAllLifetimeStatistics
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics
  package: com.microsoft.azure.batch.protocol
- uid: 897eb10acom.microsoft.azure.batch.protocol.models.JobStatisticsa08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models.JobStatistics
    name: JobStatistics
    fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
    href: com.microsoft.azure.batch.protocol.models.JobStatistics.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models.JobStatisticsa08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models.JobStatistics
    name: JobStatistics
    fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
    href: com.microsoft.azure.batch.protocol.models.JobStatistics.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync*
  name: getAllLifetimeStatisticsAsync
  nameWithType: Jobs.getAllLifetimeStatisticsAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync
  package: com.microsoft.azure.batch.protocol
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models.JobStatisticsa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models.JobStatistics
    name: JobStatistics
    fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
    href: com.microsoft.azure.batch.protocol.models.JobStatistics.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models.JobStatisticsb33c76fccom.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models.JobStatistics
    name: JobStatistics
    fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
    href: com.microsoft.azure.batch.protocol.models.JobStatistics.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders
    name: JobGetAllLifetimeStatisticsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders
    href: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync*
  name: getAllLifetimeStatisticsWithServiceResponseAsync
  nameWithType: Jobs.getAllLifetimeStatisticsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.batch.protocol.Jobs.delete*
  name: delete
  nameWithType: Jobs.delete
  fullName: com.microsoft.azure.batch.protocol.Jobs.delete
  package: com.microsoft.azure.batch.protocol
- uid: 1c186eb5
  spec.java:
  - name: final ServiceCallback<Void>
    fullName: final ServiceCallback<Void>
- uid: aa81d378
  spec.java:
  - name: ServiceFuture<Void>
    fullName: ServiceFuture<Void>
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteAsync*
  name: deleteAsync
  nameWithType: Jobs.deleteAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteAsync
  package: com.microsoft.azure.batch.protocol
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.JobDeleteHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.JobDeleteHeaders
    name: JobDeleteHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobDeleteHeaders
    href: com.microsoft.azure.batch.protocol.models.JobDeleteHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync*
  name: deleteWithServiceResponseAsync
  nameWithType: Jobs.deleteWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.get*
  name: get
  nameWithType: Jobs.get
  fullName: com.microsoft.azure.batch.protocol.Jobs.get
  package: com.microsoft.azure.batch.protocol
- uid: 897eb10acom.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models.CloudJob.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models.CloudJob.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.getAsync*
  name: getAsync
  nameWithType: Jobs.getAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAsync
  package: com.microsoft.azure.batch.protocol
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models.CloudJob.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models.CloudJobb33c76fccom.microsoft.azure.batch.protocol.models.JobGetHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models.CloudJob.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models.JobGetHeaders
    name: JobGetHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobGetHeaders
    href: com.microsoft.azure.batch.protocol.models.JobGetHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: Jobs.getWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.patch*
  name: patch
  nameWithType: Jobs.patch
  fullName: com.microsoft.azure.batch.protocol.Jobs.patch
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.patchAsync*
  name: patchAsync
  nameWithType: Jobs.patchAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.JobPatchHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.JobPatchHeaders
    name: JobPatchHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobPatchHeaders
    href: com.microsoft.azure.batch.protocol.models.JobPatchHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync*
  name: patchWithServiceResponseAsync
  nameWithType: Jobs.patchWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.update*
  name: update
  nameWithType: Jobs.update
  fullName: com.microsoft.azure.batch.protocol.Jobs.update
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync*
  name: updateAsync
  nameWithType: Jobs.updateAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.JobUpdateHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.JobUpdateHeaders
    name: JobUpdateHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobUpdateHeaders
    href: com.microsoft.azure.batch.protocol.models.JobUpdateHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync*
  name: updateWithServiceResponseAsync
  nameWithType: Jobs.updateWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.disable*
  name: disable
  nameWithType: Jobs.disable
  fullName: com.microsoft.azure.batch.protocol.Jobs.disable
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.disableAsync*
  name: disableAsync
  nameWithType: Jobs.disableAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.JobDisableHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.JobDisableHeaders
    name: JobDisableHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobDisableHeaders
    href: com.microsoft.azure.batch.protocol.models.JobDisableHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync*
  name: disableWithServiceResponseAsync
  nameWithType: Jobs.disableWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.enable*
  name: enable
  nameWithType: Jobs.enable
  fullName: com.microsoft.azure.batch.protocol.Jobs.enable
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.enableAsync*
  name: enableAsync
  nameWithType: Jobs.enableAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.JobEnableHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.JobEnableHeaders
    name: JobEnableHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobEnableHeaders
    href: com.microsoft.azure.batch.protocol.models.JobEnableHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync*
  name: enableWithServiceResponseAsync
  nameWithType: Jobs.enableWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.terminate*
  name: terminate
  nameWithType: Jobs.terminate
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminate
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateAsync*
  name: terminateAsync
  nameWithType: Jobs.terminateAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.JobTerminateHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.JobTerminateHeaders
    name: JobTerminateHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobTerminateHeaders
    href: com.microsoft.azure.batch.protocol.models.JobTerminateHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync*
  name: terminateWithServiceResponseAsync
  nameWithType: Jobs.terminateWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.add*
  name: add
  nameWithType: Jobs.add
  fullName: com.microsoft.azure.batch.protocol.Jobs.add
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.addAsync*
  name: addAsync
  nameWithType: Jobs.addAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.addAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.JobAddHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.JobAddHeaders
    name: JobAddHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobAddHeaders
    href: com.microsoft.azure.batch.protocol.models.JobAddHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync*
  name: addWithServiceResponseAsync
  nameWithType: Jobs.addWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 36b27be0com.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models.CloudJob.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.list*
  name: list
  nameWithType: Jobs.list
  fullName: com.microsoft.azure.batch.protocol.Jobs.list
  package: com.microsoft.azure.batch.protocol
- uid: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudJoba08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models.CloudJob.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models.CloudJob.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listAsync*
  name: listAsync
  nameWithType: Jobs.listAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listAsync
  package: com.microsoft.azure.batch.protocol
- uid: 32da0907com.microsoft.azure.batch.protocol.models.CloudJobe7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models.CloudJob.yml
  - name: '>>'
    fullName: '>>'
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudJob8135b5ebcom.microsoft.azure.batch.protocol.models.JobListHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models.CloudJob.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models.JobListHeaders
    name: JobListHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobListHeaders
    href: com.microsoft.azure.batch.protocol.models.JobListHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync*
  name: listWithServiceResponseAsync
  nameWithType: Jobs.listWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models.JobListOptions
    name: JobListOptions
    fullName: com.microsoft.azure.batch.protocol.models.JobListOptions
    href: com.microsoft.azure.batch.protocol.models.JobListOptions.yml
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule*
  name: listFromJobSchedule
  nameWithType: Jobs.listFromJobSchedule
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync*
  name: listFromJobScheduleAsync
  nameWithType: Jobs.listFromJobScheduleAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync
  package: com.microsoft.azure.batch.protocol
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudJob8135b5ebcom.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models.CloudJob.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders
    name: JobListFromJobScheduleHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders
    href: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync*
  name: listFromJobScheduleWithServiceResponseAsync
  nameWithType: Jobs.listFromJobScheduleWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
    name: JobListFromJobScheduleOptions
    fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
    href: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions.yml
- uid: 36b27be0com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformationa08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    href: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus*
  name: listPreparationAndReleaseTaskStatus
  nameWithType: Jobs.listPreparationAndReleaseTaskStatus
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus
  package: com.microsoft.azure.batch.protocol
- uid: 3c4303efcom.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformationa08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    href: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    href: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync*
  name: listPreparationAndReleaseTaskStatusAsync
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync
  package: com.microsoft.azure.batch.protocol
- uid: 32da0907com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    href: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation.yml
  - name: '>>'
    fullName: '>>'
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation8135b5ebcom.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    href: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders
    name: JobListPreparationAndReleaseTaskStatusHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders
    href: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync*
  name: listPreparationAndReleaseTaskStatusWithServiceResponseAsync
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
    name: JobListPreparationAndReleaseTaskStatusOptions
    fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
    href: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions.yml
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts*
  name: getTaskCounts
  nameWithType: Jobs.getTaskCounts
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts
  package: com.microsoft.azure.batch.protocol
- uid: 897eb10acom.microsoft.azure.batch.protocol.models.TaskCountsa08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models.TaskCounts
    name: TaskCounts
    fullName: com.microsoft.azure.batch.protocol.models.TaskCounts
    href: com.microsoft.azure.batch.protocol.models.TaskCounts.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models.TaskCountsa08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models.TaskCounts
    name: TaskCounts
    fullName: com.microsoft.azure.batch.protocol.models.TaskCounts
    href: com.microsoft.azure.batch.protocol.models.TaskCounts.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync*
  name: getTaskCountsAsync
  nameWithType: Jobs.getTaskCountsAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync
  package: com.microsoft.azure.batch.protocol
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models.TaskCountsa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models.TaskCounts
    name: TaskCounts
    fullName: com.microsoft.azure.batch.protocol.models.TaskCounts
    href: com.microsoft.azure.batch.protocol.models.TaskCounts.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models.TaskCountsb33c76fccom.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models.TaskCounts
    name: TaskCounts
    fullName: com.microsoft.azure.batch.protocol.models.TaskCounts
    href: com.microsoft.azure.batch.protocol.models.TaskCounts.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders
    name: JobGetTaskCountsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders
    href: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync*
  name: getTaskCountsWithServiceResponseAsync
  nameWithType: Jobs.getTaskCountsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listNext*
  name: listNext
  nameWithType: Jobs.listNext
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNext
  package: com.microsoft.azure.batch.protocol
- uid: bd82102acom.microsoft.azure.batch.protocol.models.CloudJobe7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
    href: com.microsoft.azure.batch.protocol.models.CloudJob.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextAsync*
  name: listNextAsync
  nameWithType: Jobs.listNextAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync*
  name: listNextWithServiceResponseAsync
  nameWithType: Jobs.listNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListNextOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models.JobListNextOptions
    name: JobListNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.JobListNextOptions
    href: com.microsoft.azure.batch.protocol.models.JobListNextOptions.yml
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext*
  name: listFromJobScheduleNext
  nameWithType: Jobs.listFromJobScheduleNext
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync*
  name: listFromJobScheduleNextAsync
  nameWithType: Jobs.listFromJobScheduleNextAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync*
  name: listFromJobScheduleNextWithServiceResponseAsync
  nameWithType: Jobs.listFromJobScheduleNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
    name: JobListFromJobScheduleNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
    href: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions.yml
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext*
  name: listPreparationAndReleaseTaskStatusNext
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNext
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext
  package: com.microsoft.azure.batch.protocol
- uid: bd82102acom.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformatione7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    href: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync*
  name: listPreparationAndReleaseTaskStatusNextAsync
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync*
  name: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
    name: JobListPreparationAndReleaseTaskStatusNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
    href: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions.yml
- uid: com.microsoft.azure.batch.protocol.models.JobStatistics
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobStatistics.yml
  name: JobStatistics
  nameWithType: JobStatistics
  fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
  type: Class
  summary: "<p>Resource usage statistics for a job. </p>"
  syntax:
    content: public class JobStatistics
- uid: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders.yml
  name: JobGetAllLifetimeStatisticsHeaders
  nameWithType: JobGetAllLifetimeStatisticsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders
  type: Class
  summary: "<p>Defines headers for GetAllLifetimeStatistics operation. </p>"
  syntax:
    content: public class JobGetAllLifetimeStatisticsHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions.yml
  name: JobGetAllLifetimeStatisticsOptions
  nameWithType: JobGetAllLifetimeStatisticsOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
  type: Class
  summary: "<p>Additional parameters for getAllLifetimeStatistics operation. </p>"
  syntax:
    content: public class JobGetAllLifetimeStatisticsOptions
- uid: com.microsoft.azure.batch.protocol.models.JobDeleteHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobDeleteHeaders.yml
  name: JobDeleteHeaders
  nameWithType: JobDeleteHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobDeleteHeaders
  type: Class
  summary: "<p>Defines headers for Delete operation. </p>"
  syntax:
    content: public class JobDeleteHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobDeleteOptions.yml
  name: JobDeleteOptions
  nameWithType: JobDeleteOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
  type: Class
  summary: "<p>Additional parameters for delete operation. </p>"
  syntax:
    content: public class JobDeleteOptions
- uid: com.microsoft.azure.batch.protocol.models.CloudJob
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.CloudJob.yml
  name: CloudJob
  nameWithType: CloudJob
  fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  type: Class
  summary: "<p>An Azure Batch job. </p>"
  syntax:
    content: public class CloudJob
- uid: com.microsoft.azure.batch.protocol.models.JobGetHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobGetHeaders.yml
  name: JobGetHeaders
  nameWithType: JobGetHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobGetHeaders
  type: Class
  summary: "<p>Defines headers for Get operation. </p>"
  syntax:
    content: public class JobGetHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobGetOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobGetOptions.yml
  name: JobGetOptions
  nameWithType: JobGetOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobGetOptions
  type: Class
  summary: "<p>Additional parameters for get operation. </p>"
  syntax:
    content: public class JobGetOptions
- uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobPatchParameter.yml
  name: JobPatchParameter
  nameWithType: JobPatchParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter
  type: Class
  summary: "<p>The set of changes to be made to a job. </p>"
  syntax:
    content: public class JobPatchParameter
- uid: com.microsoft.azure.batch.protocol.models.JobPatchHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobPatchHeaders.yml
  name: JobPatchHeaders
  nameWithType: JobPatchHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobPatchHeaders
  type: Class
  summary: "<p>Defines headers for Patch operation. </p>"
  syntax:
    content: public class JobPatchHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobPatchOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobPatchOptions.yml
  name: JobPatchOptions
  nameWithType: JobPatchOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobPatchOptions
  type: Class
  summary: "<p>Additional parameters for patch operation. </p>"
  syntax:
    content: public class JobPatchOptions
- uid: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobUpdateParameter.yml
  name: JobUpdateParameter
  nameWithType: JobUpdateParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
  type: Class
  summary: "<p>The set of changes to be made to a job. </p>"
  syntax:
    content: public class JobUpdateParameter
- uid: com.microsoft.azure.batch.protocol.models.JobUpdateHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobUpdateHeaders.yml
  name: JobUpdateHeaders
  nameWithType: JobUpdateHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobUpdateHeaders
  type: Class
  summary: "<p>Defines headers for Update operation. </p>"
  syntax:
    content: public class JobUpdateHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobUpdateOptions.yml
  name: JobUpdateOptions
  nameWithType: JobUpdateOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
  type: Class
  summary: "<p>Additional parameters for update operation. </p>"
  syntax:
    content: public class JobUpdateOptions
- uid: com.microsoft.azure.batch.protocol.models.DisableJobOption
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.DisableJobOption.yml
  name: DisableJobOption
  nameWithType: DisableJobOption
  fullName: com.microsoft.azure.batch.protocol.models.DisableJobOption
  type: Enum
  summary: "<p>Defines values for DisableJobOption. </p>"
  syntax:
    content: public enum DisableJobOption
- uid: com.microsoft.azure.batch.protocol.models.JobDisableHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobDisableHeaders.yml
  name: JobDisableHeaders
  nameWithType: JobDisableHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobDisableHeaders
  type: Class
  summary: "<p>Defines headers for Disable operation. </p>"
  syntax:
    content: public class JobDisableHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobDisableOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobDisableOptions.yml
  name: JobDisableOptions
  nameWithType: JobDisableOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobDisableOptions
  type: Class
  summary: "<p>Additional parameters for disable operation. </p>"
  syntax:
    content: public class JobDisableOptions
- uid: com.microsoft.azure.batch.protocol.models.JobEnableHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobEnableHeaders.yml
  name: JobEnableHeaders
  nameWithType: JobEnableHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobEnableHeaders
  type: Class
  summary: "<p>Defines headers for Enable operation. </p>"
  syntax:
    content: public class JobEnableHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobEnableOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobEnableOptions.yml
  name: JobEnableOptions
  nameWithType: JobEnableOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobEnableOptions
  type: Class
  summary: "<p>Additional parameters for enable operation. </p>"
  syntax:
    content: public class JobEnableOptions
- uid: com.microsoft.azure.batch.protocol.models.JobTerminateHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobTerminateHeaders.yml
  name: JobTerminateHeaders
  nameWithType: JobTerminateHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobTerminateHeaders
  type: Class
  summary: "<p>Defines headers for Terminate operation. </p>"
  syntax:
    content: public class JobTerminateHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobTerminateOptions.yml
  name: JobTerminateOptions
  nameWithType: JobTerminateOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
  type: Class
  summary: "<p>Additional parameters for terminate operation. </p>"
  syntax:
    content: public class JobTerminateOptions
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobAddParameter.yml
  name: JobAddParameter
  nameWithType: JobAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter
  type: Class
  summary: "<p>An Azure Batch job to add. </p>"
  syntax:
    content: public class JobAddParameter
- uid: com.microsoft.azure.batch.protocol.models.JobAddHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobAddHeaders.yml
  name: JobAddHeaders
  nameWithType: JobAddHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobAddHeaders
  type: Class
  summary: "<p>Defines headers for Add operation. </p>"
  syntax:
    content: public class JobAddHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobAddOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobAddOptions.yml
  name: JobAddOptions
  nameWithType: JobAddOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobAddOptions
  type: Class
  summary: "<p>Additional parameters for add operation. </p>"
  syntax:
    content: public class JobAddOptions
- uid: com.microsoft.azure.batch.protocol.models.JobListHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobListHeaders.yml
  name: JobListHeaders
  nameWithType: JobListHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobListHeaders
  type: Class
  summary: "<p>Defines headers for List operation. </p>"
  syntax:
    content: public class JobListHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobListOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobListOptions.yml
  name: JobListOptions
  nameWithType: JobListOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListOptions
  type: Class
  summary: "<p>Additional parameters for list operation. </p>"
  syntax:
    content: public class JobListOptions
- uid: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders.yml
  name: JobListFromJobScheduleHeaders
  nameWithType: JobListFromJobScheduleHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders
  type: Class
  summary: "<p>Defines headers for ListFromJobSchedule operation. </p>"
  syntax:
    content: public class JobListFromJobScheduleHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions.yml
  name: JobListFromJobScheduleOptions
  nameWithType: JobListFromJobScheduleOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
  type: Class
  summary: "<p>Additional parameters for listFromJobSchedule operation. </p>"
  syntax:
    content: public class JobListFromJobScheduleOptions
- uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation.yml
  name: JobPreparationAndReleaseTaskExecutionInformation
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation
  fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
  type: Class
  summary: "<p>The status of the Job Preparation and Job Release tasks on a compute node. </p>"
  syntax:
    content: public class JobPreparationAndReleaseTaskExecutionInformation
- uid: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders.yml
  name: JobListPreparationAndReleaseTaskStatusHeaders
  nameWithType: JobListPreparationAndReleaseTaskStatusHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders
  type: Class
  summary: "<p>Defines headers for ListPreparationAndReleaseTaskStatus operation. </p>"
  syntax:
    content: public class JobListPreparationAndReleaseTaskStatusHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions.yml
  name: JobListPreparationAndReleaseTaskStatusOptions
  nameWithType: JobListPreparationAndReleaseTaskStatusOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
  type: Class
  summary: "<p>Additional parameters for listPreparationAndReleaseTaskStatus operation. </p>"
  syntax:
    content: public class JobListPreparationAndReleaseTaskStatusOptions
- uid: com.microsoft.azure.batch.protocol.models.TaskCounts
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.TaskCounts.yml
  name: TaskCounts
  nameWithType: TaskCounts
  fullName: com.microsoft.azure.batch.protocol.models.TaskCounts
  type: Class
  summary: "<p>The task counts for a job. </p>"
  syntax:
    content: public class TaskCounts
- uid: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders.yml
  name: JobGetTaskCountsHeaders
  nameWithType: JobGetTaskCountsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders
  type: Class
  summary: "<p>Defines headers for GetTaskCounts operation. </p>"
  syntax:
    content: public class JobGetTaskCountsHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions.yml
  name: JobGetTaskCountsOptions
  nameWithType: JobGetTaskCountsOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions
  type: Class
  summary: "<p>Additional parameters for getTaskCounts operation. </p>"
  syntax:
    content: public class JobGetTaskCountsOptions
- uid: com.microsoft.azure.batch.protocol.models.JobListNextOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobListNextOptions.yml
  name: JobListNextOptions
  nameWithType: JobListNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListNextOptions
  type: Class
  summary: "<p>Additional parameters for listNext operation. </p>"
  syntax:
    content: public class JobListNextOptions
- uid: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions.yml
  name: JobListFromJobScheduleNextOptions
  nameWithType: JobListFromJobScheduleNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
  type: Class
  summary: "<p>Additional parameters for listFromJobScheduleNext operation. </p>"
  syntax:
    content: public class JobListFromJobScheduleNextOptions
- uid: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions.yml
  name: JobListPreparationAndReleaseTaskStatusNextOptions
  nameWithType: JobListPreparationAndReleaseTaskStatusNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
  type: Class
  summary: "<p>Additional parameters for listPreparationAndReleaseTaskStatusNext operation. </p>"
  syntax:
    content: public class JobListPreparationAndReleaseTaskStatusNextOptions
