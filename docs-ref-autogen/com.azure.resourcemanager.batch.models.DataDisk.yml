### YamlMime:JavaType
uid: "com.azure.resourcemanager.batch.models.DataDisk"
fullName: "com.azure.resourcemanager.batch.models.DataDisk"
name: "DataDisk"
nameWithType: "DataDisk"
summary: "Settings which will be used by the data disks associated to Compute Nodes in the Pool."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DataDisk**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.DataDisk?alt=com.azure.resourcemanager.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.batch.models.DataDisk.DataDisk()"
  fullName: "com.azure.resourcemanager.batch.models.DataDisk.DataDisk()"
  name: "DataDisk()"
  nameWithType: "DataDisk.DataDisk()"
  summary: "Creates an instance of Data<wbr>Disk class."
  syntax: "public DataDisk()"
  desc: "Creates an instance of DataDisk class."
methods:
- uid: "com.azure.resourcemanager.batch.models.DataDisk.caching()"
  fullName: "com.azure.resourcemanager.batch.models.DataDisk.caching()"
  name: "caching()"
  nameWithType: "DataDisk.caching()"
  summary: "Get the caching property: Values are: none - The caching mode for the disk is not enabled."
  syntax: "public CachingType caching()"
  desc: "Get the caching property: Values are: none - The caching mode for the disk is not enabled. readOnly - The caching mode for the disk is read only. readWrite - The caching mode for the disk is read and write. The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
  returns:
    description: "the caching value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.CachingType?alt=com.azure.resourcemanager.batch.models.CachingType&text=CachingType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.DataDisk.diskSizeGB()"
  fullName: "com.azure.resourcemanager.batch.models.DataDisk.diskSizeGB()"
  name: "diskSizeGB()"
  nameWithType: "DataDisk.diskSizeGB()"
  summary: "Get the disk<wbr>SizeGB property: The initial disk size in GB when creating new data disk."
  syntax: "public int diskSizeGB()"
  desc: "Get the diskSizeGB property: The initial disk size in GB when creating new data disk."
  returns:
    description: "the diskSizeGB value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.DataDisk.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.batch.models.DataDisk.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "DataDisk.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Data<wbr>Disk from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DataDisk fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of DataDisk from the JsonReader."
  returns:
    description: "An instance of DataDisk if the JsonReader was pointing to an instance of it, or null if it was pointing\n to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DataDisk?alt=com.azure.resourcemanager.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.DataDisk.lun()"
  fullName: "com.azure.resourcemanager.batch.models.DataDisk.lun()"
  name: "lun()"
  nameWithType: "DataDisk.lun()"
  summary: "Get the lun property: The lun is used to uniquely identify each data disk."
  syntax: "public int lun()"
  desc: "Get the lun property: The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The value must be between 0 and 63, inclusive."
  returns:
    description: "the lun value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.DataDisk.storageAccountType()"
  fullName: "com.azure.resourcemanager.batch.models.DataDisk.storageAccountType()"
  name: "storageAccountType()"
  nameWithType: "DataDisk.storageAccountType()"
  summary: "Get the storage<wbr>Account<wbr>Type property: If omitted, the default is \"Standard\\_LRS\"."
  syntax: "public StorageAccountType storageAccountType()"
  desc: "Get the storageAccountType property: If omitted, the default is \"Standard\\_LRS\". Values are: Standard\\_LRS - The data disk should use standard locally redundant storage. Premium\\_LRS - The data disk should use premium locally redundant storage."
  returns:
    description: "the storageAccountType value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.StorageAccountType?alt=com.azure.resourcemanager.batch.models.StorageAccountType&text=StorageAccountType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.DataDisk.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.batch.models.DataDisk.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "DataDisk.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.DataDisk.validate()"
  fullName: "com.azure.resourcemanager.batch.models.DataDisk.validate()"
  name: "validate()"
  nameWithType: "DataDisk.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.batch.models.DataDisk.withCaching(com.azure.resourcemanager.batch.models.CachingType)"
  fullName: "com.azure.resourcemanager.batch.models.DataDisk.withCaching(CachingType caching)"
  name: "withCaching(CachingType caching)"
  nameWithType: "DataDisk.withCaching(CachingType caching)"
  summary: "Set the caching property: Values are: none - The caching mode for the disk is not enabled."
  parameters:
  - description: "the caching value to set."
    name: "caching"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.CachingType?alt=com.azure.resourcemanager.batch.models.CachingType&text=CachingType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withCaching(CachingType caching)"
  desc: "Set the caching property: Values are: none - The caching mode for the disk is not enabled. readOnly - The caching mode for the disk is read only. readWrite - The caching mode for the disk is read and write. The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DataDisk?alt=com.azure.resourcemanager.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.DataDisk.withDiskSizeGB(int)"
  fullName: "com.azure.resourcemanager.batch.models.DataDisk.withDiskSizeGB(int diskSizeGB)"
  name: "withDiskSizeGB(int diskSizeGB)"
  nameWithType: "DataDisk.withDiskSizeGB(int diskSizeGB)"
  summary: "Set the disk<wbr>SizeGB property: The initial disk size in GB when creating new data disk."
  parameters:
  - description: "the diskSizeGB value to set."
    name: "diskSizeGB"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withDiskSizeGB(int diskSizeGB)"
  desc: "Set the diskSizeGB property: The initial disk size in GB when creating new data disk."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DataDisk?alt=com.azure.resourcemanager.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.DataDisk.withLun(int)"
  fullName: "com.azure.resourcemanager.batch.models.DataDisk.withLun(int lun)"
  name: "withLun(int lun)"
  nameWithType: "DataDisk.withLun(int lun)"
  summary: "Set the lun property: The lun is used to uniquely identify each data disk."
  parameters:
  - description: "the lun value to set."
    name: "lun"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withLun(int lun)"
  desc: "Set the lun property: The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The value must be between 0 and 63, inclusive."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DataDisk?alt=com.azure.resourcemanager.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.DataDisk.withStorageAccountType(com.azure.resourcemanager.batch.models.StorageAccountType)"
  fullName: "com.azure.resourcemanager.batch.models.DataDisk.withStorageAccountType(StorageAccountType storageAccountType)"
  name: "withStorageAccountType(StorageAccountType storageAccountType)"
  nameWithType: "DataDisk.withStorageAccountType(StorageAccountType storageAccountType)"
  summary: "Set the storage<wbr>Account<wbr>Type property: If omitted, the default is \"Standard\\_LRS\"."
  parameters:
  - description: "the storageAccountType value to set."
    name: "storageAccountType"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.StorageAccountType?alt=com.azure.resourcemanager.batch.models.StorageAccountType&text=StorageAccountType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withStorageAccountType(StorageAccountType storageAccountType)"
  desc: "Set the storageAccountType property: If omitted, the default is \"Standard\\_LRS\". Values are: Standard\\_LRS - The data disk should use standard locally redundant storage. Premium\\_LRS - The data disk should use premium locally redundant storage."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DataDisk?alt=com.azure.resourcemanager.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks, you need to mount and format the disks from within a VM to use them."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.DataDisk?alt=com.azure.resourcemanager.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.batch.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batch:2.0.0
