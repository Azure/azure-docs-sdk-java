### YamlMime:JavaMember
uid: "com.azure.storage.blob.BlobServiceAsyncClient.createBlobContainerWithResponse*"
fullName: "com.azure.storage.blob.BlobServiceAsyncClient.createBlobContainerWithResponse"
name: "createBlobContainerWithResponse"
nameWithType: "BlobServiceAsyncClient.createBlobContainerWithResponse"
members:
- uid: "com.azure.storage.blob.BlobServiceAsyncClient.createBlobContainerWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.PublicAccessType)"
  fullName: "com.azure.storage.blob.BlobServiceAsyncClient.createBlobContainerWithResponse(String containerName, Map<String,String> metadata, PublicAccessType accessType)"
  name: "createBlobContainerWithResponse(String containerName, Map<String,String> metadata, PublicAccessType accessType)"
  nameWithType: "BlobServiceAsyncClient.createBlobContainerWithResponse(String containerName, Map<String,String> metadata, PublicAccessType accessType)"
  summary: "Creates a new container within a storage account. If a container with the same name already exists, the operation fails. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n \n BlobContainerAsyncClient containerClient = client\n     .createBlobContainerWithResponse(\"containerName\", metadata, PublicAccessType.CONTAINER).block().getValue();\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/create-container"
  parameters:
  - description: "Name of the container to create"
    name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Metadata to associate with the container"
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Specifies how the data in this container is available to the public. See the\n x-ms-blob-public-access header in the Azure Docs for more information. Pass null for no public access."
    name: "accessType"
    type: "<xref href=\"com.azure.storage.blob.models.PublicAccessType?alt=com.azure.storage.blob.models.PublicAccessType&text=PublicAccessType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BlobContainerAsyncClient>> createBlobContainerWithResponse(String containerName, Map<String,String> metadata, PublicAccessType accessType)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\">value</xref> contains a <xref uid=\"com.azure.storage.blob.BlobContainerAsyncClient\" data-throw-if-not-resolved=\"false\">BlobContainerAsyncClient</xref> used to interact with the container created."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.BlobContainerAsyncClient?alt=com.azure.storage.blob.BlobContainerAsyncClient&text=BlobContainerAsyncClient\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob"
artifact: com.azure:azure-storage-blob:12.8.0
