### YamlMime:JavaMember
nameWithType: CloudBlob.delete
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudBlob.delete()
  name: delete()
  nameWithType: CloudBlob.delete()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the blob.</p>

    <p>If a delete retention policy is enabled on the service, the blob will be retained for a specified period of time, before being removed permanently by garbage collection.</p>

    <p></p>
  syntax: public final void delete()
  uid: com.microsoft.azure.storage.blob.CloudBlob.delete()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.delete(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: delete(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.delete(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption"></xref> object that indicates whether to delete only snapshots, or the blob and its snapshots. </p>
    name: deleteSnapshotsOption
    type: final <xref href="com.microsoft.azure.storage.blob.DeleteSnapshotsOption?alt=com.microsoft.azure.storage.blob.DeleteSnapshotsOption&text=DeleteSnapshotsOption" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the blob using the specified snapshot and request options, and operation context.</p>

    <p>If a delete retention policy is enabled on the service, the blob will be retained for a specified period of time, before being removed permanently by garbage collection.</p>

    <p>A blob that has snapshots cannot be deleted unless the snapshots are also deleted. If a blob has snapshots, use the <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption.DELETE_SNAPSHOTS_ONLY" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption#DELETE_SNAPSHOTS_ONLY"></xref> or <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption.INCLUDE_SNAPSHOTS" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption#INCLUDE_SNAPSHOTS"></xref> value in the  parameter to specify how the snapshots should be handled when the blob is deleted.</p>

    <p></p>
  syntax: public final void delete(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.delete(final DeleteSnapshotsOption,final AccessCondition,BlobRequestOptions,OperationContext)
uid: com.microsoft.azure.storage.blob.CloudBlob.delete*
fullName: com.microsoft.azure.storage.blob.CloudBlob.delete
name: delete()
package: com.microsoft.azure.storage.blob
metadata: {}
