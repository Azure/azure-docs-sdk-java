### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  id: ServersClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation
  children:
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDelete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDeleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailability(java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityAsync(java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.list()
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.listAsync()
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  - com.azure.resourcemanager.sql.implementation.ServersClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  langs:
  - java
  name: ServersClientImpl
  nameWithType: ServersClientImpl
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  type: Class
  package: com.azure.resourcemanager.sql.implementation
  summary: An instance of this class provides access to all the operations defined in ServersClient.
  syntax:
    content: public final class ServersClientImpl implements InnerSupportsGet<ServerInner>, InnerSupportsListing<ServerInner>, InnerSupportsDelete<Void>, ServersClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.sql.fluent.models.ServerInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.sql.fluent.models.ServerInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  - com.azure.resourcemanager.sql.fluent.ServersClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.ServersClientImpl(com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl)
  id: ServersClientImpl(com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: ServersClientImpl(SqlManagementClientImpl client)
  nameWithType: ServersClientImpl.ServersClientImpl(SqlManagementClientImpl client)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.ServersClientImpl(SqlManagementClientImpl client)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.ServersClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.sql.implementation
  summary: Initializes an instance of ServersClientImpl.
  syntax:
    content: " ServersClientImpl(SqlManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
  nameWithType: ServersClientImpl.beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates or updates a server.
  syntax:
    content: public SyncPoller<PollResult<ServerInner>,ServerInner> beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ServerInner
      description: An Azure SQL Database server.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ServerInner>,com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  nameWithType: ServersClientImpl.beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates or updates a server.
  syntax:
    content: public SyncPoller<PollResult<ServerInner>,ServerInner> beginCreateOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ServerInner
      description: An Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ServerInner>,com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  id: beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: beginCreateOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters)
  nameWithType: ServersClientImpl.beginCreateOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates or updates a server.
  syntax:
    content: public PollerFlux<PollResult<ServerInner>,ServerInner> beginCreateOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ServerInner
      description: An Azure SQL Database server.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ServerInner>,com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDelete(java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String serverName)
  nameWithType: ServersClientImpl.beginDelete(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDelete(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a server.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClientImpl.beginDelete(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDelete(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a server.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDeleteAsync(java.lang.String,java.lang.String)
  id: beginDeleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: beginDeleteAsync(String resourceGroupName, String serverName)
  nameWithType: ServersClientImpl.beginDeleteAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDeleteAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDeleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a server.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters)
  nameWithType: ServersClientImpl.beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates a server.
  syntax:
    content: public SyncPoller<PollResult<ServerInner>,ServerInner> beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ServerInner>,com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  nameWithType: ServersClientImpl.beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates a server.
  syntax:
    content: public SyncPoller<PollResult<ServerInner>,ServerInner> beginUpdate(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ServerInner>,com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  id: beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: beginUpdateAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  nameWithType: ServersClientImpl.beginUpdateAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdateAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates a server.
  syntax:
    content: public PollerFlux<PollResult<ServerInner>,ServerInner> beginUpdateAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ServerInner>,com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailability(java.lang.String)
  id: checkNameAvailability(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: checkNameAvailability(String name)
  nameWithType: ServersClientImpl.checkNameAvailability(String name)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailability(String name)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailability*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Determines whether a resource can be created with the specified name.
  syntax:
    content: public CheckNameAvailabilityResponseInner checkNameAvailability(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The name parameter.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner
      description: the result of a name availability check.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityAsync(java.lang.String)
  id: checkNameAvailabilityAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: checkNameAvailabilityAsync(String name)
  nameWithType: ServersClientImpl.checkNameAvailabilityAsync(String name)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityAsync(String name)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Determines whether a resource can be created with the specified name.
  syntax:
    content: public Mono<CheckNameAvailabilityResponseInner> checkNameAvailabilityAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The name parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner>
      description: the result of a name availability check.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityWithResponse(java.lang.String,com.azure.core.util.Context)
  id: checkNameAvailabilityWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: checkNameAvailabilityWithResponse(String name, Context context)
  nameWithType: ServersClientImpl.checkNameAvailabilityWithResponse(String name, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityWithResponse(String name, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityWithResponse*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Determines whether a resource can be created with the specified name.
  syntax:
    content: public Response<CheckNameAvailabilityResponseInner> checkNameAvailabilityWithResponse(String name, Context context)
    parameters:
    - id: name
      type: java.lang.String
      description: The name parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner>
      description: the result of a name availability check.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityWithResponseAsync(java.lang.String)
  id: checkNameAvailabilityWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: checkNameAvailabilityWithResponseAsync(String name)
  nameWithType: ServersClientImpl.checkNameAvailabilityWithResponseAsync(String name)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityWithResponseAsync(String name)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Determines whether a resource can be created with the specified name.
  syntax:
    content: public Mono<Response<CheckNameAvailabilityResponseInner>> checkNameAvailabilityWithResponseAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The name parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner>>
      description: the result of a name availability check.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
  nameWithType: ServersClientImpl.createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates or updates a server.
  syntax:
    content: public ServerInner createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ServerInner
      description: An Azure SQL Database server.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ServerInner
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  nameWithType: ServersClientImpl.createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates or updates a server.
  syntax:
    content: public ServerInner createOrUpdate(String resourceGroupName, String serverName, ServerInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ServerInner
      description: An Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ServerInner
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters)
  nameWithType: ServersClientImpl.createOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates or updates a server.
  syntax:
    content: public Mono<ServerInner> createOrUpdateAsync(String resourceGroupName, String serverName, ServerInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ServerInner
      description: An Azure SQL Database server.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ServerInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters)
  nameWithType: ServersClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates or updates a server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, ServerInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ServerInner
      description: An Azure SQL Database server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String serverName)
  nameWithType: ServersClientImpl.delete(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.delete(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a server.
  syntax:
    content: public void delete(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClientImpl.delete(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.delete(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a server.
  syntax:
    content: public void delete(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String serverName)
  nameWithType: ServersClientImpl.deleteAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.deleteAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a server.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String serverName)
  nameWithType: ServersClientImpl.deleteWithResponseAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.deleteWithResponseAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String serverName)
  nameWithType: ServersClientImpl.getByResourceGroup(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroup(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a server.
  syntax:
    content: public ServerInner getByResourceGroup(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ServerInner
      description: a server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String serverName)
  nameWithType: ServersClientImpl.getByResourceGroupAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a server.
  syntax:
    content: public Mono<ServerInner> getByResourceGroupAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: a server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: getByResourceGroupWithResponse(String resourceGroupName, String serverName, Context context)
  nameWithType: ServersClientImpl.getByResourceGroupWithResponse(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupWithResponse(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupWithResponse*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a server.
  syntax:
    content: public Response<ServerInner> getByResourceGroupWithResponse(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: a server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String serverName)
  nameWithType: ServersClientImpl.getByResourceGroupWithResponseAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupWithResponseAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a server.
  syntax:
    content: public Mono<Response<ServerInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ServerInner>>
      description: a server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: list()
  nameWithType: ServersClientImpl.list()
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.list()
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a list of all servers in the subscription.
  syntax:
    content: public PagedIterable<ServerInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: a list of all servers in the subscription.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: list(Context context)
  nameWithType: ServersClientImpl.list(Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.list(Context context)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a list of all servers in the subscription.
  syntax:
    content: public PagedIterable<ServerInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: a list of all servers in the subscription.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: listAsync()
  nameWithType: ServersClientImpl.listAsync()
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listAsync()
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a list of all servers in the subscription.
  syntax:
    content: public PagedFlux<ServerInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: a list of all servers in the subscription.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: ServersClientImpl.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a list of servers in a resource groups.
  syntax:
    content: public PagedIterable<ServerInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: a list of servers in a resource groups.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: ServersClientImpl.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a list of servers in a resource groups.
  syntax:
    content: public PagedIterable<ServerInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: a list of servers in a resource groups.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: ServersClientImpl.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a list of servers in a resource groups.
  syntax:
    content: public PagedFlux<ServerInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: a list of servers in a resource groups.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String serverName, ServerUpdate parameters)
  nameWithType: ServersClientImpl.update(String resourceGroupName, String serverName, ServerUpdate parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.update(String resourceGroupName, String serverName, ServerUpdate parameters)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates a server.
  syntax:
    content: public ServerInner update(String resourceGroupName, String serverName, ServerUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ServerInner
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  nameWithType: ServersClientImpl.update(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.update(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates a server.
  syntax:
    content: public ServerInner update(String resourceGroupName, String serverName, ServerUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ServerInner
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: updateAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  nameWithType: ServersClientImpl.updateAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.updateAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.updateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates a server.
  syntax:
    content: public Mono<ServerInner> updateAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ServerInner>
      description: an Azure SQL Database server.
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ServerUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
  parent: com.azure.resourcemanager.sql.implementation.ServersClientImpl
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  nameWithType: ServersClientImpl.updateWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.updateWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
  overload: com.azure.resourcemanager.sql.implementation.ServersClientImpl.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates a server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String serverName, ServerUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ServerUpdate
      description: An update request for an Azure SQL Database server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure SQL Database server.
references:
- uid: com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl
  name: SqlManagementClientImpl
  nameWithType: SqlManagementClientImpl
  fullName: com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.ServersClientImpl*
  name: ServersClientImpl
  nameWithType: ServersClientImpl.ServersClientImpl
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.ServersClientImpl
  package: com.azure.resourcemanager.sql.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.ServerInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ServerInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: ServersClientImpl.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroupAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ServerInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ServerInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: ServersClientImpl.listByResourceGroup
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listByResourceGroup
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ServerInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ServerInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: ServersClientImpl.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ServerInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ServerInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: ServersClientImpl.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.fluent.models.ServerInner
  name: ServerInner
  nameWithType: ServerInner
  fullName: com.azure.resourcemanager.sql.fluent.models.ServerInner
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: ServersClientImpl.getByResourceGroup
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroup
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ServerInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ServerInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupWithResponse*
  name: getByResourceGroupWithResponse
  nameWithType: ServersClientImpl.getByResourceGroupWithResponse
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.getByResourceGroupWithResponse
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: ServersClientImpl.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ServerInner>,com.azure.resourcemanager.sql.fluent.models.ServerInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ServerInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.sql.fluent.models.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ServerInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdateAsync*
  name: beginCreateOrUpdateAsync
  nameWithType: ServersClientImpl.beginCreateOrUpdateAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdateAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ServerInner>,com.azure.resourcemanager.sql.fluent.models.ServerInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ServerInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.sql.fluent.models.ServerInner
    name: ServerInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ServerInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: ServersClientImpl.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginCreateOrUpdate
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: ServersClientImpl.createOrUpdateAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdateAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdate*
  name: createOrUpdate
  nameWithType: ServersClientImpl.createOrUpdate
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.createOrUpdate
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: ServersClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDeleteAsync*
  name: beginDeleteAsync
  nameWithType: ServersClientImpl.beginDeleteAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDeleteAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDelete*
  name: beginDelete
  nameWithType: ServersClientImpl.beginDelete
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginDelete
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: ServersClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.deleteAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.delete*
  name: delete
  nameWithType: ServersClientImpl.delete
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.delete
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.models.ServerUpdate
  name: ServerUpdate
  nameWithType: ServerUpdate
  fullName: com.azure.resourcemanager.sql.models.ServerUpdate
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: ServersClientImpl.updateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.updateWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdateAsync*
  name: beginUpdateAsync
  nameWithType: ServersClientImpl.beginUpdateAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdateAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdate*
  name: beginUpdate
  nameWithType: ServersClientImpl.beginUpdate
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.beginUpdate
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.updateAsync*
  name: updateAsync
  nameWithType: ServersClientImpl.updateAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.updateAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.update*
  name: update
  nameWithType: ServersClientImpl.update
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.update
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listAsync*
  name: listAsync
  nameWithType: ServersClientImpl.listAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.listAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.list*
  name: list
  nameWithType: ServersClientImpl.list
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.list
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner
    name: CheckNameAvailabilityResponseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityWithResponseAsync*
  name: checkNameAvailabilityWithResponseAsync
  nameWithType: ServersClientImpl.checkNameAvailabilityWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner
    name: CheckNameAvailabilityResponseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityAsync*
  name: checkNameAvailabilityAsync
  nameWithType: ServersClientImpl.checkNameAvailabilityAsync
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner
  name: CheckNameAvailabilityResponseInner
  nameWithType: CheckNameAvailabilityResponseInner
  fullName: com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailability*
  name: checkNameAvailability
  nameWithType: ServersClientImpl.checkNameAvailability
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailability
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner
    name: CheckNameAvailabilityResponseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.CheckNameAvailabilityResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityWithResponse*
  name: checkNameAvailabilityWithResponse
  nameWithType: ServersClientImpl.checkNameAvailabilityWithResponse
  fullName: com.azure.resourcemanager.sql.implementation.ServersClientImpl.checkNameAvailabilityWithResponse
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.sql.fluent.ServersClient
  name: ServersClient
  nameWithType: ServersClient
  fullName: com.azure.resourcemanager.sql.fluent.ServersClient
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.sql.fluent.models.ServerInner>
  name: InnerSupportsListing<ServerInner>
  nameWithType: InnerSupportsListing<ServerInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.sql.fluent.models.ServerInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.sql.fluent.models.ServerInner>
  name: InnerSupportsGet<ServerInner>
  nameWithType: InnerSupportsGet<ServerInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.sql.fluent.models.ServerInner>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.sql.fluent.models.ServerInner>,com.azure.resourcemanager.sql.fluent.models.ServerInner
  name: ServerInner>,ServerInner
  nameWithType: ServerInner>,ServerInner
  fullName: com.azure.resourcemanager.sql.fluent.models.ServerInner>,com.azure.resourcemanager.sql.fluent.models.ServerInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
