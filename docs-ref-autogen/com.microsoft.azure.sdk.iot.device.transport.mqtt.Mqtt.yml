### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  id: Mqtt
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
  children:
  - com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.Mqtt(com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttConnection,com.microsoft.azure.sdk.iot.device.transport.IotHubListener,com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessageListener,java.lang.String,java.util.Map<java.lang.Integer,com.microsoft.azure.sdk.iot.device.Message>)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect()
  - com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost(java.lang.Throwable)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.deliveryComplete(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.disconnect()
  - com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.incomingLock
  - com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.messageArrived(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.peekMessage()
  - com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.publish(java.lang.String,com.microsoft.azure.sdk.iot.device.Message)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.receive()
  - com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.sendMessageAcknowledgement(int)
  - com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.subscribe(java.lang.String)
  langs:
  - java
  name: Mqtt
  nameWithType: Mqtt
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  type: Class
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public abstract class Mqtt implements MqttCallback
  inheritance:
  - java.lang.Object
  implements:
  - org.eclipse.paho.client.mqttv3.MqttCallback
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.Mqtt(com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttConnection,com.microsoft.azure.sdk.iot.device.transport.IotHubListener,com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessageListener,java.lang.String,java.util.Map<java.lang.Integer,com.microsoft.azure.sdk.iot.device.Message>)
  id: Mqtt(com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttConnection,com.microsoft.azure.sdk.iot.device.transport.IotHubListener,com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessageListener,java.lang.String,java.util.Map<java.lang.Integer,com.microsoft.azure.sdk.iot.device.Message>)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  langs:
  - java
  name: Mqtt(MqttConnection mqttConnection, IotHubListener listener, MqttMessageListener messageListener, String connectionId, Map<Integer,Message> unacknowledgedSentMessages)
  nameWithType: Mqtt.Mqtt(MqttConnection mqttConnection, IotHubListener listener, MqttMessageListener messageListener, String connectionId, Map<Integer,Message> unacknowledgedSentMessages)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.Mqtt(MqttConnection mqttConnection, IotHubListener listener, MqttMessageListener messageListener, String connectionId, Map<Integer,Message> unacknowledgedSentMessages)
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.Mqtt*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  summary: Constructor to instantiate mqtt broker connection.
  syntax:
    content: public Mqtt(MqttConnection mqttConnection, IotHubListener listener, MqttMessageListener messageListener, String connectionId, Map<Integer,Message> unacknowledgedSentMessages)
    parameters:
    - id: mqttConnection
      type: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttConnection
      description: the connection to use
    - id: listener
      type: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
      description: the listener to be called back upon connection established/lost and upon a message being delivered
    - id: messageListener
      type: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessageListener
      description: the listener to be called back upon a message arriving
    - id: connectionId
      type: java.lang.String
      description: the id of the connection
    - id: unacknowledgedSentMessages
      type: java.util.Map<java.lang.Integer,com.microsoft.azure.sdk.iot.device.Message>
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect()
  id: connect()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  langs:
  - java
  name: connect()
  nameWithType: Mqtt.connect()
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect()
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  summary: Method to connect to mqtt broker connection.
  syntax:
    content: protected void connect()
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: if failed to establish the mqtt connection.
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost(java.lang.Throwable)
  id: connectionLost(java.lang.Throwable)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  langs:
  - java
  name: connectionLost(Throwable throwable)
  nameWithType: Mqtt.connectionLost(Throwable throwable)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost(Throwable throwable)
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  summary: Event fired when the connection with the MQTT broker is lost.
  syntax:
    content: public void connectionLost(Throwable throwable)
    parameters:
    - id: throwable
      type: java.lang.Throwable
      description: Reason for losing the connection.
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.deliveryComplete(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken)
  id: deliveryComplete(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  langs:
  - java
  name: deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  nameWithType: Mqtt.deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.deliveryComplete*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  summary: Event fired when the message arrived on the MQTT broker.
  syntax:
    content: public void deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
    parameters:
    - id: iMqttDeliveryToken
      type: org.eclipse.paho.client.mqttv3.IMqttDeliveryToken
      description: the MqttDeliveryToken for which the message was successfully sent.
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.disconnect()
  id: disconnect()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  langs:
  - java
  name: disconnect()
  nameWithType: Mqtt.disconnect()
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.disconnect()
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.disconnect*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  summary: Method to disconnect to mqtt broker connection.
  syntax:
    content: protected void disconnect()
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: if failed to ends the mqtt connection.
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.incomingLock
  id: incomingLock
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  langs:
  - java
  name: incomingLock
  nameWithType: Mqtt.incomingLock
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.incomingLock
  type: Field
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: protected final Object incomingLock
    return:
      type: java.lang.Object
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.messageArrived(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage)
  id: messageArrived(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  langs:
  - java
  name: messageArrived(String topic, MqttMessage mqttMessage)
  nameWithType: Mqtt.messageArrived(String topic, MqttMessage mqttMessage)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.messageArrived(String topic, MqttMessage mqttMessage)
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.messageArrived*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  summary: Event fired when the message arrived on the MQTT broker.
  syntax:
    content: public void messageArrived(String topic, MqttMessage mqttMessage)
    parameters:
    - id: topic
      type: java.lang.String
      description: the topic on which message arrived.
    - id: mqttMessage
      type: org.eclipse.paho.client.mqttv3.MqttMessage
      description: the message arrived on the Mqtt broker.
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.peekMessage()
  id: peekMessage()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  langs:
  - java
  name: peekMessage()
  nameWithType: Mqtt.peekMessage()
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.peekMessage()
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.peekMessage*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public Pair<String,byte[]> peekMessage()
    return:
      type: org.apache.commons.lang3.tuple.Pair<java.lang.String,byte[]>
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.publish(java.lang.String,com.microsoft.azure.sdk.iot.device.Message)
  id: publish(java.lang.String,com.microsoft.azure.sdk.iot.device.Message)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  langs:
  - java
  name: publish(String publishTopic, Message message)
  nameWithType: Mqtt.publish(String publishTopic, Message message)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.publish(String publishTopic, Message message)
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.publish*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  summary: Method to publish to mqtt broker connection.
  syntax:
    content: protected void publish(String publishTopic, Message message)
    parameters:
    - id: publishTopic
      type: java.lang.String
      description: the topic to publish on mqtt broker connection.
    - id: message
      type: com.microsoft.azure.sdk.iot.device.Message
      description: the message to publish.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: >-
      if sas token has expired, if connection hasn't been established yet, or if Paho throws
       for any other reason
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.receive()
  id: receive()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  langs:
  - java
  name: receive()
  nameWithType: Mqtt.receive()
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.receive()
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.receive*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  summary: Method to receive messages on mqtt broker connection.
  syntax:
    content: public IotHubTransportMessage receive()
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage
      description: a received message. It can be <code>null</code>
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: if failed to receive mqtt message.
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.sendMessageAcknowledgement(int)
  id: sendMessageAcknowledgement(int)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  langs:
  - java
  name: sendMessageAcknowledgement(int messageId)
  nameWithType: Mqtt.sendMessageAcknowledgement(int messageId)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.sendMessageAcknowledgement(int messageId)
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.sendMessageAcknowledgement*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  summary: Attempts to send ack for the provided message. If the message does not have a saved messageId in this layer, this function shall return false.
  syntax:
    content: protected boolean sendMessageAcknowledgement(int messageId)
    parameters:
    - id: messageId
      type: int
      description: The message id to send the ack for
    return:
      type: boolean
      description: true if the ack is sent successfully or false if the message isn't tied to this mqtt client
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: if an exception occurs when sending the ack
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.subscribe(java.lang.String)
  id: subscribe(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  langs:
  - java
  name: subscribe(String topic)
  nameWithType: Mqtt.subscribe(String topic)
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.subscribe(String topic)
  overload: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.subscribe*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  summary: Method to subscribe to mqtt broker connection.
  syntax:
    content: protected void subscribe(String topic)
    parameters:
    - id: topic
      type: java.lang.String
      description: the topic to subscribe on mqtt broker connection.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: if failed to subscribe the mqtt topic.
references:
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttConnection
  name: MqttConnection
  nameWithType: MqttConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttConnection
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
  name: IotHubListener
  nameWithType: IotHubListener
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessageListener
  name: MqttMessageListener
  nameWithType: MqttMessageListener
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessageListener
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.util.Map<java.lang.Integer,com.microsoft.azure.sdk.iot.device.Message>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.sdk.iot.device.Message
    name: Message
    fullName: com.microsoft.azure.sdk.iot.device.Message
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.Mqtt*
  name: Mqtt
  nameWithType: Mqtt.Mqtt
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.Mqtt
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
  name: TransportException
  nameWithType: TransportException
  fullName: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect*
  name: connect
  nameWithType: Mqtt.connect
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.disconnect*
  name: disconnect
  nameWithType: Mqtt.disconnect
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.disconnect
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.device.Message
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.device.Message
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.publish*
  name: publish
  nameWithType: Mqtt.publish
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.publish
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.subscribe*
  name: subscribe
  nameWithType: Mqtt.subscribe
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.subscribe
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage
  name: IotHubTransportMessage
  nameWithType: IotHubTransportMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.receive*
  name: receive
  nameWithType: Mqtt.receive
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.receive
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost*
  name: connectionLost
  nameWithType: Mqtt.connectionLost
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: org.eclipse.paho.client.mqttv3.MqttMessage
  spec.java:
  - uid: org.eclipse.paho.client.mqttv3.MqttMessage
    name: MqttMessage
    fullName: org.eclipse.paho.client.mqttv3.MqttMessage
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.messageArrived*
  name: messageArrived
  nameWithType: Mqtt.messageArrived
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.messageArrived
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: org.eclipse.paho.client.mqttv3.IMqttDeliveryToken
  spec.java:
  - uid: org.eclipse.paho.client.mqttv3.IMqttDeliveryToken
    name: IMqttDeliveryToken
    fullName: org.eclipse.paho.client.mqttv3.IMqttDeliveryToken
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.deliveryComplete*
  name: deliveryComplete
  nameWithType: Mqtt.deliveryComplete
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.deliveryComplete
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: org.apache.commons.lang3.tuple.Pair<java.lang.String,byte[]>
  spec.java:
  - uid: org.apache.commons.lang3.tuple.Pair
    name: Pair
    fullName: org.apache.commons.lang3.tuple.Pair
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.peekMessage*
  name: peekMessage
  nameWithType: Mqtt.peekMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.peekMessage
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.sendMessageAcknowledgement*
  name: sendMessageAcknowledgement
  nameWithType: Mqtt.sendMessageAcknowledgement
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.sendMessageAcknowledgement
  package: com.microsoft.azure.sdk.iot.device.transport.mqtt
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.eclipse.paho.client.mqttv3.MqttCallback
  name: MqttCallback
  nameWithType: MqttCallback
  fullName: org.eclipse.paho.client.mqttv3.MqttCallback
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Integer,com.microsoft.azure.sdk.iot.device.Message
  name: Integer,Message
  nameWithType: Integer,Message
  fullName: java.lang.Integer,com.microsoft.azure.sdk.iot.device.Message
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: org.apache.commons.lang3.tuple.Pair
  name: Pair
  nameWithType: Pair
  fullName: org.apache.commons.lang3.tuple.Pair
- uid: java.lang.String,byte[]
  name: String,byte[]
  nameWithType: String,byte[]
  fullName: java.lang.String,byte[]
