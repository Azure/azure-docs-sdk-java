### YamlMime:JavaMember
nameWithType: Jobs.getWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.management.datalake.analytics.Jobs.getWithServiceResponseAsync(String accountName, UUID jobIdentity)
  name: getWithServiceResponseAsync(String accountName, UUID jobIdentity)
  nameWithType: Jobs.getWithServiceResponseAsync(String accountName, UUID jobIdentity)
  parameters:
  - description: <p>The Azure Data Lake Analytics account to execute job operations on. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>JobInfo ID. </p>
    name: jobIdentity
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the JobInformation object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.JobInformation?alt=com.microsoft.azure.management.datalake.analytics.models.JobInformation&text=JobInformation" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the job information for the specified job ID.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<JobInformation>> getWithServiceResponseAsync(String accountName, UUID jobIdentity)
  uid: com.microsoft.azure.management.datalake.analytics.Jobs.getWithServiceResponseAsync(String,UUID)
uid: com.microsoft.azure.management.datalake.analytics.Jobs.getWithServiceResponseAsync*
fullName: com.microsoft.azure.management.datalake.analytics.Jobs.getWithServiceResponseAsync(String accountName, UUID jobIdentity)
name: getWithServiceResponseAsync(String accountName, UUID jobIdentity)
package: com.microsoft.azure.management.datalake.analytics
metadata: {}
