### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakePathAsyncClient.setAccessControlRecursiveWithResponse*"
fullName: "com.azure.storage.file.datalake.DataLakePathAsyncClient.setAccessControlRecursiveWithResponse"
name: "setAccessControlRecursiveWithResponse"
nameWithType: "DataLakePathAsyncClient.setAccessControlRecursiveWithResponse"
members:
- uid: "com.azure.storage.file.datalake.DataLakePathAsyncClient.setAccessControlRecursiveWithResponse(com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions)"
  fullName: "com.azure.storage.file.datalake.DataLakePathAsyncClient.setAccessControlRecursiveWithResponse(PathSetAccessControlRecursiveOptions options)"
  name: "setAccessControlRecursiveWithResponse(PathSetAccessControlRecursiveOptions options)"
  nameWithType: "DataLakePathAsyncClient.setAccessControlRecursiveWithResponse(PathSetAccessControlRecursiveOptions options)"
  summary: "Recursively sets the access control on a path and all subpaths.\n\n**Code Samples**\n\n```java\nPathAccessControlEntry pathAccessControlEntry = new PathAccessControlEntry()\n     .setEntityId(\"entityId\")\n     .setPermissions(new RolePermissions().setReadPermission(true));\n List<PathAccessControlEntry> pathAccessControlEntries = new ArrayList<>();\n pathAccessControlEntries.add(pathAccessControlEntry);\n \n Integer batchSize = 2;\n Integer maxBatches = 10;\n boolean continueOnFailure = false;\n String continuationToken = null;\n Consumer<Response<AccessControlChanges>> progressHandler =\n     response -> System.out.println(\"Received response\");\n \n PathSetAccessControlRecursiveOptions options =\n     new PathSetAccessControlRecursiveOptions(pathAccessControlEntries)\n         .setBatchSize(batchSize)\n         .setMaxBatches(maxBatches)\n         .setContinueOnFailure(continueOnFailure)\n         .setContinuationToken(continuationToken)\n         .setProgressHandler(progressHandler);\n \n client.setAccessControlRecursive(pathAccessControlEntries).subscribe(\n     response -> System.out.printf(\"Successful changed file operations: %d\",\n         response.getCounters().getChangedFilesCount()));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update"
  parameters:
  - description: "<xref uid=\"com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathSetAccessControlRecursiveOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions?alt=com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions&text=PathSetAccessControlRecursiveOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<AccessControlChangeResult>> setAccessControlRecursiveWithResponse(PathSetAccessControlRecursiveOptions options)"
  returns:
    description: "A reactive response containing the result of the operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.AccessControlChangeResult?alt=com.azure.storage.file.datalake.models.AccessControlChangeResult&text=AccessControlChangeResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.4.0
