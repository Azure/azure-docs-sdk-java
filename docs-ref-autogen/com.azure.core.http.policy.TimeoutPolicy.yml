### YamlMime:JavaType
uid: "com.azure.core.http.policy.TimeoutPolicy"
fullName: "com.azure.core.http.policy.TimeoutPolicy"
name: "TimeoutPolicy"
nameWithType: "TimeoutPolicy"
summary: "The pipeline policy that limits the time allowed between sending a request and receiving the response."
deprecatedTag: "Consider configuring timeouts with <xref uid=\"com.azure.core.util.HttpClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.util.HttpClientOptions\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "@Deprecated\npublic class TimeoutPolicy implements HttpPipelinePolicy"
constructors:
- uid: "com.azure.core.http.policy.TimeoutPolicy.TimeoutPolicy(java.time.Duration)"
  fullName: "com.azure.core.http.policy.TimeoutPolicy.TimeoutPolicy(Duration timeoutDuration)"
  name: "TimeoutPolicy(Duration timeoutDuration)"
  nameWithType: "TimeoutPolicy.TimeoutPolicy(Duration timeoutDuration)"
  summary: "Creates a Timeout<wbr>Policy."
  parameters:
  - description: "the timeout duration"
    name: "timeoutDuration"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TimeoutPolicy(Duration timeoutDuration)"
  desc: "Creates a TimeoutPolicy."
methods:
- uid: "com.azure.core.http.policy.TimeoutPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  fullName: "com.azure.core.http.policy.TimeoutPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  name: "process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  nameWithType: "TimeoutPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  summary: "Processes provided request context and invokes the next policy."
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "next"
    type: "<xref href=\"com.azure.core.http.HttpPipelineNextPolicy?alt=com.azure.core.http.HttpPipelineNextPolicy&text=HttpPipelineNextPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  desc: "Processes provided request context and invokes the next policy."
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "The pipeline policy that limits the time allowed between sending a request and receiving the response."
hasDeprecatedTag: true
implements:
- "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.http.policy"
artifact: com.azure:azure-core:1.31.0
