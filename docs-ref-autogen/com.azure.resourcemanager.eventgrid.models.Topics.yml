### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.models.Topics"
fullName: "com.azure.resourcemanager.eventgrid.models.Topics"
name: "Topics"
nameWithType: "Topics"
summary: "Resource collection API of Topics."
syntax: "public interface Topics"
methods:
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.define(String name)"
  name: "define(String name)"
  nameWithType: "Topics.define(String name)"
  summary: "Begins definition for a new Topic resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Topic.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new Topic resource."
  returns:
    description: "the first stage of the new Topic definition."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic.DefinitionStages.Blank?alt=com.azure.resourcemanager.eventgrid.models.Topic.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.delete(String resourceGroupName, String topicName, Context context)"
  name: "delete(String resourceGroupName, String topicName, Context context)"
  nameWithType: "Topics.delete(String resourceGroupName, String topicName, Context context)"
  summary: "Delete existing topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String topicName, Context context)"
  desc: "Delete existing topic."
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Topics.deleteById(String id)"
  summary: "Delete existing topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Delete existing topic."
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Topics.deleteByIdWithResponse(String id, Context context)"
  summary: "Delete existing topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByIdWithResponse(String id, Context context)"
  desc: "Delete existing topic."
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.deleteByResourceGroup(String resourceGroupName, String topicName)"
  name: "deleteByResourceGroup(String resourceGroupName, String topicName)"
  nameWithType: "Topics.deleteByResourceGroup(String resourceGroupName, String topicName)"
  summary: "Delete existing topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String topicName)"
  desc: "Delete existing topic."
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Topics.getById(String id)"
  summary: "Get properties of a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Topic getById(String id)"
  desc: "Get properties of a topic."
  returns:
    description: "properties of a topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic?alt=com.azure.resourcemanager.eventgrid.models.Topic&text=Topic\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Topics.getByIdWithResponse(String id, Context context)"
  summary: "Get properties of a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Topic> getByIdWithResponse(String id, Context context)"
  desc: "Get properties of a topic."
  returns:
    description: "properties of a topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic?alt=com.azure.resourcemanager.eventgrid.models.Topic&text=Topic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.getByResourceGroup(String resourceGroupName, String topicName)"
  name: "getByResourceGroup(String resourceGroupName, String topicName)"
  nameWithType: "Topics.getByResourceGroup(String resourceGroupName, String topicName)"
  summary: "Get properties of a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Topic getByResourceGroup(String resourceGroupName, String topicName)"
  desc: "Get properties of a topic."
  returns:
    description: "properties of a topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic?alt=com.azure.resourcemanager.eventgrid.models.Topic&text=Topic\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.getByResourceGroupWithResponse(String resourceGroupName, String topicName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String topicName, Context context)"
  nameWithType: "Topics.getByResourceGroupWithResponse(String resourceGroupName, String topicName, Context context)"
  summary: "Get properties of a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Topic> getByResourceGroupWithResponse(String resourceGroupName, String topicName, Context context)"
  desc: "Get properties of a topic."
  returns:
    description: "properties of a topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic?alt=com.azure.resourcemanager.eventgrid.models.Topic&text=Topic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.list()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.list()"
  name: "list()"
  nameWithType: "Topics.list()"
  summary: "List all the topics under an Azure subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<Topic> list()"
  desc: "List all the topics under an Azure subscription."
  returns:
    description: "result of the List Topics operation."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic?alt=com.azure.resourcemanager.eventgrid.models.Topic&text=Topic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.list(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.list(String filter, Integer top, Context context)"
  name: "list(String filter, Integer top, Context context)"
  nameWithType: "Topics.list(String filter, Integer top, Context context)"
  summary: "List all the topics under an Azure subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The query used to filter the search results using OData syntax. Filtering is permitted on the\n     'name' property only and with limited number of OData operations. These operations are: the 'contains'\n     function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal).\n     No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE,\n     'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq\n     'westus'."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of results to return per page for the list operation. Valid range for top parameter is 1 to\n     100. If not specified, the default number of results to be returned is 20 items per page."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Topic> list(String filter, Integer top, Context context)"
  desc: "List all the topics under an Azure subscription."
  returns:
    description: "result of the List Topics operation."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic?alt=com.azure.resourcemanager.eventgrid.models.Topic&text=Topic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "Topics.listByResourceGroup(String resourceGroupName)"
  summary: "List all the topics under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Topic> listByResourceGroup(String resourceGroupName)"
  desc: "List all the topics under a resource group."
  returns:
    description: "result of the List Topics operation."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic?alt=com.azure.resourcemanager.eventgrid.models.Topic&text=Topic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.listByResourceGroup(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  name: "listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  nameWithType: "Topics.listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  summary: "List all the topics under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The query used to filter the search results using OData syntax. Filtering is permitted on the\n     'name' property only and with limited number of OData operations. These operations are: the 'contains'\n     function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal).\n     No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE,\n     'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq\n     'westus'."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of results to return per page for the list operation. Valid range for top parameter is 1 to\n     100. If not specified, the default number of results to be returned is 20 items per page."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Topic> listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  desc: "List all the topics under a resource group."
  returns:
    description: "result of the List Topics operation."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic?alt=com.azure.resourcemanager.eventgrid.models.Topic&text=Topic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.listEventTypes(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName)"
  name: "listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName)"
  nameWithType: "Topics.listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName)"
  summary: "List event types for a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Namespace of the provider of the topic."
    name: "providerNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic type."
    name: "resourceTypeName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<EventType> listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName)"
  desc: "List event types for a topic."
  returns:
    description: "result of the List Event Types operation."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.EventType?alt=com.azure.resourcemanager.eventgrid.models.EventType&text=EventType\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.listEventTypes(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName, Context context)"
  name: "listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName, Context context)"
  nameWithType: "Topics.listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName, Context context)"
  summary: "List event types for a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Namespace of the provider of the topic."
    name: "providerNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic type."
    name: "resourceTypeName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<EventType> listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName, Context context)"
  desc: "List event types for a topic."
  returns:
    description: "result of the List Event Types operation."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.EventType?alt=com.azure.resourcemanager.eventgrid.models.EventType&text=EventType\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.listSharedAccessKeys(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.listSharedAccessKeys(String resourceGroupName, String topicName)"
  name: "listSharedAccessKeys(String resourceGroupName, String topicName)"
  nameWithType: "Topics.listSharedAccessKeys(String resourceGroupName, String topicName)"
  summary: "List the two keys used to publish to a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicSharedAccessKeys listSharedAccessKeys(String resourceGroupName, String topicName)"
  desc: "List the two keys used to publish to a topic."
  returns:
    description: "shared access keys of the Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys&text=TopicSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.listSharedAccessKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.listSharedAccessKeysWithResponse(String resourceGroupName, String topicName, Context context)"
  name: "listSharedAccessKeysWithResponse(String resourceGroupName, String topicName, Context context)"
  nameWithType: "Topics.listSharedAccessKeysWithResponse(String resourceGroupName, String topicName, Context context)"
  summary: "List the two keys used to publish to a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<TopicSharedAccessKeys> listSharedAccessKeysWithResponse(String resourceGroupName, String topicName, Context context)"
  desc: "List the two keys used to publish to a topic."
  returns:
    description: "shared access keys of the Topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys&text=TopicSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.regenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest)"
  name: "regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest)"
  nameWithType: "Topics.regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest)"
  summary: "Regenerate a shared access key for a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest&text=TopicRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicSharedAccessKeys regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest)"
  desc: "Regenerate a shared access key for a topic."
  returns:
    description: "shared access keys of the Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys&text=TopicSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Topics.regenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topics.regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  name: "regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  nameWithType: "Topics.regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  summary: "Regenerate a shared access key for a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest&text=TopicRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicSharedAccessKeys regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  desc: "Regenerate a shared access key for a topic."
  returns:
    description: "shared access keys of the Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.TopicSharedAccessKeys&text=TopicSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Resource collection API of Topics."
metadata: {}
package: "com.azure.resourcemanager.eventgrid.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.1.0
