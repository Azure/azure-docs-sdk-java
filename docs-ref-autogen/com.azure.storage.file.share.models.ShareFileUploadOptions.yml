### YamlMime:JavaType
uid: "com.azure.storage.file.share.models.ShareFileUploadOptions"
fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions"
name: "ShareFileUploadOptions"
nameWithType: "ShareFileUploadOptions"
summary: "Extended options that may be passed when uploading a file range."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ShareFileUploadOptions"
constructors:
- uid: "com.azure.storage.file.share.models.ShareFileUploadOptions.ShareFileUploadOptions(java.io.InputStream)"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions.ShareFileUploadOptions(InputStream dataStream)"
  name: "ShareFileUploadOptions(InputStream dataStream)"
  nameWithType: "ShareFileUploadOptions.ShareFileUploadOptions(InputStream dataStream)"
  summary: "Constructs a new `FileParallelUploadOptions`."
  parameters:
  - description: "The data to write to the file. The data must be markable. This is in order to support retries.\n If the data is not markable, consider wrapping your data source in a <a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/BufferedInputStream.html\">BufferedInputStream</a> to add\n mark support."
    name: "dataStream"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
  syntax: "public ShareFileUploadOptions(InputStream dataStream)"
  desc: "Constructs a new `FileParallelUploadOptions`."
- uid: "com.azure.storage.file.share.models.ShareFileUploadOptions.ShareFileUploadOptions(java.io.InputStream,long)"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions.ShareFileUploadOptions(InputStream dataStream, long length)"
  name: "ShareFileUploadOptions(InputStream dataStream, long length)"
  nameWithType: "ShareFileUploadOptions.ShareFileUploadOptions(InputStream dataStream, long length)"
  summary: "Constructs a new `FileParallelUploadOptions`."
  deprecatedTag: "length is no longer necessary; use <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadOptions.ShareFileUploadOptions(java.io.InputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#ShareFileUploadOptions(InputStream)\"></xref> instead."
  parameters:
  - description: "The data to write to the file. The data must be markable. This is in order to support retries.\n If the data is not markable, consider wrapping your data source in a <a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/BufferedInputStream.html\">BufferedInputStream</a> to add\n mark support."
    name: "dataStream"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
  - description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic ShareFileUploadOptions(InputStream dataStream, long length)"
  desc: "Constructs a new `FileParallelUploadOptions`. Use <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadOptions.ShareFileUploadOptions(java.io.InputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#ShareFileUploadOptions(InputStream)\"></xref> instead to supply an InputStream without knowing the exact length beforehand."
  hasDeprecatedTag: true
- uid: "com.azure.storage.file.share.models.ShareFileUploadOptions.ShareFileUploadOptions(reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions.ShareFileUploadOptions(Flux<ByteBuffer> dataFlux)"
  name: "ShareFileUploadOptions(Flux<ByteBuffer> dataFlux)"
  nameWithType: "ShareFileUploadOptions.ShareFileUploadOptions(Flux<ByteBuffer> dataFlux)"
  summary: "Constructs a new `FileParallelUploadOptions`."
  parameters:
  - description: "The data to write to the file. Unlike other upload methods, this method does not require that\n the <code>Flux</code> be replayable. In other words, it does not have to support multiple subscribers and is not\n expected to produce the same values across subscriptions.\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    name: "dataFlux"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;"
  syntax: "public ShareFileUploadOptions(Flux<ByteBuffer> dataFlux)"
  desc: "Constructs a new `FileParallelUploadOptions`."
methods:
- uid: "com.azure.storage.file.share.models.ShareFileUploadOptions.getDataFlux()"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions.getDataFlux()"
  name: "getDataFlux()"
  nameWithType: "ShareFileUploadOptions.getDataFlux()"
  summary: "Gets the data source."
  syntax: "public Flux<ByteBuffer> getDataFlux()"
  desc: "Gets the data source."
  returns:
    description: "The data to write to the file."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;"
- uid: "com.azure.storage.file.share.models.ShareFileUploadOptions.getDataStream()"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions.getDataStream()"
  name: "getDataStream()"
  nameWithType: "ShareFileUploadOptions.getDataStream()"
  summary: "Gets the data source."
  syntax: "public InputStream getDataStream()"
  desc: "Gets the data source."
  returns:
    description: "The data to write to the file."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html\">InputStream</a>"
- uid: "com.azure.storage.file.share.models.ShareFileUploadOptions.getLength()"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions.getLength()"
  name: "getLength()"
  nameWithType: "ShareFileUploadOptions.getLength()"
  summary: "Gets the length of the data associated with an <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref> or <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref><<xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer\"></xref>>."
  syntax: "public Long getLength()"
  desc: "Gets the length of the data associated with an <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref> or <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref><<xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer\"></xref>>."
  returns:
    description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref> or <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref>&lt;<xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer\"></xref>&gt;."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
- uid: "com.azure.storage.file.share.models.ShareFileUploadOptions.getOffset()"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions.getOffset()"
  name: "getOffset()"
  nameWithType: "ShareFileUploadOptions.getOffset()"
  summary: "Gets the offset to start writing data at."
  syntax: "public Long getOffset()"
  desc: "Gets the offset to start writing data at."
  returns:
    description: "<xref uid=\"java.lang.Long\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Long\"></xref> position to write at."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
- uid: "com.azure.storage.file.share.models.ShareFileUploadOptions.getParallelTransferOptions()"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions.getParallelTransferOptions()"
  name: "getParallelTransferOptions()"
  nameWithType: "ShareFileUploadOptions.getParallelTransferOptions()"
  summary: "Gets the <xref uid=\"com.azure.storage.common.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref>."
  syntax: "public ParallelTransferOptions getParallelTransferOptions()"
  desc: "Gets the <xref uid=\"com.azure.storage.common.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref>."
  returns:
    description: "<xref uid=\"com.azure.storage.common.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref>"
    type: "<xref href=\"com.azure.storage.common.ParallelTransferOptions?alt=com.azure.storage.common.ParallelTransferOptions&text=ParallelTransferOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.models.ShareFileUploadOptions.getRequestConditions()"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions.getRequestConditions()"
  name: "getRequestConditions()"
  nameWithType: "ShareFileUploadOptions.getRequestConditions()"
  summary: "Gets the <xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareRequestConditions\"></xref>."
  syntax: "public ShareRequestConditions getRequestConditions()"
  desc: "Gets the <xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareRequestConditions\"></xref>."
  returns:
    description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareRequestConditions\"></xref>"
    type: "<xref href=\"com.azure.storage.file.share.models.ShareRequestConditions?alt=com.azure.storage.file.share.models.ShareRequestConditions&text=ShareRequestConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.models.ShareFileUploadOptions.setOffset(java.lang.Long)"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions.setOffset(Long offset)"
  name: "setOffset(Long offset)"
  nameWithType: "ShareFileUploadOptions.setOffset(Long offset)"
  summary: "Sets the offset to start writing data at."
  parameters:
  - description: "<xref uid=\"java.lang.Long\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Long\"></xref> position to write at."
    name: "offset"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
  syntax: "public ShareFileUploadOptions setOffset(Long offset)"
  desc: "Sets the offset to start writing data at."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.file.share.models.ShareFileUploadOptions?alt=com.azure.storage.file.share.models.ShareFileUploadOptions&text=ShareFileUploadOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.models.ShareFileUploadOptions.setParallelTransferOptions(com.azure.storage.common.ParallelTransferOptions)"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions.setParallelTransferOptions(ParallelTransferOptions parallelTransferOptions)"
  name: "setParallelTransferOptions(ParallelTransferOptions parallelTransferOptions)"
  nameWithType: "ShareFileUploadOptions.setParallelTransferOptions(ParallelTransferOptions parallelTransferOptions)"
  summary: "Sets the <xref uid=\"com.azure.storage.common.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.common.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref>"
    name: "parallelTransferOptions"
    type: "<xref href=\"com.azure.storage.common.ParallelTransferOptions?alt=com.azure.storage.common.ParallelTransferOptions&text=ParallelTransferOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ShareFileUploadOptions setParallelTransferOptions(ParallelTransferOptions parallelTransferOptions)"
  desc: "Sets the <xref uid=\"com.azure.storage.common.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref>."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.file.share.models.ShareFileUploadOptions?alt=com.azure.storage.file.share.models.ShareFileUploadOptions&text=ShareFileUploadOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.share.models.ShareFileUploadOptions.setRequestConditions(com.azure.storage.file.share.models.ShareRequestConditions)"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadOptions.setRequestConditions(ShareRequestConditions requestConditions)"
  name: "setRequestConditions(ShareRequestConditions requestConditions)"
  nameWithType: "ShareFileUploadOptions.setRequestConditions(ShareRequestConditions requestConditions)"
  summary: "Sets the <xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareRequestConditions\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.file.share.models.ShareRequestConditions?alt=com.azure.storage.file.share.models.ShareRequestConditions&text=ShareRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ShareFileUploadOptions setRequestConditions(ShareRequestConditions requestConditions)"
  desc: "Sets the <xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareRequestConditions\"></xref>."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.file.share.models.ShareFileUploadOptions?alt=com.azure.storage.file.share.models.ShareFileUploadOptions&text=ShareFileUploadOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Extended options that may be passed when uploading a file range."
metadata: {}
package: "com.azure.storage.file.share.models"
artifact: com.azure:azure-storage-file-share:12.15.1
