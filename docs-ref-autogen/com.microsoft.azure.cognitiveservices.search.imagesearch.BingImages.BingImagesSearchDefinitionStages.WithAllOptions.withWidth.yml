### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.BingImagesSearchDefinitionStages.WithAllOptions.withWidth*"
fullName: "com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.BingImagesSearchDefinitionStages.WithAllOptions.withWidth"
name: "withWidth"
nameWithType: "BingImages.BingImagesSearchDefinitionStages.WithAllOptions.withWidth"
members:
- uid: "com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.BingImagesSearchDefinitionStages.WithAllOptions.withWidth(java.lang.Integer)"
  fullName: "com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.BingImagesSearchDefinitionStages.WithAllOptions.withWidth(Integer width)"
  name: "withWidth(Integer width)"
  nameWithType: "BingImages.BingImagesSearchDefinitionStages.WithAllOptions.withWidth(Integer width)"
  summary: "Filter images that have the specified width, in pixels. You may use this filter with the size filter to return small images that have a width of 150 pixels."
  parameters:
  - name: "width"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BingImages.BingImagesSearchDefinitionStages.WithExecute withWidth(Integer width)"
  returns:
    description: "next definition stage"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.BingImagesSearchDefinitionStages.WithExecute?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.BingImagesSearchDefinitionStages.WithExecute&text=WithExecute\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.search.imagesearch"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-imagesearch:1.0.2
