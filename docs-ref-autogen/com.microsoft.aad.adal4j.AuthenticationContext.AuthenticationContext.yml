### YamlMime:JavaMember
nameWithType: AuthenticationContext.AuthenticationContext
type: constructor
members:
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.AuthenticationContext(final String authority, final boolean validateAuthority, final ExecutorService service)
  name: AuthenticationContext(final String authority, final boolean validateAuthority, final ExecutorService service)
  nameWithType: AuthenticationContext.AuthenticationContext(final String authority, final boolean validateAuthority, final ExecutorService service)
  parameters:
  - description: <p>URL of the authenticating authority </p>
    name: authority
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>flag to enable/disable authority validation. </p>
    name: validateAuthority
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  - description: <p>ExecutorService to be used to execute the requests. Developer is responsible for maintaining the lifetime of the ExecutorService. </p>
    name: service
    type: <xref href="final+ExecutorService?alt=final+ExecutorService&text=final+ExecutorService" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MalformedURLException?alt=MalformedURLException&text=MalformedURLException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if URL is invalid </p>
  summary: >-
    <p>Constructor to create the context with the address of the authority.</p>

    <p></p>
  syntax: public AuthenticationContext(final String authority, final boolean validateAuthority, final ExecutorService service)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.AuthenticationContext(final String,final boolean,final ExecutorService)
uid: com.microsoft.aad.adal4j.AuthenticationContext.AuthenticationContext*
fullName: com.microsoft.aad.adal4j.AuthenticationContext.AuthenticationContext
name: AuthenticationContext
package: com.microsoft.aad.adal4j
metadata: {}
