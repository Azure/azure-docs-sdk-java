### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.AppendBlobAsyncClient.appendBlockWithResponse*"
fullName: "com.azure.storage.blob.specialized.AppendBlobAsyncClient.appendBlockWithResponse"
name: "appendBlockWithResponse"
nameWithType: "AppendBlobAsyncClient.appendBlockWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.AppendBlobAsyncClient.appendBlockWithResponse(reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,byte[],com.azure.storage.blob.models.AppendBlobRequestConditions)"
  fullName: "com.azure.storage.blob.specialized.AppendBlobAsyncClient.appendBlockWithResponse(Flux<ByteBuffer> data, long length, byte[] contentMd5, AppendBlobRequestConditions appendBlobRequestConditions)"
  name: "appendBlockWithResponse(Flux<ByteBuffer> data, long length, byte[] contentMd5, AppendBlobRequestConditions appendBlobRequestConditions)"
  nameWithType: "AppendBlobAsyncClient.appendBlockWithResponse(Flux<ByteBuffer> data, long length, byte[] contentMd5, AppendBlobRequestConditions appendBlobRequestConditions)"
  summary: "Commits a new block of data to the end of the existing append blob.\n\nNote that the data passed must be replayable if retries are enabled (the default). In other words, the `Flux` must produce the same data each time it is subscribed to.\n\n**Code Samples**\n\n```java\nbyte[] md5 = MessageDigest.getInstance(\"MD5\").digest(\"data\".getBytes(StandardCharsets.UTF_8));\n AppendBlobRequestConditions requestConditions = new AppendBlobRequestConditions()\n     .setAppendPosition(POSITION)\n     .setMaxSize(maxSize);\n \n client.appendBlockWithResponse(data, length, md5, requestConditions).subscribe(response ->\n     System.out.printf(\"AppendBlob has %d committed blocks%n\", response.getValue().getBlobCommittedBlockCount()));\n```"
  parameters:
  - description: "The data to write to the blob. Note that this <code>Flux</code> must be replayable if retries are enabled\n (the default). In other words, the Flux must produce the same data each time it is subscribed to."
    name: "data"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The exact length of the data. It is important that this value match precisely the length of the\n data emitted by the <code>Flux</code>."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "An MD5 hash of the block content. This hash is used to verify the integrity of the block during\n transport. When this header is specified, the storage service compares the hash of the content that has arrived\n with this header value. Note that this MD5 hash is not stored with the blob. If the two hashes do not match, the\n operation will fail."
    name: "contentMd5"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "<xref uid=\"com.azure.storage.blob.models.AppendBlobRequestConditions\" data-throw-if-not-resolved=\"false\">AppendBlobRequestConditions</xref>"
    name: "appendBlobRequestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.AppendBlobRequestConditions?alt=com.azure.storage.blob.models.AppendBlobRequestConditions&text=AppendBlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<AppendBlobItem>> appendBlockWithResponse(Flux<ByteBuffer> data, long length, byte[] contentMd5, AppendBlobRequestConditions appendBlobRequestConditions)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\">value</xref> contains the append\n blob operation."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.AppendBlobItem?alt=com.azure.storage.blob.models.AppendBlobItem&text=AppendBlobItem\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
