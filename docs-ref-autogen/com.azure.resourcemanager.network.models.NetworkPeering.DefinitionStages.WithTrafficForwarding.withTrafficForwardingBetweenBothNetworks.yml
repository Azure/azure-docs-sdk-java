### YamlMime:JavaMember
uid: "com.azure.resourcemanager.network.models.NetworkPeering.DefinitionStages.WithTrafficForwarding.withTrafficForwardingBetweenBothNetworks*"
fullName: "com.azure.resourcemanager.network.models.NetworkPeering.DefinitionStages.WithTrafficForwarding.withTrafficForwardingBetweenBothNetworks"
name: "withTrafficForwardingBetweenBothNetworks"
nameWithType: "NetworkPeering.DefinitionStages.WithTrafficForwarding.withTrafficForwardingBetweenBothNetworks"
members:
- uid: "com.azure.resourcemanager.network.models.NetworkPeering.DefinitionStages.WithTrafficForwarding.withTrafficForwardingBetweenBothNetworks()"
  fullName: "com.azure.resourcemanager.network.models.NetworkPeering.DefinitionStages.WithTrafficForwarding.withTrafficForwardingBetweenBothNetworks()"
  name: "withTrafficForwardingBetweenBothNetworks()"
  nameWithType: "NetworkPeering.DefinitionStages.WithTrafficForwarding.withTrafficForwardingBetweenBothNetworks()"
  summary: "Allows traffic forwarding both from either peered network into the other.\n\nThis setting will have effect on the remote network only if the remote network is in the same subscription. Otherwise, it will be ignored and you need to change the corresponding traffic forwarding setting on the remote network's matching peering explicitly."
  syntax: "public abstract NetworkPeering.DefinitionStages.WithCreate withTrafficForwardingBetweenBothNetworks()"
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"com.azure.resourcemanager.network.models.NetworkPeering.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.network.models.NetworkPeering.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
