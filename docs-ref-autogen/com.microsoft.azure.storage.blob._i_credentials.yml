### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.blob._i_credentials
  id: _i_credentials
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob._i_credentials.yml
  langs:
  - java
  name: ICredentials
  nameWithType: ICredentials
  fullName: com.microsoft.azure.storage.blob.ICredentials
  type: Interface
  source:
    remote:
      path: src/main/java/com/microsoft/azure/storage/blob/ICredentials.java
      branch: master
      repo: https://github.com/Azure/azure-storage-java
    path: src/main/java/com/microsoft/azure/storage/blob/ICredentials.java
    startLine: 22
  package: com.microsoft.azure.storage.blob
  summary: "<p>Credentials represent any credential type it is used to create a credential policy Factory. </p>"
  syntax:
    content: public interface ICredentials
references:
- uid: com.microsoft.azure.storage.blob._anonymous_credentials
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob._anonymous_credentials.yml
  name: AnonymousCredentials
  nameWithType: AnonymousCredentials
  fullName: com.microsoft.azure.storage.blob.AnonymousCredentials
  type: Class
  summary: <p>Anonymous credentials are to be used with with HTTP(S) requests that read blobs from public containers or requests that use a Shared Access Signature (SAS). This is because Anonymous credentials will not set an Authorization header. Pass an instance of this class as the credentials parameter when creating a new pipeline (typically with <xref uid="com.microsoft.azure.storage.blob._storage_u_r_l" data-throw-if-not-resolved="false">StorageURL</xref>). </p>
  syntax:
    content: public class AnonymousCredentials implements ICredentials
- uid: com.microsoft.azure.storage.blob._shared_key_credentials
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob._shared_key_credentials.yml
  name: SharedKeyCredentials
  nameWithType: SharedKeyCredentials
  fullName: com.microsoft.azure.storage.blob.SharedKeyCredentials
  type: Class
  summary: <p>SharedKeyCredentials are a means of signing and authenticating storage requests. The key can be obtained from the Azure portal. This factory will create policies which take care of all the details of creating strings to sign, signing them, and setting the Authentication header. While this is a common way of authenticating with the service, recommended practice is using <xref uid="com.microsoft.azure.storage.blob._token_credentials" data-throw-if-not-resolved="false">TokenCredentials</xref>. Pass this as the credentials in the construction of a new <xref uid="" data-throw-if-not-resolved="false">HttpPipeline</xref> via the <xref uid="com.microsoft.azure.storage.blob._storage_u_r_l" data-throw-if-not-resolved="false">StorageURL</xref> type. </p>
  syntax:
    content: public class SharedKeyCredentials
- uid: com.microsoft.azure.storage.blob._token_credentials
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob._token_credentials.yml
  name: TokenCredentials
  nameWithType: TokenCredentials
  fullName: com.microsoft.azure.storage.blob.TokenCredentials
  type: Class
  summary: <p>TokenCredentials are a means of authenticating requests to Azure Storage via OAuth user tokens. This is the preferred way of authenticating with Azure Storage. </p>
  syntax:
    content: public class TokenCredentials
