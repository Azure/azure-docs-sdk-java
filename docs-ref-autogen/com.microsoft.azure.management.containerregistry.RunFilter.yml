### YamlMime:JavaType
uid: "com.microsoft.azure.management.containerregistry.RunFilter"
fullName: "com.microsoft.azure.management.containerregistry.RunFilter"
name: "RunFilter"
nameWithType: "RunFilter"
summary: "Properties that are enabled for Odata querying on runs."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RunFilter"
constructors:
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.RunFilter()"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.RunFilter()"
  name: "RunFilter()"
  nameWithType: "RunFilter.RunFilter()"
  syntax: "public RunFilter()"
methods:
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.createTime()"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.createTime()"
  name: "createTime()"
  nameWithType: "RunFilter.createTime()"
  summary: "Get the create time for a run."
  syntax: "public DateTime createTime()"
  returns:
    description: "the createTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.finishTime()"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.finishTime()"
  name: "finishTime()"
  nameWithType: "RunFilter.finishTime()"
  summary: "Get the time the run finished."
  syntax: "public DateTime finishTime()"
  returns:
    description: "the finishTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.isArchiveEnabled()"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.isArchiveEnabled()"
  name: "isArchiveEnabled()"
  nameWithType: "RunFilter.isArchiveEnabled()"
  summary: "Get the value that indicates whether archiving is enabled or not."
  syntax: "public Boolean isArchiveEnabled()"
  returns:
    description: "the isArchiveEnabled value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.outputImageManifests()"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.outputImageManifests()"
  name: "outputImageManifests()"
  nameWithType: "RunFilter.outputImageManifests()"
  summary: "Get the list of comma-separated image manifests that were generated from the run. This is applicable if the run is of build type."
  syntax: "public String outputImageManifests()"
  returns:
    description: "the outputImageManifests value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.runId()"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.runId()"
  name: "runId()"
  nameWithType: "RunFilter.runId()"
  summary: "Get the unique identifier for the run."
  syntax: "public String runId()"
  returns:
    description: "the runId value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.runType()"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.runType()"
  name: "runType()"
  nameWithType: "RunFilter.runType()"
  summary: "Get the type of run. Possible values include: 'QuickBuild', 'QuickRun', 'AutoBuild', 'AutoRun'."
  syntax: "public RunType runType()"
  returns:
    description: "the runType value"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RunType?alt=com.microsoft.azure.management.containerregistry.RunType&text=RunType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.status()"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.status()"
  name: "status()"
  nameWithType: "RunFilter.status()"
  summary: "Get the current status of the run. Possible values include: 'Queued', 'Started', 'Running', 'Succeeded', 'Failed', 'Canceled', 'Error', 'Timeout'."
  syntax: "public RunStatus status()"
  returns:
    description: "the status value"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RunStatus?alt=com.microsoft.azure.management.containerregistry.RunStatus&text=RunStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.taskName()"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.taskName()"
  name: "taskName()"
  nameWithType: "RunFilter.taskName()"
  summary: "Get the name of the task that the run corresponds to."
  syntax: "public String taskName()"
  returns:
    description: "the taskName value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.withCreateTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.withCreateTime(DateTime createTime)"
  name: "withCreateTime(DateTime createTime)"
  nameWithType: "RunFilter.withCreateTime(DateTime createTime)"
  summary: "Set the create time for a run."
  parameters:
  - description: "the createTime value to set"
    name: "createTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RunFilter withCreateTime(DateTime createTime)"
  returns:
    description: "the RunFilter object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.withFinishTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.withFinishTime(DateTime finishTime)"
  name: "withFinishTime(DateTime finishTime)"
  nameWithType: "RunFilter.withFinishTime(DateTime finishTime)"
  summary: "Set the time the run finished."
  parameters:
  - description: "the finishTime value to set"
    name: "finishTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RunFilter withFinishTime(DateTime finishTime)"
  returns:
    description: "the RunFilter object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.withIsArchiveEnabled(java.lang.Boolean)"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.withIsArchiveEnabled(Boolean isArchiveEnabled)"
  name: "withIsArchiveEnabled(Boolean isArchiveEnabled)"
  nameWithType: "RunFilter.withIsArchiveEnabled(Boolean isArchiveEnabled)"
  summary: "Set the value that indicates whether archiving is enabled or not."
  parameters:
  - description: "the isArchiveEnabled value to set"
    name: "isArchiveEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RunFilter withIsArchiveEnabled(Boolean isArchiveEnabled)"
  returns:
    description: "the RunFilter object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.withOutputImageManifests(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.withOutputImageManifests(String outputImageManifests)"
  name: "withOutputImageManifests(String outputImageManifests)"
  nameWithType: "RunFilter.withOutputImageManifests(String outputImageManifests)"
  summary: "Set the list of comma-separated image manifests that were generated from the run. This is applicable if the run is of build type."
  parameters:
  - description: "the outputImageManifests value to set"
    name: "outputImageManifests"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RunFilter withOutputImageManifests(String outputImageManifests)"
  returns:
    description: "the RunFilter object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.withRunId(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.withRunId(String runId)"
  name: "withRunId(String runId)"
  nameWithType: "RunFilter.withRunId(String runId)"
  summary: "Set the unique identifier for the run."
  parameters:
  - description: "the runId value to set"
    name: "runId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RunFilter withRunId(String runId)"
  returns:
    description: "the RunFilter object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.withRunType(com.microsoft.azure.management.containerregistry.RunType)"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.withRunType(RunType runType)"
  name: "withRunType(RunType runType)"
  nameWithType: "RunFilter.withRunType(RunType runType)"
  summary: "Set the type of run. Possible values include: 'QuickBuild', 'QuickRun', 'AutoBuild', 'AutoRun'."
  parameters:
  - description: "the runType value to set"
    name: "runType"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RunType?alt=com.microsoft.azure.management.containerregistry.RunType&text=RunType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RunFilter withRunType(RunType runType)"
  returns:
    description: "the RunFilter object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.withStatus(com.microsoft.azure.management.containerregistry.RunStatus)"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.withStatus(RunStatus status)"
  name: "withStatus(RunStatus status)"
  nameWithType: "RunFilter.withStatus(RunStatus status)"
  summary: "Set the current status of the run. Possible values include: 'Queued', 'Started', 'Running', 'Succeeded', 'Failed', 'Canceled', 'Error', 'Timeout'."
  parameters:
  - description: "the status value to set"
    name: "status"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RunStatus?alt=com.microsoft.azure.management.containerregistry.RunStatus&text=RunStatus\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RunFilter withStatus(RunStatus status)"
  returns:
    description: "the RunFilter object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.RunFilter.withTaskName(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerregistry.RunFilter.withTaskName(String taskName)"
  name: "withTaskName(String taskName)"
  nameWithType: "RunFilter.withTaskName(String taskName)"
  summary: "Set the name of the task that the run corresponds to."
  parameters:
  - description: "the taskName value to set"
    name: "taskName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RunFilter withTaskName(String taskName)"
  returns:
    description: "the RunFilter object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.management.containerregistry"
artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.41.4
