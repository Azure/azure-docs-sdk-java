### YamlMime:JavaType
uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateAsyncClient"
fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateAsyncClient"
name: "ConfidentialLedgerCertificateAsyncClient"
nameWithType: "ConfidentialLedgerCertificateAsyncClient"
summary: "Initializes a new instance of the asynchronous Confidential<wbr>Ledger<wbr>Certificate<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ConfidentialLedgerCertificateAsyncClient"
methods:
- uid: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateAsyncClient.getLedgerIdentityWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.security.confidentialledger.certificate.ConfidentialLedgerCertificateAsyncClient.getLedgerIdentityWithResponse(String ledgerId, RequestOptions requestOptions)"
  name: "getLedgerIdentityWithResponse(String ledgerId, RequestOptions requestOptions)"
  nameWithType: "ConfidentialLedgerCertificateAsyncClient.getLedgerIdentityWithResponse(String ledgerId, RequestOptions requestOptions)"
  summary: "Gets identity information for a Confidential Ledger instance."
  parameters:
  - description: "Id of the Confidential Ledger instance to get information for."
    name: "ledgerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getLedgerIdentityWithResponse(String ledgerId, RequestOptions requestOptions)"
  desc: "Gets identity information for a Confidential Ledger instance.\n\n**Response Body Schema**\n\n```java\n{\n     ledgerId: String (Optional)\n     ledgerTlsCertificate: String (Required)\n }\n```"
  returns:
    description: "identity information for a Confidential Ledger instance along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n     completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ConfidentialLedgerCertificateClient type."
metadata: {}
package: "com.azure.security.confidentialledger.certificate"
artifact: com.azure:azure-security-confidentialledger:1.0.1
