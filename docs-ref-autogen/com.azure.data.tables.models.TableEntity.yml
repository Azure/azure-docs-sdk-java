### YamlMime:JavaType
uid: "com.azure.data.tables.models.TableEntity"
fullName: "com.azure.data.tables.models.TableEntity"
name: "TableEntity"
nameWithType: "TableEntity"
summary: "An entity within a table."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TableEntity"
constructors:
- uid: "com.azure.data.tables.models.TableEntity.TableEntity(java.lang.String,java.lang.String)"
  fullName: "com.azure.data.tables.models.TableEntity.TableEntity(String partitionKey, String rowKey)"
  name: "TableEntity(String partitionKey, String rowKey)"
  nameWithType: "TableEntity.TableEntity(String partitionKey, String rowKey)"
  summary: "Construct a new `TableEntity`."
  parameters:
  - description: "The partition key of the entity."
    name: "partitionKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The row key of the entity."
    name: "rowKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableEntity(String partitionKey, String rowKey)"
  desc: "Construct a new `TableEntity`."
methods:
- uid: "com.azure.data.tables.models.TableEntity.addProperty(java.lang.String,java.lang.Object)"
  fullName: "com.azure.data.tables.models.TableEntity.addProperty(String key, Object value)"
  name: "addProperty(String key, Object value)"
  nameWithType: "TableEntity.addProperty(String key, Object value)"
  summary: "Adds a single property to the entity's properties map."
  parameters:
  - description: "Key for the property."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Value of the property."
    name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableEntity addProperty(String key, Object value)"
  desc: "Adds a single property to the entity's properties map."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.models.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref>."
    type: "<xref href=\"com.azure.data.tables.models.TableEntity?alt=com.azure.data.tables.models.TableEntity&text=TableEntity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableEntity.getETag()"
  fullName: "com.azure.data.tables.models.TableEntity.getETag()"
  name: "getETag()"
  nameWithType: "TableEntity.getETag()"
  summary: "Gets the entity's e<wbr>Tag."
  syntax: "public String getETag()"
  desc: "Gets the entity's eTag. The eTag is automatically populated by the service. New `TableEntity` instances will not have an eTag, but an eTag will be present on any `TableEntity` returned from the service."
  returns:
    description: "The entity's eTag."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableEntity.getPartitionKey()"
  fullName: "com.azure.data.tables.models.TableEntity.getPartitionKey()"
  name: "getPartitionKey()"
  nameWithType: "TableEntity.getPartitionKey()"
  summary: "Gets the entity's partition key."
  syntax: "public String getPartitionKey()"
  desc: "Gets the entity's partition key."
  returns:
    description: "The entity's partition key."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableEntity.getProperties()"
  fullName: "com.azure.data.tables.models.TableEntity.getProperties()"
  name: "getProperties()"
  nameWithType: "TableEntity.getProperties()"
  summary: "Gets the map of the entity's properties."
  syntax: "public Map<String,Object> getProperties()"
  desc: "Gets the map of the entity's properties. Only properties that have been added by calling <xref uid=\"com.azure.data.tables.models.TableEntity.addProperty(java.lang.String,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#addProperty(String, Object)\"></xref> or <xref uid=\"com.azure.data.tables.models.TableEntity.setProperties(java.util.Map<java.lang.String,java.lang.Object>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setProperties(Map)\"></xref> will be returned from this method."
  returns:
    description: "A map of all properties representing this entity, including system properties."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.data.tables.models.TableEntity.getProperty(java.lang.String)"
  fullName: "com.azure.data.tables.models.TableEntity.getProperty(String key)"
  name: "getProperty(String key)"
  nameWithType: "TableEntity.getProperty(String key)"
  summary: "Gets a single property from the entity's properties map."
  parameters:
  - description: "Key for the property."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Object getProperty(String key)"
  desc: "Gets a single property from the entity's properties map. Only properties that have been added by calling <xref uid=\"com.azure.data.tables.models.TableEntity.addProperty(java.lang.String,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#addProperty(String, Object)\"></xref> or <xref uid=\"com.azure.data.tables.models.TableEntity.setProperties(java.util.Map<java.lang.String,java.lang.Object>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setProperties(Map)\"></xref> will be returned from this method."
  returns:
    description: "Value of the property."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableEntity.getRowKey()"
  fullName: "com.azure.data.tables.models.TableEntity.getRowKey()"
  name: "getRowKey()"
  nameWithType: "TableEntity.getRowKey()"
  summary: "Gets the entity's row key."
  syntax: "public String getRowKey()"
  desc: "Gets the entity's row key."
  returns:
    description: "The entity's row key."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableEntity.getTimestamp()"
  fullName: "com.azure.data.tables.models.TableEntity.getTimestamp()"
  name: "getTimestamp()"
  nameWithType: "TableEntity.getTimestamp()"
  summary: "Gets the entity's timestamp."
  syntax: "public OffsetDateTime getTimestamp()"
  desc: "Gets the entity's timestamp. The timestamp is automatically populated by the service. New `TableEntity` instances will not have a timestamp, but a timestamp will be present on any `TableEntity` returned from the service."
  returns:
    description: "The entity's timestamp."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.models.TableEntity.setProperties(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.data.tables.models.TableEntity.setProperties(Map<String,Object> properties)"
  name: "setProperties(Map<String,Object> properties)"
  nameWithType: "TableEntity.setProperties(Map<String,Object> properties)"
  summary: "Sets the contents of the provided map to the entity's properties map."
  parameters:
  - description: "The map of properties to set."
    name: "properties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TableEntity setProperties(Map<String,Object> properties)"
  desc: "Sets the contents of the provided map to the entity's properties map."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.models.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref>."
    type: "<xref href=\"com.azure.data.tables.models.TableEntity?alt=com.azure.data.tables.models.TableEntity&text=TableEntity\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "An entity within a table. A `TableEntity` can be used directly when interacting with the Tables service, with methods on the <xref uid=\"com.azure.data.tables.TableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.tables.TableClient\"></xref> and <xref uid=\"com.azure.data.tables.TableAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.tables.TableAsyncClient\"></xref> classes that accept and return `TableEntity` instances. After creating an instance, call the <xref uid=\"com.azure.data.tables.models.TableEntity.addProperty(java.lang.String,java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#addProperty(String, Object)\"></xref> or <xref uid=\"com.azure.data.tables.models.TableEntity.setProperties(java.util.Map<java.lang.String,java.lang.Object>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setProperties(Map)\"></xref> methods to add properties to the entity. When retrieving an entity from the service, call the <xref uid=\"com.azure.data.tables.models.TableEntity.getProperty(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getProperty(String)\"></xref> or <xref uid=\"com.azure.data.tables.models.TableEntity.getProperties()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getProperties()\"></xref> methods to access the entity's properties."
metadata: {}
package: "com.azure.data.tables.models"
artifact: com.azure:azure-data-tables:12.3.3
