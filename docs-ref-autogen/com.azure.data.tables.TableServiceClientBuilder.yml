### YamlMime:JavaType
uid: "com.azure.data.tables.TableServiceClientBuilder"
fullName: "com.azure.data.tables.TableServiceClientBuilder"
name: "TableServiceClientBuilder"
nameWithType: "TableServiceClientBuilder"
summary: "This class provides a fluent builder API to help aid the configuration and instantiation of <xref uid=\"com.azure.data.tables.TableServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClient\"></xref> and <xref uid=\"com.azure.data.tables.TableServiceAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceAsyncClient\"></xref> objects."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TableServiceClientBuilder implements TokenCredentialTrait<TableServiceClientBuilder>, AzureNamedKeyCredentialTrait<TableServiceClientBuilder>, ConnectionStringTrait<TableServiceClientBuilder>, AzureSasCredentialTrait<TableServiceClientBuilder>, HttpTrait<TableServiceClientBuilder>, ConfigurationTrait<TableServiceClientBuilder>, EndpointTrait<TableServiceClientBuilder>"
constructors:
- uid: "com.azure.data.tables.TableServiceClientBuilder.TableServiceClientBuilder()"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.TableServiceClientBuilder()"
  name: "TableServiceClientBuilder()"
  nameWithType: "TableServiceClientBuilder.TableServiceClientBuilder()"
  summary: "Creates a builder instance that is able to configure and construct <xref uid=\"com.azure.data.tables.TableServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClient\"></xref> and <xref uid=\"com.azure.data.tables.TableServiceAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceAsyncClient\"></xref> objects."
  syntax: "public TableServiceClientBuilder()"
  desc: "Creates a builder instance that is able to configure and construct <xref uid=\"com.azure.data.tables.TableServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClient\"></xref> and <xref uid=\"com.azure.data.tables.TableServiceAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceAsyncClient\"></xref> objects."
methods:
- uid: "com.azure.data.tables.TableServiceClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)"
  name: "addPolicy(HttpPipelinePolicy pipelinePolicy)"
  nameWithType: "TableServiceClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)"
  summary: "Adds a <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"pipeline policy\"></xref> to apply on each request sent."
  parameters:
  - description: "A <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"pipeline policy\"></xref>."
    name: "pipelinePolicy"
    type: "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder addPolicy(HttpPipelinePolicy pipelinePolicy)"
  desc: "Adds a <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"pipeline policy\"></xref> to apply on each request sent.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.buildAsyncClient()"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.buildAsyncClient()"
  name: "buildAsyncClient()"
  nameWithType: "TableServiceClientBuilder.buildAsyncClient()"
  summary: "Creates a <xref uid=\"com.azure.data.tables.TableServiceAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceAsyncClient\"></xref> based on options set in the builder."
  syntax: "public TableServiceAsyncClient buildAsyncClient()"
  desc: "Creates a <xref uid=\"com.azure.data.tables.TableServiceAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceAsyncClient\"></xref> based on options set in the builder."
  returns:
    description: "A <xref uid=\"com.azure.data.tables.TableServiceAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceAsyncClient\"></xref> created from the configurations in this builder."
    type: "<xref href=\"com.azure.data.tables.TableServiceAsyncClient?alt=com.azure.data.tables.TableServiceAsyncClient&text=TableServiceAsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.buildClient()"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.buildClient()"
  name: "buildClient()"
  nameWithType: "TableServiceClientBuilder.buildClient()"
  summary: "Creates a <xref uid=\"com.azure.data.tables.TableServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClient\"></xref> based on options set in the builder."
  syntax: "public TableServiceClient buildClient()"
  desc: "Creates a <xref uid=\"com.azure.data.tables.TableServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClient\"></xref> based on options set in the builder."
  returns:
    description: "A <xref uid=\"com.azure.data.tables.TableServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClient\"></xref> created from the configurations in this builder."
    type: "<xref href=\"com.azure.data.tables.TableServiceClient?alt=com.azure.data.tables.TableServiceClient&text=TableServiceClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.clientOptions(com.azure.core.util.ClientOptions)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.clientOptions(ClientOptions clientOptions)"
  name: "clientOptions(ClientOptions clientOptions)"
  nameWithType: "TableServiceClientBuilder.clientOptions(ClientOptions clientOptions)"
  summary: "Allows for setting common properties such as application ID, headers, proxy configuration, etc."
  parameters:
  - description: "A configured instance of <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClientOptions\"></xref>."
    name: "clientOptions"
    type: "<xref href=\"com.azure.core.util.ClientOptions?alt=com.azure.core.util.ClientOptions&text=ClientOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder clientOptions(ClientOptions clientOptions)"
  desc: "Allows for setting common properties such as application ID, headers, proxy configuration, etc. Note that it is recommended that this method be called with an instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClientOptions\"></xref> class (a subclass of the <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref> base class). The HttpClientOptions subclass provides more configuration options suitable for HTTP clients, which is applicable for any class that implements this HttpTrait interface.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.configuration(com.azure.core.util.Configuration)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.configuration(Configuration configuration)"
  name: "configuration(Configuration configuration)"
  nameWithType: "TableServiceClientBuilder.configuration(Configuration configuration)"
  summary: "Sets the <xref uid=\"com.azure.core.util.Configuration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"configuration\"></xref> object used to retrieve environment configuration values during building of the client."
  parameters:
  - description: "<xref uid=\"com.azure.core.util.Configuration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration\"></xref> store used to retrieve environment configuration."
    name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder configuration(Configuration configuration)"
  desc: "Sets the <xref uid=\"com.azure.core.util.Configuration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"configuration\"></xref> object used to retrieve environment configuration values during building of the client.\n\nThe <xref uid=\"com.azure.core.util.Configuration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"default configuration store\"></xref> is a clone of the <xref uid=\"com.azure.core.util.Configuration.getGlobalConfiguration*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"global configuration store\"></xref>, use <xref uid=\"com.azure.core.util.Configuration.NONE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#NONE\"></xref> to bypass using configuration settings during construction."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.connectionString(java.lang.String)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.connectionString(String connectionString)"
  name: "connectionString(String connectionString)"
  nameWithType: "TableServiceClientBuilder.connectionString(String connectionString)"
  summary: "Sets the connection string to connect to the service."
  parameters:
  - description: "Connection string of the storage or CosmosDB table API account."
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder connectionString(String connectionString)"
  desc: "Sets the connection string to connect to the service."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.AzureNamedKeyCredential)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.credential(AzureNamedKeyCredential credential)"
  name: "credential(AzureNamedKeyCredential credential)"
  nameWithType: "TableServiceClientBuilder.credential(AzureNamedKeyCredential credential)"
  summary: "Sets the <xref uid=\"com.azure.core.credential.AzureNamedKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureNamedKeyCredential\"></xref> used to authorize requests sent to the service."
  parameters:
  - description: "<xref uid=\"com.azure.core.credential.AzureNamedKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureNamedKeyCredential\"></xref> used to authorize requests sent to the service."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.AzureNamedKeyCredential?alt=com.azure.core.credential.AzureNamedKeyCredential&text=AzureNamedKeyCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder credential(AzureNamedKeyCredential credential)"
  desc: "Sets the <xref uid=\"com.azure.core.credential.AzureNamedKeyCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureNamedKeyCredential\"></xref> used to authorize requests sent to the service. Setting this is mutually exclusive with using <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.AzureSasCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#credential(AzureSasCredential)\"></xref>, <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#credential(TokenCredential)\"></xref> or <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.sasToken(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#sasToken(String)\"></xref>."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.AzureSasCredential)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.credential(AzureSasCredential credential)"
  name: "credential(AzureSasCredential credential)"
  nameWithType: "TableServiceClientBuilder.credential(AzureSasCredential credential)"
  summary: "Sets the <xref uid=\"com.azure.core.credential.AzureSasCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureSasCredential\"></xref> used to authorize requests sent to the service."
  parameters:
  - description: "<xref uid=\"com.azure.core.credential.AzureSasCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureSasCredential\"></xref> used to authorize requests sent to the service."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.AzureSasCredential?alt=com.azure.core.credential.AzureSasCredential&text=AzureSasCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder credential(AzureSasCredential credential)"
  desc: "Sets the <xref uid=\"com.azure.core.credential.AzureSasCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureSasCredential\"></xref> used to authorize requests sent to the service. Setting this is mutually exclusive with <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.AzureNamedKeyCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#credential(AzureNamedKeyCredential)\"></xref>, <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#credential(TokenCredential)\"></xref> or <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.sasToken(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#sasToken(String)\"></xref>."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.credential(TokenCredential credential)"
  name: "credential(TokenCredential credential)"
  nameWithType: "TableServiceClientBuilder.credential(TokenCredential credential)"
  summary: "Sets the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authorize requests sent to the service."
  parameters:
  - description: "<xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authorize requests sent to the service."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder credential(TokenCredential credential)"
  desc: "Sets the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authorize requests sent to the service. Refer to the Azure SDK for Java [identity and authentication][] documentation for more details on proper usage of the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> type. Setting this is mutually exclusive with using <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.AzureNamedKeyCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#credential(AzureNamedKeyCredential)\"></xref>, <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.AzureSasCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#credential(AzureSasCredential)\"></xref> or <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.sasToken(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#sasToken(String)\"></xref>.\n\n\n[identity and authentication]: https://aka.ms/azsdk/java/docs/identity"
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.enableTenantDiscovery()"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.enableTenantDiscovery()"
  name: "enableTenantDiscovery()"
  nameWithType: "TableServiceClientBuilder.enableTenantDiscovery()"
  summary: "Enable tenant discovery when authenticating with the Table Service."
  syntax: "public TableServiceClientBuilder enableTenantDiscovery()"
  desc: "Enable tenant discovery when authenticating with the Table Service. **This functionality is disabled by default and only available for Storage endpoints using service version <xref uid=\"com.azure.data.tables.TableServiceVersion.V2020_12_06\" data-throw-if-not-resolved=\"false\" data-raw-source=\"2020_12_06\"></xref>.**\n\nEnable this if there is a chance for your application and the Storage account it communicates with to reside in different tenants. If this is enabled, clients created using this builder will make an unauthorized initial service request that will be met with a `401` response containing an authentication challenge, which will be subsequently used to retrieve an access token to authorize all further requests with."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.endpoint(java.lang.String)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.endpoint(String endpoint)"
  name: "endpoint(String endpoint)"
  nameWithType: "TableServiceClientBuilder.endpoint(String endpoint)"
  summary: "Sets the service endpoint."
  parameters:
  - description: "The URL of the storage or CosmosDB table API account endpoint."
    name: "endpoint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder endpoint(String endpoint)"
  desc: "Sets the service endpoint."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.httpClient(HttpClient httpClient)"
  name: "httpClient(HttpClient httpClient)"
  nameWithType: "TableServiceClientBuilder.httpClient(HttpClient httpClient)"
  summary: "Sets the <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> to use for sending and receiving requests to and from the service."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> to use for requests."
    name: "httpClient"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder httpClient(HttpClient httpClient)"
  desc: "Sets the <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> to use for sending and receiving requests to and from the service.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  name: "httpLogOptions(HttpLogOptions logOptions)"
  nameWithType: "TableServiceClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  summary: "Sets the <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"logging configuration\"></xref> to use when sending and receiving requests to and from the service."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"logging configuration\"></xref> to use when sending and receiving requests to\n and from the service."
    name: "logOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder httpLogOptions(HttpLogOptions logOptions)"
  desc: "Sets the <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"logging configuration\"></xref> to use when sending and receiving requests to and from the service. If a `logLevel` is not provided, default value of <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogDetailLevel#NONE\"></xref> is set.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.pipeline(HttpPipeline pipeline)"
  name: "pipeline(HttpPipeline pipeline)"
  nameWithType: "TableServiceClientBuilder.pipeline(HttpPipeline pipeline)"
  summary: "Sets the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to use for the service client."
  parameters:
  - description: "<xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to use for sending service requests and receiving responses."
    name: "pipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder pipeline(HttpPipeline pipeline)"
  desc: "Sets the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to use for the service client.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications.\n\nThe <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"endpoint\"></xref> is not ignored when `pipeline` is set."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.retryOptions(com.azure.core.http.policy.RetryOptions)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.retryOptions(RetryOptions retryOptions)"
  name: "retryOptions(RetryOptions retryOptions)"
  nameWithType: "TableServiceClientBuilder.retryOptions(RetryOptions retryOptions)"
  summary: "Sets the <xref uid=\"com.azure.core.http.policy.RetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryOptions\"></xref> for all the requests made through the client."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.policy.RetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryOptions\"></xref> to use for all the requests made through the client."
    name: "retryOptions"
    type: "<xref href=\"com.azure.core.http.policy.RetryOptions?alt=com.azure.core.http.policy.RetryOptions&text=RetryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder retryOptions(RetryOptions retryOptions)"
  desc: "Sets the <xref uid=\"com.azure.core.http.policy.RetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryOptions\"></xref> for all the requests made through the client.\n\n**Note:** It is important to understand the precedence order of the HttpTrait APIs. In particular, if a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, this takes precedence over all other APIs in the trait, and they will be ignored. If no <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, a HTTP pipeline will be constructed internally based on the settings provided to this trait. Additionally, there may be other APIs in types that implement this trait that are also ignored if an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> is specified, so please be sure to refer to the documentation of types that implement this trait to understand the full set of implications.\n\nSetting this is mutually exclusive with using <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#retryPolicy(RetryPolicy)\"></xref>."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  name: "retryPolicy(RetryPolicy retryPolicy)"
  nameWithType: "TableServiceClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  summary: "Sets the request <xref uid=\"com.azure.core.http.policy.RetryPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryPolicy\"></xref> for all the requests made through the client."
  parameters:
  - description: "<xref uid=\"com.azure.core.http.policy.RetryPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryPolicy\"></xref>."
    name: "retryPolicy"
    type: "<xref href=\"com.azure.core.http.policy.RetryPolicy?alt=com.azure.core.http.policy.RetryPolicy&text=RetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder retryPolicy(RetryPolicy retryPolicy)"
  desc: "Sets the request <xref uid=\"com.azure.core.http.policy.RetryPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryPolicy\"></xref> for all the requests made through the client. The default <xref uid=\"com.azure.core.http.policy.RetryPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryPolicy\"></xref> will be used in the pipeline, if not provided. Setting this is mutually exclusive with using <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.retryOptions(com.azure.core.http.policy.RetryOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#retryOptions(RetryOptions)\"></xref>."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.sasToken(java.lang.String)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.sasToken(String sasToken)"
  name: "sasToken(String sasToken)"
  nameWithType: "TableServiceClientBuilder.sasToken(String sasToken)"
  summary: "Sets the SAS token used to authorize requests sent to the service."
  parameters:
  - description: "The SAS token to use for authenticating requests."
    name: "sasToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder sasToken(String sasToken)"
  desc: "Sets the SAS token used to authorize requests sent to the service. Setting this is mutually exclusive with <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.AzureNamedKeyCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#credential(AzureNamedKeyCredential)\"></xref>, <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.AzureSasCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#credential(AzureSasCredential)\"></xref> or <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#credential(TokenCredential)\"></xref>."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.TableServiceClientBuilder.serviceVersion(com.azure.data.tables.TableServiceVersion)"
  fullName: "com.azure.data.tables.TableServiceClientBuilder.serviceVersion(TableServiceVersion serviceVersion)"
  name: "serviceVersion(TableServiceVersion serviceVersion)"
  nameWithType: "TableServiceClientBuilder.serviceVersion(TableServiceVersion serviceVersion)"
  summary: "Sets the <xref uid=\"com.azure.data.tables.TableServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"service version\"></xref> that is used when making API requests."
  parameters:
  - description: "The <xref uid=\"com.azure.data.tables.TableServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceVersion\"></xref> of the service to be used when making requests."
    name: "serviceVersion"
    type: "<xref href=\"com.azure.data.tables.TableServiceVersion?alt=com.azure.data.tables.TableServiceVersion&text=TableServiceVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TableServiceClientBuilder serviceVersion(TableServiceVersion serviceVersion)"
  desc: "Sets the <xref uid=\"com.azure.data.tables.TableServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"service version\"></xref> that is used when making API requests.\n\nIf a <xref uid=\"com.azure.data.tables.TableServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"service version\"></xref> is not provided, the <xref uid=\"com.azure.data.tables.TableServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"service version\"></xref> that will be used will be the latest known <xref uid=\"com.azure.data.tables.TableServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"service version\"></xref> based on the version of the client library being used. If no <xref uid=\"com.azure.data.tables.TableServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"service version\"></xref> is specified, updating to a newer version of the client library will have the result of potentially moving to a newer <xref uid=\"com.azure.data.tables.TableServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"service version\"></xref>.\n\nTargeting a specific <xref uid=\"com.azure.data.tables.TableServiceVersion\" data-throw-if-not-resolved=\"false\" data-raw-source=\"service version\"></xref> may also mean that the service will return an error for newer APIs."
  returns:
    description: "The updated <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref>."
    type: "<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This class provides a fluent builder API to help aid the configuration and instantiation of <xref uid=\"com.azure.data.tables.TableServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClient\"></xref> and <xref uid=\"com.azure.data.tables.TableServiceAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceAsyncClient\"></xref> objects. Call <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#buildClient()\"></xref> or <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#buildAsyncClient()\"></xref>, respectively, to construct an instance of the desired client.\n\nThe minimal configuration options required by <xref uid=\"com.azure.data.tables.TableServiceClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder\"></xref> to build a <xref uid=\"com.azure.data.tables.TableServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClient\"></xref> or <xref uid=\"com.azure.data.tables.TableServiceAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceAsyncClient\"></xref> are an <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"endpoint\"></xref> and a form of authentication, which can be set via: <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#connectionString(String)\"></xref>, <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.AzureSasCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#credential(AzureSasCredential)\"></xref>, <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.credential(com.azure.core.credential.AzureNamedKeyCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#credential(AzureNamedKeyCredential)\"></xref> or <xref uid=\"com.azure.data.tables.TableServiceClientBuilder.sasToken(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceClientBuilder#sasToken(String)\"></xref>\n\n**Samples to construct a sync client**\n\n```java\nTableServiceClient tableServiceClient = new TableServiceClientBuilder()\n     .endpoint(\"https://myvault.azure.net/\")\n     .credential(new AzureNamedKeyCredential(\"name\", \"key\"))\n     .buildClient();\n```\n\n**Samples to construct an async client**\n\n```java\nTableServiceAsyncClient tableServiceAsyncClient = new TableServiceClientBuilder()\n     .endpoint(\"https://myvault.azure.net/\")\n     .credential(new AzureNamedKeyCredential(\"name\", \"key\"))\n     .buildAsyncClient();\n```"
implements:
- "<xref href=\"com.azure.core.client.traits.AzureNamedKeyCredentialTrait?alt=com.azure.core.client.traits.AzureNamedKeyCredentialTrait&text=AzureNamedKeyCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.AzureSasCredentialTrait?alt=com.azure.core.client.traits.AzureSasCredentialTrait&text=AzureSasCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.ConfigurationTrait?alt=com.azure.core.client.traits.ConfigurationTrait&text=ConfigurationTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.ConnectionStringTrait?alt=com.azure.core.client.traits.ConnectionStringTrait&text=ConnectionStringTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.EndpointTrait?alt=com.azure.core.client.traits.EndpointTrait&text=EndpointTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.HttpTrait?alt=com.azure.core.client.traits.HttpTrait&text=HttpTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.TokenCredentialTrait?alt=com.azure.core.client.traits.TokenCredentialTrait&text=TokenCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.TableServiceClientBuilder?alt=com.azure.data.tables.TableServiceClientBuilder&text=TableServiceClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.data.tables"
artifact: com.azure:azure-data-tables:12.3.3
