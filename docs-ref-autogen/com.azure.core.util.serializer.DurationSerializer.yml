### YamlMime:ManagedReference
items:
- uid: "com.azure.core.util.serializer.DurationSerializer"
  id: "DurationSerializer"
  parent: "com.azure.core.util.serializer"
  children:
  - "com.azure.core.util.serializer.DurationSerializer.DurationSerializer()"
  - "com.azure.core.util.serializer.DurationSerializer.getModule()"
  - "com.azure.core.util.serializer.DurationSerializer.serialize(java.time.Duration,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  - "com.azure.core.util.serializer.DurationSerializer.toString(java.time.Duration)"
  langs:
  - "java"
  name: "DurationSerializer"
  nameWithType: "DurationSerializer"
  fullName: "com.azure.core.util.serializer.DurationSerializer"
  type: "Class"
  package: "com.azure.core.util.serializer"
  summary: "Custom serializer for serializing <xref uid=\"\" data-throw-if-not-resolved=\"false\">Duration</xref> object into ISO8601 formats."
  syntax:
    content: "final class DurationSerializer extends JsonSerializer<Duration>"
  inheritance:
  - "java.lang.Object"
  - "com.fasterxml.jackson.databind.JsonSerializer"
  inheritedMembers:
  - "com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
  - "com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()"
  - "com.fasterxml.jackson.databind.JsonSerializer.handledType()"
  - "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)"
  - "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)"
  - "com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()"
  - "com.fasterxml.jackson.databind.JsonSerializer.properties()"
  - "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)"
  - "com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  - "com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  - "com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)"
  - "com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()"
  - "com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.util.serializer.DurationSerializer.DurationSerializer()"
  id: "DurationSerializer()"
  parent: "com.azure.core.util.serializer.DurationSerializer"
  langs:
  - "java"
  name: "DurationSerializer()"
  nameWithType: "DurationSerializer.DurationSerializer()"
  fullName: "com.azure.core.util.serializer.DurationSerializer.DurationSerializer()"
  overload: "com.azure.core.util.serializer.DurationSerializer.DurationSerializer*"
  type: "Constructor"
  package: "com.azure.core.util.serializer"
  syntax:
    content: " DurationSerializer()"
- uid: "com.azure.core.util.serializer.DurationSerializer.getModule()"
  id: "getModule()"
  parent: "com.azure.core.util.serializer.DurationSerializer"
  langs:
  - "java"
  name: "getModule()"
  nameWithType: "DurationSerializer.getModule()"
  fullName: "com.azure.core.util.serializer.DurationSerializer.getModule()"
  overload: "com.azure.core.util.serializer.DurationSerializer.getModule*"
  type: "Method"
  package: "com.azure.core.util.serializer"
  summary: "Gets a module wrapping this serializer as an adapter for the Jackson ObjectMapper."
  syntax:
    content: "public static SimpleModule getModule()"
    return:
      type: "com.fasterxml.jackson.databind.module.SimpleModule"
      description: "a simple module to be plugged onto Jackson ObjectMapper."
- uid: "com.azure.core.util.serializer.DurationSerializer.serialize(java.time.Duration,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  id: "serialize(java.time.Duration,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  parent: "com.azure.core.util.serializer.DurationSerializer"
  langs:
  - "java"
  name: "serialize(Duration duration, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)"
  nameWithType: "DurationSerializer.serialize(Duration duration, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)"
  fullName: "com.azure.core.util.serializer.DurationSerializer.serialize(Duration duration, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)"
  overload: "com.azure.core.util.serializer.DurationSerializer.serialize*"
  type: "Method"
  package: "com.azure.core.util.serializer"
  syntax:
    content: "public void serialize(Duration duration, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)"
    parameters:
    - id: "duration"
      type: "java.time.Duration"
    - id: "jsonGenerator"
      type: "com.fasterxml.jackson.core.JsonGenerator"
    - id: "serializerProvider"
      type: "com.fasterxml.jackson.databind.SerializerProvider"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.azure.core.util.serializer.DurationSerializer.toString(java.time.Duration)"
  id: "toString(java.time.Duration)"
  parent: "com.azure.core.util.serializer.DurationSerializer"
  langs:
  - "java"
  name: "toString(Duration duration)"
  nameWithType: "DurationSerializer.toString(Duration duration)"
  fullName: "com.azure.core.util.serializer.DurationSerializer.toString(Duration duration)"
  overload: "com.azure.core.util.serializer.DurationSerializer.toString*"
  type: "Method"
  package: "com.azure.core.util.serializer"
  summary: "Convert to provided Duration to an ISO 8601 String with a days component."
  syntax:
    content: "public static String toString(Duration duration)"
    parameters:
    - id: "duration"
      type: "java.time.Duration"
      description: "The Duration to convert."
    return:
      type: "java.lang.String"
      description: "The String representation of the provided Duration."
references:
- uid: "com.azure.core.util.serializer.DurationSerializer.DurationSerializer*"
  name: "DurationSerializer"
  nameWithType: "DurationSerializer.DurationSerializer"
  fullName: "com.azure.core.util.serializer.DurationSerializer.DurationSerializer"
  package: "com.azure.core.util.serializer"
- uid: "com.fasterxml.jackson.databind.module.SimpleModule"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.module.SimpleModule"
    name: "SimpleModule"
    fullName: "com.fasterxml.jackson.databind.module.SimpleModule"
- uid: "com.azure.core.util.serializer.DurationSerializer.getModule*"
  name: "getModule"
  nameWithType: "DurationSerializer.getModule"
  fullName: "com.azure.core.util.serializer.DurationSerializer.getModule"
  package: "com.azure.core.util.serializer"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.fasterxml.jackson.core.JsonGenerator"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonGenerator"
    name: "JsonGenerator"
    fullName: "com.fasterxml.jackson.core.JsonGenerator"
- uid: "com.fasterxml.jackson.databind.SerializerProvider"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.SerializerProvider"
    name: "SerializerProvider"
    fullName: "com.fasterxml.jackson.databind.SerializerProvider"
- uid: "com.azure.core.util.serializer.DurationSerializer.serialize*"
  name: "serialize"
  nameWithType: "DurationSerializer.serialize"
  fullName: "com.azure.core.util.serializer.DurationSerializer.serialize"
  package: "com.azure.core.util.serializer"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.util.serializer.DurationSerializer.toString*"
  name: "toString"
  nameWithType: "DurationSerializer.toString"
  fullName: "com.azure.core.util.serializer.DurationSerializer.toString"
  package: "com.azure.core.util.serializer"
- uid: "com.fasterxml.jackson.databind.JsonSerializer<java.time.Duration>"
  name: "JsonSerializer<Duration>"
  nameWithType: "JsonSerializer<Duration>"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer<java.time.Duration>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)"
  name: "JsonSerializer.isEmpty(SerializerProvider,T)"
  nameWithType: "JsonSerializer.isEmpty(SerializerProvider,T)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.properties()"
  name: "JsonSerializer.properties()"
  nameWithType: "JsonSerializer.properties()"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.properties()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  name: "JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)"
  nameWithType: "JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
  name: "JsonSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)"
  nameWithType: "JsonSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()"
  name: "JsonSerializer.getDelegatee()"
  nameWithType: "JsonSerializer.getDelegatee()"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  name: "JsonSerializer.serialize(T,JsonGenerator,SerializerProvider)"
  nameWithType: "JsonSerializer.serialize(T,JsonGenerator,SerializerProvider)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)"
  name: "JsonSerializer.withFilterId(Object)"
  nameWithType: "JsonSerializer.withFilterId(Object)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.handledType()"
  name: "JsonSerializer.handledType()"
  nameWithType: "JsonSerializer.handledType()"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.handledType()"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)"
  name: "JsonSerializer.isEmpty(T)"
  nameWithType: "JsonSerializer.isEmpty(T)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()"
  name: "JsonSerializer.usesObjectId()"
  nameWithType: "JsonSerializer.usesObjectId()"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)"
  name: "JsonSerializer.unwrappingSerializer(NameTransformer)"
  nameWithType: "JsonSerializer.unwrappingSerializer(NameTransformer)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)"
  name: "JsonSerializer.replaceDelegatee(JsonSerializer<?>)"
  nameWithType: "JsonSerializer.replaceDelegatee(JsonSerializer<?>)"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()"
  name: "JsonSerializer.isUnwrappingSerializer()"
  nameWithType: "JsonSerializer.isUnwrappingSerializer()"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()"
- uid: "com.fasterxml.jackson.databind.JsonSerializer"
  name: "JsonSerializer"
  nameWithType: "JsonSerializer"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer"
- uid: "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer"
  name: "JsonSerializer.replaceDelegatee(JsonSerializer"
  nameWithType: "JsonSerializer.replaceDelegatee(JsonSerializer"
  fullName: "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer"
- uid: "?>)"
  name: "?>)"
  nameWithType: "?>)"
  fullName: "?>)"
