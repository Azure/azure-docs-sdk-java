### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.onAllTasksComplete*"
fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.onAllTasksComplete"
name: "onAllTasksComplete"
nameWithType: "JobSpecification.onAllTasksComplete"
members:
- uid: "com.microsoft.azure.batch.protocol.models.JobSpecification.onAllTasksComplete()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobSpecification.onAllTasksComplete()"
  name: "onAllTasksComplete()"
  nameWithType: "JobSpecification.onAllTasksComplete()"
  summary: "Get note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction. Possible values include: 'noAction', 'terminateJob'."
  syntax: "public OnAllTasksComplete onAllTasksComplete()"
  returns:
    description: "the onAllTasksComplete value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:8.0.0
