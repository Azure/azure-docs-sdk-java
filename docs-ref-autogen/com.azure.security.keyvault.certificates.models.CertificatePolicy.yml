### YamlMime:JavaType
uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy"
fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy"
name: "CertificatePolicy"
nameWithType: "CertificatePolicy"
summary: "The Certificate Management policy for the <xref uid=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificate\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CertificatePolicy"
constructors:
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.CertificatePolicy(java.lang.String,com.azure.security.keyvault.certificates.models.SubjectAlternativeNames)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.CertificatePolicy(String issuerName, SubjectAlternativeNames subjectAlternativeNames)"
  name: "CertificatePolicy(String issuerName, SubjectAlternativeNames subjectAlternativeNames)"
  nameWithType: "CertificatePolicy.CertificatePolicy(String issuerName, SubjectAlternativeNames subjectAlternativeNames)"
  summary: "Creates certificate policy."
  parameters:
  - description: "The issuer name to set."
    name: "issuerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The subject alternative names to set."
    name: "subjectAlternativeNames"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.SubjectAlternativeNames?alt=com.azure.security.keyvault.certificates.models.SubjectAlternativeNames&text=SubjectAlternativeNames\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy(String issuerName, SubjectAlternativeNames subjectAlternativeNames)"
  desc: "Creates certificate policy."
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.CertificatePolicy(java.lang.String,java.lang.String)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.CertificatePolicy(String issuerName, String subject)"
  name: "CertificatePolicy(String issuerName, String subject)"
  nameWithType: "CertificatePolicy.CertificatePolicy(String issuerName, String subject)"
  summary: "Creates certificate policy."
  parameters:
  - description: "The issuer name to set."
    name: "issuerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The subject name to set."
    name: "subject"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy(String issuerName, String subject)"
  desc: "Creates certificate policy."
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.CertificatePolicy(java.lang.String,java.lang.String,com.azure.security.keyvault.certificates.models.SubjectAlternativeNames)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.CertificatePolicy(String issuerName, String subject, SubjectAlternativeNames subjectAlternativeNames)"
  name: "CertificatePolicy(String issuerName, String subject, SubjectAlternativeNames subjectAlternativeNames)"
  nameWithType: "CertificatePolicy.CertificatePolicy(String issuerName, String subject, SubjectAlternativeNames subjectAlternativeNames)"
  summary: "Creates certificate policy."
  parameters:
  - description: "The issuer name to set."
    name: "issuerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The subject name to set."
    name: "subject"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The subject alternative names to set."
    name: "subjectAlternativeNames"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.SubjectAlternativeNames?alt=com.azure.security.keyvault.certificates.models.SubjectAlternativeNames&text=SubjectAlternativeNames\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy(String issuerName, String subject, SubjectAlternativeNames subjectAlternativeNames)"
  desc: "Creates certificate policy."
methods:
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getCertificateType()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getCertificateType()"
  name: "getCertificateType()"
  nameWithType: "CertificatePolicy.getCertificateType()"
  summary: "Get the certificate type."
  syntax: "public String getCertificateType()"
  desc: "Get the certificate type."
  returns:
    description: "the certificate type"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getContentType()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getContentType()"
  name: "getContentType()"
  nameWithType: "CertificatePolicy.getContentType()"
  summary: "Get the content type."
  syntax: "public CertificateContentType getContentType()"
  desc: "Get the content type."
  returns:
    description: "the content type"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificateContentType?alt=com.azure.security.keyvault.certificates.models.CertificateContentType&text=CertificateContentType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getCreatedOn()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getCreatedOn()"
  name: "getCreatedOn()"
  nameWithType: "CertificatePolicy.getCreatedOn()"
  summary: "Get the the UTC time at which certificate policy was created."
  syntax: "public OffsetDateTime getCreatedOn()"
  desc: "Get the the UTC time at which certificate policy was created."
  returns:
    description: "the created UTC time."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getDefault()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getDefault()"
  name: "getDefault()"
  nameWithType: "CertificatePolicy.getDefault()"
  summary: "Get the default certificate policy."
  modifiers:
  - "static"
  syntax: "public static CertificatePolicy getDefault()"
  desc: "Get the default certificate policy."
  returns:
    description: "the default certificate policy."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getEnhancedKeyUsage()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getEnhancedKeyUsage()"
  name: "getEnhancedKeyUsage()"
  nameWithType: "CertificatePolicy.getEnhancedKeyUsage()"
  summary: "Get the enhanced key usage."
  syntax: "public List<String> getEnhancedKeyUsage()"
  desc: "Get the enhanced key usage."
  returns:
    description: "the enhanced key usage"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getIssuerName()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getIssuerName()"
  name: "getIssuerName()"
  nameWithType: "CertificatePolicy.getIssuerName()"
  summary: "Get the issuer name."
  syntax: "public String getIssuerName()"
  desc: "Get the issuer name."
  returns:
    description: "the issuer name."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getKeyCurveName()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getKeyCurveName()"
  name: "getKeyCurveName()"
  nameWithType: "CertificatePolicy.getKeyCurveName()"
  summary: "Get the key curve."
  syntax: "public CertificateKeyCurveName getKeyCurveName()"
  desc: "Get the key curve."
  returns:
    description: "the curve value"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificateKeyCurveName?alt=com.azure.security.keyvault.certificates.models.CertificateKeyCurveName&text=CertificateKeyCurveName\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getKeySize()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getKeySize()"
  name: "getKeySize()"
  nameWithType: "CertificatePolicy.getKeySize()"
  summary: "Get the key size."
  syntax: "public Integer getKeySize()"
  desc: "Get the key size."
  returns:
    description: "the key size"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getKeyType()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getKeyType()"
  name: "getKeyType()"
  nameWithType: "CertificatePolicy.getKeyType()"
  summary: "Get the key type."
  syntax: "public CertificateKeyType getKeyType()"
  desc: "Get the key type."
  returns:
    description: "the key type value"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificateKeyType?alt=com.azure.security.keyvault.certificates.models.CertificateKeyType&text=CertificateKeyType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getKeyUsage()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getKeyUsage()"
  name: "getKeyUsage()"
  nameWithType: "CertificatePolicy.getKeyUsage()"
  summary: "Get the key usage."
  syntax: "public List<CertificateKeyUsage> getKeyUsage()"
  desc: "Get the key usage."
  returns:
    description: "the key usage"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.CertificateKeyUsage?alt=com.azure.security.keyvault.certificates.models.CertificateKeyUsage&text=CertificateKeyUsage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getLifetimeActions()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getLifetimeActions()"
  name: "getLifetimeActions()"
  nameWithType: "CertificatePolicy.getLifetimeActions()"
  summary: "Get the lifetime actions"
  syntax: "public List<LifetimeAction> getLifetimeActions()"
  desc: "Get the lifetime actions"
  returns:
    description: "the lifetime actions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.LifetimeAction?alt=com.azure.security.keyvault.certificates.models.LifetimeAction&text=LifetimeAction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getSubject()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getSubject()"
  name: "getSubject()"
  nameWithType: "CertificatePolicy.getSubject()"
  summary: "Get the subject."
  syntax: "public String getSubject()"
  desc: "Get the subject."
  returns:
    description: "the subject"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getSubjectAlternativeNames()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getSubjectAlternativeNames()"
  name: "getSubjectAlternativeNames()"
  nameWithType: "CertificatePolicy.getSubjectAlternativeNames()"
  summary: "Get the subject<wbr>Alternative<wbr>Names."
  syntax: "public SubjectAlternativeNames getSubjectAlternativeNames()"
  desc: "Get the subjectAlternativeNames."
  returns:
    description: "the subjectAlternativeNames."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.SubjectAlternativeNames?alt=com.azure.security.keyvault.certificates.models.SubjectAlternativeNames&text=SubjectAlternativeNames\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getUpdatedOn()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getUpdatedOn()"
  name: "getUpdatedOn()"
  nameWithType: "CertificatePolicy.getUpdatedOn()"
  summary: "Get the UTC time at which certificate policy was last updated."
  syntax: "public OffsetDateTime getUpdatedOn()"
  desc: "Get the UTC time at which certificate policy was last updated."
  returns:
    description: "the last updated UTC time."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getValidityInMonths()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.getValidityInMonths()"
  name: "getValidityInMonths()"
  nameWithType: "CertificatePolicy.getValidityInMonths()"
  summary: "Get the validity in months."
  syntax: "public Integer getValidityInMonths()"
  desc: "Get the validity in months."
  returns:
    description: "the validity in months"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.isCertificateTransparent()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.isCertificateTransparent()"
  name: "isCertificateTransparent()"
  nameWithType: "CertificatePolicy.isCertificateTransparent()"
  summary: "Get the certificate transparency status."
  syntax: "public Boolean isCertificateTransparent()"
  desc: "Get the certificate transparency status."
  returns:
    description: "the certificate transparency status"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.isEnabled()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.isEnabled()"
  name: "isEnabled()"
  nameWithType: "CertificatePolicy.isEnabled()"
  summary: "Get the enabled status."
  syntax: "public Boolean isEnabled()"
  desc: "Get the enabled status."
  returns:
    description: "the enabled status"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.isExportable()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.isExportable()"
  name: "isExportable()"
  nameWithType: "CertificatePolicy.isExportable()"
  summary: "Get the exportable."
  syntax: "public Boolean isExportable()"
  desc: "Get the exportable."
  returns:
    description: "the exportable value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.isKeyReusable()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.isKeyReusable()"
  name: "isKeyReusable()"
  nameWithType: "CertificatePolicy.isKeyReusable()"
  summary: "Get the key reuse status."
  syntax: "public Boolean isKeyReusable()"
  desc: "Get the key reuse status."
  returns:
    description: "the key reuse status"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setCertificateTransparent(java.lang.Boolean)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setCertificateTransparent(Boolean certificateTransparent)"
  name: "setCertificateTransparent(Boolean certificateTransparent)"
  nameWithType: "CertificatePolicy.setCertificateTransparent(Boolean certificateTransparent)"
  summary: "Set the certificate transparency status."
  parameters:
  - description: "the certificateTransparency status to set"
    name: "certificateTransparent"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy setCertificateTransparent(Boolean certificateTransparent)"
  desc: "Set the certificate transparency status."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setCertificateType(java.lang.String)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setCertificateType(String certificateType)"
  name: "setCertificateType(String certificateType)"
  nameWithType: "CertificatePolicy.setCertificateType(String certificateType)"
  summary: "Set the certificate type to request from the issuer."
  parameters:
  - description: "the certificateType to request from issuer."
    name: "certificateType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy setCertificateType(String certificateType)"
  desc: "Set the certificate type to request from the issuer."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setContentType(com.azure.security.keyvault.certificates.models.CertificateContentType)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setContentType(CertificateContentType contentType)"
  name: "setContentType(CertificateContentType contentType)"
  nameWithType: "CertificatePolicy.setContentType(CertificateContentType contentType)"
  summary: "Set the content type."
  parameters:
  - description: "the content type value to set"
    name: "contentType"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificateContentType?alt=com.azure.security.keyvault.certificates.models.CertificateContentType&text=CertificateContentType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy setContentType(CertificateContentType contentType)"
  desc: "Set the content type."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setEnabled(java.lang.Boolean)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setEnabled(Boolean enabled)"
  name: "setEnabled(Boolean enabled)"
  nameWithType: "CertificatePolicy.setEnabled(Boolean enabled)"
  summary: "Set the enabled status."
  parameters:
  - description: "The enabled status to set."
    name: "enabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy setEnabled(Boolean enabled)"
  desc: "Set the enabled status."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setEnhancedKeyUsage(java.util.List<java.lang.String>)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setEnhancedKeyUsage(List<String> ekus)"
  name: "setEnhancedKeyUsage(List<String> ekus)"
  nameWithType: "CertificatePolicy.setEnhancedKeyUsage(List<String> ekus)"
  summary: "Set the enhanced key usage."
  parameters:
  - description: "the ekus value to set"
    name: "ekus"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CertificatePolicy setEnhancedKeyUsage(List<String> ekus)"
  desc: "Set the enhanced key usage."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setExportable(java.lang.Boolean)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setExportable(Boolean exportable)"
  name: "setExportable(Boolean exportable)"
  nameWithType: "CertificatePolicy.setExportable(Boolean exportable)"
  summary: "Set the exportable value."
  parameters:
  - description: "the exportable value to set"
    name: "exportable"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy setExportable(Boolean exportable)"
  desc: "Set the exportable value."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setKeyCurveName(com.azure.security.keyvault.certificates.models.CertificateKeyCurveName)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setKeyCurveName(CertificateKeyCurveName keyCurveName)"
  name: "setKeyCurveName(CertificateKeyCurveName keyCurveName)"
  nameWithType: "CertificatePolicy.setKeyCurveName(CertificateKeyCurveName keyCurveName)"
  summary: "Set the key curve."
  parameters:
  - description: "the key curve value to set"
    name: "keyCurveName"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificateKeyCurveName?alt=com.azure.security.keyvault.certificates.models.CertificateKeyCurveName&text=CertificateKeyCurveName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy setKeyCurveName(CertificateKeyCurveName keyCurveName)"
  desc: "Set the key curve."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setKeyReusable(java.lang.Boolean)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setKeyReusable(Boolean keyReusable)"
  name: "setKeyReusable(Boolean keyReusable)"
  nameWithType: "CertificatePolicy.setKeyReusable(Boolean keyReusable)"
  summary: "Set the reuse key value."
  parameters:
  - description: "the reuseKey value to set"
    name: "keyReusable"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy setKeyReusable(Boolean keyReusable)"
  desc: "Set the reuse key value."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setKeySize(java.lang.Integer)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setKeySize(Integer keySize)"
  name: "setKeySize(Integer keySize)"
  nameWithType: "CertificatePolicy.setKeySize(Integer keySize)"
  summary: "Set the key size."
  parameters:
  - description: "the key size value to set"
    name: "keySize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy setKeySize(Integer keySize)"
  desc: "Set the key size."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setKeyType(com.azure.security.keyvault.certificates.models.CertificateKeyType)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setKeyType(CertificateKeyType keyType)"
  name: "setKeyType(CertificateKeyType keyType)"
  nameWithType: "CertificatePolicy.setKeyType(CertificateKeyType keyType)"
  summary: "Get the key type."
  parameters:
  - description: "the key type"
    name: "keyType"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificateKeyType?alt=com.azure.security.keyvault.certificates.models.CertificateKeyType&text=CertificateKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy setKeyType(CertificateKeyType keyType)"
  desc: "Get the key type."
  returns:
    description: "the key type"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setKeyUsage(com.azure.security.keyvault.certificates.models.CertificateKeyUsage...)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setKeyUsage(CertificateKeyUsage[] keyUsage)"
  name: "setKeyUsage(CertificateKeyUsage[] keyUsage)"
  nameWithType: "CertificatePolicy.setKeyUsage(CertificateKeyUsage[] keyUsage)"
  summary: "Set the key usage."
  parameters:
  - description: "the key usage value to set"
    name: "keyUsage"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificateKeyUsage?alt=com.azure.security.keyvault.certificates.models.CertificateKeyUsage&text=CertificateKeyUsage\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CertificatePolicy setKeyUsage(CertificateKeyUsage[] keyUsage)"
  desc: "Set the key usage."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setLifetimeActions(com.azure.security.keyvault.certificates.models.LifetimeAction...)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setLifetimeActions(LifetimeAction[] actions)"
  name: "setLifetimeActions(LifetimeAction[] actions)"
  nameWithType: "CertificatePolicy.setLifetimeActions(LifetimeAction[] actions)"
  summary: "Set the lifetime actions"
  parameters:
  - description: "the lifetime actions to set."
    name: "actions"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.LifetimeAction?alt=com.azure.security.keyvault.certificates.models.LifetimeAction&text=LifetimeAction\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CertificatePolicy setLifetimeActions(LifetimeAction[] actions)"
  desc: "Set the lifetime actions"
  returns:
    description: "the updated certificate policy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setSubject(java.lang.String)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setSubject(String subject)"
  name: "setSubject(String subject)"
  nameWithType: "CertificatePolicy.setSubject(String subject)"
  summary: "Set the subject Name."
  parameters:
  - description: "the subject Name to set"
    name: "subject"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy setSubject(String subject)"
  desc: "Set the subject Name."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setSubjectAlternativeNames(com.azure.security.keyvault.certificates.models.SubjectAlternativeNames)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setSubjectAlternativeNames(SubjectAlternativeNames subjectAlternativeNames)"
  name: "setSubjectAlternativeNames(SubjectAlternativeNames subjectAlternativeNames)"
  nameWithType: "CertificatePolicy.setSubjectAlternativeNames(SubjectAlternativeNames subjectAlternativeNames)"
  summary: "Set the subject<wbr>Alternative<wbr>Names."
  parameters:
  - description: "the subjectAlternativeNames to set"
    name: "subjectAlternativeNames"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.SubjectAlternativeNames?alt=com.azure.security.keyvault.certificates.models.SubjectAlternativeNames&text=SubjectAlternativeNames\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy setSubjectAlternativeNames(SubjectAlternativeNames subjectAlternativeNames)"
  desc: "Set the subjectAlternativeNames."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setValidityInMonths(java.lang.Integer)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy.setValidityInMonths(Integer validityInMonths)"
  name: "setValidityInMonths(Integer validityInMonths)"
  nameWithType: "CertificatePolicy.setValidityInMonths(Integer validityInMonths)"
  summary: "Set the validity in months."
  parameters:
  - description: "the validityInMonths value to set"
    name: "validityInMonths"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificatePolicy setValidityInMonths(Integer validityInMonths)"
  desc: "Set the validity in months."
  returns:
    description: "the updated CertificatePolicy object itself."
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The Certificate Management policy for the <xref uid=\"com.azure.security.keyvault.certificates.models.KeyVaultCertificate\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate\"></xref>."
metadata: {}
package: "com.azure.security.keyvault.certificates.models"
artifact: com.azure:azure-security-keyvault-certificates:4.3.5
