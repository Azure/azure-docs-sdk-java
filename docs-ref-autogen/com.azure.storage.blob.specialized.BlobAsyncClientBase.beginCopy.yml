### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy*"
fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy"
name: "beginCopy"
nameWithType: "BlobAsyncClientBase.beginCopy"
members:
- uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(com.azure.storage.blob.options.BlobBeginCopyOptions)"
  fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(BlobBeginCopyOptions options)"
  name: "beginCopy(BlobBeginCopyOptions options)"
  nameWithType: "BlobAsyncClientBase.beginCopy(BlobBeginCopyOptions options)"
  summary: "Copies the data at the source URL to a blob.\n\n**Starting a copy operation**\n\nStarting a copy operation and polling on the responses.\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n Map<String, String> tags = Collections.singletonMap(\"tag\", \"value\");\n BlobBeginCopySourceRequestConditions modifiedRequestConditions = new BlobBeginCopySourceRequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n client.beginCopy(new BlobBeginCopyOptions(url).setMetadata(metadata).setTags(tags).setTier(AccessTier.HOT)\n     .setRehydratePriority(RehydratePriority.STANDARD).setSourceRequestConditions(modifiedRequestConditions)\n     .setDestinationRequestConditions(blobRequestConditions).setPollInterval(Duration.ofSeconds(2)))\n     .subscribe(response -> {\n         BlobCopyInfo info = response.getValue();\n         System.out.printf(\"CopyId: %s. Status: %s%n\", info.getCopyId(), info.getCopyStatus());\n     });\n```\n\n**Cancelling a copy operation**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n Map<String, String> tags = Collections.singletonMap(\"tag\", \"value\");\n BlobBeginCopySourceRequestConditions modifiedRequestConditions = new BlobBeginCopySourceRequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n PollerFlux<BlobCopyInfo, Void> poller = client.beginCopy(new BlobBeginCopyOptions(url)\n     .setMetadata(metadata).setTags(tags).setTier(AccessTier.HOT)\n     .setRehydratePriority(RehydratePriority.STANDARD).setSourceRequestConditions(modifiedRequestConditions)\n     .setDestinationRequestConditions(blobRequestConditions).setPollInterval(Duration.ofSeconds(2)));\n \n poller.take(Duration.ofMinutes(30))\n         .last()\n         .flatMap(asyncPollResponse -> {\n             if (!asyncPollResponse.getStatus().isComplete()) {\n                 return asyncPollResponse\n                         .cancelOperation()\n                         .then(Mono.error(new RuntimeException(\"Blob copy taking long time, \"\n                                 + \"operation is cancelled!\")));\n             }\n             return Mono.just(asyncPollResponse);\n         }).block();\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobBeginCopyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobBeginCopyOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobBeginCopyOptions?alt=com.azure.storage.blob.options.BlobBeginCopyOptions&text=BlobBeginCopyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BlobCopyInfo,Void> beginCopy(BlobBeginCopyOptions options)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> that polls the blob copy operation until it has completed, has failed, or has been\n cancelled."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobCopyInfo?alt=com.azure.storage.blob.models.BlobCopyInfo&text=BlobCopyInfo\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(java.lang.String,java.time.Duration)"
  fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(String sourceUrl, Duration pollInterval)"
  name: "beginCopy(String sourceUrl, Duration pollInterval)"
  nameWithType: "BlobAsyncClientBase.beginCopy(String sourceUrl, Duration pollInterval)"
  summary: "Copies the data at the source URL to a blob.\n\n**Code Samples**\n\n```java\nclient.beginCopy(url, Duration.ofSeconds(3))\n     .subscribe(response -> System.out.printf(\"Copy identifier: %s%n\", response));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob"
  parameters:
  - description: "The source URL to copy from. URLs outside of Azure may only be copied to block blobs."
    name: "sourceUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Duration between each poll for the copy status. If none is specified, a default of one second\n is used."
    name: "pollInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BlobCopyInfo,Void> beginCopy(String sourceUrl, Duration pollInterval)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> that polls the blob copy operation until it has completed, has failed, or has been\n cancelled."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobCopyInfo?alt=com.azure.storage.blob.models.BlobCopyInfo&text=BlobCopyInfo\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
  fullName: "com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)"
  name: "beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)"
  nameWithType: "BlobAsyncClientBase.beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)"
  summary: "Copies the data at the source URL to a blob.\n\n**Starting a copy operation**\n\nStarting a copy operation and polling on the responses.\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n RequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n client.beginCopy(url, metadata, AccessTier.HOT, RehydratePriority.STANDARD,\n     modifiedRequestConditions, blobRequestConditions, Duration.ofSeconds(2))\n     .subscribe(response -> {\n         BlobCopyInfo info = response.getValue();\n         System.out.printf(\"CopyId: %s. Status: %s%n\", info.getCopyId(), info.getCopyStatus());\n     });\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob"
  parameters:
  - description: "The source URL to copy from. URLs outside of Azure may only be copied to block blobs."
    name: "sourceUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Metadata to associate with the destination blob."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref> for the destination blob."
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.RehydratePriority\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RehydratePriority\"></xref> for rehydrating the blob."
    name: "priority"
    type: "<xref href=\"com.azure.storage.blob.models.RehydratePriority?alt=com.azure.storage.blob.models.RehydratePriority&text=RehydratePriority\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.core.http.RequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestConditions\"></xref> against the source. Standard HTTP Access\n conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions\n related to when the blob was changed relative to the given request. The request will fail if the specified\n condition is not satisfied."
    name: "sourceModifiedRequestConditions"
    type: "<xref href=\"com.azure.core.http.RequestConditions?alt=com.azure.core.http.RequestConditions&text=RequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref> against the destination."
    name: "destRequestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Duration between each poll for the copy status. If none is specified, a default of one second\n is used."
    name: "pollInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BlobCopyInfo,Void> beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> that polls the blob copy operation until it has completed, has failed, or has been\n cancelled."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobCopyInfo?alt=com.azure.storage.blob.models.BlobCopyInfo&text=BlobCopyInfo\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
