items:
- uid: com.microsoft.azure.storage.table._encrypt
  id: _encrypt
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._encrypt.yml
  langs:
  - java
  name: Encrypt
  nameWithType: Encrypt
  fullName: com.microsoft.azure.storage.table.Encrypt
  type: Interface
  source:
    remote:
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/Encrypt.java
      branch: master
      repo: https://github.com/Azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/Encrypt.java
    startLine: 33
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Represents a custom attribute that can be used to indicate whether an entity property should be encrypted. Use this annotation to specify whether to encrypt the data stored by a setter method or decrypt the data retrieved by a getter method in a class implementing <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public interface Encrypt
  see:
  - type: com.microsoft.azure.storage.table._ignore
    description: ''
references:
- uid: com.microsoft.azure.storage.table._table_entity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._table_entity.yml
  name: TableEntity
  nameWithType: TableEntity
  fullName: com.microsoft.azure.storage.table.TableEntity
  type: Interface
  summary: >-
    <p>An interface required for table entity types. The <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> interface declares getter and setter methods for the common entity properties, and  and  methods for serialization and deserialization of all entity properties using a property map. Create classes implementing <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity. </p>

    <p>The Storage client library includes two implementations of <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> that provide for simple property access and serialization: </p>

    <p>

      <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> implements <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> and provides a simple property map to store and retrieve properties. Use a <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties. You can also use this type to perform bulk table updates of heterogeneous entities without losing property information. </p>

    <p>

      <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> is an implementation of <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> that uses reflection-based serialization and deserialization behavior in its  and  methods. <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref>-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically. </p>

    <p>Any class that implements <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> by invoking the static methods  in  and  in . The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically. When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data. The reflection code looks for getter and setter methods in pairs of the form </p>

    <p></p>

    <p>and </p>

    <p></p>

    <p>where <emphasis>PropertyName</emphasis> is a property name for the table entity, and <emphasis>type</emphasis> is a Java type compatible with the EDM data type of the property. See the table in the class description for <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> for a map of property types to their Java equivalents. The <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention. Method names and the  attribute of <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotations are case sensitive for matching property names with reflection. Use the <xref href="com.microsoft.azure.storage.table._ignore" data-throw-if-not-resolved="false"></xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization. Note that the names "PartitionKey", "RowKey", "Timestamp", and "Etag" are reserved and will be ignored if set with the <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotation in a subclass that uses the reflection methods. </p>

    <p></p>
  syntax:
    content: public interface TableEntity
- uid: com.microsoft.azure.storage.table._ignore
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._ignore.yml
  name: Ignore
  nameWithType: Ignore
  fullName: com.microsoft.azure.storage.table.Ignore
  type: Interface
  summary: >-
    <p>An annotation set on a method to prevent its use in serializing or deserializing a property by reflection. Apply the  annotation to methods in a class implementing <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> to force them to be ignored during reflection-based serialization and deserialization. See the documentation for <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> for more information on using reflection-based serialization and deserialization.</p>

    <p></p>
  syntax:
    content: public interface Ignore
