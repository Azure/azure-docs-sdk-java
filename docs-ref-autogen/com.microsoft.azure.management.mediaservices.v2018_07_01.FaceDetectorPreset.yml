### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset
  id: FaceDetectorPreset
  artifact: com.microsoft.azure.mediaservices.v2018_07_01:azure-mgmt-media:1.0.0-beta-5
  parent: com.microsoft.azure.management.mediaservices.v2018_07_01
  children:
  - com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.FaceDetectorPreset()
  - com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.experimentalOptions()
  - com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.resolution()
  - com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.withExperimentalOptions(java.util.Map<java.lang.String,java.lang.String>)
  - com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.withResolution(com.microsoft.azure.management.mediaservices.v2018_07_01.AnalysisResolution)
  langs:
  - java
  name: FaceDetectorPreset
  nameWithType: FaceDetectorPreset
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset
  type: Class
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
  summary: Describes all the settings to be used when analyzing a video in order to detect all the faces present.
  syntax:
    content: public class FaceDetectorPreset extends Preset
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.management.mediaservices.v2018_07_01.Preset
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.FaceDetectorPreset()
  id: FaceDetectorPreset()
  artifact: com.microsoft.azure.mediaservices.v2018_07_01:azure-mgmt-media:1.0.0-beta-5
  parent: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset
  langs:
  - java
  name: FaceDetectorPreset()
  nameWithType: FaceDetectorPreset.FaceDetectorPreset()
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.FaceDetectorPreset()
  overload: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.FaceDetectorPreset*
  type: Constructor
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
  syntax:
    content: public FaceDetectorPreset()
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.experimentalOptions()
  id: experimentalOptions()
  artifact: com.microsoft.azure.mediaservices.v2018_07_01:azure-mgmt-media:1.0.0-beta-5
  parent: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset
  langs:
  - java
  name: experimentalOptions()
  nameWithType: FaceDetectorPreset.experimentalOptions()
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.experimentalOptions()
  overload: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.experimentalOptions*
  type: Method
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
  summary: Get dictionary containing key value pairs for parameters not exposed in the preset itself.
  syntax:
    content: public Map<String,String> experimentalOptions()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the experimentalOptions value
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.resolution()
  id: resolution()
  artifact: com.microsoft.azure.mediaservices.v2018_07_01:azure-mgmt-media:1.0.0-beta-5
  parent: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset
  langs:
  - java
  name: resolution()
  nameWithType: FaceDetectorPreset.resolution()
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.resolution()
  overload: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.resolution*
  type: Method
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
  summary: "Get specifies the maximum resolution at which your video is analyzed. The default behavior is \"SourceResolution,\" which will keep the input video at its original resolution when analyzed. Using \"StandardDefinition\" will resize input videos to standard definition while preserving the appropriate aspect ratio. It will only resize if the video is of higher resolution. For example, a 1920x1080 input would be scaled to 640x360 before processing. Switching to \"StandardDefinition\" will reduce the time it takes to process high resolution video. It may also reduce the cost of using this component (see https://azure.microsoft.com/en-us/pricing/details/media-services/\\#analytics for details). However, faces that end up being too small in the resized video may not be detected. Possible values include: 'SourceResolution', 'StandardDefinition'."
  syntax:
    content: public AnalysisResolution resolution()
    return:
      type: com.microsoft.azure.management.mediaservices.v2018_07_01.AnalysisResolution
      description: the resolution value
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.withExperimentalOptions(java.util.Map<java.lang.String,java.lang.String>)
  id: withExperimentalOptions(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.microsoft.azure.mediaservices.v2018_07_01:azure-mgmt-media:1.0.0-beta-5
  parent: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset
  langs:
  - java
  name: withExperimentalOptions(Map<String,String> experimentalOptions)
  nameWithType: FaceDetectorPreset.withExperimentalOptions(Map<String,String> experimentalOptions)
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.withExperimentalOptions(Map<String,String> experimentalOptions)
  overload: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.withExperimentalOptions*
  type: Method
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
  summary: Set dictionary containing key value pairs for parameters not exposed in the preset itself.
  syntax:
    content: public FaceDetectorPreset withExperimentalOptions(Map<String,String> experimentalOptions)
    parameters:
    - id: experimentalOptions
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the experimentalOptions value to set
    return:
      type: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset
      description: the FaceDetectorPreset object itself.
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.withResolution(com.microsoft.azure.management.mediaservices.v2018_07_01.AnalysisResolution)
  id: withResolution(com.microsoft.azure.management.mediaservices.v2018_07_01.AnalysisResolution)
  artifact: com.microsoft.azure.mediaservices.v2018_07_01:azure-mgmt-media:1.0.0-beta-5
  parent: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset
  langs:
  - java
  name: withResolution(AnalysisResolution resolution)
  nameWithType: FaceDetectorPreset.withResolution(AnalysisResolution resolution)
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.withResolution(AnalysisResolution resolution)
  overload: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.withResolution*
  type: Method
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
  summary: "Set specifies the maximum resolution at which your video is analyzed. The default behavior is \"SourceResolution,\" which will keep the input video at its original resolution when analyzed. Using \"StandardDefinition\" will resize input videos to standard definition while preserving the appropriate aspect ratio. It will only resize if the video is of higher resolution. For example, a 1920x1080 input would be scaled to 640x360 before processing. Switching to \"StandardDefinition\" will reduce the time it takes to process high resolution video. It may also reduce the cost of using this component (see https://azure.microsoft.com/en-us/pricing/details/media-services/\\#analytics for details). However, faces that end up being too small in the resized video may not be detected. Possible values include: 'SourceResolution', 'StandardDefinition'."
  syntax:
    content: public FaceDetectorPreset withResolution(AnalysisResolution resolution)
    parameters:
    - id: resolution
      type: com.microsoft.azure.management.mediaservices.v2018_07_01.AnalysisResolution
      description: the resolution value to set
    return:
      type: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset
      description: the FaceDetectorPreset object itself.
references:
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.FaceDetectorPreset*
  name: FaceDetectorPreset
  nameWithType: FaceDetectorPreset.FaceDetectorPreset
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.FaceDetectorPreset
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.AnalysisResolution
  name: AnalysisResolution
  nameWithType: AnalysisResolution
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.AnalysisResolution
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.resolution*
  name: resolution
  nameWithType: FaceDetectorPreset.resolution
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.resolution
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.withResolution*
  name: withResolution
  nameWithType: FaceDetectorPreset.withResolution
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.withResolution
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.experimentalOptions*
  name: experimentalOptions
  nameWithType: FaceDetectorPreset.experimentalOptions
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.experimentalOptions
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.withExperimentalOptions*
  name: withExperimentalOptions
  nameWithType: FaceDetectorPreset.withExperimentalOptions
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.FaceDetectorPreset.withExperimentalOptions
  package: com.microsoft.azure.management.mediaservices.v2018_07_01
- uid: com.microsoft.azure.management.mediaservices.v2018_07_01.Preset
  name: Preset
  nameWithType: Preset
  fullName: com.microsoft.azure.management.mediaservices.v2018_07_01.Preset
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
