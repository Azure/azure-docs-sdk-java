### YamlMime:JavaMember
uid: "com.azure.resourcemanager.network.fluent.models.IpAddressAvailabilityResultInner.withAvailableIpAddresses*"
fullName: "com.azure.resourcemanager.network.fluent.models.IpAddressAvailabilityResultInner.withAvailableIpAddresses"
name: "withAvailableIpAddresses"
nameWithType: "IpAddressAvailabilityResultInner.withAvailableIpAddresses"
members:
- uid: "com.azure.resourcemanager.network.fluent.models.IpAddressAvailabilityResultInner.withAvailableIpAddresses(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.network.fluent.models.IpAddressAvailabilityResultInner.withAvailableIpAddresses(List<String> availableIpAddresses)"
  name: "withAvailableIpAddresses(List<String> availableIpAddresses)"
  nameWithType: "IpAddressAvailabilityResultInner.withAvailableIpAddresses(List<String> availableIpAddresses)"
  summary: "Set the availableIpAddresses property: Contains other available private IP addresses if the asked for address is taken."
  parameters:
  - description: "the availableIpAddresses value to set."
    name: "availableIpAddresses"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public IpAddressAvailabilityResultInner withAvailableIpAddresses(List<String> availableIpAddresses)"
  returns:
    description: "the IpAddressAvailabilityResultInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.IpAddressAvailabilityResultInner?alt=com.azure.resourcemanager.network.fluent.models.IpAddressAvailabilityResultInner&text=IpAddressAvailabilityResultInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
