### YamlMime:JavaMember
nameWithType: DAGNode<DataT,NodeT,NodeT>.onFaultedResolution
type: method
members:
- fullName: com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.onFaultedResolution(String dependencyKey, Throwable throwable)
  name: onFaultedResolution(String dependencyKey, Throwable throwable)
  nameWithType: DAGNode<DataT,NodeT,NodeT>.onFaultedResolution(String dependencyKey, Throwable throwable)
  parameters:
  - description: <p>the id of the dependency node </p>
    name: dependencyKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the reason for unsuccessful resolution </p>
    name: throwable
    type: <xref href="Throwable?alt=Throwable&text=Throwable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reports a dependency of this node has been faulted.</p>

    <p></p>
  syntax: protected void onFaultedResolution(String dependencyKey, Throwable throwable)
  uid: com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.onFaultedResolution(String,Throwable)
uid: com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.onFaultedResolution*
fullName: com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT, NodeT extends DAGNode<DataT, NodeT>.onFaultedResolution(String dependencyKey, Throwable throwable)
name: onFaultedResolution(String dependencyKey, Throwable throwable)
package: com.microsoft.azure.management.resources.fluentcore.dag
metadata: {}
