### YamlMime:JavaMember
uid: "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.onFaultedResolution*"
fullName: "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT,NodeT>.onFaultedResolution"
name: "onFaultedResolution"
nameWithType: "DAGNode<DataT,NodeT>.onFaultedResolution"
members:
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode.onFaultedResolution(java.lang.String,java.lang.Throwable)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<DataT,NodeT>.onFaultedResolution(String dependencyKey, Throwable throwable)"
  name: "onFaultedResolution(String dependencyKey, Throwable throwable)"
  nameWithType: "DAGNode<DataT,NodeT>.onFaultedResolution(String dependencyKey, Throwable throwable)"
  summary: "Reports a dependency of this node has been faulted."
  parameters:
  - description: "the id of the dependency node"
    name: "dependencyKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the reason for unsuccessful resolution"
    name: "throwable"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void onFaultedResolution(String dependencyKey, Throwable throwable)"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.dag"
artifact: com.microsoft.azure:azure-mgmt-resources:1.38.1
