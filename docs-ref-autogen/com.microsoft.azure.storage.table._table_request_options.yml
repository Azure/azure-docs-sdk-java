items:
- uid: com.microsoft.azure.storage.table._table_request_options
  id: _table_request_options
  parent: com.microsoft.azure.storage.table
  children:
  - com.microsoft.azure.storage.table._table_request_options.applyDefaults(final TableRequestOptions)
  - com.microsoft.azure.storage.table._table_request_options.assertNoEncryptionPolicyOrStrictMode()
  - com.microsoft.azure.storage.table._table_request_options.assertPolicyIfRequired()
  - com.microsoft.azure.storage.table._table_request_options.clearEncryption()
  - com.microsoft.azure.storage.table._table_request_options.getDateBackwardCompatibility()
  - com.microsoft.azure.storage.table._table_request_options.getEncryptionPolicy()
  - com.microsoft.azure.storage.table._table_request_options.getEncryptionResolver()
  - com.microsoft.azure.storage.table._table_request_options.getPropertyResolver()
  - com.microsoft.azure.storage.table._table_request_options.getTablePayloadFormat()
  - com.microsoft.azure.storage.table._table_request_options.populateAndApplyDefaults(final TableRequestOptions,final CloudTableClient)
  - com.microsoft.azure.storage.table._table_request_options.setDateBackwardCompatibility(Boolean)
  - com.microsoft.azure.storage.table._table_request_options.setEncryptionPolicy(TableEncryptionPolicy)
  - com.microsoft.azure.storage.table._table_request_options.setEncryptionResolver(EncryptionResolver)
  - com.microsoft.azure.storage.table._table_request_options.setPropertyResolver(PropertyResolver)
  - com.microsoft.azure.storage.table._table_request_options.setTablePayloadFormat(TablePayloadFormat)
  - com.microsoft.azure.storage.table._table_request_options.TableRequestOptions()
  - com.microsoft.azure.storage.table._table_request_options.TableRequestOptions(final TableRequestOptions)
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: TableRequestOptions
  nameWithType: TableRequestOptions
  fullName: com.microsoft.azure.storage.table.TableRequestOptions
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
      branch: master
      repo: https://github.com/Azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 26
  package: com.microsoft.azure.storage.table
  summary: <p>Represents a set of timeout, payload format, and retry policy options that may be specified for a table operation request. </p>
  syntax: &o1
    content: public class TableRequestOptions extends RequestOptions
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.storage._request_options
  inheritedMembers:
  - com.microsoft.azure.storage._request_options.applyBaseDefaultsInternal(final RequestOptions)
  - com.microsoft.azure.storage._request_options.getLocationMode()
  - com.microsoft.azure.storage._request_options.getMaximumExecutionTimeInMs()
  - com.microsoft.azure.storage._request_options.getOperationExpiryTimeInMs()
  - com.microsoft.azure.storage._request_options.getRetryPolicyFactory()
  - com.microsoft.azure.storage._request_options.getTimeoutIntervalInMs()
  - com.microsoft.azure.storage._request_options.populateRequestOptions(RequestOptions,final RequestOptions,final boolean)
  - com.microsoft.azure.storage._request_options.RequestOptions()
  - com.microsoft.azure.storage._request_options.RequestOptions(final RequestOptions)
  - com.microsoft.azure.storage._request_options.requireEncryption()
  - com.microsoft.azure.storage._request_options.setLocationMode(final LocationMode)
  - com.microsoft.azure.storage._request_options.setMaximumExecutionTimeInMs(Integer)
  - com.microsoft.azure.storage._request_options.setRequireEncryption(Boolean)
  - com.microsoft.azure.storage._request_options.setRetryPolicyFactory(final RetryPolicyFactory)
  - com.microsoft.azure.storage._request_options.setTimeoutIntervalInMs(final Integer)
- uid: com.microsoft.azure.storage.table._table_request_options.applyDefaults(final TableRequestOptions)
  id: applyDefaults(final TableRequestOptions)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: applyDefaults(final TableRequestOptions modifiedOptions)
  nameWithType: TableRequestOptions.applyDefaults(final TableRequestOptions modifiedOptions)
  fullName: static void com.microsoft.azure.storage.table.TableRequestOptions.applyDefaults(final TableRequestOptions modifiedOptions)
  overload: com.microsoft.azure.storage.table._table_request_options.applyDefaults*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 168
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Applies defaults to the options passed in.</p>

    <p></p>
  syntax:
    content: protected static void applyDefaults(final TableRequestOptions modifiedOptions)
    parameters:
    - id: modifiedOptions
      type: 93de0ef9com.microsoft.azure.storage.table._table_request_options
      description: <p>The options to apply defaults to. </p>
- uid: com.microsoft.azure.storage.table._table_request_options.assertNoEncryptionPolicyOrStrictMode()
  id: assertNoEncryptionPolicyOrStrictMode()
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: assertNoEncryptionPolicyOrStrictMode()
  nameWithType: TableRequestOptions.assertNoEncryptionPolicyOrStrictMode()
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.assertNoEncryptionPolicyOrStrictMode()
  overload: com.microsoft.azure.storage.table._table_request_options.assertNoEncryptionPolicyOrStrictMode*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 355
  package: com.microsoft.azure.storage.table
  summary: <p>Assert that if validation is on, an encryption policy is not specified. </p>
  syntax:
    content: protected void assertNoEncryptionPolicyOrStrictMode()
- uid: com.microsoft.azure.storage.table._table_request_options.assertPolicyIfRequired()
  id: assertPolicyIfRequired()
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: assertPolicyIfRequired()
  nameWithType: TableRequestOptions.assertPolicyIfRequired()
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.assertPolicyIfRequired()
  overload: com.microsoft.azure.storage.table._table_request_options.assertPolicyIfRequired*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 370
  package: com.microsoft.azure.storage.table
  summary: <p>Assert that if strict mode is on, an encryption policy is specified. </p>
  syntax:
    content: protected void assertPolicyIfRequired()
- uid: com.microsoft.azure.storage.table._table_request_options.clearEncryption()
  id: clearEncryption()
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: clearEncryption()
  nameWithType: TableRequestOptions.clearEncryption()
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.clearEncryption()
  overload: com.microsoft.azure.storage.table._table_request_options.clearEncryption*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 156
  package: com.microsoft.azure.storage.table
  summary: <p>Clears the encryption properties on this <xref href="com.microsoft.azure.storage.table._table_request_options" data-throw-if-not-resolved="false"></xref> object. Useful for operations for which encryption does not make sense, such as CreateTable. </p>
  syntax:
    content: protected void clearEncryption()
- uid: com.microsoft.azure.storage.table._table_request_options.getDateBackwardCompatibility()
  id: getDateBackwardCompatibility()
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: getDateBackwardCompatibility()
  nameWithType: TableRequestOptions.getDateBackwardCompatibility()
  fullName: Boolean com.microsoft.azure.storage.table.TableRequestOptions.getDateBackwardCompatibility()
  overload: com.microsoft.azure.storage.table._table_request_options.getDateBackwardCompatibility*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 246
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Gets whether the client should look to correct Date values stored on a <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> that may have been written using versions of this library prior to 2.0.0, see <xref href="com.microsoft.azure.storage.table._table_request_options.setDateBackwardCompatibility(Boolean)" data-throw-if-not-resolved="false"></xref>. </p>

    <p>See <ulink url="http://go.microsoft.com/fwlink/?LinkId=523753">here</ulink> for more details.</p>

    <p></p>
  syntax:
    content: public Boolean getDateBackwardCompatibility()
    return:
      type: 866c2227
      description: >-
        <p>

          <code>true</code> if <code>dateBackwardCompatibility</code> is enabled; otherwise, <code>false</code></p>
- uid: com.microsoft.azure.storage.table._table_request_options.getEncryptionPolicy()
  id: getEncryptionPolicy()
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: getEncryptionPolicy()
  nameWithType: TableRequestOptions.getEncryptionPolicy()
  fullName: TableEncryptionPolicy com.microsoft.azure.storage.table.TableRequestOptions.getEncryptionPolicy()
  overload: com.microsoft.azure.storage.table._table_request_options.getEncryptionPolicy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 256
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Gets the encryption policy to use for this request. For more information about the encryption policy defaults, see <xref href="com.microsoft.azure.storage.table._table_request_options.setEncryptionPolicy(TableEncryptionPolicy)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public TableEncryptionPolicy getEncryptionPolicy()
    return:
      type: com.microsoft.azure.storage.table._table_encryption_policy
      description: <p>An <xref href="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false"></xref> object that represents the current encryption policy. </p>
- uid: com.microsoft.azure.storage.table._table_request_options.getEncryptionResolver()
  id: getEncryptionResolver()
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: getEncryptionResolver()
  nameWithType: TableRequestOptions.getEncryptionResolver()
  fullName: EncryptionResolver com.microsoft.azure.storage.table.TableRequestOptions.getEncryptionResolver()
  overload: com.microsoft.azure.storage.table._table_request_options.getEncryptionResolver*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 268
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Gets the interface that contains a function which is used to get the value indicating whether a property should be encrypted or not given the partition key, row key, and the property name. For more information about the <xref href="com.microsoft.azure.storage.table._table_request_options._encryption_resolver" data-throw-if-not-resolved="false"></xref> defaults, see <xref href="com.microsoft.azure.storage.table._table_request_options.setEncryptionResolver(EncryptionResolver)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public EncryptionResolver getEncryptionResolver()
    return:
      type: com.microsoft.azure.storage.table._table_request_options._encryption_resolver
      description: <p>The current <xref href="com.microsoft.azure.storage.table._table_request_options._property_resolver" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: com.microsoft.azure.storage.table._table_request_options.getPropertyResolver()
  id: getPropertyResolver()
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: getPropertyResolver()
  nameWithType: TableRequestOptions.getPropertyResolver()
  fullName: PropertyResolver com.microsoft.azure.storage.table.TableRequestOptions.getPropertyResolver()
  overload: com.microsoft.azure.storage.table._table_request_options.getPropertyResolver*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 232
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Gets the interface that contains a function which is used to get the <xref href="com.microsoft.azure.storage.table._edm_type" data-throw-if-not-resolved="false"></xref> for an entity property given the partition key, row, key, and the property name. For more information about the <xref href="com.microsoft.azure.storage.table._table_request_options._property_resolver" data-throw-if-not-resolved="false"></xref> defaults, see <xref href="com.microsoft.azure.storage.table._table_request_options.setPropertyResolver(PropertyResolver)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public PropertyResolver getPropertyResolver()
    return:
      type: com.microsoft.azure.storage.table._table_request_options._property_resolver
      description: <p>The current <xref href="com.microsoft.azure.storage.table._table_request_options._property_resolver" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: com.microsoft.azure.storage.table._table_request_options.getTablePayloadFormat()
  id: getTablePayloadFormat()
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: getTablePayloadFormat()
  nameWithType: TableRequestOptions.getTablePayloadFormat()
  fullName: TablePayloadFormat com.microsoft.azure.storage.table.TableRequestOptions.getTablePayloadFormat()
  overload: com.microsoft.azure.storage.table._table_request_options.getTablePayloadFormat*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 220
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Gets the <xref href="com.microsoft.azure.storage.table._table_payload_format" data-throw-if-not-resolved="false"></xref> to be used. For more information about <xref href="com.microsoft.azure.storage.table._table_payload_format" data-throw-if-not-resolved="false"></xref> defaults, see <xref href="com.microsoft.azure.storage.table._table_request_options.setTablePayloadFormat(TablePayloadFormat)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public TablePayloadFormat getTablePayloadFormat()
    return:
      type: com.microsoft.azure.storage.table._table_payload_format
      description: <p>The <xref href="com.microsoft.azure.storage.table._table_payload_format" data-throw-if-not-resolved="false"></xref> used by this <ref refid="" kindref="compound">TableRequest</ref>. </p>
- uid: com.microsoft.azure.storage.table._table_request_options.populateAndApplyDefaults(final TableRequestOptions,final CloudTableClient)
  id: populateAndApplyDefaults(final TableRequestOptions,final CloudTableClient)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: populateAndApplyDefaults(final TableRequestOptions options, final CloudTableClient client)
  nameWithType: TableRequestOptions.populateAndApplyDefaults(final TableRequestOptions options, final CloudTableClient client)
  fullName: static final TableRequestOptions com.microsoft.azure.storage.table.TableRequestOptions.populateAndApplyDefaults(final TableRequestOptions options, final CloudTableClient client)
  overload: com.microsoft.azure.storage.table._table_request_options.populateAndApplyDefaults*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 144
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Initializes the values for this  instance, if they are currently , using the values specified in the <xref href="com.microsoft.azure.storage.table._cloud_table_client" data-throw-if-not-resolved="false"></xref> parameter.</p>

    <p></p>
  syntax:
    content: protected static final TableRequestOptions populateAndApplyDefaults(final TableRequestOptions options, final CloudTableClient client)
    parameters:
    - id: options
      type: 93de0ef9com.microsoft.azure.storage.table._table_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.table._table_request_options" data-throw-if-not-resolved="false"></xref> object which represents the input options to copy from when applying defaults. </p>
    - id: client
      type: 93de0ef9com.microsoft.azure.storage.table._cloud_table_client
      description: <p>A <xref href="com.microsoft.azure.storage.table._cloud_table_client" data-throw-if-not-resolved="false"></xref> object from which to copy the timeout and retry policy.</p>
    return:
      type: 93de0ef9com.microsoft.azure.storage.table._table_request_options
      description: <p>A <xref href="com.microsoft.azure.storage.table._table_request_options" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: com.microsoft.azure.storage.table._table_request_options.setDateBackwardCompatibility(Boolean)
  id: setDateBackwardCompatibility(Boolean)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: setDateBackwardCompatibility(Boolean dateBackwardCompatibility)
  nameWithType: TableRequestOptions.setDateBackwardCompatibility(Boolean dateBackwardCompatibility)
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setDateBackwardCompatibility(Boolean dateBackwardCompatibility)
  overload: com.microsoft.azure.storage.table._table_request_options.setDateBackwardCompatibility*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 317
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Sets whether the client should look to correct Date values stored on a <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> that may have been written using versions of this library prior to 2.0.0. </p>

    <p>

      <ref refid="" kindref="compound">dateBackwardCompatibility</ref> is by default , indicating a post 2.0.0 version or mixed- platform usage. You can change the <ref refid="" kindref="compound">dateBackwardCompatibility</ref> on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage.table._cloud_table_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use that <ref refid="" kindref="compound">dateBackwardCompatibility</ref>. </p>

    <p>See <ulink url="http://go.microsoft.com/fwlink/?LinkId=523753">here</ulink> for more details.</p>

    <p></p>
  syntax: &o4
    content: public void setDateBackwardCompatibility(Boolean dateBackwardCompatibility)
    parameters:
    - id: dateBackwardCompatibility
      type: 866c2227
      description: >-
        <p>

          <code>true</code> to enable <code>dateBackwardCompatibility</code>; otherwise, <code>false</code></p>
- uid: com.microsoft.azure.storage.table._table_request_options.setEncryptionPolicy(TableEncryptionPolicy)
  id: setEncryptionPolicy(TableEncryptionPolicy)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: setEncryptionPolicy(TableEncryptionPolicy encryptionPolicy)
  nameWithType: TableRequestOptions.setEncryptionPolicy(TableEncryptionPolicy encryptionPolicy)
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setEncryptionPolicy(TableEncryptionPolicy encryptionPolicy)
  overload: com.microsoft.azure.storage.table._table_request_options.setEncryptionPolicy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 332
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Sets the <xref href="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false"></xref> object to use for this request. </p>

    <p>The default <xref href="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false"></xref> is set in the client and is by default null, indicating no encryption. You can change the <xref href="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false"></xref> on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use that <xref href="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: &o5
    content: public void setEncryptionPolicy(TableEncryptionPolicy encryptionPolicy)
    parameters:
    - id: encryptionPolicy
      type: com.microsoft.azure.storage.table._table_encryption_policy
      description: <p>the <xref href="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false"></xref> object to use when making service requests. </p>
- uid: com.microsoft.azure.storage.table._table_request_options.setEncryptionResolver(EncryptionResolver)
  id: setEncryptionResolver(EncryptionResolver)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: setEncryptionResolver(EncryptionResolver encryptionResolver)
  nameWithType: TableRequestOptions.setEncryptionResolver(EncryptionResolver encryptionResolver)
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setEncryptionResolver(EncryptionResolver encryptionResolver)
  overload: com.microsoft.azure.storage.table._table_request_options.setEncryptionResolver*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 348
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Sets the interface that contains a function which is used to get the value indicating whether a property should be encrypted or not given the partition key, row key, and the property name. A <xref href="com.microsoft.azure.storage.table._table_request_options._encryption_resolver" data-throw-if-not-resolved="false"></xref> is required if a <xref href="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false"></xref> is specified. </p>

    <p>You can change the <xref href="com.microsoft.azure.storage.table._table_request_options._encryption_resolver" data-throw-if-not-resolved="false"></xref> on this request by setting this property. You can also change the value on the <ref refid="" kindref="compound">TableServiceClient#getDefaultRequestOptions()</ref> object so that all subsequent requests made via the service client will use that <xref href="com.microsoft.azure.storage.table._table_request_options._encryption_resolver" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: &o6
    content: public void setEncryptionResolver(EncryptionResolver encryptionResolver)
    parameters:
    - id: encryptionResolver
      type: com.microsoft.azure.storage.table._table_request_options._encryption_resolver
- uid: com.microsoft.azure.storage.table._table_request_options.setPropertyResolver(PropertyResolver)
  id: setPropertyResolver(PropertyResolver)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: setPropertyResolver(PropertyResolver propertyResolver)
  nameWithType: TableRequestOptions.setPropertyResolver(PropertyResolver propertyResolver)
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setPropertyResolver(PropertyResolver propertyResolver)
  overload: com.microsoft.azure.storage.table._table_request_options.setPropertyResolver*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 299
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Sets the interface that contains a function which is used to get the <xref href="com.microsoft.azure.storage.table._edm_type" data-throw-if-not-resolved="false"></xref> for an entity property given the partition key, row, key, and the property name. </p>

    <p>The default <xref href="com.microsoft.azure.storage.table._table_request_options._property_resolver" data-throw-if-not-resolved="false"></xref> is set in the client and is by default null, indicating not to use a property resolver. You can change the <xref href="com.microsoft.azure.storage.table._table_request_options._property_resolver" data-throw-if-not-resolved="false"></xref> on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage.table._cloud_table_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use that <xref href="com.microsoft.azure.storage.table._table_request_options._property_resolver" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: &o3
    content: public void setPropertyResolver(PropertyResolver propertyResolver)
    parameters:
    - id: propertyResolver
      type: com.microsoft.azure.storage.table._table_request_options._property_resolver
      description: <p>Specifies the <xref href="com.microsoft.azure.storage.table._table_request_options._property_resolver" data-throw-if-not-resolved="false"></xref> to set. </p>
- uid: com.microsoft.azure.storage.table._table_request_options.setTablePayloadFormat(TablePayloadFormat)
  id: setTablePayloadFormat(TablePayloadFormat)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: setTablePayloadFormat(TablePayloadFormat payloadFormat)
  nameWithType: TableRequestOptions.setTablePayloadFormat(TablePayloadFormat payloadFormat)
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setTablePayloadFormat(TablePayloadFormat payloadFormat)
  overload: com.microsoft.azure.storage.table._table_request_options.setTablePayloadFormat*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 283
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Sets the <xref href="com.microsoft.azure.storage.table._table_payload_format" data-throw-if-not-resolved="false"></xref> to be used. </p>

    <p>The default <xref href="com.microsoft.azure.storage.table._table_payload_format" data-throw-if-not-resolved="false"></xref> is set in the client and is by default <xref href="com.microsoft.azure.storage.table._table_payload_format.Json()" data-throw-if-not-resolved="false"></xref>. You can change the <xref href="com.microsoft.azure.storage.table._table_payload_format" data-throw-if-not-resolved="false"></xref> on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage.table._cloud_table_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use that <xref href="com.microsoft.azure.storage.table._table_payload_format" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: &o2
    content: public void setTablePayloadFormat(TablePayloadFormat payloadFormat)
    parameters:
    - id: payloadFormat
      type: com.microsoft.azure.storage.table._table_payload_format
      description: <p>Specifies the <xref href="com.microsoft.azure.storage.table._table_payload_format" data-throw-if-not-resolved="false"></xref> to set. </p>
- uid: com.microsoft.azure.storage.table._table_request_options.TableRequestOptions()
  id: TableRequestOptions()
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: TableRequestOptions()
  nameWithType: TableRequestOptions.TableRequestOptions()
  fullName: com.microsoft.azure.storage.table.TableRequestOptions.TableRequestOptions()
  overload: com.microsoft.azure.storage.table._table_request_options.TableRequestOptions*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 109
  package: com.microsoft.azure.storage.table
  summary: <p>Creates an instance of the </p>
  syntax:
    content: public TableRequestOptions()
- uid: com.microsoft.azure.storage.table._table_request_options.TableRequestOptions(final TableRequestOptions)
  id: TableRequestOptions(final TableRequestOptions)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  langs:
  - java
  name: TableRequestOptions(final TableRequestOptions other)
  nameWithType: TableRequestOptions.TableRequestOptions(final TableRequestOptions other)
  fullName: com.microsoft.azure.storage.table.TableRequestOptions.TableRequestOptions(final TableRequestOptions other)
  overload: com.microsoft.azure.storage.table._table_request_options.TableRequestOptions*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableRequestOptions.java
    startLine: 120
  package: com.microsoft.azure.storage.table
  summary: >-
    <p>Creates an instance of the  class by copying values from another  instance.</p>

    <p></p>
  syntax:
    content: public TableRequestOptions(final TableRequestOptions other)
    parameters:
    - id: other
      type: 93de0ef9com.microsoft.azure.storage.table._table_request_options
      description: <p>A <code><xref href="com.microsoft.azure.storage.table._table_request_options" data-throw-if-not-resolved="false"></xref></code> object that represents the request options to copy. </p>
references:
- uid: com.microsoft.azure.storage.table._table_request_options.TableRequestOptions*
  name: TableRequestOptions
  nameWithType: TableRequestOptions.TableRequestOptions
  fullName: com.microsoft.azure.storage.table.TableRequestOptions.TableRequestOptions
  package: com.microsoft.azure.storage.table
- uid: 93de0ef9com.microsoft.azure.storage.table._table_request_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.table._table_request_options
    name: TableRequestOptions
    fullName: com.microsoft.azure.storage.table.TableRequestOptions
    href: com.microsoft.azure.storage.table._table_request_options.yml
- uid: com.microsoft.azure.storage.table._table_request_options.getTablePayloadFormat*
  name: getTablePayloadFormat
  nameWithType: TableRequestOptions.getTablePayloadFormat
  fullName: TablePayloadFormat com.microsoft.azure.storage.table.TableRequestOptions.getTablePayloadFormat
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_request_options.getPropertyResolver*
  name: getPropertyResolver
  nameWithType: TableRequestOptions.getPropertyResolver
  fullName: PropertyResolver com.microsoft.azure.storage.table.TableRequestOptions.getPropertyResolver
  package: com.microsoft.azure.storage.table
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.storage.table._table_request_options.getDateBackwardCompatibility*
  name: getDateBackwardCompatibility
  nameWithType: TableRequestOptions.getDateBackwardCompatibility
  fullName: Boolean com.microsoft.azure.storage.table.TableRequestOptions.getDateBackwardCompatibility
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_request_options.getEncryptionPolicy*
  name: getEncryptionPolicy
  nameWithType: TableRequestOptions.getEncryptionPolicy
  fullName: TableEncryptionPolicy com.microsoft.azure.storage.table.TableRequestOptions.getEncryptionPolicy
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_request_options.getEncryptionResolver*
  name: getEncryptionResolver
  nameWithType: TableRequestOptions.getEncryptionResolver
  fullName: EncryptionResolver com.microsoft.azure.storage.table.TableRequestOptions.getEncryptionResolver
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_request_options.setTablePayloadFormat*
  name: setTablePayloadFormat
  nameWithType: TableRequestOptions.setTablePayloadFormat
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setTablePayloadFormat
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_request_options.setPropertyResolver*
  name: setPropertyResolver
  nameWithType: TableRequestOptions.setPropertyResolver
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setPropertyResolver
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_request_options.setDateBackwardCompatibility*
  name: setDateBackwardCompatibility
  nameWithType: TableRequestOptions.setDateBackwardCompatibility
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setDateBackwardCompatibility
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_request_options.setEncryptionPolicy*
  name: setEncryptionPolicy
  nameWithType: TableRequestOptions.setEncryptionPolicy
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setEncryptionPolicy
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_request_options.setEncryptionResolver*
  name: setEncryptionResolver
  nameWithType: TableRequestOptions.setEncryptionResolver
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setEncryptionResolver
  package: com.microsoft.azure.storage.table
- uid: 93de0ef9com.microsoft.azure.storage.table._cloud_table_client
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.table._cloud_table_client
    name: CloudTableClient
    fullName: com.microsoft.azure.storage.table.CloudTableClient
    href: com.microsoft.azure.storage.table._cloud_table_client.yml
- uid: com.microsoft.azure.storage.table._table_request_options.populateAndApplyDefaults*
  name: populateAndApplyDefaults
  nameWithType: TableRequestOptions.populateAndApplyDefaults
  fullName: static final TableRequestOptions com.microsoft.azure.storage.table.TableRequestOptions.populateAndApplyDefaults
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_request_options.applyDefaults*
  name: applyDefaults
  nameWithType: TableRequestOptions.applyDefaults
  fullName: static void com.microsoft.azure.storage.table.TableRequestOptions.applyDefaults
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_request_options.clearEncryption*
  name: clearEncryption
  nameWithType: TableRequestOptions.clearEncryption
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.clearEncryption
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_request_options.assertNoEncryptionPolicyOrStrictMode*
  name: assertNoEncryptionPolicyOrStrictMode
  nameWithType: TableRequestOptions.assertNoEncryptionPolicyOrStrictMode
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.assertNoEncryptionPolicyOrStrictMode
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage.table._table_request_options.assertPolicyIfRequired*
  name: assertPolicyIfRequired
  nameWithType: TableRequestOptions.assertPolicyIfRequired
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.assertPolicyIfRequired
  package: com.microsoft.azure.storage.table
- uid: com.microsoft.azure.storage._request_options.applyBaseDefaultsInternal(final RequestOptions)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  nameWithType: RequestOptions.applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  fullName: static void com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  type: Method
  summary: >-
    <p>Populates the default timeout, retry policy, and location mode from client if they are null.</p>

    <p></p>
  syntax:
    content: protected static void applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
    parameters:
    - id: modifiedOptions
      type: 93de0ef9com.microsoft.azure.storage._request_options
      description: <p>The input options to copy from when applying defaults </p>
- uid: com.microsoft.azure.storage._request_options.getLocationMode()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: getLocationMode()
  nameWithType: RequestOptions.getLocationMode()
  fullName: final LocationMode com.microsoft.azure.storage.RequestOptions.getLocationMode()
  type: Method
  summary: >-
    <p>Gets the default location mode for this request. For more information about location mode, see <xref href="com.microsoft.azure.storage._request_options.setLocationMode(final LocationMode)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final LocationMode getLocationMode()
    return:
      type: 93de0ef9com.microsoft.azure.storage._location_mode
      description: <p>A <xref href="com.microsoft.azure.storage._location_mode" data-throw-if-not-resolved="false"></xref> object that represents the location mode for this request. </p>
- uid: com.microsoft.azure.storage._request_options.getMaximumExecutionTimeInMs()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: getMaximumExecutionTimeInMs()
  nameWithType: RequestOptions.getMaximumExecutionTimeInMs()
  fullName: Integer com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()
  type: Method
  summary: >-
    <p>Gets the maximum execution time for this request. For more information about maximum execution time defaults, see <xref href="com.microsoft.azure.storage._request_options.setMaximumExecutionTimeInMs(Integer)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public Integer getMaximumExecutionTimeInMs()
    return:
      type: 08effaa0
      description: <p>The current maximum execution time, in milliseconds, for this request. </p>
- uid: com.microsoft.azure.storage._request_options.getOperationExpiryTimeInMs()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: getOperationExpiryTimeInMs()
  nameWithType: RequestOptions.getOperationExpiryTimeInMs()
  fullName: Long com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()
  type: Method
  summary: >-
    <p>RESERVED FOR INTERNAL USE.</p>

    <p>Returns the time at which this operation expires. This is computed by adding the time the operation begins and the maximum execution time and will be null if maximum execution time is null. For more information about maximum execution time, see <xref href="com.microsoft.azure.storage._request_options.setMaximumExecutionTimeInMs(Integer)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public Long getOperationExpiryTimeInMs()
    return:
      type: 34f09483
      description: <p>The current operation expiry time, in milliseconds, for this request. </p>
- uid: com.microsoft.azure.storage._request_options.getRetryPolicyFactory()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: getRetryPolicyFactory()
  nameWithType: RequestOptions.getRetryPolicyFactory()
  fullName: final RetryPolicyFactory com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()
  type: Method
  summary: >-
    <p>Gets the retry policy to use for this request. For more information about the retry policy defaults, see <xref href="com.microsoft.azure.storage._request_options.setRetryPolicyFactory(final RetryPolicyFactory)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final RetryPolicyFactory getRetryPolicyFactory()
    return:
      type: 93de0ef9com.microsoft.azure.storage._retry_policy_factory
      description: <p>An <xref href="com.microsoft.azure.storage._retry_policy_factory" data-throw-if-not-resolved="false"></xref> object that represents the current retry policy.</p>
- uid: com.microsoft.azure.storage._request_options.getTimeoutIntervalInMs()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: getTimeoutIntervalInMs()
  nameWithType: RequestOptions.getTimeoutIntervalInMs()
  fullName: final Integer com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()
  type: Method
  summary: >-
    <p>Returns the timeout value for this request. For more information about the timeout defaults, see <xref href="com.microsoft.azure.storage._request_options.setTimeoutIntervalInMs(final Integer)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final Integer getTimeoutIntervalInMs()
    return:
      type: 3437983f
      description: <p>The current timeout value, in milliseconds, for this request. </p>
- uid: com.microsoft.azure.storage._request_options.populateRequestOptions(RequestOptions,final RequestOptions,final boolean)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  nameWithType: RequestOptions.populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  fullName: static void com.microsoft.azure.storage.RequestOptions.populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  type: Method
  summary: <p>Populates any null fields in the first requestOptions object with values from the second requestOptions object. </p>
  syntax:
    content: protected static void populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
    parameters:
    - id: modifiedOptions
      type: com.microsoft.azure.storage._request_options
    - id: clientOptions
      type: 93de0ef9com.microsoft.azure.storage._request_options
    - id: setStartTime
      type: 4dda0764
- uid: com.microsoft.azure.storage._request_options.RequestOptions()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: RequestOptions()
  nameWithType: RequestOptions.RequestOptions()
  fullName: com.microsoft.azure.storage.RequestOptions.RequestOptions()
  type: Constructor
  summary: <p>Creates an instance of the  class. </p>
  syntax:
    content: public RequestOptions()
- uid: com.microsoft.azure.storage._request_options.RequestOptions(final RequestOptions)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: RequestOptions(final RequestOptions other)
  nameWithType: RequestOptions.RequestOptions(final RequestOptions other)
  fullName: com.microsoft.azure.storage.RequestOptions.RequestOptions(final RequestOptions other)
  type: Constructor
  summary: >-
    <p>Creates an instance of the  class by copying values from another  instance.</p>

    <p></p>
  syntax:
    content: public RequestOptions(final RequestOptions other)
    parameters:
    - id: other
      type: 93de0ef9com.microsoft.azure.storage._request_options
      description: <p>A <code><xref href="com.microsoft.azure.storage._request_options" data-throw-if-not-resolved="false"></xref></code> object that represents the request options to copy. </p>
- uid: com.microsoft.azure.storage._request_options.requireEncryption()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: requireEncryption()
  nameWithType: RequestOptions.requireEncryption()
  fullName: Boolean com.microsoft.azure.storage.RequestOptions.requireEncryption()
  type: Method
  summary: >-
    <p>Gets a value to indicate whether all data written and read must be encrypted. Use  to encrypt/decrypt data for transactions; otherwise, . For more information about require encryption defaults, see <xref href="com.microsoft.azure.storage._request_options.setRequireEncryption(Boolean)" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public Boolean requireEncryption()
    return:
      type: 866c2227
      description: <p>A value to indicate whether all data written and read must be encrypted. </p>
- uid: com.microsoft.azure.storage._request_options.setLocationMode(final LocationMode)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: setLocationMode(final LocationMode locationMode)
  nameWithType: RequestOptions.setLocationMode(final LocationMode locationMode)
  fullName: void com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode locationMode)
  type: Method
  summary: >-
    <p>Sets the <xref href="com.microsoft.azure.storage._location_mode" data-throw-if-not-resolved="false"></xref> for this request. </p>

    <p>The default <xref href="com.microsoft.azure.storage._location_mode" data-throw-if-not-resolved="false"></xref> is set in the client and is by default <xref href="com.microsoft.azure.storage._location_mode.PRIMARY_ONLY()" data-throw-if-not-resolved="false"></xref>. You can change the <xref href="com.microsoft.azure.storage._location_mode" data-throw-if-not-resolved="false"></xref> on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use that <xref href="com.microsoft.azure.storage._location_mode" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public void setLocationMode(final LocationMode locationMode)
    parameters:
    - id: locationMode
      type: 93de0ef9com.microsoft.azure.storage._location_mode
      description: <p>the locationMode to set </p>
- uid: com.microsoft.azure.storage._request_options.setMaximumExecutionTimeInMs(Integer)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  nameWithType: RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  fullName: void com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  type: Method
  summary: >-
    <p>Sets the maximum execution time to use when making this request. </p>

    <p>The maximum execution time interval begins at the time that the client begins building the request. The maximum execution time is checked intermittently while uploading data, downloading data, and before executing retries. The service will continue to upload, download, and retry until the maximum execution time is reached. At that time, any partial uploads or downloads will be cancelled and an exception will be thrown. </p>

    <p>The default maximum execution is set in the client and is by default null, indicating no maximum time. You can change the maximum execution time on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use the maximum execution time.</p>

    <p></p>
  syntax:
    content: public void setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
    parameters:
    - id: maximumExecutionTimeInMs
      type: 08effaa0
      description: <p>The maximum execution time, in milliseconds, to use for this request. </p>
- uid: com.microsoft.azure.storage._request_options.setRequireEncryption(Boolean)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: setRequireEncryption(Boolean requireEncryption)
  nameWithType: RequestOptions.setRequireEncryption(Boolean requireEncryption)
  fullName: void com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean requireEncryption)
  type: Method
  summary: >-
    <p>Sets a value to indicate whether all data written and read must be encrypted. Use  to encrypt/decrypt data for transactions; otherwise, . </p>

    <p>The default is set in the client and is by default false, indicating encryption is not required. You can change the value on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use the appropriate value.</p>

    <p></p>
  syntax:
    content: public void setRequireEncryption(Boolean requireEncryption)
    parameters:
    - id: requireEncryption
      type: 866c2227
      description: <p>A value to indicate whether all data written and read must be encrypted. </p>
- uid: com.microsoft.azure.storage._request_options.setRetryPolicyFactory(final RetryPolicyFactory)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  nameWithType: RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  fullName: final void com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  type: Method
  summary: >-
    <p>Sets the <xref href="com.microsoft.azure.storage._retry_policy_factory" data-throw-if-not-resolved="false"></xref> object to use for this request. </p>

    <p>The default <xref href="com.microsoft.azure.storage._retry_policy_factory" data-throw-if-not-resolved="false"></xref> is set in the client and is by default <xref href="com.microsoft.azure.storage._retry_exponential_retry" data-throw-if-not-resolved="false"></xref>. You can change the <xref href="com.microsoft.azure.storage._retry_policy_factory" data-throw-if-not-resolved="false"></xref> on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use that <xref href="com.microsoft.azure.storage._retry_policy_factory" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public final void setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
    parameters:
    - id: retryPolicyFactory
      type: 93de0ef9com.microsoft.azure.storage._retry_policy_factory
      description: <p>the <xref href="com.microsoft.azure.storage._retry_policy_factory" data-throw-if-not-resolved="false"></xref> object to use when making service requests.</p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage._request_options.setTimeoutIntervalInMs(final Integer)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  nameWithType: RequestOptions.setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  fullName: final void com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  type: Method
  summary: >-
    <p>Sets the timeout to use when making this request. </p>

    <p>The server timeout interval begins at the time that the complete request has been received by the service, and the server begins processing the response. If the timeout interval elapses before the response is returned to the client, the operation times out. The timeout interval resets with each retry, if the request is retried. </p>

    <p>The default server timeout is set in the client and is by default null, indicating no server timeout. You can change the server timeout on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use that server timeout.</p>

    <p></p>
  syntax:
    content: public final void setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
    parameters:
    - id: timeoutIntervalInMs
      type: 3437983f
      description: <p>The timeout, in milliseconds, to use for this request. </p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage._request_options
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._request_options.yml
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.microsoft.azure.storage.RequestOptions
  type: Class
  summary: <p>Represents the options to use while processing a given request. </p>
  syntax:
    content: public class RequestOptions
- uid: com.microsoft.azure.storage.table._table_request_options._property_resolver
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._table_request_options._property_resolver.yml
  name: TableRequestOptions.PropertyResolver
  nameWithType: TableRequestOptions.PropertyResolver
  fullName: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver
  type: Interface
  summary: <p>The interface whose function is used to get the <xref href="com.microsoft.azure.storage.table._edm_type" data-throw-if-not-resolved="false"></xref> for an entity property given the partition key, row, key, and the property name, if the interface is implemented </p>
  syntax:
    content: public interface PropertyResolver
- uid: com.microsoft.azure.storage.table._edm_type
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._edm_type.yml
  name: EdmType
  nameWithType: EdmType
  fullName: com.microsoft.azure.storage.table.EdmType
  type: Enum
  summary: >-
    <p>A enumeration used to represent the primitive types of the Entity Data Model (EDM) in the Open Data Protocol (OData). The EDM is the underlying abstract data model used by OData services. The <xref href="com.microsoft.azure.storage.table._edm_type" data-throw-if-not-resolved="false"></xref> enumeration includes a <xref href="com.microsoft.azure.storage.table._edm_type.parse(final String)" data-throw-if-not-resolved="false"></xref> method to convert EDM data type names to the enumeration type, and overrides the <xref href="com.microsoft.azure.storage.table._edm_type.toString()" data-throw-if-not-resolved="false"></xref> method to produce an EDM data type name. </p>

    <p>For more information about OData, see the <ulink url="http://www.odata.org/">Open Data Protocol</ulink> website. </p>

    <p>For an overview of the available EDM primitive data types and names, see the <ulink url="http://www.odata.org/developers/protocols/overview#AbstractTypeSystem">Primitive Data Types</ulink> section of the <ulink url="http://www.odata.org/developers/protocols/overview">OData Protocol Overview</ulink>. </p>

    <p>The Abstract Type System used to define the primitive types supported by OData is defined in detail in <ulink url="http://msdn.microsoft.com/en-us/library/dd541474.aspx">MC-CSDL</ulink>. </p>
  syntax:
    content: public enum EdmType
- uid: com.microsoft.azure.storage.table._table_payload_format
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._table_payload_format.yml
  name: TablePayloadFormat
  nameWithType: TablePayloadFormat
  fullName: com.microsoft.azure.storage.table.TablePayloadFormat
  type: Enum
  summary: <p>Describes the payload formats supported for Tables. </p>
  syntax:
    content: public enum TablePayloadFormat
- uid: com.microsoft.azure.storage.table._table_entity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._table_entity.yml
  name: TableEntity
  nameWithType: TableEntity
  fullName: com.microsoft.azure.storage.table.TableEntity
  type: Interface
  summary: >-
    <p>An interface required for table entity types. The <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> interface declares getter and setter methods for the common entity properties, and  and  methods for serialization and deserialization of all entity properties using a property map. Create classes implementing <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity. </p>

    <p>The Storage client library includes two implementations of <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> that provide for simple property access and serialization: </p>

    <p>

      <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> implements <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> and provides a simple property map to store and retrieve properties. Use a <xref href="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false"></xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties. You can also use this type to perform bulk table updates of heterogeneous entities without losing property information. </p>

    <p>

      <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> is an implementation of <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> that uses reflection-based serialization and deserialization behavior in its  and  methods. <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref>-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically. </p>

    <p>Any class that implements <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> by invoking the static methods  in  and  in . The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically. When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data. The reflection code looks for getter and setter methods in pairs of the form </p>

    <p></p>

    <p>and </p>

    <p></p>

    <p>where <emphasis>PropertyName</emphasis> is a property name for the table entity, and <emphasis>type</emphasis> is a Java type compatible with the EDM data type of the property. See the table in the class description for <xref href="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false"></xref> for a map of property types to their Java equivalents. The <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention. Method names and the  attribute of <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotations are case sensitive for matching property names with reflection. Use the <xref href="com.microsoft.azure.storage.table._ignore" data-throw-if-not-resolved="false"></xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization. Note that the names "PartitionKey", "RowKey", "Timestamp", and "Etag" are reserved and will be ignored if set with the <xref href="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false"></xref> annotation in a subclass that uses the reflection methods. </p>

    <p></p>
  syntax:
    content: public interface TableEntity
- uid: com.microsoft.azure.storage.table._table_encryption_policy
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._table_encryption_policy.yml
  name: TableEncryptionPolicy
  nameWithType: TableEncryptionPolicy
  fullName: com.microsoft.azure.storage.table.TableEncryptionPolicy
  type: Class
  summary: <p>Represents a table encryption policy that is used to perform envelope encryption/decryption of Azure table entities. </p>
  syntax:
    content: public class TableEncryptionPolicy
- uid: com.microsoft.azure.storage.table._table_request_options._encryption_resolver
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._table_request_options._encryption_resolver.yml
  name: TableRequestOptions.EncryptionResolver
  nameWithType: TableRequestOptions.EncryptionResolver
  fullName: com.microsoft.azure.storage.table.TableRequestOptions.EncryptionResolver
  type: Interface
  summary: <p>The interface whose function is used to get the value indicating whether a property should be encrypted or not given the partition key, row key, and the property name. </p>
  syntax:
    content: public interface EncryptionResolver
- uid: com.microsoft.azure.storage.table._table_request_options
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._table_request_options.yml
  name: TableRequestOptions
  nameWithType: TableRequestOptions
  fullName: com.microsoft.azure.storage.table.TableRequestOptions
  type: Class
  summary: <p>Represents a set of timeout, payload format, and retry policy options that may be specified for a table operation request. </p>
  syntax: *o1
- uid: com.microsoft.azure.storage.table._table_request_options.setTablePayloadFormat(TablePayloadFormat)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  name: setTablePayloadFormat(TablePayloadFormat payloadFormat)
  nameWithType: TableRequestOptions.setTablePayloadFormat(TablePayloadFormat payloadFormat)
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setTablePayloadFormat(TablePayloadFormat payloadFormat)
  type: Method
  summary: >-
    <p>Sets the <xref href="com.microsoft.azure.storage.table._table_payload_format" data-throw-if-not-resolved="false"></xref> to be used. </p>

    <p>The default <xref href="com.microsoft.azure.storage.table._table_payload_format" data-throw-if-not-resolved="false"></xref> is set in the client and is by default <xref href="com.microsoft.azure.storage.table._table_payload_format.Json()" data-throw-if-not-resolved="false"></xref>. You can change the <xref href="com.microsoft.azure.storage.table._table_payload_format" data-throw-if-not-resolved="false"></xref> on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage.table._cloud_table_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use that <xref href="com.microsoft.azure.storage.table._table_payload_format" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.storage.table._table_request_options.setPropertyResolver(PropertyResolver)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  name: setPropertyResolver(PropertyResolver propertyResolver)
  nameWithType: TableRequestOptions.setPropertyResolver(PropertyResolver propertyResolver)
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setPropertyResolver(PropertyResolver propertyResolver)
  type: Method
  summary: >-
    <p>Sets the interface that contains a function which is used to get the <xref href="com.microsoft.azure.storage.table._edm_type" data-throw-if-not-resolved="false"></xref> for an entity property given the partition key, row, key, and the property name. </p>

    <p>The default <xref href="com.microsoft.azure.storage.table._table_request_options._property_resolver" data-throw-if-not-resolved="false"></xref> is set in the client and is by default null, indicating not to use a property resolver. You can change the <xref href="com.microsoft.azure.storage.table._table_request_options._property_resolver" data-throw-if-not-resolved="false"></xref> on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage.table._cloud_table_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use that <xref href="com.microsoft.azure.storage.table._table_request_options._property_resolver" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: *o3
- uid: com.microsoft.azure.storage.table._table_request_options.setDateBackwardCompatibility(Boolean)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  name: setDateBackwardCompatibility(Boolean dateBackwardCompatibility)
  nameWithType: TableRequestOptions.setDateBackwardCompatibility(Boolean dateBackwardCompatibility)
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setDateBackwardCompatibility(Boolean dateBackwardCompatibility)
  type: Method
  summary: >-
    <p>Sets whether the client should look to correct Date values stored on a <xref href="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false"></xref> that may have been written using versions of this library prior to 2.0.0. </p>

    <p>

      <ref refid="" kindref="compound">dateBackwardCompatibility</ref> is by default , indicating a post 2.0.0 version or mixed- platform usage. You can change the <ref refid="" kindref="compound">dateBackwardCompatibility</ref> on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage.table._cloud_table_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use that <ref refid="" kindref="compound">dateBackwardCompatibility</ref>. </p>

    <p>See <ulink url="http://go.microsoft.com/fwlink/?LinkId=523753">here</ulink> for more details.</p>

    <p></p>
  syntax: *o4
- uid: com.microsoft.azure.storage.table._table_request_options.setEncryptionPolicy(TableEncryptionPolicy)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  name: setEncryptionPolicy(TableEncryptionPolicy encryptionPolicy)
  nameWithType: TableRequestOptions.setEncryptionPolicy(TableEncryptionPolicy encryptionPolicy)
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setEncryptionPolicy(TableEncryptionPolicy encryptionPolicy)
  type: Method
  summary: >-
    <p>Sets the <xref href="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false"></xref> object to use for this request. </p>

    <p>The default <xref href="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false"></xref> is set in the client and is by default null, indicating no encryption. You can change the <xref href="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false"></xref> on this request by setting this property. You can also change the value on the <xref href="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false"></xref> object so that all subsequent requests made via the service client will use that <xref href="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: *o5
- uid: com.microsoft.azure.storage.table._table_request_options.setEncryptionResolver(EncryptionResolver)
  parent: com.microsoft.azure.storage.table._table_request_options
  href: com.microsoft.azure.storage.table._table_request_options.yml
  name: setEncryptionResolver(EncryptionResolver encryptionResolver)
  nameWithType: TableRequestOptions.setEncryptionResolver(EncryptionResolver encryptionResolver)
  fullName: void com.microsoft.azure.storage.table.TableRequestOptions.setEncryptionResolver(EncryptionResolver encryptionResolver)
  type: Method
  summary: >-
    <p>Sets the interface that contains a function which is used to get the value indicating whether a property should be encrypted or not given the partition key, row key, and the property name. A <xref href="com.microsoft.azure.storage.table._table_request_options._encryption_resolver" data-throw-if-not-resolved="false"></xref> is required if a <xref href="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false"></xref> is specified. </p>

    <p>You can change the <xref href="com.microsoft.azure.storage.table._table_request_options._encryption_resolver" data-throw-if-not-resolved="false"></xref> on this request by setting this property. You can also change the value on the <ref refid="" kindref="compound">TableServiceClient#getDefaultRequestOptions()</ref> object so that all subsequent requests made via the service client will use that <xref href="com.microsoft.azure.storage.table._table_request_options._encryption_resolver" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax: *o6
- uid: com.microsoft.azure.storage.table._table_payload_format.Json()
  parent: com.microsoft.azure.storage.table._table_payload_format
  href: com.microsoft.azure.storage.table._table_payload_format.yml
  name: Json
  nameWithType: TablePayloadFormat.Json
  fullName: com.microsoft.azure.storage.table.TablePayloadFormat.Json
  type: Field
  summary: <p>Use JSON with minimal metadata. </p>
  syntax:
    content: public Json
- uid: com.microsoft.azure.storage.table._cloud_table_client.getDefaultRequestOptions()
  parent: com.microsoft.azure.storage.table._cloud_table_client
  href: com.microsoft.azure.storage.table._cloud_table_client.yml
  name: getDefaultRequestOptions()
  nameWithType: CloudTableClient.getDefaultRequestOptions()
  fullName: TableRequestOptions com.microsoft.azure.storage.table.CloudTableClient.getDefaultRequestOptions()
  type: Method
  summary: >-
    <p>Gets the <xref href="com.microsoft.azure.storage.table._table_request_options" data-throw-if-not-resolved="false"></xref> that is used for requests associated with this </p>

    <p></p>
  syntax:
    content: public TableRequestOptions getDefaultRequestOptions()
    return:
      type: com.microsoft.azure.storage.table._table_request_options
      description: <p>The <xref href="com.microsoft.azure.storage.table._table_request_options" data-throw-if-not-resolved="false"></xref> object containing the values used by this <code><xref href="com.microsoft.azure.storage.table._cloud_table_client" data-throw-if-not-resolved="false"></xref></code></p>
- uid: com.microsoft.azure.storage._service_client.getDefaultRequestOptions()
  parent: com.microsoft.azure.storage._service_client
  href: com.microsoft.azure.storage._service_client.yml
  name: getDefaultRequestOptions()
  nameWithType: ServiceClient.getDefaultRequestOptions()
  fullName: abstract RequestOptions com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()
  type: Method
  summary: >-
    <p>Gets the <xref href="com.microsoft.azure.storage._request_options" data-throw-if-not-resolved="false"></xref> that is used for requests associated with this </p>

    <p></p>
  syntax:
    content: public abstract RequestOptions getDefaultRequestOptions()
    return:
      type: 13c86962com.microsoft.azure.storage._request_options
      description: <p>The <xref href="com.microsoft.azure.storage._request_options" data-throw-if-not-resolved="false"></xref> object containing the values used by this <code><xref href="com.microsoft.azure.storage._service_client" data-throw-if-not-resolved="false"></xref></code></p>
- uid: com.microsoft.azure.storage.table._cloud_table_client
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table._cloud_table_client.yml
  name: CloudTableClient
  nameWithType: CloudTableClient
  fullName: com.microsoft.azure.storage.table.CloudTableClient
  type: Class
  summary: >-
    <p>Provides a service client for accessing the Microsoft Azure Table service. </p>

    <p>The <xref href="com.microsoft.azure.storage.table._cloud_table_client" data-throw-if-not-resolved="false"></xref> class encapsulates the base URI for the Table service endpoint and the credentials for accessing the storage account, and provides methods to create, delete, list, and query tables, as well as methods to execute operations and queries on table entities. These methods invoke Storage Service REST API operations to make the requests and obtain the results that are returned. </p>

    <p>A Table service endpoint is the base URI for Table service resources, including the DNS name of the storage account: <br /><br />

     For more information, see the MSDN topic <ulink url="http://msdn.microsoft.com/en-us/library/azure/dd179360.aspx">Addressing Table Service Resources</ulink>. </p>

    <p>The credentials can be a combination of the storage account name and a key, or a shared access signature. For more information, see the MSDN topic <ulink url="http://msdn.microsoft.com/en-us/library/azure/hh225339.aspx">Authenticating Access to Your Storage Account</ulink>. </p>
  syntax:
    content: public class CloudTableClient extends ServiceClient
