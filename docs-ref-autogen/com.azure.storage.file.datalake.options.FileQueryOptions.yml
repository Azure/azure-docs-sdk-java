### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.options.FileQueryOptions"
fullName: "com.azure.storage.file.datalake.options.FileQueryOptions"
name: "FileQueryOptions"
nameWithType: "FileQueryOptions"
summary: "Optional parameters for File Query."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class FileQueryOptions"
constructors:
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.FileQueryOptions(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.FileQueryOptions(String expression)"
  name: "FileQueryOptions(String expression)"
  nameWithType: "FileQueryOptions.FileQueryOptions(String expression)"
  summary: "Constructs a <xref uid=\"com.azure.storage.file.datalake.options.FileQueryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileQueryOptions\"></xref>."
  parameters:
  - description: "The query expression."
    name: "expression"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryOptions(String expression)"
  desc: "Constructs a <xref uid=\"com.azure.storage.file.datalake.options.FileQueryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileQueryOptions\"></xref>."
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.FileQueryOptions(java.lang.String,java.io.OutputStream)"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.FileQueryOptions(String expression, OutputStream outputStream)"
  name: "FileQueryOptions(String expression, OutputStream outputStream)"
  nameWithType: "FileQueryOptions.FileQueryOptions(String expression, OutputStream outputStream)"
  summary: "Constructs a <xref uid=\"com.azure.storage.file.datalake.options.FileQueryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileQueryOptions\"></xref>."
  parameters:
  - description: "The query expression."
    name: "expression"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Gets the OutputStream where the downloaded data will be written."
    name: "outputStream"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryOptions(String expression, OutputStream outputStream)"
  desc: "Constructs a <xref uid=\"com.azure.storage.file.datalake.options.FileQueryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileQueryOptions\"></xref>."
methods:
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.getErrorConsumer()"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.getErrorConsumer()"
  name: "getErrorConsumer()"
  nameWithType: "FileQueryOptions.getErrorConsumer()"
  summary: "Gets the error consumer."
  syntax: "public Consumer<FileQueryError> getErrorConsumer()"
  desc: "Gets the error consumer."
  returns:
    description: "the error consumer."
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.FileQueryError?alt=com.azure.storage.file.datalake.models.FileQueryError&text=FileQueryError\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.getExpression()"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.getExpression()"
  name: "getExpression()"
  nameWithType: "FileQueryOptions.getExpression()"
  summary: "Gets the query expression."
  syntax: "public String getExpression()"
  desc: "Gets the query expression."
  returns:
    description: "the query expression."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.getInputSerialization()"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.getInputSerialization()"
  name: "getInputSerialization()"
  nameWithType: "FileQueryOptions.getInputSerialization()"
  summary: "Gets the input serialization."
  syntax: "public FileQuerySerialization getInputSerialization()"
  desc: "Gets the input serialization."
  returns:
    description: "the input serialization."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQuerySerialization?alt=com.azure.storage.file.datalake.models.FileQuerySerialization&text=FileQuerySerialization\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.getOutputSerialization()"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.getOutputSerialization()"
  name: "getOutputSerialization()"
  nameWithType: "FileQueryOptions.getOutputSerialization()"
  summary: "Gets the output serialization."
  syntax: "public FileQuerySerialization getOutputSerialization()"
  desc: "Gets the output serialization."
  returns:
    description: "the output serialization."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQuerySerialization?alt=com.azure.storage.file.datalake.models.FileQuerySerialization&text=FileQuerySerialization\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.getOutputStream()"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.getOutputStream()"
  name: "getOutputStream()"
  nameWithType: "FileQueryOptions.getOutputStream()"
  summary: "Gets the output<wbr>Stream where the downloaded data will be written."
  syntax: "public OutputStream getOutputStream()"
  desc: "Gets the outputStream where the downloaded data will be written."
  returns:
    description: "the outputStream."
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.getProgressConsumer()"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.getProgressConsumer()"
  name: "getProgressConsumer()"
  nameWithType: "FileQueryOptions.getProgressConsumer()"
  summary: "Gets the progress consumer."
  syntax: "public Consumer<FileQueryProgress> getProgressConsumer()"
  desc: "Gets the progress consumer."
  returns:
    description: "the progress consumer."
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.FileQueryProgress?alt=com.azure.storage.file.datalake.models.FileQueryProgress&text=FileQueryProgress\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.getRequestConditions()"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.getRequestConditions()"
  name: "getRequestConditions()"
  nameWithType: "FileQueryOptions.getRequestConditions()"
  summary: "Gets the request conditions."
  syntax: "public DataLakeRequestConditions getRequestConditions()"
  desc: "Gets the request conditions."
  returns:
    description: "the request conditions."
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeRequestConditions?alt=com.azure.storage.file.datalake.models.DataLakeRequestConditions&text=DataLakeRequestConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.setErrorConsumer(java.util.function.Consumer<com.azure.storage.file.datalake.models.FileQueryError>)"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.setErrorConsumer(Consumer<FileQueryError> errorConsumer)"
  name: "setErrorConsumer(Consumer<FileQueryError> errorConsumer)"
  nameWithType: "FileQueryOptions.setErrorConsumer(Consumer<FileQueryError> errorConsumer)"
  summary: "Sets the error consumer."
  parameters:
  - description: "The error consumer."
    name: "errorConsumer"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.FileQueryError?alt=com.azure.storage.file.datalake.models.FileQueryError&text=FileQueryError\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FileQueryOptions setErrorConsumer(Consumer<FileQueryError> errorConsumer)"
  desc: "Sets the error consumer."
  returns:
    description: "the updated FileQueryOptions object."
    type: "<xref href=\"com.azure.storage.file.datalake.options.FileQueryOptions?alt=com.azure.storage.file.datalake.options.FileQueryOptions&text=FileQueryOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.setInputSerialization(com.azure.storage.file.datalake.models.FileQuerySerialization)"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.setInputSerialization(FileQuerySerialization inputSerialization)"
  name: "setInputSerialization(FileQuerySerialization inputSerialization)"
  nameWithType: "FileQueryOptions.setInputSerialization(FileQuerySerialization inputSerialization)"
  summary: "Sets the input serialization."
  parameters:
  - description: "The input serialization."
    name: "inputSerialization"
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQuerySerialization?alt=com.azure.storage.file.datalake.models.FileQuerySerialization&text=FileQuerySerialization\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryOptions setInputSerialization(FileQuerySerialization inputSerialization)"
  desc: "Sets the input serialization."
  returns:
    description: "the updated FileQueryOptions object."
    type: "<xref href=\"com.azure.storage.file.datalake.options.FileQueryOptions?alt=com.azure.storage.file.datalake.options.FileQueryOptions&text=FileQueryOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.setOutputSerialization(com.azure.storage.file.datalake.models.FileQuerySerialization)"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.setOutputSerialization(FileQuerySerialization outputSerialization)"
  name: "setOutputSerialization(FileQuerySerialization outputSerialization)"
  nameWithType: "FileQueryOptions.setOutputSerialization(FileQuerySerialization outputSerialization)"
  summary: "Sets the output serialization."
  parameters:
  - description: "The output serialization."
    name: "outputSerialization"
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQuerySerialization?alt=com.azure.storage.file.datalake.models.FileQuerySerialization&text=FileQuerySerialization\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryOptions setOutputSerialization(FileQuerySerialization outputSerialization)"
  desc: "Sets the output serialization."
  returns:
    description: "the updated FileQueryOptions object."
    type: "<xref href=\"com.azure.storage.file.datalake.options.FileQueryOptions?alt=com.azure.storage.file.datalake.options.FileQueryOptions&text=FileQueryOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.setProgressConsumer(java.util.function.Consumer<com.azure.storage.file.datalake.models.FileQueryProgress>)"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.setProgressConsumer(Consumer<FileQueryProgress> progressConsumer)"
  name: "setProgressConsumer(Consumer<FileQueryProgress> progressConsumer)"
  nameWithType: "FileQueryOptions.setProgressConsumer(Consumer<FileQueryProgress> progressConsumer)"
  summary: "Sets the progress consumer."
  parameters:
  - description: "The progress consumer."
    name: "progressConsumer"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.FileQueryProgress?alt=com.azure.storage.file.datalake.models.FileQueryProgress&text=FileQueryProgress\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FileQueryOptions setProgressConsumer(Consumer<FileQueryProgress> progressConsumer)"
  desc: "Sets the progress consumer."
  returns:
    description: "the updated FileQueryOptions object."
    type: "<xref href=\"com.azure.storage.file.datalake.options.FileQueryOptions?alt=com.azure.storage.file.datalake.options.FileQueryOptions&text=FileQueryOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.options.FileQueryOptions.setRequestConditions(com.azure.storage.file.datalake.models.DataLakeRequestConditions)"
  fullName: "com.azure.storage.file.datalake.options.FileQueryOptions.setRequestConditions(DataLakeRequestConditions requestConditions)"
  name: "setRequestConditions(DataLakeRequestConditions requestConditions)"
  nameWithType: "FileQueryOptions.setRequestConditions(DataLakeRequestConditions requestConditions)"
  summary: "Sets the request conditions."
  parameters:
  - description: "The request conditions."
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.file.datalake.models.DataLakeRequestConditions?alt=com.azure.storage.file.datalake.models.DataLakeRequestConditions&text=DataLakeRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryOptions setRequestConditions(DataLakeRequestConditions requestConditions)"
  desc: "Sets the request conditions."
  returns:
    description: "the updated FileQueryOptions object."
    type: "<xref href=\"com.azure.storage.file.datalake.options.FileQueryOptions?alt=com.azure.storage.file.datalake.options.FileQueryOptions&text=FileQueryOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Optional parameters for File Query."
metadata: {}
package: "com.azure.storage.file.datalake.options"
artifact: com.azure:azure-storage-file-datalake:12.12.0
