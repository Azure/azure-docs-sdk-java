### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask"
fullName: "com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask"
name: "FileUploadTask"
nameWithType: "FileUploadTask"
summary: "Provide means to asynchronous upload file in the Azure Storage using the Io<wbr>THub."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FileUploadTask implements Runnable"
constructors:
- uid: "com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask.FileUploadTask(com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager)"
  fullName: "com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask.FileUploadTask(HttpsTransportManager httpsTransportManager)"
  name: "FileUploadTask(HttpsTransportManager httpsTransportManager)"
  nameWithType: "FileUploadTask.FileUploadTask(HttpsTransportManager httpsTransportManager)"
  parameters:
  - name: "httpsTransportManager"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager&text=HttpsTransportManager\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileUploadTask(HttpsTransportManager httpsTransportManager)"
methods:
- uid: "com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask.close()"
  fullName: "com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask.close()"
  name: "close()"
  nameWithType: "FileUploadTask.close()"
  syntax: "public void close()"
- uid: "com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask.getFileUploadSasUri(com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriRequest)"
  fullName: "com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask.getFileUploadSasUri(FileUploadSasUriRequest request)"
  name: "getFileUploadSasUri(FileUploadSasUriRequest request)"
  nameWithType: "FileUploadTask.getFileUploadSasUri(FileUploadSasUriRequest request)"
  parameters:
  - name: "request"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriRequest?alt=com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriRequest&text=FileUploadSasUriRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileUploadSasUriResponse getFileUploadSasUri(FileUploadSasUriRequest request)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriResponse?alt=com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriResponse&text=FileUploadSasUriResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask.run()"
  fullName: "com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask.run()"
  name: "run()"
  nameWithType: "FileUploadTask.run()"
  syntax: "public void run()"
- uid: "com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask.sendNotification(com.microsoft.azure.sdk.iot.deps.serializer.FileUploadCompletionNotification)"
  fullName: "com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask.sendNotification(FileUploadCompletionNotification fileUploadStatusParser)"
  name: "sendNotification(FileUploadCompletionNotification fileUploadStatusParser)"
  nameWithType: "FileUploadTask.sendNotification(FileUploadCompletionNotification fileUploadStatusParser)"
  parameters:
  - name: "fileUploadStatusParser"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.serializer.FileUploadCompletionNotification?alt=com.microsoft.azure.sdk.iot.deps.serializer.FileUploadCompletionNotification&text=FileUploadCompletionNotification\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubStatusCode sendNotification(FileUploadCompletionNotification fileUploadStatusParser)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubStatusCode?alt=com.microsoft.azure.sdk.iot.device.IotHubStatusCode&text=IotHubStatusCode\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Provide means to asynchronous upload file in the Azure Storage using the IoTHub.\n\nThe file upload process is composed by 3 steps represented in the follow diagram. +--------------+ +---------------+ +---------------+ +---------------+ | Device | | Iot Hub | | Storage | | Service | +--------------+ +---------------+ +---------------+ +---------------+ | | | | | | | | REQUEST\\_BLOB | | | +--- request blob --->| | | |<-- blob SAS token --+ | | | | | | UPLOAD\\_FILE | | | +---- upload file to the provided blob --->| | +<------ end of upload with \\`status\\` ------+ | | | | | NOTIFY\\_IOTHUB | | | +--- notify status -->| | | | +------ notify new file available ------->| | | | |"
implements:
- "<xref href=\"java.lang.Runnable?alt=java.lang.Runnable&text=Runnable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.fileupload"
artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.30.1
