### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend
  id: WithFrontend
  parent: com.microsoft.azure.management.network.model
  children:
  - com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingPublicIPAddress(PublicIPAddress)
  - com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingPublicIPAddress(String)
  - com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingSubnet(Network,String)
  - com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingSubnet(String,String)
  - com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingSubnet(Subnet)
  - com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromFrontend(String)
  - com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromNewPublicIPAddress()
  - com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromNewPublicIPAddress(Creatable<PublicIPAddress>)
  - com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromNewPublicIPAddress(String)
  href: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.yml
  langs:
  - java
  name: HasFrontend.DefinitionStages.WithFrontend<ReturnT>
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
      branch: v1.3.0
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 34
  package: com.microsoft.azure.management.network.model
  summary: "<p>The stage of a definition allowing to specify a load balancer frontend. </p>"
  syntax:
    content: public interface WithFrontend<ReturnT>
    typeParameters:
    - id: ReturnT
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingPublicIPAddress(PublicIPAddress)
  id: fromExistingPublicIPAddress(PublicIPAddress)
  parent: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromExistingPublicIPAddress(PublicIPAddress publicIPAddress)
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(PublicIPAddress publicIPAddress)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(PublicIPAddress publicIPAddress)
  overload: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingPublicIPAddress*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 85
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies an existing public IP address to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this public IP address, that is the frontend that will be used. Else, an automatically named new public frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingPublicIPAddress(PublicIPAddress publicIPAddress)
    parameters:
    - id: publicIPAddress
      type: com.microsoft.azure.management.network.PublicIPAddress
      description: <p>an existing public IP address </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingPublicIPAddress(String)
  id: fromExistingPublicIPAddress(String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromExistingPublicIPAddress(String resourceId)
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(String resourceId)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(String resourceId)
  overload: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingPublicIPAddress*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 96
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies an existing public IP address to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this public IP address, that is the frontend that will be used. Else, an automatically named new public frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingPublicIPAddress(String resourceId)
    parameters:
    - id: resourceId
      type: "26831127"
      description: <p>the resource ID of an existing public IP address </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingSubnet(Network,String)
  id: fromExistingSubnet(Network,String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromExistingSubnet(Network network, String subnetName)
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Network network, String subnetName)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Network network, String subnetName)
  overload: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingSubnet*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 108
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies an existing private subnet to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingSubnet(Network network, String subnetName)
    parameters:
    - id: network
      type: com.microsoft.azure.management.network.Network
      description: <p>an existing network </p>
    - id: subnetName
      type: "26831127"
      description: <p>the name of an existing subnet within the specified network </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingSubnet(String,String)
  id: fromExistingSubnet(String,String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromExistingSubnet(String networkResourceId, String subnetName)
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(String networkResourceId, String subnetName)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(String networkResourceId, String subnetName)
  overload: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingSubnet*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 119
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies an existing private subnet to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingSubnet(String networkResourceId, String subnetName)
    parameters:
    - id: networkResourceId
      type: "26831127"
      description: <p>the resource ID of an existing network </p>
    - id: subnetName
      type: "26831127"
      description: <p>the name of an existing subnet within the specified network </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingSubnet(Subnet)
  id: fromExistingSubnet(Subnet)
  parent: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromExistingSubnet(Subnet subnet)
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Subnet subnet)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Subnet subnet)
  overload: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingSubnet*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 130
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies an existing private subnet to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingSubnet(Subnet subnet)
    parameters:
    - id: subnet
      type: com.microsoft.azure.management.network.Subnet
      description: <p>an existing subnet </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromFrontend(String)
  id: fromFrontend(String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromFrontend(String frontendName)
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromFrontend(String frontendName)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromFrontend(String frontendName)
  overload: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromFrontend*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 41
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies the frontend to receive network traffic from. </p>"
  syntax:
    content: public ReturnT fromFrontend(String frontendName)
    parameters:
    - id: frontendName
      type: "26831127"
      description: <p>an existing frontend name on this load balancer </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromNewPublicIPAddress()
  id: fromNewPublicIPAddress()
  parent: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromNewPublicIPAddress()
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromNewPublicIPAddress()
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromNewPublicIPAddress()
  overload: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromNewPublicIPAddress*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 74
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies that network traffic should be received on a new public IP address that is to be automatically created woth default settings along with the load balancer. </p>\r\n<p>A new automatically-named public frontend will be implicitly created on this load balancer for each such new public IP address. </p>"
  syntax:
    content: public ReturnT fromNewPublicIPAddress()
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromNewPublicIPAddress(Creatable<PublicIPAddress>)
  id: fromNewPublicIPAddress(Creatable<PublicIPAddress>)
  parent: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromNewPublicIPAddress(Creatable<PublicIPAddress> pipDefinition)
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromNewPublicIPAddress(Creatable<PublicIPAddress> pipDefinition)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromNewPublicIPAddress(Creatable<PublicIPAddress> pipDefinition)
  overload: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromNewPublicIPAddress*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 64
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies that network traffic should be received on a new public IP address that is to be created along with the load balancer based on the provided definition. </p>\r\n<p>A new automatically-named public frontend will be implicitly created on this load balancer for each such new public IP address. </p>"
  syntax:
    content: public ReturnT fromNewPublicIPAddress(Creatable<PublicIPAddress> pipDefinition)
    parameters:
    - id: pipDefinition
      type: com.microsoft.azure.management.resources.fluentcore.model.Creatable78504a52com.microsoft.azure.management.network.PublicIPAddressa08ddfce
      description: <p>a definition for the new public IP </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromNewPublicIPAddress(String)
  id: fromNewPublicIPAddress(String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.yml
  langs:
  - java
  name: fromNewPublicIPAddress(String leafDnsLabel)
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromNewPublicIPAddress(String leafDnsLabel)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromNewPublicIPAddress(String leafDnsLabel)
  overload: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromNewPublicIPAddress*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/model/HasFrontend.java
    startLine: 53
  package: com.microsoft.azure.management.network.model
  summary: "<p>Specifies that network traffic should be received on a new public IP address that is to be created along with the load balancer in the same region and resource group but under the provided leaf DNS label, assuming it is available. </p>\r\n<p>A new automatically-named public frontend will be implicitly created on this load balancer for each such new public IP address, so make sure to use a unique DNS label. </p>"
  syntax:
    content: public ReturnT fromNewPublicIPAddress(String leafDnsLabel)
    parameters:
    - id: leafDnsLabel
      type: "26831127"
      description: <p>a unique leaf DNS label to create the public IP address under </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
references:
- uid: c1a5ebc4
  spec.java:
  - name: ReturnT
    fullName: ReturnT
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromFrontend*
  name: fromFrontend
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromFrontend
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromFrontend
  package: com.microsoft.azure.management.network.model
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromNewPublicIPAddress*
  name: fromNewPublicIPAddress
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromNewPublicIPAddress
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromNewPublicIPAddress
  package: com.microsoft.azure.management.network.model
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable78504a52com.microsoft.azure.management.network.PublicIPAddressa08ddfce
  spec.java:
  - uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable
    name: Creatable
    fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable
    href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.network.PublicIPAddress
    name: PublicIPAddress
    fullName: com.microsoft.azure.management.network.PublicIPAddress
    href: com.microsoft.azure.management.network.PublicIPAddress.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingPublicIPAddress*
  name: fromExistingPublicIPAddress
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress
  package: com.microsoft.azure.management.network.model
- uid: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend.fromExistingSubnet*
  name: fromExistingSubnet
  nameWithType: HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet
  fullName: com.microsoft.azure.management.network.model.HasFrontend.DefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet
  package: com.microsoft.azure.management.network.model
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  parent: com.microsoft.azure.management.resources.fluentcore.model
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: Creatable<T>
  nameWithType: Creatable<T>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>
  type: Interface
  summary: "<p>The final stage of the resource definition, at which it can be created using create().</p>\r\n<p></p>"
  syntax:
    content: public interface Creatable<T> extends Indexable,HasName
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>the fluent type of the resource to be created </p>
- uid: com.microsoft.azure.management.network.PublicIPAddress
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.PublicIPAddress.yml
  name: PublicIPAddress
  nameWithType: PublicIPAddress
  fullName: com.microsoft.azure.management.network.PublicIPAddress
  type: Interface
  summary: "<p>Public IP address. </p>"
  syntax:
    content: public interface PublicIPAddress extends GroupableResource<NetworkManager, PublicIPAddressInner>,Refreshable<PublicIPAddress>,Updatable<PublicIPAddress.Update>
- uid: com.microsoft.azure.management.network.Network
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.Network.yml
  name: Network
  nameWithType: Network
  fullName: com.microsoft.azure.management.network.Network
  type: Interface
  summary: "<p>Entry point for Virtual Network management API in Azure. </p>"
  syntax:
    content: public interface Network extends GroupableResource<NetworkManager, VirtualNetworkInner>,Refreshable<Network>,Updatable<Network.Update>
- uid: com.microsoft.azure.management.network.Subnet
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.Subnet.yml
  name: Subnet
  nameWithType: Subnet
  fullName: com.microsoft.azure.management.network.Subnet
  type: Interface
  summary: "<p>A client-side representation of a subnet of a virtual network. </p>"
  syntax:
    content: public interface Subnet extends HasInner<SubnetInner>,ChildResource<Network>
