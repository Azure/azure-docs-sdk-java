### YamlMime:JavaMember
nameWithType: AuthenticationContext.AuthenticationContext
type: constructor
members:
- fullName: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, @Nullable final ITokenCacheStore tokenCacheStore)
  name: AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, @Nullable final ITokenCacheStore tokenCacheStore)
  nameWithType: AuthenticationContext.AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, @Nullable final ITokenCacheStore tokenCacheStore)
  parameters:
  - description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>

      </p>
    name: appContext
    type: <xref href="%40NonNull+final+Context?alt=%40NonNull+final+Context&text=%40NonNull+final+Context" data-throw-if-not-resolved="False"/>
  - description: <p>Authority Url </p>
    name: authority
    type: <xref href="%40NonNull+final+String?alt=%40NonNull+final+String&text=%40NonNull+final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Cache <xref uid="com.microsoft.aad.adal.ITokenCacheStore" data-throw-if-not-resolved="false" data-raw-source="ITokenCacheStore"></xref> used to store tokens. Set to null if you don't want cache. </p>
    name: tokenCacheStore
    type: '@Nullable final <xref href="com.microsoft.aad.adal.ITokenCacheStore?alt=com.microsoft.aad.adal.ITokenCacheStore&text=ITokenCacheStore" data-throw-if-not-resolved="False"/>'
  summary: >-
    <p>It will verify the authority and use the given cache. If cache is null, it will not use cache.</p>

    <p></p>
  syntax: public AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, @Nullable final ITokenCacheStore tokenCacheStore)
  uid: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context,@NonNull final String,@Nullable final ITokenCacheStore)
- fullName: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority)
  name: AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority)
  nameWithType: AuthenticationContext.AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority)
  parameters:
  - description: <p>It needs to have handle to the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref> to use the SharedPreferencesFileManager as a Default cache storage. It does not need to be activity. </p>
    name: appContext
    type: <xref href="%40NonNull+final+Context?alt=%40NonNull+final+Context&text=%40NonNull+final+Context" data-throw-if-not-resolved="False"/>
  - description: <p>Authority url to send code and token requests </p>
    name: authority
    type: <xref href="%40NonNull+final+String?alt=%40NonNull+final+String&text=%40NonNull+final+String" data-throw-if-not-resolved="False"/>
  - description: <p>validate authority before sending token request </p>
    name: validateAuthority
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs context to use with known authority to get the token. It uses default cache that stores encrypted tokens.</p>

    <p></p>
  syntax: public AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority)
  uid: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context,@NonNull final String,final boolean)
- fullName: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority, @Nullable final ITokenCacheStore tokenCacheStore)
  name: AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority, @Nullable final ITokenCacheStore tokenCacheStore)
  nameWithType: AuthenticationContext.AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority, @Nullable final ITokenCacheStore tokenCacheStore)
  parameters:
  - description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>

      </p>
    name: appContext
    type: <xref href="%40NonNull+final+Context?alt=%40NonNull+final+Context&text=%40NonNull+final+Context" data-throw-if-not-resolved="False"/>
  - description: <p>Authority Url </p>
    name: authority
    type: <xref href="%40NonNull+final+String?alt=%40NonNull+final+String&text=%40NonNull+final+String" data-throw-if-not-resolved="False"/>
  - description: <p>true/false for validation </p>
    name: validateAuthority
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  - description: <p>Set to null if you don't want cache. </p>
    name: tokenCacheStore
    type: '@Nullable final <xref href="com.microsoft.aad.adal.ITokenCacheStore?alt=com.microsoft.aad.adal.ITokenCacheStore&text=ITokenCacheStore" data-throw-if-not-resolved="False"/>'
  summary: >-
    <p>Constructs context to use with known authority to get the token. It uses provided cache.</p>

    <p></p>
  syntax: public AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority, @Nullable final ITokenCacheStore tokenCacheStore)
  uid: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context,@NonNull final String,final boolean,@Nullable final ITokenCacheStore)
uid: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext*
fullName: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext
name: AuthenticationContext
package: com.microsoft.aad.adal
metadata: {}
