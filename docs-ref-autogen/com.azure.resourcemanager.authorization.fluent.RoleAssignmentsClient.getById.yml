### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById*"
fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById"
name: "getById"
nameWithType: "RoleAssignmentsClient.getById"
members:
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.getById(String roleAssignmentId)"
  name: "getById(String roleAssignmentId)"
  nameWithType: "RoleAssignmentsClient.getById(String roleAssignmentId)"
  summary: "Get a role assignment by ID."
  parameters:
  - description: "The fully qualified ID of the role assignment including scope, resource name, and\n     resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\n     Example:\n     /subscriptions/&lt;SUB_ID&gt;/resourcegroups/&lt;RESOURCE_GROUP&gt;/providers/Microsoft.Authorization/roleAssignments/&lt;ROLE_ASSIGNMENT_NAME&gt;."
    name: "roleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RoleAssignmentInner getById(String roleAssignmentId)"
  returns:
    description: "a role assignment by ID."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.13.0
