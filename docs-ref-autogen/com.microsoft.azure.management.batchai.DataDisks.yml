### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batchai.DataDisks.cachingType()
  name: cachingType()
  nameWithType: DataDisks.cachingType()
  returns:
    description: <p>the cachingType value </p>
    type: <xref href="com.microsoft.azure.management.batchai.CachingType?alt=com.microsoft.azure.management.batchai.CachingType&text=CachingType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get caching type for the disks. Available values are none (default), readonly, readwrite. Caching type can be set only for VM sizes supporting premium storage. Possible values include: 'none', 'readonly', 'readwrite'.</p>

    <p></p>
  syntax: public CachingType cachingType()
  uid: com.microsoft.azure.management.batchai.DataDisks.cachingType()
- fullName: com.microsoft.azure.management.batchai.DataDisks.diskCount()
  name: diskCount()
  nameWithType: DataDisks.diskCount()
  returns:
    description: <p>the diskCount value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get number of data disks attached to the File Server. If multiple disks attached, they will be configured in RAID level 0.</p>

    <p></p>
  syntax: public int diskCount()
  uid: com.microsoft.azure.management.batchai.DataDisks.diskCount()
- fullName: com.microsoft.azure.management.batchai.DataDisks.diskSizeInGB()
  name: diskSizeInGB()
  nameWithType: DataDisks.diskSizeInGB()
  returns:
    description: <p>the diskSizeInGB value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get disk size in GB for the blank data disks.</p>

    <p></p>
  syntax: public int diskSizeInGB()
  uid: com.microsoft.azure.management.batchai.DataDisks.diskSizeInGB()
- fullName: com.microsoft.azure.management.batchai.DataDisks.storageAccountType()
  name: storageAccountType()
  nameWithType: DataDisks.storageAccountType()
  returns:
    description: <p>the storageAccountType value </p>
    type: <xref href="com.microsoft.azure.management.batchai.StorageAccountType?alt=com.microsoft.azure.management.batchai.StorageAccountType&text=StorageAccountType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get type of storage account to be used on the disk. Possible values are: Standard_LRS or Premium_LRS. Premium storage account type can only be used with VM sizes supporting premium storage. Possible values include: 'Standard_LRS', 'Premium_LRS'.</p>

    <p></p>
  syntax: public StorageAccountType storageAccountType()
  uid: com.microsoft.azure.management.batchai.DataDisks.storageAccountType()
- fullName: com.microsoft.azure.management.batchai.DataDisks.withCachingType(CachingType cachingType)
  name: withCachingType(CachingType cachingType)
  nameWithType: DataDisks.withCachingType(CachingType cachingType)
  parameters:
  - description: <p>the cachingType value to set </p>
    name: cachingType
    type: <xref href="com.microsoft.azure.management.batchai.CachingType?alt=com.microsoft.azure.management.batchai.CachingType&text=CachingType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataDisks object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.DataDisks?alt=com.microsoft.azure.management.batchai.DataDisks&text=DataDisks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set caching type for the disks. Available values are none (default), readonly, readwrite. Caching type can be set only for VM sizes supporting premium storage. Possible values include: 'none', 'readonly', 'readwrite'.</p>

    <p></p>
  syntax: public DataDisks withCachingType(CachingType cachingType)
  uid: com.microsoft.azure.management.batchai.DataDisks.withCachingType(CachingType)
- fullName: com.microsoft.azure.management.batchai.DataDisks.withDiskCount(int diskCount)
  name: withDiskCount(int diskCount)
  nameWithType: DataDisks.withDiskCount(int diskCount)
  parameters:
  - description: <p>the diskCount value to set </p>
    name: diskCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataDisks object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.DataDisks?alt=com.microsoft.azure.management.batchai.DataDisks&text=DataDisks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set number of data disks attached to the File Server. If multiple disks attached, they will be configured in RAID level 0.</p>

    <p></p>
  syntax: public DataDisks withDiskCount(int diskCount)
  uid: com.microsoft.azure.management.batchai.DataDisks.withDiskCount(int)
- fullName: com.microsoft.azure.management.batchai.DataDisks.withDiskSizeInGB(int diskSizeInGB)
  name: withDiskSizeInGB(int diskSizeInGB)
  nameWithType: DataDisks.withDiskSizeInGB(int diskSizeInGB)
  parameters:
  - description: <p>the diskSizeInGB value to set </p>
    name: diskSizeInGB
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataDisks object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.DataDisks?alt=com.microsoft.azure.management.batchai.DataDisks&text=DataDisks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set disk size in GB for the blank data disks.</p>

    <p></p>
  syntax: public DataDisks withDiskSizeInGB(int diskSizeInGB)
  uid: com.microsoft.azure.management.batchai.DataDisks.withDiskSizeInGB(int)
- fullName: com.microsoft.azure.management.batchai.DataDisks.withStorageAccountType(StorageAccountType storageAccountType)
  name: withStorageAccountType(StorageAccountType storageAccountType)
  nameWithType: DataDisks.withStorageAccountType(StorageAccountType storageAccountType)
  parameters:
  - description: <p>the storageAccountType value to set </p>
    name: storageAccountType
    type: <xref href="com.microsoft.azure.management.batchai.StorageAccountType?alt=com.microsoft.azure.management.batchai.StorageAccountType&text=StorageAccountType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataDisks object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.DataDisks?alt=com.microsoft.azure.management.batchai.DataDisks&text=DataDisks" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set type of storage account to be used on the disk. Possible values are: Standard_LRS or Premium_LRS. Premium storage account type can only be used with VM sizes supporting premium storage. Possible values include: 'Standard_LRS', 'Premium_LRS'.</p>

    <p></p>
  syntax: public DataDisks withStorageAccountType(StorageAccountType storageAccountType)
  uid: com.microsoft.azure.management.batchai.DataDisks.withStorageAccountType(StorageAccountType)
nameWithType: DataDisks
syntax: public class DataDisks
type: class
uid: com.microsoft.azure.management.batchai.DataDisks
fullName: com.microsoft.azure.management.batchai.DataDisks
name: DataDisks
package: com.microsoft.azure.management.batchai
summary: <p>Data disks settings. </p>
metadata: {}
