### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.batchai.DataDisks
  id: DataDisks
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai
  children:
  - com.microsoft.azure.management.batchai.DataDisks.DataDisks()
  - com.microsoft.azure.management.batchai.DataDisks.cachingType()
  - com.microsoft.azure.management.batchai.DataDisks.diskCount()
  - com.microsoft.azure.management.batchai.DataDisks.diskSizeInGB()
  - com.microsoft.azure.management.batchai.DataDisks.storageAccountType()
  - com.microsoft.azure.management.batchai.DataDisks.withCachingType(com.microsoft.azure.management.batchai.CachingType)
  - com.microsoft.azure.management.batchai.DataDisks.withDiskCount(int)
  - com.microsoft.azure.management.batchai.DataDisks.withDiskSizeInGB(int)
  - com.microsoft.azure.management.batchai.DataDisks.withStorageAccountType(com.microsoft.azure.management.batchai.StorageAccountType)
  langs:
  - java
  name: DataDisks
  nameWithType: DataDisks
  fullName: com.microsoft.azure.management.batchai.DataDisks
  type: Class
  package: com.microsoft.azure.management.batchai
  summary: Data disks settings.
  syntax:
    content: public class DataDisks
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.batchai.DataDisks.DataDisks()
  id: DataDisks()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.DataDisks
  langs:
  - java
  name: DataDisks()
  nameWithType: DataDisks.DataDisks()
  fullName: com.microsoft.azure.management.batchai.DataDisks.DataDisks()
  overload: com.microsoft.azure.management.batchai.DataDisks.DataDisks*
  type: Constructor
  package: com.microsoft.azure.management.batchai
  syntax:
    content: public DataDisks()
- uid: com.microsoft.azure.management.batchai.DataDisks.cachingType()
  id: cachingType()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.DataDisks
  langs:
  - java
  name: cachingType()
  nameWithType: DataDisks.cachingType()
  fullName: com.microsoft.azure.management.batchai.DataDisks.cachingType()
  overload: com.microsoft.azure.management.batchai.DataDisks.cachingType*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: "Get caching type for the disks. Available values are none (default), readonly, readwrite. Caching type can be set only for VM sizes supporting premium storage. Possible values include: 'none', 'readonly', 'readwrite'."
  syntax:
    content: public CachingType cachingType()
    return:
      type: com.microsoft.azure.management.batchai.CachingType
      description: the cachingType value
- uid: com.microsoft.azure.management.batchai.DataDisks.diskCount()
  id: diskCount()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.DataDisks
  langs:
  - java
  name: diskCount()
  nameWithType: DataDisks.diskCount()
  fullName: com.microsoft.azure.management.batchai.DataDisks.diskCount()
  overload: com.microsoft.azure.management.batchai.DataDisks.diskCount*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Get number of data disks attached to the File Server. If multiple disks attached, they will be configured in RAID level 0.
  syntax:
    content: public int diskCount()
    return:
      type: int
      description: the diskCount value
- uid: com.microsoft.azure.management.batchai.DataDisks.diskSizeInGB()
  id: diskSizeInGB()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.DataDisks
  langs:
  - java
  name: diskSizeInGB()
  nameWithType: DataDisks.diskSizeInGB()
  fullName: com.microsoft.azure.management.batchai.DataDisks.diskSizeInGB()
  overload: com.microsoft.azure.management.batchai.DataDisks.diskSizeInGB*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Get disk size in GB for the blank data disks.
  syntax:
    content: public int diskSizeInGB()
    return:
      type: int
      description: the diskSizeInGB value
- uid: com.microsoft.azure.management.batchai.DataDisks.storageAccountType()
  id: storageAccountType()
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.DataDisks
  langs:
  - java
  name: storageAccountType()
  nameWithType: DataDisks.storageAccountType()
  fullName: com.microsoft.azure.management.batchai.DataDisks.storageAccountType()
  overload: com.microsoft.azure.management.batchai.DataDisks.storageAccountType*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: "Get type of storage account to be used on the disk. Possible values are: Standard\\_LRS or Premium\\_LRS. Premium storage account type can only be used with VM sizes supporting premium storage. Possible values include: 'Standard\\_LRS', 'Premium\\_LRS'."
  syntax:
    content: public StorageAccountType storageAccountType()
    return:
      type: com.microsoft.azure.management.batchai.StorageAccountType
      description: the storageAccountType value
- uid: com.microsoft.azure.management.batchai.DataDisks.withCachingType(com.microsoft.azure.management.batchai.CachingType)
  id: withCachingType(com.microsoft.azure.management.batchai.CachingType)
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.DataDisks
  langs:
  - java
  name: withCachingType(CachingType cachingType)
  nameWithType: DataDisks.withCachingType(CachingType cachingType)
  fullName: com.microsoft.azure.management.batchai.DataDisks.withCachingType(CachingType cachingType)
  overload: com.microsoft.azure.management.batchai.DataDisks.withCachingType*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: "Set caching type for the disks. Available values are none (default), readonly, readwrite. Caching type can be set only for VM sizes supporting premium storage. Possible values include: 'none', 'readonly', 'readwrite'."
  syntax:
    content: public DataDisks withCachingType(CachingType cachingType)
    parameters:
    - id: cachingType
      type: com.microsoft.azure.management.batchai.CachingType
      description: the cachingType value to set
    return:
      type: com.microsoft.azure.management.batchai.DataDisks
      description: the DataDisks object itself.
- uid: com.microsoft.azure.management.batchai.DataDisks.withDiskCount(int)
  id: withDiskCount(int)
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.DataDisks
  langs:
  - java
  name: withDiskCount(int diskCount)
  nameWithType: DataDisks.withDiskCount(int diskCount)
  fullName: com.microsoft.azure.management.batchai.DataDisks.withDiskCount(int diskCount)
  overload: com.microsoft.azure.management.batchai.DataDisks.withDiskCount*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Set number of data disks attached to the File Server. If multiple disks attached, they will be configured in RAID level 0.
  syntax:
    content: public DataDisks withDiskCount(int diskCount)
    parameters:
    - id: diskCount
      type: int
      description: the diskCount value to set
    return:
      type: com.microsoft.azure.management.batchai.DataDisks
      description: the DataDisks object itself.
- uid: com.microsoft.azure.management.batchai.DataDisks.withDiskSizeInGB(int)
  id: withDiskSizeInGB(int)
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.DataDisks
  langs:
  - java
  name: withDiskSizeInGB(int diskSizeInGB)
  nameWithType: DataDisks.withDiskSizeInGB(int diskSizeInGB)
  fullName: com.microsoft.azure.management.batchai.DataDisks.withDiskSizeInGB(int diskSizeInGB)
  overload: com.microsoft.azure.management.batchai.DataDisks.withDiskSizeInGB*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: Set disk size in GB for the blank data disks.
  syntax:
    content: public DataDisks withDiskSizeInGB(int diskSizeInGB)
    parameters:
    - id: diskSizeInGB
      type: int
      description: the diskSizeInGB value to set
    return:
      type: com.microsoft.azure.management.batchai.DataDisks
      description: the DataDisks object itself.
- uid: com.microsoft.azure.management.batchai.DataDisks.withStorageAccountType(com.microsoft.azure.management.batchai.StorageAccountType)
  id: withStorageAccountType(com.microsoft.azure.management.batchai.StorageAccountType)
  artifact: com.microsoft.azure:azure-mgmt-batchai:1.36.1
  parent: com.microsoft.azure.management.batchai.DataDisks
  langs:
  - java
  name: withStorageAccountType(StorageAccountType storageAccountType)
  nameWithType: DataDisks.withStorageAccountType(StorageAccountType storageAccountType)
  fullName: com.microsoft.azure.management.batchai.DataDisks.withStorageAccountType(StorageAccountType storageAccountType)
  overload: com.microsoft.azure.management.batchai.DataDisks.withStorageAccountType*
  type: Method
  package: com.microsoft.azure.management.batchai
  summary: "Set type of storage account to be used on the disk. Possible values are: Standard\\_LRS or Premium\\_LRS. Premium storage account type can only be used with VM sizes supporting premium storage. Possible values include: 'Standard\\_LRS', 'Premium\\_LRS'."
  syntax:
    content: public DataDisks withStorageAccountType(StorageAccountType storageAccountType)
    parameters:
    - id: storageAccountType
      type: com.microsoft.azure.management.batchai.StorageAccountType
      description: the storageAccountType value to set
    return:
      type: com.microsoft.azure.management.batchai.DataDisks
      description: the DataDisks object itself.
references:
- uid: com.microsoft.azure.management.batchai.DataDisks.DataDisks*
  name: DataDisks
  nameWithType: DataDisks.DataDisks
  fullName: com.microsoft.azure.management.batchai.DataDisks.DataDisks
  package: com.microsoft.azure.management.batchai
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.management.batchai.DataDisks.diskSizeInGB*
  name: diskSizeInGB
  nameWithType: DataDisks.diskSizeInGB
  fullName: com.microsoft.azure.management.batchai.DataDisks.diskSizeInGB
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.DataDisks.withDiskSizeInGB*
  name: withDiskSizeInGB
  nameWithType: DataDisks.withDiskSizeInGB
  fullName: com.microsoft.azure.management.batchai.DataDisks.withDiskSizeInGB
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.CachingType
  name: CachingType
  nameWithType: CachingType
  fullName: com.microsoft.azure.management.batchai.CachingType
- uid: com.microsoft.azure.management.batchai.DataDisks.cachingType*
  name: cachingType
  nameWithType: DataDisks.cachingType
  fullName: com.microsoft.azure.management.batchai.DataDisks.cachingType
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.DataDisks.withCachingType*
  name: withCachingType
  nameWithType: DataDisks.withCachingType
  fullName: com.microsoft.azure.management.batchai.DataDisks.withCachingType
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.DataDisks.diskCount*
  name: diskCount
  nameWithType: DataDisks.diskCount
  fullName: com.microsoft.azure.management.batchai.DataDisks.diskCount
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.DataDisks.withDiskCount*
  name: withDiskCount
  nameWithType: DataDisks.withDiskCount
  fullName: com.microsoft.azure.management.batchai.DataDisks.withDiskCount
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.StorageAccountType
  name: StorageAccountType
  nameWithType: StorageAccountType
  fullName: com.microsoft.azure.management.batchai.StorageAccountType
- uid: com.microsoft.azure.management.batchai.DataDisks.storageAccountType*
  name: storageAccountType
  nameWithType: DataDisks.storageAccountType
  fullName: com.microsoft.azure.management.batchai.DataDisks.storageAccountType
  package: com.microsoft.azure.management.batchai
- uid: com.microsoft.azure.management.batchai.DataDisks.withStorageAccountType*
  name: withStorageAccountType
  nameWithType: DataDisks.withStorageAccountType
  fullName: com.microsoft.azure.management.batchai.DataDisks.withStorageAccountType
  package: com.microsoft.azure.management.batchai
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
