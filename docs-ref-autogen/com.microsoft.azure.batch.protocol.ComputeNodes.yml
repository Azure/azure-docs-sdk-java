### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.ComputeNodes
  id: ComputeNodes
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol
  children:
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUser(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUser(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.get(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.get(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions,java.io.OutputStream)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(java.lang.String,java.lang.String,java.io.OutputStream)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions,com.microsoft.rest.ServiceCallback<java.io.InputStream>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.io.InputStream>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.list(java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.list(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNext(java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reboot(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reboot(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimage(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimage(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions)
  langs:
  - java
  name: ComputeNodes
  nameWithType: ComputeNodes
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes
  type: Interface
  package: com.microsoft.azure.batch.protocol
  summary: An instance of this class provides access to all the operations defined in ComputeNodes.
  syntax:
    content: public interface ComputeNodes
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUser(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser)
  id: addUser(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: addUser(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodes.addUser(String poolId, String nodeId, ComputeNodeUser user)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUser(String poolId, String nodeId, ComputeNodeUser user)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUser*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a user Account to the specified Compute Node. You can add a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract void addUser(String poolId, String nodeId, ComputeNodeUser user)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to create a user Account.
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: The user Account to be created.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUser(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions)
  id: addUser(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  nameWithType: ComputeNodes.addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUser*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a user Account to the specified Compute Node. You can add a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract void addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to create a user Account.
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: The user Account to be created.
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser)
  id: addUserAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a user Account to the specified Compute Node. You can add a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract Observable<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to create a user Account.
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: The user Account to be created.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions)
  id: addUserAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  nameWithType: ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a user Account to the specified Compute Node. You can add a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract Observable<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to create a user Account.
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: The user Account to be created.
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: addUserAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a user Account to the specified Compute Node. You can add a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract ServiceFuture<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to create a user Account.
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: The user Account to be created.
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: addUserAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a user Account to the specified Compute Node. You can add a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract ServiceFuture<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to create a user Account.
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: The user Account to be created.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser)
  id: addUserWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodes.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a user Account to the specified Compute Node. You can add a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeAddUserHeaders>> addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to create a user Account.
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: The user Account to be created.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions)
  id: addUserWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeUser,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  nameWithType: ComputeNodes.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a user Account to the specified Compute Node. You can add a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeAddUserHeaders>> addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to create a user Account.
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: The user Account to be created.
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(java.lang.String,java.lang.String,java.lang.String)
  id: deleteUser(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: deleteUser(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodes.deleteUser(String poolId, String nodeId, String userName)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(String poolId, String nodeId, String userName)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a user Account from the specified Compute Node. You can delete a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract void deleteUser(String poolId, String nodeId, String userName)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to delete a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to delete.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions)
  id: deleteUser(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodes.deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a user Account from the specified Compute Node. You can delete a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract void deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to delete a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to delete.
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteUserAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: deleteUserAsync(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a user Account from the specified Compute Node. You can delete a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract Observable<Void> deleteUserAsync(String poolId, String nodeId, String userName)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to delete a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to delete.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions)
  id: deleteUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a user Account from the specified Compute Node. You can delete a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract Observable<Void> deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to delete a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to delete.
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: deleteUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a user Account from the specified Compute Node. You can delete a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract ServiceFuture<Void> deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to delete a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to delete.
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: deleteUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: deleteUserAsync(String poolId, String nodeId, String userName, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a user Account from the specified Compute Node. You can delete a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract ServiceFuture<Void> deleteUserAsync(String poolId, String nodeId, String userName, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to delete a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to delete.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteUserWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodes.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a user Account from the specified Compute Node. You can delete a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeDeleteUserHeaders>> deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to delete a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to delete.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions)
  id: deleteUserWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodes.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a user Account from the specified Compute Node. You can delete a user Account to a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeDeleteUserHeaders>> deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to delete a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to delete.
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(java.lang.String,java.lang.String)
  id: disableScheduling(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: disableScheduling(String poolId, String nodeId)
  nameWithType: ComputeNodes.disableScheduling(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables Task scheduling on the specified Compute Node. You can disable Task scheduling on a Compute Node only if its current scheduling state is enabled.
  syntax:
    content: public abstract void disableScheduling(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to disable Task scheduling.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions)
  id: disableScheduling(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  nameWithType: ComputeNodes.disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables Task scheduling on the specified Compute Node. You can disable Task scheduling on a Compute Node only if its current scheduling state is enabled.
  syntax:
    content: public abstract void disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to disable Task scheduling.
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
      description: "What to do with currently running Tasks when disabling Task scheduling on the Compute Node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion'"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(java.lang.String,java.lang.String)
  id: disableSchedulingAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: disableSchedulingAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.disableSchedulingAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables Task scheduling on the specified Compute Node. You can disable Task scheduling on a Compute Node only if its current scheduling state is enabled.
  syntax:
    content: public abstract Observable<Void> disableSchedulingAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to disable Task scheduling.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions)
  id: disableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  nameWithType: ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables Task scheduling on the specified Compute Node. You can disable Task scheduling on a Compute Node only if its current scheduling state is enabled.
  syntax:
    content: public abstract Observable<Void> disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to disable Task scheduling.
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
      description: "What to do with currently running Tasks when disabling Task scheduling on the Compute Node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion'"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: disableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables Task scheduling on the specified Compute Node. You can disable Task scheduling on a Compute Node only if its current scheduling state is enabled.
  syntax:
    content: public abstract ServiceFuture<Void> disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to disable Task scheduling.
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
      description: "What to do with currently running Tasks when disabling Task scheduling on the Compute Node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion'"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: disableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: disableSchedulingAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables Task scheduling on the specified Compute Node. You can disable Task scheduling on a Compute Node only if its current scheduling state is enabled.
  syntax:
    content: public abstract ServiceFuture<Void> disableSchedulingAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to disable Task scheduling.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String)
  id: disableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables Task scheduling on the specified Compute Node. You can disable Task scheduling on a Compute Node only if its current scheduling state is enabled.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeDisableSchedulingHeaders>> disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to disable Task scheduling.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions)
  id: disableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  nameWithType: ComputeNodes.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables Task scheduling on the specified Compute Node. You can disable Task scheduling on a Compute Node only if its current scheduling state is enabled.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeDisableSchedulingHeaders>> disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to disable Task scheduling.
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
      description: "What to do with currently running Tasks when disabling Task scheduling on the Compute Node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion'"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(java.lang.String,java.lang.String)
  id: enableScheduling(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: enableScheduling(String poolId, String nodeId)
  nameWithType: ComputeNodes.enableScheduling(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables Task scheduling on the specified Compute Node. You can enable Task scheduling on a Compute Node only if its current scheduling state is disabled.
  syntax:
    content: public abstract void enableScheduling(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to enable Task scheduling.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions)
  id: enableScheduling(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodes.enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables Task scheduling on the specified Compute Node. You can enable Task scheduling on a Compute Node only if its current scheduling state is disabled.
  syntax:
    content: public abstract void enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to enable Task scheduling.
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(java.lang.String,java.lang.String)
  id: enableSchedulingAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: enableSchedulingAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.enableSchedulingAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables Task scheduling on the specified Compute Node. You can enable Task scheduling on a Compute Node only if its current scheduling state is disabled.
  syntax:
    content: public abstract Observable<Void> enableSchedulingAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to enable Task scheduling.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions)
  id: enableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables Task scheduling on the specified Compute Node. You can enable Task scheduling on a Compute Node only if its current scheduling state is disabled.
  syntax:
    content: public abstract Observable<Void> enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to enable Task scheduling.
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: enableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables Task scheduling on the specified Compute Node. You can enable Task scheduling on a Compute Node only if its current scheduling state is disabled.
  syntax:
    content: public abstract ServiceFuture<Void> enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to enable Task scheduling.
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: enableSchedulingAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: enableSchedulingAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables Task scheduling on the specified Compute Node. You can enable Task scheduling on a Compute Node only if its current scheduling state is disabled.
  syntax:
    content: public abstract ServiceFuture<Void> enableSchedulingAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to enable Task scheduling.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String)
  id: enableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables Task scheduling on the specified Compute Node. You can enable Task scheduling on a Compute Node only if its current scheduling state is disabled.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeEnableSchedulingHeaders>> enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to enable Task scheduling.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions)
  id: enableSchedulingWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables Task scheduling on the specified Compute Node. You can enable Task scheduling on a Compute Node only if its current scheduling state is disabled.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeEnableSchedulingHeaders>> enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node on which you want to enable Task scheduling.
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.get(java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: get(String poolId, String nodeId)
  nameWithType: ComputeNodes.get(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.get(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.get*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Compute Node.
  syntax:
    content: public abstract ComputeNode get(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to get information about.
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNode
      description: the ComputeNode object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.get(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions)
  id: get(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  nameWithType: ComputeNodes.get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.get*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Compute Node.
  syntax:
    content: public abstract ComputeNode get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to get information about.
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNode
      description: the ComputeNode object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Compute Node.
  syntax:
    content: public abstract Observable<ComputeNode> getAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to get information about.
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the observable to the ComputeNode object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions)
  id: getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  nameWithType: ComputeNodes.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Compute Node.
  syntax:
    content: public abstract Observable<ComputeNode> getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to get information about.
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the observable to the ComputeNode object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  id: getAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, ServiceCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, ServiceCallback<ComputeNode> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, ServiceCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Compute Node.
  syntax:
    content: public abstract ServiceFuture<ComputeNode> getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, ServiceCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to get information about.
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  id: getAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getAsync(String poolId, String nodeId, ServiceCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.getAsync(String poolId, String nodeId, ServiceCallback<ComputeNode> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String poolId, String nodeId, ServiceCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Compute Node.
  syntax:
    content: public abstract ServiceFuture<ComputeNode> getAsync(String poolId, String nodeId, ServiceCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to get information about.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(java.lang.String,java.lang.String)
  id: getRemoteDesktop(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteDesktop(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteDesktop(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Remote Desktop Protocol file for the specified Compute Node. Before you can access a Compute Node by using the RDP file, you must create a user Account on the Compute Node. This API can only be invoked on Pools created with a cloud service configuration. For Pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.
  syntax:
    content: public abstract InputStream getRemoteDesktop(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which you want to get the Remote Desktop Protocol file.
    return:
      type: java.io.InputStream
      description: the InputStream object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions)
  id: getRemoteDesktop(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  nameWithType: ComputeNodes.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Remote Desktop Protocol file for the specified Compute Node. Before you can access a Compute Node by using the RDP file, you must create a user Account on the Compute Node. This API can only be invoked on Pools created with a cloud service configuration. For Pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.
  syntax:
    content: public abstract InputStream getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which you want to get the Remote Desktop Protocol file.
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
      description: Additional parameters for the operation
    return:
      type: java.io.InputStream
      description: the InputStream object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions,java.io.OutputStream)
  id: getRemoteDesktop(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions,java.io.OutputStream)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  nameWithType: ComputeNodes.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Remote Desktop Protocol file for the specified compute node.
  syntax:
    content: public abstract void getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool that contains the compute node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the compute node for which you want to get the Remote Desktop Protocol file.
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
      description: Additional parameters for the operation
    - id: outputStream
      type: java.io.OutputStream
      description: The OutputStream object which data will be written to if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(java.lang.String,java.lang.String,java.io.OutputStream)
  id: getRemoteDesktop(java.lang.String,java.lang.String,java.io.OutputStream)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  nameWithType: ComputeNodes.getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop*
  type: Method
  package: com.microsoft.azure.batch.protocol
  syntax:
    content: public abstract void getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool that contains the compute node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the compute node for which you want to get the Remote Desktop Protocol file.
    - id: outputStream
      type: java.io.OutputStream
      description: The OutputStream object which data will be written to if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(java.lang.String,java.lang.String)
  id: getRemoteDesktopAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteDesktopAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Remote Desktop Protocol file for the specified Compute Node. Before you can access a Compute Node by using the RDP file, you must create a user Account on the Compute Node. This API can only be invoked on Pools created with a cloud service configuration. For Pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.
  syntax:
    content: public abstract Observable<InputStream> getRemoteDesktopAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which you want to get the Remote Desktop Protocol file.
    return:
      type: rx.Observable<java.io.InputStream>
      description: the observable to the InputStream object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions)
  id: getRemoteDesktopAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  nameWithType: ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Remote Desktop Protocol file for the specified Compute Node. Before you can access a Compute Node by using the RDP file, you must create a user Account on the Compute Node. This API can only be invoked on Pools created with a cloud service configuration. For Pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.
  syntax:
    content: public abstract Observable<InputStream> getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which you want to get the Remote Desktop Protocol file.
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.io.InputStream>
      description: the observable to the InputStream object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions,com.microsoft.rest.ServiceCallback<java.io.InputStream>)
  id: getRemoteDesktopAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions,com.microsoft.rest.ServiceCallback<java.io.InputStream>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, ServiceCallback<InputStream> serviceCallback)
  nameWithType: ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, ServiceCallback<InputStream> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, ServiceCallback<InputStream> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Remote Desktop Protocol file for the specified Compute Node. Before you can access a Compute Node by using the RDP file, you must create a user Account on the Compute Node. This API can only be invoked on Pools created with a cloud service configuration. For Pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.
  syntax:
    content: public abstract ServiceFuture<InputStream> getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which you want to get the Remote Desktop Protocol file.
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.io.InputStream>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.io.InputStream>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.io.InputStream>)
  id: getRemoteDesktopAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.io.InputStream>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteDesktopAsync(String poolId, String nodeId, ServiceCallback<InputStream> serviceCallback)
  nameWithType: ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ServiceCallback<InputStream> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ServiceCallback<InputStream> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Remote Desktop Protocol file for the specified Compute Node. Before you can access a Compute Node by using the RDP file, you must create a user Account on the Compute Node. This API can only be invoked on Pools created with a cloud service configuration. For Pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.
  syntax:
    content: public abstract ServiceFuture<InputStream> getRemoteDesktopAsync(String poolId, String nodeId, ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which you want to get the Remote Desktop Protocol file.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.io.InputStream>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.io.InputStream>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(java.lang.String,java.lang.String)
  id: getRemoteDesktopWithServiceResponseAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Remote Desktop Protocol file for the specified Compute Node. Before you can access a Compute Node by using the RDP file, you must create a user Account on the Compute Node. This API can only be invoked on Pools created with a cloud service configuration. For Pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<InputStream,ComputeNodeGetRemoteDesktopHeaders>> getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which you want to get the Remote Desktop Protocol file.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.io.InputStream,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders>>
      description: the observable to the InputStream object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions)
  id: getRemoteDesktopWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  nameWithType: ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Remote Desktop Protocol file for the specified Compute Node. Before you can access a Compute Node by using the RDP file, you must create a user Account on the Compute Node. This API can only be invoked on Pools created with a cloud service configuration. For Pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<InputStream,ComputeNodeGetRemoteDesktopHeaders>> getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which you want to get the Remote Desktop Protocol file.
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.io.InputStream,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders>>
      description: the observable to the InputStream object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(java.lang.String,java.lang.String)
  id: getRemoteLoginSettings(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteLoginSettings(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteLoginSettings(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the settings required for remote login to a Compute Node. Before you can remotely login to a Compute Node using the remote login settings, you must create a user Account on the Compute Node. This API can be invoked only on Pools created with the virtual machine configuration property. For Pools created with a cloud service configuration, see the GetRemoteDesktop API.
  syntax:
    content: public abstract ComputeNodeGetRemoteLoginSettingsResult getRemoteLoginSettings(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which to obtain the remote login settings.
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
      description: the ComputeNodeGetRemoteLoginSettingsResult object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions)
  id: getRemoteLoginSettings(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodes.getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the settings required for remote login to a Compute Node. Before you can remotely login to a Compute Node using the remote login settings, you must create a user Account on the Compute Node. This API can be invoked only on Pools created with the virtual machine configuration property. For Pools created with a cloud service configuration, see the GetRemoteDesktop API.
  syntax:
    content: public abstract ComputeNodeGetRemoteLoginSettingsResult getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which to obtain the remote login settings.
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
      description: the ComputeNodeGetRemoteLoginSettingsResult object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(java.lang.String,java.lang.String)
  id: getRemoteLoginSettingsAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the settings required for remote login to a Compute Node. Before you can remotely login to a Compute Node using the remote login settings, you must create a user Account on the Compute Node. This API can be invoked only on Pools created with the virtual machine configuration property. For Pools created with a cloud service configuration, see the GetRemoteDesktop API.
  syntax:
    content: public abstract Observable<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which to obtain the remote login settings.
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>
      description: the observable to the ComputeNodeGetRemoteLoginSettingsResult object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions)
  id: getRemoteLoginSettingsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the settings required for remote login to a Compute Node. Before you can remotely login to a Compute Node using the remote login settings, you must create a user Account on the Compute Node. This API can be invoked only on Pools created with the virtual machine configuration property. For Pools created with a cloud service configuration, see the GetRemoteDesktop API.
  syntax:
    content: public abstract Observable<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which to obtain the remote login settings.
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>
      description: the observable to the ComputeNodeGetRemoteLoginSettingsResult object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>)
  id: getRemoteLoginSettingsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the settings required for remote login to a Compute Node. Before you can remotely login to a Compute Node using the remote login settings, you must create a user Account on the Compute Node. This API can be invoked only on Pools created with the virtual machine configuration property. For Pools created with a cloud service configuration, see the GetRemoteDesktop API.
  syntax:
    content: public abstract ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which to obtain the remote login settings.
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>)
  id: getRemoteLoginSettingsAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId, ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the settings required for remote login to a Compute Node. Before you can remotely login to a Compute Node using the remote login settings, you must create a user Account on the Compute Node. This API can be invoked only on Pools created with the virtual machine configuration property. For Pools created with a cloud service configuration, see the GetRemoteDesktop API.
  syntax:
    content: public abstract ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId, ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which to obtain the remote login settings.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(java.lang.String,java.lang.String)
  id: getRemoteLoginSettingsWithServiceResponseAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the settings required for remote login to a Compute Node. Before you can remotely login to a Compute Node using the remote login settings, you must create a user Account on the Compute Node. This API can be invoked only on Pools created with the virtual machine configuration property. For Pools created with a cloud service configuration, see the GetRemoteDesktop API.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult,ComputeNodeGetRemoteLoginSettingsHeaders>> getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which to obtain the remote login settings.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders>>
      description: the observable to the ComputeNodeGetRemoteLoginSettingsResult object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions)
  id: getRemoteLoginSettingsWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the settings required for remote login to a Compute Node. Before you can remotely login to a Compute Node using the remote login settings, you must create a user Account on the Compute Node. This API can be invoked only on Pools created with the virtual machine configuration property. For Pools created with a cloud service configuration, see the GetRemoteDesktop API.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult,ComputeNodeGetRemoteLoginSettingsHeaders>> getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node for which to obtain the remote login settings.
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders>>
      description: the observable to the ComputeNodeGetRemoteLoginSettingsResult object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(java.lang.String,java.lang.String)
  id: getWithServiceResponseAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Compute Node.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<ComputeNode,ComputeNodeGetHeaders>> getWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to get information about.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.ComputeNode,com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders>>
      description: the observable to the ComputeNode object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions)
  id: getWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  nameWithType: ComputeNodes.getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Compute Node.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<ComputeNode,ComputeNodeGetHeaders>> getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to get information about.
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.ComputeNode,com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders>>
      description: the observable to the ComputeNode object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.list(java.lang.String)
  id: list(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: list(String poolId)
  nameWithType: ComputeNodes.list(String poolId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.list(String poolId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.list*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract PagedList<ComputeNode> list(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to list Compute Nodes.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the PagedList&lt;ComputeNode&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.list(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions)
  id: list(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: list(String poolId, ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodes.list(String poolId, ComputeNodeListOptions computeNodeListOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.list(String poolId, ComputeNodeListOptions computeNodeListOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.list*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract PagedList<ComputeNode> list(String poolId, ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to list Compute Nodes.
    - id: computeNodeListOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the PagedList&lt;ComputeNode&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(java.lang.String)
  id: listAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listAsync(String poolId)
  nameWithType: ComputeNodes.listAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract Observable<Page<ComputeNode>> listAsync(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to list Compute Nodes.
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.ComputeNode>>
      description: the observable to the PagedList&lt;ComputeNode&gt; object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  id: listAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listAsync(String poolId, ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.listAsync(String poolId, ListOperationCallback<ComputeNode> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(String poolId, ListOperationCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract ServiceFuture<List<ComputeNode>> listAsync(String poolId, ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to list Compute Nodes.
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions)
  id: listAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listAsync(String poolId, ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodes.listAsync(String poolId, ComputeNodeListOptions computeNodeListOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(String poolId, ComputeNodeListOptions computeNodeListOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract Observable<Page<ComputeNode>> listAsync(String poolId, ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to list Compute Nodes.
    - id: computeNodeListOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.ComputeNode>>
      description: the observable to the PagedList&lt;ComputeNode&gt; object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  id: listAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listAsync(String poolId, ComputeNodeListOptions computeNodeListOptions, ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.listAsync(String poolId, ComputeNodeListOptions computeNodeListOptions, ListOperationCallback<ComputeNode> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(String poolId, ComputeNodeListOptions computeNodeListOptions, ListOperationCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract ServiceFuture<List<ComputeNode>> listAsync(String poolId, ComputeNodeListOptions computeNodeListOptions, ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to list Compute Nodes.
    - id: computeNodeListOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNext(java.lang.String)
  id: listNext(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listNext(String nextPageLink)
  nameWithType: ComputeNodes.listNext(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNext(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract PagedList<ComputeNode> listNext(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the PagedList&lt;ComputeNode&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions)
  id: listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listNext(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodes.listNext(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNext(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract PagedList<ComputeNode> listNext(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: computeNodeListNextOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the PagedList&lt;ComputeNode&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(java.lang.String)
  id: listNextAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listNextAsync(String nextPageLink)
  nameWithType: ComputeNodes.listNextAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract Observable<Page<ComputeNode>> listNextAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.ComputeNode>>
      description: the observable to the PagedList&lt;ComputeNode&gt; object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions)
  id: listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listNextAsync(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodes.listNextAsync(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract Observable<Page<ComputeNode>> listNextAsync(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: computeNodeListNextOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.ComputeNode>>
      description: the observable to the PagedList&lt;ComputeNode&gt; object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  id: listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listNextAsync(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions, ServiceFuture<List<ComputeNode>> serviceFuture, ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.listNextAsync(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions, ServiceFuture<List<ComputeNode>> serviceFuture, ListOperationCallback<ComputeNode> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions, ServiceFuture<List<ComputeNode>> serviceFuture, ListOperationCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract ServiceFuture<List<ComputeNode>> listNextAsync(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions, ServiceFuture<List<ComputeNode>> serviceFuture, ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: computeNodeListNextOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
      description: Additional parameters for the operation
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  id: listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listNextAsync(String nextPageLink, ServiceFuture<List<ComputeNode>> serviceFuture, ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.listNextAsync(String nextPageLink, ServiceFuture<List<ComputeNode>> serviceFuture, ListOperationCallback<ComputeNode> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(String nextPageLink, ServiceFuture<List<ComputeNode>> serviceFuture, ListOperationCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract ServiceFuture<List<ComputeNode>> listNextAsync(String nextPageLink, ServiceFuture<List<ComputeNode>> serviceFuture, ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(java.lang.String)
  id: listNextWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listNextWithServiceResponseAsync(String nextPageLink)
  nameWithType: ComputeNodes.listNextWithServiceResponseAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<ComputeNode>,ComputeNodeListHeaders>> listNextWithServiceResponseAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders>>
      description: the observable to the PagedList&lt;ComputeNode&gt; object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions)
  id: listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listNextWithServiceResponseAsync(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodes.listNextWithServiceResponseAsync(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<ComputeNode>,ComputeNodeListHeaders>> listNextWithServiceResponseAsync(String nextPageLink, ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: computeNodeListNextOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders>>
      description: the observable to the PagedList&lt;ComputeNode&gt; object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(java.lang.String)
  id: listWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listWithServiceResponseAsync(String poolId)
  nameWithType: ComputeNodes.listWithServiceResponseAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<ComputeNode>,ComputeNodeListHeaders>> listWithServiceResponseAsync(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to list Compute Nodes.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders>>
      description: the observable to the PagedList&lt;ComputeNode&gt; object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions)
  id: listWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: listWithServiceResponseAsync(String poolId, ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodes.listWithServiceResponseAsync(String poolId, ComputeNodeListOptions computeNodeListOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(String poolId, ComputeNodeListOptions computeNodeListOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Compute Nodes in the specified Pool.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<ComputeNode>,ComputeNodeListHeaders>> listWithServiceResponseAsync(String poolId, ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to list Compute Nodes.
    - id: computeNodeListOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders>>
      description: the observable to the PagedList&lt;ComputeNode&gt; object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reboot(java.lang.String,java.lang.String)
  id: reboot(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: reboot(String poolId, String nodeId)
  nameWithType: ComputeNodes.reboot(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reboot(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reboot*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Restarts the specified Compute Node. You can restart a Compute Node only if it is in an idle or running state.
  syntax:
    content: public abstract void reboot(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reboot(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions)
  id: reboot(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  nameWithType: ComputeNodes.reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reboot*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Restarts the specified Compute Node. You can restart a Compute Node only if it is in an idle or running state.
  syntax:
    content: public abstract void reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
      description: "When to reboot the Compute Node and what to do with currently running Tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData'"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(java.lang.String,java.lang.String)
  id: rebootAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: rebootAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.rebootAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Restarts the specified Compute Node. You can restart a Compute Node only if it is in an idle or running state.
  syntax:
    content: public abstract Observable<Void> rebootAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions)
  id: rebootAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  nameWithType: ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Restarts the specified Compute Node. You can restart a Compute Node only if it is in an idle or running state.
  syntax:
    content: public abstract Observable<Void> rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
      description: "When to reboot the Compute Node and what to do with currently running Tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData'"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: rebootAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Restarts the specified Compute Node. You can restart a Compute Node only if it is in an idle or running state.
  syntax:
    content: public abstract ServiceFuture<Void> rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
      description: "When to reboot the Compute Node and what to do with currently running Tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData'"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: rebootAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: rebootAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.rebootAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Restarts the specified Compute Node. You can restart a Compute Node only if it is in an idle or running state.
  syntax:
    content: public abstract ServiceFuture<Void> rebootAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(java.lang.String,java.lang.String)
  id: rebootWithServiceResponseAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: rebootWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.rebootWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Restarts the specified Compute Node. You can restart a Compute Node only if it is in an idle or running state.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeRebootHeaders>> rebootWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions)
  id: rebootWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  nameWithType: ComputeNodes.rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Restarts the specified Compute Node. You can restart a Compute Node only if it is in an idle or running state.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeRebootHeaders>> rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
      description: "When to reboot the Compute Node and what to do with currently running Tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData'"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimage(java.lang.String,java.lang.String)
  id: reimage(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: reimage(String poolId, String nodeId)
  nameWithType: ComputeNodes.reimage(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimage(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimage*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Reinstalls the operating system on the specified Compute Node. You can reinstall the operating system on a Compute Node only if it is in an idle or running state. This API can be invoked only on Pools created with the cloud service configuration property.
  syntax:
    content: public abstract void reimage(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimage(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions)
  id: reimage(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  nameWithType: ComputeNodes.reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimage*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Reinstalls the operating system on the specified Compute Node. You can reinstall the operating system on a Compute Node only if it is in an idle or running state. This API can be invoked only on Pools created with the cloud service configuration property.
  syntax:
    content: public abstract void reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
      description: "When to reimage the Compute Node and what to do with currently running Tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData'"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(java.lang.String,java.lang.String)
  id: reimageAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: reimageAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.reimageAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Reinstalls the operating system on the specified Compute Node. You can reinstall the operating system on a Compute Node only if it is in an idle or running state. This API can be invoked only on Pools created with the cloud service configuration property.
  syntax:
    content: public abstract Observable<Void> reimageAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions)
  id: reimageAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  nameWithType: ComputeNodes.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Reinstalls the operating system on the specified Compute Node. You can reinstall the operating system on a Compute Node only if it is in an idle or running state. This API can be invoked only on Pools created with the cloud service configuration property.
  syntax:
    content: public abstract Observable<Void> reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
      description: "When to reimage the Compute Node and what to do with currently running Tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData'"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: reimageAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Reinstalls the operating system on the specified Compute Node. You can reinstall the operating system on a Compute Node only if it is in an idle or running state. This API can be invoked only on Pools created with the cloud service configuration property.
  syntax:
    content: public abstract ServiceFuture<Void> reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
      description: "When to reimage the Compute Node and what to do with currently running Tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData'"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: reimageAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: reimageAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.reimageAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Reinstalls the operating system on the specified Compute Node. You can reinstall the operating system on a Compute Node only if it is in an idle or running state. This API can be invoked only on Pools created with the cloud service configuration property.
  syntax:
    content: public abstract ServiceFuture<Void> reimageAsync(String poolId, String nodeId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(java.lang.String,java.lang.String)
  id: reimageWithServiceResponseAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: reimageWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.reimageWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Reinstalls the operating system on the specified Compute Node. You can reinstall the operating system on a Compute Node only if it is in an idle or running state. This API can be invoked only on Pools created with the cloud service configuration property.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeReimageHeaders>> reimageWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions)
  id: reimageWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  nameWithType: ComputeNodes.reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Reinstalls the operating system on the specified Compute Node. You can reinstall the operating system on a Compute Node only if it is in an idle or running state. This API can be invoked only on Pools created with the cloud service configuration property.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeReimageHeaders>> reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node that you want to restart.
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
      description: "When to reimage the Compute Node and what to do with currently running Tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData'"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter)
  id: updateUser(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  nameWithType: ComputeNodes.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the password and expiration time of a user Account on the specified Compute Node. This operation replaces of all the updatable properties of the Account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user Account on a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract void updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to update a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to update.
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: The parameters for the request.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions)
  id: updateUser(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  nameWithType: ComputeNodes.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the password and expiration time of a user Account on the specified Compute Node. This operation replaces of all the updatable properties of the Account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user Account on a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract void updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to update a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to update.
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: The parameters for the request.
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter)
  id: updateUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  nameWithType: ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the password and expiration time of a user Account on the specified Compute Node. This operation replaces of all the updatable properties of the Account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user Account on a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract Observable<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to update a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to update.
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions)
  id: updateUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  nameWithType: ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the password and expiration time of a user Account on the specified Compute Node. This operation replaces of all the updatable properties of the Account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user Account on a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract Observable<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to update a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to update.
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: The parameters for the request.
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: updateUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the password and expiration time of a user Account on the specified Compute Node. This operation replaces of all the updatable properties of the Account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user Account on a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract ServiceFuture<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to update a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to update.
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: The parameters for the request.
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: updateUserAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the password and expiration time of a user Account on the specified Compute Node. This operation replaces of all the updatable properties of the Account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user Account on a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract ServiceFuture<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to update a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to update.
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: The parameters for the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter)
  id: updateUserWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  nameWithType: ComputeNodes.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the password and expiration time of a user Account on the specified Compute Node. This operation replaces of all the updatable properties of the Account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user Account on a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeUpdateUserHeaders>> updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to update a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to update.
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions)
  id: updateUserWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  nameWithType: ComputeNodes.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the password and expiration time of a user Account on the specified Compute Node. This operation replaces of all the updatable properties of the Account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user Account on a Compute Node only when it is in the idle or running state.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,ComputeNodeUpdateUserHeaders>> updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the machine on which you want to update a user Account.
    - id: userName
      type: java.lang.String
      description: The name of the user Account to update.
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: The parameters for the request.
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration)
  id: uploadBatchServiceLogs(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  nameWithType: ComputeNodes.uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Upload Azure Batch service log files from the specified Compute Node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from Compute Nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.
  syntax:
    content: public abstract UploadBatchServiceLogsResult uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node from which you want to upload the Azure Batch service log files.
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: The Azure Batch service log files upload configuration.
    return:
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
      description: the UploadBatchServiceLogsResult object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions)
  id: uploadBatchServiceLogs(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  nameWithType: ComputeNodes.uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Upload Azure Batch service log files from the specified Compute Node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from Compute Nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.
  syntax:
    content: public abstract UploadBatchServiceLogsResult uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node from which you want to upload the Azure Batch service log files.
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: The Azure Batch service log files upload configuration.
    - id: computeNodeUploadBatchServiceLogsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
      description: the UploadBatchServiceLogsResult object if successful.
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration)
  id: uploadBatchServiceLogsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  nameWithType: ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Upload Azure Batch service log files from the specified Compute Node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from Compute Nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.
  syntax:
    content: public abstract Observable<UploadBatchServiceLogsResult> uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node from which you want to upload the Azure Batch service log files.
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: The Azure Batch service log files upload configuration.
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>
      description: the observable to the UploadBatchServiceLogsResult object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions)
  id: uploadBatchServiceLogsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  nameWithType: ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Upload Azure Batch service log files from the specified Compute Node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from Compute Nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.
  syntax:
    content: public abstract Observable<UploadBatchServiceLogsResult> uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node from which you want to upload the Azure Batch service log files.
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: The Azure Batch service log files upload configuration.
    - id: computeNodeUploadBatchServiceLogsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>
      description: the observable to the UploadBatchServiceLogsResult object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>)
  id: uploadBatchServiceLogsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions, ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
  nameWithType: ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions, ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions, ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Upload Azure Batch service log files from the specified Compute Node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from Compute Nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.
  syntax:
    content: public abstract ServiceFuture<UploadBatchServiceLogsResult> uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions, ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node from which you want to upload the Azure Batch service log files.
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: The Azure Batch service log files upload configuration.
    - id: computeNodeUploadBatchServiceLogsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>)
  id: uploadBatchServiceLogsAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
  nameWithType: ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Upload Azure Batch service log files from the specified Compute Node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from Compute Nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.
  syntax:
    content: public abstract ServiceFuture<UploadBatchServiceLogsResult> uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node from which you want to upload the Azure Batch service log files.
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: The Azure Batch service log files upload configuration.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration)
  id: uploadBatchServiceLogsWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  nameWithType: ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Upload Azure Batch service log files from the specified Compute Node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from Compute Nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<UploadBatchServiceLogsResult,ComputeNodeUploadBatchServiceLogsHeaders>> uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node from which you want to upload the Azure Batch service log files.
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: The Azure Batch service log files upload configuration.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders>>
      description: the observable to the UploadBatchServiceLogsResult object
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions)
  id: uploadBatchServiceLogsWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  langs:
  - java
  name: uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  nameWithType: ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Upload Azure Batch service log files from the specified Compute Node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from Compute Nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<UploadBatchServiceLogsResult,ComputeNodeUploadBatchServiceLogsHeaders>> uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool that contains the Compute Node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the Compute Node from which you want to upload the Azure Batch service log files.
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: The Azure Batch service log files upload configuration.
    - id: computeNodeUploadBatchServiceLogsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders>>
      description: the observable to the UploadBatchServiceLogsResult object
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop*
  name: getRemoteDesktop
  nameWithType: ComputeNodes.getRemoteDesktop
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
  name: ComputeNodeGetRemoteDesktopOptions
  nameWithType: ComputeNodeGetRemoteDesktopOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  name: ComputeNodeUser
  nameWithType: ComputeNodeUser
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUser*
  name: addUser
  nameWithType: ComputeNodes.addUser
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUser
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync*
  name: addUserAsync
  nameWithType: ComputeNodes.addUserAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<java.lang.Void>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders
    name: ComputeNodeAddUserHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync*
  name: addUserWithServiceResponseAsync
  nameWithType: ComputeNodes.addUserWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
  name: ComputeNodeAddUserOptions
  nameWithType: ComputeNodeAddUserOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser*
  name: deleteUser
  nameWithType: ComputeNodes.deleteUser
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync*
  name: deleteUserAsync
  nameWithType: ComputeNodes.deleteUserAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders
    name: ComputeNodeDeleteUserHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync*
  name: deleteUserWithServiceResponseAsync
  nameWithType: ComputeNodes.deleteUserWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
  name: ComputeNodeDeleteUserOptions
  nameWithType: ComputeNodeDeleteUserOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  name: NodeUpdateUserParameter
  nameWithType: NodeUpdateUserParameter
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser*
  name: updateUser
  nameWithType: ComputeNodes.updateUser
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync*
  name: updateUserAsync
  nameWithType: ComputeNodes.updateUserAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders
    name: ComputeNodeUpdateUserHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync*
  name: updateUserWithServiceResponseAsync
  nameWithType: ComputeNodes.updateUserWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
  name: ComputeNodeUpdateUserOptions
  nameWithType: ComputeNodeUpdateUserOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNode
  name: ComputeNode
  nameWithType: ComputeNode
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.get*
  name: get
  nameWithType: ComputeNodes.get
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.get
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.ComputeNode>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync*
  name: getAsync
  nameWithType: ComputeNodes.getAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.batch.protocol.models.ComputeNode>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.ComputeNode,com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders
    name: ComputeNodeGetHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: ComputeNodes.getWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
  name: ComputeNodeGetOptions
  nameWithType: ComputeNodeGetOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reboot*
  name: reboot
  nameWithType: ComputeNodes.reboot
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reboot
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync*
  name: rebootAsync
  nameWithType: ComputeNodes.rebootAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders
    name: ComputeNodeRebootHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync*
  name: rebootWithServiceResponseAsync
  nameWithType: ComputeNodes.rebootWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
  name: ComputeNodeRebootOption
  nameWithType: ComputeNodeRebootOption
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
  name: ComputeNodeRebootOptions
  nameWithType: ComputeNodeRebootOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimage*
  name: reimage
  nameWithType: ComputeNodes.reimage
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimage
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync*
  name: reimageAsync
  nameWithType: ComputeNodes.reimageAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders
    name: ComputeNodeReimageHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync*
  name: reimageWithServiceResponseAsync
  nameWithType: ComputeNodes.reimageWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
  name: ComputeNodeReimageOption
  nameWithType: ComputeNodeReimageOption
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
  name: ComputeNodeReimageOptions
  nameWithType: ComputeNodeReimageOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling*
  name: disableScheduling
  nameWithType: ComputeNodes.disableScheduling
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync*
  name: disableSchedulingAsync
  nameWithType: ComputeNodes.disableSchedulingAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders
    name: ComputeNodeDisableSchedulingHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync*
  name: disableSchedulingWithServiceResponseAsync
  nameWithType: ComputeNodes.disableSchedulingWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
  name: DisableComputeNodeSchedulingOption
  nameWithType: DisableComputeNodeSchedulingOption
  fullName: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
  name: ComputeNodeDisableSchedulingOptions
  nameWithType: ComputeNodeDisableSchedulingOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling*
  name: enableScheduling
  nameWithType: ComputeNodes.enableScheduling
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync*
  name: enableSchedulingAsync
  nameWithType: ComputeNodes.enableSchedulingAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders
    name: ComputeNodeEnableSchedulingHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync*
  name: enableSchedulingWithServiceResponseAsync
  nameWithType: ComputeNodes.enableSchedulingWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
  name: ComputeNodeEnableSchedulingOptions
  nameWithType: ComputeNodeEnableSchedulingOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
  name: ComputeNodeGetRemoteLoginSettingsResult
  nameWithType: ComputeNodeGetRemoteLoginSettingsResult
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings*
  name: getRemoteLoginSettings
  nameWithType: ComputeNodes.getRemoteLoginSettings
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    name: ComputeNodeGetRemoteLoginSettingsResult
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    name: ComputeNodeGetRemoteLoginSettingsResult
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync*
  name: getRemoteLoginSettingsAsync
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    name: ComputeNodeGetRemoteLoginSettingsResult
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    name: ComputeNodeGetRemoteLoginSettingsResult
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders
    name: ComputeNodeGetRemoteLoginSettingsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync*
  name: getRemoteLoginSettingsWithServiceResponseAsync
  nameWithType: ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
  name: ComputeNodeGetRemoteLoginSettingsOptions
  nameWithType: ComputeNodeGetRemoteLoginSettingsOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: com.microsoft.rest.ServiceCallback<java.io.InputStream>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.io.InputStream>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync*
  name: getRemoteDesktopAsync
  nameWithType: ComputeNodes.getRemoteDesktopAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<java.io.InputStream>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.io.InputStream,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders
    name: ComputeNodeGetRemoteDesktopHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync*
  name: getRemoteDesktopWithServiceResponseAsync
  nameWithType: ComputeNodes.getRemoteDesktopWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
  name: UploadBatchServiceLogsConfiguration
  nameWithType: UploadBatchServiceLogsConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
- uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
  name: UploadBatchServiceLogsResult
  nameWithType: UploadBatchServiceLogsResult
  fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs*
  name: uploadBatchServiceLogs
  nameWithType: ComputeNodes.uploadBatchServiceLogs
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
    name: UploadBatchServiceLogsResult
    fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
    name: UploadBatchServiceLogsResult
    fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync*
  name: uploadBatchServiceLogsAsync
  nameWithType: ComputeNodes.uploadBatchServiceLogsAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
    name: UploadBatchServiceLogsResult
    fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
    name: UploadBatchServiceLogsResult
    fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders
    name: ComputeNodeUploadBatchServiceLogsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync*
  name: uploadBatchServiceLogsWithServiceResponseAsync
  nameWithType: ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions
  name: ComputeNodeUploadBatchServiceLogsOptions
  nameWithType: ComputeNodeUploadBatchServiceLogsOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.ComputeNode>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.list*
  name: list
  nameWithType: ComputeNodes.list
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.list
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.ComputeNode>
  spec.java:
  - uid: com.microsoft.azure.ListOperationCallback
    name: ListOperationCallback
    fullName: com.microsoft.azure.ListOperationCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.ComputeNode>>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync*
  name: listAsync
  nameWithType: ComputeNodes.listAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.ComputeNode>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders
    name: ComputeNodeListHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync*
  name: listWithServiceResponseAsync
  nameWithType: ComputeNodes.listWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
  name: ComputeNodeListOptions
  nameWithType: ComputeNodeListOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNext*
  name: listNext
  nameWithType: ComputeNodes.listNext
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNext
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync*
  name: listNextAsync
  nameWithType: ComputeNodes.listNextAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync*
  name: listNextWithServiceResponseAsync
  nameWithType: ComputeNodes.listNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
  name: ComputeNodeListNextOptions
  nameWithType: ComputeNodeListNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.microsoft.rest.ServiceCallback
  name: ServiceCallback
  nameWithType: ServiceCallback
  fullName: com.microsoft.rest.ServiceCallback
- uid: com.microsoft.rest.ServiceFuture
  name: ServiceFuture
  nameWithType: ServiceFuture
  fullName: com.microsoft.rest.ServiceFuture
- uid: rx.Observable
  name: Observable
  nameWithType: Observable
  fullName: rx.Observable
- uid: com.microsoft.rest.ServiceResponseWithHeaders
  name: ServiceResponseWithHeaders
  nameWithType: ServiceResponseWithHeaders
  fullName: com.microsoft.rest.ServiceResponseWithHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders
  name: Void,ComputeNodeAddUserHeaders
  nameWithType: Void,ComputeNodeAddUserHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders
  name: Void,ComputeNodeDeleteUserHeaders
  nameWithType: Void,ComputeNodeDeleteUserHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders
  name: Void,ComputeNodeUpdateUserHeaders
  nameWithType: Void,ComputeNodeUpdateUserHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders
- uid: com.microsoft.azure.batch.protocol.models.ComputeNode,com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders
  name: ComputeNode,ComputeNodeGetHeaders
  nameWithType: ComputeNode,ComputeNodeGetHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNode,com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders
  name: Void,ComputeNodeRebootHeaders
  nameWithType: Void,ComputeNodeRebootHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders
  name: Void,ComputeNodeReimageHeaders
  nameWithType: Void,ComputeNodeReimageHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders
  name: Void,ComputeNodeDisableSchedulingHeaders
  nameWithType: Void,ComputeNodeDisableSchedulingHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders
  name: Void,ComputeNodeEnableSchedulingHeaders
  nameWithType: Void,ComputeNodeEnableSchedulingHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders
  name: ComputeNodeGetRemoteLoginSettingsResult,ComputeNodeGetRemoteLoginSettingsHeaders
  nameWithType: ComputeNodeGetRemoteLoginSettingsResult,ComputeNodeGetRemoteLoginSettingsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders
- uid: java.io.InputStream,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders
  name: InputStream,ComputeNodeGetRemoteDesktopHeaders
  nameWithType: InputStream,ComputeNodeGetRemoteDesktopHeaders
  fullName: java.io.InputStream,com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders
- uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders
  name: UploadBatchServiceLogsResult,ComputeNodeUploadBatchServiceLogsHeaders
  nameWithType: UploadBatchServiceLogsResult,ComputeNodeUploadBatchServiceLogsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult,com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders
- uid: com.microsoft.azure.PagedList
  name: PagedList
  nameWithType: PagedList
  fullName: com.microsoft.azure.PagedList
- uid: com.microsoft.azure.ListOperationCallback
  name: ListOperationCallback
  nameWithType: ListOperationCallback
  fullName: com.microsoft.azure.ListOperationCallback
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.Page
  name: Page
  nameWithType: Page
  fullName: com.microsoft.azure.Page
- uid: com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders
  name: ComputeNode>,ComputeNodeListHeaders
  nameWithType: ComputeNode>,ComputeNodeListHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNode>,com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders
