### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.ComputeNodes
  id: ComputeNodes
  parent: com.microsoft.azure.batch.protocol
  children:
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUser(String,String,ComputeNodeUser)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUser(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String,String,ComputeNodeUser)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String,String,ComputeNodeUser,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(String,String,ComputeNodeUser)
  - com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(String,String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(String,String,String,ComputeNodeDeleteUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String,String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(String,String,String,ComputeNodeDeleteUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(String,String,ComputeNodeEnableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String,String,ComputeNodeEnableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.get(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.get(String,String,ComputeNodeGetOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String,String,ComputeNodeGetOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String,String,ComputeNodeGetOptions,final ServiceCallback<ComputeNode>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String,String,final ServiceCallback<ComputeNode>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String,String,ComputeNodeGetRemoteDesktopOptions,OutputStream)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String,String,OutputStream)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions,final ServiceCallback<InputStream>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String,String,final ServiceCallback<InputStream>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String,String,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(String,String,ComputeNodeGetOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.list(final String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.list(final String,final ComputeNodeListOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String,final ComputeNodeListOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String,final ComputeNodeListOptions,final ListOperationCallback<ComputeNode>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String,final ListOperationCallback<ComputeNode>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNext(final String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNext(final String,final ComputeNodeListNextOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String,final ComputeNodeListNextOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String,final ComputeNodeListNextOptions,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(final String,final ComputeNodeListNextOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(final String,final ComputeNodeListOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reboot(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reboot(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimage(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimage(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(String,String,String,NodeUpdateUserParameter)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String,String,String,NodeUpdateUserParameter)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String,String,String,NodeUpdateUserParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter)
  - com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs(String,String,UploadBatchServiceLogsConfiguration)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs(String,String,UploadBatchServiceLogsConfiguration,ComputeNodeUploadBatchServiceLogsOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String,String,UploadBatchServiceLogsConfiguration)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String,String,UploadBatchServiceLogsConfiguration,ComputeNodeUploadBatchServiceLogsOptions)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String,String,UploadBatchServiceLogsConfiguration,ComputeNodeUploadBatchServiceLogsOptions,final ServiceCallback<UploadBatchServiceLogsResult>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String,String,UploadBatchServiceLogsConfiguration,final ServiceCallback<UploadBatchServiceLogsResult>)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(String,String,UploadBatchServiceLogsConfiguration)
  - com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(String,String,UploadBatchServiceLogsConfiguration,ComputeNodeUploadBatchServiceLogsOptions)
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: ComputeNodes
  nameWithType: ComputeNodes
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes
  type: Interface
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
      branch: master
      repo: https://github.com/Azure/azure-batch-sdk-for-java
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 63
  package: com.microsoft.azure.batch.protocol
  summary: "<p>An instance of this class provides access to all the operations defined in ComputeNodes. </p>"
  syntax:
    content: public interface ComputeNodes
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUser(String,String,ComputeNodeUser)
  id: addUser(String,String,ComputeNodeUser)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: addUser(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodes.addUser(String poolId, String nodeId, ComputeNodeUser user)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUser(String poolId, String nodeId, ComputeNodeUser user)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUser*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 75
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public void addUser(String poolId, String nodeId, ComputeNodeUser user)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: <p>The user account to be created. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUser(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  id: addUser(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  nameWithType: ComputeNodes.addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUser*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 125
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public void addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: <p>The user account to be created. </p>
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String,String,ComputeNodeUser)
  id: addUserAsync(String,String,ComputeNodeUser)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 100
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: <p>The user account to be created. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  id: addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  nameWithType: ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 152
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: <p>The user account to be created. </p>
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions,final ServiceCallback<Void>)
  id: addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 139
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: <p>The user account to be created. </p>
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String,String,ComputeNodeUser,final ServiceCallback<Void>)
  id: addUserAsync(String,String,ComputeNodeUser,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 88
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: <p>The user account to be created. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(String,String,ComputeNodeUser)
  id: addUserWithServiceResponseAsync(String,String,ComputeNodeUser)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodes.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 112
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeAddUserHeaders>> addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: <p>The user account to be created. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  id: addUserWithServiceResponseAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  nameWithType: ComputeNodes.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 165
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeAddUserHeaders>> addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
      description: <p>The user account to be created. </p>
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(String,String,String)
  id: deleteUser(String,String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: deleteUser(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodes.deleteUser(String poolId, String nodeId, String userName)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(String poolId, String nodeId, String userName)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 178
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public void deleteUser(String poolId, String nodeId, String userName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(String,String,String,ComputeNodeDeleteUserOptions)
  id: deleteUser(String,String,String,ComputeNodeDeleteUserOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodes.deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 228
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public void deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String,String,String)
  id: deleteUserAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: deleteUserAsync(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 203
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deleteUserAsync(String poolId, String nodeId, String userName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions)
  id: deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 255
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions,final ServiceCallback<Void>)
  id: deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 242
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String,String,String,final ServiceCallback<Void>)
  id: deleteUserAsync(String,String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 191
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(String,String,String)
  id: deleteUserWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodes.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 215
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeDeleteUserHeaders>> deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(String,String,String,ComputeNodeDeleteUserOptions)
  id: deleteUserWithServiceResponseAsync(String,String,String,ComputeNodeDeleteUserOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodes.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 268
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeDeleteUserHeaders>> deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(String,String)
  id: disableScheduling(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: disableScheduling(String poolId, String nodeId)
  nameWithType: ComputeNodes.disableScheduling(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 678
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables task scheduling on the specified compute node. You can disable task scheduling on a node only if its current scheduling state is enabled.</p>\r\n<p></p>"
  syntax:
    content: public void disableScheduling(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  id: disableScheduling(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  nameWithType: ComputeNodes.disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 725
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables task scheduling on the specified compute node. You can disable task scheduling on a node only if its current scheduling state is enabled.</p>\r\n<p></p>"
  syntax:
    content: public void disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
      description: "<p>What to do with currently running tasks when disabling task scheduling on the compute node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion' </p>"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String,String)
  id: disableSchedulingAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: disableSchedulingAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.disableSchedulingAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 701
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables task scheduling on the specified compute node. You can disable task scheduling on a node only if its current scheduling state is enabled.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> disableSchedulingAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  id: disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  nameWithType: ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 752
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables task scheduling on the specified compute node. You can disable task scheduling on a node only if its current scheduling state is enabled.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
      description: "<p>What to do with currently running tasks when disabling task scheduling on the compute node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion' </p>"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions,final ServiceCallback<Void>)
  id: disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 739
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables task scheduling on the specified compute node. You can disable task scheduling on a node only if its current scheduling state is enabled.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
      description: "<p>What to do with currently running tasks when disabling task scheduling on the compute node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion' </p>"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String,String,final ServiceCallback<Void>)
  id: disableSchedulingAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: disableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 690
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables task scheduling on the specified compute node. You can disable task scheduling on a node only if its current scheduling state is enabled.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> disableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(String,String)
  id: disableSchedulingWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 712
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables task scheduling on the specified compute node. You can disable task scheduling on a node only if its current scheduling state is enabled.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeDisableSchedulingHeaders>> disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  id: disableSchedulingWithServiceResponseAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  nameWithType: ComputeNodes.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 765
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables task scheduling on the specified compute node. You can disable task scheduling on a node only if its current scheduling state is enabled.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeDisableSchedulingHeaders>> disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
      description: "<p>What to do with currently running tasks when disabling task scheduling on the compute node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion' </p>"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(String,String)
  id: enableScheduling(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: enableScheduling(String poolId, String nodeId)
  nameWithType: ComputeNodes.enableScheduling(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 777
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables task scheduling on the specified compute node. You can enable task scheduling on a node only if its current scheduling state is disabled.</p>\r\n<p></p>"
  syntax:
    content: public void enableScheduling(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(String,String,ComputeNodeEnableSchedulingOptions)
  id: enableScheduling(String,String,ComputeNodeEnableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodes.enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 823
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables task scheduling on the specified compute node. You can enable task scheduling on a node only if its current scheduling state is disabled.</p>\r\n<p></p>"
  syntax:
    content: public void enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String,String)
  id: enableSchedulingAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: enableSchedulingAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.enableSchedulingAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 800
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables task scheduling on the specified compute node. You can enable task scheduling on a node only if its current scheduling state is disabled.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> enableSchedulingAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions)
  id: enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 848
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables task scheduling on the specified compute node. You can enable task scheduling on a node only if its current scheduling state is disabled.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions,final ServiceCallback<Void>)
  id: enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 836
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables task scheduling on the specified compute node. You can enable task scheduling on a node only if its current scheduling state is disabled.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String,String,final ServiceCallback<Void>)
  id: enableSchedulingAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: enableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 789
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables task scheduling on the specified compute node. You can enable task scheduling on a node only if its current scheduling state is disabled.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> enableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String,String)
  id: enableSchedulingWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 811
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables task scheduling on the specified compute node. You can enable task scheduling on a node only if its current scheduling state is disabled.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String,String,ComputeNodeEnableSchedulingOptions)
  id: enableSchedulingWithServiceResponseAsync(String,String,ComputeNodeEnableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 860
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables task scheduling on the specified compute node. You can enable task scheduling on a node only if its current scheduling state is disabled.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.get(String,String)
  id: get(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: get(String poolId, String nodeId)
  nameWithType: ComputeNodes.get(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.get(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 391
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified compute node.</p>\r\n<p></p>"
  syntax:
    content: public ComputeNode get(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNode
      description: <p>the ComputeNode object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.get(String,String,ComputeNodeGetOptions)
  id: get(String,String,ComputeNodeGetOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  nameWithType: ComputeNodes.get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 434
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified compute node.</p>\r\n<p></p>"
  syntax:
    content: public ComputeNode get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNode
      description: <p>the ComputeNode object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String,String)
  id: getAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 412
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified compute node.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ComputeNode> getAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the observable to the ComputeNode object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String,String,ComputeNodeGetOptions)
  id: getAsync(String,String,ComputeNodeGetOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  nameWithType: ComputeNodes.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 457
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified compute node.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ComputeNode> getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the observable to the ComputeNode object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String,String,ComputeNodeGetOptions,final ServiceCallback<ComputeNode>)
  id: getAsync(String,String,ComputeNodeGetOptions,final ServiceCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, final ServiceCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, final ServiceCallback<ComputeNode> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, final ServiceCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 446
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified compute node.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ComputeNode> getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, final ServiceCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String,String,final ServiceCallback<ComputeNode>)
  id: getAsync(String,String,final ServiceCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getAsync(String poolId, String nodeId, final ServiceCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.getAsync(String poolId, String nodeId, final ServiceCallback<ComputeNode> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String poolId, String nodeId, final ServiceCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 402
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified compute node.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ComputeNode> getAsync(String poolId, String nodeId, final ServiceCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String,String,ComputeNodeGetRemoteDesktopOptions,OutputStream)
  id: getRemoteDesktop(String,String,ComputeNodeGetRemoteDesktopOptions,OutputStream)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  nameWithType: ComputeNodes.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1005
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the Remote Desktop Protocol file for the specified compute node. </p>"
  syntax:
    content: public void getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
      description: <p>Additional parameters for the operation </p>
    - id: outputStream
      type: 3a09e348
      description: <p>The OutputStream object which data will be written to if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String,String,OutputStream)
  id: getRemoteDesktop(String,String,OutputStream)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  nameWithType: ComputeNodes.getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 992
  package: com.microsoft.azure.batch.protocol
  syntax:
    content: public void getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: outputStream
      type: 3a09e348
      description: <p>The OutputStream object which data will be written to if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String,String)
  id: getRemoteDesktopAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteDesktopAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 980
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with a cloud service configuration. For pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.</p>\r\n<p></p>"
  syntax:
    content: public Observable<InputStream> getRemoteDesktopAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  id: getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  nameWithType: ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1041
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with a cloud service configuration. For pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.</p>\r\n<p></p>"
  syntax:
    content: public Observable<InputStream> getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions,final ServiceCallback<InputStream>)
  id: getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final ServiceCallback<InputStream> serviceCallback)
  nameWithType: ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final ServiceCallback<InputStream> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final ServiceCallback<InputStream> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1029
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with a cloud service configuration. For pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<InputStream> getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String,String,final ServiceCallback<InputStream>)
  id: getRemoteDesktopAsync(String,String,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteDesktopAsync(String poolId, String nodeId, final ServiceCallback<InputStream> serviceCallback)
  nameWithType: ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, final ServiceCallback<InputStream> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, final ServiceCallback<InputStream> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 969
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with a cloud service configuration. For pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<InputStream> getRemoteDesktopAsync(String poolId, String nodeId, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String,String)
  id: getRemoteDesktopWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1016
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with a cloud service configuration. For pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaderse7daa122
      description: <p>the observable to the InputStream object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  id: getRemoteDesktopWithServiceResponseAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  nameWithType: ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1053
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with a cloud service configuration. For pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaderse7daa122
      description: <p>the observable to the InputStream object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(String,String)
  id: getRemoteLoginSettings(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteLoginSettings(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteLoginSettings(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 873
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property. For pools created with a cloud service configuration, see the GetRemoteDesktop API.</p>\r\n<p></p>"
  syntax:
    content: public ComputeNodeGetRemoteLoginSettingsResult getRemoteLoginSettings(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
      description: <p>the ComputeNodeGetRemoteLoginSettingsResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  id: getRemoteLoginSettings(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodes.getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 920
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property. For pools created with a cloud service configuration, see the GetRemoteDesktop API.</p>\r\n<p></p>"
  syntax:
    content: public ComputeNodeGetRemoteLoginSettingsResult getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
      description: <p>the ComputeNodeGetRemoteLoginSettingsResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String,String)
  id: getRemoteLoginSettingsAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 896
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property. For pools created with a cloud service configuration, see the GetRemoteDesktop API.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResulta08ddfce
      description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  id: getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 945
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property. For pools created with a cloud service configuration, see the GetRemoteDesktop API.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResulta08ddfce
      description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  id: getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 933
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property. For pools created with a cloud service configuration, see the GetRemoteDesktop API.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String,String,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  id: getRemoteLoginSettingsAsync(String,String,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 885
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property. For pools created with a cloud service configuration, see the GetRemoteDesktop API.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String,String)
  id: getRemoteLoginSettingsWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 907
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property. For pools created with a cloud service configuration, see the GetRemoteDesktop API.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResultb33c76fccom.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaderse7daa122
      description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  id: getRemoteLoginSettingsWithServiceResponseAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 957
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property. For pools created with a cloud service configuration, see the GetRemoteDesktop API.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResultb33c76fccom.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaderse7daa122
      description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(String,String)
  id: getWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 422
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified compute node.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<ComputeNode, ComputeNodeGetHeaders>> getWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.ComputeNodeb33c76fccom.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaderse7daa122
      description: <p>the observable to the ComputeNode object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(String,String,ComputeNodeGetOptions)
  id: getWithServiceResponseAsync(String,String,ComputeNodeGetOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  nameWithType: ComputeNodes.getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 468
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified compute node.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<ComputeNode, ComputeNodeGetHeaders>> getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.ComputeNodeb33c76fccom.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaderse7daa122
      description: <p>the observable to the ComputeNode object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.list(final String)
  id: list(final String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: list(final String poolId)
  nameWithType: ComputeNodes.list(final String poolId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.list(final String poolId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1169
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<ComputeNode> list(final String poolId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.list(final String,final ComputeNodeListOptions)
  id: list(final String,final ComputeNodeListOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodes.list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1208
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<ComputeNode> list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String)
  id: listAsync(final String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listAsync(final String poolId)
  nameWithType: ComputeNodes.listAsync(final String poolId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String poolId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1188
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<ComputeNode>> listAsync(final String poolId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String,final ComputeNodeListOptions)
  id: listAsync(final String,final ComputeNodeListOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodes.listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1229
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<ComputeNode>> listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String,final ComputeNodeListOptions,final ListOperationCallback<ComputeNode>)
  id: listAsync(final String,final ComputeNodeListOptions,final ListOperationCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions, final ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions, final ListOperationCallback<ComputeNode> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions, final ListOperationCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1219
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<ComputeNode>> listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions, final ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String,final ListOperationCallback<ComputeNode>)
  id: listAsync(final String,final ListOperationCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listAsync(final String poolId, final ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.listAsync(final String poolId, final ListOperationCallback<ComputeNode> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String poolId, final ListOperationCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1179
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<ComputeNode>> listAsync(final String poolId, final ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNext(final String)
  id: listNext(final String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listNext(final String nextPageLink)
  nameWithType: ComputeNodes.listNext(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNext(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1250
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<ComputeNode> listNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNext(final String,final ComputeNodeListNextOptions)
  id: listNext(final String,final ComputeNodeListNextOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listNext(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodes.listNext(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNext(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1290
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<ComputeNode> listNext(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String)
  id: listNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink)
  nameWithType: ComputeNodes.listNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1270
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<ComputeNode>> listNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String,final ComputeNodeListNextOptions)
  id: listNextAsync(final String,final ComputeNodeListNextOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodes.listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1312
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<ComputeNode>> listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String,final ComputeNodeListNextOptions,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  id: listNextAsync(final String,final ComputeNodeListNextOptions,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1302
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<ComputeNode>> listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  id: listNextAsync(final String,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.listNextAsync(final String nextPageLink, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String nextPageLink, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1261
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<ComputeNode>> listNextAsync(final String nextPageLink, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(final String)
  id: listNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: ComputeNodes.listNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1279
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.ComputeNode8135b5ebcom.microsoft.azure.batch.protocol.models.ComputeNodeListHeaderse7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(final String,final ComputeNodeListNextOptions)
  id: listNextWithServiceResponseAsync(final String,final ComputeNodeListNextOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodes.listNextWithServiceResponseAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1322
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.ComputeNode8135b5ebcom.microsoft.azure.batch.protocol.models.ComputeNodeListHeaderse7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(final String)
  id: listWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listWithServiceResponseAsync(final String poolId)
  nameWithType: ComputeNodes.listWithServiceResponseAsync(final String poolId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(final String poolId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1197
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listWithServiceResponseAsync(final String poolId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.ComputeNode8135b5ebcom.microsoft.azure.batch.protocol.models.ComputeNodeListHeaderse7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(final String,final ComputeNodeListOptions)
  id: listWithServiceResponseAsync(final String,final ComputeNodeListOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: listWithServiceResponseAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodes.listWithServiceResponseAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1239
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the compute nodes in the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listWithServiceResponseAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.ComputeNode8135b5ebcom.microsoft.azure.batch.protocol.models.ComputeNodeListHeaderse7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reboot(String,String)
  id: reboot(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: reboot(String poolId, String nodeId)
  nameWithType: ComputeNodes.reboot(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reboot(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reboot*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 480
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public void reboot(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reboot(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  id: reboot(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  nameWithType: ComputeNodes.reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reboot*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 527
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public void reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
      description: "<p>When to reboot the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String,String)
  id: rebootAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: rebootAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.rebootAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 503
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> rebootAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  id: rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  nameWithType: ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 554
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
      description: "<p>When to reboot the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions,final ServiceCallback<Void>)
  id: rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 541
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
      description: "<p>When to reboot the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String,String,final ServiceCallback<Void>)
  id: rebootAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: rebootAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.rebootAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 492
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> rebootAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(String,String)
  id: rebootWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: rebootWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.rebootWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 514
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeRebootHeaders>> rebootWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  id: rebootWithServiceResponseAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  nameWithType: ComputeNodes.rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 567
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeRebootHeaders>> rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
      description: "<p>When to reboot the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimage(String,String)
  id: reimage(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: reimage(String poolId, String nodeId)
  nameWithType: ComputeNodes.reimage(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimage(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimage*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 579
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>\r\n<p></p>"
  syntax:
    content: public void reimage(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimage(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  id: reimage(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  nameWithType: ComputeNodes.reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimage*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 626
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>\r\n<p></p>"
  syntax:
    content: public void reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
      description: "<p>When to reimage the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String,String)
  id: reimageAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: reimageAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.reimageAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 602
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> reimageAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  id: reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  nameWithType: ComputeNodes.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 653
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
      description: "<p>When to reimage the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions,final ServiceCallback<Void>)
  id: reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 640
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
      description: "<p>When to reimage the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String,String,final ServiceCallback<Void>)
  id: reimageAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: reimageAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.reimageAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 591
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> reimageAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(String,String)
  id: reimageWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: reimageWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.reimageWithServiceResponseAsync(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 613
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeReimageHeaders>> reimageWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  id: reimageWithServiceResponseAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  nameWithType: ComputeNodes.reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 666
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeReimageHeaders>> reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
      description: "<p>When to reimage the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(String,String,String,NodeUpdateUserParameter)
  id: updateUser(String,String,String,NodeUpdateUserParameter)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  nameWithType: ComputeNodes.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 282
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the password and expiration time of a user account on the specified compute node. This operation replaces of all the updatable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public void updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: <p>The parameters for the request. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  id: updateUser(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  nameWithType: ComputeNodes.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 336
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the password and expiration time of a user account on the specified compute node. This operation replaces of all the updatable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public void updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: <p>The parameters for the request. </p>
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String,String,String,NodeUpdateUserParameter)
  id: updateUserAsync(String,String,String,NodeUpdateUserParameter)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  nameWithType: ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 309
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the password and expiration time of a user account on the specified compute node. This operation replaces of all the updatable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  id: updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  nameWithType: ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 365
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the password and expiration time of a user account on the specified compute node. This operation replaces of all the updatable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: <p>The parameters for the request. </p>
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions,final ServiceCallback<Void>)
  id: updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 351
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the password and expiration time of a user account on the specified compute node. This operation replaces of all the updatable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: <p>The parameters for the request. </p>
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String,String,String,NodeUpdateUserParameter,final ServiceCallback<Void>)
  id: updateUserAsync(String,String,String,NodeUpdateUserParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 296
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the password and expiration time of a user account on the specified compute node. This operation replaces of all the updatable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter)
  id: updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  nameWithType: ComputeNodes.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 322
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the password and expiration time of a user account on the specified compute node. This operation replaces of all the updatable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeUpdateUserHeaders>> updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  id: updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  nameWithType: ComputeNodes.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 379
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the password and expiration time of a user account on the specified compute node. This operation replaces of all the updatable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeUpdateUserHeaders>> updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
      description: <p>The parameters for the request. </p>
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs(String,String,UploadBatchServiceLogsConfiguration)
  id: uploadBatchServiceLogs(String,String,UploadBatchServiceLogsConfiguration)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  nameWithType: ComputeNodes.uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1067
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Upload Azure Batch service log files from the specified compute node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.</p>\r\n<p></p>"
  syntax:
    content: public UploadBatchServiceLogsResult uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to upload the Azure Batch service log files. </p>
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: <p>The Azure Batch service log files upload configuration. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
      description: <p>the UploadBatchServiceLogsResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs(String,String,UploadBatchServiceLogsConfiguration,ComputeNodeUploadBatchServiceLogsOptions)
  id: uploadBatchServiceLogs(String,String,UploadBatchServiceLogsConfiguration,ComputeNodeUploadBatchServiceLogsOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  nameWithType: ComputeNodes.uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1118
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Upload Azure Batch service log files from the specified compute node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.</p>\r\n<p></p>"
  syntax:
    content: public UploadBatchServiceLogsResult uploadBatchServiceLogs(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to upload the Azure Batch service log files. </p>
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: <p>The Azure Batch service log files upload configuration. </p>
    - id: computeNodeUploadBatchServiceLogsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
      description: <p>the UploadBatchServiceLogsResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String,String,UploadBatchServiceLogsConfiguration)
  id: uploadBatchServiceLogsAsync(String,String,UploadBatchServiceLogsConfiguration)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  nameWithType: ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1092
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Upload Azure Batch service log files from the specified compute node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.</p>\r\n<p></p>"
  syntax:
    content: public Observable<UploadBatchServiceLogsResult> uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to upload the Azure Batch service log files. </p>
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: <p>The Azure Batch service log files upload configuration. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResulta08ddfce
      description: <p>the observable to the UploadBatchServiceLogsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String,String,UploadBatchServiceLogsConfiguration,ComputeNodeUploadBatchServiceLogsOptions)
  id: uploadBatchServiceLogsAsync(String,String,UploadBatchServiceLogsConfiguration,ComputeNodeUploadBatchServiceLogsOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  nameWithType: ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1145
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Upload Azure Batch service log files from the specified compute node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.</p>\r\n<p></p>"
  syntax:
    content: public Observable<UploadBatchServiceLogsResult> uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to upload the Azure Batch service log files. </p>
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: <p>The Azure Batch service log files upload configuration. </p>
    - id: computeNodeUploadBatchServiceLogsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResulta08ddfce
      description: <p>the observable to the UploadBatchServiceLogsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String,String,UploadBatchServiceLogsConfiguration,ComputeNodeUploadBatchServiceLogsOptions,final ServiceCallback<UploadBatchServiceLogsResult>)
  id: uploadBatchServiceLogsAsync(String,String,UploadBatchServiceLogsConfiguration,ComputeNodeUploadBatchServiceLogsOptions,final ServiceCallback<UploadBatchServiceLogsResult>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions, final ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
  nameWithType: ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions, final ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions, final ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1132
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Upload Azure Batch service log files from the specified compute node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<UploadBatchServiceLogsResult> uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions, final ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to upload the Azure Batch service log files. </p>
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: <p>The Azure Batch service log files upload configuration. </p>
    - id: computeNodeUploadBatchServiceLogsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String,String,UploadBatchServiceLogsConfiguration,final ServiceCallback<UploadBatchServiceLogsResult>)
  id: uploadBatchServiceLogsAsync(String,String,UploadBatchServiceLogsConfiguration,final ServiceCallback<UploadBatchServiceLogsResult>)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, final ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
  nameWithType: ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, final ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, final ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1080
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Upload Azure Batch service log files from the specified compute node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<UploadBatchServiceLogsResult> uploadBatchServiceLogsAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, final ServiceCallback<UploadBatchServiceLogsResult> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to upload the Azure Batch service log files. </p>
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: <p>The Azure Batch service log files upload configuration. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(String,String,UploadBatchServiceLogsConfiguration)
  id: uploadBatchServiceLogsWithServiceResponseAsync(String,String,UploadBatchServiceLogsConfiguration)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  nameWithType: ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1104
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Upload Azure Batch service log files from the specified compute node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<UploadBatchServiceLogsResult, ComputeNodeUploadBatchServiceLogsHeaders>> uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to upload the Azure Batch service log files. </p>
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: <p>The Azure Batch service log files upload configuration. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResultb33c76fccom.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaderse7daa122
      description: <p>the observable to the UploadBatchServiceLogsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(String,String,UploadBatchServiceLogsConfiguration,ComputeNodeUploadBatchServiceLogsOptions)
  id: uploadBatchServiceLogsWithServiceResponseAsync(String,String,UploadBatchServiceLogsConfiguration,ComputeNodeUploadBatchServiceLogsOptions)
  parent: com.microsoft.azure.batch.protocol.ComputeNodes
  href: com.microsoft.azure.batch.protocol.ComputeNodes.yml
  langs:
  - java
  name: uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  nameWithType: ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
  overload: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/ComputeNodes.java
    startLine: 1158
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Upload Azure Batch service log files from the specified compute node to Azure Blob Storage. This is for gathering Azure Batch service log files in an automated fashion from nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<UploadBatchServiceLogsResult, ComputeNodeUploadBatchServiceLogsHeaders>> uploadBatchServiceLogsWithServiceResponseAsync(String poolId, String nodeId, UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to upload the Azure Batch service log files. </p>
    - id: uploadBatchServiceLogsConfiguration
      type: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
      description: <p>The Azure Batch service log files upload configuration. </p>
    - id: computeNodeUploadBatchServiceLogsOptions
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResultb33c76fccom.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaderse7daa122
      description: <p>the observable to the UploadBatchServiceLogsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: c8683d81
  spec.java:
  - name: BatchErrorException
    fullName: BatchErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUser*
  name: addUser
  nameWithType: ComputeNodes.addUser
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUser
  package: com.microsoft.azure.batch.protocol
- uid: 1c186eb5
  spec.java:
  - name: final ServiceCallback<Void>
    fullName: final ServiceCallback<Void>
- uid: aa81d378
  spec.java:
  - name: ServiceFuture<Void>
    fullName: ServiceFuture<Void>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync*
  name: addUserAsync
  nameWithType: ComputeNodes.addUserAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync
  package: com.microsoft.azure.batch.protocol
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders
    name: ComputeNodeAddUserHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync*
  name: addUserWithServiceResponseAsync
  nameWithType: ComputeNodes.addUserWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser*
  name: deleteUser
  nameWithType: ComputeNodes.deleteUser
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync*
  name: deleteUserAsync
  nameWithType: ComputeNodes.deleteUserAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders
    name: ComputeNodeDeleteUserHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync*
  name: deleteUserWithServiceResponseAsync
  nameWithType: ComputeNodes.deleteUserWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser*
  name: updateUser
  nameWithType: ComputeNodes.updateUser
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUser
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync*
  name: updateUserAsync
  nameWithType: ComputeNodes.updateUserAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders
    name: ComputeNodeUpdateUserHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync*
  name: updateUserWithServiceResponseAsync
  nameWithType: ComputeNodes.updateUserWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.get*
  name: get
  nameWithType: ComputeNodes.get
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.get
  package: com.microsoft.azure.batch.protocol
- uid: 897eb10acom.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models.ComputeNode.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models.ComputeNode.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync*
  name: getAsync
  nameWithType: ComputeNodes.getAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getAsync
  package: com.microsoft.azure.batch.protocol
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models.ComputeNode.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models.ComputeNodeb33c76fccom.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models.ComputeNode.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders
    name: ComputeNodeGetHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: ComputeNodes.getWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reboot*
  name: reboot
  nameWithType: ComputeNodes.reboot
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reboot
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync*
  name: rebootAsync
  nameWithType: ComputeNodes.rebootAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders
    name: ComputeNodeRebootHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync*
  name: rebootWithServiceResponseAsync
  nameWithType: ComputeNodes.rebootWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimage*
  name: reimage
  nameWithType: ComputeNodes.reimage
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimage
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync*
  name: reimageAsync
  nameWithType: ComputeNodes.reimageAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders
    name: ComputeNodeReimageHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync*
  name: reimageWithServiceResponseAsync
  nameWithType: ComputeNodes.reimageWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling*
  name: disableScheduling
  nameWithType: ComputeNodes.disableScheduling
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync*
  name: disableSchedulingAsync
  nameWithType: ComputeNodes.disableSchedulingAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders
    name: ComputeNodeDisableSchedulingHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync*
  name: disableSchedulingWithServiceResponseAsync
  nameWithType: ComputeNodes.disableSchedulingWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling*
  name: enableScheduling
  nameWithType: ComputeNodes.enableScheduling
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync*
  name: enableSchedulingAsync
  nameWithType: ComputeNodes.enableSchedulingAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders
    name: ComputeNodeEnableSchedulingHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync*
  name: enableSchedulingWithServiceResponseAsync
  nameWithType: ComputeNodes.enableSchedulingWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings*
  name: getRemoteLoginSettings
  nameWithType: ComputeNodes.getRemoteLoginSettings
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings
  package: com.microsoft.azure.batch.protocol
- uid: 897eb10acom.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    name: ComputeNodeGetRemoteLoginSettingsResult
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    name: ComputeNodeGetRemoteLoginSettingsResult
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync*
  name: getRemoteLoginSettingsAsync
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync
  package: com.microsoft.azure.batch.protocol
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    name: ComputeNodeGetRemoteLoginSettingsResult
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResultb33c76fccom.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    name: ComputeNodeGetRemoteLoginSettingsResult
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders
    name: ComputeNodeGetRemoteLoginSettingsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync*
  name: getRemoteLoginSettingsWithServiceResponseAsync
  nameWithType: ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 0377aee2
  spec.java:
  - name: final ServiceCallback<InputStream>
    fullName: final ServiceCallback<InputStream>
- uid: 8601070c
  spec.java:
  - name: ServiceFuture<InputStream>
    fullName: ServiceFuture<InputStream>
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync*
  name: getRemoteDesktopAsync
  nameWithType: ComputeNodes.getRemoteDesktopAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync
  package: com.microsoft.azure.batch.protocol
- uid: 3ab19265
  spec.java:
  - name: Observable<InputStream>
    fullName: Observable<InputStream>
- uid: 3a09e348
  spec.java:
  - name: OutputStream
    fullName: OutputStream
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop*
  name: getRemoteDesktop
  nameWithType: ComputeNodes.getRemoteDesktop
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop
  package: com.microsoft.azure.batch.protocol
- uid: 2af956f9com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<InputStream, '
    fullName: 'Observable<ServiceResponseWithHeaders<InputStream, '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders
    name: ComputeNodeGetRemoteDesktopHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync*
  name: getRemoteDesktopWithServiceResponseAsync
  nameWithType: ComputeNodes.getRemoteDesktopWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs*
  name: uploadBatchServiceLogs
  nameWithType: ComputeNodes.uploadBatchServiceLogs
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogs
  package: com.microsoft.azure.batch.protocol
- uid: 897eb10acom.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
    name: UploadBatchServiceLogsResult
    fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
    href: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
    name: UploadBatchServiceLogsResult
    fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
    href: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync*
  name: uploadBatchServiceLogsAsync
  nameWithType: ComputeNodes.uploadBatchServiceLogsAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsAsync
  package: com.microsoft.azure.batch.protocol
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
    name: UploadBatchServiceLogsResult
    fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
    href: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResultb33c76fccom.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
    name: UploadBatchServiceLogsResult
    fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
    href: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders
    name: ComputeNodeUploadBatchServiceLogsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync*
  name: uploadBatchServiceLogsWithServiceResponseAsync
  nameWithType: ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.uploadBatchServiceLogsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 36b27be0com.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models.ComputeNode.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.list*
  name: list
  nameWithType: ComputeNodes.list
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.list
  package: com.microsoft.azure.batch.protocol
- uid: 3c4303efcom.microsoft.azure.batch.protocol.models.ComputeNodea08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models.ComputeNode.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models.ComputeNode.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync*
  name: listAsync
  nameWithType: ComputeNodes.listAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listAsync
  package: com.microsoft.azure.batch.protocol
- uid: 32da0907com.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models.ComputeNode.yml
  - name: '>>'
    fullName: '>>'
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models.ComputeNode8135b5ebcom.microsoft.azure.batch.protocol.models.ComputeNodeListHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models.ComputeNode.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders
    name: ComputeNodeListHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync*
  name: listWithServiceResponseAsync
  nameWithType: ComputeNodes.listWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
    name: ComputeNodeListOptions
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions.yml
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNext*
  name: listNext
  nameWithType: ComputeNodes.listNext
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNext
  package: com.microsoft.azure.batch.protocol
- uid: bd82102acom.microsoft.azure.batch.protocol.models.ComputeNodee7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNode
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models.ComputeNode.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync*
  name: listNextAsync
  nameWithType: ComputeNodes.listNextAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync*
  name: listNextWithServiceResponseAsync
  nameWithType: ComputeNodes.listNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
    name: ComputeNodeListNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
    href: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions.yml
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeUser.yml
  name: ComputeNodeUser
  nameWithType: ComputeNodeUser
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  type: Class
  summary: "<p>A user account for RDP or SSH access on a compute node. </p>"
  syntax:
    content: public class ComputeNodeUser
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders.yml
  name: ComputeNodeAddUserHeaders
  nameWithType: ComputeNodeAddUserHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders
  type: Class
  summary: "<p>Defines headers for AddUser operation. </p>"
  syntax:
    content: public class ComputeNodeAddUserHeaders
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions.yml
  name: ComputeNodeAddUserOptions
  nameWithType: ComputeNodeAddUserOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
  type: Class
  summary: "<p>Additional parameters for addUser operation. </p>"
  syntax:
    content: public class ComputeNodeAddUserOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders.yml
  name: ComputeNodeDeleteUserHeaders
  nameWithType: ComputeNodeDeleteUserHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders
  type: Class
  summary: "<p>Defines headers for DeleteUser operation. </p>"
  syntax:
    content: public class ComputeNodeDeleteUserHeaders
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions.yml
  name: ComputeNodeDeleteUserOptions
  nameWithType: ComputeNodeDeleteUserOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
  type: Class
  summary: "<p>Additional parameters for deleteUser operation. </p>"
  syntax:
    content: public class ComputeNodeDeleteUserOptions
- uid: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter.yml
  name: NodeUpdateUserParameter
  nameWithType: NodeUpdateUserParameter
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  type: Class
  summary: "<p>The set of changes to be made to a user account on a node. </p>"
  syntax:
    content: public class NodeUpdateUserParameter
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders.yml
  name: ComputeNodeUpdateUserHeaders
  nameWithType: ComputeNodeUpdateUserHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders
  type: Class
  summary: "<p>Defines headers for UpdateUser operation. </p>"
  syntax:
    content: public class ComputeNodeUpdateUserHeaders
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions.yml
  name: ComputeNodeUpdateUserOptions
  nameWithType: ComputeNodeUpdateUserOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
  type: Class
  summary: "<p>Additional parameters for updateUser operation. </p>"
  syntax:
    content: public class ComputeNodeUpdateUserOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNode
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNode.yml
  name: ComputeNode
  nameWithType: ComputeNode
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
  type: Class
  summary: "<p>A compute node in the Batch service. </p>"
  syntax:
    content: public class ComputeNode
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders.yml
  name: ComputeNodeGetHeaders
  nameWithType: ComputeNodeGetHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders
  type: Class
  summary: "<p>Defines headers for Get operation. </p>"
  syntax:
    content: public class ComputeNodeGetHeaders
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions.yml
  name: ComputeNodeGetOptions
  nameWithType: ComputeNodeGetOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
  type: Class
  summary: "<p>Additional parameters for get operation. </p>"
  syntax:
    content: public class ComputeNodeGetOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders.yml
  name: ComputeNodeRebootHeaders
  nameWithType: ComputeNodeRebootHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders
  type: Class
  summary: "<p>Defines headers for Reboot operation. </p>"
  syntax:
    content: public class ComputeNodeRebootHeaders
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption.yml
  name: ComputeNodeRebootOption
  nameWithType: ComputeNodeRebootOption
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
  type: Enum
  summary: "<p>Defines values for ComputeNodeRebootOption. </p>"
  syntax:
    content: public enum ComputeNodeRebootOption
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions.yml
  name: ComputeNodeRebootOptions
  nameWithType: ComputeNodeRebootOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
  type: Class
  summary: "<p>Additional parameters for reboot operation. </p>"
  syntax:
    content: public class ComputeNodeRebootOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders.yml
  name: ComputeNodeReimageHeaders
  nameWithType: ComputeNodeReimageHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders
  type: Class
  summary: "<p>Defines headers for Reimage operation. </p>"
  syntax:
    content: public class ComputeNodeReimageHeaders
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption.yml
  name: ComputeNodeReimageOption
  nameWithType: ComputeNodeReimageOption
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
  type: Enum
  summary: "<p>Defines values for ComputeNodeReimageOption. </p>"
  syntax:
    content: public enum ComputeNodeReimageOption
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions.yml
  name: ComputeNodeReimageOptions
  nameWithType: ComputeNodeReimageOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
  type: Class
  summary: "<p>Additional parameters for reimage operation. </p>"
  syntax:
    content: public class ComputeNodeReimageOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders.yml
  name: ComputeNodeDisableSchedulingHeaders
  nameWithType: ComputeNodeDisableSchedulingHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders
  type: Class
  summary: "<p>Defines headers for DisableScheduling operation. </p>"
  syntax:
    content: public class ComputeNodeDisableSchedulingHeaders
- uid: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption.yml
  name: DisableComputeNodeSchedulingOption
  nameWithType: DisableComputeNodeSchedulingOption
  fullName: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
  type: Enum
  summary: "<p>Defines values for DisableComputeNodeSchedulingOption. </p>"
  syntax:
    content: public enum DisableComputeNodeSchedulingOption
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions.yml
  name: ComputeNodeDisableSchedulingOptions
  nameWithType: ComputeNodeDisableSchedulingOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
  type: Class
  summary: "<p>Additional parameters for disableScheduling operation. </p>"
  syntax:
    content: public class ComputeNodeDisableSchedulingOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders.yml
  name: ComputeNodeEnableSchedulingHeaders
  nameWithType: ComputeNodeEnableSchedulingHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders
  type: Class
  summary: "<p>Defines headers for EnableScheduling operation. </p>"
  syntax:
    content: public class ComputeNodeEnableSchedulingHeaders
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions.yml
  name: ComputeNodeEnableSchedulingOptions
  nameWithType: ComputeNodeEnableSchedulingOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
  type: Class
  summary: "<p>Additional parameters for enableScheduling operation. </p>"
  syntax:
    content: public class ComputeNodeEnableSchedulingOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult.yml
  name: ComputeNodeGetRemoteLoginSettingsResult
  nameWithType: ComputeNodeGetRemoteLoginSettingsResult
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
  type: Class
  summary: "<p>The remote login settings for a compute node. </p>"
  syntax:
    content: public class ComputeNodeGetRemoteLoginSettingsResult
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders.yml
  name: ComputeNodeGetRemoteLoginSettingsHeaders
  nameWithType: ComputeNodeGetRemoteLoginSettingsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders
  type: Class
  summary: "<p>Defines headers for GetRemoteLoginSettings operation. </p>"
  syntax:
    content: public class ComputeNodeGetRemoteLoginSettingsHeaders
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions.yml
  name: ComputeNodeGetRemoteLoginSettingsOptions
  nameWithType: ComputeNodeGetRemoteLoginSettingsOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
  type: Class
  summary: "<p>Additional parameters for getRemoteLoginSettings operation. </p>"
  syntax:
    content: public class ComputeNodeGetRemoteLoginSettingsOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions.yml
  name: ComputeNodeGetRemoteDesktopOptions
  nameWithType: ComputeNodeGetRemoteDesktopOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
  type: Class
  summary: "<p>Additional parameters for getRemoteDesktop operation. </p>"
  syntax:
    content: public class ComputeNodeGetRemoteDesktopOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders.yml
  name: ComputeNodeGetRemoteDesktopHeaders
  nameWithType: ComputeNodeGetRemoteDesktopHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders
  type: Class
  summary: "<p>Defines headers for GetRemoteDesktop operation. </p>"
  syntax:
    content: public class ComputeNodeGetRemoteDesktopHeaders
- uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult.yml
  name: UploadBatchServiceLogsResult
  nameWithType: UploadBatchServiceLogsResult
  fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsResult
  type: Class
  summary: "<p>The result of uploading Batch service log files from a specific compute node. </p>"
  syntax:
    content: public class UploadBatchServiceLogsResult
- uid: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration.yml
  name: UploadBatchServiceLogsConfiguration
  nameWithType: UploadBatchServiceLogsConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.UploadBatchServiceLogsConfiguration
  type: Class
  summary: "<p>The Azure Batch service log files upload configuration for a compute node. </p>"
  syntax:
    content: public class UploadBatchServiceLogsConfiguration
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders.yml
  name: ComputeNodeUploadBatchServiceLogsHeaders
  nameWithType: ComputeNodeUploadBatchServiceLogsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsHeaders
  type: Class
  summary: "<p>Defines headers for UploadBatchServiceLogs operation. </p>"
  syntax:
    content: public class ComputeNodeUploadBatchServiceLogsHeaders
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions.yml
  name: ComputeNodeUploadBatchServiceLogsOptions
  nameWithType: ComputeNodeUploadBatchServiceLogsOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUploadBatchServiceLogsOptions
  type: Class
  summary: "<p>Additional parameters for uploadBatchServiceLogs operation. </p>"
  syntax:
    content: public class ComputeNodeUploadBatchServiceLogsOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders.yml
  name: ComputeNodeListHeaders
  nameWithType: ComputeNodeListHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders
  type: Class
  summary: "<p>Defines headers for List operation. </p>"
  syntax:
    content: public class ComputeNodeListHeaders
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions.yml
  name: ComputeNodeListOptions
  nameWithType: ComputeNodeListOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
  type: Class
  summary: "<p>Additional parameters for list operation. </p>"
  syntax:
    content: public class ComputeNodeListOptions
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions.yml
  name: ComputeNodeListNextOptions
  nameWithType: ComputeNodeListNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
  type: Class
  summary: "<p>Additional parameters for listNext operation. </p>"
  syntax:
    content: public class ComputeNodeListNextOptions
