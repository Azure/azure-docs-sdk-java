### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="DefaultHandler" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.SharedAccessPolicyHandler<T extends SharedAccessPolicy>.characters(char ch[], int start, int length)
  name: characters(char ch[], int start, int length)
  nameWithType: SharedAccessPolicyHandler<T>.characters(char ch[], int start, int length)
  parameters:
  - name: ch
    type: <xref href="char?alt=char&text=char" data-throw-if-not-resolved="False"/>
  - name: start
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - name: length
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public void characters(char ch[], int start, int length)
  uid: com.microsoft.azure.storage.SharedAccessPolicyHandler.characters(char,int,int)
- fullName: com.microsoft.azure.storage.SharedAccessPolicyHandler<T extends SharedAccessPolicy>.endElement(String uri, String localName, String qName)
  name: endElement(String uri, String localName, String qName)
  nameWithType: SharedAccessPolicyHandler<T>.endElement(String uri, String localName, String qName)
  parameters:
  - name: uri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: localName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: qName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void endElement(String uri, String localName, String qName)
  uid: com.microsoft.azure.storage.SharedAccessPolicyHandler.endElement(String,String,String)
- fullName: com.microsoft.azure.storage.SharedAccessPolicyHandler<T extends SharedAccessPolicy>.getAccessIdentifiers(final InputStream stream, final Class<T> cls)
  name: getAccessIdentifiers(final InputStream stream, final Class<T> cls)
  nameWithType: SharedAccessPolicyHandler<T>.getAccessIdentifiers(final InputStream stream, final Class<T> cls)
  parameters:
  - description: <p>the stream to read from </p>
    name: stream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>the <code>SharedAccessPolicy</code> class type </p>
    name: cls
    type: <xref href="final+Class%3CT%3E?alt=final+Class%3CT%3E&text=final+Class%3CT%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="SAXException?alt=SAXException&text=SAXException" data-throw-if-not-resolved="False"/>
  - type: <xref href="ParserConfigurationException?alt=ParserConfigurationException&text=ParserConfigurationException" data-throw-if-not-resolved="False"/>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the HashMap of SharedAccessPolicies from the response </p>
    type: static&lt;T extends <xref href="com.microsoft.azure.storage.SharedAccessPolicy?alt=com.microsoft.azure.storage.SharedAccessPolicy&text=SharedAccessPolicy" data-throw-if-not-resolved="False"/>&gt; HashMap&lt;String, T&gt;
  summary: >-
    <p>RESERVED FOR INTERNAL USE. Gets the HashMap of SharedAccessPolicies from the response.</p>

    <p></p>
  syntax: public static static<T extends SharedAccessPolicy> HashMap<String, T> getAccessIdentifiers(final InputStream stream, final Class<T> cls)
  uid: com.microsoft.azure.storage.SharedAccessPolicyHandler.getAccessIdentifiers(final InputStream,final Class<T>)
- fullName: com.microsoft.azure.storage.SharedAccessPolicyHandler<T extends SharedAccessPolicy>.startElement(String uri, String localName, String qName, Attributes attributes)
  name: startElement(String uri, String localName, String qName, Attributes attributes)
  nameWithType: SharedAccessPolicyHandler<T>.startElement(String uri, String localName, String qName, Attributes attributes)
  parameters:
  - name: uri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: localName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: qName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: attributes
    type: <xref href="Attributes?alt=Attributes&text=Attributes" data-throw-if-not-resolved="False"/>
  syntax: public void startElement(String uri, String localName, String qName, Attributes attributes)
  uid: com.microsoft.azure.storage.SharedAccessPolicyHandler.startElement(String,String,String,Attributes)
nameWithType: SharedAccessPolicyHandler<T>
syntax: public class SharedAccessPolicyHandler<T extends SharedAccessPolicy>
type: class
typeParameters:
- name: T
uid: com.microsoft.azure.storage.SharedAccessPolicyHandler
fullName: com.microsoft.azure.storage.SharedAccessPolicyHandler<T>
name: SharedAccessPolicyHandler<T>
package: com.microsoft.azure.storage
summary: <p>RESERVED FOR INTERNAL USE. A class used to deserialize SharedAccessPolicies. </p>
metadata: {}
