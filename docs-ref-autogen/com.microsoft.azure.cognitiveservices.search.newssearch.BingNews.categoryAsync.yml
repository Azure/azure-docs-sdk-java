### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.categoryAsync*"
fullName: "com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.categoryAsync"
name: "categoryAsync"
nameWithType: "BingNews.categoryAsync"
members:
- uid: "com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.categoryAsync(com.microsoft.azure.cognitiveservices.search.newssearch.models.CategoryOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.categoryAsync(CategoryOptionalParameter categoryOptionalParameter)"
  name: "categoryAsync(CategoryOptionalParameter categoryOptionalParameter)"
  nameWithType: "BingNews.categoryAsync(CategoryOptionalParameter categoryOptionalParameter)"
  summary: "The News Category API lets lets you search on Bing and get back a list of top news articles by category. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see \\[Searching the web for news\\](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web)."
  parameters:
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "categoryOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.search.newssearch.models.CategoryOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.CategoryOptionalParameter&text=CategoryOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<NewsModel> categoryAsync(CategoryOptionalParameter categoryOptionalParameter)"
  returns:
    description: "the observable to the NewsModel object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.search.newssearch.models.NewsModel?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.NewsModel&text=NewsModel\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.search.newssearch"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-newssearch:1.0.2
