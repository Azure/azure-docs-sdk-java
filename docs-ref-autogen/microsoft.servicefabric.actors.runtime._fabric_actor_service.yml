### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service
  id: _fabric_actor_service
  parent: microsoft.servicefabric.actors.runtime
  children:
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.createServiceReplicaListeners()
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.deleteActorAsync(ActorId,CancellationToken)
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.FabricActorService(StatefulServiceContext,ActorTypeInformation)
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>)
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>,BiFunction<ActorBase, ActorStateProvider, ActorStateManager>,ActorStateProvider,ActorServiceSettings)
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.getActorsAsync(ContinuationToken,CancellationToken)
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.getActorTypeInformation()
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.getSettings()
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.getStateProvider()
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.onAbort()
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.onChangeRoleAsync(ReplicaRole,CancellationToken)
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.onCloseAsync(CancellationToken)
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.onOpenAsync(ReplicaOpenMode,CancellationToken)
  - microsoft.servicefabric.actors.runtime._fabric_actor_service.runAsync(CancellationToken)
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: FabricActorService
  nameWithType: FabricActorService
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 37
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Represents the base class for Microsoft Service Fabric based reliable actors service. </p>\r\n<p>\r\n  <b>Remarks:</b>Derive from this class to implement your own custom actor service if you want to override any service level behavior for your actors. </p>"
  syntax: &o1
    content: public class FabricActorService extends StatefulServiceBase implements ActorService
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.services.runtime._stateful_service_base
  inheritedMembers:
  - microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription)
  - microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription,Duration,CancellationToken)
  - microsoft.servicefabric.services.runtime._stateful_service_base.getAddresses()
  - microsoft.servicefabric.services.runtime._stateful_service_base.getPartition()
  - microsoft.servicefabric.services.runtime._stateful_service_base.getServiceContext()
  - microsoft.servicefabric.services.runtime._stateful_service_base.getStateProviderReplica()
  - microsoft.servicefabric.services.runtime._stateful_service_base.onDataLossAsync(RestoreContext,CancellationToken)
  - microsoft.servicefabric.services.runtime._stateful_service_base.setAddresses(Map<String, String>)
  - microsoft.servicefabric.services.runtime._stateful_service_base.setPartition(StatefulServicePartition)
  - microsoft.servicefabric.services.runtime._stateful_service_base.StatefulServiceBase(StatefulServiceContext,StateProviderReplica)
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.createServiceReplicaListeners()
  id: createServiceReplicaListeners()
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: createServiceReplicaListeners()
  nameWithType: FabricActorService.createServiceReplicaListeners()
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.createServiceReplicaListeners()
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.createServiceReplicaListeners*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 198
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Creates Service Replica Listeners.</p>\r\n<p></p>"
  syntax:
    content: protected List<ServiceReplicaListener> createServiceReplicaListeners()
    return:
      type: 5618da2dmicrosoft.servicefabric.services.communication.runtime._service_replica_listenera08ddfce
      description: <p>Endpoint string pairs like {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}} </p>
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.deleteActorAsync(ActorId,CancellationToken)
  id: deleteActorAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: deleteActorAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: FabricActorService.deleteActorAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.deleteActorAsync(ActorId actorId, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.deleteActorAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 187
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Deletes an Actor from the Actor service.</p>\r\n<p>\r\nAn active actor, will be deactivated and its state will also be deleted from state provider. An in-active actor's state will be deleted from state provider. If this method is called for a non-existent actor id in the system, it will be a no-op. </p>"
  syntax:
    content: public CompletableFuture<?> deleteActorAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref> of the actor to be deleted. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous operation of call to server. </p>
  overridden: microsoft.servicefabric.actors._actor_service.deleteActorAsync(ActorId,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.FabricActorService(StatefulServiceContext,ActorTypeInformation)
  id: FabricActorService(StatefulServiceContext,ActorTypeInformation)
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo)
  nameWithType: FabricActorService.FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo)
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo)
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.FabricActorService*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 60
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Initializes a new instance of the <xref uid=\"microsoft.servicefabric.actors._actor_service\" data-throw-if-not-resolved=\"false\">ActorService</xref> class.</p>\r\n<p></p>"
  syntax:
    content: public FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo)
    parameters:
    - id: context
      type: system.fabric._stateful_service_context
      description: <p>Service context the actor service is operating under. </p>
    - id: actorTypeInfo
      type: microsoft.servicefabric.actors.runtime._actor_type_information
      description: <p>Type information of the actor. </p>
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>)
  id: FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>)
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory)
  nameWithType: FabricActorService.FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory)
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory)
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.FabricActorService*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 74
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Initializes a new instance of the <xref uid=\"microsoft.servicefabric.actors._actor_service\" data-throw-if-not-resolved=\"false\">ActorService</xref> class.</p>\r\n<p></p>"
  syntax:
    content: public FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory)
    parameters:
    - id: context
      type: system.fabric._stateful_service_context
      description: <p>Service context the actor service is operating under. </p>
    - id: actorTypeInfo
      type: microsoft.servicefabric.actors.runtime._actor_type_information
      description: <p>Type information of the actor. </p>
    - id: actorFactory
      type: 8ead6242microsoft.servicefabric.actors.runtime._fabric_actor_serviceb33c76fcmicrosoft.servicefabric.actors._actor_idb33c76fcmicrosoft.servicefabric.actors.runtime._actor_basea08ddfce
      description: <p>A factory method to create actor objects. </p>
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>,BiFunction<ActorBase, ActorStateProvider, ActorStateManager>,ActorStateProvider,ActorServiceSettings)
  id: FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>,BiFunction<ActorBase, ActorStateProvider, ActorStateManager>,ActorStateProvider,ActorServiceSettings)
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory, BiFunction<ActorBase, ActorStateProvider, ActorStateManager> stateManagerFactory, ActorStateProvider stateProvider, ActorServiceSettings settings)
  nameWithType: FabricActorService.FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory, BiFunction<ActorBase, ActorStateProvider, ActorStateManager> stateManagerFactory, ActorStateProvider stateProvider, ActorServiceSettings settings)
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory, BiFunction<ActorBase, ActorStateProvider, ActorStateManager> stateManagerFactory, ActorStateProvider stateProvider, ActorServiceSettings settings)
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.FabricActorService*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 97
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Initializes a new instance of the <xref uid=\"microsoft.servicefabric.actors._actor_service\" data-throw-if-not-resolved=\"false\">ActorService</xref> class.</p>\r\n<p></p>"
  syntax:
    content: public FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory, BiFunction<ActorBase, ActorStateProvider, ActorStateManager> stateManagerFactory, ActorStateProvider stateProvider, ActorServiceSettings settings)
    parameters:
    - id: context
      type: system.fabric._stateful_service_context
      description: <p>Service context the actor service is operating under. </p>
    - id: actorTypeInfo
      type: microsoft.servicefabric.actors.runtime._actor_type_information
      description: <p>Type information of the actor. </p>
    - id: actorFactory
      type: 8ead6242microsoft.servicefabric.actors.runtime._fabric_actor_serviceb33c76fcmicrosoft.servicefabric.actors._actor_idb33c76fcmicrosoft.servicefabric.actors.runtime._actor_basea08ddfce
      description: <p>A factory method to create actor objects. </p>
    - id: stateManagerFactory
      type: 8ead6242microsoft.servicefabric.actors.runtime._actor_baseb33c76fcmicrosoft.servicefabric.actors.runtime._actor_state_providerb33c76fcmicrosoft.servicefabric.actors.runtime._actor_state_managera08ddfce
      description: <p>A factory method to create <xref uid="microsoft.servicefabric.actors.runtime._actor_state_manager" data-throw-if-not-resolved="false">ActorStateManager</xref>. </p>
    - id: stateProvider
      type: microsoft.servicefabric.actors.runtime._actor_state_provider
      description: <p>State provider to store the state for actor objects. </p>
    - id: settings
      type: microsoft.servicefabric.actors.runtime._actor_service_settings
      description: <p>Settings to configures behavior of Actor Service. </p>
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.getActorsAsync(ContinuationToken,CancellationToken)
  id: getActorsAsync(ContinuationToken,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: getActorsAsync(ContinuationToken continuationToken, CancellationToken cancellationToken)
  nameWithType: FabricActorService.getActorsAsync(ContinuationToken continuationToken, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.getActorsAsync(ContinuationToken continuationToken, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.getActorsAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 167
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets the list of Actors by querying the actor service.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<PagedResult<ActorInformation>> getActorsAsync(ContinuationToken continuationToken, CancellationToken cancellationToken)
    parameters:
    - id: continuationToken
      type: microsoft.servicefabric.actors._continuation_token
      description: <p>A continuation token to start querying the results from. A null value of continuation token means start returning values form the beginning. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_informatione7daa122
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents the asynchronous operation of call to server. </p>
  overridden: microsoft.servicefabric.actors._actor_service.getActorsAsync(ContinuationToken,CancellationToken)
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.getActorTypeInformation()
  id: getActorTypeInformation()
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: getActorTypeInformation()
  nameWithType: FabricActorService.getActorTypeInformation()
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.getActorTypeInformation()
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.getActorTypeInformation*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 132
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets ActorTypeInformation for actor service.</p>\r\n<p></p>"
  syntax:
    content: public ActorTypeInformation getActorTypeInformation()
    return:
      type: microsoft.servicefabric.actors.runtime._actor_type_information
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors.runtime._actor_type_information" data-throw-if-not-resolved="false">ActorTypeInformation</xref> for the actor hosted by the service replica. </p>
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.getSettings()
  id: getSettings()
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: getSettings()
  nameWithType: FabricActorService.getSettings()
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.getSettings()
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.getSettings*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 150
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets settings for the actor service.</p>\r\n<p></p>"
  syntax:
    content: public ActorServiceSettings getSettings()
    return:
      type: microsoft.servicefabric.actors.runtime._actor_service_settings
      description: <p>Settings for the actor service. </p>
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.getStateProvider()
  id: getStateProvider()
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: getStateProvider()
  nameWithType: FabricActorService.getStateProvider()
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.getStateProvider()
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.getStateProvider*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 141
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets a <xref uid=\"microsoft.servicefabric.actors.runtime._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref> that represents the state provider for the actor service.</p>\r\n<p></p>"
  syntax:
    content: public ActorStateProvider getStateProvider()
    return:
      type: microsoft.servicefabric.actors.runtime._actor_state_provider
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors.runtime._actor_state_provider" data-throw-if-not-resolved="false">ActorStateProvider</xref> representing the state provider for the actor service. </p>
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.onAbort()
  id: onAbort()
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: onAbort()
  nameWithType: FabricActorService.onAbort()
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.onAbort()
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.onAbort*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 299
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Overrides <xref uid=\"microsoft.servicefabric.services.runtime._stateful_service_base.onAbort()\" data-throw-if-not-resolved=\"false\">StatefulServiceBase#onAbort()</xref></p>"
  syntax:
    content: protected void onAbort()
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.onChangeRoleAsync(ReplicaRole,CancellationToken)
  id: onChangeRoleAsync(ReplicaRole,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: FabricActorService.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.onChangeRoleAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 247
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Overrides <xref uid=\"microsoft.servicefabric.services.runtime._stateful_service_base.onChangeRoleAsync(ReplicaRole,CancellationToken)\" data-throw-if-not-resolved=\"false\">StatefulServiceBase#onChangeRoleAsync(ReplicaRole, system.fabric.CancellationToken)</xref></p>"
  syntax:
    content: protected CompletableFuture<?> onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    parameters:
    - id: newRole
      type: system.fabric._replica_role
      description: <p>New role for the replica. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous operation performed when the replica becomes primary. </p>
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.onCloseAsync(CancellationToken)
  id: onCloseAsync(CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: onCloseAsync(CancellationToken cancellationToken)
  nameWithType: FabricActorService.onCloseAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.onCloseAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.onCloseAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 282
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Overrides <xref uid=\"microsoft.servicefabric.services.runtime._stateful_service_base.onCloseAsync(CancellationToken)\" data-throw-if-not-resolved=\"false\">StatefulServiceBase#onCloseAsync(CancellationToken)</xref></p>\r\n<p></p>"
  syntax:
    content: protected CompletableFuture<?> onCloseAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: <p>The token to monitor for cancellation requests. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous operation performed when the replica is closed. </p>
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.onOpenAsync(ReplicaOpenMode,CancellationToken)
  id: onOpenAsync(ReplicaOpenMode,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
  nameWithType: FabricActorService.onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.onOpenAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 231
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>This method is called as the final step of opening the service. Override this method to be notified that Open has completed for this replica's internal components.</p>\r\n<p></p>"
  syntax:
    content: protected CompletableFuture<?> onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
    parameters:
    - id: openMode
      type: system.fabric._replica_open_mode
      description: <p>for this service replica. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.runAsync(CancellationToken)
  id: runAsync(CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._fabric_actor_service
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  langs:
  - java
  name: runAsync(CancellationToken cancellationToken)
  nameWithType: FabricActorService.runAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.runAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._fabric_actor_service.runAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/FabricActorService.java
    startLine: 213
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Overrides <xref uid=\"microsoft.servicefabric.services.runtime._stateful_service_base.runAsync(CancellationToken)\" data-throw-if-not-resolved=\"false\">StatefulServiceBase#runAsync(system.fabric.CancellationToken)</xref></p>"
  syntax:
    content: protected CompletableFuture<?> runAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous operation of loading reminders when the replica becomes primary. </p>
references:
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.FabricActorService*
  name: FabricActorService
  nameWithType: FabricActorService.FabricActorService
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.FabricActorService
  package: microsoft.servicefabric.actors.runtime
- uid: 8ead6242microsoft.servicefabric.actors.runtime._fabric_actor_serviceb33c76fcmicrosoft.servicefabric.actors._actor_idb33c76fcmicrosoft.servicefabric.actors.runtime._actor_basea08ddfce
  spec.java:
  - name: BiFunction<
    fullName: BiFunction<
  - uid: microsoft.servicefabric.actors.runtime._fabric_actor_service
    name: FabricActorService
    fullName: microsoft.servicefabric.actors.runtime.FabricActorService
    href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  - name: ', '
    fullName: ', '
  - uid: microsoft.servicefabric.actors._actor_id
    name: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    href: microsoft.servicefabric.actors._actor_id.yml
  - name: ', '
    fullName: ', '
  - uid: microsoft.servicefabric.actors.runtime._actor_base
    name: ActorBase
    fullName: microsoft.servicefabric.actors.runtime.ActorBase
    href: microsoft.servicefabric.actors.runtime._actor_base.yml
  - name: '>'
    fullName: '>'
- uid: 8ead6242microsoft.servicefabric.actors.runtime._actor_baseb33c76fcmicrosoft.servicefabric.actors.runtime._actor_state_providerb33c76fcmicrosoft.servicefabric.actors.runtime._actor_state_managera08ddfce
  spec.java:
  - name: BiFunction<
    fullName: BiFunction<
  - uid: microsoft.servicefabric.actors.runtime._actor_base
    name: ActorBase
    fullName: microsoft.servicefabric.actors.runtime.ActorBase
    href: microsoft.servicefabric.actors.runtime._actor_base.yml
  - name: ', '
    fullName: ', '
  - uid: microsoft.servicefabric.actors.runtime._actor_state_provider
    name: ActorStateProvider
    fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider
    href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  - name: ', '
    fullName: ', '
  - uid: microsoft.servicefabric.actors.runtime._actor_state_manager
    name: ActorStateManager
    fullName: microsoft.servicefabric.actors.runtime.ActorStateManager
    href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.getActorTypeInformation*
  name: getActorTypeInformation
  nameWithType: FabricActorService.getActorTypeInformation
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.getActorTypeInformation
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.getStateProvider*
  name: getStateProvider
  nameWithType: FabricActorService.getStateProvider
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.getStateProvider
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.getSettings*
  name: getSettings
  nameWithType: FabricActorService.getSettings
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.getSettings
  package: microsoft.servicefabric.actors.runtime
- uid: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_informatione7daa122
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: microsoft.servicefabric.actors._paged_result
    name: PagedResult
    fullName: microsoft.servicefabric.actors.PagedResult
    href: microsoft.servicefabric.actors._paged_result.yml
  - name: <
    fullName: <
  - uid: microsoft.servicefabric.actors._actor_information
    name: ActorInformation
    fullName: microsoft.servicefabric.actors.ActorInformation
    href: microsoft.servicefabric.actors._actor_information.yml
  - name: '>>'
    fullName: '>>'
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.getActorsAsync*
  name: getActorsAsync
  nameWithType: FabricActorService.getActorsAsync
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.getActorsAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.deleteActorAsync*
  name: deleteActorAsync
  nameWithType: FabricActorService.deleteActorAsync
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.deleteActorAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 5618da2dmicrosoft.servicefabric.services.communication.runtime._service_replica_listenera08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: microsoft.servicefabric.services.communication.runtime._service_replica_listener
    name: ServiceReplicaListener
    fullName: microsoft.servicefabric.services.communication.runtime.ServiceReplicaListener
    href: microsoft.servicefabric.services.communication.runtime._service_replica_listener.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.createServiceReplicaListeners*
  name: createServiceReplicaListeners
  nameWithType: FabricActorService.createServiceReplicaListeners
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.createServiceReplicaListeners
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.runAsync*
  name: runAsync
  nameWithType: FabricActorService.runAsync
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.runAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.onOpenAsync*
  name: onOpenAsync
  nameWithType: FabricActorService.onOpenAsync
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.onOpenAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.onChangeRoleAsync*
  name: onChangeRoleAsync
  nameWithType: FabricActorService.onChangeRoleAsync
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.onChangeRoleAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.onCloseAsync*
  name: onCloseAsync
  nameWithType: FabricActorService.onCloseAsync
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.onCloseAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service.onAbort*
  name: onAbort
  nameWithType: FabricActorService.onAbort
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService.onAbort
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: backupAsync(BackupDescription backupDescription)
  nameWithType: StatefulServiceBase.backupAsync(BackupDescription backupDescription)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription backupDescription)
  type: Method
  summary: >-
    <p>Performs a backup of all reliable state managed by this <xref uid="microsoft.servicefabric.services.runtime._stateful_service_base" data-throw-if-not-resolved="false">StatefulServiceBase</xref>.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupDescription backupDescription)
    parameters:
    - id: backupDescription
      type: microsoft.servicefabric.data._backup_description
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">BackupDescription</xref> describing the backup request. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription,Duration,CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: backupAsync(BackupDescription backupDescription, Duration timeout, CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.backupAsync(BackupDescription backupDescription, Duration timeout, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription backupDescription, Duration timeout, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Performs a backup of all reliable state managed by this <xref uid="microsoft.servicefabric.services.runtime._stateful_service_base" data-throw-if-not-resolved="false">StatefulServiceBase</xref>.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupDescription backupDescription, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: backupDescription
      type: microsoft.servicefabric.data._backup_description
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">BackupDescription</xref> describing the backup request. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timeout for this operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: <p>The token to monitor for cancellation requests. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.getAddresses()
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: getAddresses()
  nameWithType: StatefulServiceBase.getAddresses()
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.getAddresses()
  type: Method
  summary: >-
    <p>Gets list of all the addresses for this service replica as (ListenerName, Endpoint) key-value pair.</p>

    <p></p>
  syntax:
    content: protected Map<String, String> getAddresses()
    return:
      type: 689c8cb5
      description: <p>An <xref uid="" data-throw-if-not-resolved="false">Map</xref> containing list of addresses as (ListenerName, Endpoint) key-value pair. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.getPartition()
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: getPartition()
  nameWithType: StatefulServiceBase.getPartition()
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.getPartition()
  type: Method
  summary: >-
    <p>Service partition to which current service replica belongs.</p>

    <p></p>
  syntax:
    content: protected StatefulServicePartition getPartition()
    return:
      type: system.fabric._stateful_service_partition
      description: <p>An <xref uid="" data-throw-if-not-resolved="false">StatefulServicePartition</xref> that represents the partition to which this service replica belongs. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.getServiceContext()
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: getServiceContext()
  nameWithType: StatefulServiceBase.getServiceContext()
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.getServiceContext()
  type: Method
  summary: >-
    <p>Gets the service context that this stateful service is operating under. It provides information like ReplicaId, PartitionId, ServiceName etc.</p>

    <p></p>
  syntax:
    content: public StatefulServiceContext getServiceContext()
    return:
      type: system.fabric._stateful_service_context
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">StatefulServiceContext</xref> that describes the service context. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.getStateProviderReplica()
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: getStateProviderReplica()
  nameWithType: StatefulServiceBase.getStateProviderReplica()
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.getStateProviderReplica()
  type: Method
  syntax:
    content: protected StateProviderReplica getStateProviderReplica()
    return:
      type: microsoft.servicefabric.data._state_provider_replica
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onDataLossAsync(RestoreContext,CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>This method is called during suspected data loss. You can override this method to restore the service in case of data loss.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<Boolean> onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)
    parameters:
    - id: context
      type: microsoft.servicefabric.data._restore_context
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">RestoreContext</xref> to be used to restore the service. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>A Task that represents the asynchronous restore operation. True indicates that the state has been restored. False indicates that the replica's state has not been modified. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.setAddresses(Map<String, String>)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: setAddresses(Map<String, String> addresses)
  nameWithType: StatefulServiceBase.setAddresses(Map<String, String> addresses)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.setAddresses(Map<String, String> addresses)
  type: Method
  summary: >-
    <p>Sets list of all the addresses for this service replica as (ListenerName, Endpoint) key-value pair.</p>

    <p></p>
  syntax:
    content: protected void setAddresses(Map<String, String> addresses)
    parameters:
    - id: addresses
      type: 689c8cb5
      description: <p>An <xref uid="" data-throw-if-not-resolved="false">Map</xref> containing list of addresses as (ListenerName, Endpoint) key-value pair. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.setPartition(StatefulServicePartition)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: setPartition(StatefulServicePartition partition)
  nameWithType: StatefulServiceBase.setPartition(StatefulServicePartition partition)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.setPartition(StatefulServicePartition partition)
  type: Method
  summary: >-
    <p>Service partition to which current service replica belongs.</p>

    <p></p>
  syntax:
    content: protected void setPartition(StatefulServicePartition partition)
    parameters:
    - id: partition
      type: system.fabric._stateful_service_partition
      description: <p>An <xref uid="" data-throw-if-not-resolved="false">StatefulServicePartition</xref> that represents the partition to which this service replica belongs. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.StatefulServiceBase(StatefulServiceContext,StateProviderReplica)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)
  nameWithType: StatefulServiceBase.StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)
  type: Constructor
  summary: >-
    <p>Creates a new StatefulService.</p>

    <p></p>
  syntax:
    content: protected StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)
    parameters:
    - id: serviceContext
      type: system.fabric._stateful_service_context
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">StatefulServiceContext</xref> that describes the service context. </p>
    - id: stateProviderReplica
      type: microsoft.servicefabric.data._state_provider_replica
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">StateProviderReplica</xref> that represents a reliable state provider replica. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base
  parent: microsoft.servicefabric.services.runtime
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: StatefulServiceBase
  nameWithType: StatefulServiceBase
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase
  type: Class
  summary: <p>Represents base class for Microsoft Service Fabric based stateful reliable service. </p>
  syntax:
    content: public class StatefulServiceBase
- uid: microsoft.servicefabric.actors._actor_service
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_service.yml
  name: ActorService
  nameWithType: ActorService
  fullName: microsoft.servicefabric.actors.ActorService
  type: Interface
  summary: <p>Defines the interface containing methods which can be called at Actor Service level. </p>
  syntax:
    content: public interface ActorService extends Service
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  name: ActorStateProvider
  nameWithType: ActorStateProvider
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider
  type: Interface
  summary: <p>Represents the interface that an actor state provider needs to implement for actor runtime to communicate with it. </p>
  syntax:
    content: public interface ActorStateProvider extends StateProviderReplica
- uid: microsoft.servicefabric.actors.runtime._actor_service_settings
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_service_settings.yml
  name: ActorServiceSettings
  nameWithType: ActorServiceSettings
  fullName: microsoft.servicefabric.actors.runtime.ActorServiceSettings
  type: Class
  summary: <p>Settings to configures behavior of Actor Service. </p>
  syntax:
    content: public class ActorServiceSettings
- uid: microsoft.servicefabric.actors.runtime._actor_base
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_base.yml
  name: ActorBase
  nameWithType: ActorBase
  fullName: microsoft.servicefabric.actors.runtime.ActorBase
  type: Class
  summary: >-
    <p>Represents base class for actors. <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.Actor</xref></p>

    <p>

      <b>Remarks:</b>This is a base type for actor, it provides the functionality that is common across actors implemented by actor deriving from <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.Actor</xref> The state is preserved across actor garbage collections and fail-overs. The storage and retrieval of the state is provided by the actor state provider <xref uid="microsoft.servicefabric.actors.runtime._actor_state_provider" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.runtime.ActorStateProvider</xref>. </p>
  syntax:
    content: public class ActorBase
- uid: microsoft.servicefabric.actors.runtime._actor_state_manager
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_state_manager.yml
  name: ActorStateManager
  nameWithType: ActorStateManager
  fullName: microsoft.servicefabric.actors.runtime.ActorStateManager
  type: Interface
  summary: <p>Represents the interface that state manager for <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> implements. </p>
  syntax:
    content: public interface ActorStateManager
- uid: microsoft.servicefabric.actors.runtime._actor_type_information
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation
  type: Class
  summary: <p>Contains information about the type implementing an actor. </p>
  syntax:
    content: public class ActorTypeInformation
- uid: system.fabric._replica_role
  parent: system.fabric
  href: system.fabric._replica_role.yml
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: system.fabric.ReplicaRole
  type: Enum
  summary: >-
    <p>Indicates the role of a stateful service replica. </p>

    <p>

      <b>Remarks:</b>Service Fabric requires different behaviors from a service replica depending on what role it currently performs. </p>
  syntax:
    content: public enum ReplicaRole
- uid: system.fabric._stateful_service_context
  parent: system.fabric
  href: system.fabric._stateful_service_context.yml
  name: StatefulServiceContext
  nameWithType: StatefulServiceContext
  fullName: system.fabric.StatefulServiceContext
  type: Class
  summary: <p>Represents the service context that the stateful service is operating under. </p>
  syntax:
    content: public class StatefulServiceContext
- uid: microsoft.servicefabric.actors.runtime._fabric_actor_service
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._fabric_actor_service.yml
  name: FabricActorService
  nameWithType: FabricActorService
  fullName: microsoft.servicefabric.actors.runtime.FabricActorService
  type: Class
  summary: >-
    <p>Represents the base class for Microsoft Service Fabric based reliable actors service. </p>

    <p>

      <b>Remarks:</b>Derive from this class to implement your own custom actor service if you want to override any service level behavior for your actors. </p>
  syntax: *o1
- uid: microsoft.servicefabric.actors._actor_id
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_id.yml
  name: ActorId
  nameWithType: ActorId
  fullName: microsoft.servicefabric.actors.ActorId
  type: Class
  summary: <p>ActorId represents identity of an actor within an actor service. The actors can be identified by <xref uid="" data-throw-if-not-resolved="false">java.lang.String</xref>, <xref uid="" data-throw-if-not-resolved="false">java.util.UUID</xref> or long. </p>
  syntax:
    content: public class ActorId
- uid: microsoft.servicefabric.actors._paged_result
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._paged_result.yml
  name: PagedResult<T>
  nameWithType: PagedResult<T>
  fullName: microsoft.servicefabric.actors.PagedResult<T>
  type: Class
  summary: >-
    <p>Represents the result of actor query calls.</p>

    <p></p>
  syntax:
    content: public class PagedResult<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>Type of the items this query result contains. </p>
- uid: microsoft.servicefabric.actors._actor_information
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_information.yml
  name: ActorInformation
  nameWithType: ActorInformation
  fullName: microsoft.servicefabric.actors.ActorInformation
  type: Class
  summary: <p>Represents the information about an actor returned by Actor Query method call. </p>
  syntax:
    content: public class ActorInformation
- uid: microsoft.servicefabric.actors._actor_service.getActorsAsync(ContinuationToken,CancellationToken)
  parent: microsoft.servicefabric.actors._actor_service
  href: microsoft.servicefabric.actors._actor_service.yml
  name: getActorsAsync(ContinuationToken continuationToken, CancellationToken cancellationToken)
  nameWithType: ActorService.getActorsAsync(ContinuationToken continuationToken, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.ActorService.getActorsAsync(ContinuationToken continuationToken, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Gets the list of Actors by querying the actor service.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<PagedResult<ActorInformation>> getActorsAsync(ContinuationToken continuationToken, CancellationToken cancellationToken)
    parameters:
    - id: continuationToken
      type: microsoft.servicefabric.actors._continuation_token
      description: <p>A continuation token to start querying the results from. A null value of continuation token means start returning values form the beginning. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_informatione7daa122
      description: <p>A future that represents the asynchronous operation of call to server. </p>
- uid: microsoft.servicefabric.actors._continuation_token
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._continuation_token.yml
  name: ContinuationToken
  nameWithType: ContinuationToken
  fullName: microsoft.servicefabric.actors.ContinuationToken
  type: Class
  summary: >-
    <p>Represents a continuation token for query operations. </p>

    <p>

      <b>Remarks:</b>A method that may return a partial set of results via a <xref uid="microsoft.servicefabric.actors._paged_result" data-throw-if-not-resolved="false">PagedResult</xref> object also returns a continuation token in the object, which can be used in a subsequent call to return the next set of available results. </p>
  syntax:
    content: public class ContinuationToken
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A CancellationToken is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
- uid: microsoft.servicefabric.actors._actor_service.deleteActorAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors._actor_service
  href: microsoft.servicefabric.actors._actor_service.yml
  name: deleteActorAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ActorService.deleteActorAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.ActorService.deleteActorAsync(ActorId actorId, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Deletes an Actor from the Actor service.</p>

    <p>

    An active actor, will be deactivated and its state will also be deleted from state provider. An in-active actor's state will be deleted from state provider. If this method is called for a non-existent actor id in the system, it will be a no-op. </p>
  syntax:
    content: public CompletableFuture<?> deleteActorAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref> of the actor to be deleted. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous operation of call to server. </p>
- uid: microsoft.servicefabric.services.communication.runtime._service_replica_listener
  parent: microsoft.servicefabric.services.communication.runtime
  href: microsoft.servicefabric.services.communication.runtime._service_replica_listener.yml
  name: ServiceReplicaListener
  nameWithType: ServiceReplicaListener
  fullName: microsoft.servicefabric.services.communication.runtime.ServiceReplicaListener
  type: Class
  summary: <p>Represents the communication listener and its properties for a Stateful Service Replica. Endpoints given out by the communication listener are associated with name of the communication listener. </p>
  syntax:
    content: public class ServiceReplicaListener
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.runAsync(CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: runAsync(CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.runAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.runAsync(CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Services that want to implement a processing loop which runs when it is primary and has write status, just override this method with their logic.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<?> runAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. </p>
- uid: system.fabric._replica_open_mode
  parent: system.fabric
  href: system.fabric._replica_open_mode.yml
  name: ReplicaOpenMode
  nameWithType: ReplicaOpenMode
  fullName: system.fabric.ReplicaOpenMode
  type: Enum
  summary: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
  syntax:
    content: public enum ReplicaOpenMode
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onChangeRoleAsync(ReplicaRole,CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>This method is called as the final step before completing <xref uid="system.fabric._stateful_service_replica.changeRoleAsync(ReplicaRole,CancellationToken)" data-throw-if-not-resolved="false">system.fabric.StatefulServiceReplica#changeRoleAsync(ReplicaRole, CancellationToken)</xref> . Override this method to be notified that ChangeRole has completed for this replica's internal components.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<?> onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    parameters:
    - id: newRole
      type: system.fabric._replica_role
      description: <p>for this service replica. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onCloseAsync(CancellationToken)
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: onCloseAsync(CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.onCloseAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.onCloseAsync(CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>This method is called as the final step of closing the service. Override this method to be notified that Close has completed for this replica's internal components.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<?> onCloseAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime._stateful_service_base.onAbort()
  parent: microsoft.servicefabric.services.runtime._stateful_service_base
  href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
  name: onAbort()
  nameWithType: StatefulServiceBase.onAbort()
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.onAbort()
  type: Method
  summary: <p>Notification that the service is being aborted. RunAsync MAY be running concurrently with the execution of this method, as cancellation is not awaited on the abort path. </p>
  syntax:
    content: protected void onAbort()
- uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_listener
  parent: microsoft.servicefabric.services.remoting.runtime
  href: microsoft.servicefabric.services.remoting.runtime._service_remoting_listener.yml
  name: ServiceRemotingListener
  nameWithType: ServiceRemotingListener
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener
  type: Interface
  summary: <p>Defines a base communication interface that enables interface remoting for stateless and stateful services. </p>
  syntax:
    content: public interface ServiceRemotingListener
