### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse"
  id: "PathsReadResponse"
  parent: "com.azure.storage.file.datalake.implementation.models"
  children:
  - "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.PathsReadResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders,reactor.core.publisher.Flux<java.nio.ByteBuffer>,com.azure.storage.file.datalake.implementation.models.PathReadHeaders)"
  - "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.close()"
  - "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.getValue()"
  langs:
  - "java"
  name: "PathsReadResponse"
  nameWithType: "PathsReadResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse"
  type: "Class"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Contains all response data for the read operation."
  syntax:
    content: "public final class PathsReadResponse extends ResponseBase<PathReadHeaders,Flux<ByteBuffer>> implements Closeable"
  inheritance:
  - "java.lang.Object"
  - "com.azure.core.http.rest.ResponseBase"
  implements:
  - "java.io.Closeable"
  inheritedMembers:
  - "com.azure.core.http.rest.ResponseBase.getDeserializedHeaders()"
  - "com.azure.core.http.rest.ResponseBase.getHeaders()"
  - "com.azure.core.http.rest.ResponseBase.getRequest()"
  - "com.azure.core.http.rest.ResponseBase.getStatusCode()"
  - "com.azure.core.http.rest.ResponseBase.getValue()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.PathsReadResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders,reactor.core.publisher.Flux<java.nio.ByteBuffer>,com.azure.storage.file.datalake.implementation.models.PathReadHeaders)"
  id: "PathsReadResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders,reactor.core.publisher.Flux<java.nio.ByteBuffer>,com.azure.storage.file.datalake.implementation.models.PathReadHeaders)"
  parent: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse"
  langs:
  - "java"
  name: "PathsReadResponse(HttpRequest request, int statusCode, HttpHeaders rawHeaders, Flux<ByteBuffer> value, PathReadHeaders headers)"
  nameWithType: "PathsReadResponse.PathsReadResponse(HttpRequest request, int statusCode, HttpHeaders rawHeaders, Flux<ByteBuffer> value, PathReadHeaders headers)"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.PathsReadResponse(HttpRequest request, int statusCode, HttpHeaders rawHeaders, Flux<ByteBuffer> value, PathReadHeaders headers)"
  overload: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.PathsReadResponse*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Creates an instance of PathsReadResponse."
  syntax:
    content: "public PathsReadResponse(HttpRequest request, int statusCode, HttpHeaders rawHeaders, Flux<ByteBuffer> value, PathReadHeaders headers)"
    parameters:
    - id: "request"
      type: "com.azure.core.http.HttpRequest"
      description: "the request which resulted in this PathsReadResponse."
    - id: "statusCode"
      type: "int"
      description: "the status code of the HTTP response."
    - id: "rawHeaders"
      type: "com.azure.core.http.HttpHeaders"
      description: "the raw headers of the HTTP response."
    - id: "value"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
      description: "the content stream."
    - id: "headers"
      type: "com.azure.storage.file.datalake.implementation.models.PathReadHeaders"
      description: "the deserialized headers of the HTTP response."
- uid: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.close()"
  id: "close()"
  parent: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse"
  langs:
  - "java"
  name: "close()"
  nameWithType: "PathsReadResponse.close()"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.close()"
  overload: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.close*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Disposes of the connection associated with this stream response."
  syntax:
    content: "public void close()"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.getValue()"
  id: "getValue()"
  parent: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "PathsReadResponse.getValue()"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.getValue()"
  overload: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.getValue*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.models"
  syntax:
    content: "public Flux<ByteBuffer> getValue()"
    return:
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
      description: "the response content stream."
references:
- uid: "com.azure.core.http.HttpRequest"
  spec.java:
  - uid: "com.azure.core.http.HttpRequest"
    name: "HttpRequest"
    fullName: "com.azure.core.http.HttpRequest"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.core.http.HttpHeaders"
  spec.java:
  - uid: "com.azure.core.http.HttpHeaders"
    name: "HttpHeaders"
    fullName: "com.azure.core.http.HttpHeaders"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.models.PathReadHeaders"
  name: "PathReadHeaders"
  nameWithType: "PathReadHeaders"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathReadHeaders"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.PathsReadResponse*"
  name: "PathsReadResponse"
  nameWithType: "PathsReadResponse.PathsReadResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.PathsReadResponse"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.getValue*"
  name: "getValue"
  nameWithType: "PathsReadResponse.getValue"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.getValue"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.close*"
  name: "close"
  nameWithType: "PathsReadResponse.close"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse.close"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "com.azure.core.http.rest.ResponseBase<com.azure.storage.file.datalake.implementation.models.PathReadHeaders,reactor.core.publisher.Flux<java.nio.ByteBuffer>>"
  name: "ResponseBase<PathReadHeaders,Flux<ByteBuffer>>"
  nameWithType: "ResponseBase<PathReadHeaders,Flux<ByteBuffer>>"
  fullName: "com.azure.core.http.rest.ResponseBase<com.azure.storage.file.datalake.implementation.models.PathReadHeaders,reactor.core.publisher.Flux<java.nio.ByteBuffer>>"
- uid: "java.io.Closeable"
  name: "Closeable"
  nameWithType: "Closeable"
  fullName: "java.io.Closeable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.core.http.rest.ResponseBase.getHeaders()"
  name: "ResponseBase.getHeaders()"
  nameWithType: "ResponseBase.getHeaders()"
  fullName: "com.azure.core.http.rest.ResponseBase.getHeaders()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.http.rest.ResponseBase.getRequest()"
  name: "ResponseBase.getRequest()"
  nameWithType: "ResponseBase.getRequest()"
  fullName: "com.azure.core.http.rest.ResponseBase.getRequest()"
- uid: "com.azure.core.http.rest.ResponseBase.getStatusCode()"
  name: "ResponseBase.getStatusCode()"
  nameWithType: "ResponseBase.getStatusCode()"
  fullName: "com.azure.core.http.rest.ResponseBase.getStatusCode()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.azure.core.http.rest.ResponseBase.getDeserializedHeaders()"
  name: "ResponseBase.getDeserializedHeaders()"
  nameWithType: "ResponseBase.getDeserializedHeaders()"
  fullName: "com.azure.core.http.rest.ResponseBase.getDeserializedHeaders()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.azure.core.http.rest.ResponseBase.getValue()"
  name: "ResponseBase.getValue()"
  nameWithType: "ResponseBase.getValue()"
  fullName: "com.azure.core.http.rest.ResponseBase.getValue()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
- uid: "com.azure.core.http.rest.ResponseBase"
  name: "ResponseBase"
  nameWithType: "ResponseBase"
  fullName: "com.azure.core.http.rest.ResponseBase"
- uid: "com.azure.storage.file.datalake.implementation.models.PathReadHeaders,reactor.core.publisher.Flux"
  name: "PathReadHeaders,Flux"
  nameWithType: "PathReadHeaders,Flux"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathReadHeaders,reactor.core.publisher.Flux"
