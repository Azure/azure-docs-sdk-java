### YamlMime:JavaMember
uid: "com.azure.storage.queue.QueueAsyncClient.updateMessageWithResponse*"
fullName: "com.azure.storage.queue.QueueAsyncClient.updateMessageWithResponse"
name: "updateMessageWithResponse"
nameWithType: "QueueAsyncClient.updateMessageWithResponse"
members:
- uid: "com.azure.storage.queue.QueueAsyncClient.updateMessageWithResponse(java.lang.String,java.lang.String,java.lang.String,java.time.Duration)"
  fullName: "com.azure.storage.queue.QueueAsyncClient.updateMessageWithResponse(String messageId, String popReceipt, String messageText, Duration visibilityTimeout)"
  name: "updateMessageWithResponse(String messageId, String popReceipt, String messageText, Duration visibilityTimeout)"
  nameWithType: "QueueAsyncClient.updateMessageWithResponse(String messageId, String popReceipt, String messageText, Duration visibilityTimeout)"
  summary: "Updates the specific message in the queue with a new message and resets the visibility timeout.\n\n**Code Samples**\n\nDequeue the first message and update it to \"Hello again, Azure\" and hide it for 5 seconds\n\n```java\nclient.receiveMessage().subscribe(\n     message -> {\n         client.updateMessageWithResponse(message.getMessageId(), message.getPopReceipt(), \"newText\",\n             null).subscribe(\n                 response -> System.out.println(\"Complete updating the message with status code:\"\n                     + response.getStatusCode()),\n                 updateError -> System.err.print(updateError.toString()),\n                 () -> System.out.println(\"Complete updating the message!\")\n         );\n     },\n     error -> System.err.print(error.toString()),\n     () -> System.out.println(\"Complete receiving the message!\")\n );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/update-message"
  parameters:
  - description: "Id of the message to update"
    name: "messageId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Unique identifier that must match for the message to be updated"
    name: "popReceipt"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Updated value for the message"
    name: "messageText"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The timeout period for how long the message is invisible in the queue in seconds. The\n timeout period must be between 1 second and 7 days."
    name: "visibilityTimeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<UpdateMessageResult>> updateMessageWithResponse(String messageId, String popReceipt, String messageText, Duration visibilityTimeout)"
  returns:
    description: "A <xref uid=\"com.azure.storage.queue.models.UpdateMessageResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UpdateMessageResult\"></xref> that contains the new\n <xref uid=\"com.azure.storage.queue.models.UpdateMessageResult.getPopReceipt()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"popReceipt\"></xref> to interact with the message,\n additionally contains the updated metadata about the message."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.queue.models.UpdateMessageResult?alt=com.azure.storage.queue.models.UpdateMessageResult&text=UpdateMessageResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.queue"
artifact: com.azure:azure-storage-queue:12.6.0
