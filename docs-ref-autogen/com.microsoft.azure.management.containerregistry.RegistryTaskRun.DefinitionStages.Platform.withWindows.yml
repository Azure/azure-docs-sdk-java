### YamlMime:JavaMember
nameWithType: RegistryTaskRun.DefinitionStages.Platform.withWindows
type: method
members:
- fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows()
  name: withWindows()
  nameWithType: RegistryTaskRun.DefinitionStages.Platform.withWindows()
  returns:
    description: <p>the next stage of the container registry task run definition. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType?alt=com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType&text=RegistryTaskRun.DefinitionStages.RunRequestType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies the platform will have a Windows OS.</p>

    <p></p>
  syntax: public RunRequestType withWindows()
  uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows()
- fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture architecture)
  name: withWindows(Architecture architecture)
  nameWithType: RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture architecture)
  parameters:
  - description: <p>the architecture the platform will have. </p>
    name: architecture
    type: <xref href="com.microsoft.azure.management.containerregistry.Architecture?alt=com.microsoft.azure.management.containerregistry.Architecture&text=Architecture" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the container registry task run definition. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType?alt=com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType&text=RegistryTaskRun.DefinitionStages.RunRequestType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies the platform will have a Windows OS with Architecture architecture.</p>

    <p></p>
  syntax: public RunRequestType withWindows(Architecture architecture)
  uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture)
- fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture architecture, Variant variant)
  name: withWindows(Architecture architecture, Variant variant)
  nameWithType: RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture architecture, Variant variant)
  parameters:
  - description: <p>the architecture the platform will have. </p>
    name: architecture
    type: <xref href="com.microsoft.azure.management.containerregistry.Architecture?alt=com.microsoft.azure.management.containerregistry.Architecture&text=Architecture" data-throw-if-not-resolved="False"/>
  - description: <p>the variant the platform will have. </p>
    name: variant
    type: <xref href="com.microsoft.azure.management.containerregistry.Variant?alt=com.microsoft.azure.management.containerregistry.Variant&text=Variant" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the container registry task run definition. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType?alt=com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.RunRequestType&text=RegistryTaskRun.DefinitionStages.RunRequestType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies the platform will have a Windows OS with Architecture architecture and Variant variant.</p>

    <p></p>
  syntax: public RunRequestType withWindows(Architecture architecture, Variant variant)
  uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows(Architecture,Variant)
uid: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows*
fullName: com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.Platform.withWindows()
name: withWindows()
package: com.microsoft.azure.management.containerregistry
metadata: {}
