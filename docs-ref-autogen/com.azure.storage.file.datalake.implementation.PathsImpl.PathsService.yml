### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService"
  id: "PathsService"
  parent: "com.azure.storage.file.datalake.implementation"
  children:
  - "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.appendData(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Integer,java.lang.Long,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.create(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathResourceType,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathRenameMode,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.flushData(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Long,java.lang.Boolean,java.lang.Boolean,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.getProperties(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathGetPropertiesAction,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.lease(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathLeaseAction,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.read(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.setAccessControl(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.update(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathUpdateAction,java.lang.Long,java.lang.Boolean,java.lang.Boolean,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "PathsImpl.PathsService"
  nameWithType: "PathsImpl.PathsService"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService"
  type: "Interface"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "The interface defining all the services for DataLakeStorageClientPaths to be used by the proxy service to perform REST calls."
  syntax:
    content: "private static interface PathsImpl.PathsService"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.appendData(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Integer,java.lang.Long,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "appendData(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Integer,java.lang.Long,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService"
  langs:
  - "java"
  name: "appendData(String fileSystem, String path1, String url, Long position, Integer timeout, Long contentLength, Flux<ByteBuffer> body, String requestId, String version, String action, String transactionalContentHash, String leaseId, Context context)"
  nameWithType: "PathsImpl.PathsService.appendData(String fileSystem, String path1, String url, Long position, Integer timeout, Long contentLength, Flux<ByteBuffer> body, String requestId, String version, String action, String transactionalContentHash, String leaseId, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.appendData(String fileSystem, String path1, String url, Long position, Integer timeout, Long contentLength, Flux<ByteBuffer> body, String requestId, String version, String action, String transactionalContentHash, String leaseId, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.appendData*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  syntax:
    content: "public abstract Mono<PathsAppendDataResponse> appendData(String fileSystem, String path1, String url, Long position, Integer timeout, Long contentLength, Flux<ByteBuffer> body, String requestId, String version, String action, String transactionalContentHash, String leaseId, Context context)"
    parameters:
    - id: "fileSystem"
      type: "java.lang.String"
    - id: "path1"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "position"
      type: "java.lang.Long"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "contentLength"
      type: "java.lang.Long"
    - id: "body"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
    - id: "requestId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "transactionalContentHash"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsAppendDataResponse>"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.create(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathResourceType,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathRenameMode,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  id: "create(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathResourceType,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathRenameMode,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService"
  langs:
  - "java"
  name: "create(String fileSystem, String path1, String url, PathResourceType resource, String continuation, PathRenameMode mode, String renameSource, String sourceLeaseId, String properties, String permissions, String umask, String requestId, Integer timeout, String version, String cacheControl, String contentEncoding, String contentLanguage, String contentDisposition, String contentType, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, Context context)"
  nameWithType: "PathsImpl.PathsService.create(String fileSystem, String path1, String url, PathResourceType resource, String continuation, PathRenameMode mode, String renameSource, String sourceLeaseId, String properties, String permissions, String umask, String requestId, Integer timeout, String version, String cacheControl, String contentEncoding, String contentLanguage, String contentDisposition, String contentType, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.create(String fileSystem, String path1, String url, PathResourceType resource, String continuation, PathRenameMode mode, String renameSource, String sourceLeaseId, String properties, String permissions, String umask, String requestId, Integer timeout, String version, String cacheControl, String contentEncoding, String contentLanguage, String contentDisposition, String contentType, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.create*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  syntax:
    content: "public abstract Mono<PathsCreateResponse> create(String fileSystem, String path1, String url, PathResourceType resource, String continuation, PathRenameMode mode, String renameSource, String sourceLeaseId, String properties, String permissions, String umask, String requestId, Integer timeout, String version, String cacheControl, String contentEncoding, String contentLanguage, String contentDisposition, String contentType, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, Context context)"
    parameters:
    - id: "fileSystem"
      type: "java.lang.String"
    - id: "path1"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "resource"
      type: "com.azure.storage.file.datalake.implementation.models.PathResourceType"
    - id: "continuation"
      type: "java.lang.String"
    - id: "mode"
      type: "com.azure.storage.file.datalake.implementation.models.PathRenameMode"
    - id: "renameSource"
      type: "java.lang.String"
    - id: "sourceLeaseId"
      type: "java.lang.String"
    - id: "properties"
      type: "java.lang.String"
    - id: "permissions"
      type: "java.lang.String"
    - id: "umask"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "cacheControl"
      type: "java.lang.String"
    - id: "contentEncoding"
      type: "java.lang.String"
    - id: "contentLanguage"
      type: "java.lang.String"
    - id: "contentDisposition"
      type: "java.lang.String"
    - id: "contentType"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "sourceIfMatch"
      type: "java.lang.String"
    - id: "sourceIfNoneMatch"
      type: "java.lang.String"
    - id: "sourceIfModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "sourceIfUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsCreateResponse>"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  id: "delete(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService"
  langs:
  - "java"
  name: "delete(String fileSystem, String path1, String url, Boolean recursive, String continuation, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  nameWithType: "PathsImpl.PathsService.delete(String fileSystem, String path1, String url, Boolean recursive, String continuation, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.delete(String fileSystem, String path1, String url, Boolean recursive, String continuation, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.delete*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  syntax:
    content: "public abstract Mono<PathsDeleteResponse> delete(String fileSystem, String path1, String url, Boolean recursive, String continuation, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
    parameters:
    - id: "fileSystem"
      type: "java.lang.String"
    - id: "path1"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "recursive"
      type: "java.lang.Boolean"
    - id: "continuation"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsDeleteResponse>"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.flushData(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Long,java.lang.Boolean,java.lang.Boolean,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  id: "flushData(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Long,java.lang.Boolean,java.lang.Boolean,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService"
  langs:
  - "java"
  name: "flushData(String fileSystem, String path1, String url, Integer timeout, Long position, Boolean retainUncommittedData, Boolean close, Long contentLength, String requestId, String version, String action, String contentMd5, String cacheControl, String contentType, String contentDisposition, String contentEncoding, String contentLanguage, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  nameWithType: "PathsImpl.PathsService.flushData(String fileSystem, String path1, String url, Integer timeout, Long position, Boolean retainUncommittedData, Boolean close, Long contentLength, String requestId, String version, String action, String contentMd5, String cacheControl, String contentType, String contentDisposition, String contentEncoding, String contentLanguage, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.flushData(String fileSystem, String path1, String url, Integer timeout, Long position, Boolean retainUncommittedData, Boolean close, Long contentLength, String requestId, String version, String action, String contentMd5, String cacheControl, String contentType, String contentDisposition, String contentEncoding, String contentLanguage, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.flushData*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  syntax:
    content: "public abstract Mono<PathsFlushDataResponse> flushData(String fileSystem, String path1, String url, Integer timeout, Long position, Boolean retainUncommittedData, Boolean close, Long contentLength, String requestId, String version, String action, String contentMd5, String cacheControl, String contentType, String contentDisposition, String contentEncoding, String contentLanguage, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
    parameters:
    - id: "fileSystem"
      type: "java.lang.String"
    - id: "path1"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "position"
      type: "java.lang.Long"
    - id: "retainUncommittedData"
      type: "java.lang.Boolean"
    - id: "close"
      type: "java.lang.Boolean"
    - id: "contentLength"
      type: "java.lang.Long"
    - id: "requestId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "contentMd5"
      type: "java.lang.String"
    - id: "cacheControl"
      type: "java.lang.String"
    - id: "contentType"
      type: "java.lang.String"
    - id: "contentDisposition"
      type: "java.lang.String"
    - id: "contentEncoding"
      type: "java.lang.String"
    - id: "contentLanguage"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsFlushDataResponse>"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.getProperties(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathGetPropertiesAction,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  id: "getProperties(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathGetPropertiesAction,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService"
  langs:
  - "java"
  name: "getProperties(String fileSystem, String path1, String url, PathGetPropertiesAction action, Boolean upn, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  nameWithType: "PathsImpl.PathsService.getProperties(String fileSystem, String path1, String url, PathGetPropertiesAction action, Boolean upn, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.getProperties(String fileSystem, String path1, String url, PathGetPropertiesAction action, Boolean upn, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.getProperties*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  syntax:
    content: "public abstract Mono<PathsGetPropertiesResponse> getProperties(String fileSystem, String path1, String url, PathGetPropertiesAction action, Boolean upn, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
    parameters:
    - id: "fileSystem"
      type: "java.lang.String"
    - id: "path1"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "action"
      type: "com.azure.storage.file.datalake.implementation.models.PathGetPropertiesAction"
    - id: "upn"
      type: "java.lang.Boolean"
    - id: "requestId"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsGetPropertiesResponse>"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.lease(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathLeaseAction,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  id: "lease(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathLeaseAction,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService"
  langs:
  - "java"
  name: "lease(String fileSystem, String path1, String url, PathLeaseAction xMsLeaseAction, Integer xMsLeaseDuration, Integer xMsLeaseBreakPeriod, String proposedLeaseId, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  nameWithType: "PathsImpl.PathsService.lease(String fileSystem, String path1, String url, PathLeaseAction xMsLeaseAction, Integer xMsLeaseDuration, Integer xMsLeaseBreakPeriod, String proposedLeaseId, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.lease(String fileSystem, String path1, String url, PathLeaseAction xMsLeaseAction, Integer xMsLeaseDuration, Integer xMsLeaseBreakPeriod, String proposedLeaseId, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.lease*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  syntax:
    content: "public abstract Mono<PathsLeaseResponse> lease(String fileSystem, String path1, String url, PathLeaseAction xMsLeaseAction, Integer xMsLeaseDuration, Integer xMsLeaseBreakPeriod, String proposedLeaseId, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
    parameters:
    - id: "fileSystem"
      type: "java.lang.String"
    - id: "path1"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "xMsLeaseAction"
      type: "com.azure.storage.file.datalake.implementation.models.PathLeaseAction"
    - id: "xMsLeaseDuration"
      type: "java.lang.Integer"
    - id: "xMsLeaseBreakPeriod"
      type: "java.lang.Integer"
    - id: "proposedLeaseId"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsLeaseResponse>"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.read(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  id: "read(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService"
  langs:
  - "java"
  name: "read(String fileSystem, String path1, String url, String range, Boolean xMsRangeGetContentMd5, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  nameWithType: "PathsImpl.PathsService.read(String fileSystem, String path1, String url, String range, Boolean xMsRangeGetContentMd5, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.read(String fileSystem, String path1, String url, String range, Boolean xMsRangeGetContentMd5, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.read*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  syntax:
    content: "public abstract Mono<PathsReadResponse> read(String fileSystem, String path1, String url, String range, Boolean xMsRangeGetContentMd5, String requestId, Integer timeout, String version, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
    parameters:
    - id: "fileSystem"
      type: "java.lang.String"
    - id: "path1"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "range"
      type: "java.lang.String"
    - id: "xMsRangeGetContentMd5"
      type: "java.lang.Boolean"
    - id: "requestId"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsReadResponse>"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.setAccessControl(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  id: "setAccessControl(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService"
  langs:
  - "java"
  name: "setAccessControl(String fileSystem, String path1, String url, Integer timeout, String owner, String group, String permissions, String acl, String requestId, String version, String action, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  nameWithType: "PathsImpl.PathsService.setAccessControl(String fileSystem, String path1, String url, Integer timeout, String owner, String group, String permissions, String acl, String requestId, String version, String action, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.setAccessControl(String fileSystem, String path1, String url, Integer timeout, String owner, String group, String permissions, String acl, String requestId, String version, String action, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.setAccessControl*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  syntax:
    content: "public abstract Mono<PathsSetAccessControlResponse> setAccessControl(String fileSystem, String path1, String url, Integer timeout, String owner, String group, String permissions, String acl, String requestId, String version, String action, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
    parameters:
    - id: "fileSystem"
      type: "java.lang.String"
    - id: "path1"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "owner"
      type: "java.lang.String"
    - id: "group"
      type: "java.lang.String"
    - id: "permissions"
      type: "java.lang.String"
    - id: "acl"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsSetAccessControlResponse>"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.update(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathUpdateAction,java.lang.Long,java.lang.Boolean,java.lang.Boolean,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  id: "update(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.datalake.implementation.models.PathUpdateAction,java.lang.Long,java.lang.Boolean,java.lang.Boolean,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService"
  langs:
  - "java"
  name: "update(String fileSystem, String path1, String url, PathUpdateAction action, Long position, Boolean retainUncommittedData, Boolean close, Long contentLength, String properties, String owner, String group, String permissions, String acl, Flux<ByteBuffer> body, String requestId, Integer timeout, String version, String contentMd5, String cacheControl, String contentType, String contentDisposition, String contentEncoding, String contentLanguage, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  nameWithType: "PathsImpl.PathsService.update(String fileSystem, String path1, String url, PathUpdateAction action, Long position, Boolean retainUncommittedData, Boolean close, Long contentLength, String properties, String owner, String group, String permissions, String acl, Flux<ByteBuffer> body, String requestId, Integer timeout, String version, String contentMd5, String cacheControl, String contentType, String contentDisposition, String contentEncoding, String contentLanguage, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.update(String fileSystem, String path1, String url, PathUpdateAction action, Long position, Boolean retainUncommittedData, Boolean close, Long contentLength, String properties, String owner, String group, String permissions, String acl, Flux<ByteBuffer> body, String requestId, Integer timeout, String version, String contentMd5, String cacheControl, String contentType, String contentDisposition, String contentEncoding, String contentLanguage, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.update*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  syntax:
    content: "public abstract Mono<PathsUpdateResponse> update(String fileSystem, String path1, String url, PathUpdateAction action, Long position, Boolean retainUncommittedData, Boolean close, Long contentLength, String properties, String owner, String group, String permissions, String acl, Flux<ByteBuffer> body, String requestId, Integer timeout, String version, String contentMd5, String cacheControl, String contentType, String contentDisposition, String contentEncoding, String contentLanguage, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, Context context)"
    parameters:
    - id: "fileSystem"
      type: "java.lang.String"
    - id: "path1"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "action"
      type: "com.azure.storage.file.datalake.implementation.models.PathUpdateAction"
    - id: "position"
      type: "java.lang.Long"
    - id: "retainUncommittedData"
      type: "java.lang.Boolean"
    - id: "close"
      type: "java.lang.Boolean"
    - id: "contentLength"
      type: "java.lang.Long"
    - id: "properties"
      type: "java.lang.String"
    - id: "owner"
      type: "java.lang.String"
    - id: "group"
      type: "java.lang.String"
    - id: "permissions"
      type: "java.lang.String"
    - id: "acl"
      type: "java.lang.String"
    - id: "body"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
    - id: "requestId"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "contentMd5"
      type: "java.lang.String"
    - id: "cacheControl"
      type: "java.lang.String"
    - id: "contentType"
      type: "java.lang.String"
    - id: "contentDisposition"
      type: "java.lang.String"
    - id: "contentEncoding"
      type: "java.lang.String"
    - id: "contentLanguage"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsUpdateResponse>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.datalake.implementation.models.PathResourceType"
  name: "PathResourceType"
  nameWithType: "PathResourceType"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathResourceType"
- uid: "com.azure.storage.file.datalake.implementation.models.PathRenameMode"
  name: "PathRenameMode"
  nameWithType: "PathRenameMode"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathRenameMode"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.core.util.DateTimeRfc1123"
  spec.java:
  - uid: "com.azure.core.util.DateTimeRfc1123"
    name: "DateTimeRfc1123"
    fullName: "com.azure.core.util.DateTimeRfc1123"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsCreateResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.PathsCreateResponse"
    name: "PathsCreateResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.PathsCreateResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.create*"
  name: "create"
  nameWithType: "PathsImpl.PathsService.create"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.create"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "com.azure.storage.file.datalake.implementation.models.PathUpdateAction"
  name: "PathUpdateAction"
  nameWithType: "PathUpdateAction"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathUpdateAction"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsUpdateResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.PathsUpdateResponse"
    name: "PathsUpdateResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.PathsUpdateResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.update*"
  name: "update"
  nameWithType: "PathsImpl.PathsService.update"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.update"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "com.azure.storage.file.datalake.implementation.models.PathLeaseAction"
  name: "PathLeaseAction"
  nameWithType: "PathLeaseAction"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathLeaseAction"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.PathsLeaseResponse"
    name: "PathsLeaseResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.PathsLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.lease*"
  name: "lease"
  nameWithType: "PathsImpl.PathsService.lease"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.lease"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsReadResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse"
    name: "PathsReadResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.read*"
  name: "read"
  nameWithType: "PathsImpl.PathsService.read"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.read"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "com.azure.storage.file.datalake.implementation.models.PathGetPropertiesAction"
  name: "PathGetPropertiesAction"
  nameWithType: "PathGetPropertiesAction"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathGetPropertiesAction"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsGetPropertiesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.PathsGetPropertiesResponse"
    name: "PathsGetPropertiesResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.PathsGetPropertiesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.getProperties*"
  name: "getProperties"
  nameWithType: "PathsImpl.PathsService.getProperties"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.getProperties"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsDeleteResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.PathsDeleteResponse"
    name: "PathsDeleteResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.PathsDeleteResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.delete*"
  name: "delete"
  nameWithType: "PathsImpl.PathsService.delete"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.delete"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsSetAccessControlResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.PathsSetAccessControlResponse"
    name: "PathsSetAccessControlResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.PathsSetAccessControlResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.setAccessControl*"
  name: "setAccessControl"
  nameWithType: "PathsImpl.PathsService.setAccessControl"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.setAccessControl"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsFlushDataResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.PathsFlushDataResponse"
    name: "PathsFlushDataResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.PathsFlushDataResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.flushData*"
  name: "flushData"
  nameWithType: "PathsImpl.PathsService.flushData"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.flushData"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.PathsAppendDataResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.PathsAppendDataResponse"
    name: "PathsAppendDataResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.PathsAppendDataResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.appendData*"
  name: "appendData"
  nameWithType: "PathsImpl.PathsService.appendData"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.PathsService.appendData"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsCreateResponse"
  name: "PathsCreateResponse"
  nameWithType: "PathsCreateResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsCreateResponse"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsUpdateResponse"
  name: "PathsUpdateResponse"
  nameWithType: "PathsUpdateResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsUpdateResponse"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsLeaseResponse"
  name: "PathsLeaseResponse"
  nameWithType: "PathsLeaseResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsLeaseResponse"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse"
  name: "PathsReadResponse"
  nameWithType: "PathsReadResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsReadResponse"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsGetPropertiesResponse"
  name: "PathsGetPropertiesResponse"
  nameWithType: "PathsGetPropertiesResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsGetPropertiesResponse"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsDeleteResponse"
  name: "PathsDeleteResponse"
  nameWithType: "PathsDeleteResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsDeleteResponse"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsSetAccessControlResponse"
  name: "PathsSetAccessControlResponse"
  nameWithType: "PathsSetAccessControlResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsSetAccessControlResponse"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsFlushDataResponse"
  name: "PathsFlushDataResponse"
  nameWithType: "PathsFlushDataResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsFlushDataResponse"
- uid: "com.azure.storage.file.datalake.implementation.models.PathsAppendDataResponse"
  name: "PathsAppendDataResponse"
  nameWithType: "PathsAppendDataResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.PathsAppendDataResponse"
