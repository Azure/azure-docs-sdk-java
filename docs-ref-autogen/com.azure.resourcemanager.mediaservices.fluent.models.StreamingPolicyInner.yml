### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner"
fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner"
name: "StreamingPolicyInner"
nameWithType: "StreamingPolicyInner"
summary: "A Streaming Policy resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class StreamingPolicyInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.StreamingPolicyInner()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.StreamingPolicyInner()"
  name: "StreamingPolicyInner()"
  nameWithType: "StreamingPolicyInner.StreamingPolicyInner()"
  syntax: "public StreamingPolicyInner()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.commonEncryptionCbcs()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.commonEncryptionCbcs()"
  name: "commonEncryptionCbcs()"
  nameWithType: "StreamingPolicyInner.commonEncryptionCbcs()"
  summary: "Get the common<wbr>Encryption<wbr>Cbcs property: Configuration of Common<wbr>Encryption<wbr>Cbcs."
  syntax: "public CommonEncryptionCbcs commonEncryptionCbcs()"
  desc: "Get the commonEncryptionCbcs property: Configuration of CommonEncryptionCbcs."
  returns:
    description: "the commonEncryptionCbcs value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.commonEncryptionCenc()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.commonEncryptionCenc()"
  name: "commonEncryptionCenc()"
  nameWithType: "StreamingPolicyInner.commonEncryptionCenc()"
  summary: "Get the common<wbr>Encryption<wbr>Cenc property: Configuration of Common<wbr>Encryption<wbr>Cenc."
  syntax: "public CommonEncryptionCenc commonEncryptionCenc()"
  desc: "Get the commonEncryptionCenc property: Configuration of CommonEncryptionCenc."
  returns:
    description: "the commonEncryptionCenc value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc&text=CommonEncryptionCenc\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.created()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.created()"
  name: "created()"
  nameWithType: "StreamingPolicyInner.created()"
  summary: "Get the created property: Creation time of Streaming Policy."
  syntax: "public OffsetDateTime created()"
  desc: "Get the created property: Creation time of Streaming Policy."
  returns:
    description: "the created value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.defaultContentKeyPolicyName()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.defaultContentKeyPolicyName()"
  name: "defaultContentKeyPolicyName()"
  nameWithType: "StreamingPolicyInner.defaultContentKeyPolicyName()"
  summary: "Get the default<wbr>Content<wbr>Key<wbr>Policy<wbr>Name property: Default Content<wbr>Key used by current Streaming Policy."
  syntax: "public String defaultContentKeyPolicyName()"
  desc: "Get the defaultContentKeyPolicyName property: Default ContentKey used by current Streaming Policy."
  returns:
    description: "the defaultContentKeyPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.envelopeEncryption()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.envelopeEncryption()"
  name: "envelopeEncryption()"
  nameWithType: "StreamingPolicyInner.envelopeEncryption()"
  summary: "Get the envelope<wbr>Encryption property: Configuration of Envelope<wbr>Encryption."
  syntax: "public EnvelopeEncryption envelopeEncryption()"
  desc: "Get the envelopeEncryption property: Configuration of EnvelopeEncryption."
  returns:
    description: "the envelopeEncryption value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption?alt=com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption&text=EnvelopeEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.noEncryption()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.noEncryption()"
  name: "noEncryption()"
  nameWithType: "StreamingPolicyInner.noEncryption()"
  summary: "Get the no<wbr>Encryption property: Configurations of No<wbr>Encryption."
  syntax: "public NoEncryption noEncryption()"
  desc: "Get the noEncryption property: Configurations of NoEncryption."
  returns:
    description: "the noEncryption value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.NoEncryption?alt=com.azure.resourcemanager.mediaservices.models.NoEncryption&text=NoEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.systemData()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.systemData()"
  name: "systemData()"
  nameWithType: "StreamingPolicyInner.systemData()"
  summary: "Get the system<wbr>Data property: The system metadata relating to this resource."
  syntax: "public SystemData systemData()"
  desc: "Get the systemData property: The system metadata relating to this resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.validate()"
  name: "validate()"
  nameWithType: "StreamingPolicyInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.withCommonEncryptionCbcs(com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.withCommonEncryptionCbcs(CommonEncryptionCbcs commonEncryptionCbcs)"
  name: "withCommonEncryptionCbcs(CommonEncryptionCbcs commonEncryptionCbcs)"
  nameWithType: "StreamingPolicyInner.withCommonEncryptionCbcs(CommonEncryptionCbcs commonEncryptionCbcs)"
  summary: "Set the common<wbr>Encryption<wbr>Cbcs property: Configuration of Common<wbr>Encryption<wbr>Cbcs."
  parameters:
  - description: "the commonEncryptionCbcs value to set."
    name: "commonEncryptionCbcs"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyInner withCommonEncryptionCbcs(CommonEncryptionCbcs commonEncryptionCbcs)"
  desc: "Set the commonEncryptionCbcs property: Configuration of CommonEncryptionCbcs."
  returns:
    description: "the StreamingPolicyInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner&text=StreamingPolicyInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.withCommonEncryptionCenc(com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.withCommonEncryptionCenc(CommonEncryptionCenc commonEncryptionCenc)"
  name: "withCommonEncryptionCenc(CommonEncryptionCenc commonEncryptionCenc)"
  nameWithType: "StreamingPolicyInner.withCommonEncryptionCenc(CommonEncryptionCenc commonEncryptionCenc)"
  summary: "Set the common<wbr>Encryption<wbr>Cenc property: Configuration of Common<wbr>Encryption<wbr>Cenc."
  parameters:
  - description: "the commonEncryptionCenc value to set."
    name: "commonEncryptionCenc"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc&text=CommonEncryptionCenc\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyInner withCommonEncryptionCenc(CommonEncryptionCenc commonEncryptionCenc)"
  desc: "Set the commonEncryptionCenc property: Configuration of CommonEncryptionCenc."
  returns:
    description: "the StreamingPolicyInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner&text=StreamingPolicyInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.withDefaultContentKeyPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName)"
  name: "withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName)"
  nameWithType: "StreamingPolicyInner.withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName)"
  summary: "Set the default<wbr>Content<wbr>Key<wbr>Policy<wbr>Name property: Default Content<wbr>Key used by current Streaming Policy."
  parameters:
  - description: "the defaultContentKeyPolicyName value to set."
    name: "defaultContentKeyPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyInner withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName)"
  desc: "Set the defaultContentKeyPolicyName property: Default ContentKey used by current Streaming Policy."
  returns:
    description: "the StreamingPolicyInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner&text=StreamingPolicyInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.withEnvelopeEncryption(com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.withEnvelopeEncryption(EnvelopeEncryption envelopeEncryption)"
  name: "withEnvelopeEncryption(EnvelopeEncryption envelopeEncryption)"
  nameWithType: "StreamingPolicyInner.withEnvelopeEncryption(EnvelopeEncryption envelopeEncryption)"
  summary: "Set the envelope<wbr>Encryption property: Configuration of Envelope<wbr>Encryption."
  parameters:
  - description: "the envelopeEncryption value to set."
    name: "envelopeEncryption"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption?alt=com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption&text=EnvelopeEncryption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyInner withEnvelopeEncryption(EnvelopeEncryption envelopeEncryption)"
  desc: "Set the envelopeEncryption property: Configuration of EnvelopeEncryption."
  returns:
    description: "the StreamingPolicyInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner&text=StreamingPolicyInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.withNoEncryption(com.azure.resourcemanager.mediaservices.models.NoEncryption)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner.withNoEncryption(NoEncryption noEncryption)"
  name: "withNoEncryption(NoEncryption noEncryption)"
  nameWithType: "StreamingPolicyInner.withNoEncryption(NoEncryption noEncryption)"
  summary: "Set the no<wbr>Encryption property: Configurations of No<wbr>Encryption."
  parameters:
  - description: "the noEncryption value to set."
    name: "noEncryption"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.NoEncryption?alt=com.azure.resourcemanager.mediaservices.models.NoEncryption&text=NoEncryption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyInner withNoEncryption(NoEncryption noEncryption)"
  desc: "Set the noEncryption property: Configurations of NoEncryption."
  returns:
    description: "the StreamingPolicyInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyInner&text=StreamingPolicyInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A Streaming Policy resource."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0
