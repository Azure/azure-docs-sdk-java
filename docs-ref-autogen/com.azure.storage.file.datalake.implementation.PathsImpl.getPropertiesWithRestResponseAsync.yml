### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.implementation.PathsImpl.getPropertiesWithRestResponseAsync*"
fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.getPropertiesWithRestResponseAsync"
name: "getPropertiesWithRestResponseAsync"
nameWithType: "PathsImpl.getPropertiesWithRestResponseAsync"
members:
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.getPropertiesWithRestResponseAsync(com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.getPropertiesWithRestResponseAsync(Context context)"
  name: "getPropertiesWithRestResponseAsync(Context context)"
  nameWithType: "PathsImpl.getPropertiesWithRestResponseAsync(Context context)"
  summary: "Get Properties | Get Status | Get Access Control List Get Properties returns all system and user defined properties for a path. Get Status returns all system defined properties for a path. Get Access Control List returns the access control list for a path. This operation supports conditional HTTP requests. For more information, see \\[Specifying Conditional Headers for Blob Service Operations\\](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)."
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PathsGetPropertiesResponse> getPropertiesWithRestResponseAsync(Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.implementation.models.PathsGetPropertiesResponse?alt=com.azure.storage.file.datalake.implementation.models.PathsGetPropertiesResponse&text=PathsGetPropertiesResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.datalake.implementation.PathsImpl.getPropertiesWithRestResponseAsync(com.azure.storage.file.datalake.implementation.models.PathGetPropertiesAction,java.lang.Boolean,java.lang.String,java.lang.Integer,com.azure.storage.file.datalake.implementation.models.LeaseAccessConditions,com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.datalake.implementation.PathsImpl.getPropertiesWithRestResponseAsync(PathGetPropertiesAction action, Boolean upn, String requestId, Integer timeout, LeaseAccessConditions leaseAccessConditions, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  name: "getPropertiesWithRestResponseAsync(PathGetPropertiesAction action, Boolean upn, String requestId, Integer timeout, LeaseAccessConditions leaseAccessConditions, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  nameWithType: "PathsImpl.getPropertiesWithRestResponseAsync(PathGetPropertiesAction action, Boolean upn, String requestId, Integer timeout, LeaseAccessConditions leaseAccessConditions, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  summary: "Get Properties | Get Status | Get Access Control List Get Properties returns all system and user defined properties for a path. Get Status returns all system defined properties for a path. Get Access Control List returns the access control list for a path. This operation supports conditional HTTP requests. For more information, see \\[Specifying Conditional Headers for Blob Service Operations\\](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)."
  parameters:
  - description: "Optional. If the value is \"getStatus\" only the system defined properties for the path are returned. If the value is \"getAccessControl\" the access control list is returned in the response headers (Hierarchical Namespace must be enabled for the account), otherwise the properties are returned. Possible values include: 'getAccessControl', 'getStatus'."
    name: "action"
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.PathGetPropertiesAction?alt=com.azure.storage.file.datalake.implementation.models.PathGetPropertiesAction&text=PathGetPropertiesAction\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names."
    name: "upn"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    name: "requestId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    name: "timeout"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation."
    name: "leaseAccessConditions"
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.LeaseAccessConditions?alt=com.azure.storage.file.datalake.implementation.models.LeaseAccessConditions&text=LeaseAccessConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation."
    name: "modifiedAccessConditions"
    type: "<xref href=\"com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions?alt=com.azure.storage.file.datalake.implementation.models.ModifiedAccessConditions&text=ModifiedAccessConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PathsGetPropertiesResponse> getPropertiesWithRestResponseAsync(PathGetPropertiesAction action, Boolean upn, String requestId, Integer timeout, LeaseAccessConditions leaseAccessConditions, ModifiedAccessConditions modifiedAccessConditions, Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.implementation.models.PathsGetPropertiesResponse?alt=com.azure.storage.file.datalake.implementation.models.PathsGetPropertiesResponse&text=PathsGetPropertiesResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.implementation"
artifact: com.azure:azure-storage-file-datalake:12.4.1
