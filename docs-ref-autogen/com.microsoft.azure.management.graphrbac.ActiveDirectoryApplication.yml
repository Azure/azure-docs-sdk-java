### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.applicationId()
  name: applicationId()
  nameWithType: ActiveDirectoryApplication.applicationId()
  returns:
    description: <p>the application ID </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String applicationId()
  uid: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.applicationId()
- fullName: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.applicationPermissions()
  name: applicationPermissions()
  nameWithType: ActiveDirectoryApplication.applicationPermissions()
  returns:
    description: <p>the application permissions </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public List<String> applicationPermissions()
  uid: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.applicationPermissions()
- fullName: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.availableToOtherTenants()
  name: availableToOtherTenants()
  nameWithType: ActiveDirectoryApplication.availableToOtherTenants()
  returns:
    description: <p>whether the application is be available to other tenants </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean availableToOtherTenants()
  uid: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.availableToOtherTenants()
- fullName: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.certificateCredentials()
  name: certificateCredentials()
  nameWithType: ActiveDirectoryApplication.certificateCredentials()
  returns:
    description: <p>the mapping of certificate credentials from their names </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.graphrbac.CertificateCredential?alt=com.microsoft.azure.management.graphrbac.CertificateCredential&text=CertificateCredential" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, CertificateCredential> certificateCredentials()
  uid: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.certificateCredentials()
- fullName: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.identifierUris()
  name: identifierUris()
  nameWithType: ActiveDirectoryApplication.identifierUris()
  returns:
    description: <p>a collection of URIs for the application </p>
    type: <xref href="Set%3CString%3E?alt=Set%3CString%3E&text=Set%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public Set<String> identifierUris()
  uid: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.identifierUris()
- fullName: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.passwordCredentials()
  name: passwordCredentials()
  nameWithType: ActiveDirectoryApplication.passwordCredentials()
  returns:
    description: <p>the mapping of password credentials from their names </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.graphrbac.PasswordCredential?alt=com.microsoft.azure.management.graphrbac.PasswordCredential&text=PasswordCredential" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, PasswordCredential> passwordCredentials()
  uid: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.passwordCredentials()
- fullName: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.replyUrls()
  name: replyUrls()
  nameWithType: ActiveDirectoryApplication.replyUrls()
  returns:
    description: <p>a collection of reply URLs for the application </p>
    type: <xref href="Set%3CString%3E?alt=Set%3CString%3E&text=Set%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public Set<String> replyUrls()
  uid: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.replyUrls()
- fullName: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.signOnUrl()
  name: signOnUrl()
  nameWithType: ActiveDirectoryApplication.signOnUrl()
  returns:
    description: <p>the home page of the application </p>
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  syntax: public URL signOnUrl()
  uid: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication.signOnUrl()
nameWithType: ActiveDirectoryApplication
syntax: public interface ActiveDirectoryApplication extends ActiveDirectoryObject,HasInner<ApplicationInner>,Updatable<ActiveDirectoryApplication.Update>
type: interface
uid: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication
fullName: com.microsoft.azure.management.graphrbac.ActiveDirectoryApplication
name: ActiveDirectoryApplication
package: com.microsoft.azure.management.graphrbac
summary: <p>An immutable client-side representation of an Azure AD application. </p>
metadata: {}
