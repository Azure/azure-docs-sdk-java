### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties"
fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties"
name: "ValidateProperties"
nameWithType: "ValidateProperties"
summary: "App properties used for validation."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ValidateProperties"
constructors:
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.ValidateProperties()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.ValidateProperties()"
  name: "ValidateProperties()"
  nameWithType: "ValidateProperties.ValidateProperties()"
  syntax: "public ValidateProperties()"
methods:
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.appServiceEnvironment()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.appServiceEnvironment()"
  name: "appServiceEnvironment()"
  nameWithType: "ValidateProperties.appServiceEnvironment()"
  summary: "Get the app<wbr>Service<wbr>Environment property: App Service Environment Properties."
  syntax: "public AppServiceEnvironment appServiceEnvironment()"
  desc: "Get the appServiceEnvironment property: App Service Environment Properties."
  returns:
    description: "the appServiceEnvironment value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServiceEnvironment?alt=com.azure.resourcemanager.appservice.fluent.models.AppServiceEnvironment&text=AppServiceEnvironment\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.capacity()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.capacity()"
  name: "capacity()"
  nameWithType: "ValidateProperties.capacity()"
  summary: "Get the capacity property: Target capacity of the App Service plan (number of VMs)."
  syntax: "public Integer capacity()"
  desc: "Get the capacity property: Target capacity of the App Service plan (number of VMs)."
  returns:
    description: "the capacity value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.containerImagePlatform()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.containerImagePlatform()"
  name: "containerImagePlatform()"
  nameWithType: "ValidateProperties.containerImagePlatform()"
  summary: "Get the container<wbr>Image<wbr>Platform property: Platform (windows or linux)."
  syntax: "public String containerImagePlatform()"
  desc: "Get the containerImagePlatform property: Platform (windows or linux)."
  returns:
    description: "the containerImagePlatform value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.containerImageRepository()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.containerImageRepository()"
  name: "containerImageRepository()"
  nameWithType: "ValidateProperties.containerImageRepository()"
  summary: "Get the container<wbr>Image<wbr>Repository property: Repository name (image name)."
  syntax: "public String containerImageRepository()"
  desc: "Get the containerImageRepository property: Repository name (image name)."
  returns:
    description: "the containerImageRepository value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.containerImageTag()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.containerImageTag()"
  name: "containerImageTag()"
  nameWithType: "ValidateProperties.containerImageTag()"
  summary: "Get the container<wbr>Image<wbr>Tag property: Image tag."
  syntax: "public String containerImageTag()"
  desc: "Get the containerImageTag property: Image tag."
  returns:
    description: "the containerImageTag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.containerRegistryBaseUrl()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.containerRegistryBaseUrl()"
  name: "containerRegistryBaseUrl()"
  nameWithType: "ValidateProperties.containerRegistryBaseUrl()"
  summary: "Get the container<wbr>Registry<wbr>Base<wbr>Url property: Base URL of the container registry."
  syntax: "public String containerRegistryBaseUrl()"
  desc: "Get the containerRegistryBaseUrl property: Base URL of the container registry."
  returns:
    description: "the containerRegistryBaseUrl value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.containerRegistryPassword()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.containerRegistryPassword()"
  name: "containerRegistryPassword()"
  nameWithType: "ValidateProperties.containerRegistryPassword()"
  summary: "Get the container<wbr>Registry<wbr>Password property: Password for to access the container registry."
  syntax: "public String containerRegistryPassword()"
  desc: "Get the containerRegistryPassword property: Password for to access the container registry."
  returns:
    description: "the containerRegistryPassword value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.containerRegistryUsername()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.containerRegistryUsername()"
  name: "containerRegistryUsername()"
  nameWithType: "ValidateProperties.containerRegistryUsername()"
  summary: "Get the container<wbr>Registry<wbr>Username property: Username for to access the container registry."
  syntax: "public String containerRegistryUsername()"
  desc: "Get the containerRegistryUsername property: Username for to access the container registry."
  returns:
    description: "the containerRegistryUsername value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.hostingEnvironment()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.hostingEnvironment()"
  name: "hostingEnvironment()"
  nameWithType: "ValidateProperties.hostingEnvironment()"
  summary: "Get the hosting<wbr>Environment property: Name of App Service Environment where app or App Service plan should be created."
  syntax: "public String hostingEnvironment()"
  desc: "Get the hostingEnvironment property: Name of App Service Environment where app or App Service plan should be created."
  returns:
    description: "the hostingEnvironment value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.isSpot()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.isSpot()"
  name: "isSpot()"
  nameWithType: "ValidateProperties.isSpot()"
  summary: "Get the is<wbr>Spot property: <code>true</code> if App Service plan is for Spot instances; otherwise, <code>false</code>."
  syntax: "public Boolean isSpot()"
  desc: "Get the isSpot property: <code>true</code> if App Service plan is for Spot instances; otherwise, <code>false</code>."
  returns:
    description: "the isSpot value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.isXenon()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.isXenon()"
  name: "isXenon()"
  nameWithType: "ValidateProperties.isXenon()"
  summary: "Get the is<wbr>Xenon property: <code>true</code> if App Service plan is running as a windows container."
  syntax: "public Boolean isXenon()"
  desc: "Get the isXenon property: <code>true</code> if App Service plan is running as a windows container."
  returns:
    description: "the isXenon value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.needLinuxWorkers()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.needLinuxWorkers()"
  name: "needLinuxWorkers()"
  nameWithType: "ValidateProperties.needLinuxWorkers()"
  summary: "Get the need<wbr>Linux<wbr>Workers property: <code>true</code> if App Service plan is for Linux workers; otherwise, <code>false</code>."
  syntax: "public Boolean needLinuxWorkers()"
  desc: "Get the needLinuxWorkers property: <code>true</code> if App Service plan is for Linux workers; otherwise, <code>false</code>."
  returns:
    description: "the needLinuxWorkers value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.serverFarmId()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.serverFarmId()"
  name: "serverFarmId()"
  nameWithType: "ValidateProperties.serverFarmId()"
  summary: "Get the server<wbr>Farm<wbr>Id property: ARM resource ID of an App Service plan that would host the app."
  syntax: "public String serverFarmId()"
  desc: "Get the serverFarmId property: ARM resource ID of an App Service plan that would host the app."
  returns:
    description: "the serverFarmId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.skuName()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.skuName()"
  name: "skuName()"
  nameWithType: "ValidateProperties.skuName()"
  summary: "Get the sku<wbr>Name property: Name of the target SKU for the App Service plan."
  syntax: "public String skuName()"
  desc: "Get the skuName property: Name of the target SKU for the App Service plan."
  returns:
    description: "the skuName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.validate()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.validate()"
  name: "validate()"
  nameWithType: "ValidateProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withAppServiceEnvironment(com.azure.resourcemanager.appservice.fluent.models.AppServiceEnvironment)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withAppServiceEnvironment(AppServiceEnvironment appServiceEnvironment)"
  name: "withAppServiceEnvironment(AppServiceEnvironment appServiceEnvironment)"
  nameWithType: "ValidateProperties.withAppServiceEnvironment(AppServiceEnvironment appServiceEnvironment)"
  summary: "Set the app<wbr>Service<wbr>Environment property: App Service Environment Properties."
  parameters:
  - description: "the appServiceEnvironment value to set."
    name: "appServiceEnvironment"
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServiceEnvironment?alt=com.azure.resourcemanager.appservice.fluent.models.AppServiceEnvironment&text=AppServiceEnvironment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withAppServiceEnvironment(AppServiceEnvironment appServiceEnvironment)"
  desc: "Set the appServiceEnvironment property: App Service Environment Properties."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withCapacity(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withCapacity(Integer capacity)"
  name: "withCapacity(Integer capacity)"
  nameWithType: "ValidateProperties.withCapacity(Integer capacity)"
  summary: "Set the capacity property: Target capacity of the App Service plan (number of VMs)."
  parameters:
  - description: "the capacity value to set."
    name: "capacity"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withCapacity(Integer capacity)"
  desc: "Set the capacity property: Target capacity of the App Service plan (number of VMs)."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withContainerImagePlatform(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withContainerImagePlatform(String containerImagePlatform)"
  name: "withContainerImagePlatform(String containerImagePlatform)"
  nameWithType: "ValidateProperties.withContainerImagePlatform(String containerImagePlatform)"
  summary: "Set the container<wbr>Image<wbr>Platform property: Platform (windows or linux)."
  parameters:
  - description: "the containerImagePlatform value to set."
    name: "containerImagePlatform"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withContainerImagePlatform(String containerImagePlatform)"
  desc: "Set the containerImagePlatform property: Platform (windows or linux)."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withContainerImageRepository(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withContainerImageRepository(String containerImageRepository)"
  name: "withContainerImageRepository(String containerImageRepository)"
  nameWithType: "ValidateProperties.withContainerImageRepository(String containerImageRepository)"
  summary: "Set the container<wbr>Image<wbr>Repository property: Repository name (image name)."
  parameters:
  - description: "the containerImageRepository value to set."
    name: "containerImageRepository"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withContainerImageRepository(String containerImageRepository)"
  desc: "Set the containerImageRepository property: Repository name (image name)."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withContainerImageTag(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withContainerImageTag(String containerImageTag)"
  name: "withContainerImageTag(String containerImageTag)"
  nameWithType: "ValidateProperties.withContainerImageTag(String containerImageTag)"
  summary: "Set the container<wbr>Image<wbr>Tag property: Image tag."
  parameters:
  - description: "the containerImageTag value to set."
    name: "containerImageTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withContainerImageTag(String containerImageTag)"
  desc: "Set the containerImageTag property: Image tag."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withContainerRegistryBaseUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withContainerRegistryBaseUrl(String containerRegistryBaseUrl)"
  name: "withContainerRegistryBaseUrl(String containerRegistryBaseUrl)"
  nameWithType: "ValidateProperties.withContainerRegistryBaseUrl(String containerRegistryBaseUrl)"
  summary: "Set the container<wbr>Registry<wbr>Base<wbr>Url property: Base URL of the container registry."
  parameters:
  - description: "the containerRegistryBaseUrl value to set."
    name: "containerRegistryBaseUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withContainerRegistryBaseUrl(String containerRegistryBaseUrl)"
  desc: "Set the containerRegistryBaseUrl property: Base URL of the container registry."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withContainerRegistryPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withContainerRegistryPassword(String containerRegistryPassword)"
  name: "withContainerRegistryPassword(String containerRegistryPassword)"
  nameWithType: "ValidateProperties.withContainerRegistryPassword(String containerRegistryPassword)"
  summary: "Set the container<wbr>Registry<wbr>Password property: Password for to access the container registry."
  parameters:
  - description: "the containerRegistryPassword value to set."
    name: "containerRegistryPassword"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withContainerRegistryPassword(String containerRegistryPassword)"
  desc: "Set the containerRegistryPassword property: Password for to access the container registry."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withContainerRegistryUsername(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withContainerRegistryUsername(String containerRegistryUsername)"
  name: "withContainerRegistryUsername(String containerRegistryUsername)"
  nameWithType: "ValidateProperties.withContainerRegistryUsername(String containerRegistryUsername)"
  summary: "Set the container<wbr>Registry<wbr>Username property: Username for to access the container registry."
  parameters:
  - description: "the containerRegistryUsername value to set."
    name: "containerRegistryUsername"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withContainerRegistryUsername(String containerRegistryUsername)"
  desc: "Set the containerRegistryUsername property: Username for to access the container registry."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withHostingEnvironment(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withHostingEnvironment(String hostingEnvironment)"
  name: "withHostingEnvironment(String hostingEnvironment)"
  nameWithType: "ValidateProperties.withHostingEnvironment(String hostingEnvironment)"
  summary: "Set the hosting<wbr>Environment property: Name of App Service Environment where app or App Service plan should be created."
  parameters:
  - description: "the hostingEnvironment value to set."
    name: "hostingEnvironment"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withHostingEnvironment(String hostingEnvironment)"
  desc: "Set the hostingEnvironment property: Name of App Service Environment where app or App Service plan should be created."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withIsSpot(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withIsSpot(Boolean isSpot)"
  name: "withIsSpot(Boolean isSpot)"
  nameWithType: "ValidateProperties.withIsSpot(Boolean isSpot)"
  summary: "Set the is<wbr>Spot property: <code>true</code> if App Service plan is for Spot instances; otherwise, <code>false</code>."
  parameters:
  - description: "the isSpot value to set."
    name: "isSpot"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withIsSpot(Boolean isSpot)"
  desc: "Set the isSpot property: <code>true</code> if App Service plan is for Spot instances; otherwise, <code>false</code>."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withIsXenon(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withIsXenon(Boolean isXenon)"
  name: "withIsXenon(Boolean isXenon)"
  nameWithType: "ValidateProperties.withIsXenon(Boolean isXenon)"
  summary: "Set the is<wbr>Xenon property: <code>true</code> if App Service plan is running as a windows container."
  parameters:
  - description: "the isXenon value to set."
    name: "isXenon"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withIsXenon(Boolean isXenon)"
  desc: "Set the isXenon property: <code>true</code> if App Service plan is running as a windows container."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withNeedLinuxWorkers(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withNeedLinuxWorkers(Boolean needLinuxWorkers)"
  name: "withNeedLinuxWorkers(Boolean needLinuxWorkers)"
  nameWithType: "ValidateProperties.withNeedLinuxWorkers(Boolean needLinuxWorkers)"
  summary: "Set the need<wbr>Linux<wbr>Workers property: <code>true</code> if App Service plan is for Linux workers; otherwise, <code>false</code>."
  parameters:
  - description: "the needLinuxWorkers value to set."
    name: "needLinuxWorkers"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withNeedLinuxWorkers(Boolean needLinuxWorkers)"
  desc: "Set the needLinuxWorkers property: <code>true</code> if App Service plan is for Linux workers; otherwise, <code>false</code>."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withServerFarmId(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withServerFarmId(String serverFarmId)"
  name: "withServerFarmId(String serverFarmId)"
  nameWithType: "ValidateProperties.withServerFarmId(String serverFarmId)"
  summary: "Set the server<wbr>Farm<wbr>Id property: ARM resource ID of an App Service plan that would host the app."
  parameters:
  - description: "the serverFarmId value to set."
    name: "serverFarmId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withServerFarmId(String serverFarmId)"
  desc: "Set the serverFarmId property: ARM resource ID of an App Service plan that would host the app."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withSkuName(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.ValidateProperties.withSkuName(String skuName)"
  name: "withSkuName(String skuName)"
  nameWithType: "ValidateProperties.withSkuName(String skuName)"
  summary: "Set the sku<wbr>Name property: Name of the target SKU for the App Service plan."
  parameters:
  - description: "the skuName value to set."
    name: "skuName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ValidateProperties withSkuName(String skuName)"
  desc: "Set the skuName property: Name of the target SKU for the App Service plan."
  returns:
    description: "the ValidateProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ValidateProperties?alt=com.azure.resourcemanager.appservice.fluent.models.ValidateProperties&text=ValidateProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "App properties used for validation."
metadata: {}
package: "com.azure.resourcemanager.appservice.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.16.0
