### YamlMime:JavaMember
nameWithType: JobInner.executionState
type: method
members:
- fullName: com.microsoft.azure.management.batchai.implementation.JobInner.executionState()
  name: executionState()
  nameWithType: JobInner.executionState()
  returns:
    description: <p>the executionState value </p>
    type: <xref href="com.microsoft.azure.management.batchai.ExecutionState?alt=com.microsoft.azure.management.batchai.ExecutionState&text=ExecutionState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the current state of the job. Possible values are: queued - The job is queued and able to run. A job enters this state when it is created, or when it is awaiting a retry after a failed run. running - The job is running on a compute cluster. This includes job-level preparation such as downloading resource files or set up container specified on the job - it does not necessarily mean that the job command line has started executing. terminating - The job is terminated by the user, the terminate operation is in progress. succeeded - The job has completed running succesfully and exited with exit code 0. failed - The job has finished unsuccessfully (failed with a non-zero exit code) and has exhausted its retry limit. A job is also marked as failed if an error occurred launching the job. Possible values include: 'queued', 'running', 'terminating', 'succeeded', 'failed'.</p>

    <p></p>
  syntax: public ExecutionState executionState()
  uid: com.microsoft.azure.management.batchai.implementation.JobInner.executionState()
uid: com.microsoft.azure.management.batchai.implementation.JobInner.executionState*
fullName: com.microsoft.azure.management.batchai.implementation.JobInner.executionState()
name: executionState()
package: com.microsoft.azure.management.batchai.implementation
metadata: {}
