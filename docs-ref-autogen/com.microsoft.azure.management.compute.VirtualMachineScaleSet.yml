### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.availabilityZones()
  name: availabilityZones()
  nameWithType: VirtualMachineScaleSet.availabilityZones()
  returns:
    description: <p>the availability zones assigned to virtual machine scale set. </p>
    type: Set&lt;<xref href="com.microsoft.azure.management.resources.fluentcore.arm.AvailabilityZoneId?alt=com.microsoft.azure.management.resources.fluentcore.arm.AvailabilityZoneId&text=AvailabilityZoneId" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Set<AvailabilityZoneId> availabilityZones()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.availabilityZones()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.capacity()
  name: capacity()
  nameWithType: VirtualMachineScaleSet.capacity()
  returns:
    description: <p>the number of virtual machine instances in the scale set </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int capacity()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.capacity()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.computerNamePrefix()
  name: computerNamePrefix()
  nameWithType: VirtualMachineScaleSet.computerNamePrefix()
  returns:
    description: <p>the name prefix of the virtual machines in the scale set </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String computerNamePrefix()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.computerNamePrefix()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.deallocate()
  name: deallocate()
  nameWithType: VirtualMachineScaleSet.deallocate()
  summary: <p>Shuts down the virtual machines in the scale set and releases its compute resources. </p>
  syntax: public void deallocate()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.deallocate()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.deallocateAsync()
  name: deallocateAsync()
  nameWithType: VirtualMachineScaleSet.deallocateAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Shuts down the virtual machines in the scale set and releases its compute resources asynchronously.</p>

    <p></p>
  syntax: public Completable deallocateAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.deallocateAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.deallocateAsync(ServiceCallback<Void> callback)
  name: deallocateAsync(ServiceCallback<Void> callback)
  nameWithType: VirtualMachineScaleSet.deallocateAsync(ServiceCallback<Void> callback)
  parameters:
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Shuts down the virtual machines in the scale set and releases its compute resources asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deallocateAsync(ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.deallocateAsync(ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.extensions()
  name: extensions()
  nameWithType: VirtualMachineScaleSet.extensions()
  returns:
    description: <p>the extensions attached to the virtual machines in the scale set </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSetExtension?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSetExtension&text=VirtualMachineScaleSetExtension" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, VirtualMachineScaleSetExtension> extensions()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.extensions()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.getNetworkInterfaceByInstanceId(String instanceId, String name)
  name: getNetworkInterfaceByInstanceId(String instanceId, String name)
  nameWithType: VirtualMachineScaleSet.getNetworkInterfaceByInstanceId(String instanceId, String name)
  parameters:
  - description: <p>the virtual machine scale set vm instance ID </p>
    name: instanceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the network interface name </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the network interface </p>
    type: <xref href="com.microsoft.azure.management.network.VirtualMachineScaleSetNetworkInterface?alt=com.microsoft.azure.management.network.VirtualMachineScaleSetNetworkInterface&text=VirtualMachineScaleSetNetworkInterface" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a network interface associated with a virtual machine scale set instance.</p>

    <p></p>
  syntax: public VirtualMachineScaleSetNetworkInterface getNetworkInterfaceByInstanceId(String instanceId, String name)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.getNetworkInterfaceByInstanceId(String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.getPrimaryInternalLoadBalancer()
  name: getPrimaryInternalLoadBalancer()
  nameWithType: VirtualMachineScaleSet.getPrimaryInternalLoadBalancer()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>the IO exception </p>
  returns:
    description: <p>the internal load balancer associated with the primary network interface of the virtual machines in the scale set</p>
    type: <xref href="com.microsoft.azure.management.network.LoadBalancer?alt=com.microsoft.azure.management.network.LoadBalancer&text=LoadBalancer" data-throw-if-not-resolved="False"/>
  syntax: public LoadBalancer getPrimaryInternalLoadBalancer()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.getPrimaryInternalLoadBalancer()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.getPrimaryInternetFacingLoadBalancer()
  name: getPrimaryInternetFacingLoadBalancer()
  nameWithType: VirtualMachineScaleSet.getPrimaryInternetFacingLoadBalancer()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>the IO exception </p>
  returns:
    description: <p>the Internet-facing load balancer associated with the primary network interface of the virtual machines in the scale set.</p>
    type: <xref href="com.microsoft.azure.management.network.LoadBalancer?alt=com.microsoft.azure.management.network.LoadBalancer&text=LoadBalancer" data-throw-if-not-resolved="False"/>
  syntax: public LoadBalancer getPrimaryInternetFacingLoadBalancer()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.getPrimaryInternetFacingLoadBalancer()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.getPrimaryNetwork()
  name: getPrimaryNetwork()
  nameWithType: VirtualMachineScaleSet.getPrimaryNetwork()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>the IO exception </p>
  returns:
    description: <p>the virtual network associated with the primary network interfaces of the virtual machines in the scale set. </p>
    type: <xref href="com.microsoft.azure.management.network.Network?alt=com.microsoft.azure.management.network.Network&text=Network" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>

    A primary internal load balancer associated with the primary network interfaces of the scale set virtual machine will be also belong to this network </p>

    <p></p>
  syntax: public Network getPrimaryNetwork()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.getPrimaryNetwork()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.isManagedDiskEnabled()
  name: isManagedDiskEnabled()
  nameWithType: VirtualMachineScaleSet.isManagedDiskEnabled()
  returns:
    description: <p>true if managed disk is used for the virtual machine scale set's disks (os, data) </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isManagedDiskEnabled()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.isManagedDiskEnabled()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.isManagedServiceIdentityEnabled()
  name: isManagedServiceIdentityEnabled()
  nameWithType: VirtualMachineScaleSet.isManagedServiceIdentityEnabled()
  returns:
    description: <p>true if Managed Service Identity is enabled for the virtual machine scale set </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isManagedServiceIdentityEnabled()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.isManagedServiceIdentityEnabled()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listAvailableSkus()
  name: listAvailableSkus()
  nameWithType: VirtualMachineScaleSet.listAvailableSkus()
  returns:
    description: <p>available SKUs for the virtual machine scale set, including the minimum and maximum virtual machine instances allowed for a particular SKU </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSetSku?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSetSku&text=VirtualMachineScaleSetSku" data-throw-if-not-resolved="False"/>&gt;
  syntax: public PagedList<VirtualMachineScaleSetSku> listAvailableSkus()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listAvailableSkus()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listNetworkInterfaces()
  name: listNetworkInterfaces()
  nameWithType: VirtualMachineScaleSet.listNetworkInterfaces()
  returns:
    description: <p>the network interfaces associated with all virtual machine instances in a scale set </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.network.VirtualMachineScaleSetNetworkInterface?alt=com.microsoft.azure.management.network.VirtualMachineScaleSetNetworkInterface&text=VirtualMachineScaleSetNetworkInterface" data-throw-if-not-resolved="False"/>&gt;
  syntax: public PagedList<VirtualMachineScaleSetNetworkInterface> listNetworkInterfaces()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listNetworkInterfaces()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listNetworkInterfacesByInstanceId(String virtualMachineInstanceId)
  name: listNetworkInterfacesByInstanceId(String virtualMachineInstanceId)
  nameWithType: VirtualMachineScaleSet.listNetworkInterfacesByInstanceId(String virtualMachineInstanceId)
  parameters:
  - description: <p>the instance ID </p>
    name: virtualMachineInstanceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the network interfaces </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.network.VirtualMachineScaleSetNetworkInterface?alt=com.microsoft.azure.management.network.VirtualMachineScaleSetNetworkInterface&text=VirtualMachineScaleSetNetworkInterface" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the network interface associated with a specific virtual machine instance in the scale set.</p>

    <p></p>
  syntax: public PagedList<VirtualMachineScaleSetNetworkInterface> listNetworkInterfacesByInstanceId(String virtualMachineInstanceId)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listNetworkInterfacesByInstanceId(String)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listPrimaryInternalLoadBalancerBackends()
  name: listPrimaryInternalLoadBalancerBackends()
  nameWithType: VirtualMachineScaleSet.listPrimaryInternalLoadBalancerBackends()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>the IO exception </p>
  returns:
    description: <p>the internal load balancer's backends associated with the primary network interface of the virtual machines in the scale set</p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.LoadBalancerBackend?alt=com.microsoft.azure.management.network.LoadBalancerBackend&text=LoadBalancerBackend" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, LoadBalancerBackend> listPrimaryInternalLoadBalancerBackends()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listPrimaryInternalLoadBalancerBackends()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listPrimaryInternalLoadBalancerInboundNatPools()
  name: listPrimaryInternalLoadBalancerInboundNatPools()
  nameWithType: VirtualMachineScaleSet.listPrimaryInternalLoadBalancerInboundNatPools()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>the IO exception </p>
  returns:
    description: <p>the inbound NAT pools of the internal load balancer associated with the primary network interface of the virtual machines in the scale set, if any.</p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.LoadBalancerInboundNatPool?alt=com.microsoft.azure.management.network.LoadBalancerInboundNatPool&text=LoadBalancerInboundNatPool" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, LoadBalancerInboundNatPool> listPrimaryInternalLoadBalancerInboundNatPools()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listPrimaryInternalLoadBalancerInboundNatPools()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listPrimaryInternetFacingLoadBalancerBackends()
  name: listPrimaryInternetFacingLoadBalancerBackends()
  nameWithType: VirtualMachineScaleSet.listPrimaryInternetFacingLoadBalancerBackends()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>the IO exception </p>
  returns:
    description: <p>the Internet-facing load balancer's backends associated with the primary network interface of the virtual machines in the scale set</p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.LoadBalancerBackend?alt=com.microsoft.azure.management.network.LoadBalancerBackend&text=LoadBalancerBackend" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, LoadBalancerBackend> listPrimaryInternetFacingLoadBalancerBackends()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listPrimaryInternetFacingLoadBalancerBackends()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listPrimaryInternetFacingLoadBalancerInboundNatPools()
  name: listPrimaryInternetFacingLoadBalancerInboundNatPools()
  nameWithType: VirtualMachineScaleSet.listPrimaryInternetFacingLoadBalancerInboundNatPools()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>the IO exception </p>
  returns:
    description: <p>the Internet-facing load balancer's inbound NAT pool associated with the primary network interface of the virtual machines in the scale set</p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.LoadBalancerInboundNatPool?alt=com.microsoft.azure.management.network.LoadBalancerInboundNatPool&text=LoadBalancerInboundNatPool" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, LoadBalancerInboundNatPool> listPrimaryInternetFacingLoadBalancerInboundNatPools()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.listPrimaryInternetFacingLoadBalancerInboundNatPools()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.managedServiceIdentityPrincipalId()
  name: managedServiceIdentityPrincipalId()
  nameWithType: VirtualMachineScaleSet.managedServiceIdentityPrincipalId()
  returns:
    description: <p>the Managed Service Identity specific Active Directory service principal ID assigned to the virtual machine scale set. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String managedServiceIdentityPrincipalId()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.managedServiceIdentityPrincipalId()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.managedServiceIdentityTenantId()
  name: managedServiceIdentityTenantId()
  nameWithType: VirtualMachineScaleSet.managedServiceIdentityTenantId()
  returns:
    description: <p>the Managed Service Identity specific Active Directory tenant ID assigned to the virtual machine scale set. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String managedServiceIdentityTenantId()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.managedServiceIdentityTenantId()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.networkProfile()
  name: networkProfile()
  nameWithType: VirtualMachineScaleSet.networkProfile()
  returns:
    description: <p>the network profile </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSetNetworkProfile?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSetNetworkProfile&text=VirtualMachineScaleSetNetworkProfile" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachineScaleSetNetworkProfile networkProfile()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.networkProfile()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.osDiskCachingType()
  name: osDiskCachingType()
  nameWithType: VirtualMachineScaleSet.osDiskCachingType()
  returns:
    description: <p>the operating system disk caching type </p>
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  syntax: public CachingTypes osDiskCachingType()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.osDiskCachingType()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.osDiskName()
  name: osDiskName()
  nameWithType: VirtualMachineScaleSet.osDiskName()
  returns:
    description: <p>the name of the OS disk of virtual machines in the scale set </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String osDiskName()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.osDiskName()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.osType()
  name: osType()
  nameWithType: VirtualMachineScaleSet.osType()
  returns:
    description: <p>the operating system of the virtual machines in the scale set </p>
    type: <xref href="com.microsoft.azure.management.compute.OperatingSystemTypes?alt=com.microsoft.azure.management.compute.OperatingSystemTypes&text=OperatingSystemTypes" data-throw-if-not-resolved="False"/>
  syntax: public OperatingSystemTypes osType()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.osType()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.overProvisionEnabled()
  name: overProvisionEnabled()
  nameWithType: VirtualMachineScaleSet.overProvisionEnabled()
  returns:
    description: <p>true if over provision is enabled for the virtual machines, false otherwise </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean overProvisionEnabled()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.overProvisionEnabled()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.powerOff()
  name: powerOff()
  nameWithType: VirtualMachineScaleSet.powerOff()
  summary: <p>Powers off (stops) the virtual machines in the scale set. </p>
  syntax: public void powerOff()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.powerOff()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.powerOffAsync()
  name: powerOffAsync()
  nameWithType: VirtualMachineScaleSet.powerOffAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: <p>Powers off (stops) the virtual machines in the scale set asynchronously. </p>
  syntax: public Completable powerOffAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.powerOffAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.powerOffAsync(ServiceCallback<Void> callback)
  name: powerOffAsync(ServiceCallback<Void> callback)
  nameWithType: VirtualMachineScaleSet.powerOffAsync(ServiceCallback<Void> callback)
  parameters:
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Powers off (stops) the virtual machines in the scale set asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> powerOffAsync(ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.powerOffAsync(ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.primaryPublicIPAddressIds()
  name: primaryPublicIPAddressIds()
  nameWithType: VirtualMachineScaleSet.primaryPublicIPAddressIds()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>the IO exception </p>
  returns:
    description: <p>the list of IDs of the public IP addresses associated with the primary Internet-facing load balancer of the scale set </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public List<String> primaryPublicIPAddressIds()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.primaryPublicIPAddressIds()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.reimage()
  name: reimage()
  nameWithType: VirtualMachineScaleSet.reimage()
  summary: <p>Re-images (updates the version of the installed operating system) the virtual machines in the scale set. </p>
  syntax: public void reimage()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.reimage()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.reimageAsync()
  name: reimageAsync()
  nameWithType: VirtualMachineScaleSet.reimageAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Re-images (updates the version of the installed operating system) the virtual machines in the scale set asynchronously.</p>

    <p></p>
  syntax: public Completable reimageAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.reimageAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.reimageAsync(ServiceCallback<Void> callback)
  name: reimageAsync(ServiceCallback<Void> callback)
  nameWithType: VirtualMachineScaleSet.reimageAsync(ServiceCallback<Void> callback)
  parameters:
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Re-images (updates the version of the installed operating system) the virtual machines in the scale set asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> reimageAsync(ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.reimageAsync(ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.restart()
  name: restart()
  nameWithType: VirtualMachineScaleSet.restart()
  summary: <p>Restarts the virtual machines in the scale set. </p>
  syntax: public void restart()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.restart()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.restartAsync()
  name: restartAsync()
  nameWithType: VirtualMachineScaleSet.restartAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Restarts the virtual machines in the scale set asynchronously.</p>

    <p></p>
  syntax: public Completable restartAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.restartAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.restartAsync(ServiceCallback<Void> callback)
  name: restartAsync(ServiceCallback<Void> callback)
  nameWithType: VirtualMachineScaleSet.restartAsync(ServiceCallback<Void> callback)
  parameters:
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Restarts the virtual machines in the scale set asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> restartAsync(ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.restartAsync(ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.sku()
  name: sku()
  nameWithType: VirtualMachineScaleSet.sku()
  returns:
    description: <p>the SKU of the virtual machines in the scale set </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSetSkuTypes?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSetSkuTypes&text=VirtualMachineScaleSetSkuTypes" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachineScaleSetSkuTypes sku()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.sku()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.start()
  name: start()
  nameWithType: VirtualMachineScaleSet.start()
  summary: <p>Starts the virtual machines in the scale set. </p>
  syntax: public void start()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.start()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.startAsync()
  name: startAsync()
  nameWithType: VirtualMachineScaleSet.startAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Starts the virtual machines in the scale set asynchronously.</p>

    <p></p>
  syntax: public Completable startAsync()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.startAsync()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.startAsync(ServiceCallback<Void> callback)
  name: startAsync(ServiceCallback<Void> callback)
  nameWithType: VirtualMachineScaleSet.startAsync(ServiceCallback<Void> callback)
  parameters:
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Starts the virtual machines in the scale set asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> startAsync(ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.startAsync(ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.storageProfile()
  name: storageProfile()
  nameWithType: VirtualMachineScaleSet.storageProfile()
  returns:
    description: <p>the storage profile </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSetStorageProfile?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSetStorageProfile&text=VirtualMachineScaleSetStorageProfile" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachineScaleSetStorageProfile storageProfile()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.storageProfile()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.upgradeModel()
  name: upgradeModel()
  nameWithType: VirtualMachineScaleSet.upgradeModel()
  returns:
    description: <p>the upgrade model </p>
    type: <xref href="com.microsoft.azure.management.compute.UpgradeMode?alt=com.microsoft.azure.management.compute.UpgradeMode&text=UpgradeMode" data-throw-if-not-resolved="False"/>
  syntax: public UpgradeMode upgradeModel()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.upgradeModel()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.vhdContainers()
  name: vhdContainers()
  nameWithType: VirtualMachineScaleSet.vhdContainers()
  returns:
    description: <p>the URL to storage containers that store the VHDs of the virtual machines in the scale set </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public List<String> vhdContainers()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.vhdContainers()
- fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.virtualMachines()
  name: virtualMachines()
  nameWithType: VirtualMachineScaleSet.virtualMachines()
  returns:
    description: <p>entry point to manage virtual machine instances in the scale set. </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSetVMs?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSetVMs&text=VirtualMachineScaleSetVMs" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachineScaleSetVMs virtualMachines()
  uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.virtualMachines()
nameWithType: VirtualMachineScaleSet
syntax: public interface VirtualMachineScaleSet extends GroupableResource<ComputeManager, VirtualMachineScaleSetInner>,Refreshable<VirtualMachineScaleSet>,Updatable<VirtualMachineScaleSet.UpdateStages.WithPrimaryLoadBalancer>
type: interface
uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet
fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet
name: VirtualMachineScaleSet
package: com.microsoft.azure.management.compute
summary: <p>An immutable client-side representation of an Azure virtual machine scale set. </p>
metadata: {}
