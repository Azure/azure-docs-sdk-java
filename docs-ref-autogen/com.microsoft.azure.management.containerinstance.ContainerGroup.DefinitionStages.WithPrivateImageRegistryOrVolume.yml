### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume
  id: WithPrivateImageRegistryOrVolume
  parent: com.microsoft.azure.management.containerinstance
  children:
  - com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.defineVolume(String)
  - com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withNewAzureFileShareVolume(String,String)
  - com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withoutVolume()
  href: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.yml
  langs:
  - java
  name: ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume
  nameWithType: ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume
  fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-containerinstance/src/main/java/com/microsoft/azure/management/containerinstance/ContainerGroup.java
      branch: v1.3.0
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-containerinstance/src/main/java/com/microsoft/azure/management/containerinstance/ContainerGroup.java
    startLine: 227
  package: com.microsoft.azure.management.containerinstance
  summary: "<p>The stage of the container group definition allowing to specify a private image registry or a volume. </p>"
  syntax:
    content: public interface WithPrivateImageRegistryOrVolume extends ContainerGroup.DefinitionStages.WithPrivateImageRegistry
  inheritedMembers:
  - com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistry.withPrivateImageRegistry(String,String,String)
- uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.defineVolume(String)
  id: defineVolume(String)
  parent: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume
  href: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.yml
  langs:
  - java
  name: defineVolume(String name)
  nameWithType: ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.defineVolume(String name)
  fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.defineVolume(String name)
  overload: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.defineVolume*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerinstance/src/main/java/com/microsoft/azure/management/containerinstance/ContainerGroup.java
    startLine: 254
  package: com.microsoft.azure.management.containerinstance
  summary: "<p>Begins the definition of a volume that can be shared by the container instances in the container group.</p>\r\n<p>The definition must be completed with a call to <xref uid=\"com.microsoft.azure.management.resources.fluentcore.model.Attachable.InDefinition.attach()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"VolumeDefinitionStages.WithVolumeAttach#attach()\"></xref></p>"
  syntax:
    content: public VolumeDefinitionStages.VolumeDefinitionBlank<WithVolume> defineVolume(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>the name of the volume </p>
    return:
      type: bb62b96fcom.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithVolumea08ddfce
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withNewAzureFileShareVolume(String,String)
  id: withNewAzureFileShareVolume(String,String)
  parent: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume
  href: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.yml
  langs:
  - java
  name: withNewAzureFileShareVolume(String volumeName, String shareName)
  nameWithType: ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withNewAzureFileShareVolume(String volumeName, String shareName)
  fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withNewAzureFileShareVolume(String volumeName, String shareName)
  overload: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withNewAzureFileShareVolume*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerinstance/src/main/java/com/microsoft/azure/management/containerinstance/ContainerGroup.java
    startLine: 244
  package: com.microsoft.azure.management.containerinstance
  summary: "<p>Specifies a new Azure file share name to be created.</p>\r\n<p></p>"
  syntax:
    content: public WithFirstContainerInstance withNewAzureFileShareVolume(String volumeName, String shareName)
    parameters:
    - id: volumeName
      type: "26831127"
      description: <p>the name of the volume </p>
    - id: shareName
      type: "26831127"
      description: <p>the Azure file share name to be created </p>
    return:
      type: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithFirstContainerInstance
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withoutVolume()
  id: withoutVolume()
  parent: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume
  href: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.yml
  langs:
  - java
  name: withoutVolume()
  nameWithType: ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withoutVolume()
  fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withoutVolume()
  overload: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withoutVolume*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerinstance/src/main/java/com/microsoft/azure/management/containerinstance/ContainerGroup.java
    startLine: 235
  package: com.microsoft.azure.management.containerinstance
  summary: "<p>Skips the definition of volumes to be shared by the container instances.</p>\r\n<p>An IllegalArgumentException will be thrown if a container instance attempts to define a volume mounting. </p>"
  syntax:
    content: public WithFirstContainerInstance withoutVolume()
    return:
      type: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithFirstContainerInstance
      description: <p>the next stage of the definition </p>
references:
- uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withoutVolume*
  name: withoutVolume
  nameWithType: ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withoutVolume
  fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withoutVolume
  package: com.microsoft.azure.management.containerinstance
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withNewAzureFileShareVolume*
  name: withNewAzureFileShareVolume
  nameWithType: ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withNewAzureFileShareVolume
  fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.withNewAzureFileShareVolume
  package: com.microsoft.azure.management.containerinstance
- uid: bb62b96fcom.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithVolumea08ddfce
  spec.java:
  - name: VolumeDefinitionStages.VolumeDefinitionBlank<
    fullName: VolumeDefinitionStages.VolumeDefinitionBlank<
  - uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithVolume
    name: ContainerGroup.DefinitionStages.WithVolume
    fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithVolume
    href: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithVolume.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.defineVolume*
  name: defineVolume
  nameWithType: ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.defineVolume
  fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume.defineVolume
  package: com.microsoft.azure.management.containerinstance
- uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistry.withPrivateImageRegistry(String,String,String)
  parent: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistry
  href: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistry.yml
  name: withPrivateImageRegistry(String server, String username, String password)
  nameWithType: ContainerGroup.DefinitionStages.WithPrivateImageRegistry.withPrivateImageRegistry(String server, String username, String password)
  fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistry.withPrivateImageRegistry(String server, String username, String password)
  type: Method
  summary: "<p>Specifies the private container image registry server login for the container group.</p>\r\n<p></p>"
  syntax:
    content: public WithPrivateImageRegistryOrVolume withPrivateImageRegistry(String server, String username, String password)
    parameters:
    - id: server
      type: "26831127"
      description: <p>Docker image registry server, without protocol such as "http" and "https" </p>
    - id: username
      type: "26831127"
      description: <p>the username for the private registry </p>
    - id: password
      type: "26831127"
      description: <p>the password for the private registry </p>
    return:
      type: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistry
  parent: com.microsoft.azure.management.containerinstance
  href: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistry.yml
  name: ContainerGroup.DefinitionStages.WithPrivateImageRegistry
  nameWithType: ContainerGroup.DefinitionStages.WithPrivateImageRegistry
  fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithPrivateImageRegistry
  type: Interface
  summary: "<p>The stage of the container group definition allowing to specify a private image registry. </p>"
  syntax:
    content: public interface WithPrivateImageRegistry
- uid: com.microsoft.azure.management.containerinstance.ContainerGroup.Definition
  parent: com.microsoft.azure.management.containerinstance
  href: com.microsoft.azure.management.containerinstance.ContainerGroup.Definition.yml
  name: ContainerGroup.Definition
  nameWithType: ContainerGroup.Definition
  fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.Definition
  type: Interface
  summary: "<p>The entirety of the Azure Container Instance service container group definition. </p>"
  syntax:
    content: public interface Definition extends ContainerGroup.DefinitionStages.Blank,ContainerGroup.DefinitionStages.WithGroup,ContainerGroup.DefinitionStages.WithOsType,ContainerGroup.DefinitionStages.WithPublicOrPrivateImageRegistry,ContainerGroup.DefinitionStages.WithPrivateImageRegistryOrVolume,ContainerGroup.DefinitionStages.WithVolume,ContainerGroup.DefinitionStages.WithFirstContainerInstance,ContainerGroup.DefinitionStages.WithNextContainerInstance,ContainerGroup.DefinitionStages.WithCreate
- uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithFirstContainerInstance
  parent: com.microsoft.azure.management.containerinstance
  href: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithFirstContainerInstance.yml
  name: ContainerGroup.DefinitionStages.WithFirstContainerInstance
  nameWithType: ContainerGroup.DefinitionStages.WithFirstContainerInstance
  fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithFirstContainerInstance
  type: Interface
  summary: "<p>The stage of the container group definition allowing to specify first required container instance. </p>"
  syntax:
    content: public interface WithFirstContainerInstance
- uid: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithVolume
  parent: com.microsoft.azure.management.containerinstance
  href: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithVolume.yml
  name: ContainerGroup.DefinitionStages.WithVolume
  nameWithType: ContainerGroup.DefinitionStages.WithVolume
  fullName: com.microsoft.azure.management.containerinstance.ContainerGroup.DefinitionStages.WithVolume
  type: Interface
  summary: "<p>The stage of the container group definition allowing to specify a volume that can be mounted by a container instance. </p>"
  syntax:
    content: public interface WithVolume
- uid: com.microsoft.azure.management.resources.fluentcore.model.Attachable.InDefinition.attach()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Attachable.InDefinition
  href: com.microsoft.azure.management.resources.fluentcore.model.Attachable.InDefinition.yml
  name: attach()
  nameWithType: Attachable.InDefinition<ParentT>.attach()
  fullName: ParentT com.microsoft.azure.management.resources.fluentcore.model.Attachable<ParentT>.InDefinition<ParentT>.attach()
  type: Method
  summary: "<p>Attaches the child definition to the parent resource definiton. </p>"
  syntax:
    content: public ParentT attach()
    return:
      type: 18a275b1
      description: <p>the next stage of the parent definition </p>
