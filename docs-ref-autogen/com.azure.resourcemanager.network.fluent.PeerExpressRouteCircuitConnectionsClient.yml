### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient
  id: PeerExpressRouteCircuitConnectionsClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent
  children:
  - com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.list(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.list(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.listAsync(java.lang.String,java.lang.String,java.lang.String)
  langs:
  - java
  name: PeerExpressRouteCircuitConnectionsClient
  nameWithType: PeerExpressRouteCircuitConnectionsClient
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient
  type: Interface
  package: com.azure.resourcemanager.network.fluent
  summary: An instance of this class provides access to all the operations defined in PeerExpressRouteCircuitConnectionsClient.
  syntax:
    content: public interface PeerExpressRouteCircuitConnectionsClient
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient
  langs:
  - java
  name: get(String resourceGroupName, String circuitName, String peeringName, String connectionName)
  nameWithType: PeerExpressRouteCircuitConnectionsClient.get(String resourceGroupName, String circuitName, String peeringName, String connectionName)
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.get(String resourceGroupName, String circuitName, String peeringName, String connectionName)
  overload: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.get*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified Peer Express Route Circuit Connection from the specified express route circuit.
  syntax:
    content: public abstract PeerExpressRouteCircuitConnectionInner get(String resourceGroupName, String circuitName, String peeringName, String connectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: connectionName
      type: java.lang.String
      description: The name of the peer express route circuit connection.
    return:
      type: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
      description: the specified Peer Express Route Circuit Connection from the specified express route circuit.
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String circuitName, String peeringName, String connectionName)
  nameWithType: PeerExpressRouteCircuitConnectionsClient.getAsync(String resourceGroupName, String circuitName, String peeringName, String connectionName)
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getAsync(String resourceGroupName, String circuitName, String peeringName, String connectionName)
  overload: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified Peer Express Route Circuit Connection from the specified express route circuit.
  syntax:
    content: public abstract Mono<PeerExpressRouteCircuitConnectionInner> getAsync(String resourceGroupName, String circuitName, String peeringName, String connectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: connectionName
      type: java.lang.String
      description: The name of the peer express route circuit connection.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner>
      description: the specified Peer Express Route Circuit Connection from the specified express route circuit.
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String circuitName, String peeringName, String connectionName, Context context)
  nameWithType: PeerExpressRouteCircuitConnectionsClient.getWithResponse(String resourceGroupName, String circuitName, String peeringName, String connectionName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getWithResponse(String resourceGroupName, String circuitName, String peeringName, String connectionName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified Peer Express Route Circuit Connection from the specified express route circuit.
  syntax:
    content: public abstract Response<PeerExpressRouteCircuitConnectionInner> getWithResponse(String resourceGroupName, String circuitName, String peeringName, String connectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: connectionName
      type: java.lang.String
      description: The name of the peer express route circuit connection.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner>
      description: the specified Peer Express Route Circuit Connection from the specified express route circuit.
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String connectionName)
  nameWithType: PeerExpressRouteCircuitConnectionsClient.getWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String connectionName)
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String connectionName)
  overload: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified Peer Express Route Circuit Connection from the specified express route circuit.
  syntax:
    content: public abstract Mono<Response<PeerExpressRouteCircuitConnectionInner>> getWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String connectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: connectionName
      type: java.lang.String
      description: The name of the peer express route circuit connection.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner>>
      description: the specified Peer Express Route Circuit Connection from the specified express route circuit.
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.list(java.lang.String,java.lang.String,java.lang.String)
  id: list(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient
  langs:
  - java
  name: list(String resourceGroupName, String circuitName, String peeringName)
  nameWithType: PeerExpressRouteCircuitConnectionsClient.list(String resourceGroupName, String circuitName, String peeringName)
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.list(String resourceGroupName, String circuitName, String peeringName)
  overload: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.list*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all global reach peer connections associated with a private peering in an express route circuit.
  syntax:
    content: public abstract PagedIterable<PeerExpressRouteCircuitConnectionInner> list(String resourceGroupName, String circuitName, String peeringName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner>
      description: all global reach peer connections associated with a private peering in an express route circuit.
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.list(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient
  langs:
  - java
  name: list(String resourceGroupName, String circuitName, String peeringName, Context context)
  nameWithType: PeerExpressRouteCircuitConnectionsClient.list(String resourceGroupName, String circuitName, String peeringName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.list(String resourceGroupName, String circuitName, String peeringName, Context context)
  overload: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.list*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all global reach peer connections associated with a private peering in an express route circuit.
  syntax:
    content: public abstract PagedIterable<PeerExpressRouteCircuitConnectionInner> list(String resourceGroupName, String circuitName, String peeringName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner>
      description: all global reach peer connections associated with a private peering in an express route circuit.
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.listAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0
  parent: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient
  langs:
  - java
  name: listAsync(String resourceGroupName, String circuitName, String peeringName)
  nameWithType: PeerExpressRouteCircuitConnectionsClient.listAsync(String resourceGroupName, String circuitName, String peeringName)
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.listAsync(String resourceGroupName, String circuitName, String peeringName)
  overload: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all global reach peer connections associated with a private peering in an express route circuit.
  syntax:
    content: public abstract PagedFlux<PeerExpressRouteCircuitConnectionInner> listAsync(String resourceGroupName, String circuitName, String peeringName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner>
      description: all global reach peer connections associated with a private peering in an express route circuit.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
    name: PeerExpressRouteCircuitConnectionInner
    fullName: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: PeerExpressRouteCircuitConnectionsClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
    name: PeerExpressRouteCircuitConnectionInner
    fullName: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getAsync*
  name: getAsync
  nameWithType: PeerExpressRouteCircuitConnectionsClient.getAsync
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
  name: PeerExpressRouteCircuitConnectionInner
  nameWithType: PeerExpressRouteCircuitConnectionInner
  fullName: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.get*
  name: get
  nameWithType: PeerExpressRouteCircuitConnectionsClient.get
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.get
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
    name: PeerExpressRouteCircuitConnectionInner
    fullName: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getWithResponse*
  name: getWithResponse
  nameWithType: PeerExpressRouteCircuitConnectionsClient.getWithResponse
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.getWithResponse
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
    name: PeerExpressRouteCircuitConnectionInner
    fullName: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.listAsync*
  name: listAsync
  nameWithType: PeerExpressRouteCircuitConnectionsClient.listAsync
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.listAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
    name: PeerExpressRouteCircuitConnectionInner
    fullName: com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.list*
  name: list
  nameWithType: PeerExpressRouteCircuitConnectionsClient.list
  fullName: com.azure.resourcemanager.network.fluent.PeerExpressRouteCircuitConnectionsClient.list
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
