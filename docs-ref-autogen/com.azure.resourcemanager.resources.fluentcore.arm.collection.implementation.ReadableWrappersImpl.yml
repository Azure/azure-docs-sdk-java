### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
fullName: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<T,ImplT,InnerT>"
name: "ReadableWrappersImpl<T,ImplT,InnerT>"
nameWithType: "ReadableWrappersImpl<T,ImplT,InnerT>"
summary: "Base class for readable wrapper collections, i.e. those whose models can only be read, not created. (Internal use only)"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class ReadableWrappersImpl<T,ImplT,InnerT>"
constructors:
- "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.ReadableWrappersImpl()"
methods:
- "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.azure.core.http.rest.PagedIterable<InnerT>)"
- "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapModel(InnerT)"
- "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(com.azure.core.http.rest.PagedFlux<InnerT>)"
type: "class"
typeParameters:
- name: "T"
- name: "ImplT"
- name: "InnerT"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.arm.collection.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
