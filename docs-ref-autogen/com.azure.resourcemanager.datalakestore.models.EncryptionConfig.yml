### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig"
fullName: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig"
name: "EncryptionConfig"
nameWithType: "EncryptionConfig"
summary: "The encryption configuration for the account."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **EncryptionConfig**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfig&text=EncryptionConfig\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.EncryptionConfig()"
  fullName: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.EncryptionConfig()"
  name: "EncryptionConfig()"
  nameWithType: "EncryptionConfig.EncryptionConfig()"
  summary: "Creates an instance of Encryption<wbr>Config class."
  syntax: "public EncryptionConfig()"
  desc: "Creates an instance of EncryptionConfig class."
methods:
- uid: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "EncryptionConfig.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Encryption<wbr>Config from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static EncryptionConfig fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of EncryptionConfig from the JsonReader."
  returns:
    description: "An instance of EncryptionConfig if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfig&text=EncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.keyVaultMetaInfo()"
  fullName: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.keyVaultMetaInfo()"
  name: "keyVaultMetaInfo()"
  nameWithType: "EncryptionConfig.keyVaultMetaInfo()"
  summary: "Get the key<wbr>Vault<wbr>Meta<wbr>Info property: The Key Vault information for connecting to user managed encryption keys."
  syntax: "public KeyVaultMetaInfo keyVaultMetaInfo()"
  desc: "Get the keyVaultMetaInfo property: The Key Vault information for connecting to user managed encryption keys."
  returns:
    description: "the keyVaultMetaInfo value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.KeyVaultMetaInfo?alt=com.azure.resourcemanager.datalakestore.models.KeyVaultMetaInfo&text=KeyVaultMetaInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "EncryptionConfig.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.type()"
  fullName: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.type()"
  name: "type()"
  nameWithType: "EncryptionConfig.type()"
  summary: "Get the type property: The type of encryption configuration being used."
  syntax: "public EncryptionConfigType type()"
  desc: "Get the type property: The type of encryption configuration being used. Currently the only supported types are 'UserManaged' and 'ServiceManaged'."
  returns:
    description: "the type value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfigType?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfigType&text=EncryptionConfigType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.validate()"
  fullName: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.validate()"
  name: "validate()"
  nameWithType: "EncryptionConfig.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.withKeyVaultMetaInfo(com.azure.resourcemanager.datalakestore.models.KeyVaultMetaInfo)"
  fullName: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.withKeyVaultMetaInfo(KeyVaultMetaInfo keyVaultMetaInfo)"
  name: "withKeyVaultMetaInfo(KeyVaultMetaInfo keyVaultMetaInfo)"
  nameWithType: "EncryptionConfig.withKeyVaultMetaInfo(KeyVaultMetaInfo keyVaultMetaInfo)"
  summary: "Set the key<wbr>Vault<wbr>Meta<wbr>Info property: The Key Vault information for connecting to user managed encryption keys."
  parameters:
  - description: "the keyVaultMetaInfo value to set."
    name: "keyVaultMetaInfo"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.KeyVaultMetaInfo?alt=com.azure.resourcemanager.datalakestore.models.KeyVaultMetaInfo&text=KeyVaultMetaInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EncryptionConfig withKeyVaultMetaInfo(KeyVaultMetaInfo keyVaultMetaInfo)"
  desc: "Set the keyVaultMetaInfo property: The Key Vault information for connecting to user managed encryption keys."
  returns:
    description: "the EncryptionConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfig&text=EncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.withType(com.azure.resourcemanager.datalakestore.models.EncryptionConfigType)"
  fullName: "com.azure.resourcemanager.datalakestore.models.EncryptionConfig.withType(EncryptionConfigType type)"
  name: "withType(EncryptionConfigType type)"
  nameWithType: "EncryptionConfig.withType(EncryptionConfigType type)"
  summary: "Set the type property: The type of encryption configuration being used."
  parameters:
  - description: "the type value to set."
    name: "type"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfigType?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfigType&text=EncryptionConfigType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EncryptionConfig withType(EncryptionConfigType type)"
  desc: "Set the type property: The type of encryption configuration being used. Currently the only supported types are 'UserManaged' and 'ServiceManaged'."
  returns:
    description: "the EncryptionConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfig&text=EncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The encryption configuration for the account."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfig&text=EncryptionConfig\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.datalakestore.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0
