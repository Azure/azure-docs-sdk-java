### YamlMime:JavaType
uid: "com.azure.resourcemanager.storage.models.CustomDomain"
fullName: "com.azure.resourcemanager.storage.models.CustomDomain"
name: "CustomDomain"
nameWithType: "CustomDomain"
summary: "The custom domain assigned to this storage account."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CustomDomain"
constructors:
- uid: "com.azure.resourcemanager.storage.models.CustomDomain.CustomDomain()"
  fullName: "com.azure.resourcemanager.storage.models.CustomDomain.CustomDomain()"
  name: "CustomDomain()"
  nameWithType: "CustomDomain.CustomDomain()"
  syntax: "public CustomDomain()"
methods:
- uid: "com.azure.resourcemanager.storage.models.CustomDomain.name()"
  fullName: "com.azure.resourcemanager.storage.models.CustomDomain.name()"
  name: "name()"
  nameWithType: "CustomDomain.name()"
  summary: "Get the name property: Gets or sets the custom domain name assigned to the storage account."
  syntax: "public String name()"
  desc: "Get the name property: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.CustomDomain.useSubDomainName()"
  fullName: "com.azure.resourcemanager.storage.models.CustomDomain.useSubDomainName()"
  name: "useSubDomainName()"
  nameWithType: "CustomDomain.useSubDomainName()"
  summary: "Get the use<wbr>Sub<wbr>Domain<wbr>Name property: Indicates whether indirect CName validation is enabled."
  syntax: "public Boolean useSubDomainName()"
  desc: "Get the useSubDomainName property: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates."
  returns:
    description: "the useSubDomainName value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.CustomDomain.validate()"
  fullName: "com.azure.resourcemanager.storage.models.CustomDomain.validate()"
  name: "validate()"
  nameWithType: "CustomDomain.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.storage.models.CustomDomain.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.storage.models.CustomDomain.withName(String name)"
  name: "withName(String name)"
  nameWithType: "CustomDomain.withName(String name)"
  summary: "Set the name property: Gets or sets the custom domain name assigned to the storage account."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomDomain withName(String name)"
  desc: "Set the name property: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source."
  returns:
    description: "the CustomDomain object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.CustomDomain?alt=com.azure.resourcemanager.storage.models.CustomDomain&text=CustomDomain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.CustomDomain.withUseSubDomainName(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.models.CustomDomain.withUseSubDomainName(Boolean useSubDomainName)"
  name: "withUseSubDomainName(Boolean useSubDomainName)"
  nameWithType: "CustomDomain.withUseSubDomainName(Boolean useSubDomainName)"
  summary: "Set the use<wbr>Sub<wbr>Domain<wbr>Name property: Indicates whether indirect CName validation is enabled."
  parameters:
  - description: "the useSubDomainName value to set."
    name: "useSubDomainName"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomDomain withUseSubDomainName(Boolean useSubDomainName)"
  desc: "Set the useSubDomainName property: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates."
  returns:
    description: "the CustomDomain object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.CustomDomain?alt=com.azure.resourcemanager.storage.models.CustomDomain&text=CustomDomain\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The custom domain assigned to this storage account. This can be set via Update."
metadata: {}
package: "com.azure.resourcemanager.storage.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.17.0
