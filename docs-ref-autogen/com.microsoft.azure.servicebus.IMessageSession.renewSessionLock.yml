### YamlMime:JavaMember
uid: "com.microsoft.azure.servicebus.IMessageSession.renewSessionLock*"
fullName: "com.microsoft.azure.servicebus.IMessageSession.renewSessionLock"
name: "renewSessionLock"
nameWithType: "IMessageSession.renewSessionLock"
members:
- uid: "com.microsoft.azure.servicebus.IMessageSession.renewSessionLock()"
  fullName: "com.microsoft.azure.servicebus.IMessageSession.renewSessionLock()"
  name: "renewSessionLock()"
  nameWithType: "IMessageSession.renewSessionLock()"
  summary: "Renews the lock on the session specified by the <xref uid=\"com.microsoft.azure.servicebus.IMessageSession.getSessionId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageSession#getSessionId()\"></xref>. The lock will be renewed based on the setting specified on the entity.\n\nWhen you accept a session, the session is locked for this client instance by the service for a duration as specified during the Queue/Subscription creation. If processing of the session requires longer than this duration, the session-lock needs to be renewed. For each renewal, the session-lock is renewed by the entity's LockDuration.\n\nRenewal of session renews all the messages in the session as well. Each individual message need not be renewed."
  syntax: "public abstract void renewSessionLock()"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.servicebus"
artifact: com.microsoft.azure:azure-servicebus:3.6.0
