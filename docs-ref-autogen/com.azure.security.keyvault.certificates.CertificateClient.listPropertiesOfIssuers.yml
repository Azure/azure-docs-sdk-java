### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfIssuers*"
fullName: "com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfIssuers"
name: "listPropertiesOfIssuers"
nameWithType: "CertificateClient.listPropertiesOfIssuers"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfIssuers()"
  fullName: "com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfIssuers()"
  name: "listPropertiesOfIssuers()"
  nameWithType: "CertificateClient.listPropertiesOfIssuers()"
  summary: "List all the certificate issuers resources in the key vault. The individual certificate issuer response in the iterable is represented by <xref uid=\"com.azure.security.keyvault.certificates.models.IssuerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IssuerProperties\"></xref> as only the certificate issuer identifier and provider are provided in the response. This operation requires the `certificates/manageissuers/getissuers` permission.\n\nIt is possible to get the certificate issuer with all of its properties from this information. Loop over the <xref uid=\"com.azure.security.keyvault.certificates.models.IssuerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"issuerProperties\"></xref> and call <xref uid=\"com.azure.security.keyvault.certificates.CertificateClient.getIssuer(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateClient#getIssuer(String)\"></xref> . This will return the <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateIssuer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"issuer\"></xref> with all its properties.\n\n.\n\n```java\nfor (IssuerProperties issuer : certificateClient.listPropertiesOfIssuers()) {\n     CertificateIssuer retrievedIssuer = certificateClient.getIssuer(issuer.getName());\n     System.out.printf(\"Received issuer with name %s and provider %s\", retrievedIssuer.getName(),\n         retrievedIssuer.getProvider());\n }\n```"
  syntax: "public PagedIterable<IssuerProperties> listPropertiesOfIssuers()"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> containing all of the <xref uid=\"com.azure.security.keyvault.certificates.models.IssuerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate issuers\"></xref> in the vault."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.IssuerProperties?alt=com.azure.security.keyvault.certificates.models.IssuerProperties&text=IssuerProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfIssuers(com.azure.core.util.Context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfIssuers(Context context)"
  name: "listPropertiesOfIssuers(Context context)"
  nameWithType: "CertificateClient.listPropertiesOfIssuers(Context context)"
  summary: "List all the certificate issuers resources in the key vault. The individual certificate issuer response in the iterable is represented by <xref uid=\"com.azure.security.keyvault.certificates.models.IssuerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IssuerProperties\"></xref> as only the certificate issuer identifier and provider are provided in the response. This operation requires the `certificates/manageissuers/getissuers` permission.\n\nIt is possible to get the certificate issuer with all of its properties from this information. Loop over the <xref uid=\"com.azure.security.keyvault.certificates.models.IssuerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"issuerProperties\"></xref> and call <xref uid=\"com.azure.security.keyvault.certificates.CertificateClient.getIssuer(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateClient#getIssuer(String)\"></xref>. This will return the <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateIssuer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"issuer\"></xref> with all its properties.\n\n.\n\n```java\nfor (IssuerProperties issuer : certificateClient.listPropertiesOfIssuers(new Context(key1, value1))) {\n     CertificateIssuer retrievedIssuer = certificateClient.getIssuer(issuer.getName());\n     System.out.printf(\"Received issuer with name %s and provider %s\", retrievedIssuer.getName(),\n         retrievedIssuer.getProvider());\n }\n```"
  parameters:
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<IssuerProperties> listPropertiesOfIssuers(Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> containing all of the <xref uid=\"com.azure.security.keyvault.certificates.models.IssuerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate issuers\"></xref> in the vault."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.IssuerProperties?alt=com.azure.security.keyvault.certificates.models.IssuerProperties&text=IssuerProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.1.4
