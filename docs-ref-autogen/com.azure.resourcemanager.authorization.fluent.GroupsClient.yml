### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient
  id: GroupsClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent
  children:
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.addMember(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwner(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.create(com.azure.resourcemanager.authorization.models.GroupCreateParameters)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.createAsync(com.azure.resourcemanager.authorization.models.GroupCreateParameters)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.createWithResponse(com.azure.resourcemanager.authorization.models.GroupCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.createWithResponseAsync(com.azure.resourcemanager.authorization.models.GroupCreateParameters)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.delete(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.get(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.getAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembers(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembers(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembersAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroups(java.lang.String,boolean)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroups(java.lang.String,boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroupsAsync(java.lang.String,boolean)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.getWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.getWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOf(com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfAsync(com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfWithResponse(com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfWithResponseAsync(com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.list()
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.list(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.listAsync()
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.listAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwnersAsync(java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMember(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwner(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerWithResponseAsync(java.lang.String,java.lang.String)
  langs:
  - java
  name: GroupsClient
  nameWithType: GroupsClient
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient
  type: Interface
  package: com.azure.resourcemanager.authorization.fluent
  summary: An instance of this class provides access to all the operations defined in GroupsClient.
  syntax:
    content: public interface GroupsClient
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMember(java.lang.String,java.lang.String)
  id: addMember(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: addMember(String groupObjectId, String url)
  nameWithType: GroupsClient.addMember(String groupObjectId, String url)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMember(String groupObjectId, String url)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMember*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Add a member to a group.
  syntax:
    content: public abstract void addMember(String groupObjectId, String url)
    parameters:
    - id: groupObjectId
      type: java.lang.String
      description: The object ID of the group to which to add the member.
    - id: url
      type: java.lang.String
      description: >-
        A member object URL, such as
             "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects"
                 + "/f260bbc4-c254-447b-94cf-293b5ec434dd",
             where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and "f260bbc4-c254-447b-94cf-293b5ec434dd" is
             the objectId of the member (user, application, servicePrincipal, group) to be added.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberAsync(java.lang.String,java.lang.String)
  id: addMemberAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: addMemberAsync(String groupObjectId, String url)
  nameWithType: GroupsClient.addMemberAsync(String groupObjectId, String url)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberAsync(String groupObjectId, String url)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Add a member to a group.
  syntax:
    content: public abstract Mono<Void> addMemberAsync(String groupObjectId, String url)
    parameters:
    - id: groupObjectId
      type: java.lang.String
      description: The object ID of the group to which to add the member.
    - id: url
      type: java.lang.String
      description: >-
        A member object URL, such as
             "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects"
                 + "/f260bbc4-c254-447b-94cf-293b5ec434dd",
             where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and "f260bbc4-c254-447b-94cf-293b5ec434dd" is
             the objectId of the member (user, application, servicePrincipal, group) to be added.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: addMemberWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: addMemberWithResponse(String groupObjectId, String url, Context context)
  nameWithType: GroupsClient.addMemberWithResponse(String groupObjectId, String url, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberWithResponse(String groupObjectId, String url, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Add a member to a group.
  syntax:
    content: public abstract Response<Void> addMemberWithResponse(String groupObjectId, String url, Context context)
    parameters:
    - id: groupObjectId
      type: java.lang.String
      description: The object ID of the group to which to add the member.
    - id: url
      type: java.lang.String
      description: >-
        A member object URL, such as
             "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects"
                 + "/f260bbc4-c254-447b-94cf-293b5ec434dd",
             where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and "f260bbc4-c254-447b-94cf-293b5ec434dd" is
             the objectId of the member (user, application, servicePrincipal, group) to be added.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberWithResponseAsync(java.lang.String,java.lang.String)
  id: addMemberWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: addMemberWithResponseAsync(String groupObjectId, String url)
  nameWithType: GroupsClient.addMemberWithResponseAsync(String groupObjectId, String url)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberWithResponseAsync(String groupObjectId, String url)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Add a member to a group.
  syntax:
    content: public abstract Mono<Response<Void>> addMemberWithResponseAsync(String groupObjectId, String url)
    parameters:
    - id: groupObjectId
      type: java.lang.String
      description: The object ID of the group to which to add the member.
    - id: url
      type: java.lang.String
      description: >-
        A member object URL, such as
             "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects"
                 + "/f260bbc4-c254-447b-94cf-293b5ec434dd",
             where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and "f260bbc4-c254-447b-94cf-293b5ec434dd" is
             the objectId of the member (user, application, servicePrincipal, group) to be added.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwner(java.lang.String,java.lang.String)
  id: addOwner(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: addOwner(String objectId, String url)
  nameWithType: GroupsClient.addOwner(String objectId, String url)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwner(String objectId, String url)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwner*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Add an owner to a group.
  syntax:
    content: public abstract void addOwner(String objectId, String url)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the application to which to add the owner.
    - id: url
      type: java.lang.String
      description: >-
        A owner object URL, such as
             "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects"
                 + "/f260bbc4-c254-447b-94cf-293b5ec434dd",
             where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and "f260bbc4-c254-447b-94cf-293b5ec434dd" is
             the objectId of the owner (user, application, servicePrincipal, group) to be added.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerAsync(java.lang.String,java.lang.String)
  id: addOwnerAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: addOwnerAsync(String objectId, String url)
  nameWithType: GroupsClient.addOwnerAsync(String objectId, String url)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerAsync(String objectId, String url)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Add an owner to a group.
  syntax:
    content: public abstract Mono<Void> addOwnerAsync(String objectId, String url)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the application to which to add the owner.
    - id: url
      type: java.lang.String
      description: >-
        A owner object URL, such as
             "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects"
                 + "/f260bbc4-c254-447b-94cf-293b5ec434dd",
             where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and "f260bbc4-c254-447b-94cf-293b5ec434dd" is
             the objectId of the owner (user, application, servicePrincipal, group) to be added.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: addOwnerWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: addOwnerWithResponse(String objectId, String url, Context context)
  nameWithType: GroupsClient.addOwnerWithResponse(String objectId, String url, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerWithResponse(String objectId, String url, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Add an owner to a group.
  syntax:
    content: public abstract Response<Void> addOwnerWithResponse(String objectId, String url, Context context)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the application to which to add the owner.
    - id: url
      type: java.lang.String
      description: >-
        A owner object URL, such as
             "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects"
                 + "/f260bbc4-c254-447b-94cf-293b5ec434dd",
             where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and "f260bbc4-c254-447b-94cf-293b5ec434dd" is
             the objectId of the owner (user, application, servicePrincipal, group) to be added.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerWithResponseAsync(java.lang.String,java.lang.String)
  id: addOwnerWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: addOwnerWithResponseAsync(String objectId, String url)
  nameWithType: GroupsClient.addOwnerWithResponseAsync(String objectId, String url)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerWithResponseAsync(String objectId, String url)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Add an owner to a group.
  syntax:
    content: public abstract Mono<Response<Void>> addOwnerWithResponseAsync(String objectId, String url)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the application to which to add the owner.
    - id: url
      type: java.lang.String
      description: >-
        A owner object URL, such as
             "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects"
                 + "/f260bbc4-c254-447b-94cf-293b5ec434dd",
             where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and "f260bbc4-c254-447b-94cf-293b5ec434dd" is
             the objectId of the owner (user, application, servicePrincipal, group) to be added.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.create(com.azure.resourcemanager.authorization.models.GroupCreateParameters)
  id: create(com.azure.resourcemanager.authorization.models.GroupCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: create(GroupCreateParameters parameters)
  nameWithType: GroupsClient.create(GroupCreateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.create(GroupCreateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.create*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Create a group in the directory.
  syntax:
    content: public abstract ADGroupInner create(GroupCreateParameters parameters)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.GroupCreateParameters
      description: Request parameters for creating a new group.
    return:
      type: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
      description: active Directory group information.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.createAsync(com.azure.resourcemanager.authorization.models.GroupCreateParameters)
  id: createAsync(com.azure.resourcemanager.authorization.models.GroupCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: createAsync(GroupCreateParameters parameters)
  nameWithType: GroupsClient.createAsync(GroupCreateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.createAsync(GroupCreateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.createAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Create a group in the directory.
  syntax:
    content: public abstract Mono<ADGroupInner> createAsync(GroupCreateParameters parameters)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.GroupCreateParameters
      description: Request parameters for creating a new group.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>
      description: active Directory group information.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.createWithResponse(com.azure.resourcemanager.authorization.models.GroupCreateParameters,com.azure.core.util.Context)
  id: createWithResponse(com.azure.resourcemanager.authorization.models.GroupCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: createWithResponse(GroupCreateParameters parameters, Context context)
  nameWithType: GroupsClient.createWithResponse(GroupCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.createWithResponse(GroupCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.createWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Create a group in the directory.
  syntax:
    content: public abstract Response<ADGroupInner> createWithResponse(GroupCreateParameters parameters, Context context)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.GroupCreateParameters
      description: Request parameters for creating a new group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>
      description: active Directory group information.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.createWithResponseAsync(com.azure.resourcemanager.authorization.models.GroupCreateParameters)
  id: createWithResponseAsync(com.azure.resourcemanager.authorization.models.GroupCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: createWithResponseAsync(GroupCreateParameters parameters)
  nameWithType: GroupsClient.createWithResponseAsync(GroupCreateParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.createWithResponseAsync(GroupCreateParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Create a group in the directory.
  syntax:
    content: public abstract Mono<Response<ADGroupInner>> createWithResponseAsync(GroupCreateParameters parameters)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.GroupCreateParameters
      description: Request parameters for creating a new group.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>>
      description: active Directory group information.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.delete(java.lang.String)
  id: delete(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: delete(String objectId)
  nameWithType: GroupsClient.delete(String objectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.delete(String objectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.delete*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Delete a group from the directory.
  syntax:
    content: public abstract void delete(String objectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group to delete.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAsync(java.lang.String)
  id: deleteAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: deleteAsync(String objectId)
  nameWithType: GroupsClient.deleteAsync(String objectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAsync(String objectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Delete a group from the directory.
  syntax:
    content: public abstract Mono<Void> deleteAsync(String objectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group to delete.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteWithResponse(java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: deleteWithResponse(String objectId, Context context)
  nameWithType: GroupsClient.deleteWithResponse(String objectId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteWithResponse(String objectId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Delete a group from the directory.
  syntax:
    content: public abstract Response<Void> deleteWithResponse(String objectId, Context context)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteWithResponseAsync(java.lang.String)
  id: deleteWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: deleteWithResponseAsync(String objectId)
  nameWithType: GroupsClient.deleteWithResponseAsync(String objectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteWithResponseAsync(String objectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Delete a group from the directory.
  syntax:
    content: public abstract Mono<Response<Void>> deleteWithResponseAsync(String objectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group to delete.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.get(java.lang.String)
  id: get(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: get(String objectId)
  nameWithType: GroupsClient.get(String objectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.get(String objectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.get*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets group information from the directory.
  syntax:
    content: public abstract ADGroupInner get(String objectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the user for which to get group information.
    return:
      type: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
      description: group information from the directory.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getAsync(java.lang.String)
  id: getAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: getAsync(String objectId)
  nameWithType: GroupsClient.getAsync(String objectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getAsync(String objectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets group information from the directory.
  syntax:
    content: public abstract Mono<ADGroupInner> getAsync(String objectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the user for which to get group information.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>
      description: group information from the directory.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembers(java.lang.String)
  id: getGroupMembers(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: getGroupMembers(String objectId)
  nameWithType: GroupsClient.getGroupMembers(String objectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembers(String objectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembers*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets the members of a group.
  syntax:
    content: public abstract PagedIterable<DirectoryObjectInner> getGroupMembers(String objectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group whose members should be retrieved.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner>
      description: the members of a group.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembers(java.lang.String,com.azure.core.util.Context)
  id: getGroupMembers(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: getGroupMembers(String objectId, Context context)
  nameWithType: GroupsClient.getGroupMembers(String objectId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembers(String objectId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembers*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets the members of a group.
  syntax:
    content: public abstract PagedIterable<DirectoryObjectInner> getGroupMembers(String objectId, Context context)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group whose members should be retrieved.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner>
      description: the members of a group.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembersAsync(java.lang.String)
  id: getGroupMembersAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: getGroupMembersAsync(String objectId)
  nameWithType: GroupsClient.getGroupMembersAsync(String objectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembersAsync(String objectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembersAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets the members of a group.
  syntax:
    content: public abstract PagedFlux<DirectoryObjectInner> getGroupMembersAsync(String objectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group whose members should be retrieved.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner>
      description: the members of a group.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroups(java.lang.String,boolean)
  id: getMemberGroups(java.lang.String,boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: getMemberGroups(String objectId, boolean securityEnabledOnly)
  nameWithType: GroupsClient.getMemberGroups(String objectId, boolean securityEnabledOnly)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroups(String objectId, boolean securityEnabledOnly)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroups*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets a collection of object IDs of groups of which the specified group is a member.
  syntax:
    content: public abstract PagedIterable<String> getMemberGroups(String objectId, boolean securityEnabledOnly)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group for which to get group membership.
    - id: securityEnabledOnly
      type: boolean
      description: >-
        If true, only membership in security-enabled groups should be checked. Otherwise,
             membership in all groups should be checked.
    return:
      type: com.azure.core.http.rest.PagedIterable<java.lang.String>
      description: a collection of object IDs of groups of which the specified group is a member.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroups(java.lang.String,boolean,com.azure.core.util.Context)
  id: getMemberGroups(java.lang.String,boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: getMemberGroups(String objectId, boolean securityEnabledOnly, Context context)
  nameWithType: GroupsClient.getMemberGroups(String objectId, boolean securityEnabledOnly, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroups(String objectId, boolean securityEnabledOnly, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroups*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets a collection of object IDs of groups of which the specified group is a member.
  syntax:
    content: public abstract PagedIterable<String> getMemberGroups(String objectId, boolean securityEnabledOnly, Context context)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group for which to get group membership.
    - id: securityEnabledOnly
      type: boolean
      description: >-
        If true, only membership in security-enabled groups should be checked. Otherwise,
             membership in all groups should be checked.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<java.lang.String>
      description: a collection of object IDs of groups of which the specified group is a member.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroupsAsync(java.lang.String,boolean)
  id: getMemberGroupsAsync(java.lang.String,boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: getMemberGroupsAsync(String objectId, boolean securityEnabledOnly)
  nameWithType: GroupsClient.getMemberGroupsAsync(String objectId, boolean securityEnabledOnly)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroupsAsync(String objectId, boolean securityEnabledOnly)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroupsAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets a collection of object IDs of groups of which the specified group is a member.
  syntax:
    content: public abstract PagedFlux<String> getMemberGroupsAsync(String objectId, boolean securityEnabledOnly)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group for which to get group membership.
    - id: securityEnabledOnly
      type: boolean
      description: >-
        If true, only membership in security-enabled groups should be checked. Otherwise,
             membership in all groups should be checked.
    return:
      type: com.azure.core.http.rest.PagedFlux<java.lang.String>
      description: a collection of object IDs of groups of which the specified group is a member.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: getWithResponse(String objectId, Context context)
  nameWithType: GroupsClient.getWithResponse(String objectId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getWithResponse(String objectId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets group information from the directory.
  syntax:
    content: public abstract Response<ADGroupInner> getWithResponse(String objectId, Context context)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the user for which to get group information.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>
      description: group information from the directory.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getWithResponseAsync(java.lang.String)
  id: getWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: getWithResponseAsync(String objectId)
  nameWithType: GroupsClient.getWithResponseAsync(String objectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getWithResponseAsync(String objectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets group information from the directory.
  syntax:
    content: public abstract Mono<Response<ADGroupInner>> getWithResponseAsync(String objectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the user for which to get group information.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>>
      description: group information from the directory.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOf(com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters)
  id: isMemberOf(com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: isMemberOf(CheckGroupMembershipParameters parameters)
  nameWithType: GroupsClient.isMemberOf(CheckGroupMembershipParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOf(CheckGroupMembershipParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOf*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Checks whether the specified user, group, contact, or service principal is a direct or transitive member of the specified group.
  syntax:
    content: public abstract CheckGroupMembershipResultInner isMemberOf(CheckGroupMembershipParameters parameters)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters
      description: Request parameters for IsMemberOf API call.
    return:
      type: com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner
      description: server response for IsMemberOf API call.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfAsync(com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters)
  id: isMemberOfAsync(com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: isMemberOfAsync(CheckGroupMembershipParameters parameters)
  nameWithType: GroupsClient.isMemberOfAsync(CheckGroupMembershipParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfAsync(CheckGroupMembershipParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Checks whether the specified user, group, contact, or service principal is a direct or transitive member of the specified group.
  syntax:
    content: public abstract Mono<CheckGroupMembershipResultInner> isMemberOfAsync(CheckGroupMembershipParameters parameters)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters
      description: Request parameters for IsMemberOf API call.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner>
      description: server response for IsMemberOf API call.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfWithResponse(com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters,com.azure.core.util.Context)
  id: isMemberOfWithResponse(com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: isMemberOfWithResponse(CheckGroupMembershipParameters parameters, Context context)
  nameWithType: GroupsClient.isMemberOfWithResponse(CheckGroupMembershipParameters parameters, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfWithResponse(CheckGroupMembershipParameters parameters, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Checks whether the specified user, group, contact, or service principal is a direct or transitive member of the specified group.
  syntax:
    content: public abstract Response<CheckGroupMembershipResultInner> isMemberOfWithResponse(CheckGroupMembershipParameters parameters, Context context)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters
      description: Request parameters for IsMemberOf API call.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner>
      description: server response for IsMemberOf API call.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfWithResponseAsync(com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters)
  id: isMemberOfWithResponseAsync(com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: isMemberOfWithResponseAsync(CheckGroupMembershipParameters parameters)
  nameWithType: GroupsClient.isMemberOfWithResponseAsync(CheckGroupMembershipParameters parameters)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfWithResponseAsync(CheckGroupMembershipParameters parameters)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Checks whether the specified user, group, contact, or service principal is a direct or transitive member of the specified group.
  syntax:
    content: public abstract Mono<Response<CheckGroupMembershipResultInner>> isMemberOfWithResponseAsync(CheckGroupMembershipParameters parameters)
    parameters:
    - id: parameters
      type: com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters
      description: Request parameters for IsMemberOf API call.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner>>
      description: server response for IsMemberOf API call.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: list()
  nameWithType: GroupsClient.list()
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.list()
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.list*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets list of groups for the current tenant.
  syntax:
    content: public abstract PagedIterable<ADGroupInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>
      description: list of groups for the current tenant.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.list(java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: list(String filter, Context context)
  nameWithType: GroupsClient.list(String filter, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.list(String filter, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.list*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets list of groups for the current tenant.
  syntax:
    content: public abstract PagedIterable<ADGroupInner> list(String filter, Context context)
    parameters:
    - id: filter
      type: java.lang.String
      description: The filter to apply to the operation.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>
      description: list of groups for the current tenant.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: listAsync()
  nameWithType: GroupsClient.listAsync()
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.listAsync()
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets list of groups for the current tenant.
  syntax:
    content: public abstract PagedFlux<ADGroupInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>
      description: list of groups for the current tenant.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.listAsync(java.lang.String)
  id: listAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: listAsync(String filter)
  nameWithType: GroupsClient.listAsync(String filter)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.listAsync(String filter)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Gets list of groups for the current tenant.
  syntax:
    content: public abstract PagedFlux<ADGroupInner> listAsync(String filter)
    parameters:
    - id: filter
      type: java.lang.String
      description: The filter to apply to the operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>
      description: list of groups for the current tenant.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners(java.lang.String)
  id: listOwners(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: listOwners(String objectId)
  nameWithType: GroupsClient.listOwners(String objectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners(String objectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: The owners are a set of non-admin users who are allowed to modify this object.
  syntax:
    content: public abstract PagedIterable<DirectoryObjectInner> listOwners(String objectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group for which to get owners.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner>
      description: directoryObject list operation result.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners(java.lang.String,com.azure.core.util.Context)
  id: listOwners(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: listOwners(String objectId, Context context)
  nameWithType: GroupsClient.listOwners(String objectId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners(String objectId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: The owners are a set of non-admin users who are allowed to modify this object.
  syntax:
    content: public abstract PagedIterable<DirectoryObjectInner> listOwners(String objectId, Context context)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group for which to get owners.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner>
      description: directoryObject list operation result.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwnersAsync(java.lang.String)
  id: listOwnersAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: listOwnersAsync(String objectId)
  nameWithType: GroupsClient.listOwnersAsync(String objectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwnersAsync(String objectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwnersAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: The owners are a set of non-admin users who are allowed to modify this object.
  syntax:
    content: public abstract PagedFlux<DirectoryObjectInner> listOwnersAsync(String objectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group for which to get owners.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner>
      description: directoryObject list operation result.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMember(java.lang.String,java.lang.String)
  id: removeMember(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: removeMember(String groupObjectId, String memberObjectId)
  nameWithType: GroupsClient.removeMember(String groupObjectId, String memberObjectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMember(String groupObjectId, String memberObjectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMember*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Remove a member from a group.
  syntax:
    content: public abstract void removeMember(String groupObjectId, String memberObjectId)
    parameters:
    - id: groupObjectId
      type: java.lang.String
      description: The object ID of the group from which to remove the member.
    - id: memberObjectId
      type: java.lang.String
      description: Member object id.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberAsync(java.lang.String,java.lang.String)
  id: removeMemberAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: removeMemberAsync(String groupObjectId, String memberObjectId)
  nameWithType: GroupsClient.removeMemberAsync(String groupObjectId, String memberObjectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberAsync(String groupObjectId, String memberObjectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Remove a member from a group.
  syntax:
    content: public abstract Mono<Void> removeMemberAsync(String groupObjectId, String memberObjectId)
    parameters:
    - id: groupObjectId
      type: java.lang.String
      description: The object ID of the group from which to remove the member.
    - id: memberObjectId
      type: java.lang.String
      description: Member object id.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: removeMemberWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: removeMemberWithResponse(String groupObjectId, String memberObjectId, Context context)
  nameWithType: GroupsClient.removeMemberWithResponse(String groupObjectId, String memberObjectId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberWithResponse(String groupObjectId, String memberObjectId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Remove a member from a group.
  syntax:
    content: public abstract Response<Void> removeMemberWithResponse(String groupObjectId, String memberObjectId, Context context)
    parameters:
    - id: groupObjectId
      type: java.lang.String
      description: The object ID of the group from which to remove the member.
    - id: memberObjectId
      type: java.lang.String
      description: Member object id.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberWithResponseAsync(java.lang.String,java.lang.String)
  id: removeMemberWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: removeMemberWithResponseAsync(String groupObjectId, String memberObjectId)
  nameWithType: GroupsClient.removeMemberWithResponseAsync(String groupObjectId, String memberObjectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberWithResponseAsync(String groupObjectId, String memberObjectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Remove a member from a group.
  syntax:
    content: public abstract Mono<Response<Void>> removeMemberWithResponseAsync(String groupObjectId, String memberObjectId)
    parameters:
    - id: groupObjectId
      type: java.lang.String
      description: The object ID of the group from which to remove the member.
    - id: memberObjectId
      type: java.lang.String
      description: Member object id.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwner(java.lang.String,java.lang.String)
  id: removeOwner(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: removeOwner(String objectId, String ownerObjectId)
  nameWithType: GroupsClient.removeOwner(String objectId, String ownerObjectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwner(String objectId, String ownerObjectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwner*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Remove a member from owners.
  syntax:
    content: public abstract void removeOwner(String objectId, String ownerObjectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group from which to remove the owner.
    - id: ownerObjectId
      type: java.lang.String
      description: Owner object id.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerAsync(java.lang.String,java.lang.String)
  id: removeOwnerAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: removeOwnerAsync(String objectId, String ownerObjectId)
  nameWithType: GroupsClient.removeOwnerAsync(String objectId, String ownerObjectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerAsync(String objectId, String ownerObjectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Remove a member from owners.
  syntax:
    content: public abstract Mono<Void> removeOwnerAsync(String objectId, String ownerObjectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group from which to remove the owner.
    - id: ownerObjectId
      type: java.lang.String
      description: Owner object id.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: removeOwnerWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: removeOwnerWithResponse(String objectId, String ownerObjectId, Context context)
  nameWithType: GroupsClient.removeOwnerWithResponse(String objectId, String ownerObjectId, Context context)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerWithResponse(String objectId, String ownerObjectId, Context context)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerWithResponse*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Remove a member from owners.
  syntax:
    content: public abstract Response<Void> removeOwnerWithResponse(String objectId, String ownerObjectId, Context context)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group from which to remove the owner.
    - id: ownerObjectId
      type: java.lang.String
      description: Owner object id.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerWithResponseAsync(java.lang.String,java.lang.String)
  id: removeOwnerWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0
  parent: com.azure.resourcemanager.authorization.fluent.GroupsClient
  langs:
  - java
  name: removeOwnerWithResponseAsync(String objectId, String ownerObjectId)
  nameWithType: GroupsClient.removeOwnerWithResponseAsync(String objectId, String ownerObjectId)
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerWithResponseAsync(String objectId, String ownerObjectId)
  overload: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.authorization.fluent
  summary: Remove a member from owners.
  syntax:
    content: public abstract Mono<Response<Void>> removeOwnerWithResponseAsync(String objectId, String ownerObjectId)
    parameters:
    - id: objectId
      type: java.lang.String
      description: The object ID of the group from which to remove the owner.
    - id: ownerObjectId
      type: java.lang.String
      description: Owner object id.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
references:
- uid: com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters
  name: CheckGroupMembershipParameters
  nameWithType: CheckGroupMembershipParameters
  fullName: com.azure.resourcemanager.authorization.models.CheckGroupMembershipParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner
    name: CheckGroupMembershipResultInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfWithResponseAsync*
  name: isMemberOfWithResponseAsync
  nameWithType: GroupsClient.isMemberOfWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner
    name: CheckGroupMembershipResultInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfAsync*
  name: isMemberOfAsync
  nameWithType: GroupsClient.isMemberOfAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner
  name: CheckGroupMembershipResultInner
  nameWithType: CheckGroupMembershipResultInner
  fullName: com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOf*
  name: isMemberOf
  nameWithType: GroupsClient.isMemberOf
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOf
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner
    name: CheckGroupMembershipResultInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.CheckGroupMembershipResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfWithResponse*
  name: isMemberOfWithResponse
  nameWithType: GroupsClient.isMemberOfWithResponse
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.isMemberOfWithResponse
  package: com.azure.resourcemanager.authorization.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberWithResponseAsync*
  name: removeMemberWithResponseAsync
  nameWithType: GroupsClient.removeMemberWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberAsync*
  name: removeMemberAsync
  nameWithType: GroupsClient.removeMemberAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMember*
  name: removeMember
  nameWithType: GroupsClient.removeMember
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMember
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberWithResponse*
  name: removeMemberWithResponse
  nameWithType: GroupsClient.removeMemberWithResponse
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeMemberWithResponse
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberWithResponseAsync*
  name: addMemberWithResponseAsync
  nameWithType: GroupsClient.addMemberWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberAsync*
  name: addMemberAsync
  nameWithType: GroupsClient.addMemberAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMember*
  name: addMember
  nameWithType: GroupsClient.addMember
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMember
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberWithResponse*
  name: addMemberWithResponse
  nameWithType: GroupsClient.addMemberWithResponse
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addMemberWithResponse
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.models.GroupCreateParameters
  name: GroupCreateParameters
  nameWithType: GroupCreateParameters
  fullName: com.azure.resourcemanager.authorization.models.GroupCreateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
    name: ADGroupInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: GroupsClient.createWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.createWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
    name: ADGroupInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.createAsync*
  name: createAsync
  nameWithType: GroupsClient.createAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.createAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
  name: ADGroupInner
  nameWithType: ADGroupInner
  fullName: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.create*
  name: create
  nameWithType: GroupsClient.create
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.create
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
    name: ADGroupInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.createWithResponse*
  name: createWithResponse
  nameWithType: GroupsClient.createWithResponse
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.createWithResponse
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
    name: ADGroupInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.listAsync*
  name: listAsync
  nameWithType: GroupsClient.listAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.listAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.ADGroupInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
    name: ADGroupInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.ADGroupInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.list*
  name: list
  nameWithType: GroupsClient.list
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.list
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner
    name: DirectoryObjectInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembersAsync*
  name: getGroupMembersAsync
  nameWithType: GroupsClient.getGroupMembersAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembersAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner
    name: DirectoryObjectInner
    fullName: com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembers*
  name: getGroupMembers
  nameWithType: GroupsClient.getGroupMembers
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getGroupMembers
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: GroupsClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getAsync*
  name: getAsync
  nameWithType: GroupsClient.getAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.get*
  name: get
  nameWithType: GroupsClient.get
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.get
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getWithResponse*
  name: getWithResponse
  nameWithType: GroupsClient.getWithResponse
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getWithResponse
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: GroupsClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAsync*
  name: deleteAsync
  nameWithType: GroupsClient.deleteAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.delete*
  name: delete
  nameWithType: GroupsClient.delete
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.delete
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: GroupsClient.deleteWithResponse
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteWithResponse
  package: com.azure.resourcemanager.authorization.fluent
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.core.http.rest.PagedFlux<java.lang.String>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroupsAsync*
  name: getMemberGroupsAsync
  nameWithType: GroupsClient.getMemberGroupsAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroupsAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.core.http.rest.PagedIterable<java.lang.String>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroups*
  name: getMemberGroups
  nameWithType: GroupsClient.getMemberGroups
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroups
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwnersAsync*
  name: listOwnersAsync
  nameWithType: GroupsClient.listOwnersAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwnersAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners*
  name: listOwners
  nameWithType: GroupsClient.listOwners
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerWithResponseAsync*
  name: addOwnerWithResponseAsync
  nameWithType: GroupsClient.addOwnerWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerAsync*
  name: addOwnerAsync
  nameWithType: GroupsClient.addOwnerAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwner*
  name: addOwner
  nameWithType: GroupsClient.addOwner
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwner
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerWithResponse*
  name: addOwnerWithResponse
  nameWithType: GroupsClient.addOwnerWithResponse
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.addOwnerWithResponse
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerWithResponseAsync*
  name: removeOwnerWithResponseAsync
  nameWithType: GroupsClient.removeOwnerWithResponseAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerWithResponseAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerAsync*
  name: removeOwnerAsync
  nameWithType: GroupsClient.removeOwnerAsync
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerAsync
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwner*
  name: removeOwner
  nameWithType: GroupsClient.removeOwner
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwner
  package: com.azure.resourcemanager.authorization.fluent
- uid: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerWithResponse*
  name: removeOwnerWithResponse
  nameWithType: GroupsClient.removeOwnerWithResponse
  fullName: com.azure.resourcemanager.authorization.fluent.GroupsClient.removeOwnerWithResponse
  package: com.azure.resourcemanager.authorization.fluent
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner
  name: DirectoryObjectInner
  nameWithType: DirectoryObjectInner
  fullName: com.azure.resourcemanager.authorization.fluent.models.DirectoryObjectInner
