### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient"
fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient"
name: "GroupsClient"
nameWithType: "GroupsClient"
summary: "An instance of this class provides access to all the operations defined in Groups<wbr>Client."
syntax: "public interface GroupsClient"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.addFavorite(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.addFavorite(String groupId)"
  name: "addFavorite(String groupId)"
  nameWithType: "GroupsClient.addFavorite(String groupId)"
  summary: "Invoke action add<wbr>Favorite."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void addFavorite(String groupId)"
  desc: "Invoke action addFavorite."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.addFavoriteAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.addFavoriteAsync(String groupId)"
  name: "addFavoriteAsync(String groupId)"
  nameWithType: "GroupsClient.addFavoriteAsync(String groupId)"
  summary: "Invoke action add<wbr>Favorite."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> addFavoriteAsync(String groupId)"
  desc: "Invoke action addFavorite."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.addFavoriteWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.addFavoriteWithResponse(String groupId, Context context)"
  name: "addFavoriteWithResponse(String groupId, Context context)"
  nameWithType: "GroupsClient.addFavoriteWithResponse(String groupId, Context context)"
  summary: "Invoke action add<wbr>Favorite."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> addFavoriteWithResponse(String groupId, Context context)"
  desc: "Invoke action addFavorite."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.addFavoriteWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.addFavoriteWithResponseAsync(String groupId)"
  name: "addFavoriteWithResponseAsync(String groupId)"
  nameWithType: "GroupsClient.addFavoriteWithResponseAsync(String groupId)"
  summary: "Invoke action add<wbr>Favorite."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> addFavoriteWithResponseAsync(String groupId)"
  desc: "Invoke action addFavorite."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.assignLicense(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsAssignLicenseRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.assignLicense(String groupId, GroupsAssignLicenseRequestBody body)"
  name: "assignLicense(String groupId, GroupsAssignLicenseRequestBody body)"
  nameWithType: "GroupsClient.assignLicense(String groupId, GroupsAssignLicenseRequestBody body)"
  summary: "Invoke action assign<wbr>License."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsAssignLicenseRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsAssignLicenseRequestBody&text=GroupsAssignLicenseRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphGroupInner assignLicense(String groupId, GroupsAssignLicenseRequestBody body)"
  desc: "Invoke action assignLicense."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner&text=MicrosoftGraphGroupInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.assignLicenseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsAssignLicenseRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.assignLicenseAsync(String groupId, GroupsAssignLicenseRequestBody body)"
  name: "assignLicenseAsync(String groupId, GroupsAssignLicenseRequestBody body)"
  nameWithType: "GroupsClient.assignLicenseAsync(String groupId, GroupsAssignLicenseRequestBody body)"
  summary: "Invoke action assign<wbr>License."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsAssignLicenseRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsAssignLicenseRequestBody&text=GroupsAssignLicenseRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphGroupInner> assignLicenseAsync(String groupId, GroupsAssignLicenseRequestBody body)"
  desc: "Invoke action assignLicense."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner&text=MicrosoftGraphGroupInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.assignLicenseWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsAssignLicenseRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.assignLicenseWithResponse(String groupId, GroupsAssignLicenseRequestBody body, Context context)"
  name: "assignLicenseWithResponse(String groupId, GroupsAssignLicenseRequestBody body, Context context)"
  nameWithType: "GroupsClient.assignLicenseWithResponse(String groupId, GroupsAssignLicenseRequestBody body, Context context)"
  summary: "Invoke action assign<wbr>License."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsAssignLicenseRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsAssignLicenseRequestBody&text=GroupsAssignLicenseRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphGroupInner> assignLicenseWithResponse(String groupId, GroupsAssignLicenseRequestBody body, Context context)"
  desc: "Invoke action assignLicense."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner&text=MicrosoftGraphGroupInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.assignLicenseWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsAssignLicenseRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.assignLicenseWithResponseAsync(String groupId, GroupsAssignLicenseRequestBody body)"
  name: "assignLicenseWithResponseAsync(String groupId, GroupsAssignLicenseRequestBody body)"
  nameWithType: "GroupsClient.assignLicenseWithResponseAsync(String groupId, GroupsAssignLicenseRequestBody body)"
  summary: "Invoke action assign<wbr>License."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsAssignLicenseRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsAssignLicenseRequestBody&text=GroupsAssignLicenseRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphGroupInner>> assignLicenseWithResponseAsync(String groupId, GroupsAssignLicenseRequestBody body)"
  desc: "Invoke action assignLicense."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner&text=MicrosoftGraphGroupInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkGrantedPermissionsForApp(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkGrantedPermissionsForApp(String groupId)"
  name: "checkGrantedPermissionsForApp(String groupId)"
  nameWithType: "GroupsClient.checkGrantedPermissionsForApp(String groupId)"
  summary: "Invoke action check<wbr>Granted<wbr>Permissions<wbr>For<wbr>App."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<MicrosoftGraphResourceSpecificPermissionGrantInner> checkGrantedPermissionsForApp(String groupId)"
  desc: "Invoke action checkGrantedPermissionsForApp."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkGrantedPermissionsForAppAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkGrantedPermissionsForAppAsync(String groupId)"
  name: "checkGrantedPermissionsForAppAsync(String groupId)"
  nameWithType: "GroupsClient.checkGrantedPermissionsForAppAsync(String groupId)"
  summary: "Invoke action check<wbr>Granted<wbr>Permissions<wbr>For<wbr>App."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<MicrosoftGraphResourceSpecificPermissionGrantInner>> checkGrantedPermissionsForAppAsync(String groupId)"
  desc: "Invoke action checkGrantedPermissionsForApp."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkGrantedPermissionsForAppWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkGrantedPermissionsForAppWithResponse(String groupId, Context context)"
  name: "checkGrantedPermissionsForAppWithResponse(String groupId, Context context)"
  nameWithType: "GroupsClient.checkGrantedPermissionsForAppWithResponse(String groupId, Context context)"
  summary: "Invoke action check<wbr>Granted<wbr>Permissions<wbr>For<wbr>App."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<MicrosoftGraphResourceSpecificPermissionGrantInner>> checkGrantedPermissionsForAppWithResponse(String groupId, Context context)"
  desc: "Invoke action checkGrantedPermissionsForApp."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkGrantedPermissionsForAppWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkGrantedPermissionsForAppWithResponseAsync(String groupId)"
  name: "checkGrantedPermissionsForAppWithResponseAsync(String groupId)"
  nameWithType: "GroupsClient.checkGrantedPermissionsForAppWithResponseAsync(String groupId)"
  summary: "Invoke action check<wbr>Granted<wbr>Permissions<wbr>For<wbr>App."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<MicrosoftGraphResourceSpecificPermissionGrantInner>>> checkGrantedPermissionsForAppWithResponseAsync(String groupId)"
  desc: "Invoke action checkGrantedPermissionsForApp."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberGroups(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberGroups(String groupId, GroupsCheckMemberGroupsRequestBody body)"
  name: "checkMemberGroups(String groupId, GroupsCheckMemberGroupsRequestBody body)"
  nameWithType: "GroupsClient.checkMemberGroups(String groupId, GroupsCheckMemberGroupsRequestBody body)"
  summary: "Invoke action check<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberGroupsRequestBody&text=GroupsCheckMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<String> checkMemberGroups(String groupId, GroupsCheckMemberGroupsRequestBody body)"
  desc: "Invoke action checkMemberGroups."
  returns:
    description: "array of Post200ApplicationJsonItemsItem."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberGroupsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberGroupsAsync(String groupId, GroupsCheckMemberGroupsRequestBody body)"
  name: "checkMemberGroupsAsync(String groupId, GroupsCheckMemberGroupsRequestBody body)"
  nameWithType: "GroupsClient.checkMemberGroupsAsync(String groupId, GroupsCheckMemberGroupsRequestBody body)"
  summary: "Invoke action check<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberGroupsRequestBody&text=GroupsCheckMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<String>> checkMemberGroupsAsync(String groupId, GroupsCheckMemberGroupsRequestBody body)"
  desc: "Invoke action checkMemberGroups."
  returns:
    description: "array of Post200ApplicationJsonItemsItem."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberGroupsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberGroupsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberGroupsWithResponse(String groupId, GroupsCheckMemberGroupsRequestBody body, Context context)"
  name: "checkMemberGroupsWithResponse(String groupId, GroupsCheckMemberGroupsRequestBody body, Context context)"
  nameWithType: "GroupsClient.checkMemberGroupsWithResponse(String groupId, GroupsCheckMemberGroupsRequestBody body, Context context)"
  summary: "Invoke action check<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberGroupsRequestBody&text=GroupsCheckMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<String>> checkMemberGroupsWithResponse(String groupId, GroupsCheckMemberGroupsRequestBody body, Context context)"
  desc: "Invoke action checkMemberGroups."
  returns:
    description: "array of Post200ApplicationJsonItemsItem."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberGroupsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberGroupsWithResponseAsync(String groupId, GroupsCheckMemberGroupsRequestBody body)"
  name: "checkMemberGroupsWithResponseAsync(String groupId, GroupsCheckMemberGroupsRequestBody body)"
  nameWithType: "GroupsClient.checkMemberGroupsWithResponseAsync(String groupId, GroupsCheckMemberGroupsRequestBody body)"
  summary: "Invoke action check<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberGroupsRequestBody&text=GroupsCheckMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<String>>> checkMemberGroupsWithResponseAsync(String groupId, GroupsCheckMemberGroupsRequestBody body)"
  desc: "Invoke action checkMemberGroups."
  returns:
    description: "array of Post200ApplicationJsonItemsItem."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberObjects(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberObjects(String groupId, GroupsCheckMemberObjectsRequestBody body)"
  name: "checkMemberObjects(String groupId, GroupsCheckMemberObjectsRequestBody body)"
  nameWithType: "GroupsClient.checkMemberObjects(String groupId, GroupsCheckMemberObjectsRequestBody body)"
  summary: "Invoke action check<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberObjectsRequestBody&text=GroupsCheckMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<String> checkMemberObjects(String groupId, GroupsCheckMemberObjectsRequestBody body)"
  desc: "Invoke action checkMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberObjectsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberObjectsAsync(String groupId, GroupsCheckMemberObjectsRequestBody body)"
  name: "checkMemberObjectsAsync(String groupId, GroupsCheckMemberObjectsRequestBody body)"
  nameWithType: "GroupsClient.checkMemberObjectsAsync(String groupId, GroupsCheckMemberObjectsRequestBody body)"
  summary: "Invoke action check<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberObjectsRequestBody&text=GroupsCheckMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<String>> checkMemberObjectsAsync(String groupId, GroupsCheckMemberObjectsRequestBody body)"
  desc: "Invoke action checkMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberObjectsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberObjectsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberObjectsWithResponse(String groupId, GroupsCheckMemberObjectsRequestBody body, Context context)"
  name: "checkMemberObjectsWithResponse(String groupId, GroupsCheckMemberObjectsRequestBody body, Context context)"
  nameWithType: "GroupsClient.checkMemberObjectsWithResponse(String groupId, GroupsCheckMemberObjectsRequestBody body, Context context)"
  summary: "Invoke action check<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberObjectsRequestBody&text=GroupsCheckMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<String>> checkMemberObjectsWithResponse(String groupId, GroupsCheckMemberObjectsRequestBody body, Context context)"
  desc: "Invoke action checkMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberObjectsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.checkMemberObjectsWithResponseAsync(String groupId, GroupsCheckMemberObjectsRequestBody body)"
  name: "checkMemberObjectsWithResponseAsync(String groupId, GroupsCheckMemberObjectsRequestBody body)"
  nameWithType: "GroupsClient.checkMemberObjectsWithResponseAsync(String groupId, GroupsCheckMemberObjectsRequestBody body)"
  summary: "Invoke action check<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsCheckMemberObjectsRequestBody&text=GroupsCheckMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<String>>> checkMemberObjectsWithResponseAsync(String groupId, GroupsCheckMemberObjectsRequestBody body)"
  desc: "Invoke action checkMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAcceptedSenders(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAcceptedSenders(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  name: "createAcceptedSenders(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  nameWithType: "GroupsClient.createAcceptedSenders(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  summary: "Create new navigation property to accepted<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphDirectoryObjectInner createAcceptedSenders(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  desc: "Create new navigation property to acceptedSenders for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAcceptedSendersAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAcceptedSendersAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  name: "createAcceptedSendersAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  nameWithType: "GroupsClient.createAcceptedSendersAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  summary: "Create new navigation property to accepted<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphDirectoryObjectInner> createAcceptedSendersAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  desc: "Create new navigation property to acceptedSenders for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAcceptedSendersWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAcceptedSendersWithResponse(String groupId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  name: "createAcceptedSendersWithResponse(String groupId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  nameWithType: "GroupsClient.createAcceptedSendersWithResponse(String groupId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  summary: "Create new navigation property to accepted<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphDirectoryObjectInner> createAcceptedSendersWithResponse(String groupId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  desc: "Create new navigation property to acceptedSenders for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAcceptedSendersWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAcceptedSendersWithResponseAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  name: "createAcceptedSendersWithResponseAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  nameWithType: "GroupsClient.createAcceptedSendersWithResponseAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  summary: "Create new navigation property to accepted<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphDirectoryObjectInner>> createAcceptedSendersWithResponseAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  desc: "Create new navigation property to acceptedSenders for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAppRoleAssignments(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAppRoleAssignments(String groupId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "createAppRoleAssignments(String groupId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "GroupsClient.createAppRoleAssignments(String groupId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Create new navigation property to app<wbr>Role<wbr>Assignments for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphAppRoleAssignmentInner createAppRoleAssignments(String groupId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Create new navigation property to appRoleAssignments for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAppRoleAssignmentsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAppRoleAssignmentsAsync(String groupId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "createAppRoleAssignmentsAsync(String groupId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "GroupsClient.createAppRoleAssignmentsAsync(String groupId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Create new navigation property to app<wbr>Role<wbr>Assignments for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphAppRoleAssignmentInner> createAppRoleAssignmentsAsync(String groupId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Create new navigation property to appRoleAssignments for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAppRoleAssignmentsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAppRoleAssignmentsWithResponse(String groupId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  name: "createAppRoleAssignmentsWithResponse(String groupId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  nameWithType: "GroupsClient.createAppRoleAssignmentsWithResponse(String groupId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  summary: "Create new navigation property to app<wbr>Role<wbr>Assignments for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphAppRoleAssignmentInner> createAppRoleAssignmentsWithResponse(String groupId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  desc: "Create new navigation property to appRoleAssignments for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAppRoleAssignmentsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createAppRoleAssignmentsWithResponseAsync(String groupId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "createAppRoleAssignmentsWithResponseAsync(String groupId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "GroupsClient.createAppRoleAssignmentsWithResponseAsync(String groupId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Create new navigation property to app<wbr>Role<wbr>Assignments for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphAppRoleAssignmentInner>> createAppRoleAssignmentsWithResponseAsync(String groupId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Create new navigation property to appRoleAssignments for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createExtensions(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createExtensions(String groupId, MicrosoftGraphExtensionInner body)"
  name: "createExtensions(String groupId, MicrosoftGraphExtensionInner body)"
  nameWithType: "GroupsClient.createExtensions(String groupId, MicrosoftGraphExtensionInner body)"
  summary: "Create new navigation property to extensions for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphExtensionInner createExtensions(String groupId, MicrosoftGraphExtensionInner body)"
  desc: "Create new navigation property to extensions for groups."
  returns:
    description: "extension."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createExtensionsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createExtensionsAsync(String groupId, MicrosoftGraphExtensionInner body)"
  name: "createExtensionsAsync(String groupId, MicrosoftGraphExtensionInner body)"
  nameWithType: "GroupsClient.createExtensionsAsync(String groupId, MicrosoftGraphExtensionInner body)"
  summary: "Create new navigation property to extensions for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphExtensionInner> createExtensionsAsync(String groupId, MicrosoftGraphExtensionInner body)"
  desc: "Create new navigation property to extensions for groups."
  returns:
    description: "extension."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createExtensionsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createExtensionsWithResponse(String groupId, MicrosoftGraphExtensionInner body, Context context)"
  name: "createExtensionsWithResponse(String groupId, MicrosoftGraphExtensionInner body, Context context)"
  nameWithType: "GroupsClient.createExtensionsWithResponse(String groupId, MicrosoftGraphExtensionInner body, Context context)"
  summary: "Create new navigation property to extensions for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphExtensionInner> createExtensionsWithResponse(String groupId, MicrosoftGraphExtensionInner body, Context context)"
  desc: "Create new navigation property to extensions for groups."
  returns:
    description: "extension."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createExtensionsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createExtensionsWithResponseAsync(String groupId, MicrosoftGraphExtensionInner body)"
  name: "createExtensionsWithResponseAsync(String groupId, MicrosoftGraphExtensionInner body)"
  nameWithType: "GroupsClient.createExtensionsWithResponseAsync(String groupId, MicrosoftGraphExtensionInner body)"
  summary: "Create new navigation property to extensions for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphExtensionInner>> createExtensionsWithResponseAsync(String groupId, MicrosoftGraphExtensionInner body)"
  desc: "Create new navigation property to extensions for groups."
  returns:
    description: "extension."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPermissionGrants(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPermissionGrants(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  name: "createPermissionGrants(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  nameWithType: "GroupsClient.createPermissionGrants(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  summary: "Create new navigation property to permission<wbr>Grants for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphResourceSpecificPermissionGrantInner createPermissionGrants(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  desc: "Create new navigation property to permissionGrants for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPermissionGrantsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPermissionGrantsAsync(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  name: "createPermissionGrantsAsync(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  nameWithType: "GroupsClient.createPermissionGrantsAsync(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  summary: "Create new navigation property to permission<wbr>Grants for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphResourceSpecificPermissionGrantInner> createPermissionGrantsAsync(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  desc: "Create new navigation property to permissionGrants for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPermissionGrantsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPermissionGrantsWithResponse(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body, Context context)"
  name: "createPermissionGrantsWithResponse(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body, Context context)"
  nameWithType: "GroupsClient.createPermissionGrantsWithResponse(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body, Context context)"
  summary: "Create new navigation property to permission<wbr>Grants for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphResourceSpecificPermissionGrantInner> createPermissionGrantsWithResponse(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body, Context context)"
  desc: "Create new navigation property to permissionGrants for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPermissionGrantsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPermissionGrantsWithResponseAsync(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  name: "createPermissionGrantsWithResponseAsync(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  nameWithType: "GroupsClient.createPermissionGrantsWithResponseAsync(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  summary: "Create new navigation property to permission<wbr>Grants for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphResourceSpecificPermissionGrantInner>> createPermissionGrantsWithResponseAsync(String groupId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  desc: "Create new navigation property to permissionGrants for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPhotos(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPhotos(String groupId, MicrosoftGraphProfilePhotoInner body)"
  name: "createPhotos(String groupId, MicrosoftGraphProfilePhotoInner body)"
  nameWithType: "GroupsClient.createPhotos(String groupId, MicrosoftGraphProfilePhotoInner body)"
  summary: "Create new navigation property to photos for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphProfilePhotoInner createPhotos(String groupId, MicrosoftGraphProfilePhotoInner body)"
  desc: "Create new navigation property to photos for groups."
  returns:
    description: "profilePhoto."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPhotosAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPhotosAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  name: "createPhotosAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  nameWithType: "GroupsClient.createPhotosAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  summary: "Create new navigation property to photos for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphProfilePhotoInner> createPhotosAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  desc: "Create new navigation property to photos for groups."
  returns:
    description: "profilePhoto."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPhotosWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPhotosWithResponse(String groupId, MicrosoftGraphProfilePhotoInner body, Context context)"
  name: "createPhotosWithResponse(String groupId, MicrosoftGraphProfilePhotoInner body, Context context)"
  nameWithType: "GroupsClient.createPhotosWithResponse(String groupId, MicrosoftGraphProfilePhotoInner body, Context context)"
  summary: "Create new navigation property to photos for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphProfilePhotoInner> createPhotosWithResponse(String groupId, MicrosoftGraphProfilePhotoInner body, Context context)"
  desc: "Create new navigation property to photos for groups."
  returns:
    description: "profilePhoto."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPhotosWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createPhotosWithResponseAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  name: "createPhotosWithResponseAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  nameWithType: "GroupsClient.createPhotosWithResponseAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  summary: "Create new navigation property to photos for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphProfilePhotoInner>> createPhotosWithResponseAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  desc: "Create new navigation property to photos for groups."
  returns:
    description: "profilePhoto."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMemberOf(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMemberOf(String groupId, Map<String,Object> body)"
  name: "createRefMemberOf(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefMemberOf(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to member<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefMemberOf(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to memberOf for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMemberOfAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMemberOfAsync(String groupId, Map<String,Object> body)"
  name: "createRefMemberOfAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefMemberOfAsync(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to member<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefMemberOfAsync(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to memberOf for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMemberOfWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMemberOfWithResponse(String groupId, Map<String,Object> body, Context context)"
  name: "createRefMemberOfWithResponse(String groupId, Map<String,Object> body, Context context)"
  nameWithType: "GroupsClient.createRefMemberOfWithResponse(String groupId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to member<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefMemberOfWithResponse(String groupId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to memberOf for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMemberOfWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMemberOfWithResponseAsync(String groupId, Map<String,Object> body)"
  name: "createRefMemberOfWithResponseAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefMemberOfWithResponseAsync(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to member<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefMemberOfWithResponseAsync(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to memberOf for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembers(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembers(String groupId, Map<String,Object> body)"
  name: "createRefMembers(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefMembers(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to members for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract void createRefMembers(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to members for groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersAsync(String groupId, Map<String,Object> body)"
  name: "createRefMembersAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefMembersAsync(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to members for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Void> createRefMembersAsync(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to members for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersWithLicenseErrors(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersWithLicenseErrors(String groupId, Map<String,Object> body)"
  name: "createRefMembersWithLicenseErrors(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefMembersWithLicenseErrors(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to members<wbr>With<wbr>License<wbr>Errors for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefMembersWithLicenseErrors(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to membersWithLicenseErrors for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersWithLicenseErrorsAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersWithLicenseErrorsAsync(String groupId, Map<String,Object> body)"
  name: "createRefMembersWithLicenseErrorsAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefMembersWithLicenseErrorsAsync(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to members<wbr>With<wbr>License<wbr>Errors for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefMembersWithLicenseErrorsAsync(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to membersWithLicenseErrors for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersWithLicenseErrorsWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersWithLicenseErrorsWithResponse(String groupId, Map<String,Object> body, Context context)"
  name: "createRefMembersWithLicenseErrorsWithResponse(String groupId, Map<String,Object> body, Context context)"
  nameWithType: "GroupsClient.createRefMembersWithLicenseErrorsWithResponse(String groupId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to members<wbr>With<wbr>License<wbr>Errors for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefMembersWithLicenseErrorsWithResponse(String groupId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to membersWithLicenseErrors for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersWithLicenseErrorsWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersWithLicenseErrorsWithResponseAsync(String groupId, Map<String,Object> body)"
  name: "createRefMembersWithLicenseErrorsWithResponseAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefMembersWithLicenseErrorsWithResponseAsync(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to members<wbr>With<wbr>License<wbr>Errors for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefMembersWithLicenseErrorsWithResponseAsync(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to membersWithLicenseErrors for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersWithResponse(String groupId, Map<String,Object> body, Context context)"
  name: "createRefMembersWithResponse(String groupId, Map<String,Object> body, Context context)"
  nameWithType: "GroupsClient.createRefMembersWithResponse(String groupId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to members for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> createRefMembersWithResponse(String groupId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to members for groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefMembersWithResponseAsync(String groupId, Map<String,Object> body)"
  name: "createRefMembersWithResponseAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefMembersWithResponseAsync(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to members for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Void>> createRefMembersWithResponseAsync(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to members for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefOwners(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefOwners(String groupId, Map<String,Object> body)"
  name: "createRefOwners(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefOwners(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to owners for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefOwners(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to owners for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefOwnersAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefOwnersAsync(String groupId, Map<String,Object> body)"
  name: "createRefOwnersAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefOwnersAsync(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to owners for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefOwnersAsync(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to owners for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefOwnersWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefOwnersWithResponse(String groupId, Map<String,Object> body, Context context)"
  name: "createRefOwnersWithResponse(String groupId, Map<String,Object> body, Context context)"
  nameWithType: "GroupsClient.createRefOwnersWithResponse(String groupId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to owners for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefOwnersWithResponse(String groupId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to owners for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefOwnersWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefOwnersWithResponseAsync(String groupId, Map<String,Object> body)"
  name: "createRefOwnersWithResponseAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefOwnersWithResponseAsync(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to owners for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefOwnersWithResponseAsync(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to owners for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMemberOf(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMemberOf(String groupId, Map<String,Object> body)"
  name: "createRefTransitiveMemberOf(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefTransitiveMemberOf(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to transitive<wbr>Member<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefTransitiveMemberOf(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to transitiveMemberOf for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMemberOfAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMemberOfAsync(String groupId, Map<String,Object> body)"
  name: "createRefTransitiveMemberOfAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefTransitiveMemberOfAsync(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to transitive<wbr>Member<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefTransitiveMemberOfAsync(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to transitiveMemberOf for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMemberOfWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMemberOfWithResponse(String groupId, Map<String,Object> body, Context context)"
  name: "createRefTransitiveMemberOfWithResponse(String groupId, Map<String,Object> body, Context context)"
  nameWithType: "GroupsClient.createRefTransitiveMemberOfWithResponse(String groupId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to transitive<wbr>Member<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefTransitiveMemberOfWithResponse(String groupId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to transitiveMemberOf for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMemberOfWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMemberOfWithResponseAsync(String groupId, Map<String,Object> body)"
  name: "createRefTransitiveMemberOfWithResponseAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefTransitiveMemberOfWithResponseAsync(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to transitive<wbr>Member<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefTransitiveMemberOfWithResponseAsync(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to transitiveMemberOf for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMembers(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMembers(String groupId, Map<String,Object> body)"
  name: "createRefTransitiveMembers(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefTransitiveMembers(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to transitive<wbr>Members for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefTransitiveMembers(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to transitiveMembers for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMembersAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMembersAsync(String groupId, Map<String,Object> body)"
  name: "createRefTransitiveMembersAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefTransitiveMembersAsync(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to transitive<wbr>Members for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefTransitiveMembersAsync(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to transitiveMembers for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMembersWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMembersWithResponse(String groupId, Map<String,Object> body, Context context)"
  name: "createRefTransitiveMembersWithResponse(String groupId, Map<String,Object> body, Context context)"
  nameWithType: "GroupsClient.createRefTransitiveMembersWithResponse(String groupId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to transitive<wbr>Members for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefTransitiveMembersWithResponse(String groupId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to transitiveMembers for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMembersWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRefTransitiveMembersWithResponseAsync(String groupId, Map<String,Object> body)"
  name: "createRefTransitiveMembersWithResponseAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.createRefTransitiveMembersWithResponseAsync(String groupId, Map<String,Object> body)"
  summary: "Create new navigation property ref to transitive<wbr>Members for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefTransitiveMembersWithResponseAsync(String groupId, Map<String,Object> body)"
  desc: "Create new navigation property ref to transitiveMembers for groups."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRejectedSenders(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRejectedSenders(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  name: "createRejectedSenders(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  nameWithType: "GroupsClient.createRejectedSenders(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  summary: "Create new navigation property to rejected<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphDirectoryObjectInner createRejectedSenders(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  desc: "Create new navigation property to rejectedSenders for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRejectedSendersAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRejectedSendersAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  name: "createRejectedSendersAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  nameWithType: "GroupsClient.createRejectedSendersAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  summary: "Create new navigation property to rejected<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphDirectoryObjectInner> createRejectedSendersAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  desc: "Create new navigation property to rejectedSenders for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRejectedSendersWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRejectedSendersWithResponse(String groupId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  name: "createRejectedSendersWithResponse(String groupId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  nameWithType: "GroupsClient.createRejectedSendersWithResponse(String groupId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  summary: "Create new navigation property to rejected<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphDirectoryObjectInner> createRejectedSendersWithResponse(String groupId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  desc: "Create new navigation property to rejectedSenders for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRejectedSendersWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.createRejectedSendersWithResponseAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  name: "createRejectedSendersWithResponseAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  nameWithType: "GroupsClient.createRejectedSendersWithResponseAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  summary: "Create new navigation property to rejected<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphDirectoryObjectInner>> createRejectedSendersWithResponseAsync(String groupId, MicrosoftGraphDirectoryObjectInner body)"
  desc: "Create new navigation property to rejectedSenders for groups."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAcceptedSenders(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAcceptedSenders(String groupId, String directoryObjectId)"
  name: "deleteAcceptedSenders(String groupId, String directoryObjectId)"
  nameWithType: "GroupsClient.deleteAcceptedSenders(String groupId, String directoryObjectId)"
  summary: "Delete navigation property accepted<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteAcceptedSenders(String groupId, String directoryObjectId)"
  desc: "Delete navigation property acceptedSenders for groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAcceptedSendersAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAcceptedSendersAsync(String groupId, String directoryObjectId)"
  name: "deleteAcceptedSendersAsync(String groupId, String directoryObjectId)"
  nameWithType: "GroupsClient.deleteAcceptedSendersAsync(String groupId, String directoryObjectId)"
  summary: "Delete navigation property accepted<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteAcceptedSendersAsync(String groupId, String directoryObjectId)"
  desc: "Delete navigation property acceptedSenders for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAcceptedSendersAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAcceptedSendersAsync(String groupId, String directoryObjectId, String ifMatch)"
  name: "deleteAcceptedSendersAsync(String groupId, String directoryObjectId, String ifMatch)"
  nameWithType: "GroupsClient.deleteAcceptedSendersAsync(String groupId, String directoryObjectId, String ifMatch)"
  summary: "Delete navigation property accepted<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteAcceptedSendersAsync(String groupId, String directoryObjectId, String ifMatch)"
  desc: "Delete navigation property acceptedSenders for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAcceptedSendersWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAcceptedSendersWithResponse(String groupId, String directoryObjectId, String ifMatch, Context context)"
  name: "deleteAcceptedSendersWithResponse(String groupId, String directoryObjectId, String ifMatch, Context context)"
  nameWithType: "GroupsClient.deleteAcceptedSendersWithResponse(String groupId, String directoryObjectId, String ifMatch, Context context)"
  summary: "Delete navigation property accepted<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteAcceptedSendersWithResponse(String groupId, String directoryObjectId, String ifMatch, Context context)"
  desc: "Delete navigation property acceptedSenders for groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAcceptedSendersWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAcceptedSendersWithResponseAsync(String groupId, String directoryObjectId, String ifMatch)"
  name: "deleteAcceptedSendersWithResponseAsync(String groupId, String directoryObjectId, String ifMatch)"
  nameWithType: "GroupsClient.deleteAcceptedSendersWithResponseAsync(String groupId, String directoryObjectId, String ifMatch)"
  summary: "Delete navigation property accepted<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteAcceptedSendersWithResponseAsync(String groupId, String directoryObjectId, String ifMatch)"
  desc: "Delete navigation property acceptedSenders for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAppRoleAssignments(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAppRoleAssignments(String groupId, String appRoleAssignmentId)"
  name: "deleteAppRoleAssignments(String groupId, String appRoleAssignmentId)"
  nameWithType: "GroupsClient.deleteAppRoleAssignments(String groupId, String appRoleAssignmentId)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assignments for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteAppRoleAssignments(String groupId, String appRoleAssignmentId)"
  desc: "Delete navigation property appRoleAssignments for groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAppRoleAssignmentsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId)"
  name: "deleteAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId)"
  nameWithType: "GroupsClient.deleteAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assignments for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId)"
  desc: "Delete navigation property appRoleAssignments for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAppRoleAssignmentsAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId, String ifMatch)"
  name: "deleteAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId, String ifMatch)"
  nameWithType: "GroupsClient.deleteAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId, String ifMatch)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assignments for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId, String ifMatch)"
  desc: "Delete navigation property appRoleAssignments for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAppRoleAssignmentsWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAppRoleAssignmentsWithResponse(String groupId, String appRoleAssignmentId, String ifMatch, Context context)"
  name: "deleteAppRoleAssignmentsWithResponse(String groupId, String appRoleAssignmentId, String ifMatch, Context context)"
  nameWithType: "GroupsClient.deleteAppRoleAssignmentsWithResponse(String groupId, String appRoleAssignmentId, String ifMatch, Context context)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assignments for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteAppRoleAssignmentsWithResponse(String groupId, String appRoleAssignmentId, String ifMatch, Context context)"
  desc: "Delete navigation property appRoleAssignments for groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAppRoleAssignmentsWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteAppRoleAssignmentsWithResponseAsync(String groupId, String appRoleAssignmentId, String ifMatch)"
  name: "deleteAppRoleAssignmentsWithResponseAsync(String groupId, String appRoleAssignmentId, String ifMatch)"
  nameWithType: "GroupsClient.deleteAppRoleAssignmentsWithResponseAsync(String groupId, String appRoleAssignmentId, String ifMatch)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assignments for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteAppRoleAssignmentsWithResponseAsync(String groupId, String appRoleAssignmentId, String ifMatch)"
  desc: "Delete navigation property appRoleAssignments for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteExtensions(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteExtensions(String groupId, String extensionId)"
  name: "deleteExtensions(String groupId, String extensionId)"
  nameWithType: "GroupsClient.deleteExtensions(String groupId, String extensionId)"
  summary: "Delete navigation property extensions for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteExtensions(String groupId, String extensionId)"
  desc: "Delete navigation property extensions for groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteExtensionsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteExtensionsAsync(String groupId, String extensionId)"
  name: "deleteExtensionsAsync(String groupId, String extensionId)"
  nameWithType: "GroupsClient.deleteExtensionsAsync(String groupId, String extensionId)"
  summary: "Delete navigation property extensions for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteExtensionsAsync(String groupId, String extensionId)"
  desc: "Delete navigation property extensions for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteExtensionsAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteExtensionsAsync(String groupId, String extensionId, String ifMatch)"
  name: "deleteExtensionsAsync(String groupId, String extensionId, String ifMatch)"
  nameWithType: "GroupsClient.deleteExtensionsAsync(String groupId, String extensionId, String ifMatch)"
  summary: "Delete navigation property extensions for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteExtensionsAsync(String groupId, String extensionId, String ifMatch)"
  desc: "Delete navigation property extensions for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteExtensionsWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteExtensionsWithResponse(String groupId, String extensionId, String ifMatch, Context context)"
  name: "deleteExtensionsWithResponse(String groupId, String extensionId, String ifMatch, Context context)"
  nameWithType: "GroupsClient.deleteExtensionsWithResponse(String groupId, String extensionId, String ifMatch, Context context)"
  summary: "Delete navigation property extensions for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteExtensionsWithResponse(String groupId, String extensionId, String ifMatch, Context context)"
  desc: "Delete navigation property extensions for groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteExtensionsWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteExtensionsWithResponseAsync(String groupId, String extensionId, String ifMatch)"
  name: "deleteExtensionsWithResponseAsync(String groupId, String extensionId, String ifMatch)"
  nameWithType: "GroupsClient.deleteExtensionsWithResponseAsync(String groupId, String extensionId, String ifMatch)"
  summary: "Delete navigation property extensions for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteExtensionsWithResponseAsync(String groupId, String extensionId, String ifMatch)"
  desc: "Delete navigation property extensions for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePermissionGrants(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePermissionGrants(String groupId, String resourceSpecificPermissionGrantId)"
  name: "deletePermissionGrants(String groupId, String resourceSpecificPermissionGrantId)"
  nameWithType: "GroupsClient.deletePermissionGrants(String groupId, String resourceSpecificPermissionGrantId)"
  summary: "Delete navigation property permission<wbr>Grants for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deletePermissionGrants(String groupId, String resourceSpecificPermissionGrantId)"
  desc: "Delete navigation property permissionGrants for groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePermissionGrantsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId)"
  name: "deletePermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId)"
  nameWithType: "GroupsClient.deletePermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId)"
  summary: "Delete navigation property permission<wbr>Grants for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deletePermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId)"
  desc: "Delete navigation property permissionGrants for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePermissionGrantsAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId, String ifMatch)"
  name: "deletePermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId, String ifMatch)"
  nameWithType: "GroupsClient.deletePermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId, String ifMatch)"
  summary: "Delete navigation property permission<wbr>Grants for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deletePermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId, String ifMatch)"
  desc: "Delete navigation property permissionGrants for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePermissionGrantsWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePermissionGrantsWithResponse(String groupId, String resourceSpecificPermissionGrantId, String ifMatch, Context context)"
  name: "deletePermissionGrantsWithResponse(String groupId, String resourceSpecificPermissionGrantId, String ifMatch, Context context)"
  nameWithType: "GroupsClient.deletePermissionGrantsWithResponse(String groupId, String resourceSpecificPermissionGrantId, String ifMatch, Context context)"
  summary: "Delete navigation property permission<wbr>Grants for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deletePermissionGrantsWithResponse(String groupId, String resourceSpecificPermissionGrantId, String ifMatch, Context context)"
  desc: "Delete navigation property permissionGrants for groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePermissionGrantsWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePermissionGrantsWithResponseAsync(String groupId, String resourceSpecificPermissionGrantId, String ifMatch)"
  name: "deletePermissionGrantsWithResponseAsync(String groupId, String resourceSpecificPermissionGrantId, String ifMatch)"
  nameWithType: "GroupsClient.deletePermissionGrantsWithResponseAsync(String groupId, String resourceSpecificPermissionGrantId, String ifMatch)"
  summary: "Delete navigation property permission<wbr>Grants for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deletePermissionGrantsWithResponseAsync(String groupId, String resourceSpecificPermissionGrantId, String ifMatch)"
  desc: "Delete navigation property permissionGrants for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhoto(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhoto(String groupId)"
  name: "deletePhoto(String groupId)"
  nameWithType: "GroupsClient.deletePhoto(String groupId)"
  summary: "Delete navigation property photo for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deletePhoto(String groupId)"
  desc: "Delete navigation property photo for groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotoAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotoAsync(String groupId)"
  name: "deletePhotoAsync(String groupId)"
  nameWithType: "GroupsClient.deletePhotoAsync(String groupId)"
  summary: "Delete navigation property photo for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deletePhotoAsync(String groupId)"
  desc: "Delete navigation property photo for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotoAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotoAsync(String groupId, String ifMatch)"
  name: "deletePhotoAsync(String groupId, String ifMatch)"
  nameWithType: "GroupsClient.deletePhotoAsync(String groupId, String ifMatch)"
  summary: "Delete navigation property photo for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deletePhotoAsync(String groupId, String ifMatch)"
  desc: "Delete navigation property photo for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotoWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotoWithResponse(String groupId, String ifMatch, Context context)"
  name: "deletePhotoWithResponse(String groupId, String ifMatch, Context context)"
  nameWithType: "GroupsClient.deletePhotoWithResponse(String groupId, String ifMatch, Context context)"
  summary: "Delete navigation property photo for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deletePhotoWithResponse(String groupId, String ifMatch, Context context)"
  desc: "Delete navigation property photo for groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotoWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotoWithResponseAsync(String groupId, String ifMatch)"
  name: "deletePhotoWithResponseAsync(String groupId, String ifMatch)"
  nameWithType: "GroupsClient.deletePhotoWithResponseAsync(String groupId, String ifMatch)"
  summary: "Delete navigation property photo for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deletePhotoWithResponseAsync(String groupId, String ifMatch)"
  desc: "Delete navigation property photo for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotos(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotos(String groupId, String profilePhotoId)"
  name: "deletePhotos(String groupId, String profilePhotoId)"
  nameWithType: "GroupsClient.deletePhotos(String groupId, String profilePhotoId)"
  summary: "Delete navigation property photos for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deletePhotos(String groupId, String profilePhotoId)"
  desc: "Delete navigation property photos for groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotosAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotosAsync(String groupId, String profilePhotoId)"
  name: "deletePhotosAsync(String groupId, String profilePhotoId)"
  nameWithType: "GroupsClient.deletePhotosAsync(String groupId, String profilePhotoId)"
  summary: "Delete navigation property photos for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deletePhotosAsync(String groupId, String profilePhotoId)"
  desc: "Delete navigation property photos for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotosAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotosAsync(String groupId, String profilePhotoId, String ifMatch)"
  name: "deletePhotosAsync(String groupId, String profilePhotoId, String ifMatch)"
  nameWithType: "GroupsClient.deletePhotosAsync(String groupId, String profilePhotoId, String ifMatch)"
  summary: "Delete navigation property photos for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deletePhotosAsync(String groupId, String profilePhotoId, String ifMatch)"
  desc: "Delete navigation property photos for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotosWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotosWithResponse(String groupId, String profilePhotoId, String ifMatch, Context context)"
  name: "deletePhotosWithResponse(String groupId, String profilePhotoId, String ifMatch, Context context)"
  nameWithType: "GroupsClient.deletePhotosWithResponse(String groupId, String profilePhotoId, String ifMatch, Context context)"
  summary: "Delete navigation property photos for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deletePhotosWithResponse(String groupId, String profilePhotoId, String ifMatch, Context context)"
  desc: "Delete navigation property photos for groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotosWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deletePhotosWithResponseAsync(String groupId, String profilePhotoId, String ifMatch)"
  name: "deletePhotosWithResponseAsync(String groupId, String profilePhotoId, String ifMatch)"
  nameWithType: "GroupsClient.deletePhotosWithResponseAsync(String groupId, String profilePhotoId, String ifMatch)"
  summary: "Delete navigation property photos for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deletePhotosWithResponseAsync(String groupId, String profilePhotoId, String ifMatch)"
  desc: "Delete navigation property photos for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefCreatedOnBehalfOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefCreatedOnBehalfOf(String groupId)"
  name: "deleteRefCreatedOnBehalfOf(String groupId)"
  nameWithType: "GroupsClient.deleteRefCreatedOnBehalfOf(String groupId)"
  summary: "Delete ref of navigation property created<wbr>OnBehalf<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteRefCreatedOnBehalfOf(String groupId)"
  desc: "Delete ref of navigation property createdOnBehalfOf for groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefCreatedOnBehalfOfAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefCreatedOnBehalfOfAsync(String groupId)"
  name: "deleteRefCreatedOnBehalfOfAsync(String groupId)"
  nameWithType: "GroupsClient.deleteRefCreatedOnBehalfOfAsync(String groupId)"
  summary: "Delete ref of navigation property created<wbr>OnBehalf<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteRefCreatedOnBehalfOfAsync(String groupId)"
  desc: "Delete ref of navigation property createdOnBehalfOf for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefCreatedOnBehalfOfAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefCreatedOnBehalfOfAsync(String groupId, String ifMatch)"
  name: "deleteRefCreatedOnBehalfOfAsync(String groupId, String ifMatch)"
  nameWithType: "GroupsClient.deleteRefCreatedOnBehalfOfAsync(String groupId, String ifMatch)"
  summary: "Delete ref of navigation property created<wbr>OnBehalf<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteRefCreatedOnBehalfOfAsync(String groupId, String ifMatch)"
  desc: "Delete ref of navigation property createdOnBehalfOf for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefCreatedOnBehalfOfWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefCreatedOnBehalfOfWithResponse(String groupId, String ifMatch, Context context)"
  name: "deleteRefCreatedOnBehalfOfWithResponse(String groupId, String ifMatch, Context context)"
  nameWithType: "GroupsClient.deleteRefCreatedOnBehalfOfWithResponse(String groupId, String ifMatch, Context context)"
  summary: "Delete ref of navigation property created<wbr>OnBehalf<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteRefCreatedOnBehalfOfWithResponse(String groupId, String ifMatch, Context context)"
  desc: "Delete ref of navigation property createdOnBehalfOf for groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefCreatedOnBehalfOfWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefCreatedOnBehalfOfWithResponseAsync(String groupId, String ifMatch)"
  name: "deleteRefCreatedOnBehalfOfWithResponseAsync(String groupId, String ifMatch)"
  nameWithType: "GroupsClient.deleteRefCreatedOnBehalfOfWithResponseAsync(String groupId, String ifMatch)"
  summary: "Delete ref of navigation property created<wbr>OnBehalf<wbr>Of for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteRefCreatedOnBehalfOfWithResponseAsync(String groupId, String ifMatch)"
  desc: "Delete ref of navigation property createdOnBehalfOf for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefMember(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefMember(String groupId, String directoryObjectId)"
  name: "deleteRefMember(String groupId, String directoryObjectId)"
  nameWithType: "GroupsClient.deleteRefMember(String groupId, String directoryObjectId)"
  summary: "Delete ref of member from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: directoryObject-id."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteRefMember(String groupId, String directoryObjectId)"
  desc: "Delete ref of member from groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefMemberAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefMemberAsync(String groupId, String directoryObjectId)"
  name: "deleteRefMemberAsync(String groupId, String directoryObjectId)"
  nameWithType: "GroupsClient.deleteRefMemberAsync(String groupId, String directoryObjectId)"
  summary: "Delete ref of member from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: directoryObject-id."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteRefMemberAsync(String groupId, String directoryObjectId)"
  desc: "Delete ref of member from groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefMemberAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefMemberAsync(String groupId, String directoryObjectId, String ifMatch)"
  name: "deleteRefMemberAsync(String groupId, String directoryObjectId, String ifMatch)"
  nameWithType: "GroupsClient.deleteRefMemberAsync(String groupId, String directoryObjectId, String ifMatch)"
  summary: "Delete ref of member from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: directoryObject-id."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteRefMemberAsync(String groupId, String directoryObjectId, String ifMatch)"
  desc: "Delete ref of member from groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefMemberWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefMemberWithResponse(String groupId, String directoryObjectId, String ifMatch, Context context)"
  name: "deleteRefMemberWithResponse(String groupId, String directoryObjectId, String ifMatch, Context context)"
  nameWithType: "GroupsClient.deleteRefMemberWithResponse(String groupId, String directoryObjectId, String ifMatch, Context context)"
  summary: "Delete ref of member from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: directoryObject-id."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteRefMemberWithResponse(String groupId, String directoryObjectId, String ifMatch, Context context)"
  desc: "Delete ref of member from groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefMemberWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRefMemberWithResponseAsync(String groupId, String directoryObjectId, String ifMatch)"
  name: "deleteRefMemberWithResponseAsync(String groupId, String directoryObjectId, String ifMatch)"
  nameWithType: "GroupsClient.deleteRefMemberWithResponseAsync(String groupId, String directoryObjectId, String ifMatch)"
  summary: "Delete ref of member from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: directoryObject-id."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteRefMemberWithResponseAsync(String groupId, String directoryObjectId, String ifMatch)"
  desc: "Delete ref of member from groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRejectedSenders(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRejectedSenders(String groupId, String directoryObjectId)"
  name: "deleteRejectedSenders(String groupId, String directoryObjectId)"
  nameWithType: "GroupsClient.deleteRejectedSenders(String groupId, String directoryObjectId)"
  summary: "Delete navigation property rejected<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteRejectedSenders(String groupId, String directoryObjectId)"
  desc: "Delete navigation property rejectedSenders for groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRejectedSendersAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRejectedSendersAsync(String groupId, String directoryObjectId)"
  name: "deleteRejectedSendersAsync(String groupId, String directoryObjectId)"
  nameWithType: "GroupsClient.deleteRejectedSendersAsync(String groupId, String directoryObjectId)"
  summary: "Delete navigation property rejected<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteRejectedSendersAsync(String groupId, String directoryObjectId)"
  desc: "Delete navigation property rejectedSenders for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRejectedSendersAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRejectedSendersAsync(String groupId, String directoryObjectId, String ifMatch)"
  name: "deleteRejectedSendersAsync(String groupId, String directoryObjectId, String ifMatch)"
  nameWithType: "GroupsClient.deleteRejectedSendersAsync(String groupId, String directoryObjectId, String ifMatch)"
  summary: "Delete navigation property rejected<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteRejectedSendersAsync(String groupId, String directoryObjectId, String ifMatch)"
  desc: "Delete navigation property rejectedSenders for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRejectedSendersWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRejectedSendersWithResponse(String groupId, String directoryObjectId, String ifMatch, Context context)"
  name: "deleteRejectedSendersWithResponse(String groupId, String directoryObjectId, String ifMatch, Context context)"
  nameWithType: "GroupsClient.deleteRejectedSendersWithResponse(String groupId, String directoryObjectId, String ifMatch, Context context)"
  summary: "Delete navigation property rejected<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteRejectedSendersWithResponse(String groupId, String directoryObjectId, String ifMatch, Context context)"
  desc: "Delete navigation property rejectedSenders for groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRejectedSendersWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deleteRejectedSendersWithResponseAsync(String groupId, String directoryObjectId, String ifMatch)"
  name: "deleteRejectedSendersWithResponseAsync(String groupId, String directoryObjectId, String ifMatch)"
  nameWithType: "GroupsClient.deleteRejectedSendersWithResponseAsync(String groupId, String directoryObjectId, String ifMatch)"
  summary: "Delete navigation property rejected<wbr>Senders for groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteRejectedSendersWithResponseAsync(String groupId, String directoryObjectId, String ifMatch)"
  desc: "Delete navigation property rejectedSenders for groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.delta()"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.delta()"
  name: "delta()"
  nameWithType: "GroupsClient.delta()"
  summary: "Invoke function delta."
  modifiers:
  - "abstract"
  syntax: "public abstract List<MicrosoftGraphGroupInner> delta()"
  desc: "Invoke function delta."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner&text=MicrosoftGraphGroupInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deltaAsync()"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deltaAsync()"
  name: "deltaAsync()"
  nameWithType: "GroupsClient.deltaAsync()"
  summary: "Invoke function delta."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<List<MicrosoftGraphGroupInner>> deltaAsync()"
  desc: "Invoke function delta."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner&text=MicrosoftGraphGroupInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deltaWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deltaWithResponse(Context context)"
  name: "deltaWithResponse(Context context)"
  nameWithType: "GroupsClient.deltaWithResponse(Context context)"
  summary: "Invoke function delta."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<MicrosoftGraphGroupInner>> deltaWithResponse(Context context)"
  desc: "Invoke function delta."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner&text=MicrosoftGraphGroupInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deltaWithResponseAsync()"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.deltaWithResponseAsync()"
  name: "deltaWithResponseAsync()"
  nameWithType: "GroupsClient.deltaWithResponseAsync()"
  summary: "Invoke function delta."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<Response<List<MicrosoftGraphGroupInner>>> deltaWithResponseAsync()"
  desc: "Invoke function delta."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphGroupInner&text=MicrosoftGraphGroupInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAcceptedSenders(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAcceptedSenders(String groupId, String directoryObjectId)"
  name: "getAcceptedSenders(String groupId, String directoryObjectId)"
  nameWithType: "GroupsClient.getAcceptedSenders(String groupId, String directoryObjectId)"
  summary: "Get accepted<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphDirectoryObjectInner getAcceptedSenders(String groupId, String directoryObjectId)"
  desc: "Get acceptedSenders from groups."
  returns:
    description: "acceptedSenders from groups."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAcceptedSendersAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAcceptedSendersAsync(String groupId, String directoryObjectId)"
  name: "getAcceptedSendersAsync(String groupId, String directoryObjectId)"
  nameWithType: "GroupsClient.getAcceptedSendersAsync(String groupId, String directoryObjectId)"
  summary: "Get accepted<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphDirectoryObjectInner> getAcceptedSendersAsync(String groupId, String directoryObjectId)"
  desc: "Get acceptedSenders from groups."
  returns:
    description: "acceptedSenders from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAcceptedSendersAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAcceptedSendersAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  name: "getAcceptedSendersAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getAcceptedSendersAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get accepted<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphDirectoryObjectInner> getAcceptedSendersAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get acceptedSenders from groups."
  returns:
    description: "acceptedSenders from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAcceptedSendersWithResponse(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAcceptedSendersWithResponse(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "getAcceptedSendersWithResponse(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.getAcceptedSendersWithResponse(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get accepted<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphDirectoryObjectInner> getAcceptedSendersWithResponse(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get acceptedSenders from groups."
  returns:
    description: "acceptedSenders from groups."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAcceptedSendersWithResponseAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAcceptedSendersWithResponseAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  name: "getAcceptedSendersWithResponseAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getAcceptedSendersWithResponseAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get accepted<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphDirectoryObjectInner>> getAcceptedSendersWithResponseAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get acceptedSenders from groups."
  returns:
    description: "acceptedSenders from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAppRoleAssignments(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAppRoleAssignments(String groupId, String appRoleAssignmentId)"
  name: "getAppRoleAssignments(String groupId, String appRoleAssignmentId)"
  nameWithType: "GroupsClient.getAppRoleAssignments(String groupId, String appRoleAssignmentId)"
  summary: "Get app<wbr>Role<wbr>Assignments from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphAppRoleAssignmentInner getAppRoleAssignments(String groupId, String appRoleAssignmentId)"
  desc: "Get appRoleAssignments from groups."
  returns:
    description: "appRoleAssignments from groups."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAppRoleAssignmentsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId)"
  name: "getAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId)"
  nameWithType: "GroupsClient.getAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId)"
  summary: "Get app<wbr>Role<wbr>Assignments from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphAppRoleAssignmentInner> getAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId)"
  desc: "Get appRoleAssignments from groups."
  returns:
    description: "appRoleAssignments from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAppRoleAssignmentsAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId, List<GroupsSelect> select, List<String> expand)"
  name: "getAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get app<wbr>Role<wbr>Assignments from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphAppRoleAssignmentInner> getAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get appRoleAssignments from groups."
  returns:
    description: "appRoleAssignments from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAppRoleAssignmentsWithResponse(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAppRoleAssignmentsWithResponse(String groupId, String appRoleAssignmentId, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "getAppRoleAssignmentsWithResponse(String groupId, String appRoleAssignmentId, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.getAppRoleAssignmentsWithResponse(String groupId, String appRoleAssignmentId, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get app<wbr>Role<wbr>Assignments from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphAppRoleAssignmentInner> getAppRoleAssignmentsWithResponse(String groupId, String appRoleAssignmentId, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get appRoleAssignments from groups."
  returns:
    description: "appRoleAssignments from groups."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAppRoleAssignmentsWithResponseAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAppRoleAssignmentsWithResponseAsync(String groupId, String appRoleAssignmentId, List<GroupsSelect> select, List<String> expand)"
  name: "getAppRoleAssignmentsWithResponseAsync(String groupId, String appRoleAssignmentId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getAppRoleAssignmentsWithResponseAsync(String groupId, String appRoleAssignmentId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get app<wbr>Role<wbr>Assignments from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphAppRoleAssignmentInner>> getAppRoleAssignmentsWithResponseAsync(String groupId, String appRoleAssignmentId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get appRoleAssignments from groups."
  returns:
    description: "appRoleAssignments from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAvailableExtensionProperties(com.azure.resourcemanager.authorization.fluent.models.GroupsGetAvailableExtensionPropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAvailableExtensionProperties(GroupsGetAvailableExtensionPropertiesRequestBody body)"
  name: "getAvailableExtensionProperties(GroupsGetAvailableExtensionPropertiesRequestBody body)"
  nameWithType: "GroupsClient.getAvailableExtensionProperties(GroupsGetAvailableExtensionPropertiesRequestBody body)"
  summary: "Invoke action get<wbr>Available<wbr>Extension<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetAvailableExtensionPropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetAvailableExtensionPropertiesRequestBody&text=GroupsGetAvailableExtensionPropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<MicrosoftGraphExtensionPropertyInner> getAvailableExtensionProperties(GroupsGetAvailableExtensionPropertiesRequestBody body)"
  desc: "Invoke action getAvailableExtensionProperties."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner&text=MicrosoftGraphExtensionPropertyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAvailableExtensionPropertiesAsync(com.azure.resourcemanager.authorization.fluent.models.GroupsGetAvailableExtensionPropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAvailableExtensionPropertiesAsync(GroupsGetAvailableExtensionPropertiesRequestBody body)"
  name: "getAvailableExtensionPropertiesAsync(GroupsGetAvailableExtensionPropertiesRequestBody body)"
  nameWithType: "GroupsClient.getAvailableExtensionPropertiesAsync(GroupsGetAvailableExtensionPropertiesRequestBody body)"
  summary: "Invoke action get<wbr>Available<wbr>Extension<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetAvailableExtensionPropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetAvailableExtensionPropertiesRequestBody&text=GroupsGetAvailableExtensionPropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<MicrosoftGraphExtensionPropertyInner>> getAvailableExtensionPropertiesAsync(GroupsGetAvailableExtensionPropertiesRequestBody body)"
  desc: "Invoke action getAvailableExtensionProperties."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner&text=MicrosoftGraphExtensionPropertyInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAvailableExtensionPropertiesWithResponse(com.azure.resourcemanager.authorization.fluent.models.GroupsGetAvailableExtensionPropertiesRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAvailableExtensionPropertiesWithResponse(GroupsGetAvailableExtensionPropertiesRequestBody body, Context context)"
  name: "getAvailableExtensionPropertiesWithResponse(GroupsGetAvailableExtensionPropertiesRequestBody body, Context context)"
  nameWithType: "GroupsClient.getAvailableExtensionPropertiesWithResponse(GroupsGetAvailableExtensionPropertiesRequestBody body, Context context)"
  summary: "Invoke action get<wbr>Available<wbr>Extension<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetAvailableExtensionPropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetAvailableExtensionPropertiesRequestBody&text=GroupsGetAvailableExtensionPropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<MicrosoftGraphExtensionPropertyInner>> getAvailableExtensionPropertiesWithResponse(GroupsGetAvailableExtensionPropertiesRequestBody body, Context context)"
  desc: "Invoke action getAvailableExtensionProperties."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner&text=MicrosoftGraphExtensionPropertyInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAvailableExtensionPropertiesWithResponseAsync(com.azure.resourcemanager.authorization.fluent.models.GroupsGetAvailableExtensionPropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getAvailableExtensionPropertiesWithResponseAsync(GroupsGetAvailableExtensionPropertiesRequestBody body)"
  name: "getAvailableExtensionPropertiesWithResponseAsync(GroupsGetAvailableExtensionPropertiesRequestBody body)"
  nameWithType: "GroupsClient.getAvailableExtensionPropertiesWithResponseAsync(GroupsGetAvailableExtensionPropertiesRequestBody body)"
  summary: "Invoke action get<wbr>Available<wbr>Extension<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetAvailableExtensionPropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetAvailableExtensionPropertiesRequestBody&text=GroupsGetAvailableExtensionPropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<MicrosoftGraphExtensionPropertyInner>>> getAvailableExtensionPropertiesWithResponseAsync(GroupsGetAvailableExtensionPropertiesRequestBody body)"
  desc: "Invoke action getAvailableExtensionProperties."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner&text=MicrosoftGraphExtensionPropertyInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getByIds(com.azure.resourcemanager.authorization.fluent.models.GroupsGetByIdsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getByIds(GroupsGetByIdsRequestBody body)"
  name: "getByIds(GroupsGetByIdsRequestBody body)"
  nameWithType: "GroupsClient.getByIds(GroupsGetByIdsRequestBody body)"
  summary: "Invoke action get<wbr>ByIds."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetByIdsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetByIdsRequestBody&text=GroupsGetByIdsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<MicrosoftGraphDirectoryObjectInner> getByIds(GroupsGetByIdsRequestBody body)"
  desc: "Invoke action getByIds."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getByIdsAsync(com.azure.resourcemanager.authorization.fluent.models.GroupsGetByIdsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getByIdsAsync(GroupsGetByIdsRequestBody body)"
  name: "getByIdsAsync(GroupsGetByIdsRequestBody body)"
  nameWithType: "GroupsClient.getByIdsAsync(GroupsGetByIdsRequestBody body)"
  summary: "Invoke action get<wbr>ByIds."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetByIdsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetByIdsRequestBody&text=GroupsGetByIdsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<MicrosoftGraphDirectoryObjectInner>> getByIdsAsync(GroupsGetByIdsRequestBody body)"
  desc: "Invoke action getByIds."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getByIdsWithResponse(com.azure.resourcemanager.authorization.fluent.models.GroupsGetByIdsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getByIdsWithResponse(GroupsGetByIdsRequestBody body, Context context)"
  name: "getByIdsWithResponse(GroupsGetByIdsRequestBody body, Context context)"
  nameWithType: "GroupsClient.getByIdsWithResponse(GroupsGetByIdsRequestBody body, Context context)"
  summary: "Invoke action get<wbr>ByIds."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetByIdsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetByIdsRequestBody&text=GroupsGetByIdsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<MicrosoftGraphDirectoryObjectInner>> getByIdsWithResponse(GroupsGetByIdsRequestBody body, Context context)"
  desc: "Invoke action getByIds."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getByIdsWithResponseAsync(com.azure.resourcemanager.authorization.fluent.models.GroupsGetByIdsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getByIdsWithResponseAsync(GroupsGetByIdsRequestBody body)"
  name: "getByIdsWithResponseAsync(GroupsGetByIdsRequestBody body)"
  nameWithType: "GroupsClient.getByIdsWithResponseAsync(GroupsGetByIdsRequestBody body)"
  summary: "Invoke action get<wbr>ByIds."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetByIdsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetByIdsRequestBody&text=GroupsGetByIdsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<MicrosoftGraphDirectoryObjectInner>>> getByIdsWithResponseAsync(GroupsGetByIdsRequestBody body)"
  desc: "Invoke action getByIds."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getCreatedOnBehalfOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getCreatedOnBehalfOf(String groupId)"
  name: "getCreatedOnBehalfOf(String groupId)"
  nameWithType: "GroupsClient.getCreatedOnBehalfOf(String groupId)"
  summary: "Get created<wbr>OnBehalf<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphDirectoryObjectInner getCreatedOnBehalfOf(String groupId)"
  desc: "Get createdOnBehalfOf from groups."
  returns:
    description: "createdOnBehalfOf from groups."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getCreatedOnBehalfOfAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getCreatedOnBehalfOfAsync(String groupId)"
  name: "getCreatedOnBehalfOfAsync(String groupId)"
  nameWithType: "GroupsClient.getCreatedOnBehalfOfAsync(String groupId)"
  summary: "Get created<wbr>OnBehalf<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphDirectoryObjectInner> getCreatedOnBehalfOfAsync(String groupId)"
  desc: "Get createdOnBehalfOf from groups."
  returns:
    description: "createdOnBehalfOf from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getCreatedOnBehalfOfAsync(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getCreatedOnBehalfOfAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  name: "getCreatedOnBehalfOfAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getCreatedOnBehalfOfAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get created<wbr>OnBehalf<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphDirectoryObjectInner> getCreatedOnBehalfOfAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get createdOnBehalfOf from groups."
  returns:
    description: "createdOnBehalfOf from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getCreatedOnBehalfOfWithResponse(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getCreatedOnBehalfOfWithResponse(String groupId, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "getCreatedOnBehalfOfWithResponse(String groupId, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.getCreatedOnBehalfOfWithResponse(String groupId, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get created<wbr>OnBehalf<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphDirectoryObjectInner> getCreatedOnBehalfOfWithResponse(String groupId, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get createdOnBehalfOf from groups."
  returns:
    description: "createdOnBehalfOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getCreatedOnBehalfOfWithResponseAsync(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getCreatedOnBehalfOfWithResponseAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  name: "getCreatedOnBehalfOfWithResponseAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getCreatedOnBehalfOfWithResponseAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get created<wbr>OnBehalf<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphDirectoryObjectInner>> getCreatedOnBehalfOfWithResponseAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get createdOnBehalfOf from groups."
  returns:
    description: "createdOnBehalfOf from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getExtensions(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getExtensions(String groupId, String extensionId)"
  name: "getExtensions(String groupId, String extensionId)"
  nameWithType: "GroupsClient.getExtensions(String groupId, String extensionId)"
  summary: "Get extensions from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphExtensionInner getExtensions(String groupId, String extensionId)"
  desc: "Get extensions from groups."
  returns:
    description: "extensions from groups."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getExtensionsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getExtensionsAsync(String groupId, String extensionId)"
  name: "getExtensionsAsync(String groupId, String extensionId)"
  nameWithType: "GroupsClient.getExtensionsAsync(String groupId, String extensionId)"
  summary: "Get extensions from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphExtensionInner> getExtensionsAsync(String groupId, String extensionId)"
  desc: "Get extensions from groups."
  returns:
    description: "extensions from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getExtensionsAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getExtensionsAsync(String groupId, String extensionId, List<String> select, List<String> expand)"
  name: "getExtensionsAsync(String groupId, String extensionId, List<String> select, List<String> expand)"
  nameWithType: "GroupsClient.getExtensionsAsync(String groupId, String extensionId, List<String> select, List<String> expand)"
  summary: "Get extensions from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphExtensionInner> getExtensionsAsync(String groupId, String extensionId, List<String> select, List<String> expand)"
  desc: "Get extensions from groups."
  returns:
    description: "extensions from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getExtensionsWithResponse(java.lang.String,java.lang.String,java.util.List<java.lang.String>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getExtensionsWithResponse(String groupId, String extensionId, List<String> select, List<String> expand, Context context)"
  name: "getExtensionsWithResponse(String groupId, String extensionId, List<String> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.getExtensionsWithResponse(String groupId, String extensionId, List<String> select, List<String> expand, Context context)"
  summary: "Get extensions from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphExtensionInner> getExtensionsWithResponse(String groupId, String extensionId, List<String> select, List<String> expand, Context context)"
  desc: "Get extensions from groups."
  returns:
    description: "extensions from groups."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getExtensionsWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getExtensionsWithResponseAsync(String groupId, String extensionId, List<String> select, List<String> expand)"
  name: "getExtensionsWithResponseAsync(String groupId, String extensionId, List<String> select, List<String> expand)"
  nameWithType: "GroupsClient.getExtensionsWithResponseAsync(String groupId, String extensionId, List<String> select, List<String> expand)"
  summary: "Get extensions from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphExtensionInner>> getExtensionsWithResponseAsync(String groupId, String extensionId, List<String> select, List<String> expand)"
  desc: "Get extensions from groups."
  returns:
    description: "extensions from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroups(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroups(String groupId, GroupsGetMemberGroupsRequestBody body)"
  name: "getMemberGroups(String groupId, GroupsGetMemberGroupsRequestBody body)"
  nameWithType: "GroupsClient.getMemberGroups(String groupId, GroupsGetMemberGroupsRequestBody body)"
  summary: "Invoke action get<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberGroupsRequestBody&text=GroupsGetMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<String> getMemberGroups(String groupId, GroupsGetMemberGroupsRequestBody body)"
  desc: "Invoke action getMemberGroups."
  returns:
    description: "array of String."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroupsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroupsAsync(String groupId, GroupsGetMemberGroupsRequestBody body)"
  name: "getMemberGroupsAsync(String groupId, GroupsGetMemberGroupsRequestBody body)"
  nameWithType: "GroupsClient.getMemberGroupsAsync(String groupId, GroupsGetMemberGroupsRequestBody body)"
  summary: "Invoke action get<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberGroupsRequestBody&text=GroupsGetMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<String>> getMemberGroupsAsync(String groupId, GroupsGetMemberGroupsRequestBody body)"
  desc: "Invoke action getMemberGroups."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroupsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberGroupsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroupsWithResponse(String groupId, GroupsGetMemberGroupsRequestBody body, Context context)"
  name: "getMemberGroupsWithResponse(String groupId, GroupsGetMemberGroupsRequestBody body, Context context)"
  nameWithType: "GroupsClient.getMemberGroupsWithResponse(String groupId, GroupsGetMemberGroupsRequestBody body, Context context)"
  summary: "Invoke action get<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberGroupsRequestBody&text=GroupsGetMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<String>> getMemberGroupsWithResponse(String groupId, GroupsGetMemberGroupsRequestBody body, Context context)"
  desc: "Invoke action getMemberGroups."
  returns:
    description: "array of String."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroupsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberGroupsWithResponseAsync(String groupId, GroupsGetMemberGroupsRequestBody body)"
  name: "getMemberGroupsWithResponseAsync(String groupId, GroupsGetMemberGroupsRequestBody body)"
  nameWithType: "GroupsClient.getMemberGroupsWithResponseAsync(String groupId, GroupsGetMemberGroupsRequestBody body)"
  summary: "Invoke action get<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberGroupsRequestBody&text=GroupsGetMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<String>>> getMemberGroupsWithResponseAsync(String groupId, GroupsGetMemberGroupsRequestBody body)"
  desc: "Invoke action getMemberGroups."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberObjects(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberObjects(String groupId, GroupsGetMemberObjectsRequestBody body)"
  name: "getMemberObjects(String groupId, GroupsGetMemberObjectsRequestBody body)"
  nameWithType: "GroupsClient.getMemberObjects(String groupId, GroupsGetMemberObjectsRequestBody body)"
  summary: "Invoke action get<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberObjectsRequestBody&text=GroupsGetMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<String> getMemberObjects(String groupId, GroupsGetMemberObjectsRequestBody body)"
  desc: "Invoke action getMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberObjectsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberObjectsAsync(String groupId, GroupsGetMemberObjectsRequestBody body)"
  name: "getMemberObjectsAsync(String groupId, GroupsGetMemberObjectsRequestBody body)"
  nameWithType: "GroupsClient.getMemberObjectsAsync(String groupId, GroupsGetMemberObjectsRequestBody body)"
  summary: "Invoke action get<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberObjectsRequestBody&text=GroupsGetMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<String>> getMemberObjectsAsync(String groupId, GroupsGetMemberObjectsRequestBody body)"
  desc: "Invoke action getMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberObjectsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberObjectsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberObjectsWithResponse(String groupId, GroupsGetMemberObjectsRequestBody body, Context context)"
  name: "getMemberObjectsWithResponse(String groupId, GroupsGetMemberObjectsRequestBody body, Context context)"
  nameWithType: "GroupsClient.getMemberObjectsWithResponse(String groupId, GroupsGetMemberObjectsRequestBody body, Context context)"
  summary: "Invoke action get<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberObjectsRequestBody&text=GroupsGetMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<String>> getMemberObjectsWithResponse(String groupId, GroupsGetMemberObjectsRequestBody body, Context context)"
  desc: "Invoke action getMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberObjectsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getMemberObjectsWithResponseAsync(String groupId, GroupsGetMemberObjectsRequestBody body)"
  name: "getMemberObjectsWithResponseAsync(String groupId, GroupsGetMemberObjectsRequestBody body)"
  nameWithType: "GroupsClient.getMemberObjectsWithResponseAsync(String groupId, GroupsGetMemberObjectsRequestBody body)"
  summary: "Invoke action get<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsGetMemberObjectsRequestBody&text=GroupsGetMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<String>>> getMemberObjectsWithResponseAsync(String groupId, GroupsGetMemberObjectsRequestBody body)"
  desc: "Invoke action getMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPermissionGrants(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPermissionGrants(String groupId, String resourceSpecificPermissionGrantId)"
  name: "getPermissionGrants(String groupId, String resourceSpecificPermissionGrantId)"
  nameWithType: "GroupsClient.getPermissionGrants(String groupId, String resourceSpecificPermissionGrantId)"
  summary: "Get permission<wbr>Grants from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphResourceSpecificPermissionGrantInner getPermissionGrants(String groupId, String resourceSpecificPermissionGrantId)"
  desc: "Get permissionGrants from groups."
  returns:
    description: "permissionGrants from groups."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPermissionGrantsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId)"
  name: "getPermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId)"
  nameWithType: "GroupsClient.getPermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId)"
  summary: "Get permission<wbr>Grants from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphResourceSpecificPermissionGrantInner> getPermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId)"
  desc: "Get permissionGrants from groups."
  returns:
    description: "permissionGrants from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPermissionGrantsAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId, List<GroupsSelect> select, List<String> expand)"
  name: "getPermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getPermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get permission<wbr>Grants from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphResourceSpecificPermissionGrantInner> getPermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get permissionGrants from groups."
  returns:
    description: "permissionGrants from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPermissionGrantsWithResponse(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPermissionGrantsWithResponse(String groupId, String resourceSpecificPermissionGrantId, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "getPermissionGrantsWithResponse(String groupId, String resourceSpecificPermissionGrantId, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.getPermissionGrantsWithResponse(String groupId, String resourceSpecificPermissionGrantId, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get permission<wbr>Grants from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphResourceSpecificPermissionGrantInner> getPermissionGrantsWithResponse(String groupId, String resourceSpecificPermissionGrantId, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get permissionGrants from groups."
  returns:
    description: "permissionGrants from groups."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPermissionGrantsWithResponseAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPermissionGrantsWithResponseAsync(String groupId, String resourceSpecificPermissionGrantId, List<GroupsSelect> select, List<String> expand)"
  name: "getPermissionGrantsWithResponseAsync(String groupId, String resourceSpecificPermissionGrantId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getPermissionGrantsWithResponseAsync(String groupId, String resourceSpecificPermissionGrantId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get permission<wbr>Grants from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphResourceSpecificPermissionGrantInner>> getPermissionGrantsWithResponseAsync(String groupId, String resourceSpecificPermissionGrantId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get permissionGrants from groups."
  returns:
    description: "permissionGrants from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhoto(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhoto(String groupId)"
  name: "getPhoto(String groupId)"
  nameWithType: "GroupsClient.getPhoto(String groupId)"
  summary: "Get photo from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphProfilePhotoInner getPhoto(String groupId)"
  desc: "Get photo from groups."
  returns:
    description: "photo from groups."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoAsync(String groupId)"
  name: "getPhotoAsync(String groupId)"
  nameWithType: "GroupsClient.getPhotoAsync(String groupId)"
  summary: "Get photo from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphProfilePhotoInner> getPhotoAsync(String groupId)"
  desc: "Get photo from groups."
  returns:
    description: "photo from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoAsync(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  name: "getPhotoAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getPhotoAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get photo from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphProfilePhotoInner> getPhotoAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get photo from groups."
  returns:
    description: "photo from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoContent(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoContent(String groupId)"
  name: "getPhotoContent(String groupId)"
  nameWithType: "GroupsClient.getPhotoContent(String groupId)"
  summary: "Get media content for the navigation property photo from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract InputStream getPhotoContent(String groupId)"
  desc: "Get media content for the navigation property photo from groups."
  returns:
    description: "media content for the navigation property photo from groups."
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoContentAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoContentAsync(String groupId)"
  name: "getPhotoContentAsync(String groupId)"
  nameWithType: "GroupsClient.getPhotoContentAsync(String groupId)"
  summary: "Get media content for the navigation property photo from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Flux<ByteBuffer> getPhotoContentAsync(String groupId)"
  desc: "Get media content for the navigation property photo from groups."
  returns:
    description: "media content for the navigation property photo from groups."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoContentWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoContentWithResponse(String groupId, Context context)"
  name: "getPhotoContentWithResponse(String groupId, Context context)"
  nameWithType: "GroupsClient.getPhotoContentWithResponse(String groupId, Context context)"
  summary: "Get media content for the navigation property photo from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract StreamResponse getPhotoContentWithResponse(String groupId, Context context)"
  desc: "Get media content for the navigation property photo from groups."
  returns:
    description: "media content for the navigation property photo from groups."
    type: "<xref href=\"com.azure.core.http.rest.StreamResponse?alt=com.azure.core.http.rest.StreamResponse&text=StreamResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoContentWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoContentWithResponseAsync(String groupId)"
  name: "getPhotoContentWithResponseAsync(String groupId)"
  nameWithType: "GroupsClient.getPhotoContentWithResponseAsync(String groupId)"
  summary: "Get media content for the navigation property photo from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<StreamResponse> getPhotoContentWithResponseAsync(String groupId)"
  desc: "Get media content for the navigation property photo from groups."
  returns:
    description: "media content for the navigation property photo from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.StreamResponse?alt=com.azure.core.http.rest.StreamResponse&text=StreamResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoWithResponse(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoWithResponse(String groupId, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "getPhotoWithResponse(String groupId, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.getPhotoWithResponse(String groupId, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get photo from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphProfilePhotoInner> getPhotoWithResponse(String groupId, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get photo from groups."
  returns:
    description: "photo from groups."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoWithResponseAsync(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotoWithResponseAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  name: "getPhotoWithResponseAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getPhotoWithResponseAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get photo from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphProfilePhotoInner>> getPhotoWithResponseAsync(String groupId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get photo from groups."
  returns:
    description: "photo from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotos(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotos(String groupId, String profilePhotoId)"
  name: "getPhotos(String groupId, String profilePhotoId)"
  nameWithType: "GroupsClient.getPhotos(String groupId, String profilePhotoId)"
  summary: "Get photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphProfilePhotoInner getPhotos(String groupId, String profilePhotoId)"
  desc: "Get photos from groups."
  returns:
    description: "photos from groups."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosAsync(String groupId, String profilePhotoId)"
  name: "getPhotosAsync(String groupId, String profilePhotoId)"
  nameWithType: "GroupsClient.getPhotosAsync(String groupId, String profilePhotoId)"
  summary: "Get photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphProfilePhotoInner> getPhotosAsync(String groupId, String profilePhotoId)"
  desc: "Get photos from groups."
  returns:
    description: "photos from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosAsync(String groupId, String profilePhotoId, List<GroupsSelect> select, List<String> expand)"
  name: "getPhotosAsync(String groupId, String profilePhotoId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getPhotosAsync(String groupId, String profilePhotoId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphProfilePhotoInner> getPhotosAsync(String groupId, String profilePhotoId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get photos from groups."
  returns:
    description: "photos from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosContent(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosContent(String groupId, String profilePhotoId)"
  name: "getPhotosContent(String groupId, String profilePhotoId)"
  nameWithType: "GroupsClient.getPhotosContent(String groupId, String profilePhotoId)"
  summary: "Get media content for the navigation property photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract InputStream getPhotosContent(String groupId, String profilePhotoId)"
  desc: "Get media content for the navigation property photos from groups."
  returns:
    description: "media content for the navigation property photos from groups."
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosContentAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosContentAsync(String groupId, String profilePhotoId)"
  name: "getPhotosContentAsync(String groupId, String profilePhotoId)"
  nameWithType: "GroupsClient.getPhotosContentAsync(String groupId, String profilePhotoId)"
  summary: "Get media content for the navigation property photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Flux<ByteBuffer> getPhotosContentAsync(String groupId, String profilePhotoId)"
  desc: "Get media content for the navigation property photos from groups."
  returns:
    description: "media content for the navigation property photos from groups."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosContentWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosContentWithResponse(String groupId, String profilePhotoId, Context context)"
  name: "getPhotosContentWithResponse(String groupId, String profilePhotoId, Context context)"
  nameWithType: "GroupsClient.getPhotosContentWithResponse(String groupId, String profilePhotoId, Context context)"
  summary: "Get media content for the navigation property photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract StreamResponse getPhotosContentWithResponse(String groupId, String profilePhotoId, Context context)"
  desc: "Get media content for the navigation property photos from groups."
  returns:
    description: "media content for the navigation property photos from groups."
    type: "<xref href=\"com.azure.core.http.rest.StreamResponse?alt=com.azure.core.http.rest.StreamResponse&text=StreamResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosContentWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosContentWithResponseAsync(String groupId, String profilePhotoId)"
  name: "getPhotosContentWithResponseAsync(String groupId, String profilePhotoId)"
  nameWithType: "GroupsClient.getPhotosContentWithResponseAsync(String groupId, String profilePhotoId)"
  summary: "Get media content for the navigation property photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<StreamResponse> getPhotosContentWithResponseAsync(String groupId, String profilePhotoId)"
  desc: "Get media content for the navigation property photos from groups."
  returns:
    description: "media content for the navigation property photos from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.StreamResponse?alt=com.azure.core.http.rest.StreamResponse&text=StreamResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosWithResponse(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosWithResponse(String groupId, String profilePhotoId, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "getPhotosWithResponse(String groupId, String profilePhotoId, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.getPhotosWithResponse(String groupId, String profilePhotoId, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphProfilePhotoInner> getPhotosWithResponse(String groupId, String profilePhotoId, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get photos from groups."
  returns:
    description: "photos from groups."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosWithResponseAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getPhotosWithResponseAsync(String groupId, String profilePhotoId, List<GroupsSelect> select, List<String> expand)"
  name: "getPhotosWithResponseAsync(String groupId, String profilePhotoId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getPhotosWithResponseAsync(String groupId, String profilePhotoId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphProfilePhotoInner>> getPhotosWithResponseAsync(String groupId, String profilePhotoId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get photos from groups."
  returns:
    description: "photos from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRefCreatedOnBehalfOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRefCreatedOnBehalfOf(String groupId)"
  name: "getRefCreatedOnBehalfOf(String groupId)"
  nameWithType: "GroupsClient.getRefCreatedOnBehalfOf(String groupId)"
  summary: "Get ref of created<wbr>OnBehalf<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract String getRefCreatedOnBehalfOf(String groupId)"
  desc: "Get ref of createdOnBehalfOf from groups."
  returns:
    description: "ref of createdOnBehalfOf from groups."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRefCreatedOnBehalfOfAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRefCreatedOnBehalfOfAsync(String groupId)"
  name: "getRefCreatedOnBehalfOfAsync(String groupId)"
  nameWithType: "GroupsClient.getRefCreatedOnBehalfOfAsync(String groupId)"
  summary: "Get ref of created<wbr>OnBehalf<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<String> getRefCreatedOnBehalfOfAsync(String groupId)"
  desc: "Get ref of createdOnBehalfOf from groups."
  returns:
    description: "ref of createdOnBehalfOf from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRefCreatedOnBehalfOfWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRefCreatedOnBehalfOfWithResponse(String groupId, Context context)"
  name: "getRefCreatedOnBehalfOfWithResponse(String groupId, Context context)"
  nameWithType: "GroupsClient.getRefCreatedOnBehalfOfWithResponse(String groupId, Context context)"
  summary: "Get ref of created<wbr>OnBehalf<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<String> getRefCreatedOnBehalfOfWithResponse(String groupId, Context context)"
  desc: "Get ref of createdOnBehalfOf from groups."
  returns:
    description: "ref of createdOnBehalfOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRefCreatedOnBehalfOfWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRefCreatedOnBehalfOfWithResponseAsync(String groupId)"
  name: "getRefCreatedOnBehalfOfWithResponseAsync(String groupId)"
  nameWithType: "GroupsClient.getRefCreatedOnBehalfOfWithResponseAsync(String groupId)"
  summary: "Get ref of created<wbr>OnBehalf<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<String>> getRefCreatedOnBehalfOfWithResponseAsync(String groupId)"
  desc: "Get ref of createdOnBehalfOf from groups."
  returns:
    description: "ref of createdOnBehalfOf from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRejectedSenders(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRejectedSenders(String groupId, String directoryObjectId)"
  name: "getRejectedSenders(String groupId, String directoryObjectId)"
  nameWithType: "GroupsClient.getRejectedSenders(String groupId, String directoryObjectId)"
  summary: "Get rejected<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphDirectoryObjectInner getRejectedSenders(String groupId, String directoryObjectId)"
  desc: "Get rejectedSenders from groups."
  returns:
    description: "rejectedSenders from groups."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRejectedSendersAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRejectedSendersAsync(String groupId, String directoryObjectId)"
  name: "getRejectedSendersAsync(String groupId, String directoryObjectId)"
  nameWithType: "GroupsClient.getRejectedSendersAsync(String groupId, String directoryObjectId)"
  summary: "Get rejected<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphDirectoryObjectInner> getRejectedSendersAsync(String groupId, String directoryObjectId)"
  desc: "Get rejectedSenders from groups."
  returns:
    description: "rejectedSenders from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRejectedSendersAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRejectedSendersAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  name: "getRejectedSendersAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getRejectedSendersAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get rejected<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphDirectoryObjectInner> getRejectedSendersAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get rejectedSenders from groups."
  returns:
    description: "rejectedSenders from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRejectedSendersWithResponse(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRejectedSendersWithResponse(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "getRejectedSendersWithResponse(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.getRejectedSendersWithResponse(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get rejected<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphDirectoryObjectInner> getRejectedSendersWithResponse(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get rejectedSenders from groups."
  returns:
    description: "rejectedSenders from groups."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRejectedSendersWithResponseAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.getRejectedSendersWithResponseAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  name: "getRejectedSendersWithResponseAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.getRejectedSendersWithResponseAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  summary: "Get rejected<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphDirectoryObjectInner>> getRejectedSendersWithResponseAsync(String groupId, String directoryObjectId, List<GroupsSelect> select, List<String> expand)"
  desc: "Get rejectedSenders from groups."
  returns:
    description: "rejectedSenders from groups."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAcceptedSenders(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAcceptedSenders(String groupId)"
  name: "listAcceptedSenders(String groupId)"
  nameWithType: "GroupsClient.listAcceptedSenders(String groupId)"
  summary: "Get accepted<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listAcceptedSenders(String groupId)"
  desc: "Get acceptedSenders from groups."
  returns:
    description: "acceptedSenders from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAcceptedSenders(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAcceptedSenders(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "listAcceptedSenders(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.listAcceptedSenders(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get accepted<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listAcceptedSenders(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get acceptedSenders from groups."
  returns:
    description: "acceptedSenders from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAcceptedSendersAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAcceptedSendersAsync(String groupId)"
  name: "listAcceptedSendersAsync(String groupId)"
  nameWithType: "GroupsClient.listAcceptedSendersAsync(String groupId)"
  summary: "Get accepted<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listAcceptedSendersAsync(String groupId)"
  desc: "Get acceptedSenders from groups."
  returns:
    description: "acceptedSenders from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAcceptedSendersAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAcceptedSendersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  name: "listAcceptedSendersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.listAcceptedSendersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  summary: "Get accepted<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listAcceptedSendersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  desc: "Get acceptedSenders from groups."
  returns:
    description: "acceptedSenders from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAppRoleAssignments(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAppRoleAssignments(String groupId)"
  name: "listAppRoleAssignments(String groupId)"
  nameWithType: "GroupsClient.listAppRoleAssignments(String groupId)"
  summary: "Get app<wbr>Role<wbr>Assignments from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphAppRoleAssignmentInner> listAppRoleAssignments(String groupId)"
  desc: "Get appRoleAssignments from groups."
  returns:
    description: "appRoleAssignments from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAppRoleAssignments(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAppRoleAssignments(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "listAppRoleAssignments(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.listAppRoleAssignments(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get app<wbr>Role<wbr>Assignments from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphAppRoleAssignmentInner> listAppRoleAssignments(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get appRoleAssignments from groups."
  returns:
    description: "appRoleAssignments from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAppRoleAssignmentsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAppRoleAssignmentsAsync(String groupId)"
  name: "listAppRoleAssignmentsAsync(String groupId)"
  nameWithType: "GroupsClient.listAppRoleAssignmentsAsync(String groupId)"
  summary: "Get app<wbr>Role<wbr>Assignments from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphAppRoleAssignmentInner> listAppRoleAssignmentsAsync(String groupId)"
  desc: "Get appRoleAssignments from groups."
  returns:
    description: "appRoleAssignments from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAppRoleAssignmentsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listAppRoleAssignmentsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  name: "listAppRoleAssignmentsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.listAppRoleAssignmentsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  summary: "Get app<wbr>Role<wbr>Assignments from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphAppRoleAssignmentInner> listAppRoleAssignmentsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  desc: "Get appRoleAssignments from groups."
  returns:
    description: "appRoleAssignments from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listExtensions(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listExtensions(String groupId)"
  name: "listExtensions(String groupId)"
  nameWithType: "GroupsClient.listExtensions(String groupId)"
  summary: "Get extensions from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphExtensionInner> listExtensions(String groupId)"
  desc: "Get extensions from groups."
  returns:
    description: "extensions from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listExtensions(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<java.lang.String>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listExtensions(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<String> select, List<String> expand, Context context)"
  name: "listExtensions(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<String> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.listExtensions(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<String> select, List<String> expand, Context context)"
  summary: "Get extensions from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphExtensionInner> listExtensions(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<String> select, List<String> expand, Context context)"
  desc: "Get extensions from groups."
  returns:
    description: "extensions from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listExtensionsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listExtensionsAsync(String groupId)"
  name: "listExtensionsAsync(String groupId)"
  nameWithType: "GroupsClient.listExtensionsAsync(String groupId)"
  summary: "Get extensions from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphExtensionInner> listExtensionsAsync(String groupId)"
  desc: "Get extensions from groups."
  returns:
    description: "extensions from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listExtensionsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<java.lang.String>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listExtensionsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<String> select, List<String> expand)"
  name: "listExtensionsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<String> select, List<String> expand)"
  nameWithType: "GroupsClient.listExtensionsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<String> select, List<String> expand)"
  summary: "Get extensions from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphExtensionInner> listExtensionsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<String> select, List<String> expand)"
  desc: "Get extensions from groups."
  returns:
    description: "extensions from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMemberOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMemberOf(String groupId)"
  name: "listMemberOf(String groupId)"
  nameWithType: "GroupsClient.listMemberOf(String groupId)"
  summary: "Get member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listMemberOf(String groupId)"
  desc: "Get memberOf from groups."
  returns:
    description: "memberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMemberOf(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "listMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.listMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get memberOf from groups."
  returns:
    description: "memberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMemberOfAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMemberOfAsync(String groupId)"
  name: "listMemberOfAsync(String groupId)"
  nameWithType: "GroupsClient.listMemberOfAsync(String groupId)"
  summary: "Get member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listMemberOfAsync(String groupId)"
  desc: "Get memberOf from groups."
  returns:
    description: "memberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMemberOfAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  name: "listMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.listMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  summary: "Get member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  desc: "Get memberOf from groups."
  returns:
    description: "memberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembers(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembers(String groupId)"
  name: "listMembers(String groupId)"
  nameWithType: "GroupsClient.listMembers(String groupId)"
  summary: "Get members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listMembers(String groupId)"
  desc: "Get members from groups."
  returns:
    description: "members from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembers(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "listMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.listMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get members from groups."
  returns:
    description: "members from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembersAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembersAsync(String groupId)"
  name: "listMembersAsync(String groupId)"
  nameWithType: "GroupsClient.listMembersAsync(String groupId)"
  summary: "Get members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listMembersAsync(String groupId)"
  desc: "Get members from groups."
  returns:
    description: "members from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembersAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  name: "listMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.listMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  summary: "Get members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  desc: "Get members from groups."
  returns:
    description: "members from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembersWithLicenseErrors(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembersWithLicenseErrors(String groupId)"
  name: "listMembersWithLicenseErrors(String groupId)"
  nameWithType: "GroupsClient.listMembersWithLicenseErrors(String groupId)"
  summary: "Get members<wbr>With<wbr>License<wbr>Errors from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listMembersWithLicenseErrors(String groupId)"
  desc: "Get membersWithLicenseErrors from groups."
  returns:
    description: "membersWithLicenseErrors from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembersWithLicenseErrors(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembersWithLicenseErrors(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "listMembersWithLicenseErrors(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.listMembersWithLicenseErrors(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get members<wbr>With<wbr>License<wbr>Errors from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listMembersWithLicenseErrors(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get membersWithLicenseErrors from groups."
  returns:
    description: "membersWithLicenseErrors from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembersWithLicenseErrorsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembersWithLicenseErrorsAsync(String groupId)"
  name: "listMembersWithLicenseErrorsAsync(String groupId)"
  nameWithType: "GroupsClient.listMembersWithLicenseErrorsAsync(String groupId)"
  summary: "Get members<wbr>With<wbr>License<wbr>Errors from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listMembersWithLicenseErrorsAsync(String groupId)"
  desc: "Get membersWithLicenseErrors from groups."
  returns:
    description: "membersWithLicenseErrors from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembersWithLicenseErrorsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listMembersWithLicenseErrorsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  name: "listMembersWithLicenseErrorsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.listMembersWithLicenseErrorsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  summary: "Get members<wbr>With<wbr>License<wbr>Errors from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listMembersWithLicenseErrorsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  desc: "Get membersWithLicenseErrors from groups."
  returns:
    description: "membersWithLicenseErrors from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners(String groupId)"
  name: "listOwners(String groupId)"
  nameWithType: "GroupsClient.listOwners(String groupId)"
  summary: "Get owners from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listOwners(String groupId)"
  desc: "Get owners from groups."
  returns:
    description: "owners from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwners(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "listOwners(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.listOwners(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get owners from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listOwners(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get owners from groups."
  returns:
    description: "owners from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwnersAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwnersAsync(String groupId)"
  name: "listOwnersAsync(String groupId)"
  nameWithType: "GroupsClient.listOwnersAsync(String groupId)"
  summary: "Get owners from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listOwnersAsync(String groupId)"
  desc: "Get owners from groups."
  returns:
    description: "owners from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwnersAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listOwnersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  name: "listOwnersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.listOwnersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  summary: "Get owners from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listOwnersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  desc: "Get owners from groups."
  returns:
    description: "owners from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPermissionGrants(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPermissionGrants(String groupId)"
  name: "listPermissionGrants(String groupId)"
  nameWithType: "GroupsClient.listPermissionGrants(String groupId)"
  summary: "Get permission<wbr>Grants from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphResourceSpecificPermissionGrantInner> listPermissionGrants(String groupId)"
  desc: "Get permissionGrants from groups."
  returns:
    description: "permissionGrants from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPermissionGrants(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPermissionGrants(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "listPermissionGrants(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.listPermissionGrants(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get permission<wbr>Grants from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphResourceSpecificPermissionGrantInner> listPermissionGrants(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get permissionGrants from groups."
  returns:
    description: "permissionGrants from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPermissionGrantsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPermissionGrantsAsync(String groupId)"
  name: "listPermissionGrantsAsync(String groupId)"
  nameWithType: "GroupsClient.listPermissionGrantsAsync(String groupId)"
  summary: "Get permission<wbr>Grants from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphResourceSpecificPermissionGrantInner> listPermissionGrantsAsync(String groupId)"
  desc: "Get permissionGrants from groups."
  returns:
    description: "permissionGrants from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPermissionGrantsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPermissionGrantsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  name: "listPermissionGrantsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.listPermissionGrantsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  summary: "Get permission<wbr>Grants from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphResourceSpecificPermissionGrantInner> listPermissionGrantsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  desc: "Get permissionGrants from groups."
  returns:
    description: "permissionGrants from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPhotos(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPhotos(String groupId)"
  name: "listPhotos(String groupId)"
  nameWithType: "GroupsClient.listPhotos(String groupId)"
  summary: "Get photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphProfilePhotoInner> listPhotos(String groupId)"
  desc: "Get photos from groups."
  returns:
    description: "photos from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPhotos(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPhotos(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "listPhotos(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.listPhotos(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphProfilePhotoInner> listPhotos(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get photos from groups."
  returns:
    description: "photos from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPhotosAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPhotosAsync(String groupId)"
  name: "listPhotosAsync(String groupId)"
  nameWithType: "GroupsClient.listPhotosAsync(String groupId)"
  summary: "Get photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphProfilePhotoInner> listPhotosAsync(String groupId)"
  desc: "Get photos from groups."
  returns:
    description: "photos from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPhotosAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listPhotosAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  name: "listPhotosAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.listPhotosAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  summary: "Get photos from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphProfilePhotoInner> listPhotosAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  desc: "Get photos from groups."
  returns:
    description: "photos from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMemberOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMemberOf(String groupId)"
  name: "listRefMemberOf(String groupId)"
  nameWithType: "GroupsClient.listRefMemberOf(String groupId)"
  summary: "Get ref of member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefMemberOf(String groupId)"
  desc: "Get ref of memberOf from groups."
  returns:
    description: "ref of memberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMemberOf(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  name: "listRefMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  nameWithType: "GroupsClient.listRefMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  summary: "Get ref of member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  desc: "Get ref of memberOf from groups."
  returns:
    description: "ref of memberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMemberOfAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMemberOfAsync(String groupId)"
  name: "listRefMemberOfAsync(String groupId)"
  nameWithType: "GroupsClient.listRefMemberOfAsync(String groupId)"
  summary: "Get ref of member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefMemberOfAsync(String groupId)"
  desc: "Get ref of memberOf from groups."
  returns:
    description: "ref of memberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMemberOfAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  name: "listRefMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  nameWithType: "GroupsClient.listRefMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  summary: "Get ref of member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  desc: "Get ref of memberOf from groups."
  returns:
    description: "ref of memberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembers(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembers(String groupId)"
  name: "listRefMembers(String groupId)"
  nameWithType: "GroupsClient.listRefMembers(String groupId)"
  summary: "Get ref of members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefMembers(String groupId)"
  desc: "Get ref of members from groups."
  returns:
    description: "ref of members from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembers(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  name: "listRefMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  nameWithType: "GroupsClient.listRefMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  summary: "Get ref of members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  desc: "Get ref of members from groups."
  returns:
    description: "ref of members from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembersAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembersAsync(String groupId)"
  name: "listRefMembersAsync(String groupId)"
  nameWithType: "GroupsClient.listRefMembersAsync(String groupId)"
  summary: "Get ref of members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefMembersAsync(String groupId)"
  desc: "Get ref of members from groups."
  returns:
    description: "ref of members from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembersAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  name: "listRefMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  nameWithType: "GroupsClient.listRefMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  summary: "Get ref of members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  desc: "Get ref of members from groups."
  returns:
    description: "ref of members from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembersWithLicenseErrors(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembersWithLicenseErrors(String groupId)"
  name: "listRefMembersWithLicenseErrors(String groupId)"
  nameWithType: "GroupsClient.listRefMembersWithLicenseErrors(String groupId)"
  summary: "Get ref of members<wbr>With<wbr>License<wbr>Errors from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefMembersWithLicenseErrors(String groupId)"
  desc: "Get ref of membersWithLicenseErrors from groups."
  returns:
    description: "ref of membersWithLicenseErrors from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembersWithLicenseErrors(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembersWithLicenseErrors(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  name: "listRefMembersWithLicenseErrors(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  nameWithType: "GroupsClient.listRefMembersWithLicenseErrors(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  summary: "Get ref of members<wbr>With<wbr>License<wbr>Errors from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefMembersWithLicenseErrors(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  desc: "Get ref of membersWithLicenseErrors from groups."
  returns:
    description: "ref of membersWithLicenseErrors from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembersWithLicenseErrorsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembersWithLicenseErrorsAsync(String groupId)"
  name: "listRefMembersWithLicenseErrorsAsync(String groupId)"
  nameWithType: "GroupsClient.listRefMembersWithLicenseErrorsAsync(String groupId)"
  summary: "Get ref of members<wbr>With<wbr>License<wbr>Errors from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefMembersWithLicenseErrorsAsync(String groupId)"
  desc: "Get ref of membersWithLicenseErrors from groups."
  returns:
    description: "ref of membersWithLicenseErrors from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembersWithLicenseErrorsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefMembersWithLicenseErrorsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  name: "listRefMembersWithLicenseErrorsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  nameWithType: "GroupsClient.listRefMembersWithLicenseErrorsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  summary: "Get ref of members<wbr>With<wbr>License<wbr>Errors from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefMembersWithLicenseErrorsAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  desc: "Get ref of membersWithLicenseErrors from groups."
  returns:
    description: "ref of membersWithLicenseErrors from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefOwners(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefOwners(String groupId)"
  name: "listRefOwners(String groupId)"
  nameWithType: "GroupsClient.listRefOwners(String groupId)"
  summary: "Get ref of owners from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefOwners(String groupId)"
  desc: "Get ref of owners from groups."
  returns:
    description: "ref of owners from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefOwners(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefOwners(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  name: "listRefOwners(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  nameWithType: "GroupsClient.listRefOwners(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  summary: "Get ref of owners from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefOwners(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  desc: "Get ref of owners from groups."
  returns:
    description: "ref of owners from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefOwnersAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefOwnersAsync(String groupId)"
  name: "listRefOwnersAsync(String groupId)"
  nameWithType: "GroupsClient.listRefOwnersAsync(String groupId)"
  summary: "Get ref of owners from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefOwnersAsync(String groupId)"
  desc: "Get ref of owners from groups."
  returns:
    description: "ref of owners from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefOwnersAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefOwnersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  name: "listRefOwnersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  nameWithType: "GroupsClient.listRefOwnersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  summary: "Get ref of owners from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefOwnersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  desc: "Get ref of owners from groups."
  returns:
    description: "ref of owners from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMemberOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMemberOf(String groupId)"
  name: "listRefTransitiveMemberOf(String groupId)"
  nameWithType: "GroupsClient.listRefTransitiveMemberOf(String groupId)"
  summary: "Get ref of transitive<wbr>Member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefTransitiveMemberOf(String groupId)"
  desc: "Get ref of transitiveMemberOf from groups."
  returns:
    description: "ref of transitiveMemberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMemberOf(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  name: "listRefTransitiveMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  nameWithType: "GroupsClient.listRefTransitiveMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  summary: "Get ref of transitive<wbr>Member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefTransitiveMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  desc: "Get ref of transitiveMemberOf from groups."
  returns:
    description: "ref of transitiveMemberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMemberOfAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMemberOfAsync(String groupId)"
  name: "listRefTransitiveMemberOfAsync(String groupId)"
  nameWithType: "GroupsClient.listRefTransitiveMemberOfAsync(String groupId)"
  summary: "Get ref of transitive<wbr>Member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefTransitiveMemberOfAsync(String groupId)"
  desc: "Get ref of transitiveMemberOf from groups."
  returns:
    description: "ref of transitiveMemberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMemberOfAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  name: "listRefTransitiveMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  nameWithType: "GroupsClient.listRefTransitiveMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  summary: "Get ref of transitive<wbr>Member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefTransitiveMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  desc: "Get ref of transitiveMemberOf from groups."
  returns:
    description: "ref of transitiveMemberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMembers(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMembers(String groupId)"
  name: "listRefTransitiveMembers(String groupId)"
  nameWithType: "GroupsClient.listRefTransitiveMembers(String groupId)"
  summary: "Get ref of transitive<wbr>Members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefTransitiveMembers(String groupId)"
  desc: "Get ref of transitiveMembers from groups."
  returns:
    description: "ref of transitiveMembers from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMembers(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  name: "listRefTransitiveMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  nameWithType: "GroupsClient.listRefTransitiveMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  summary: "Get ref of transitive<wbr>Members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefTransitiveMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, Context context)"
  desc: "Get ref of transitiveMembers from groups."
  returns:
    description: "ref of transitiveMembers from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMembersAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMembersAsync(String groupId)"
  name: "listRefTransitiveMembersAsync(String groupId)"
  nameWithType: "GroupsClient.listRefTransitiveMembersAsync(String groupId)"
  summary: "Get ref of transitive<wbr>Members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefTransitiveMembersAsync(String groupId)"
  desc: "Get ref of transitiveMembers from groups."
  returns:
    description: "ref of transitiveMembers from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMembersAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRefTransitiveMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  name: "listRefTransitiveMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  nameWithType: "GroupsClient.listRefTransitiveMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  summary: "Get ref of transitive<wbr>Members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefTransitiveMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby)"
  desc: "Get ref of transitiveMembers from groups."
  returns:
    description: "ref of transitiveMembers from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRejectedSenders(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRejectedSenders(String groupId)"
  name: "listRejectedSenders(String groupId)"
  nameWithType: "GroupsClient.listRejectedSenders(String groupId)"
  summary: "Get rejected<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listRejectedSenders(String groupId)"
  desc: "Get rejectedSenders from groups."
  returns:
    description: "rejectedSenders from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRejectedSenders(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRejectedSenders(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "listRejectedSenders(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.listRejectedSenders(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get rejected<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listRejectedSenders(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get rejectedSenders from groups."
  returns:
    description: "rejectedSenders from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRejectedSendersAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRejectedSendersAsync(String groupId)"
  name: "listRejectedSendersAsync(String groupId)"
  nameWithType: "GroupsClient.listRejectedSendersAsync(String groupId)"
  summary: "Get rejected<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listRejectedSendersAsync(String groupId)"
  desc: "Get rejectedSenders from groups."
  returns:
    description: "rejectedSenders from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRejectedSendersAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listRejectedSendersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  name: "listRejectedSendersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.listRejectedSendersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  summary: "Get rejected<wbr>Senders from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listRejectedSendersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  desc: "Get rejectedSenders from groups."
  returns:
    description: "rejectedSenders from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMemberOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMemberOf(String groupId)"
  name: "listTransitiveMemberOf(String groupId)"
  nameWithType: "GroupsClient.listTransitiveMemberOf(String groupId)"
  summary: "Get transitive<wbr>Member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listTransitiveMemberOf(String groupId)"
  desc: "Get transitiveMemberOf from groups."
  returns:
    description: "transitiveMemberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMemberOf(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "listTransitiveMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.listTransitiveMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get transitive<wbr>Member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listTransitiveMemberOf(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get transitiveMemberOf from groups."
  returns:
    description: "transitiveMemberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMemberOfAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMemberOfAsync(String groupId)"
  name: "listTransitiveMemberOfAsync(String groupId)"
  nameWithType: "GroupsClient.listTransitiveMemberOfAsync(String groupId)"
  summary: "Get transitive<wbr>Member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listTransitiveMemberOfAsync(String groupId)"
  desc: "Get transitiveMemberOf from groups."
  returns:
    description: "transitiveMemberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMemberOfAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  name: "listTransitiveMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.listTransitiveMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  summary: "Get transitive<wbr>Member<wbr>Of from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listTransitiveMemberOfAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  desc: "Get transitiveMemberOf from groups."
  returns:
    description: "transitiveMemberOf from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMembers(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMembers(String groupId)"
  name: "listTransitiveMembers(String groupId)"
  nameWithType: "GroupsClient.listTransitiveMembers(String groupId)"
  summary: "Get transitive<wbr>Members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listTransitiveMembers(String groupId)"
  desc: "Get transitiveMembers from groups."
  returns:
    description: "transitiveMembers from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMembers(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  name: "listTransitiveMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  nameWithType: "GroupsClient.listTransitiveMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  summary: "Get transitive<wbr>Members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listTransitiveMembers(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand, Context context)"
  desc: "Get transitiveMembers from groups."
  returns:
    description: "transitiveMembers from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMembersAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMembersAsync(String groupId)"
  name: "listTransitiveMembersAsync(String groupId)"
  nameWithType: "GroupsClient.listTransitiveMembersAsync(String groupId)"
  summary: "Get transitive<wbr>Members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listTransitiveMembersAsync(String groupId)"
  desc: "Get transitiveMembers from groups."
  returns:
    description: "transitiveMembers from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMembersAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.GroupsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.listTransitiveMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  name: "listTransitiveMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  nameWithType: "GroupsClient.listTransitiveMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  summary: "Get transitive<wbr>Members from groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsOrderby&text=GroupsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsSelect&text=GroupsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listTransitiveMembersAsync(String groupId, Integer top, Integer skip, String search, String filter, Boolean count, List<GroupsOrderby> orderby, List<GroupsSelect> select, List<String> expand)"
  desc: "Get transitiveMembers from groups."
  returns:
    description: "transitiveMembers from groups."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.removeFavorite(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.removeFavorite(String groupId)"
  name: "removeFavorite(String groupId)"
  nameWithType: "GroupsClient.removeFavorite(String groupId)"
  summary: "Invoke action remove<wbr>Favorite."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void removeFavorite(String groupId)"
  desc: "Invoke action removeFavorite."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.removeFavoriteAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.removeFavoriteAsync(String groupId)"
  name: "removeFavoriteAsync(String groupId)"
  nameWithType: "GroupsClient.removeFavoriteAsync(String groupId)"
  summary: "Invoke action remove<wbr>Favorite."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> removeFavoriteAsync(String groupId)"
  desc: "Invoke action removeFavorite."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.removeFavoriteWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.removeFavoriteWithResponse(String groupId, Context context)"
  name: "removeFavoriteWithResponse(String groupId, Context context)"
  nameWithType: "GroupsClient.removeFavoriteWithResponse(String groupId, Context context)"
  summary: "Invoke action remove<wbr>Favorite."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> removeFavoriteWithResponse(String groupId, Context context)"
  desc: "Invoke action removeFavorite."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.removeFavoriteWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.removeFavoriteWithResponseAsync(String groupId)"
  name: "removeFavoriteWithResponseAsync(String groupId)"
  nameWithType: "GroupsClient.removeFavoriteWithResponseAsync(String groupId)"
  summary: "Invoke action remove<wbr>Favorite."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> removeFavoriteWithResponseAsync(String groupId)"
  desc: "Invoke action removeFavorite."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.renew(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.renew(String groupId)"
  name: "renew(String groupId)"
  nameWithType: "GroupsClient.renew(String groupId)"
  summary: "Invoke action renew."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void renew(String groupId)"
  desc: "Invoke action renew."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.renewAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.renewAsync(String groupId)"
  name: "renewAsync(String groupId)"
  nameWithType: "GroupsClient.renewAsync(String groupId)"
  summary: "Invoke action renew."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> renewAsync(String groupId)"
  desc: "Invoke action renew."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.renewWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.renewWithResponse(String groupId, Context context)"
  name: "renewWithResponse(String groupId, Context context)"
  nameWithType: "GroupsClient.renewWithResponse(String groupId, Context context)"
  summary: "Invoke action renew."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> renewWithResponse(String groupId, Context context)"
  desc: "Invoke action renew."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.renewWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.renewWithResponseAsync(String groupId)"
  name: "renewWithResponseAsync(String groupId)"
  nameWithType: "GroupsClient.renewWithResponseAsync(String groupId)"
  summary: "Invoke action renew."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> renewWithResponseAsync(String groupId)"
  desc: "Invoke action renew."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.resetUnseenCount(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.resetUnseenCount(String groupId)"
  name: "resetUnseenCount(String groupId)"
  nameWithType: "GroupsClient.resetUnseenCount(String groupId)"
  summary: "Invoke action reset<wbr>Unseen<wbr>Count."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void resetUnseenCount(String groupId)"
  desc: "Invoke action resetUnseenCount."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.resetUnseenCountAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.resetUnseenCountAsync(String groupId)"
  name: "resetUnseenCountAsync(String groupId)"
  nameWithType: "GroupsClient.resetUnseenCountAsync(String groupId)"
  summary: "Invoke action reset<wbr>Unseen<wbr>Count."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> resetUnseenCountAsync(String groupId)"
  desc: "Invoke action resetUnseenCount."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.resetUnseenCountWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.resetUnseenCountWithResponse(String groupId, Context context)"
  name: "resetUnseenCountWithResponse(String groupId, Context context)"
  nameWithType: "GroupsClient.resetUnseenCountWithResponse(String groupId, Context context)"
  summary: "Invoke action reset<wbr>Unseen<wbr>Count."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> resetUnseenCountWithResponse(String groupId, Context context)"
  desc: "Invoke action resetUnseenCount."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.resetUnseenCountWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.resetUnseenCountWithResponseAsync(String groupId)"
  name: "resetUnseenCountWithResponseAsync(String groupId)"
  nameWithType: "GroupsClient.resetUnseenCountWithResponseAsync(String groupId)"
  summary: "Invoke action reset<wbr>Unseen<wbr>Count."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> resetUnseenCountWithResponseAsync(String groupId)"
  desc: "Invoke action resetUnseenCount."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.restore(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.restore(String groupId)"
  name: "restore(String groupId)"
  nameWithType: "GroupsClient.restore(String groupId)"
  summary: "Invoke action restore."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphDirectoryObjectInner restore(String groupId)"
  desc: "Invoke action restore."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.restoreAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.restoreAsync(String groupId)"
  name: "restoreAsync(String groupId)"
  nameWithType: "GroupsClient.restoreAsync(String groupId)"
  summary: "Invoke action restore."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphDirectoryObjectInner> restoreAsync(String groupId)"
  desc: "Invoke action restore."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.restoreWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.restoreWithResponse(String groupId, Context context)"
  name: "restoreWithResponse(String groupId, Context context)"
  nameWithType: "GroupsClient.restoreWithResponse(String groupId, Context context)"
  summary: "Invoke action restore."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphDirectoryObjectInner> restoreWithResponse(String groupId, Context context)"
  desc: "Invoke action restore."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.restoreWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.restoreWithResponseAsync(String groupId)"
  name: "restoreWithResponseAsync(String groupId)"
  nameWithType: "GroupsClient.restoreWithResponseAsync(String groupId)"
  summary: "Invoke action restore."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphDirectoryObjectInner>> restoreWithResponseAsync(String groupId)"
  desc: "Invoke action restore."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotoContent(java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotoContent(String groupId, Flux<ByteBuffer> data, long contentLength)"
  name: "setPhotoContent(String groupId, Flux<ByteBuffer> data, long contentLength)"
  nameWithType: "GroupsClient.setPhotoContent(String groupId, Flux<ByteBuffer> data, long contentLength)"
  summary: "Update media content for the navigation property photo in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New media content."
    name: "data"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The contentLength parameter."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setPhotoContent(String groupId, Flux<ByteBuffer> data, long contentLength)"
  desc: "Update media content for the navigation property photo in groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotoContentAsync(java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotoContentAsync(String groupId, Flux<ByteBuffer> data, long contentLength)"
  name: "setPhotoContentAsync(String groupId, Flux<ByteBuffer> data, long contentLength)"
  nameWithType: "GroupsClient.setPhotoContentAsync(String groupId, Flux<ByteBuffer> data, long contentLength)"
  summary: "Update media content for the navigation property photo in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New media content."
    name: "data"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The contentLength parameter."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> setPhotoContentAsync(String groupId, Flux<ByteBuffer> data, long contentLength)"
  desc: "Update media content for the navigation property photo in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotoContentWithResponse(java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotoContentWithResponse(String groupId, Flux<ByteBuffer> data, long contentLength, Context context)"
  name: "setPhotoContentWithResponse(String groupId, Flux<ByteBuffer> data, long contentLength, Context context)"
  nameWithType: "GroupsClient.setPhotoContentWithResponse(String groupId, Flux<ByteBuffer> data, long contentLength, Context context)"
  summary: "Update media content for the navigation property photo in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New media content."
    name: "data"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The contentLength parameter."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> setPhotoContentWithResponse(String groupId, Flux<ByteBuffer> data, long contentLength, Context context)"
  desc: "Update media content for the navigation property photo in groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotoContentWithResponseAsync(java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotoContentWithResponseAsync(String groupId, Flux<ByteBuffer> data, long contentLength)"
  name: "setPhotoContentWithResponseAsync(String groupId, Flux<ByteBuffer> data, long contentLength)"
  nameWithType: "GroupsClient.setPhotoContentWithResponseAsync(String groupId, Flux<ByteBuffer> data, long contentLength)"
  summary: "Update media content for the navigation property photo in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New media content."
    name: "data"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The contentLength parameter."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> setPhotoContentWithResponseAsync(String groupId, Flux<ByteBuffer> data, long contentLength)"
  desc: "Update media content for the navigation property photo in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotosContent(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotosContent(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength)"
  name: "setPhotosContent(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength)"
  nameWithType: "GroupsClient.setPhotosContent(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength)"
  summary: "Update media content for the navigation property photos in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New media content."
    name: "data"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The contentLength parameter."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setPhotosContent(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength)"
  desc: "Update media content for the navigation property photos in groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotosContentAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotosContentAsync(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength)"
  name: "setPhotosContentAsync(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength)"
  nameWithType: "GroupsClient.setPhotosContentAsync(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength)"
  summary: "Update media content for the navigation property photos in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New media content."
    name: "data"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The contentLength parameter."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> setPhotosContentAsync(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength)"
  desc: "Update media content for the navigation property photos in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotosContentWithResponse(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotosContentWithResponse(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength, Context context)"
  name: "setPhotosContentWithResponse(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength, Context context)"
  nameWithType: "GroupsClient.setPhotosContentWithResponse(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength, Context context)"
  summary: "Update media content for the navigation property photos in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New media content."
    name: "data"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The contentLength parameter."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> setPhotosContentWithResponse(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength, Context context)"
  desc: "Update media content for the navigation property photos in groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotosContentWithResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setPhotosContentWithResponseAsync(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength)"
  name: "setPhotosContentWithResponseAsync(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength)"
  nameWithType: "GroupsClient.setPhotosContentWithResponseAsync(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength)"
  summary: "Update media content for the navigation property photos in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New media content."
    name: "data"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The contentLength parameter."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> setPhotosContentWithResponseAsync(String groupId, String profilePhotoId, Flux<ByteBuffer> data, long contentLength)"
  desc: "Update media content for the navigation property photos in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setRefCreatedOnBehalfOf(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setRefCreatedOnBehalfOf(String groupId, Map<String,Object> body)"
  name: "setRefCreatedOnBehalfOf(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.setRefCreatedOnBehalfOf(String groupId, Map<String,Object> body)"
  summary: "Update the ref of navigation property created<wbr>OnBehalf<wbr>Of in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref values."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract void setRefCreatedOnBehalfOf(String groupId, Map<String,Object> body)"
  desc: "Update the ref of navigation property createdOnBehalfOf in groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setRefCreatedOnBehalfOfAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setRefCreatedOnBehalfOfAsync(String groupId, Map<String,Object> body)"
  name: "setRefCreatedOnBehalfOfAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.setRefCreatedOnBehalfOfAsync(String groupId, Map<String,Object> body)"
  summary: "Update the ref of navigation property created<wbr>OnBehalf<wbr>Of in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref values."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Void> setRefCreatedOnBehalfOfAsync(String groupId, Map<String,Object> body)"
  desc: "Update the ref of navigation property createdOnBehalfOf in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setRefCreatedOnBehalfOfWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setRefCreatedOnBehalfOfWithResponse(String groupId, Map<String,Object> body, Context context)"
  name: "setRefCreatedOnBehalfOfWithResponse(String groupId, Map<String,Object> body, Context context)"
  nameWithType: "GroupsClient.setRefCreatedOnBehalfOfWithResponse(String groupId, Map<String,Object> body, Context context)"
  summary: "Update the ref of navigation property created<wbr>OnBehalf<wbr>Of in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref values."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> setRefCreatedOnBehalfOfWithResponse(String groupId, Map<String,Object> body, Context context)"
  desc: "Update the ref of navigation property createdOnBehalfOf in groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setRefCreatedOnBehalfOfWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.setRefCreatedOnBehalfOfWithResponseAsync(String groupId, Map<String,Object> body)"
  name: "setRefCreatedOnBehalfOfWithResponseAsync(String groupId, Map<String,Object> body)"
  nameWithType: "GroupsClient.setRefCreatedOnBehalfOfWithResponseAsync(String groupId, Map<String,Object> body)"
  summary: "Update the ref of navigation property created<wbr>OnBehalf<wbr>Of in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref values."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Void>> setRefCreatedOnBehalfOfWithResponseAsync(String groupId, Map<String,Object> body)"
  desc: "Update the ref of navigation property createdOnBehalfOf in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.subscribeByMail(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.subscribeByMail(String groupId)"
  name: "subscribeByMail(String groupId)"
  nameWithType: "GroupsClient.subscribeByMail(String groupId)"
  summary: "Invoke action subscribe<wbr>ByMail."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void subscribeByMail(String groupId)"
  desc: "Invoke action subscribeByMail."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.subscribeByMailAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.subscribeByMailAsync(String groupId)"
  name: "subscribeByMailAsync(String groupId)"
  nameWithType: "GroupsClient.subscribeByMailAsync(String groupId)"
  summary: "Invoke action subscribe<wbr>ByMail."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> subscribeByMailAsync(String groupId)"
  desc: "Invoke action subscribeByMail."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.subscribeByMailWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.subscribeByMailWithResponse(String groupId, Context context)"
  name: "subscribeByMailWithResponse(String groupId, Context context)"
  nameWithType: "GroupsClient.subscribeByMailWithResponse(String groupId, Context context)"
  summary: "Invoke action subscribe<wbr>ByMail."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> subscribeByMailWithResponse(String groupId, Context context)"
  desc: "Invoke action subscribeByMail."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.subscribeByMailWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.subscribeByMailWithResponseAsync(String groupId)"
  name: "subscribeByMailWithResponseAsync(String groupId)"
  nameWithType: "GroupsClient.subscribeByMailWithResponseAsync(String groupId)"
  summary: "Invoke action subscribe<wbr>ByMail."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> subscribeByMailWithResponseAsync(String groupId)"
  desc: "Invoke action subscribeByMail."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.unsubscribeByMail(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.unsubscribeByMail(String groupId)"
  name: "unsubscribeByMail(String groupId)"
  nameWithType: "GroupsClient.unsubscribeByMail(String groupId)"
  summary: "Invoke action unsubscribe<wbr>ByMail."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void unsubscribeByMail(String groupId)"
  desc: "Invoke action unsubscribeByMail."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.unsubscribeByMailAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.unsubscribeByMailAsync(String groupId)"
  name: "unsubscribeByMailAsync(String groupId)"
  nameWithType: "GroupsClient.unsubscribeByMailAsync(String groupId)"
  summary: "Invoke action unsubscribe<wbr>ByMail."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> unsubscribeByMailAsync(String groupId)"
  desc: "Invoke action unsubscribeByMail."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.unsubscribeByMailWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.unsubscribeByMailWithResponse(String groupId, Context context)"
  name: "unsubscribeByMailWithResponse(String groupId, Context context)"
  nameWithType: "GroupsClient.unsubscribeByMailWithResponse(String groupId, Context context)"
  summary: "Invoke action unsubscribe<wbr>ByMail."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> unsubscribeByMailWithResponse(String groupId, Context context)"
  desc: "Invoke action unsubscribeByMail."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.unsubscribeByMailWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.unsubscribeByMailWithResponseAsync(String groupId)"
  name: "unsubscribeByMailWithResponseAsync(String groupId)"
  nameWithType: "GroupsClient.unsubscribeByMailWithResponseAsync(String groupId)"
  summary: "Invoke action unsubscribe<wbr>ByMail."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> unsubscribeByMailWithResponseAsync(String groupId)"
  desc: "Invoke action unsubscribeByMail."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAcceptedSenders(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAcceptedSenders(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  name: "updateAcceptedSenders(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  nameWithType: "GroupsClient.updateAcceptedSenders(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  summary: "Update the navigation property accepted<wbr>Senders in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateAcceptedSenders(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  desc: "Update the navigation property acceptedSenders in groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAcceptedSendersAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAcceptedSendersAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  name: "updateAcceptedSendersAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  nameWithType: "GroupsClient.updateAcceptedSendersAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  summary: "Update the navigation property accepted<wbr>Senders in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updateAcceptedSendersAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  desc: "Update the navigation property acceptedSenders in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAcceptedSendersWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAcceptedSendersWithResponse(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  name: "updateAcceptedSendersWithResponse(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  nameWithType: "GroupsClient.updateAcceptedSendersWithResponse(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  summary: "Update the navigation property accepted<wbr>Senders in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updateAcceptedSendersWithResponse(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  desc: "Update the navigation property acceptedSenders in groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAcceptedSendersWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAcceptedSendersWithResponseAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  name: "updateAcceptedSendersWithResponseAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  nameWithType: "GroupsClient.updateAcceptedSendersWithResponseAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  summary: "Update the navigation property accepted<wbr>Senders in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updateAcceptedSendersWithResponseAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  desc: "Update the navigation property acceptedSenders in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAppRoleAssignments(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAppRoleAssignments(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "updateAppRoleAssignments(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "GroupsClient.updateAppRoleAssignments(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Update the navigation property app<wbr>Role<wbr>Assignments in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateAppRoleAssignments(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Update the navigation property appRoleAssignments in groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAppRoleAssignmentsAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "updateAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "GroupsClient.updateAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Update the navigation property app<wbr>Role<wbr>Assignments in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updateAppRoleAssignmentsAsync(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Update the navigation property appRoleAssignments in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAppRoleAssignmentsWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAppRoleAssignmentsWithResponse(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  name: "updateAppRoleAssignmentsWithResponse(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  nameWithType: "GroupsClient.updateAppRoleAssignmentsWithResponse(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  summary: "Update the navigation property app<wbr>Role<wbr>Assignments in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updateAppRoleAssignmentsWithResponse(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  desc: "Update the navigation property appRoleAssignments in groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAppRoleAssignmentsWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateAppRoleAssignmentsWithResponseAsync(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "updateAppRoleAssignmentsWithResponseAsync(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "GroupsClient.updateAppRoleAssignmentsWithResponseAsync(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Update the navigation property app<wbr>Role<wbr>Assignments in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updateAppRoleAssignmentsWithResponseAsync(String groupId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Update the navigation property appRoleAssignments in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateExtensions(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateExtensions(String groupId, String extensionId, MicrosoftGraphExtensionInner body)"
  name: "updateExtensions(String groupId, String extensionId, MicrosoftGraphExtensionInner body)"
  nameWithType: "GroupsClient.updateExtensions(String groupId, String extensionId, MicrosoftGraphExtensionInner body)"
  summary: "Update the navigation property extensions in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateExtensions(String groupId, String extensionId, MicrosoftGraphExtensionInner body)"
  desc: "Update the navigation property extensions in groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateExtensionsAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateExtensionsAsync(String groupId, String extensionId, MicrosoftGraphExtensionInner body)"
  name: "updateExtensionsAsync(String groupId, String extensionId, MicrosoftGraphExtensionInner body)"
  nameWithType: "GroupsClient.updateExtensionsAsync(String groupId, String extensionId, MicrosoftGraphExtensionInner body)"
  summary: "Update the navigation property extensions in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updateExtensionsAsync(String groupId, String extensionId, MicrosoftGraphExtensionInner body)"
  desc: "Update the navigation property extensions in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateExtensionsWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateExtensionsWithResponse(String groupId, String extensionId, MicrosoftGraphExtensionInner body, Context context)"
  name: "updateExtensionsWithResponse(String groupId, String extensionId, MicrosoftGraphExtensionInner body, Context context)"
  nameWithType: "GroupsClient.updateExtensionsWithResponse(String groupId, String extensionId, MicrosoftGraphExtensionInner body, Context context)"
  summary: "Update the navigation property extensions in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updateExtensionsWithResponse(String groupId, String extensionId, MicrosoftGraphExtensionInner body, Context context)"
  desc: "Update the navigation property extensions in groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateExtensionsWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateExtensionsWithResponseAsync(String groupId, String extensionId, MicrosoftGraphExtensionInner body)"
  name: "updateExtensionsWithResponseAsync(String groupId, String extensionId, MicrosoftGraphExtensionInner body)"
  nameWithType: "GroupsClient.updateExtensionsWithResponseAsync(String groupId, String extensionId, MicrosoftGraphExtensionInner body)"
  summary: "Update the navigation property extensions in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of extension."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionInner&text=MicrosoftGraphExtensionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updateExtensionsWithResponseAsync(String groupId, String extensionId, MicrosoftGraphExtensionInner body)"
  desc: "Update the navigation property extensions in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePermissionGrants(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePermissionGrants(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  name: "updatePermissionGrants(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  nameWithType: "GroupsClient.updatePermissionGrants(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  summary: "Update the navigation property permission<wbr>Grants in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updatePermissionGrants(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  desc: "Update the navigation property permissionGrants in groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePermissionGrantsAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  name: "updatePermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  nameWithType: "GroupsClient.updatePermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  summary: "Update the navigation property permission<wbr>Grants in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updatePermissionGrantsAsync(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  desc: "Update the navigation property permissionGrants in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePermissionGrantsWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePermissionGrantsWithResponse(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body, Context context)"
  name: "updatePermissionGrantsWithResponse(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body, Context context)"
  nameWithType: "GroupsClient.updatePermissionGrantsWithResponse(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body, Context context)"
  summary: "Update the navigation property permission<wbr>Grants in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updatePermissionGrantsWithResponse(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body, Context context)"
  desc: "Update the navigation property permissionGrants in groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePermissionGrantsWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePermissionGrantsWithResponseAsync(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  name: "updatePermissionGrantsWithResponseAsync(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  nameWithType: "GroupsClient.updatePermissionGrantsWithResponseAsync(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  summary: "Update the navigation property permission<wbr>Grants in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of resourceSpecificPermissionGrant."
    name: "resourceSpecificPermissionGrantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphResourceSpecificPermissionGrantInner&text=MicrosoftGraphResourceSpecificPermissionGrantInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updatePermissionGrantsWithResponseAsync(String groupId, String resourceSpecificPermissionGrantId, MicrosoftGraphResourceSpecificPermissionGrantInner body)"
  desc: "Update the navigation property permissionGrants in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhoto(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhoto(String groupId, MicrosoftGraphProfilePhotoInner body)"
  name: "updatePhoto(String groupId, MicrosoftGraphProfilePhotoInner body)"
  nameWithType: "GroupsClient.updatePhoto(String groupId, MicrosoftGraphProfilePhotoInner body)"
  summary: "Update the navigation property photo in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updatePhoto(String groupId, MicrosoftGraphProfilePhotoInner body)"
  desc: "Update the navigation property photo in groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotoAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotoAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  name: "updatePhotoAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  nameWithType: "GroupsClient.updatePhotoAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  summary: "Update the navigation property photo in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updatePhotoAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  desc: "Update the navigation property photo in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotoWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotoWithResponse(String groupId, MicrosoftGraphProfilePhotoInner body, Context context)"
  name: "updatePhotoWithResponse(String groupId, MicrosoftGraphProfilePhotoInner body, Context context)"
  nameWithType: "GroupsClient.updatePhotoWithResponse(String groupId, MicrosoftGraphProfilePhotoInner body, Context context)"
  summary: "Update the navigation property photo in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updatePhotoWithResponse(String groupId, MicrosoftGraphProfilePhotoInner body, Context context)"
  desc: "Update the navigation property photo in groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotoWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotoWithResponseAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  name: "updatePhotoWithResponseAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  nameWithType: "GroupsClient.updatePhotoWithResponseAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  summary: "Update the navigation property photo in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updatePhotoWithResponseAsync(String groupId, MicrosoftGraphProfilePhotoInner body)"
  desc: "Update the navigation property photo in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotos(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotos(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body)"
  name: "updatePhotos(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body)"
  nameWithType: "GroupsClient.updatePhotos(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body)"
  summary: "Update the navigation property photos in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updatePhotos(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body)"
  desc: "Update the navigation property photos in groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotosAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotosAsync(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body)"
  name: "updatePhotosAsync(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body)"
  nameWithType: "GroupsClient.updatePhotosAsync(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body)"
  summary: "Update the navigation property photos in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updatePhotosAsync(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body)"
  desc: "Update the navigation property photos in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotosWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotosWithResponse(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body, Context context)"
  name: "updatePhotosWithResponse(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body, Context context)"
  nameWithType: "GroupsClient.updatePhotosWithResponse(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body, Context context)"
  summary: "Update the navigation property photos in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updatePhotosWithResponse(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body, Context context)"
  desc: "Update the navigation property photos in groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotosWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updatePhotosWithResponseAsync(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body)"
  name: "updatePhotosWithResponseAsync(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body)"
  nameWithType: "GroupsClient.updatePhotosWithResponseAsync(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body)"
  summary: "Update the navigation property photos in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of profilePhoto."
    name: "profilePhotoId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphProfilePhotoInner&text=MicrosoftGraphProfilePhotoInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updatePhotosWithResponseAsync(String groupId, String profilePhotoId, MicrosoftGraphProfilePhotoInner body)"
  desc: "Update the navigation property photos in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateRejectedSenders(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateRejectedSenders(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  name: "updateRejectedSenders(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  nameWithType: "GroupsClient.updateRejectedSenders(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  summary: "Update the navigation property rejected<wbr>Senders in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateRejectedSenders(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  desc: "Update the navigation property rejectedSenders in groups."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateRejectedSendersAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateRejectedSendersAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  name: "updateRejectedSendersAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  nameWithType: "GroupsClient.updateRejectedSendersAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  summary: "Update the navigation property rejected<wbr>Senders in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updateRejectedSendersAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  desc: "Update the navigation property rejectedSenders in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateRejectedSendersWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateRejectedSendersWithResponse(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  name: "updateRejectedSendersWithResponse(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  nameWithType: "GroupsClient.updateRejectedSendersWithResponse(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  summary: "Update the navigation property rejected<wbr>Senders in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updateRejectedSendersWithResponse(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body, Context context)"
  desc: "Update the navigation property rejectedSenders in groups."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateRejectedSendersWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.updateRejectedSendersWithResponseAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  name: "updateRejectedSendersWithResponseAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  nameWithType: "GroupsClient.updateRejectedSendersWithResponseAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  summary: "Update the navigation property rejected<wbr>Senders in groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of directoryObject."
    name: "directoryObjectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updateRejectedSendersWithResponseAsync(String groupId, String directoryObjectId, MicrosoftGraphDirectoryObjectInner body)"
  desc: "Update the navigation property rejectedSenders in groups."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validateProperties(com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validateProperties(GroupsValidatePropertiesRequestBody body)"
  name: "validateProperties(GroupsValidatePropertiesRequestBody body)"
  nameWithType: "GroupsClient.validateProperties(GroupsValidatePropertiesRequestBody body)"
  summary: "Invoke action validate<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody&text=GroupsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void validateProperties(GroupsValidatePropertiesRequestBody body)"
  desc: "Invoke action validateProperties."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validateProperties(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validateProperties(String groupId, GroupsValidatePropertiesRequestBody body)"
  name: "validateProperties(String groupId, GroupsValidatePropertiesRequestBody body)"
  nameWithType: "GroupsClient.validateProperties(String groupId, GroupsValidatePropertiesRequestBody body)"
  summary: "Invoke action validate<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody&text=GroupsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void validateProperties(String groupId, GroupsValidatePropertiesRequestBody body)"
  desc: "Invoke action validateProperties."
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validatePropertiesAsync(com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validatePropertiesAsync(GroupsValidatePropertiesRequestBody body)"
  name: "validatePropertiesAsync(GroupsValidatePropertiesRequestBody body)"
  nameWithType: "GroupsClient.validatePropertiesAsync(GroupsValidatePropertiesRequestBody body)"
  summary: "Invoke action validate<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody&text=GroupsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> validatePropertiesAsync(GroupsValidatePropertiesRequestBody body)"
  desc: "Invoke action validateProperties."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validatePropertiesAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validatePropertiesAsync(String groupId, GroupsValidatePropertiesRequestBody body)"
  name: "validatePropertiesAsync(String groupId, GroupsValidatePropertiesRequestBody body)"
  nameWithType: "GroupsClient.validatePropertiesAsync(String groupId, GroupsValidatePropertiesRequestBody body)"
  summary: "Invoke action validate<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody&text=GroupsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> validatePropertiesAsync(String groupId, GroupsValidatePropertiesRequestBody body)"
  desc: "Invoke action validateProperties."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validatePropertiesWithResponse(com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validatePropertiesWithResponse(GroupsValidatePropertiesRequestBody body, Context context)"
  name: "validatePropertiesWithResponse(GroupsValidatePropertiesRequestBody body, Context context)"
  nameWithType: "GroupsClient.validatePropertiesWithResponse(GroupsValidatePropertiesRequestBody body, Context context)"
  summary: "Invoke action validate<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody&text=GroupsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> validatePropertiesWithResponse(GroupsValidatePropertiesRequestBody body, Context context)"
  desc: "Invoke action validateProperties."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validatePropertiesWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validatePropertiesWithResponse(String groupId, GroupsValidatePropertiesRequestBody body, Context context)"
  name: "validatePropertiesWithResponse(String groupId, GroupsValidatePropertiesRequestBody body, Context context)"
  nameWithType: "GroupsClient.validatePropertiesWithResponse(String groupId, GroupsValidatePropertiesRequestBody body, Context context)"
  summary: "Invoke action validate<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody&text=GroupsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> validatePropertiesWithResponse(String groupId, GroupsValidatePropertiesRequestBody body, Context context)"
  desc: "Invoke action validateProperties."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validatePropertiesWithResponseAsync(com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validatePropertiesWithResponseAsync(GroupsValidatePropertiesRequestBody body)"
  name: "validatePropertiesWithResponseAsync(GroupsValidatePropertiesRequestBody body)"
  nameWithType: "GroupsClient.validatePropertiesWithResponseAsync(GroupsValidatePropertiesRequestBody body)"
  summary: "Invoke action validate<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody&text=GroupsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> validatePropertiesWithResponseAsync(GroupsValidatePropertiesRequestBody body)"
  desc: "Invoke action validateProperties."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validatePropertiesWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupsClient.validatePropertiesWithResponseAsync(String groupId, GroupsValidatePropertiesRequestBody body)"
  name: "validatePropertiesWithResponseAsync(String groupId, GroupsValidatePropertiesRequestBody body)"
  nameWithType: "GroupsClient.validatePropertiesWithResponseAsync(String groupId, GroupsValidatePropertiesRequestBody body)"
  summary: "Invoke action validate<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of group."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupsValidatePropertiesRequestBody&text=GroupsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> validatePropertiesWithResponseAsync(String groupId, GroupsValidatePropertiesRequestBody body)"
  desc: "Invoke action validateProperties."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in GroupsClient."
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.14.0
