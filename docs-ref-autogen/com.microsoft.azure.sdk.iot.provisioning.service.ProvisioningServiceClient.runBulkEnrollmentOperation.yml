### YamlMime:JavaMember
nameWithType: ProvisioningServiceClient.runBulkEnrollmentOperation
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)
  name: runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)
  nameWithType: ProvisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)
  parameters:
  - description: >-
      <p>the <xref uid="" data-throw-if-not-resolved="false">BulkOperationMode</xref> that defines the single operation to do over the individualEnrollments. It cannot be<code>null 

          </code> . </p>
    name: bulkOperationMode
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode&text=BulkOperationMode" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>the collection of <xref uid="" data-throw-if-not-resolved="false">IndividualEnrollment</xref> that contains the description of each individualEnrollment. It cannot be<code>null 

          </code> or empty. </p>
    name: individualEnrollments
    type: Collection&lt;<xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment&text=IndividualEnrollment" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if the provided parameters are not correct. </p>
  - type: <xref href="ProvisioningServiceClientTransportException?alt=ProvisioningServiceClientTransportException&text=ProvisioningServiceClientTransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the SDK failed to send the request to the Device Provisioning Service. </p>
  - type: <xref href="ProvisioningServiceClientException?alt=ProvisioningServiceClientException&text=ProvisioningServiceClientException" data-throw-if-not-resolved="False"/>
    description: <p>if the Device Provisioning Service was not able to execute the bulk operation. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false">BulkEnrollmentOperationResult</xref> object with the result of operation for each enrollment. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult&text=BulkEnrollmentOperationResult" data-throw-if-not-resolved="False"/>
  summary: "<p>Create, update or delete a set of individual Device Enrollments.</p>\r\n<p>This API provide the means to do a single operation over multiple individualEnrollments. A valid operation is determined by <xref uid=\"\" data-throw-if-not-resolved=\"false\">BulkOperationMode</xref>, and can be 'create', 'update', 'updateIfMatchETag', or 'delete'.</p>\r\n<p>To use the Device Provisioning Service API, you must include the follow package on your application. <pre><code>// Include the following imports to use the Device Provisioning Service APIs.\r\n    import com.microsoft.azure.sdk.iot.provisioning.service.*;\r\n    </code></pre></p>\r\n<p>\r\n  <b>Sample:</b>\r\n</p>\r\n<p>The follow code will create two new enrollment that will provisioning the ContosoDevice1000 and ContosoDevice1001 to the ContosoHub.azure-devices.net using TPM attestation. <pre><code>// IndividualEnrollment information.\r\n    private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\r\n                                                                 \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\r\n                                                                 \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\r\n    private static final String TPM_ENDORSEMENT_KEY = \"tpm-endorsement-key\";\r\n    private static final String IOTHUB_HOST_NAME = \"ContosoHub.azure-devices.net\";\r\n    \r\n    private static final String REGISTRATION_ID_1 = \"registrationId-1\";\r\n    private static final String DEVICE_ID_1 = \"ContosoDevice1000\";\r\n    \r\n    private static final String REGISTRATION_ID_2 = \"registrationId-2\";\r\n    private static final String DEVICE_ID_2 = \"ContosoDevice1001\";\r\n    \r\n    public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\r\n    {\r\n        // Create a Device Provisioning Service Client.\r\n        DeviceProvisioningServiceClient deviceProvisioningServiceClient =\r\n            DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\r\n    \r\n        // Create two new individualEnrollment configurations.\r\n        Attestation attestation = new TpmAttestation(TPM_ENDORSEMENT_KEY);\r\n        IndividualEnrollment enrollment1 =\r\n           new IndividualEnrollment(\r\n                REGISTRATION_ID_1,\r\n                attestation);\r\n        enrollment1.setDeviceId(DEVICE_ID_1);\r\n        enrollment1.setIotHubHostName(IOTHUB_HOST_NAME);\r\n        enrollment1.setProvisioningStatus(ProvisioningStatus.DISABLED);\r\n    \r\n        IndividualEnrollment enrollment2 =\r\n           new IndividualEnrollment(\r\n                REGISTRATION_ID_2,\r\n                attestation);\r\n        enrollment2.setDeviceId(DEVICE_ID_2);\r\n        enrollment2.setIotHubHostName(IOTHUB_HOST_NAME);\r\n        enrollment2.setProvisioningStatus(ProvisioningStatus.DISABLED);\r\n    \r\n        // Add these 2 individualEnrollments to a list of individualEnrollments.\r\n        List&lt;IndividualEnrollment&gt; individualEnrollments = new LinkedList&lt;&gt;();\r\n        individualEnrollments.add(enrollment1);\r\n        individualEnrollments.add(enrollment2);\r\n    \r\n        // Create these 2 new individualEnrollment using the bulk operation.\r\n        BulkEnrollmentOperationResult bulkEnrollmentOperationResult =  provisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode.create, individualEnrollments);\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax: public BulkEnrollmentOperationResult runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode,Collection<IndividualEnrollment>)
uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation*
fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)
name: runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)
package: com.microsoft.azure.sdk.iot.provisioning.service
metadata: {}
