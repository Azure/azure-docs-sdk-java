### YamlMime:JavaType
uid: "com.azure.cosmos.models.CosmosAuthorizationTokenResolver"
fullName: "com.azure.cosmos.models.CosmosAuthorizationTokenResolver"
name: "CosmosAuthorizationTokenResolver"
nameWithType: "CosmosAuthorizationTokenResolver"
summary: "This interface is for client side implementation, which can be used for initializing Cosmos<wbr>Async<wbr>Client without passing master key, resource token and permission feed.\n\nEach time the SDK create request for CosmosDB, authorization token is generated based on that request at client side which enables creation of one Cosmos<wbr>Async<wbr>Client per application shared across various users with different resource permissions."
syntax: "public interface **CosmosAuthorizationTokenResolver**"
methods:
- uid: "com.azure.cosmos.models.CosmosAuthorizationTokenResolver.getAuthorizationToken(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.cosmos.models.CosmosAuthorizationTokenResolver.getAuthorizationToken(String requestVerb, String resourceIdOrFullName, String resourceType, Map<String,Object> properties)"
  name: "getAuthorizationToken(String requestVerb, String resourceIdOrFullName, String resourceType, Map<String,Object> properties)"
  nameWithType: "CosmosAuthorizationTokenResolver.getAuthorizationToken(String requestVerb, String resourceIdOrFullName, String resourceType, Map<String,Object> properties)"
  summary: "This method will consume the request information and based on that it will generate the authorization token."
  modifiers:
  - "abstract"
  parameters:
  - description: "Request verb i.e. GET, POST, PUT etc."
    name: "requestVerb"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "ResourceID or resource full name."
    name: "resourceIdOrFullName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Resource type i.e. Database, DocumentCollection, Document etc."
    name: "resourceType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the user properties."
    name: "properties"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>&gt;"
  syntax: "public abstract String getAuthorizationToken(String requestVerb, String resourceIdOrFullName, String resourceType, Map<String,Object> properties)"
  desc: "This method will consume the request information and based on that it will generate the authorization token."
  returns:
    description: "The authorization token."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
type: "interface"
desc: "This interface is for client side implementation, which can be used for initializing CosmosAsyncClient without passing master key, resource token and permission feed.\n\nEach time the SDK create request for CosmosDB, authorization token is generated based on that request at client side which enables creation of one CosmosAsyncClient per application shared across various users with different resource permissions."
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.44.0
