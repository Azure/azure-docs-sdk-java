### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.fluentcore.utils.DelayProvider"
fullName: "com.microsoft.azure.management.resources.fluentcore.utils.DelayProvider"
name: "DelayProvider"
nameWithType: "DelayProvider"
summary: "A wrapper class for thread sleep."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DelayProvider"
constructors:
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.DelayProvider.DelayProvider()"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.DelayProvider.DelayProvider()"
  name: "DelayProvider()"
  nameWithType: "DelayProvider.DelayProvider()"
  syntax: "public DelayProvider()"
methods:
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.DelayProvider.<T>delayedEmitAsync(T,int)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.DelayProvider.<T>delayedEmitAsync(T event, int milliseconds)"
  name: "<T>delayedEmitAsync(T event, int milliseconds)"
  nameWithType: "DelayProvider.<T>delayedEmitAsync(T event, int milliseconds)"
  summary: "Creates an observable that emits the given item after the specified time in milliseconds."
  parameters:
  - description: "the event to emit"
    name: "event"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "the delay in milliseconds"
    name: "milliseconds"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Observable<T> <T>delayedEmitAsync(T event, int milliseconds)"
  desc: "Creates an observable that emits the given item after the specified time in milliseconds."
  returns:
    description: "delayed observable"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.DelayProvider.now()"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.DelayProvider.now()"
  name: "now()"
  nameWithType: "DelayProvider.now()"
  syntax: "public DateTime now()"
  returns:
    description: "the current time."
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.DelayProvider.sleep(int)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.DelayProvider.sleep(int milliseconds)"
  name: "sleep(int milliseconds)"
  nameWithType: "DelayProvider.sleep(int milliseconds)"
  summary: "Puts current thread on sleep for passed milliseconds."
  parameters:
  - description: "time to sleep for"
    name: "milliseconds"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void sleep(int milliseconds)"
  desc: "Puts current thread on sleep for passed milliseconds."
type: "class"
desc: "A wrapper class for thread sleep."
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.utils"
artifact: com.microsoft.azure:azure-mgmt-resources:1.41.4
