### YamlMime:JavaType
uid: "com.azure.resourcemanager.compute.models.CreationData"
fullName: "com.azure.resourcemanager.compute.models.CreationData"
name: "CreationData"
nameWithType: "CreationData"
summary: "Data used when creating a disk."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CreationData"
constructors:
- uid: "com.azure.resourcemanager.compute.models.CreationData.CreationData()"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.CreationData()"
  name: "CreationData()"
  nameWithType: "CreationData.CreationData()"
  syntax: "public CreationData()"
methods:
- uid: "com.azure.resourcemanager.compute.models.CreationData.createOption()"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.createOption()"
  name: "createOption()"
  nameWithType: "CreationData.createOption()"
  summary: "Get the create<wbr>Option property: This enumerates the possible sources of a disk's creation."
  syntax: "public DiskCreateOption createOption()"
  desc: "Get the createOption property: This enumerates the possible sources of a disk's creation."
  returns:
    description: "the createOption value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskCreateOption?alt=com.azure.resourcemanager.compute.models.DiskCreateOption&text=DiskCreateOption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.galleryImageReference()"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.galleryImageReference()"
  name: "galleryImageReference()"
  nameWithType: "CreationData.galleryImageReference()"
  summary: "Get the gallery<wbr>Image<wbr>Reference property: Required if creating from a Gallery Image."
  syntax: "public ImageDiskReference galleryImageReference()"
  desc: "Get the galleryImageReference property: Required if creating from a Gallery Image. The id/sharedGalleryImageId/communityGalleryImageId of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk."
  returns:
    description: "the galleryImageReference value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageDiskReference?alt=com.azure.resourcemanager.compute.models.ImageDiskReference&text=ImageDiskReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.imageReference()"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.imageReference()"
  name: "imageReference()"
  nameWithType: "CreationData.imageReference()"
  summary: "Get the image<wbr>Reference property: Disk source information for PIR or user images."
  syntax: "public ImageDiskReference imageReference()"
  desc: "Get the imageReference property: Disk source information for PIR or user images."
  returns:
    description: "the imageReference value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageDiskReference?alt=com.azure.resourcemanager.compute.models.ImageDiskReference&text=ImageDiskReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.logicalSectorSize()"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.logicalSectorSize()"
  name: "logicalSectorSize()"
  nameWithType: "CreationData.logicalSectorSize()"
  summary: "Get the logical<wbr>Sector<wbr>Size property: Logical sector size in bytes for Ultra disks."
  syntax: "public Integer logicalSectorSize()"
  desc: "Get the logicalSectorSize property: Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the default."
  returns:
    description: "the logicalSectorSize value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.securityDataUri()"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.securityDataUri()"
  name: "securityDataUri()"
  nameWithType: "CreationData.securityDataUri()"
  summary: "Get the security<wbr>Data<wbr>Uri property: If create<wbr>Option is Import<wbr>Secure, this is the URI of a blob to be imported into VM guest state."
  syntax: "public String securityDataUri()"
  desc: "Get the securityDataUri property: If createOption is ImportSecure, this is the URI of a blob to be imported into VM guest state."
  returns:
    description: "the securityDataUri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.sourceResourceId()"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.sourceResourceId()"
  name: "sourceResourceId()"
  nameWithType: "CreationData.sourceResourceId()"
  summary: "Get the source<wbr>Resource<wbr>Id property: If create<wbr>Option is Copy, this is the ARM id of the source snapshot or disk."
  syntax: "public String sourceResourceId()"
  desc: "Get the sourceResourceId property: If createOption is Copy, this is the ARM id of the source snapshot or disk."
  returns:
    description: "the sourceResourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.sourceUniqueId()"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.sourceUniqueId()"
  name: "sourceUniqueId()"
  nameWithType: "CreationData.sourceUniqueId()"
  summary: "Get the source<wbr>Unique<wbr>Id property: If this field is set, this is the unique id identifying the source of this resource."
  syntax: "public String sourceUniqueId()"
  desc: "Get the sourceUniqueId property: If this field is set, this is the unique id identifying the source of this resource."
  returns:
    description: "the sourceUniqueId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.sourceUri()"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.sourceUri()"
  name: "sourceUri()"
  nameWithType: "CreationData.sourceUri()"
  summary: "Get the source<wbr>Uri property: If create<wbr>Option is Import, this is the URI of a blob to be imported into a managed disk."
  syntax: "public String sourceUri()"
  desc: "Get the sourceUri property: If createOption is Import, this is the URI of a blob to be imported into a managed disk."
  returns:
    description: "the sourceUri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.storageAccountId()"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.storageAccountId()"
  name: "storageAccountId()"
  nameWithType: "CreationData.storageAccountId()"
  summary: "Get the storage<wbr>Account<wbr>Id property: Required if create<wbr>Option is Import."
  syntax: "public String storageAccountId()"
  desc: "Get the storageAccountId property: Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk."
  returns:
    description: "the storageAccountId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.uploadSizeBytes()"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.uploadSizeBytes()"
  name: "uploadSizeBytes()"
  nameWithType: "CreationData.uploadSizeBytes()"
  summary: "Get the upload<wbr>Size<wbr>Bytes property: If create<wbr>Option is Upload, this is the size of the contents of the upload including the VHD footer."
  syntax: "public Long uploadSizeBytes()"
  desc: "Get the uploadSizeBytes property: If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer)."
  returns:
    description: "the uploadSizeBytes value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.validate()"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.validate()"
  name: "validate()"
  nameWithType: "CreationData.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.compute.models.CreationData.withCreateOption(com.azure.resourcemanager.compute.models.DiskCreateOption)"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.withCreateOption(DiskCreateOption createOption)"
  name: "withCreateOption(DiskCreateOption createOption)"
  nameWithType: "CreationData.withCreateOption(DiskCreateOption createOption)"
  summary: "Set the create<wbr>Option property: This enumerates the possible sources of a disk's creation."
  parameters:
  - description: "the createOption value to set."
    name: "createOption"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskCreateOption?alt=com.azure.resourcemanager.compute.models.DiskCreateOption&text=DiskCreateOption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreationData withCreateOption(DiskCreateOption createOption)"
  desc: "Set the createOption property: This enumerates the possible sources of a disk's creation."
  returns:
    description: "the CreationData object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CreationData?alt=com.azure.resourcemanager.compute.models.CreationData&text=CreationData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.withGalleryImageReference(com.azure.resourcemanager.compute.models.ImageDiskReference)"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.withGalleryImageReference(ImageDiskReference galleryImageReference)"
  name: "withGalleryImageReference(ImageDiskReference galleryImageReference)"
  nameWithType: "CreationData.withGalleryImageReference(ImageDiskReference galleryImageReference)"
  summary: "Set the gallery<wbr>Image<wbr>Reference property: Required if creating from a Gallery Image."
  parameters:
  - description: "the galleryImageReference value to set."
    name: "galleryImageReference"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageDiskReference?alt=com.azure.resourcemanager.compute.models.ImageDiskReference&text=ImageDiskReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreationData withGalleryImageReference(ImageDiskReference galleryImageReference)"
  desc: "Set the galleryImageReference property: Required if creating from a Gallery Image. The id/sharedGalleryImageId/communityGalleryImageId of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk."
  returns:
    description: "the CreationData object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CreationData?alt=com.azure.resourcemanager.compute.models.CreationData&text=CreationData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.withImageReference(com.azure.resourcemanager.compute.models.ImageDiskReference)"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.withImageReference(ImageDiskReference imageReference)"
  name: "withImageReference(ImageDiskReference imageReference)"
  nameWithType: "CreationData.withImageReference(ImageDiskReference imageReference)"
  summary: "Set the image<wbr>Reference property: Disk source information for PIR or user images."
  parameters:
  - description: "the imageReference value to set."
    name: "imageReference"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ImageDiskReference?alt=com.azure.resourcemanager.compute.models.ImageDiskReference&text=ImageDiskReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreationData withImageReference(ImageDiskReference imageReference)"
  desc: "Set the imageReference property: Disk source information for PIR or user images."
  returns:
    description: "the CreationData object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CreationData?alt=com.azure.resourcemanager.compute.models.CreationData&text=CreationData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.withLogicalSectorSize(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.withLogicalSectorSize(Integer logicalSectorSize)"
  name: "withLogicalSectorSize(Integer logicalSectorSize)"
  nameWithType: "CreationData.withLogicalSectorSize(Integer logicalSectorSize)"
  summary: "Set the logical<wbr>Sector<wbr>Size property: Logical sector size in bytes for Ultra disks."
  parameters:
  - description: "the logicalSectorSize value to set."
    name: "logicalSectorSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreationData withLogicalSectorSize(Integer logicalSectorSize)"
  desc: "Set the logicalSectorSize property: Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the default."
  returns:
    description: "the CreationData object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CreationData?alt=com.azure.resourcemanager.compute.models.CreationData&text=CreationData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.withSecurityDataUri(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.withSecurityDataUri(String securityDataUri)"
  name: "withSecurityDataUri(String securityDataUri)"
  nameWithType: "CreationData.withSecurityDataUri(String securityDataUri)"
  summary: "Set the security<wbr>Data<wbr>Uri property: If create<wbr>Option is Import<wbr>Secure, this is the URI of a blob to be imported into VM guest state."
  parameters:
  - description: "the securityDataUri value to set."
    name: "securityDataUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreationData withSecurityDataUri(String securityDataUri)"
  desc: "Set the securityDataUri property: If createOption is ImportSecure, this is the URI of a blob to be imported into VM guest state."
  returns:
    description: "the CreationData object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CreationData?alt=com.azure.resourcemanager.compute.models.CreationData&text=CreationData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.withSourceResourceId(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.withSourceResourceId(String sourceResourceId)"
  name: "withSourceResourceId(String sourceResourceId)"
  nameWithType: "CreationData.withSourceResourceId(String sourceResourceId)"
  summary: "Set the source<wbr>Resource<wbr>Id property: If create<wbr>Option is Copy, this is the ARM id of the source snapshot or disk."
  parameters:
  - description: "the sourceResourceId value to set."
    name: "sourceResourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreationData withSourceResourceId(String sourceResourceId)"
  desc: "Set the sourceResourceId property: If createOption is Copy, this is the ARM id of the source snapshot or disk."
  returns:
    description: "the CreationData object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CreationData?alt=com.azure.resourcemanager.compute.models.CreationData&text=CreationData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.withSourceUri(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.withSourceUri(String sourceUri)"
  name: "withSourceUri(String sourceUri)"
  nameWithType: "CreationData.withSourceUri(String sourceUri)"
  summary: "Set the source<wbr>Uri property: If create<wbr>Option is Import, this is the URI of a blob to be imported into a managed disk."
  parameters:
  - description: "the sourceUri value to set."
    name: "sourceUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreationData withSourceUri(String sourceUri)"
  desc: "Set the sourceUri property: If createOption is Import, this is the URI of a blob to be imported into a managed disk."
  returns:
    description: "the CreationData object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CreationData?alt=com.azure.resourcemanager.compute.models.CreationData&text=CreationData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.withStorageAccountId(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.withStorageAccountId(String storageAccountId)"
  name: "withStorageAccountId(String storageAccountId)"
  nameWithType: "CreationData.withStorageAccountId(String storageAccountId)"
  summary: "Set the storage<wbr>Account<wbr>Id property: Required if create<wbr>Option is Import."
  parameters:
  - description: "the storageAccountId value to set."
    name: "storageAccountId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreationData withStorageAccountId(String storageAccountId)"
  desc: "Set the storageAccountId property: Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk."
  returns:
    description: "the CreationData object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CreationData?alt=com.azure.resourcemanager.compute.models.CreationData&text=CreationData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.CreationData.withUploadSizeBytes(java.lang.Long)"
  fullName: "com.azure.resourcemanager.compute.models.CreationData.withUploadSizeBytes(Long uploadSizeBytes)"
  name: "withUploadSizeBytes(Long uploadSizeBytes)"
  nameWithType: "CreationData.withUploadSizeBytes(Long uploadSizeBytes)"
  summary: "Set the upload<wbr>Size<wbr>Bytes property: If create<wbr>Option is Upload, this is the size of the contents of the upload including the VHD footer."
  parameters:
  - description: "the uploadSizeBytes value to set."
    name: "uploadSizeBytes"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreationData withUploadSizeBytes(Long uploadSizeBytes)"
  desc: "Set the uploadSizeBytes property: If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer)."
  returns:
    description: "the CreationData object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CreationData?alt=com.azure.resourcemanager.compute.models.CreationData&text=CreationData\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Data used when creating a disk."
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.16.0
