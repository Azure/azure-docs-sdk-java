### YamlMime:JavaType
uid: "com.azure.resourcemanager.newrelicobservability.models.Plans"
fullName: "com.azure.resourcemanager.newrelicobservability.models.Plans"
name: "Plans"
nameWithType: "Plans"
summary: "Resource collection API of Plans."
syntax: "public interface **Plans**"
methods:
- uid: "com.azure.resourcemanager.newrelicobservability.models.Plans.list()"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.Plans.list()"
  name: "list()"
  nameWithType: "Plans.list()"
  summary: "List plans data."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<PlanDataResource> list()"
  desc: "List plans data."
  returns:
    description: "response of get all plan data Operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.PlanDataResource?alt=com.azure.resourcemanager.newrelicobservability.models.PlanDataResource&text=PlanDataResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.newrelicobservability.models.Plans.list(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.newrelicobservability.models.Plans.list(String accountId, String organizationId, Context context)"
  name: "list(String accountId, String organizationId, Context context)"
  nameWithType: "Plans.list(String accountId, String organizationId, Context context)"
  summary: "List plans data."
  modifiers:
  - "abstract"
  parameters:
  - description: "Account Id."
    name: "accountId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Organization Id."
    name: "organizationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PlanDataResource> list(String accountId, String organizationId, Context context)"
  desc: "List plans data."
  returns:
    description: "response of get all plan data Operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.newrelicobservability.models.PlanDataResource?alt=com.azure.resourcemanager.newrelicobservability.models.PlanDataResource&text=PlanDataResource\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Plans."
metadata: {}
package: "com.azure.resourcemanager.newrelicobservability.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-newrelicobservability:1.0.0
