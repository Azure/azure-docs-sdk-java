### YamlMime:JavaMember
uid: "com.azure.resourcemanager.network.models.PacketCapture.DefinitionStages.WithStorageLocation.withFilePath*"
fullName: "com.azure.resourcemanager.network.models.PacketCapture.DefinitionStages.WithStorageLocation.withFilePath"
name: "withFilePath"
nameWithType: "PacketCapture.DefinitionStages.WithStorageLocation.withFilePath"
members:
- uid: "com.azure.resourcemanager.network.models.PacketCapture.DefinitionStages.WithStorageLocation.withFilePath(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.models.PacketCapture.DefinitionStages.WithStorageLocation.withFilePath(String filePath)"
  name: "withFilePath(String filePath)"
  nameWithType: "PacketCapture.DefinitionStages.WithStorageLocation.withFilePath(String filePath)"
  summary: "A valid local path on the targeting VM. Must include the name of the capture file (\\*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional."
  parameters:
  - description: "A valid local path on the targeting VM"
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PacketCapture.DefinitionStages.WithCreate withFilePath(String filePath)"
  returns:
    description: "the next stage"
    type: "<xref href=\"com.azure.resourcemanager.network.models.PacketCapture.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.network.models.PacketCapture.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
