items:
- uid: system.fabric._cluster_management_client
  id: _cluster_management_client
  parent: system.fabric
  children:
  - system.fabric._cluster_management_client.activateNodeAsync(String)
  - system.fabric._cluster_management_client.activateNodeAsync(String,Duration)
  - system.fabric._cluster_management_client.close()
  - system.fabric._cluster_management_client.ClusterManagementClient(long)
  - system.fabric._cluster_management_client.copyClusterPackage(String,String,String,String,String)
  - system.fabric._cluster_management_client.deactivateNodeAsync(String,NodeDeactivationIntent)
  - system.fabric._cluster_management_client.deactivateNodeAsync(String,NodeDeactivationIntent,Duration)
  - system.fabric._cluster_management_client.getClusterManifestAsync()
  - system.fabric._cluster_management_client.getClusterManifestAsync(Duration)
  - system.fabric._cluster_management_client.getFabricUpgradeProgressAsync()
  - system.fabric._cluster_management_client.getFabricUpgradeProgressAsync(Duration)
  - system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress)
  - system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress,Duration)
  - system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync(String)
  - system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync(String,Duration)
  - system.fabric._cluster_management_client.provisionFabricAsync(String,String)
  - system.fabric._cluster_management_client.provisionFabricAsync(String,String,Duration)
  - system.fabric._cluster_management_client.recoverPartitionAsync(UUID)
  - system.fabric._cluster_management_client.recoverPartitionAsync(UUID,Duration)
  - system.fabric._cluster_management_client.recoverPartitionsAsync()
  - system.fabric._cluster_management_client.recoverPartitionsAsync(Duration)
  - system.fabric._cluster_management_client.recoverServicePartitionsAsync(URI)
  - system.fabric._cluster_management_client.recoverServicePartitionsAsync(URI,Duration)
  - system.fabric._cluster_management_client.recoverSystemPartitionsAsync()
  - system.fabric._cluster_management_client.recoverSystemPartitionsAsync(Duration)
  - system.fabric._cluster_management_client.removeClusterPackage(String,String,String)
  - system.fabric._cluster_management_client.removeNodeStateAsync(String)
  - system.fabric._cluster_management_client.removeNodeStateAsync(String,Duration)
  - system.fabric._cluster_management_client.resetPartitionLoadAsync(UUID)
  - system.fabric._cluster_management_client.resetPartitionLoadAsync(UUID,Duration)
  - system.fabric._cluster_management_client.rollbackFabricUpgradeAsync()
  - system.fabric._cluster_management_client.rollbackFabricUpgradeAsync(Duration)
  - system.fabric._cluster_management_client.toggleVerboseServicePlacementHealthReportingAsync(boolean)
  - system.fabric._cluster_management_client.toggleVerboseServicePlacementHealthReportingAsync(boolean,Duration)
  - system.fabric._cluster_management_client.unprovisionFabricAsync(String,String)
  - system.fabric._cluster_management_client.unprovisionFabricAsync(String,String,Duration)
  - system.fabric._cluster_management_client.updateFabricUpgradeAsync(FabricUpgradeUpdateDescription)
  - system.fabric._cluster_management_client.updateFabricUpgradeAsync(FabricUpgradeUpdateDescription,Duration)
  - system.fabric._cluster_management_client.upgradeFabricAsync(FabricUpgradeDescription)
  - system.fabric._cluster_management_client.upgradeFabricAsync(FabricUpgradeDescription,Duration)
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: ClusterManagementClient
  nameWithType: ClusterManagementClient
  fullName: system.fabric.ClusterManagementClient
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 17
  package: system.fabric
  summary: <p>Represents the cluster management client for performing cluster maintenance operations. </p>
  syntax:
    content: public class ClusterManagementClient
  inheritance:
  - java.lang.Object
  - AutoCloseable
- uid: system.fabric._cluster_management_client.activateNodeAsync(String)
  id: activateNodeAsync(String)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: activateNodeAsync(String nodeName)
  nameWithType: ClusterManagementClient.activateNodeAsync(String nodeName)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.activateNodeAsync(String nodeName)
  overload: system.fabric._cluster_management_client.activateNodeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 399
  package: system.fabric
  summary: >-
    <p>Activates a Service Fabric cluster node which is currently deactivated.</p>

    <p>

      <bold>Remarks:</bold>Once activated, the node will again become a viable target for placing new replicas, and any closed replicas remaining on the node will be opened. When this API completes it implies that the intent to activate has been registered by the system. It does not mean that the activation is complete. The progress of the operation can be determined by using the <ref refid="" kindref="compound">system.fabric.QueryClient#getNodeListAsync()</ref> API </p>
  syntax: &o2
    content: public CompletableFuture<Boolean> activateNodeAsync(String nodeName)
    parameters:
    - id: nodeName
      type: "26831127"
      description: <p>The Node to be Activated. </p>
    return:
      type: 7e53ac82
      description: <p>A Task that represents the asynchronous acknowledgment of the request. </p>
- uid: system.fabric._cluster_management_client.activateNodeAsync(String,Duration)
  id: activateNodeAsync(String,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: activateNodeAsync(String nodeName, Duration timeout)
  nameWithType: ClusterManagementClient.activateNodeAsync(String nodeName, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.activateNodeAsync(String nodeName, Duration timeout)
  overload: system.fabric._cluster_management_client.activateNodeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 421
  package: system.fabric
  summary: >-
    <p>Activates a Service Fabric cluster node which is currently deactivated.</p>

    <p>

      <bold>Remarks:</bold>Once activated, the node will again become a viable target for placing new replicas, and any closed replicas remaining on the node will be opened. When this API completes it implies that the intent to activate has been registered by the system. It does not mean that the activation is complete. The progress of the operation can be determined by using the <ref refid="" kindref="compound">system.fabric.QueryClient#getNodeListAsync()</ref> API </p>
  syntax:
    content: public CompletableFuture<Boolean> activateNodeAsync(String nodeName, Duration timeout)
    parameters:
    - id: nodeName
      type: "26831127"
      description: <p>The Node to be Activated. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>A Task that represents the asynchronous acknowledgment of the request. </p>
- uid: system.fabric._cluster_management_client.close()
  id: close()
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: close()
  nameWithType: ClusterManagementClient.close()
  fullName: void system.fabric.ClusterManagementClient.close()
  overload: system.fabric._cluster_management_client.close*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1252
  package: system.fabric
  syntax:
    content: public void close()
- uid: system.fabric._cluster_management_client.ClusterManagementClient(long)
  id: ClusterManagementClient(long)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: ClusterManagementClient(long clientPtr)
  nameWithType: ClusterManagementClient.ClusterManagementClient(long clientPtr)
  fullName: system.fabric.ClusterManagementClient.ClusterManagementClient(long clientPtr)
  overload: system.fabric._cluster_management_client.ClusterManagementClient*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 166
  package: system.fabric
  syntax:
    content: public ClusterManagementClient(long clientPtr)
    parameters:
    - id: clientPtr
      type: 0364520f
- uid: system.fabric._cluster_management_client.copyClusterPackage(String,String,String,String,String)
  id: copyClusterPackage(String,String,String,String,String)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: copyClusterPackage(String imageStoreConnectionString, String clusterManifestPath, String clusterManifestPathInImageStore, String codePackagePath, String codePackagePathInImageStore)
  nameWithType: ClusterManagementClient.copyClusterPackage(String imageStoreConnectionString, String clusterManifestPath, String clusterManifestPathInImageStore, String codePackagePath, String codePackagePathInImageStore)
  fullName: void system.fabric.ClusterManagementClient.copyClusterPackage(String imageStoreConnectionString, String clusterManifestPath, String clusterManifestPathInImageStore, String codePackagePath, String codePackagePathInImageStore)
  overload: system.fabric._cluster_management_client.copyClusterPackage*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1094
  package: system.fabric
  syntax:
    content: public void copyClusterPackage(String imageStoreConnectionString, String clusterManifestPath, String clusterManifestPathInImageStore, String codePackagePath, String codePackagePathInImageStore)
    parameters:
    - id: imageStoreConnectionString
      type: "26831127"
    - id: clusterManifestPath
      type: "26831127"
    - id: clusterManifestPathInImageStore
      type: "26831127"
    - id: codePackagePath
      type: "26831127"
    - id: codePackagePathInImageStore
      type: "26831127"
- uid: system.fabric._cluster_management_client.deactivateNodeAsync(String,NodeDeactivationIntent)
  id: deactivateNodeAsync(String,NodeDeactivationIntent)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: deactivateNodeAsync(String nodeName, NodeDeactivationIntent nodeDeactivationIntent)
  nameWithType: ClusterManagementClient.deactivateNodeAsync(String nodeName, NodeDeactivationIntent nodeDeactivationIntent)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.deactivateNodeAsync(String nodeName, NodeDeactivationIntent nodeDeactivationIntent)
  overload: system.fabric._cluster_management_client.deactivateNodeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 315
  package: system.fabric
  summary: >-
    <p>Deactivates a particular node with the specified.</p>

    <p>

      <bold>Remarks:</bold>When this API completes it implies that the intent to deactivate has been registered by the system. It does not mean that the deactivation is complete. The progress of the operation can be determined by using the <ref refid="" kindref="compound">system.fabric.QueryClient#getNodeListAsync()</ref> API Once the deactivation is in progress, the deactivation intent can be "increased" but not decreased (for example, a node which is was deactivated with the <ref refid="" kindref="compound">system.fabric.NodeDeactivationIntent#Pause</ref> intent can be deactivated further with <ref refid="" kindref="compound">system.fabric.NodeDeactivationIntent#Restart</ref>, but not the other way around. Nodes may be reactivated via <xref href="system.fabric._cluster_management_client.activateNodeAsync(String)" data-throw-if-not-resolved="false"></xref> any time after they are deactivated. If the deactivation is not complete this will cancel the deactivation. A node which goes down and comes back up while deactivated will still need to be reactivated before services will be placed on that node. Service Fabric ensures that deactivation is a 'safe' process. It performs several safety checks (see <xref href="system.fabric._safety_check_kind" data-throw-if-not-resolved="false"></xref>) to ensure that there is no loss of availability or data </p>
  syntax:
    content: public CompletableFuture<Boolean> deactivateNodeAsync(String nodeName, NodeDeactivationIntent nodeDeactivationIntent)
    parameters:
    - id: nodeName
      type: "26831127"
      description: <p>The name of the node to deactivate. </p>
    - id: nodeDeactivationIntent
      type: system.fabric._node_deactivation_intent
      description: <p>The <xref href="system.fabric._node_deactivation_intent" data-throw-if-not-resolved="false"></xref> for deactivating the node. </p>
    return:
      type: 7e53ac82
      description: <p>A Task that represents the asynchronous acknowledgment of the request. </p>
- uid: system.fabric._cluster_management_client.deactivateNodeAsync(String,NodeDeactivationIntent,Duration)
  id: deactivateNodeAsync(String,NodeDeactivationIntent,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: deactivateNodeAsync(String nodeName, NodeDeactivationIntent nodeDeactivationIntent, Duration timeout)
  nameWithType: ClusterManagementClient.deactivateNodeAsync(String nodeName, NodeDeactivationIntent nodeDeactivationIntent, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.deactivateNodeAsync(String nodeName, NodeDeactivationIntent nodeDeactivationIntent, Duration timeout)
  overload: system.fabric._cluster_management_client.deactivateNodeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 351
  package: system.fabric
  summary: >-
    <p>Deactivates a particular node with the specified.</p>

    <p>

      <bold>Remarks:</bold>When this API completes it implies that the intent to deactivate has been registered by the system. It does not mean that the deactivation is complete. The progress of the operation can be determined by using the <ref refid="" kindref="compound">system.fabric.QueryClient#getNodeListAsync()</ref> API Once the deactivation is in progress, the deactivation intent can be "increased" but not decreased (for example, a node which is was deactivated with the <ref refid="" kindref="compound">system.fabric.NodeDeactivationIntent#Pause</ref> intent can be deactivated further with <ref refid="" kindref="compound">system.fabric.NodeDeactivationIntent#Restart</ref>, but not the other way around. Nodes may be reactivated via <xref href="system.fabric._cluster_management_client.activateNodeAsync(String)" data-throw-if-not-resolved="false"></xref> any time after they are deactivated. If the deactivation is not complete this will cancel the deactivation. A node which goes down and comes back up while deactivated will still need to be reactivated before services will be placed on that node. Service Fabric ensures that deactivation is a 'safe' process. It performs several safety checks (see <xref href="system.fabric._safety_check_kind" data-throw-if-not-resolved="false"></xref>) to ensure that there is no loss of availability or data </p>
  syntax:
    content: public CompletableFuture<Boolean> deactivateNodeAsync(String nodeName, NodeDeactivationIntent nodeDeactivationIntent, Duration timeout)
    parameters:
    - id: nodeName
      type: "26831127"
      description: <p>The name of the node to deactivate. </p>
    - id: nodeDeactivationIntent
      type: system.fabric._node_deactivation_intent
      description: <p>The <xref href="system.fabric._node_deactivation_intent" data-throw-if-not-resolved="false"></xref> for deactivating the node. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>The deactivated node with the specified <xref href="system.fabric._node_deactivation_intent" data-throw-if-not-resolved="false"></xref>. </p>
- uid: system.fabric._cluster_management_client.getClusterManifestAsync()
  id: getClusterManifestAsync()
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: getClusterManifestAsync()
  nameWithType: ClusterManagementClient.getClusterManifestAsync()
  fullName: CompletableFuture<String> system.fabric.ClusterManagementClient.getClusterManifestAsync()
  overload: system.fabric._cluster_management_client.getClusterManifestAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 866
  package: system.fabric
  summary: >-
    <p>Gets the Service Fabric cluster manifest XML file as a string.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<String> getClusterManifestAsync()
    return:
      type: 06be942d
      description: <p>The Service Fabric cluster manifest XML file as a string. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: system.fabric._cluster_management_client.getClusterManifestAsync(Duration)
  id: getClusterManifestAsync(Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: getClusterManifestAsync(Duration timeout)
  nameWithType: ClusterManagementClient.getClusterManifestAsync(Duration timeout)
  fullName: CompletableFuture<String> system.fabric.ClusterManagementClient.getClusterManifestAsync(Duration timeout)
  overload: system.fabric._cluster_management_client.getClusterManifestAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 882
  package: system.fabric
  summary: >-
    <p>Gets the Service Fabric cluster manifest XML file as a string.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<String> getClusterManifestAsync(Duration timeout)
    parameters:
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 06be942d
      description: <p>The Service Fabric cluster manifest XML file as a string. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: system.fabric._cluster_management_client.getFabricUpgradeProgressAsync()
  id: getFabricUpgradeProgressAsync()
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: getFabricUpgradeProgressAsync()
  nameWithType: ClusterManagementClient.getFabricUpgradeProgressAsync()
  fullName: CompletableFuture<FabricUpgradeProgress> system.fabric.ClusterManagementClient.getFabricUpgradeProgressAsync()
  overload: system.fabric._cluster_management_client.getFabricUpgradeProgressAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 606
  package: system.fabric
  summary: >-
    <p>Returns the progress of a Service Fabric upgrade process.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<FabricUpgradeProgress> getFabricUpgradeProgressAsync()
    return:
      type: 9cdf14d0system.fabric._fabric_upgrade_progressa08ddfce
      description: <p>The progress of a Service Fabric upgrade process. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: system.fabric._cluster_management_client.getFabricUpgradeProgressAsync(Duration)
  id: getFabricUpgradeProgressAsync(Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: getFabricUpgradeProgressAsync(Duration timeout)
  nameWithType: ClusterManagementClient.getFabricUpgradeProgressAsync(Duration timeout)
  fullName: CompletableFuture<FabricUpgradeProgress> system.fabric.ClusterManagementClient.getFabricUpgradeProgressAsync(Duration timeout)
  overload: system.fabric._cluster_management_client.getFabricUpgradeProgressAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 622
  package: system.fabric
  summary: >-
    <p>Returns the progress of a Service Fabric upgrade process.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<FabricUpgradeProgress> getFabricUpgradeProgressAsync(Duration timeout)
    parameters:
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 9cdf14d0system.fabric._fabric_upgrade_progressa08ddfce
      description: <p>The progress of a Service Fabric upgrade process. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress)
  id: moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress fabricUpgradeProgress)
  nameWithType: ClusterManagementClient.moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress fabricUpgradeProgress)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress fabricUpgradeProgress)
  overload: system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 652
  package: system.fabric
  summary: >-
    <p>Instructs the Service Fabric to upgrade the next upgrade domain in the cluster if the current upgrade domain has been completed.</p>

    <p>

      <bold>Remarks:</bold>Similar to <xref href="system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress)" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public CompletableFuture<Boolean> moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress fabricUpgradeProgress)
    parameters:
    - id: fabricUpgradeProgress
      type: system.fabric._fabric_upgrade_progress
      description: <p>The fabric upgrade process object to use. </p>
    return:
      type: 7e53ac82
      description: <p>The upgraded domain in the cluster. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress,Duration)
  id: moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress fabricUpgradeProgress, Duration timeout)
  nameWithType: ClusterManagementClient.moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress fabricUpgradeProgress, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress fabricUpgradeProgress, Duration timeout)
  overload: system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 676
  package: system.fabric
  summary: >-
    <p>Instructs the Service Fabric to upgrade the next upgrade domain in the cluster if the current upgrade domain has been completed.</p>

    <p>

      <bold>Remarks:</bold>Similar to <xref href="system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress)" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public CompletableFuture<Boolean> moveNextFabricUpgradeDomainAsync(FabricUpgradeProgress fabricUpgradeProgress, Duration timeout)
    parameters:
    - id: fabricUpgradeProgress
      type: system.fabric._fabric_upgrade_progress
      description: <p>The fabric upgrade process object to use. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>The upgraded domain in the cluster. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync(String)
  id: moveNextFabricUpgradeDomainAsync(String)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: moveNextFabricUpgradeDomainAsync(String nextUpgradeDomain)
  nameWithType: ClusterManagementClient.moveNextFabricUpgradeDomainAsync(String nextUpgradeDomain)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.moveNextFabricUpgradeDomainAsync(String nextUpgradeDomain)
  overload: system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 715
  package: system.fabric
  summary: >-
    <p>Instructs the Service Fabric to upgrade the next upgrade domain in the cluster if the current upgrade domain has been completed.</p>

    <p></p>

    <p>

      <bold>Remarks:</bold>Similar to <xref href="system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress)" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public CompletableFuture<Boolean> moveNextFabricUpgradeDomainAsync(String nextUpgradeDomain)
    parameters:
    - id: nextUpgradeDomain
      type: "26831127"
      description: <p>The fabric upgrade process object to use. </p>
    return:
      type: 7e53ac82
      description: <p>The upgraded domain in the cluster. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object.</p>
- uid: system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync(String,Duration)
  id: moveNextFabricUpgradeDomainAsync(String,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: moveNextFabricUpgradeDomainAsync(String nextUpgradeDomain, Duration timeout)
  nameWithType: ClusterManagementClient.moveNextFabricUpgradeDomainAsync(String nextUpgradeDomain, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.moveNextFabricUpgradeDomainAsync(String nextUpgradeDomain, Duration timeout)
  overload: system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 740
  package: system.fabric
  summary: >-
    <p>Instructs the Service Fabric to upgrade the next upgrade domain in the cluster if the current upgrade domain has been completed.</p>

    <p></p>

    <p>

      <bold>Remarks:</bold>Similar to <xref href="system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress)" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public CompletableFuture<Boolean> moveNextFabricUpgradeDomainAsync(String nextUpgradeDomain, Duration timeout)
    parameters:
    - id: nextUpgradeDomain
      type: "26831127"
      description: <p>The fabric upgrade process object to use. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>The upgraded domain in the cluster. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object.</p>
- uid: system.fabric._cluster_management_client.provisionFabricAsync(String,String)
  id: provisionFabricAsync(String,String)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: provisionFabricAsync(String codeFilePath, String clusterManifestFilepath)
  nameWithType: ClusterManagementClient.provisionFabricAsync(String codeFilePath, String clusterManifestFilepath)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.provisionFabricAsync(String codeFilePath, String clusterManifestFilepath)
  overload: system.fabric._cluster_management_client.provisionFabricAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 470
  package: system.fabric
  summary: >-
    <p>Provisions the Service Fabric.</p>

    <p>

      <bold>Remarks:</bold> * A null value is permitted for either the patchFilePath or the clusterManifestFilePath parameter. A null value cannot be used for both parameters. This will upload the patch file and/or cluster manifest file to the image store location. The image store location is specified as a configuration setting in the cluster manifest that was provided when the cluster was created. Cluster manifest validation will occur within the context of this call. </p>
  syntax:
    content: public CompletableFuture<Boolean> provisionFabricAsync(String codeFilePath, String clusterManifestFilepath)
    parameters:
    - id: codeFilePath
      type: "26831127"
      description: <p>The path to the update patch file. </p>
    - id: clusterManifestFilepath
      type: "26831127"
      description: <p>The path to the cluster manifest. A null value is permitted for either the </p>
    return:
      type: 7e53ac82
      description: <p>The provisioned Service Fabric. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: system.fabric._cluster_management_client.provisionFabricAsync(String,String,Duration)
  id: provisionFabricAsync(String,String,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: provisionFabricAsync(String codeFilePath, String clusterManifestFilepath, Duration timeout)
  nameWithType: ClusterManagementClient.provisionFabricAsync(String codeFilePath, String clusterManifestFilepath, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.provisionFabricAsync(String codeFilePath, String clusterManifestFilepath, Duration timeout)
  overload: system.fabric._cluster_management_client.provisionFabricAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 508
  package: system.fabric
  summary: >-
    <p>Provisions the Service Fabric.</p>

    <p>

      <bold>Remarks:</bold> * A null value is permitted for either the patchFilePath or the clusterManifestFilePath parameter. A null value cannot be used for both parameters. This will upload the patch file and/or cluster manifest file to the image store location. The image store location is specified as a configuration setting in the cluster manifest that was provided when the cluster was created. Cluster manifest validation will occur within the context of this call. </p>
  syntax:
    content: public CompletableFuture<Boolean> provisionFabricAsync(String codeFilePath, String clusterManifestFilepath, Duration timeout)
    parameters:
    - id: codeFilePath
      type: "26831127"
      description: <p>The path to the update patch file. </p>
    - id: clusterManifestFilepath
      type: "26831127"
      description: <p>The path to the cluster manifest. A null value is permitted for either the </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>The provisioned Service Fabric. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: system.fabric._cluster_management_client.recoverPartitionAsync(UUID)
  id: recoverPartitionAsync(UUID)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: recoverPartitionAsync(UUID partitionId)
  nameWithType: ClusterManagementClient.recoverPartitionAsync(UUID partitionId)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.recoverPartitionAsync(UUID partitionId)
  overload: system.fabric._cluster_management_client.recoverPartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 907
  package: system.fabric
  summary: >-
    <p>Indicates to the Service Fabric cluster that it should attempt to recover a specific partition which is currently stuck in quorum loss.</p>

    <p>

      <bold>Remarks:</bold> This operation should only be performed if it is known that the replicas that are down cannot be recovered. Incorrect use of this API can cause potential data loss. </p>
  syntax:
    content: public CompletableFuture<Boolean> recoverPartitionAsync(UUID partitionId)
    parameters:
    - id: partitionId
      type: add9545a
      description: <p>The partition id to recover </p>
    return:
      type: 7e53ac82
      description: <p>A task representing acknowledgement of the intent. </p>
- uid: system.fabric._cluster_management_client.recoverPartitionAsync(UUID,Duration)
  id: recoverPartitionAsync(UUID,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: recoverPartitionAsync(UUID partitionId, Duration timeout)
  nameWithType: ClusterManagementClient.recoverPartitionAsync(UUID partitionId, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.recoverPartitionAsync(UUID partitionId, Duration timeout)
  overload: system.fabric._cluster_management_client.recoverPartitionAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 927
  package: system.fabric
  summary: >-
    <p>Indicates to the Service Fabric cluster that it should attempt to recover a specific partition which is currently stuck in quorum loss.</p>

    <p>

      <bold>Remarks:</bold> This operation should only be performed if it is known that the replicas that are down cannot be recovered. Incorrect use of this API can cause potential data loss. </p>
  syntax:
    content: public CompletableFuture<Boolean> recoverPartitionAsync(UUID partitionId, Duration timeout)
    parameters:
    - id: partitionId
      type: add9545a
      description: <p>The partition id to recover </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>A task representing acknowledgement of the intent. </p>
- uid: system.fabric._cluster_management_client.recoverPartitionsAsync()
  id: recoverPartitionsAsync()
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: recoverPartitionsAsync()
  nameWithType: ClusterManagementClient.recoverPartitionsAsync()
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.recoverPartitionsAsync()
  overload: system.fabric._cluster_management_client.recoverPartitionsAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 258
  package: system.fabric
  summary: >-
    <p>Indicates to the Service Fabric cluster that it should attempt to recover any services (including system services) which are currently stuck in quorum loss.</p>

    <p>

      <bold>Remarks:</bold>This operation should only be performed if it is known that the replicas that are down cannot be recovered. Incorrect use of this API can cause potential data loss. </p>
  syntax:
    content: public CompletableFuture<Boolean> recoverPartitionsAsync()
    return:
      type: 7e53ac82
      description: <p>A task representing acknowledgement of the intent. </p>
- uid: system.fabric._cluster_management_client.recoverPartitionsAsync(Duration)
  id: recoverPartitionsAsync(Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: recoverPartitionsAsync(Duration timeout)
  nameWithType: ClusterManagementClient.recoverPartitionsAsync(Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.recoverPartitionsAsync(Duration timeout)
  overload: system.fabric._cluster_management_client.recoverPartitionsAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 276
  package: system.fabric
  summary: >-
    <p>Indicates to the Service Fabric cluster that it should attempt to recover any services (including system services) which are currently stuck in quorum loss.</p>

    <p>

      <bold>Remarks:</bold>This operation should only be performed if it is known that the replicas that are down cannot be recovered. Incorrect use of this API can cause potential data loss. </p>
  syntax:
    content: public CompletableFuture<Boolean> recoverPartitionsAsync(Duration timeout)
    parameters:
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>A task representing acknowledgement of the intent. </p>
- uid: system.fabric._cluster_management_client.recoverServicePartitionsAsync(URI)
  id: recoverServicePartitionsAsync(URI)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: recoverServicePartitionsAsync(URI serviceName)
  nameWithType: ClusterManagementClient.recoverServicePartitionsAsync(URI serviceName)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.recoverServicePartitionsAsync(URI serviceName)
  overload: system.fabric._cluster_management_client.recoverServicePartitionsAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 962
  package: system.fabric
  summary: >-
    <p>Indicates to the Service Fabric cluster that it should attempt to recover the specified service which is currently stuck in quorum loss.</p>

    <p>

      <bold>Remarks:</bold>This operation should only be performed if it is known that the replicas that are down cannot be recovered. Incorrect use of this API can cause potential data loss. </p>
  syntax:
    content: public CompletableFuture<Boolean> recoverServicePartitionsAsync(URI serviceName)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The name of the service to recover. </p>
    return:
      type: 7e53ac82
      description: <p>A task representing acknowledgement of the intent. </p>
- uid: system.fabric._cluster_management_client.recoverServicePartitionsAsync(URI,Duration)
  id: recoverServicePartitionsAsync(URI,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: recoverServicePartitionsAsync(URI serviceName, Duration timeout)
  nameWithType: ClusterManagementClient.recoverServicePartitionsAsync(URI serviceName, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.recoverServicePartitionsAsync(URI serviceName, Duration timeout)
  overload: system.fabric._cluster_management_client.recoverServicePartitionsAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 982
  package: system.fabric
  summary: >-
    <p>Indicates to the Service Fabric cluster that it should attempt to recover the specified service which is currently stuck in quorum loss.</p>

    <p>

      <bold>Remarks:</bold>This operation should only be performed if it is known that the replicas that are down cannot be recovered. Incorrect use of this API can cause potential data loss. </p>
  syntax:
    content: public CompletableFuture<Boolean> recoverServicePartitionsAsync(URI serviceName, Duration timeout)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>The name of the service to recover. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>A task representing acknowledgement of the intent. </p>
- uid: system.fabric._cluster_management_client.recoverSystemPartitionsAsync()
  id: recoverSystemPartitionsAsync()
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: recoverSystemPartitionsAsync()
  nameWithType: ClusterManagementClient.recoverSystemPartitionsAsync()
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.recoverSystemPartitionsAsync()
  overload: system.fabric._cluster_management_client.recoverSystemPartitionsAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1015
  package: system.fabric
  summary: >-
    <p>Indicates to the Service Fabric cluster that it should attempt to recover the system services which are currently stuck in quorum loss.</p>

    <p>

      <bold>Remarks:</bold>This operation should only be performed if it is known that the replicas that are down cannot be recovered. Incorrect use of this API can cause potential data loss. </p>
  syntax:
    content: public CompletableFuture<Boolean> recoverSystemPartitionsAsync()
    return:
      type: 7e53ac82
      description: <p>A task representing acknowledgement of the intent. </p>
- uid: system.fabric._cluster_management_client.recoverSystemPartitionsAsync(Duration)
  id: recoverSystemPartitionsAsync(Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: recoverSystemPartitionsAsync(Duration timeout)
  nameWithType: ClusterManagementClient.recoverSystemPartitionsAsync(Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.recoverSystemPartitionsAsync(Duration timeout)
  overload: system.fabric._cluster_management_client.recoverSystemPartitionsAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1033
  package: system.fabric
  summary: >-
    <p>Indicates to the Service Fabric cluster that it should attempt to recover the system services which are currently stuck in quorum loss.</p>

    <p>

      <bold>Remarks:</bold>This operation should only be performed if it is known that the replicas that are down cannot be recovered. Incorrect use of this API can cause potential data loss. </p>
  syntax:
    content: public CompletableFuture<Boolean> recoverSystemPartitionsAsync(Duration timeout)
    parameters:
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>A task representing acknowledgement of the intent. </p>
- uid: system.fabric._cluster_management_client.removeClusterPackage(String,String,String)
  id: removeClusterPackage(String,String,String)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: removeClusterPackage(String imageStoreConnectionString, String clusterManifestPathInImageStore, String codePackagePathInImageStore)
  nameWithType: ClusterManagementClient.removeClusterPackage(String imageStoreConnectionString, String clusterManifestPathInImageStore, String codePackagePathInImageStore)
  fullName: void system.fabric.ClusterManagementClient.removeClusterPackage(String imageStoreConnectionString, String clusterManifestPathInImageStore, String codePackagePathInImageStore)
  overload: system.fabric._cluster_management_client.removeClusterPackage*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1103
  package: system.fabric
  syntax:
    content: public void removeClusterPackage(String imageStoreConnectionString, String clusterManifestPathInImageStore, String codePackagePathInImageStore)
    parameters:
    - id: imageStoreConnectionString
      type: "26831127"
    - id: clusterManifestPathInImageStore
      type: "26831127"
    - id: codePackagePathInImageStore
      type: "26831127"
- uid: system.fabric._cluster_management_client.removeNodeStateAsync(String)
  id: removeNodeStateAsync(String)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: removeNodeStateAsync(String nodeName)
  nameWithType: ClusterManagementClient.removeNodeStateAsync(String nodeName)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.removeNodeStateAsync(String nodeName)
  overload: system.fabric._cluster_management_client.removeNodeStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 195
  package: system.fabric
  summary: >-
    <p>Indicates that the persisted data of a node is lost (e.g., due to disk failure, or reimage, etc.), and that Service Fabric should treat any services or state on that node as lost and unrecoverable.</p>

    <p></p>
  syntax: &o1
    content: public CompletableFuture<Boolean> removeNodeStateAsync(String nodeName)
    parameters:
    - id: nodeName
      type: "26831127"
      description: <p>The name of the node which has been permanently lost. </p>
    return:
      type: 7e53ac82
      description: >-
        <p>A task representing the operation. <verbatim>    &lt;p&gt;

            &lt;b&gt;Remarks:&lt;/b&gt;After a node goes down, Service Fabric will keep track of replicas of

            persisted services on that node as they have state on that node. In cases where the

            administrator knows that the persisted state on a node has been permanently lost the

            {@link system.fabric.ClusterManagementClient#removeNodeStateAsync(String)} method

            should be called ... to notify Service Fabric that the state on the node is gone (or

            the node can never come back with the state it had). This instructs Service Fabric to

            stop waiting for that node (and any persisted replicas on that node) to recover.

            NOTE: This API must be called only after it has been determined that the state on

            that node has been lost. If this API is called and then the node comes back with its

            state intact it is Undefined Behavior

            &lt;/p&gt;</verbatim></p>
- uid: system.fabric._cluster_management_client.removeNodeStateAsync(String,Duration)
  id: removeNodeStateAsync(String,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: removeNodeStateAsync(String nodeName, Duration timeout)
  nameWithType: ClusterManagementClient.removeNodeStateAsync(String nodeName, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.removeNodeStateAsync(String nodeName, Duration timeout)
  overload: system.fabric._cluster_management_client.removeNodeStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 224
  package: system.fabric
  summary: >-
    <p>Indicates that the persisted data of a node is lost (e.g., due to disk failure, or reimage, etc.), and that Service Fabric should treat any services or state on that node as lost and unrecoverable.</p>

    <p>

      <bold>Remarks:</bold>After a node goes down, Service Fabric will keep track of replicas of persisted services on that node as they have state on that node. In cases where the administrator knows that the persisted state on a node has been permanently lost the <xref href="system.fabric._cluster_management_client.removeNodeStateAsync(String)" data-throw-if-not-resolved="false"></xref> method should be called ... to notify Service Fabric that the state on the node is gone (or the node can never come back with the state it had). This instructs Service Fabric to stop waiting for that node (and any persisted replicas on that node) to recover. NOTE: This API must be called only after it has been determined that the state on that node has been lost. If this API is called and then the node comes back with its state intact it is Undefined Behavior </p>
  syntax:
    content: public CompletableFuture<Boolean> removeNodeStateAsync(String nodeName, Duration timeout)
    parameters:
    - id: nodeName
      type: "26831127"
      description: <p>The name of the node which has been permanently lost. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>A task representing the operation. </p>
- uid: system.fabric._cluster_management_client.resetPartitionLoadAsync(UUID)
  id: resetPartitionLoadAsync(UUID)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: resetPartitionLoadAsync(UUID partitionId)
  nameWithType: ClusterManagementClient.resetPartitionLoadAsync(UUID partitionId)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.resetPartitionLoadAsync(UUID partitionId)
  overload: system.fabric._cluster_management_client.resetPartitionLoadAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1147
  package: system.fabric
  summary: >-
    <p>Resets a given partition's load</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> resetPartitionLoadAsync(UUID partitionId)
    parameters:
    - id: partitionId
      type: add9545a
      description: <p>The partition Id represented as a Guid </p>
    return:
      type: 7e53ac82
      description: <p>The task associated with this async method. </p>
- uid: system.fabric._cluster_management_client.resetPartitionLoadAsync(UUID,Duration)
  id: resetPartitionLoadAsync(UUID,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: resetPartitionLoadAsync(UUID partitionId, Duration timeout)
  nameWithType: ClusterManagementClient.resetPartitionLoadAsync(UUID partitionId, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.resetPartitionLoadAsync(UUID partitionId, Duration timeout)
  overload: system.fabric._cluster_management_client.resetPartitionLoadAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1161
  package: system.fabric
  summary: >-
    <p>Resets a given partition's load</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> resetPartitionLoadAsync(UUID partitionId, Duration timeout)
    parameters:
    - id: partitionId
      type: add9545a
      description: <p>The partition Id represented as a Guid </p>
    - id: timeout
      type: e02a2de0
      description: <p>The length of time within which the async method must complete in order for the method to not time out. </p>
    return:
      type: 7e53ac82
      description: <p>The task associated with this async method. </p>
- uid: system.fabric._cluster_management_client.rollbackFabricUpgradeAsync()
  id: rollbackFabricUpgradeAsync()
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: rollbackFabricUpgradeAsync()
  nameWithType: ClusterManagementClient.rollbackFabricUpgradeAsync()
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.rollbackFabricUpgradeAsync()
  overload: system.fabric._cluster_management_client.rollbackFabricUpgradeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1116
  package: system.fabric
  summary: >-
    <p>Rolls back the Service Fabric to upgrade the operation.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> rollbackFabricUpgradeAsync()
    return:
      type: 7e53ac82
      description: <p>The rollback Service Fabric to upgrade the operation. </p>
- uid: system.fabric._cluster_management_client.rollbackFabricUpgradeAsync(Duration)
  id: rollbackFabricUpgradeAsync(Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: rollbackFabricUpgradeAsync(Duration timeout)
  nameWithType: ClusterManagementClient.rollbackFabricUpgradeAsync(Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.rollbackFabricUpgradeAsync(Duration timeout)
  overload: system.fabric._cluster_management_client.rollbackFabricUpgradeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1128
  package: system.fabric
  summary: >-
    <p>Rolls back the Service Fabric to upgrade the operation.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> rollbackFabricUpgradeAsync(Duration timeout)
    parameters:
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>The rollback Service Fabric to upgrade the operation. </p>
- uid: system.fabric._cluster_management_client.toggleVerboseServicePlacementHealthReportingAsync(boolean)
  id: toggleVerboseServicePlacementHealthReportingAsync(boolean)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: toggleVerboseServicePlacementHealthReportingAsync(boolean enabled)
  nameWithType: ClusterManagementClient.toggleVerboseServicePlacementHealthReportingAsync(boolean enabled)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.toggleVerboseServicePlacementHealthReportingAsync(boolean enabled)
  overload: system.fabric._cluster_management_client.toggleVerboseServicePlacementHealthReportingAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1201
  package: system.fabric
  summary: >-
    <p>Toggles whether the Cluster Resource Balancer will report a health warning when it's unable to place a replica.</p>

    <p>

      <bold>Remarks:</bold>If this method is called twice with the value false, it clears from memory the reports that would potentially have been emitted. If this method is called with the value true, the Cluster Resource Balancer will report a health warning when it's unable to place a replica. If such health warnings are blocking a monitored upgrade's health checks the toggle can be switched off. </p>
  syntax:
    content: public CompletableFuture<Boolean> toggleVerboseServicePlacementHealthReportingAsync(boolean enabled)
    parameters:
    - id: enabled
      type: 4fc6e284
      description: <p>A boolean value, which if true causes reporting when a replica is unabled to be placed. </p>
    return:
      type: 7e53ac82
      description: <p>The task associated with this async method. </p>
- uid: system.fabric._cluster_management_client.toggleVerboseServicePlacementHealthReportingAsync(boolean,Duration)
  id: toggleVerboseServicePlacementHealthReportingAsync(boolean,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: toggleVerboseServicePlacementHealthReportingAsync(boolean enabled, Duration timeout)
  nameWithType: ClusterManagementClient.toggleVerboseServicePlacementHealthReportingAsync(boolean enabled, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.toggleVerboseServicePlacementHealthReportingAsync(boolean enabled, Duration timeout)
  overload: system.fabric._cluster_management_client.toggleVerboseServicePlacementHealthReportingAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1226
  package: system.fabric
  summary: >-
    <p>Toggles whether the Cluster Resource Balancer will report a health warning when it's unable to place a replica.</p>

    <p>

      <bold>Remarks:</bold>If this method is called twice with the value false, it clears from memory the reports that would potentially have been emitted. If this method is called with the value true, the Cluster Resource Balancer will report a health warning when it's unable to place a replica. If such health warnings are blocking a monitored upgrade's health checks the toggle can be switched off. </p>
  syntax:
    content: public CompletableFuture<Boolean> toggleVerboseServicePlacementHealthReportingAsync(boolean enabled, Duration timeout)
    parameters:
    - id: enabled
      type: 4fc6e284
      description: <p>A boolean value, which if true causes reporting when a replica is unabled to be placed. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The length of time within which the async method must complete in order for the method to not time out. </p>
    return:
      type: 7e53ac82
      description: <p>The task associated with this async method. </p>
- uid: system.fabric._cluster_management_client.unprovisionFabricAsync(String,String)
  id: unprovisionFabricAsync(String,String)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: unprovisionFabricAsync(String codeVersion, String configVersion)
  nameWithType: ClusterManagementClient.unprovisionFabricAsync(String codeVersion, String configVersion)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.unprovisionFabricAsync(String codeVersion, String configVersion)
  overload: system.fabric._cluster_management_client.unprovisionFabricAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 791
  package: system.fabric
  summary: >-
    <p>Unprovisions the Service Fabric.</p>

    <p>

      <bold>Remarks:</bold> A null value is permitted for either the codeVersion parameter or the configVersion parameter. A null value cannot be used for both parameters. This will delete the patch file and/or cluster manifest file from the image store location. The image store location is specified as a configuration setting in the cluster manifest that was provided when the cluster was created. </p>
  syntax:
    content: public CompletableFuture<Boolean> unprovisionFabricAsync(String codeVersion, String configVersion)
    parameters:
    - id: codeVersion
      type: "26831127"
      description: <p>The code version to unprovision. </p>
    - id: configVersion
      type: "26831127"
      description: <p>The configuration version to unprovision. A null value is permitted for either the </p>
    return:
      type: 7e53ac82
      description: <p>The unprovisioned Service Fabric. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: system.fabric._cluster_management_client.unprovisionFabricAsync(String,String,Duration)
  id: unprovisionFabricAsync(String,String,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: unprovisionFabricAsync(String codeVersion, String configVersion, Duration timeout)
  nameWithType: ClusterManagementClient.unprovisionFabricAsync(String codeVersion, String configVersion, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.unprovisionFabricAsync(String codeVersion, String configVersion, Duration timeout)
  overload: system.fabric._cluster_management_client.unprovisionFabricAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 823
  package: system.fabric
  summary: >-
    <p>Unprovisions the Service Fabric.</p>

    <p>

      <bold>Remarks:</bold> A null value is permitted for either the codeVersion parameter or the configVersion parameter. A null value cannot be used for both parameters. This will delete the patch file and/or cluster manifest file from the image store location. The image store location is specified as a configuration setting in the cluster manifest that was provided when the cluster was created. </p>
  syntax:
    content: public CompletableFuture<Boolean> unprovisionFabricAsync(String codeVersion, String configVersion, Duration timeout)
    parameters:
    - id: codeVersion
      type: "26831127"
      description: <p>The code version to unprovision. </p>
    - id: configVersion
      type: "26831127"
      description: <p>The configuration version to unprovision. A null value is permitted for either the </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>The unprovisioned Service Fabric. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: system.fabric._cluster_management_client.updateFabricUpgradeAsync(FabricUpgradeUpdateDescription)
  id: updateFabricUpgradeAsync(FabricUpgradeUpdateDescription)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: updateFabricUpgradeAsync(FabricUpgradeUpdateDescription description)
  nameWithType: ClusterManagementClient.updateFabricUpgradeAsync(FabricUpgradeUpdateDescription description)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.updateFabricUpgradeAsync(FabricUpgradeUpdateDescription description)
  overload: system.fabric._cluster_management_client.updateFabricUpgradeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1053
  package: system.fabric
  summary: >-
    <p>Modifies the upgrade parameters that describe the behavior of the current cluster upgrade.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> updateFabricUpgradeAsync(FabricUpgradeUpdateDescription description)
    parameters:
    - id: description
      type: system.fabric._fabric_upgrade_update_description
      description: <p>Description of the new upgrade parameters to apply. </p>
    return:
      type: 7e53ac82
      description: <p>The current cluster upgrade. </p>
- uid: system.fabric._cluster_management_client.updateFabricUpgradeAsync(FabricUpgradeUpdateDescription,Duration)
  id: updateFabricUpgradeAsync(FabricUpgradeUpdateDescription,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: updateFabricUpgradeAsync(FabricUpgradeUpdateDescription description, Duration timeout)
  nameWithType: ClusterManagementClient.updateFabricUpgradeAsync(FabricUpgradeUpdateDescription description, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.updateFabricUpgradeAsync(FabricUpgradeUpdateDescription description, Duration timeout)
  overload: system.fabric._cluster_management_client.updateFabricUpgradeAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 1068
  package: system.fabric
  summary: >-
    <p>Modifies the upgrade parameters that describe the behavior of the current cluster upgrade.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> updateFabricUpgradeAsync(FabricUpgradeUpdateDescription description, Duration timeout)
    parameters:
    - id: description
      type: system.fabric._fabric_upgrade_update_description
      description: <p>Description of the new upgrade parameters to apply. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>The current cluster upgrade. </p>
- uid: system.fabric._cluster_management_client.upgradeFabricAsync(FabricUpgradeDescription)
  id: upgradeFabricAsync(FabricUpgradeDescription)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: upgradeFabricAsync(FabricUpgradeDescription upgradeDescription)
  nameWithType: ClusterManagementClient.upgradeFabricAsync(FabricUpgradeDescription upgradeDescription)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.upgradeFabricAsync(FabricUpgradeDescription upgradeDescription)
  overload: system.fabric._cluster_management_client.upgradeFabricAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 553
  package: system.fabric
  summary: >-
    <p>Upgrades the Service Fabric.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> upgradeFabricAsync(FabricUpgradeDescription upgradeDescription)
    parameters:
    - id: upgradeDescription
      type: system.fabric._fabric_upgrade_description
      description: <p>The description of the upgrade. </p>
    return:
      type: 7e53ac82
      description: <p>The upgraded Service Fabric. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: system.fabric._cluster_management_client.upgradeFabricAsync(FabricUpgradeDescription,Duration)
  id: upgradeFabricAsync(FabricUpgradeDescription,Duration)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  langs:
  - java
  name: upgradeFabricAsync(FabricUpgradeDescription upgradeDescription, Duration timeout)
  nameWithType: ClusterManagementClient.upgradeFabricAsync(FabricUpgradeDescription upgradeDescription, Duration timeout)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.upgradeFabricAsync(FabricUpgradeDescription upgradeDescription, Duration timeout)
  overload: system.fabric._cluster_management_client.upgradeFabricAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ClusterManagementClient.java
    startLine: 571
  package: system.fabric
  summary: >-
    <p>Upgrades the Service Fabric.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> upgradeFabricAsync(FabricUpgradeDescription upgradeDescription, Duration timeout)
    parameters:
    - id: upgradeDescription
      type: system.fabric._fabric_upgrade_description
      description: <p>The description of the upgrade. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timespan that defines the maximum amount of time will allow this operation to continue before returning a <ref refid="" kindref="compound">java.util.concurrent.TimeoutException</ref></p>
    return:
      type: 7e53ac82
      description: <p>The upgraded Service Fabric. </p>
  exceptions:
  - type: system.fabric.exception._fabric_object_closed_exception
    description: <p>The <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object is in a closed state. Dispose of the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object you are using and instantiate a new <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> object. </p>
references:
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric._cluster_management_client.ClusterManagementClient*
  name: ClusterManagementClient
  nameWithType: ClusterManagementClient.ClusterManagementClient
  fullName: system.fabric.ClusterManagementClient.ClusterManagementClient
  package: system.fabric
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: system.fabric._cluster_management_client.removeNodeStateAsync*
  name: removeNodeStateAsync
  nameWithType: ClusterManagementClient.removeNodeStateAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.removeNodeStateAsync
  package: system.fabric
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: system.fabric._cluster_management_client.recoverPartitionsAsync*
  name: recoverPartitionsAsync
  nameWithType: ClusterManagementClient.recoverPartitionsAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.recoverPartitionsAsync
  package: system.fabric
- uid: system.fabric._cluster_management_client.deactivateNodeAsync*
  name: deactivateNodeAsync
  nameWithType: ClusterManagementClient.deactivateNodeAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.deactivateNodeAsync
  package: system.fabric
- uid: system.fabric._cluster_management_client.activateNodeAsync*
  name: activateNodeAsync
  nameWithType: ClusterManagementClient.activateNodeAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.activateNodeAsync
  package: system.fabric
- uid: system.fabric._cluster_management_client.provisionFabricAsync*
  name: provisionFabricAsync
  nameWithType: ClusterManagementClient.provisionFabricAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.provisionFabricAsync
  package: system.fabric
- uid: system.fabric._cluster_management_client.upgradeFabricAsync*
  name: upgradeFabricAsync
  nameWithType: ClusterManagementClient.upgradeFabricAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.upgradeFabricAsync
  package: system.fabric
- uid: 9cdf14d0system.fabric._fabric_upgrade_progressa08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: system.fabric._fabric_upgrade_progress
    name: FabricUpgradeProgress
    fullName: system.fabric.FabricUpgradeProgress
    href: system.fabric._fabric_upgrade_progress.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric._cluster_management_client.getFabricUpgradeProgressAsync*
  name: getFabricUpgradeProgressAsync
  nameWithType: ClusterManagementClient.getFabricUpgradeProgressAsync
  fullName: CompletableFuture<FabricUpgradeProgress> system.fabric.ClusterManagementClient.getFabricUpgradeProgressAsync
  package: system.fabric
- uid: system.fabric._cluster_management_client.moveNextFabricUpgradeDomainAsync*
  name: moveNextFabricUpgradeDomainAsync
  nameWithType: ClusterManagementClient.moveNextFabricUpgradeDomainAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.moveNextFabricUpgradeDomainAsync
  package: system.fabric
- uid: system.fabric._cluster_management_client.unprovisionFabricAsync*
  name: unprovisionFabricAsync
  nameWithType: ClusterManagementClient.unprovisionFabricAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.unprovisionFabricAsync
  package: system.fabric
- uid: 06be942d
  spec.java:
  - name: CompletableFuture<String>
    fullName: CompletableFuture<String>
- uid: system.fabric._cluster_management_client.getClusterManifestAsync*
  name: getClusterManifestAsync
  nameWithType: ClusterManagementClient.getClusterManifestAsync
  fullName: CompletableFuture<String> system.fabric.ClusterManagementClient.getClusterManifestAsync
  package: system.fabric
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: system.fabric._cluster_management_client.recoverPartitionAsync*
  name: recoverPartitionAsync
  nameWithType: ClusterManagementClient.recoverPartitionAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.recoverPartitionAsync
  package: system.fabric
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: system.fabric._cluster_management_client.recoverServicePartitionsAsync*
  name: recoverServicePartitionsAsync
  nameWithType: ClusterManagementClient.recoverServicePartitionsAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.recoverServicePartitionsAsync
  package: system.fabric
- uid: system.fabric._cluster_management_client.recoverSystemPartitionsAsync*
  name: recoverSystemPartitionsAsync
  nameWithType: ClusterManagementClient.recoverSystemPartitionsAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.recoverSystemPartitionsAsync
  package: system.fabric
- uid: system.fabric._cluster_management_client.updateFabricUpgradeAsync*
  name: updateFabricUpgradeAsync
  nameWithType: ClusterManagementClient.updateFabricUpgradeAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.updateFabricUpgradeAsync
  package: system.fabric
- uid: system.fabric._cluster_management_client.copyClusterPackage*
  name: copyClusterPackage
  nameWithType: ClusterManagementClient.copyClusterPackage
  fullName: void system.fabric.ClusterManagementClient.copyClusterPackage
  package: system.fabric
- uid: system.fabric._cluster_management_client.removeClusterPackage*
  name: removeClusterPackage
  nameWithType: ClusterManagementClient.removeClusterPackage
  fullName: void system.fabric.ClusterManagementClient.removeClusterPackage
  package: system.fabric
- uid: system.fabric._cluster_management_client.rollbackFabricUpgradeAsync*
  name: rollbackFabricUpgradeAsync
  nameWithType: ClusterManagementClient.rollbackFabricUpgradeAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.rollbackFabricUpgradeAsync
  package: system.fabric
- uid: system.fabric._cluster_management_client.resetPartitionLoadAsync*
  name: resetPartitionLoadAsync
  nameWithType: ClusterManagementClient.resetPartitionLoadAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.resetPartitionLoadAsync
  package: system.fabric
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: system.fabric._cluster_management_client.toggleVerboseServicePlacementHealthReportingAsync*
  name: toggleVerboseServicePlacementHealthReportingAsync
  nameWithType: ClusterManagementClient.toggleVerboseServicePlacementHealthReportingAsync
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.toggleVerboseServicePlacementHealthReportingAsync
  package: system.fabric
- uid: system.fabric._cluster_management_client.close*
  name: close
  nameWithType: ClusterManagementClient.close
  fullName: void system.fabric.ClusterManagementClient.close
  package: system.fabric
- uid: system.fabric.interop._native_async_callback
  parent: system.fabric.interop
  href: system.fabric.interop._native_async_callback.yml
  name: NativeAsyncCallback
  nameWithType: NativeAsyncCallback
  fullName: system.fabric.interop.NativeAsyncCallback
  type: Interface
  syntax:
    content: public interface NativeAsyncCallback
- uid: system.fabric._fabric_upgrade_progress
  parent: system.fabric
  href: system.fabric._fabric_upgrade_progress.yml
  name: FabricUpgradeProgress
  nameWithType: FabricUpgradeProgress
  fullName: system.fabric.FabricUpgradeProgress
  type: Class
  summary: <p>Encapsulates the progress of a Service Fabric upgrade. </p>
  syntax:
    content: public class FabricUpgradeProgress
- uid: system.fabric._node_deactivation_intent
  parent: system.fabric
  href: system.fabric._node_deactivation_intent.yml
  name: NodeDeactivationIntent
  nameWithType: NodeDeactivationIntent
  fullName: system.fabric.NodeDeactivationIntent
  type: Enum
  summary: >-
    <p>Enum stating possible node deactivation intents.</p>

    <p></p>
  syntax:
    content: public enum NodeDeactivationIntent
- uid: system.fabric._fabric_upgrade_description
  parent: system.fabric
  href: system.fabric._fabric_upgrade_description.yml
  name: FabricUpgradeDescription
  nameWithType: FabricUpgradeDescription
  fullName: system.fabric.FabricUpgradeDescription
  type: Class
  summary: <p>Represents a class to encapsulate a Service Fabric upgrade description. </p>
  syntax:
    content: public class FabricUpgradeDescription
- uid: system.fabric._fabric_upgrade_update_description
  parent: system.fabric
  href: system.fabric._fabric_upgrade_update_description.yml
  name: FabricUpgradeUpdateDescription
  nameWithType: FabricUpgradeUpdateDescription
  fullName: system.fabric.FabricUpgradeUpdateDescription
  type: Class
  summary: <p>Used to modify the upgrade parameters describing the behavior cluster upgrades. See <xref href="system.fabric._cluster_management_client.updateFabricUpgradeAsync(FabricUpgradeUpdateDescription)" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class FabricUpgradeUpdateDescription
- uid: system.fabric._cluster_management_client.removeNodeStateAsync(String)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  name: removeNodeStateAsync(String nodeName)
  nameWithType: ClusterManagementClient.removeNodeStateAsync(String nodeName)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.removeNodeStateAsync(String nodeName)
  type: Method
  summary: >-
    <p>Indicates that the persisted data of a node is lost (e.g., due to disk failure, or reimage, etc.), and that Service Fabric should treat any services or state on that node as lost and unrecoverable.</p>

    <p></p>
  syntax: *o1
- uid: system.fabric._cluster_management_client.activateNodeAsync(String)
  parent: system.fabric._cluster_management_client
  href: system.fabric._cluster_management_client.yml
  name: activateNodeAsync(String nodeName)
  nameWithType: ClusterManagementClient.activateNodeAsync(String nodeName)
  fullName: CompletableFuture<Boolean> system.fabric.ClusterManagementClient.activateNodeAsync(String nodeName)
  type: Method
  summary: >-
    <p>Activates a Service Fabric cluster node which is currently deactivated.</p>

    <p>

      <bold>Remarks:</bold>Once activated, the node will again become a viable target for placing new replicas, and any closed replicas remaining on the node will be opened. When this API completes it implies that the intent to activate has been registered by the system. It does not mean that the activation is complete. The progress of the operation can be determined by using the <ref refid="" kindref="compound">system.fabric.QueryClient#getNodeListAsync()</ref> API </p>
  syntax: *o2
- uid: system.fabric._safety_check_kind
  parent: system.fabric
  href: system.fabric._safety_check_kind.yml
  name: SafetyCheckKind
  nameWithType: SafetyCheckKind
  fullName: system.fabric.SafetyCheckKind
  type: Enum
  syntax:
    content: public enum SafetyCheckKind
- uid: system.fabric.exception._fabric_object_closed_exception
  parent: system.fabric.exception
  href: system.fabric.exception._fabric_object_closed_exception.yml
  name: FabricObjectClosedException
  nameWithType: FabricObjectClosedException
  fullName: system.fabric.exception.FabricObjectClosedException
  type: Class
  syntax:
    content: public class FabricObjectClosedException
- uid: system.fabric._fabric_client
  parent: system.fabric
  href: system.fabric._fabric_client.yml
  name: FabricClient
  nameWithType: FabricClient
  fullName: system.fabric.FabricClient
  type: Class
  summary: >-
    <p>Creates and manages Service Fabric services and other entities. </p>

    <p>

      <bold>Remarks:</bold>It is highly recommended that you share FabricClients as much as possible. This is because the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> has multiple optimizations such as caching and batching that you would not be able to fully utilize otherwise. </p>
  syntax:
    content: public class FabricClient
- uid: system.fabric._application_management_client.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  name: moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress upgradeProgress)
  nameWithType: ApplicationManagementClient.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress upgradeProgress)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress upgradeProgress)
  type: Method
  summary: >-
    <p>Instructs the Service Fabric to upgrade the application instance in the next upgrade domain.</p>

    <p>

      <ref refid="" kindref="compound">system.fabric.FabricErrorCode#ApplicationNotFound</ref> : The application does not exist. </p>

    <p>

      <bold>Remarks:</bold>Service Fabric would only move to the next upgrade domain if it has completed the upgrade domain it is currently updating. </p>
  syntax:
    content: public CompletableFuture<Boolean> moveNextApplicationUpgradeDomainAsync(ApplicationUpgradeProgress upgradeProgress)
    parameters:
    - id: upgradeProgress
      type: system.fabric._application_upgrade_progress
      description: <p>The upgrade progress of the application instance of interest. This provides information about the next upgrade domain to be upgraded. </p>
    return:
      type: 7e53ac82
      description: <p>The upgraded application instance. </p>
