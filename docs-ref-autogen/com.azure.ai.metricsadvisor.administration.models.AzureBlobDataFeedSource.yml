### YamlMime:JavaType
uid: "com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource"
fullName: "com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource"
name: "AzureBlobDataFeedSource"
nameWithType: "AzureBlobDataFeedSource"
summary: "The AzureBlobDataFeedSource model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.ai.metricsadvisor.administration.models.DataFeedSource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureBlobDataFeedSource extends DataFeedSource"
methods:
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource.fromBasicCredential(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource.fromBasicCredential(String connectionString, String container, String blobTemplate)"
  name: "fromBasicCredential(String connectionString, String container, String blobTemplate)"
  nameWithType: "AzureBlobDataFeedSource.fromBasicCredential(String connectionString, String container, String blobTemplate)"
  summary: "Create a AzureBlobDataFeedSource with credential included in the `connectionString` as plain text."
  modifiers:
  - "static"
  parameters:
  - description: "the Azure Blob connection string"
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the container name"
    name: "container"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the blob template name"
    name: "blobTemplate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AzureBlobDataFeedSource fromBasicCredential(String connectionString, String container, String blobTemplate)"
  returns:
    description: "The AzureBlobDataFeedSource."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource?alt=com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource&text=AzureBlobDataFeedSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource.fromManagedIdentityCredential(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource.fromManagedIdentityCredential(String connectionString, String container, String blobTemplate)"
  name: "fromManagedIdentityCredential(String connectionString, String container, String blobTemplate)"
  nameWithType: "AzureBlobDataFeedSource.fromManagedIdentityCredential(String connectionString, String container, String blobTemplate)"
  summary: "Create a SQLServerDataFeedSource with the `connectionString` containing the resource id of the SQL server on which metrics advisor has MSI access."
  modifiers:
  - "static"
  parameters:
  - description: "the Azure Blob connection string"
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the container name"
    name: "container"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the blob template name"
    name: "blobTemplate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AzureBlobDataFeedSource fromManagedIdentityCredential(String connectionString, String container, String blobTemplate)"
  returns:
    description: "The AzureBlobDataFeedSource."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource?alt=com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource&text=AzureBlobDataFeedSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource.getAuthenticationType()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource.getAuthenticationType()"
  name: "getAuthenticationType()"
  nameWithType: "AzureBlobDataFeedSource.getAuthenticationType()"
  summary: "Gets the authentication type to access the data source."
  syntax: "public DataSourceAuthenticationType getAuthenticationType()"
  returns:
    description: "The authentication type."
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.DataSourceAuthenticationType?alt=com.azure.ai.metricsadvisor.administration.models.DataSourceAuthenticationType&text=DataSourceAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource.getBlobTemplate()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource.getBlobTemplate()"
  name: "getBlobTemplate()"
  nameWithType: "AzureBlobDataFeedSource.getBlobTemplate()"
  summary: "Get the blob template name."
  syntax: "public String getBlobTemplate()"
  returns:
    description: "the blobTemplate value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource.getContainer()"
  fullName: "com.azure.ai.metricsadvisor.administration.models.AzureBlobDataFeedSource.getContainer()"
  name: "getContainer()"
  nameWithType: "AzureBlobDataFeedSource.getContainer()"
  summary: "Get the container name."
  syntax: "public String getContainer()"
  returns:
    description: "the container value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration.models"
artifact: com.azure:azure-ai-metricsadvisor:1.1.2
