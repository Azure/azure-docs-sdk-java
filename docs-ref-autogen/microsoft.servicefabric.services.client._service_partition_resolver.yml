### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.client._service_partition_resolver
  id: _service_partition_resolver
  parent: microsoft.servicefabric.services.client
  children:
  - microsoft.servicefabric.services.client._service_partition_resolver.resolveAsync(ResolvedServicePartition,Duration,Duration)
  - microsoft.servicefabric.services.client._service_partition_resolver.resolveAsync(URI,ServicePartitionKey,Duration,Duration)
  href: microsoft.servicefabric.services.client._service_partition_resolver.yml
  langs:
  - java
  name: ServicePartitionResolver
  nameWithType: ServicePartitionResolver
  fullName: microsoft.servicefabric.services.client.ServicePartitionResolver
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/ServicePartitionResolver.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/ServicePartitionResolver.java
    startLine: 10
  package: microsoft.servicefabric.services.client
  summary: <p>Implements the class that helps in determining the endpoint of a service. </p>
  syntax:
    content: public interface ServicePartitionResolver
- uid: microsoft.servicefabric.services.client._service_partition_resolver.resolveAsync(ResolvedServicePartition,Duration,Duration)
  id: resolveAsync(ResolvedServicePartition,Duration,Duration)
  parent: microsoft.servicefabric.services.client._service_partition_resolver
  href: microsoft.servicefabric.services.client._service_partition_resolver.yml
  langs:
  - java
  name: resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  nameWithType: ServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  fullName: CompletableFuture<ResolvedServicePartition> microsoft.servicefabric.services.client.ServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  overload: microsoft.servicefabric.services.client._service_partition_resolver.resolveAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/ServicePartitionResolver.java
    startLine: 48
  package: microsoft.servicefabric.services.client
  summary: >-
    <p>Resolves a partition of the specified service.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
    parameters:
    - id: previousRsp
      type: system.fabric._resolved_service_partition
      description: <p>Previous resolved partition </p>
    - id: resolveTimeoutPerTry
      type: e02a2de0
      description: <p>The timeout passed to FabricClient's </p>
    - id: maxRetryBackoffInterval
      type: e02a2de0
      description: <p>The interval to back-off before retrying when FabricClient's method fails with a retriable exception. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>A CompletableFuture that represents outstanding operation. The result from the Task is the <xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref> object, that contains the information about the resolved service partition including the service endpoints. </p>
- uid: microsoft.servicefabric.services.client._service_partition_resolver.resolveAsync(URI,ServicePartitionKey,Duration,Duration)
  id: resolveAsync(URI,ServicePartitionKey,Duration,Duration)
  parent: microsoft.servicefabric.services.client._service_partition_resolver
  href: microsoft.servicefabric.services.client._service_partition_resolver.yml
  langs:
  - java
  name: resolveAsync(URI serviceName, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  nameWithType: ServicePartitionResolver.resolveAsync(URI serviceName, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  fullName: CompletableFuture<ResolvedServicePartition> microsoft.servicefabric.services.client.ServicePartitionResolver.resolveAsync(URI serviceName, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  overload: microsoft.servicefabric.services.client._service_partition_resolver.resolveAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/ServicePartitionResolver.java
    startLine: 28
  package: microsoft.servicefabric.services.client
  summary: >-
    <p>Resolves a partition of the specified service.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveAsync(URI serviceName, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
    parameters:
    - id: serviceName
      type: "62304784"
      description: <p>Uri of the service to resolve </p>
    - id: partitionKey
      type: microsoft.servicefabric.services.client._service_partition_key
      description: <p>Key that identifies the partition to resolve </p>
    - id: resolveTimeoutPerTry
      type: e02a2de0
      description: <p>The timeout passed to FabricClient's </p>
    - id: maxRetryBackoffInterval
      type: e02a2de0
      description: <p>The interval to back-off before retrying when FabricClient's method fails with a retriable exception. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>A CompletableFuture that represents outstanding operation. The result from the Task is the <xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref> object, that contains the information about the resolved service partition including the service endpoints. </p>
references:
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: system.fabric._resolved_service_partition
    name: ResolvedServicePartition
    fullName: system.fabric.ResolvedServicePartition
    href: system.fabric._resolved_service_partition.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.services.client._service_partition_resolver.resolveAsync*
  name: resolveAsync
  nameWithType: ServicePartitionResolver.resolveAsync
  fullName: CompletableFuture<ResolvedServicePartition> microsoft.servicefabric.services.client.ServicePartitionResolver.resolveAsync
  package: microsoft.servicefabric.services.client
- uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver
  parent: microsoft.servicefabric.services.client
  href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
  name: FabricServicePartitionResolver
  nameWithType: FabricServicePartitionResolver
  fullName: microsoft.servicefabric.services.client.FabricServicePartitionResolver
  type: Class
  summary: <p>Implements the class that helps in determining the endpoint of a service. This class wraps the FabricClient's <xref uid="" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(java.net.URI)</xref> method, and implements a back-off/retry mechanism on errors from that method. </p>
  syntax:
    content: public class FabricServicePartitionResolver implements ServicePartitionResolver
- uid: system.fabric._resolved_service_partition
  parent: system.fabric
  href: system.fabric._resolved_service_partition.yml
  name: ResolvedServicePartition
  nameWithType: ResolvedServicePartition
  fullName: system.fabric.ResolvedServicePartition
  type: Class
  summary: >-
    <p>Represents a data structure that contains information on the partitioning and set of endpoints to which the specified Service partition listens.</p>

    <p></p>
  syntax:
    content: public class ResolvedServicePartition
- uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync(URI,ServicePartitionKey,Duration,Duration)
  parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
  href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
  name: resolveAsync(URI serviceUri, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  nameWithType: FabricServicePartitionResolver.resolveAsync(URI serviceUri, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  fullName: CompletableFuture<ResolvedServicePartition> microsoft.servicefabric.services.client.FabricServicePartitionResolver.resolveAsync(URI serviceUri, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  type: Method
  summary: >-
    <p>Resolves a partition of the specified service by invoking <xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref> method with back-off/retry on retriable errors.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveAsync(URI serviceUri, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
    parameters:
    - id: serviceUri
      type: "62304784"
      description: <p>Uri of the service to resolve </p>
    - id: partitionKey
      type: microsoft.servicefabric.services.client._service_partition_key
      description: <p>Key that identifies the partition to resolve </p>
    - id: resolveTimeoutPerTry
      type: e02a2de0
      description: <p>The timeout passed to <xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref> method </p>
    - id: maxRetryBackoffInterval
      type: e02a2de0
      description: <p>The interval to back-off before retrying when <xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref>method fails with a retriable exception. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. The result from the Task is the <xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref> object, that contains the information about the resolved service partition including the service endpoints. </p>
- uid: microsoft.servicefabric.services.client._service_partition_key
  parent: microsoft.servicefabric.services.client
  href: microsoft.servicefabric.services.client._service_partition_key.yml
  name: ServicePartitionKey
  nameWithType: ServicePartitionKey
  fullName: microsoft.servicefabric.services.client.ServicePartitionKey
  type: Class
  summary: <p>Defines a key to address a service partition. </p>
  syntax:
    content: public class ServicePartitionKey
- uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync(ResolvedServicePartition,Duration,Duration)
  parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
  href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
  name: resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  nameWithType: FabricServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  fullName: CompletableFuture<ResolvedServicePartition> microsoft.servicefabric.services.client.FabricServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  type: Method
  summary: >-
    <p>Resolves a partition of the specified service by invoking FabricClient's <xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref> method with back-off/retry on retriable errors. This takes in the resolved service partition that was got via an earlier invocation of the ResolveAsync() method. This api-overload is used in cases where the client knows that the resolved service partition that it has is no longer valid.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ResolvedServicePartition> resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
    parameters:
    - id: previousRsp
      type: system.fabric._resolved_service_partition
      description: <p>Previous resolved service partition </p>
    - id: resolveTimeoutPerTry
      type: e02a2de0
      description: <p>The timeout passed to <xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref> method </p>
    - id: maxRetryBackoffInterval
      type: e02a2de0
      description: <p>The interval to back-off before retrying when <xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref> method fails with a retriable exception. </p>
    return:
      type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. The result from the Task is the <xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref> object, that contains the information about the resolved service partition including the service endpoints. </p>
