### YamlMime:JavaMember
uid: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.getWithResponseAsync*"
fullName: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.getWithResponseAsync"
name: "getWithResponseAsync"
nameWithType: "LocationsClient.getWithResponseAsync"
members:
- uid: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.getWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.cosmos.fluent.LocationsClient.getWithResponseAsync(String location)"
  name: "getWithResponseAsync(String location)"
  nameWithType: "LocationsClient.getWithResponseAsync(String location)"
  summary: "Get the properties of an existing Cosmos DB location."
  parameters:
  - description: "Cosmos DB region, with spaces between words and each word capitalized."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<LocationGetResultInner>> getWithResponseAsync(String location)"
  returns:
    description: "the properties of an existing Cosmos DB location."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner?alt=com.azure.resourcemanager.cosmos.fluent.models.LocationGetResultInner&text=LocationGetResultInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.cosmos.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.13.0
