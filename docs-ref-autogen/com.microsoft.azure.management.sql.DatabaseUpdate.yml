### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql.DatabaseUpdate
  id: DatabaseUpdate
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql
  children:
  - com.microsoft.azure.management.sql.DatabaseUpdate.DatabaseUpdate()
  - com.microsoft.azure.management.sql.DatabaseUpdate.collation()
  - com.microsoft.azure.management.sql.DatabaseUpdate.containmentState()
  - com.microsoft.azure.management.sql.DatabaseUpdate.createMode()
  - com.microsoft.azure.management.sql.DatabaseUpdate.creationDate()
  - com.microsoft.azure.management.sql.DatabaseUpdate.currentServiceObjectiveId()
  - com.microsoft.azure.management.sql.DatabaseUpdate.databaseId()
  - com.microsoft.azure.management.sql.DatabaseUpdate.defaultSecondaryLocation()
  - com.microsoft.azure.management.sql.DatabaseUpdate.earliestRestoreDate()
  - com.microsoft.azure.management.sql.DatabaseUpdate.edition()
  - com.microsoft.azure.management.sql.DatabaseUpdate.elasticPoolName()
  - com.microsoft.azure.management.sql.DatabaseUpdate.failoverGroupId()
  - com.microsoft.azure.management.sql.DatabaseUpdate.maxSizeBytes()
  - com.microsoft.azure.management.sql.DatabaseUpdate.readScale()
  - com.microsoft.azure.management.sql.DatabaseUpdate.recommendedIndex()
  - com.microsoft.azure.management.sql.DatabaseUpdate.recoveryServicesRecoveryPointResourceId()
  - com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveId()
  - com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveName()
  - com.microsoft.azure.management.sql.DatabaseUpdate.restorePointInTime()
  - com.microsoft.azure.management.sql.DatabaseUpdate.sampleName()
  - com.microsoft.azure.management.sql.DatabaseUpdate.serviceLevelObjective()
  - com.microsoft.azure.management.sql.DatabaseUpdate.serviceTierAdvisors()
  - com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseDeletionDate()
  - com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseId()
  - com.microsoft.azure.management.sql.DatabaseUpdate.status()
  - com.microsoft.azure.management.sql.DatabaseUpdate.tags()
  - com.microsoft.azure.management.sql.DatabaseUpdate.transparentDataEncryption()
  - com.microsoft.azure.management.sql.DatabaseUpdate.withCollation(java.lang.String)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withCreateMode(com.microsoft.azure.management.sql.CreateMode)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withEdition(com.microsoft.azure.management.sql.DatabaseEdition)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withElasticPoolName(java.lang.String)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withMaxSizeBytes(java.lang.String)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withReadScale(com.microsoft.azure.management.sql.ReadScale)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withRecoveryServicesRecoveryPointResourceId(java.lang.String)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveId(java.util.UUID)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveName(com.microsoft.azure.management.sql.ServiceObjectiveName)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withRestorePointInTime(org.joda.time.DateTime)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withSampleName(com.microsoft.azure.management.sql.SampleName)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseDeletionDate(org.joda.time.DateTime)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseId(java.lang.String)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withTags(java.util.Map<java.lang.String,java.lang.String>)
  - com.microsoft.azure.management.sql.DatabaseUpdate.withZoneRedundant(java.lang.Boolean)
  - com.microsoft.azure.management.sql.DatabaseUpdate.zoneRedundant()
  langs:
  - java
  name: DatabaseUpdate
  nameWithType: DatabaseUpdate
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate
  type: Class
  package: com.microsoft.azure.management.sql
  summary: Represents a database update.
  syntax:
    content: public class DatabaseUpdate extends ProxyResource
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.ProxyResource
  inheritedMembers:
  - com.microsoft.azure.ProxyResource.id()
  - com.microsoft.azure.ProxyResource.name()
  - com.microsoft.azure.ProxyResource.type()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.DatabaseUpdate()
  id: DatabaseUpdate()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: DatabaseUpdate()
  nameWithType: DatabaseUpdate.DatabaseUpdate()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.DatabaseUpdate()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.DatabaseUpdate*
  type: Constructor
  package: com.microsoft.azure.management.sql
  syntax:
    content: public DatabaseUpdate()
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.collation()
  id: collation()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: collation()
  nameWithType: DatabaseUpdate.collation()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.collation()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.collation*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the collation of the database. If createMode is not Default, this value is ignored.
  syntax:
    content: public String collation()
    return:
      type: java.lang.String
      description: the collation value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.containmentState()
  id: containmentState()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: containmentState()
  nameWithType: DatabaseUpdate.containmentState()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.containmentState()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.containmentState*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the containment state of the database.
  syntax:
    content: public Long containmentState()
    return:
      type: java.lang.Long
      description: the containmentState value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.createMode()
  id: createMode()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: createMode()
  nameWithType: DatabaseUpdate.createMode()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.createMode()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.createMode*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Get specifies the mode of database creation. Default: regular database creation. Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database. OnlineSecondary/NonReadableSecondary: creates a database as a (readable or nonreadable) secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database. PointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified. Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore. Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time. RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID. Copy, NonReadableSecondary, OnlineSecondary and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition. Possible values include: 'Copy', 'Default', 'NonReadableSecondary', 'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore', 'RestoreLongTermRetentionBackup'."
  syntax:
    content: public CreateMode createMode()
    return:
      type: com.microsoft.azure.management.sql.CreateMode
      description: the createMode value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.creationDate()
  id: creationDate()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: creationDate()
  nameWithType: DatabaseUpdate.creationDate()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.creationDate()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.creationDate*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the creation date of the database (ISO8601 format).
  syntax:
    content: public DateTime creationDate()
    return:
      type: org.joda.time.DateTime
      description: the creationDate value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.currentServiceObjectiveId()
  id: currentServiceObjectiveId()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: currentServiceObjectiveId()
  nameWithType: DatabaseUpdate.currentServiceObjectiveId()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.currentServiceObjectiveId()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.currentServiceObjectiveId*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the current service level objective ID of the database. This is the ID of the service level objective that is currently active.
  syntax:
    content: public UUID currentServiceObjectiveId()
    return:
      type: java.util.UUID
      description: the currentServiceObjectiveId value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.databaseId()
  id: databaseId()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: databaseId()
  nameWithType: DatabaseUpdate.databaseId()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.databaseId()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.databaseId*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the ID of the database.
  syntax:
    content: public UUID databaseId()
    return:
      type: java.util.UUID
      description: the databaseId value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.defaultSecondaryLocation()
  id: defaultSecondaryLocation()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: defaultSecondaryLocation()
  nameWithType: DatabaseUpdate.defaultSecondaryLocation()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.defaultSecondaryLocation()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.defaultSecondaryLocation*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the default secondary region for this database.
  syntax:
    content: public String defaultSecondaryLocation()
    return:
      type: java.lang.String
      description: the defaultSecondaryLocation value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.earliestRestoreDate()
  id: earliestRestoreDate()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: earliestRestoreDate()
  nameWithType: DatabaseUpdate.earliestRestoreDate()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.earliestRestoreDate()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.earliestRestoreDate*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get this records the earliest start date and time that restore is available for this database (ISO8601 format).
  syntax:
    content: public DateTime earliestRestoreDate()
    return:
      type: org.joda.time.DateTime
      description: the earliestRestoreDate value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.edition()
  id: edition()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: edition()
  nameWithType: DatabaseUpdate.edition()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.edition()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.edition*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Get the edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored. The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API or one of the following commands: \\`\\`\\`azurecli az sql db list-editions -l <location> -o table \\`\\`\\`\\` \\`\\`\\`powershell Get-AzSqlServerServiceObjective -Location <location> \\`\\`\\`\\` . Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'PremiumRS', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2', 'GeneralPurpose', 'BusinessCritical', 'Hyperscale'."
  syntax:
    content: public DatabaseEdition edition()
    return:
      type: com.microsoft.azure.management.sql.DatabaseEdition
      description: the edition value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.elasticPoolName()
  id: elasticPoolName()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: elasticPoolName()
  nameWithType: DatabaseUpdate.elasticPoolName()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.elasticPoolName()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.elasticPoolName*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.
  syntax:
    content: public String elasticPoolName()
    return:
      type: java.lang.String
      description: the elasticPoolName value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.failoverGroupId()
  id: failoverGroupId()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: failoverGroupId()
  nameWithType: DatabaseUpdate.failoverGroupId()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.failoverGroupId()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.failoverGroupId*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the resource identifier of the failover group containing this database.
  syntax:
    content: public String failoverGroupId()
    return:
      type: java.lang.String
      description: the failoverGroupId value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.maxSizeBytes()
  id: maxSizeBytes()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: maxSizeBytes()
  nameWithType: DatabaseUpdate.maxSizeBytes()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.maxSizeBytes()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.maxSizeBytes*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: 'Get the max size of the database expressed in bytes. If createMode is not Default, this value is ignored. To see possible values, query the capabilities API (/subscriptions/\{subscriptionId\}/providers/Microsoft.Sql/locations/\{locationID\}/capabilities) referred to by operationId: "Capabilities\_ListByLocation.".'
  syntax:
    content: public String maxSizeBytes()
    return:
      type: java.lang.String
      description: the maxSizeBytes value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.readScale()
  id: readScale()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: readScale()
  nameWithType: DatabaseUpdate.readScale()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.readScale()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.readScale*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Get conditional. If the database is a geo-secondary, readScale indicates whether read-only connections are allowed to this database or not. Not supported for DataWarehouse edition. Possible values include: 'Enabled', 'Disabled'."
  syntax:
    content: public ReadScale readScale()
    return:
      type: com.microsoft.azure.management.sql.ReadScale
      description: the readScale value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.recommendedIndex()
  id: recommendedIndex()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: recommendedIndex()
  nameWithType: DatabaseUpdate.recommendedIndex()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.recommendedIndex()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.recommendedIndex*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the recommended indices for this database.
  syntax:
    content: public List<RecommendedIndex> recommendedIndex()
    return:
      type: java.util.List<com.microsoft.azure.management.sql.RecommendedIndex>
      description: the recommendedIndex value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.recoveryServicesRecoveryPointResourceId()
  id: recoveryServicesRecoveryPointResourceId()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: recoveryServicesRecoveryPointResourceId()
  nameWithType: DatabaseUpdate.recoveryServicesRecoveryPointResourceId()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.recoveryServicesRecoveryPointResourceId()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.recoveryServicesRecoveryPointResourceId*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.
  syntax:
    content: public String recoveryServicesRecoveryPointResourceId()
    return:
      type: java.lang.String
      description: the recoveryServicesRecoveryPointResourceId value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveId()
  id: requestedServiceObjectiveId()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: requestedServiceObjectiveId()
  nameWithType: DatabaseUpdate.requestedServiceObjectiveId()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveId()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveId*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName. The list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the \`Capabilities\_ListByLocation\` REST API.
  syntax:
    content: public UUID requestedServiceObjectiveId()
    return:
      type: java.util.UUID
      description: the requestedServiceObjectiveId value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveName()
  id: requestedServiceObjectiveName()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: requestedServiceObjectiveName()
  nameWithType: DatabaseUpdate.requestedServiceObjectiveName()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveName()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveName*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Get the name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API or one of the following commands: \\`\\`\\`azurecli az sql db list-editions -l <location> -o table \\`\\`\\`\\` \\`\\`\\`powershell Get-AzSqlServerServiceObjective -Location <location> \\`\\`\\`\\` . Possible values include: 'System', 'System0', 'System1', 'System2', 'System3', 'System4', 'System2L', 'System3L', 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200', 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500', 'DW1500c', 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c', 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000', 'DS1200', 'DS1500', 'DS2000', 'ElasticPool'."
  syntax:
    content: public ServiceObjectiveName requestedServiceObjectiveName()
    return:
      type: com.microsoft.azure.management.sql.ServiceObjectiveName
      description: the requestedServiceObjectiveName value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.restorePointInTime()
  id: restorePointInTime()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: restorePointInTime()
  nameWithType: DatabaseUpdate.restorePointInTime()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.restorePointInTime()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.restorePointInTime*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get conditional. If createMode is PointInTimeRestore, this value is required. If createMode is Restore, this value is optional. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. Must be greater than or equal to the source database's earliestRestoreDate value.
  syntax:
    content: public DateTime restorePointInTime()
    return:
      type: org.joda.time.DateTime
      description: the restorePointInTime value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.sampleName()
  id: sampleName()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: sampleName()
  nameWithType: DatabaseUpdate.sampleName()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.sampleName()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.sampleName*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Get indicates the name of the sample schema to apply when creating this database. If createMode is not Default, this value is ignored. Not supported for DataWarehouse edition. Possible values include: 'AdventureWorksLT'."
  syntax:
    content: public SampleName sampleName()
    return:
      type: com.microsoft.azure.management.sql.SampleName
      description: the sampleName value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.serviceLevelObjective()
  id: serviceLevelObjective()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: serviceLevelObjective()
  nameWithType: DatabaseUpdate.serviceLevelObjective()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.serviceLevelObjective()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.serviceLevelObjective*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Get the current service level objective of the database. Possible values include: 'System', 'System0', 'System1', 'System2', 'System3', 'System4', 'System2L', 'System3L', 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200', 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500', 'DW1500c', 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c', 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000', 'DS1200', 'DS1500', 'DS2000', 'ElasticPool'."
  syntax:
    content: public ServiceObjectiveName serviceLevelObjective()
    return:
      type: com.microsoft.azure.management.sql.ServiceObjectiveName
      description: the serviceLevelObjective value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.serviceTierAdvisors()
  id: serviceTierAdvisors()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: serviceTierAdvisors()
  nameWithType: DatabaseUpdate.serviceTierAdvisors()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.serviceTierAdvisors()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.serviceTierAdvisors*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the list of service tier advisors for this database. Expanded property.
  syntax:
    content: public List<ServiceTierAdvisorInner> serviceTierAdvisors()
    return:
      type: java.util.List<com.microsoft.azure.management.sql.implementation.ServiceTierAdvisorInner>
      description: the serviceTierAdvisors value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseDeletionDate()
  id: sourceDatabaseDeletionDate()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: sourceDatabaseDeletionDate()
  nameWithType: DatabaseUpdate.sourceDatabaseDeletionDate()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseDeletionDate()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseDeletionDate*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get conditional. If createMode is Restore and sourceDatabaseId is the deleted database's original resource id when it existed (as opposed to its current restorable dropped database id), then this value is required. Specifies the time that the database was deleted.
  syntax:
    content: public DateTime sourceDatabaseDeletionDate()
    return:
      type: org.joda.time.DateTime
      description: the sourceDatabaseDeletionDate value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseId()
  id: sourceDatabaseId()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: sourceDatabaseId()
  nameWithType: DatabaseUpdate.sourceDatabaseId()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseId()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseId*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get conditional. If createMode is Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery, or Restore, then this value is required. Specifies the resource ID of the source database. If createMode is NonReadableSecondary or OnlineSecondary, the name of the source database must be the same as the new database being created.
  syntax:
    content: public String sourceDatabaseId()
    return:
      type: java.lang.String
      description: the sourceDatabaseId value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.status()
  id: status()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: status()
  nameWithType: DatabaseUpdate.status()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.status()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.status*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the status of the database.
  syntax:
    content: public String status()
    return:
      type: java.lang.String
      description: the status value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.tags()
  id: tags()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: tags()
  nameWithType: DatabaseUpdate.tags()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.tags()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.tags*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get resource tags.
  syntax:
    content: public Map<String,String> tags()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the tags value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.transparentDataEncryption()
  id: transparentDataEncryption()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: transparentDataEncryption()
  nameWithType: DatabaseUpdate.transparentDataEncryption()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.transparentDataEncryption()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.transparentDataEncryption*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get the transparent data encryption info for this database.
  syntax:
    content: public List<TransparentDataEncryptionInner> transparentDataEncryption()
    return:
      type: java.util.List<com.microsoft.azure.management.sql.implementation.TransparentDataEncryptionInner>
      description: the transparentDataEncryption value
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withCollation(java.lang.String)
  id: withCollation(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withCollation(String collation)
  nameWithType: DatabaseUpdate.withCollation(String collation)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withCollation(String collation)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withCollation*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Set the collation of the database. If createMode is not Default, this value is ignored.
  syntax:
    content: public DatabaseUpdate withCollation(String collation)
    parameters:
    - id: collation
      type: java.lang.String
      description: the collation value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withCreateMode(com.microsoft.azure.management.sql.CreateMode)
  id: withCreateMode(com.microsoft.azure.management.sql.CreateMode)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withCreateMode(CreateMode createMode)
  nameWithType: DatabaseUpdate.withCreateMode(CreateMode createMode)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withCreateMode(CreateMode createMode)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withCreateMode*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Set specifies the mode of database creation. Default: regular database creation. Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database. OnlineSecondary/NonReadableSecondary: creates a database as a (readable or nonreadable) secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database. PointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified. Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore. Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time. RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID. Copy, NonReadableSecondary, OnlineSecondary and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition. Possible values include: 'Copy', 'Default', 'NonReadableSecondary', 'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore', 'RestoreLongTermRetentionBackup'."
  syntax:
    content: public DatabaseUpdate withCreateMode(CreateMode createMode)
    parameters:
    - id: createMode
      type: com.microsoft.azure.management.sql.CreateMode
      description: the createMode value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withEdition(com.microsoft.azure.management.sql.DatabaseEdition)
  id: withEdition(com.microsoft.azure.management.sql.DatabaseEdition)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withEdition(DatabaseEdition edition)
  nameWithType: DatabaseUpdate.withEdition(DatabaseEdition edition)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withEdition(DatabaseEdition edition)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withEdition*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Set the edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored. The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API or one of the following commands: \\`\\`\\`azurecli az sql db list-editions -l <location> -o table \\`\\`\\`\\` \\`\\`\\`powershell Get-AzSqlServerServiceObjective -Location <location> \\`\\`\\`\\` . Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'PremiumRS', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2', 'GeneralPurpose', 'BusinessCritical', 'Hyperscale'."
  syntax:
    content: public DatabaseUpdate withEdition(DatabaseEdition edition)
    parameters:
    - id: edition
      type: com.microsoft.azure.management.sql.DatabaseEdition
      description: the edition value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withElasticPoolName(java.lang.String)
  id: withElasticPoolName(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withElasticPoolName(String elasticPoolName)
  nameWithType: DatabaseUpdate.withElasticPoolName(String elasticPoolName)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withElasticPoolName(String elasticPoolName)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withElasticPoolName*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Set the name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.
  syntax:
    content: public DatabaseUpdate withElasticPoolName(String elasticPoolName)
    parameters:
    - id: elasticPoolName
      type: java.lang.String
      description: the elasticPoolName value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withMaxSizeBytes(java.lang.String)
  id: withMaxSizeBytes(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withMaxSizeBytes(String maxSizeBytes)
  nameWithType: DatabaseUpdate.withMaxSizeBytes(String maxSizeBytes)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withMaxSizeBytes(String maxSizeBytes)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withMaxSizeBytes*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: 'Set the max size of the database expressed in bytes. If createMode is not Default, this value is ignored. To see possible values, query the capabilities API (/subscriptions/\{subscriptionId\}/providers/Microsoft.Sql/locations/\{locationID\}/capabilities) referred to by operationId: "Capabilities\_ListByLocation.".'
  syntax:
    content: public DatabaseUpdate withMaxSizeBytes(String maxSizeBytes)
    parameters:
    - id: maxSizeBytes
      type: java.lang.String
      description: the maxSizeBytes value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withReadScale(com.microsoft.azure.management.sql.ReadScale)
  id: withReadScale(com.microsoft.azure.management.sql.ReadScale)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withReadScale(ReadScale readScale)
  nameWithType: DatabaseUpdate.withReadScale(ReadScale readScale)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withReadScale(ReadScale readScale)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withReadScale*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Set conditional. If the database is a geo-secondary, readScale indicates whether read-only connections are allowed to this database or not. Not supported for DataWarehouse edition. Possible values include: 'Enabled', 'Disabled'."
  syntax:
    content: public DatabaseUpdate withReadScale(ReadScale readScale)
    parameters:
    - id: readScale
      type: com.microsoft.azure.management.sql.ReadScale
      description: the readScale value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withRecoveryServicesRecoveryPointResourceId(java.lang.String)
  id: withRecoveryServicesRecoveryPointResourceId(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withRecoveryServicesRecoveryPointResourceId(String recoveryServicesRecoveryPointResourceId)
  nameWithType: DatabaseUpdate.withRecoveryServicesRecoveryPointResourceId(String recoveryServicesRecoveryPointResourceId)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withRecoveryServicesRecoveryPointResourceId(String recoveryServicesRecoveryPointResourceId)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withRecoveryServicesRecoveryPointResourceId*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Set conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.
  syntax:
    content: public DatabaseUpdate withRecoveryServicesRecoveryPointResourceId(String recoveryServicesRecoveryPointResourceId)
    parameters:
    - id: recoveryServicesRecoveryPointResourceId
      type: java.lang.String
      description: the recoveryServicesRecoveryPointResourceId value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveId(java.util.UUID)
  id: withRequestedServiceObjectiveId(java.util.UUID)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withRequestedServiceObjectiveId(UUID requestedServiceObjectiveId)
  nameWithType: DatabaseUpdate.withRequestedServiceObjectiveId(UUID requestedServiceObjectiveId)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveId(UUID requestedServiceObjectiveId)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveId*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Set the configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName. The list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the \`Capabilities\_ListByLocation\` REST API.
  syntax:
    content: public DatabaseUpdate withRequestedServiceObjectiveId(UUID requestedServiceObjectiveId)
    parameters:
    - id: requestedServiceObjectiveId
      type: java.util.UUID
      description: the requestedServiceObjectiveId value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveName(com.microsoft.azure.management.sql.ServiceObjectiveName)
  id: withRequestedServiceObjectiveName(com.microsoft.azure.management.sql.ServiceObjectiveName)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withRequestedServiceObjectiveName(ServiceObjectiveName requestedServiceObjectiveName)
  nameWithType: DatabaseUpdate.withRequestedServiceObjectiveName(ServiceObjectiveName requestedServiceObjectiveName)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveName(ServiceObjectiveName requestedServiceObjectiveName)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveName*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Set the name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API or one of the following commands: \\`\\`\\`azurecli az sql db list-editions -l <location> -o table \\`\\`\\`\\` \\`\\`\\`powershell Get-AzSqlServerServiceObjective -Location <location> \\`\\`\\`\\` . Possible values include: 'System', 'System0', 'System1', 'System2', 'System3', 'System4', 'System2L', 'System3L', 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200', 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500', 'DW1500c', 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c', 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000', 'DS1200', 'DS1500', 'DS2000', 'ElasticPool'."
  syntax:
    content: public DatabaseUpdate withRequestedServiceObjectiveName(ServiceObjectiveName requestedServiceObjectiveName)
    parameters:
    - id: requestedServiceObjectiveName
      type: com.microsoft.azure.management.sql.ServiceObjectiveName
      description: the requestedServiceObjectiveName value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withRestorePointInTime(org.joda.time.DateTime)
  id: withRestorePointInTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withRestorePointInTime(DateTime restorePointInTime)
  nameWithType: DatabaseUpdate.withRestorePointInTime(DateTime restorePointInTime)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withRestorePointInTime(DateTime restorePointInTime)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withRestorePointInTime*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Set conditional. If createMode is PointInTimeRestore, this value is required. If createMode is Restore, this value is optional. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. Must be greater than or equal to the source database's earliestRestoreDate value.
  syntax:
    content: public DatabaseUpdate withRestorePointInTime(DateTime restorePointInTime)
    parameters:
    - id: restorePointInTime
      type: org.joda.time.DateTime
      description: the restorePointInTime value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withSampleName(com.microsoft.azure.management.sql.SampleName)
  id: withSampleName(com.microsoft.azure.management.sql.SampleName)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withSampleName(SampleName sampleName)
  nameWithType: DatabaseUpdate.withSampleName(SampleName sampleName)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withSampleName(SampleName sampleName)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withSampleName*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: "Set indicates the name of the sample schema to apply when creating this database. If createMode is not Default, this value is ignored. Not supported for DataWarehouse edition. Possible values include: 'AdventureWorksLT'."
  syntax:
    content: public DatabaseUpdate withSampleName(SampleName sampleName)
    parameters:
    - id: sampleName
      type: com.microsoft.azure.management.sql.SampleName
      description: the sampleName value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseDeletionDate(org.joda.time.DateTime)
  id: withSourceDatabaseDeletionDate(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withSourceDatabaseDeletionDate(DateTime sourceDatabaseDeletionDate)
  nameWithType: DatabaseUpdate.withSourceDatabaseDeletionDate(DateTime sourceDatabaseDeletionDate)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseDeletionDate(DateTime sourceDatabaseDeletionDate)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseDeletionDate*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Set conditional. If createMode is Restore and sourceDatabaseId is the deleted database's original resource id when it existed (as opposed to its current restorable dropped database id), then this value is required. Specifies the time that the database was deleted.
  syntax:
    content: public DatabaseUpdate withSourceDatabaseDeletionDate(DateTime sourceDatabaseDeletionDate)
    parameters:
    - id: sourceDatabaseDeletionDate
      type: org.joda.time.DateTime
      description: the sourceDatabaseDeletionDate value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseId(java.lang.String)
  id: withSourceDatabaseId(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withSourceDatabaseId(String sourceDatabaseId)
  nameWithType: DatabaseUpdate.withSourceDatabaseId(String sourceDatabaseId)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseId(String sourceDatabaseId)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseId*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Set conditional. If createMode is Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery, or Restore, then this value is required. Specifies the resource ID of the source database. If createMode is NonReadableSecondary or OnlineSecondary, the name of the source database must be the same as the new database being created.
  syntax:
    content: public DatabaseUpdate withSourceDatabaseId(String sourceDatabaseId)
    parameters:
    - id: sourceDatabaseId
      type: java.lang.String
      description: the sourceDatabaseId value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withTags(java.util.Map<java.lang.String,java.lang.String>)
  id: withTags(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withTags(Map<String,String> tags)
  nameWithType: DatabaseUpdate.withTags(Map<String,String> tags)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withTags(Map<String,String> tags)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withTags*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Set resource tags.
  syntax:
    content: public DatabaseUpdate withTags(Map<String,String> tags)
    parameters:
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the tags value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withZoneRedundant(java.lang.Boolean)
  id: withZoneRedundant(java.lang.Boolean)
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: withZoneRedundant(Boolean zoneRedundant)
  nameWithType: DatabaseUpdate.withZoneRedundant(Boolean zoneRedundant)
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withZoneRedundant(Boolean zoneRedundant)
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.withZoneRedundant*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Set whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.
  syntax:
    content: public DatabaseUpdate withZoneRedundant(Boolean zoneRedundant)
    parameters:
    - id: zoneRedundant
      type: java.lang.Boolean
      description: the zoneRedundant value to set
    return:
      type: com.microsoft.azure.management.sql.DatabaseUpdate
      description: the DatabaseUpdate object itself.
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.zoneRedundant()
  id: zoneRedundant()
  artifact: com.microsoft.azure:azure-mgmt-sql:1.36.1
  parent: com.microsoft.azure.management.sql.DatabaseUpdate
  langs:
  - java
  name: zoneRedundant()
  nameWithType: DatabaseUpdate.zoneRedundant()
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.zoneRedundant()
  overload: com.microsoft.azure.management.sql.DatabaseUpdate.zoneRedundant*
  type: Method
  package: com.microsoft.azure.management.sql
  summary: Get whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.
  syntax:
    content: public Boolean zoneRedundant()
    return:
      type: java.lang.Boolean
      description: the zoneRedundant value
references:
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.DatabaseUpdate*
  name: DatabaseUpdate
  nameWithType: DatabaseUpdate.DatabaseUpdate
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.DatabaseUpdate
  package: com.microsoft.azure.management.sql
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.tags*
  name: tags
  nameWithType: DatabaseUpdate.tags
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.tags
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withTags*
  name: withTags
  nameWithType: DatabaseUpdate.withTags
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withTags
  package: com.microsoft.azure.management.sql
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.collation*
  name: collation
  nameWithType: DatabaseUpdate.collation
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.collation
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withCollation*
  name: withCollation
  nameWithType: DatabaseUpdate.withCollation
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withCollation
  package: com.microsoft.azure.management.sql
- uid: org.joda.time.DateTime
  spec.java:
  - uid: org.joda.time.DateTime
    name: DateTime
    fullName: org.joda.time.DateTime
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.creationDate*
  name: creationDate
  nameWithType: DatabaseUpdate.creationDate
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.creationDate
  package: com.microsoft.azure.management.sql
- uid: java.lang.Long
  spec.java:
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.containmentState*
  name: containmentState
  nameWithType: DatabaseUpdate.containmentState
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.containmentState
  package: com.microsoft.azure.management.sql
- uid: java.util.UUID
  spec.java:
  - uid: java.util.UUID
    name: UUID
    fullName: java.util.UUID
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.currentServiceObjectiveId*
  name: currentServiceObjectiveId
  nameWithType: DatabaseUpdate.currentServiceObjectiveId
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.currentServiceObjectiveId
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.databaseId*
  name: databaseId
  nameWithType: DatabaseUpdate.databaseId
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.databaseId
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.earliestRestoreDate*
  name: earliestRestoreDate
  nameWithType: DatabaseUpdate.earliestRestoreDate
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.earliestRestoreDate
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.CreateMode
  name: CreateMode
  nameWithType: CreateMode
  fullName: com.microsoft.azure.management.sql.CreateMode
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.createMode*
  name: createMode
  nameWithType: DatabaseUpdate.createMode
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.createMode
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withCreateMode*
  name: withCreateMode
  nameWithType: DatabaseUpdate.withCreateMode
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withCreateMode
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseId*
  name: sourceDatabaseId
  nameWithType: DatabaseUpdate.sourceDatabaseId
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseId
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseId*
  name: withSourceDatabaseId
  nameWithType: DatabaseUpdate.withSourceDatabaseId
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseId
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseDeletionDate*
  name: sourceDatabaseDeletionDate
  nameWithType: DatabaseUpdate.sourceDatabaseDeletionDate
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseDeletionDate
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseDeletionDate*
  name: withSourceDatabaseDeletionDate
  nameWithType: DatabaseUpdate.withSourceDatabaseDeletionDate
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseDeletionDate
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.restorePointInTime*
  name: restorePointInTime
  nameWithType: DatabaseUpdate.restorePointInTime
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.restorePointInTime
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withRestorePointInTime*
  name: withRestorePointInTime
  nameWithType: DatabaseUpdate.withRestorePointInTime
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withRestorePointInTime
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.recoveryServicesRecoveryPointResourceId*
  name: recoveryServicesRecoveryPointResourceId
  nameWithType: DatabaseUpdate.recoveryServicesRecoveryPointResourceId
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.recoveryServicesRecoveryPointResourceId
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withRecoveryServicesRecoveryPointResourceId*
  name: withRecoveryServicesRecoveryPointResourceId
  nameWithType: DatabaseUpdate.withRecoveryServicesRecoveryPointResourceId
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withRecoveryServicesRecoveryPointResourceId
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseEdition
  name: DatabaseEdition
  nameWithType: DatabaseEdition
  fullName: com.microsoft.azure.management.sql.DatabaseEdition
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.edition*
  name: edition
  nameWithType: DatabaseUpdate.edition
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.edition
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withEdition*
  name: withEdition
  nameWithType: DatabaseUpdate.withEdition
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withEdition
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.maxSizeBytes*
  name: maxSizeBytes
  nameWithType: DatabaseUpdate.maxSizeBytes
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.maxSizeBytes
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withMaxSizeBytes*
  name: withMaxSizeBytes
  nameWithType: DatabaseUpdate.withMaxSizeBytes
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withMaxSizeBytes
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveId*
  name: requestedServiceObjectiveId
  nameWithType: DatabaseUpdate.requestedServiceObjectiveId
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveId
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveId*
  name: withRequestedServiceObjectiveId
  nameWithType: DatabaseUpdate.withRequestedServiceObjectiveId
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveId
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.ServiceObjectiveName
  name: ServiceObjectiveName
  nameWithType: ServiceObjectiveName
  fullName: com.microsoft.azure.management.sql.ServiceObjectiveName
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveName*
  name: requestedServiceObjectiveName
  nameWithType: DatabaseUpdate.requestedServiceObjectiveName
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveName
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveName*
  name: withRequestedServiceObjectiveName
  nameWithType: DatabaseUpdate.withRequestedServiceObjectiveName
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveName
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.serviceLevelObjective*
  name: serviceLevelObjective
  nameWithType: DatabaseUpdate.serviceLevelObjective
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.serviceLevelObjective
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.status*
  name: status
  nameWithType: DatabaseUpdate.status
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.status
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.elasticPoolName*
  name: elasticPoolName
  nameWithType: DatabaseUpdate.elasticPoolName
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.elasticPoolName
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withElasticPoolName*
  name: withElasticPoolName
  nameWithType: DatabaseUpdate.withElasticPoolName
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withElasticPoolName
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.defaultSecondaryLocation*
  name: defaultSecondaryLocation
  nameWithType: DatabaseUpdate.defaultSecondaryLocation
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.defaultSecondaryLocation
  package: com.microsoft.azure.management.sql
- uid: java.util.List<com.microsoft.azure.management.sql.implementation.ServiceTierAdvisorInner>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.sql.implementation.ServiceTierAdvisorInner
    name: ServiceTierAdvisorInner
    fullName: com.microsoft.azure.management.sql.implementation.ServiceTierAdvisorInner
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.serviceTierAdvisors*
  name: serviceTierAdvisors
  nameWithType: DatabaseUpdate.serviceTierAdvisors
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.serviceTierAdvisors
  package: com.microsoft.azure.management.sql
- uid: java.util.List<com.microsoft.azure.management.sql.implementation.TransparentDataEncryptionInner>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.sql.implementation.TransparentDataEncryptionInner
    name: TransparentDataEncryptionInner
    fullName: com.microsoft.azure.management.sql.implementation.TransparentDataEncryptionInner
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.transparentDataEncryption*
  name: transparentDataEncryption
  nameWithType: DatabaseUpdate.transparentDataEncryption
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.transparentDataEncryption
  package: com.microsoft.azure.management.sql
- uid: java.util.List<com.microsoft.azure.management.sql.RecommendedIndex>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.sql.RecommendedIndex
    name: RecommendedIndex
    fullName: com.microsoft.azure.management.sql.RecommendedIndex
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.recommendedIndex*
  name: recommendedIndex
  nameWithType: DatabaseUpdate.recommendedIndex
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.recommendedIndex
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.failoverGroupId*
  name: failoverGroupId
  nameWithType: DatabaseUpdate.failoverGroupId
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.failoverGroupId
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.ReadScale
  name: ReadScale
  nameWithType: ReadScale
  fullName: com.microsoft.azure.management.sql.ReadScale
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.readScale*
  name: readScale
  nameWithType: DatabaseUpdate.readScale
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.readScale
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withReadScale*
  name: withReadScale
  nameWithType: DatabaseUpdate.withReadScale
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withReadScale
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.SampleName
  name: SampleName
  nameWithType: SampleName
  fullName: com.microsoft.azure.management.sql.SampleName
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.sampleName*
  name: sampleName
  nameWithType: DatabaseUpdate.sampleName
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.sampleName
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withSampleName*
  name: withSampleName
  nameWithType: DatabaseUpdate.withSampleName
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withSampleName
  package: com.microsoft.azure.management.sql
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.zoneRedundant*
  name: zoneRedundant
  nameWithType: DatabaseUpdate.zoneRedundant
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.zoneRedundant
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.DatabaseUpdate.withZoneRedundant*
  name: withZoneRedundant
  nameWithType: DatabaseUpdate.withZoneRedundant
  fullName: com.microsoft.azure.management.sql.DatabaseUpdate.withZoneRedundant
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.ProxyResource
  name: ProxyResource
  nameWithType: ProxyResource
  fullName: com.microsoft.azure.ProxyResource
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.microsoft.azure.ProxyResource.type()
  name: ProxyResource.type()
  nameWithType: ProxyResource.type()
  fullName: com.microsoft.azure.ProxyResource.type()
- uid: com.microsoft.azure.ProxyResource.name()
  name: ProxyResource.name()
  nameWithType: ProxyResource.name()
  fullName: com.microsoft.azure.ProxyResource.name()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.microsoft.azure.ProxyResource.id()
  name: ProxyResource.id()
  nameWithType: ProxyResource.id()
  fullName: com.microsoft.azure.ProxyResource.id()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.management.sql.implementation.ServiceTierAdvisorInner
  name: ServiceTierAdvisorInner
  nameWithType: ServiceTierAdvisorInner
  fullName: com.microsoft.azure.management.sql.implementation.ServiceTierAdvisorInner
- uid: com.microsoft.azure.management.sql.implementation.TransparentDataEncryptionInner
  name: TransparentDataEncryptionInner
  nameWithType: TransparentDataEncryptionInner
  fullName: com.microsoft.azure.management.sql.implementation.TransparentDataEncryptionInner
- uid: com.microsoft.azure.management.sql.RecommendedIndex
  name: RecommendedIndex
  nameWithType: RecommendedIndex
  fullName: com.microsoft.azure.management.sql.RecommendedIndex
