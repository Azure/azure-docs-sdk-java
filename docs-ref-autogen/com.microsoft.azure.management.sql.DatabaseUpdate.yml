### YamlMime:JavaType
uid: "com.microsoft.azure.management.sql.DatabaseUpdate"
fullName: "com.microsoft.azure.management.sql.DatabaseUpdate"
name: "DatabaseUpdate"
nameWithType: "DatabaseUpdate"
summary: "Represents a database update."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.ProxyResource.id()"
- "com.microsoft.azure.ProxyResource.name()"
- "com.microsoft.azure.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DatabaseUpdate extends ProxyResource"
constructors:
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.DatabaseUpdate()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.DatabaseUpdate()"
  name: "DatabaseUpdate()"
  nameWithType: "DatabaseUpdate.DatabaseUpdate()"
  syntax: "public DatabaseUpdate()"
methods:
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.collation()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.collation()"
  name: "collation()"
  nameWithType: "DatabaseUpdate.collation()"
  summary: "Get the collation of the database."
  syntax: "public String collation()"
  desc: "Get the collation of the database. If createMode is not Default, this value is ignored."
  returns:
    description: "the collation value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.containmentState()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.containmentState()"
  name: "containmentState()"
  nameWithType: "DatabaseUpdate.containmentState()"
  summary: "Get the containment state of the database."
  syntax: "public Long containmentState()"
  desc: "Get the containment state of the database."
  returns:
    description: "the containmentState value"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.createMode()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.createMode()"
  name: "createMode()"
  nameWithType: "DatabaseUpdate.createMode()"
  summary: "Get specifies the mode of database creation."
  syntax: "public CreateMode createMode()"
  desc: "Get specifies the mode of database creation. Default: regular database creation. Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database. OnlineSecondary/NonReadableSecondary: creates a database as a (readable or nonreadable) secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database. PointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified. Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore. Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time. RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID. Copy, NonReadableSecondary, OnlineSecondary and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition. Possible values include: 'Copy', 'Default', 'NonReadableSecondary', 'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore', 'RestoreLongTermRetentionBackup'."
  returns:
    description: "the createMode value"
    type: "<xref href=\"com.microsoft.azure.management.sql.CreateMode?alt=com.microsoft.azure.management.sql.CreateMode&text=CreateMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.creationDate()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.creationDate()"
  name: "creationDate()"
  nameWithType: "DatabaseUpdate.creationDate()"
  summary: "Get the creation date of the database (ISO8601 format)."
  syntax: "public DateTime creationDate()"
  desc: "Get the creation date of the database (ISO8601 format)."
  returns:
    description: "the creationDate value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.currentServiceObjectiveId()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.currentServiceObjectiveId()"
  name: "currentServiceObjectiveId()"
  nameWithType: "DatabaseUpdate.currentServiceObjectiveId()"
  summary: "Get the current service level objective ID of the database."
  syntax: "public UUID currentServiceObjectiveId()"
  desc: "Get the current service level objective ID of the database. This is the ID of the service level objective that is currently active."
  returns:
    description: "the currentServiceObjectiveId value"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.databaseId()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.databaseId()"
  name: "databaseId()"
  nameWithType: "DatabaseUpdate.databaseId()"
  summary: "Get the ID of the database."
  syntax: "public UUID databaseId()"
  desc: "Get the ID of the database."
  returns:
    description: "the databaseId value"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.defaultSecondaryLocation()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.defaultSecondaryLocation()"
  name: "defaultSecondaryLocation()"
  nameWithType: "DatabaseUpdate.defaultSecondaryLocation()"
  summary: "Get the default secondary region for this database."
  syntax: "public String defaultSecondaryLocation()"
  desc: "Get the default secondary region for this database."
  returns:
    description: "the defaultSecondaryLocation value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.earliestRestoreDate()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.earliestRestoreDate()"
  name: "earliestRestoreDate()"
  nameWithType: "DatabaseUpdate.earliestRestoreDate()"
  summary: "Get this records the earliest start date and time that restore is available for this database (ISO8601 format)."
  syntax: "public DateTime earliestRestoreDate()"
  desc: "Get this records the earliest start date and time that restore is available for this database (ISO8601 format)."
  returns:
    description: "the earliestRestoreDate value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.edition()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.edition()"
  name: "edition()"
  nameWithType: "DatabaseUpdate.edition()"
  summary: "Get the edition of the database."
  syntax: "public DatabaseEdition edition()"
  desc: "Get the edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored. The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API or one of the following commands: \\`\\`\\`azurecli az sql db list-editions -l <location> -o table \\`\\`\\`\\` \\`\\`\\`powershell Get-AzSqlServerServiceObjective -Location <location> \\`\\`\\`\\` . Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'PremiumRS', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2', 'GeneralPurpose', 'BusinessCritical', 'Hyperscale'."
  returns:
    description: "the edition value"
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseEdition?alt=com.microsoft.azure.management.sql.DatabaseEdition&text=DatabaseEdition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.elasticPoolName()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.elasticPoolName()"
  name: "elasticPoolName()"
  nameWithType: "DatabaseUpdate.elasticPoolName()"
  summary: "Get the name of the elastic pool the database is in."
  syntax: "public String elasticPoolName()"
  desc: "Get the name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition."
  returns:
    description: "the elasticPoolName value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.failoverGroupId()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.failoverGroupId()"
  name: "failoverGroupId()"
  nameWithType: "DatabaseUpdate.failoverGroupId()"
  summary: "Get the resource identifier of the failover group containing this database."
  syntax: "public String failoverGroupId()"
  desc: "Get the resource identifier of the failover group containing this database."
  returns:
    description: "the failoverGroupId value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.maxSizeBytes()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.maxSizeBytes()"
  name: "maxSizeBytes()"
  nameWithType: "DatabaseUpdate.maxSizeBytes()"
  summary: "Get the max size of the database expressed in bytes."
  syntax: "public String maxSizeBytes()"
  desc: "Get the max size of the database expressed in bytes. If createMode is not Default, this value is ignored. To see possible values, query the capabilities API (/subscriptions/\\{subscriptionId\\}/providers/Microsoft.Sql/locations/\\{locationID\\}/capabilities) referred to by operationId: \"Capabilities\\_ListByLocation.\"."
  returns:
    description: "the maxSizeBytes value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.readScale()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.readScale()"
  name: "readScale()"
  nameWithType: "DatabaseUpdate.readScale()"
  summary: "Get conditional."
  syntax: "public ReadScale readScale()"
  desc: "Get conditional. If the database is a geo-secondary, readScale indicates whether read-only connections are allowed to this database or not. Not supported for DataWarehouse edition. Possible values include: 'Enabled', 'Disabled'."
  returns:
    description: "the readScale value"
    type: "<xref href=\"com.microsoft.azure.management.sql.ReadScale?alt=com.microsoft.azure.management.sql.ReadScale&text=ReadScale\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.recommendedIndex()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.recommendedIndex()"
  name: "recommendedIndex()"
  nameWithType: "DatabaseUpdate.recommendedIndex()"
  summary: "Get the recommended indices for this database."
  syntax: "public List<RecommendedIndex> recommendedIndex()"
  desc: "Get the recommended indices for this database."
  returns:
    description: "the recommendedIndex value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.RecommendedIndex?alt=com.microsoft.azure.management.sql.RecommendedIndex&text=RecommendedIndex\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.recoveryServicesRecoveryPointResourceId()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.recoveryServicesRecoveryPointResourceId()"
  name: "recoveryServicesRecoveryPointResourceId()"
  nameWithType: "DatabaseUpdate.recoveryServicesRecoveryPointResourceId()"
  summary: "Get conditional."
  syntax: "public String recoveryServicesRecoveryPointResourceId()"
  desc: "Get conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from."
  returns:
    description: "the recoveryServicesRecoveryPointResourceId value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveId()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveId()"
  name: "requestedServiceObjectiveId()"
  nameWithType: "DatabaseUpdate.requestedServiceObjectiveId()"
  summary: "Get the configured service level objective ID of the database."
  syntax: "public UUID requestedServiceObjectiveId()"
  desc: "Get the configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName. The list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API."
  returns:
    description: "the requestedServiceObjectiveId value"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveName()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.requestedServiceObjectiveName()"
  name: "requestedServiceObjectiveName()"
  nameWithType: "DatabaseUpdate.requestedServiceObjectiveName()"
  summary: "Get the name of the configured service level objective of the database."
  syntax: "public ServiceObjectiveName requestedServiceObjectiveName()"
  desc: "Get the name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API or one of the following commands: \\`\\`\\`azurecli az sql db list-editions -l <location> -o table \\`\\`\\`\\` \\`\\`\\`powershell Get-AzSqlServerServiceObjective -Location <location> \\`\\`\\`\\` . Possible values include: 'System', 'System0', 'System1', 'System2', 'System3', 'System4', 'System2L', 'System3L', 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200', 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500', 'DW1500c', 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c', 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000', 'DS1200', 'DS1500', 'DS2000', 'ElasticPool'."
  returns:
    description: "the requestedServiceObjectiveName value"
    type: "<xref href=\"com.microsoft.azure.management.sql.ServiceObjectiveName?alt=com.microsoft.azure.management.sql.ServiceObjectiveName&text=ServiceObjectiveName\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.restorePointInTime()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.restorePointInTime()"
  name: "restorePointInTime()"
  nameWithType: "DatabaseUpdate.restorePointInTime()"
  summary: "Get conditional."
  syntax: "public DateTime restorePointInTime()"
  desc: "Get conditional. If createMode is PointInTimeRestore, this value is required. If createMode is Restore, this value is optional. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. Must be greater than or equal to the source database's earliestRestoreDate value."
  returns:
    description: "the restorePointInTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.sampleName()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.sampleName()"
  name: "sampleName()"
  nameWithType: "DatabaseUpdate.sampleName()"
  summary: "Get indicates the name of the sample schema to apply when creating this database."
  syntax: "public SampleName sampleName()"
  desc: "Get indicates the name of the sample schema to apply when creating this database. If createMode is not Default, this value is ignored. Not supported for DataWarehouse edition. Possible values include: 'AdventureWorksLT'."
  returns:
    description: "the sampleName value"
    type: "<xref href=\"com.microsoft.azure.management.sql.SampleName?alt=com.microsoft.azure.management.sql.SampleName&text=SampleName\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.serviceLevelObjective()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.serviceLevelObjective()"
  name: "serviceLevelObjective()"
  nameWithType: "DatabaseUpdate.serviceLevelObjective()"
  summary: "Get the current service level objective of the database."
  syntax: "public ServiceObjectiveName serviceLevelObjective()"
  desc: "Get the current service level objective of the database. Possible values include: 'System', 'System0', 'System1', 'System2', 'System3', 'System4', 'System2L', 'System3L', 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200', 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500', 'DW1500c', 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c', 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000', 'DS1200', 'DS1500', 'DS2000', 'ElasticPool'."
  returns:
    description: "the serviceLevelObjective value"
    type: "<xref href=\"com.microsoft.azure.management.sql.ServiceObjectiveName?alt=com.microsoft.azure.management.sql.ServiceObjectiveName&text=ServiceObjectiveName\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.serviceTierAdvisors()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.serviceTierAdvisors()"
  name: "serviceTierAdvisors()"
  nameWithType: "DatabaseUpdate.serviceTierAdvisors()"
  summary: "Get the list of service tier advisors for this database."
  syntax: "public List<ServiceTierAdvisorInner> serviceTierAdvisors()"
  desc: "Get the list of service tier advisors for this database. Expanded property."
  returns:
    description: "the serviceTierAdvisors value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.implementation.ServiceTierAdvisorInner?alt=com.microsoft.azure.management.sql.implementation.ServiceTierAdvisorInner&text=ServiceTierAdvisorInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseDeletionDate()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseDeletionDate()"
  name: "sourceDatabaseDeletionDate()"
  nameWithType: "DatabaseUpdate.sourceDatabaseDeletionDate()"
  summary: "Get conditional."
  syntax: "public DateTime sourceDatabaseDeletionDate()"
  desc: "Get conditional. If createMode is Restore and sourceDatabaseId is the deleted database's original resource id when it existed (as opposed to its current restorable dropped database id), then this value is required. Specifies the time that the database was deleted."
  returns:
    description: "the sourceDatabaseDeletionDate value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseId()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.sourceDatabaseId()"
  name: "sourceDatabaseId()"
  nameWithType: "DatabaseUpdate.sourceDatabaseId()"
  summary: "Get conditional."
  syntax: "public String sourceDatabaseId()"
  desc: "Get conditional. If createMode is Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery, or Restore, then this value is required. Specifies the resource ID of the source database. If createMode is NonReadableSecondary or OnlineSecondary, the name of the source database must be the same as the new database being created."
  returns:
    description: "the sourceDatabaseId value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.status()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.status()"
  name: "status()"
  nameWithType: "DatabaseUpdate.status()"
  summary: "Get the status of the database."
  syntax: "public String status()"
  desc: "Get the status of the database."
  returns:
    description: "the status value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.tags()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.tags()"
  name: "tags()"
  nameWithType: "DatabaseUpdate.tags()"
  summary: "Get resource tags."
  syntax: "public Map<String,String> tags()"
  desc: "Get resource tags."
  returns:
    description: "the tags value"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.transparentDataEncryption()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.transparentDataEncryption()"
  name: "transparentDataEncryption()"
  nameWithType: "DatabaseUpdate.transparentDataEncryption()"
  summary: "Get the transparent data encryption info for this database."
  syntax: "public List<TransparentDataEncryptionInner> transparentDataEncryption()"
  desc: "Get the transparent data encryption info for this database."
  returns:
    description: "the transparentDataEncryption value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.implementation.TransparentDataEncryptionInner?alt=com.microsoft.azure.management.sql.implementation.TransparentDataEncryptionInner&text=TransparentDataEncryptionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withCollation(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withCollation(String collation)"
  name: "withCollation(String collation)"
  nameWithType: "DatabaseUpdate.withCollation(String collation)"
  summary: "Set the collation of the database."
  parameters:
  - description: "the collation value to set"
    name: "collation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withCollation(String collation)"
  desc: "Set the collation of the database. If createMode is not Default, this value is ignored."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withCreateMode(com.microsoft.azure.management.sql.CreateMode)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withCreateMode(CreateMode createMode)"
  name: "withCreateMode(CreateMode createMode)"
  nameWithType: "DatabaseUpdate.withCreateMode(CreateMode createMode)"
  summary: "Set specifies the mode of database creation."
  parameters:
  - description: "the createMode value to set"
    name: "createMode"
    type: "<xref href=\"com.microsoft.azure.management.sql.CreateMode?alt=com.microsoft.azure.management.sql.CreateMode&text=CreateMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withCreateMode(CreateMode createMode)"
  desc: "Set specifies the mode of database creation. Default: regular database creation. Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database. OnlineSecondary/NonReadableSecondary: creates a database as a (readable or nonreadable) secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database. PointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified. Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore. Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time. RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID. Copy, NonReadableSecondary, OnlineSecondary and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition. Possible values include: 'Copy', 'Default', 'NonReadableSecondary', 'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore', 'RestoreLongTermRetentionBackup'."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withEdition(com.microsoft.azure.management.sql.DatabaseEdition)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withEdition(DatabaseEdition edition)"
  name: "withEdition(DatabaseEdition edition)"
  nameWithType: "DatabaseUpdate.withEdition(DatabaseEdition edition)"
  summary: "Set the edition of the database."
  parameters:
  - description: "the edition value to set"
    name: "edition"
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseEdition?alt=com.microsoft.azure.management.sql.DatabaseEdition&text=DatabaseEdition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withEdition(DatabaseEdition edition)"
  desc: "Set the edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored. The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API or one of the following commands: \\`\\`\\`azurecli az sql db list-editions -l <location> -o table \\`\\`\\`\\` \\`\\`\\`powershell Get-AzSqlServerServiceObjective -Location <location> \\`\\`\\`\\` . Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'PremiumRS', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2', 'GeneralPurpose', 'BusinessCritical', 'Hyperscale'."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withElasticPoolName(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withElasticPoolName(String elasticPoolName)"
  name: "withElasticPoolName(String elasticPoolName)"
  nameWithType: "DatabaseUpdate.withElasticPoolName(String elasticPoolName)"
  summary: "Set the name of the elastic pool the database is in."
  parameters:
  - description: "the elasticPoolName value to set"
    name: "elasticPoolName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withElasticPoolName(String elasticPoolName)"
  desc: "Set the name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withMaxSizeBytes(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withMaxSizeBytes(String maxSizeBytes)"
  name: "withMaxSizeBytes(String maxSizeBytes)"
  nameWithType: "DatabaseUpdate.withMaxSizeBytes(String maxSizeBytes)"
  summary: "Set the max size of the database expressed in bytes."
  parameters:
  - description: "the maxSizeBytes value to set"
    name: "maxSizeBytes"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withMaxSizeBytes(String maxSizeBytes)"
  desc: "Set the max size of the database expressed in bytes. If createMode is not Default, this value is ignored. To see possible values, query the capabilities API (/subscriptions/\\{subscriptionId\\}/providers/Microsoft.Sql/locations/\\{locationID\\}/capabilities) referred to by operationId: \"Capabilities\\_ListByLocation.\"."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withReadScale(com.microsoft.azure.management.sql.ReadScale)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withReadScale(ReadScale readScale)"
  name: "withReadScale(ReadScale readScale)"
  nameWithType: "DatabaseUpdate.withReadScale(ReadScale readScale)"
  summary: "Set conditional."
  parameters:
  - description: "the readScale value to set"
    name: "readScale"
    type: "<xref href=\"com.microsoft.azure.management.sql.ReadScale?alt=com.microsoft.azure.management.sql.ReadScale&text=ReadScale\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withReadScale(ReadScale readScale)"
  desc: "Set conditional. If the database is a geo-secondary, readScale indicates whether read-only connections are allowed to this database or not. Not supported for DataWarehouse edition. Possible values include: 'Enabled', 'Disabled'."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withRecoveryServicesRecoveryPointResourceId(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withRecoveryServicesRecoveryPointResourceId(String recoveryServicesRecoveryPointResourceId)"
  name: "withRecoveryServicesRecoveryPointResourceId(String recoveryServicesRecoveryPointResourceId)"
  nameWithType: "DatabaseUpdate.withRecoveryServicesRecoveryPointResourceId(String recoveryServicesRecoveryPointResourceId)"
  summary: "Set conditional."
  parameters:
  - description: "the recoveryServicesRecoveryPointResourceId value to set"
    name: "recoveryServicesRecoveryPointResourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withRecoveryServicesRecoveryPointResourceId(String recoveryServicesRecoveryPointResourceId)"
  desc: "Set conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveId(java.util.UUID)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveId(UUID requestedServiceObjectiveId)"
  name: "withRequestedServiceObjectiveId(UUID requestedServiceObjectiveId)"
  nameWithType: "DatabaseUpdate.withRequestedServiceObjectiveId(UUID requestedServiceObjectiveId)"
  summary: "Set the configured service level objective ID of the database."
  parameters:
  - description: "the requestedServiceObjectiveId value to set"
    name: "requestedServiceObjectiveId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withRequestedServiceObjectiveId(UUID requestedServiceObjectiveId)"
  desc: "Set the configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName. The list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveName(com.microsoft.azure.management.sql.ServiceObjectiveName)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withRequestedServiceObjectiveName(ServiceObjectiveName requestedServiceObjectiveName)"
  name: "withRequestedServiceObjectiveName(ServiceObjectiveName requestedServiceObjectiveName)"
  nameWithType: "DatabaseUpdate.withRequestedServiceObjectiveName(ServiceObjectiveName requestedServiceObjectiveName)"
  summary: "Set the name of the configured service level objective of the database."
  parameters:
  - description: "the requestedServiceObjectiveName value to set"
    name: "requestedServiceObjectiveName"
    type: "<xref href=\"com.microsoft.azure.management.sql.ServiceObjectiveName?alt=com.microsoft.azure.management.sql.ServiceObjectiveName&text=ServiceObjectiveName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withRequestedServiceObjectiveName(ServiceObjectiveName requestedServiceObjectiveName)"
  desc: "Set the name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the \\`Capabilities\\_ListByLocation\\` REST API or one of the following commands: \\`\\`\\`azurecli az sql db list-editions -l <location> -o table \\`\\`\\`\\` \\`\\`\\`powershell Get-AzSqlServerServiceObjective -Location <location> \\`\\`\\`\\` . Possible values include: 'System', 'System0', 'System1', 'System2', 'System3', 'System4', 'System2L', 'System3L', 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200', 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500', 'DW1500c', 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c', 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000', 'DS1200', 'DS1500', 'DS2000', 'ElasticPool'."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withRestorePointInTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withRestorePointInTime(DateTime restorePointInTime)"
  name: "withRestorePointInTime(DateTime restorePointInTime)"
  nameWithType: "DatabaseUpdate.withRestorePointInTime(DateTime restorePointInTime)"
  summary: "Set conditional."
  parameters:
  - description: "the restorePointInTime value to set"
    name: "restorePointInTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withRestorePointInTime(DateTime restorePointInTime)"
  desc: "Set conditional. If createMode is PointInTimeRestore, this value is required. If createMode is Restore, this value is optional. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. Must be greater than or equal to the source database's earliestRestoreDate value."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withSampleName(com.microsoft.azure.management.sql.SampleName)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withSampleName(SampleName sampleName)"
  name: "withSampleName(SampleName sampleName)"
  nameWithType: "DatabaseUpdate.withSampleName(SampleName sampleName)"
  summary: "Set indicates the name of the sample schema to apply when creating this database."
  parameters:
  - description: "the sampleName value to set"
    name: "sampleName"
    type: "<xref href=\"com.microsoft.azure.management.sql.SampleName?alt=com.microsoft.azure.management.sql.SampleName&text=SampleName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withSampleName(SampleName sampleName)"
  desc: "Set indicates the name of the sample schema to apply when creating this database. If createMode is not Default, this value is ignored. Not supported for DataWarehouse edition. Possible values include: 'AdventureWorksLT'."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseDeletionDate(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseDeletionDate(DateTime sourceDatabaseDeletionDate)"
  name: "withSourceDatabaseDeletionDate(DateTime sourceDatabaseDeletionDate)"
  nameWithType: "DatabaseUpdate.withSourceDatabaseDeletionDate(DateTime sourceDatabaseDeletionDate)"
  summary: "Set conditional."
  parameters:
  - description: "the sourceDatabaseDeletionDate value to set"
    name: "sourceDatabaseDeletionDate"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withSourceDatabaseDeletionDate(DateTime sourceDatabaseDeletionDate)"
  desc: "Set conditional. If createMode is Restore and sourceDatabaseId is the deleted database's original resource id when it existed (as opposed to its current restorable dropped database id), then this value is required. Specifies the time that the database was deleted."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseId(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withSourceDatabaseId(String sourceDatabaseId)"
  name: "withSourceDatabaseId(String sourceDatabaseId)"
  nameWithType: "DatabaseUpdate.withSourceDatabaseId(String sourceDatabaseId)"
  summary: "Set conditional."
  parameters:
  - description: "the sourceDatabaseId value to set"
    name: "sourceDatabaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withSourceDatabaseId(String sourceDatabaseId)"
  desc: "Set conditional. If createMode is Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery, or Restore, then this value is required. Specifies the resource ID of the source database. If createMode is NonReadableSecondary or OnlineSecondary, the name of the source database must be the same as the new database being created."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "DatabaseUpdate.withTags(Map<String,String> tags)"
  summary: "Set resource tags."
  parameters:
  - description: "the tags value to set"
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DatabaseUpdate withTags(Map<String,String> tags)"
  desc: "Set resource tags."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.withZoneRedundant(java.lang.Boolean)"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.withZoneRedundant(Boolean zoneRedundant)"
  name: "withZoneRedundant(Boolean zoneRedundant)"
  nameWithType: "DatabaseUpdate.withZoneRedundant(Boolean zoneRedundant)"
  summary: "Set whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones."
  parameters:
  - description: "the zoneRedundant value to set"
    name: "zoneRedundant"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdate withZoneRedundant(Boolean zoneRedundant)"
  desc: "Set whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones."
  returns:
    description: "the DatabaseUpdate object itself."
    type: "<xref href=\"com.microsoft.azure.management.sql.DatabaseUpdate?alt=com.microsoft.azure.management.sql.DatabaseUpdate&text=DatabaseUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.DatabaseUpdate.zoneRedundant()"
  fullName: "com.microsoft.azure.management.sql.DatabaseUpdate.zoneRedundant()"
  name: "zoneRedundant()"
  nameWithType: "DatabaseUpdate.zoneRedundant()"
  summary: "Get whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones."
  syntax: "public Boolean zoneRedundant()"
  desc: "Get whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones."
  returns:
    description: "the zoneRedundant value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a database update."
metadata: {}
package: "com.microsoft.azure.management.sql"
artifact: com.microsoft.azure:azure-mgmt-sql:1.41.4
