### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper"
fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper"
name: "TaskGroup.ProxyTaskGroupWrapper"
nameWithType: "TaskGroup.ProxyTaskGroupWrapper"
summary: "Wrapper type to simplify operations on proxy TaskGroup.\n\nA proxy TaskGroup will be activated for a TaskGroup as soon as a \"post-run\" dependent added to the actual TaskGroup via <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup#addPostRunDependentTaskGroup(TaskGroup)\"></xref>. \"post run\" dependents are those TaskGroup which need to be invoked as part of invocation of actual TaskGroup."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "protected static final class TaskGroup.ProxyTaskGroupWrapper"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.dag"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
