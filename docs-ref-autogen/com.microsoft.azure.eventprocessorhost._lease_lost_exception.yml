### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventprocessorhost._lease_lost_exception
  id: _lease_lost_exception
  parent: com.microsoft.azure.eventprocessorhost
  children:
  - com.microsoft.azure.eventprocessorhost._lease_lost_exception.getPartitionId()
  href: com.microsoft.azure.eventprocessorhost._lease_lost_exception.yml
  langs:
  - java
  name: LeaseLostException
  nameWithType: LeaseLostException
  fullName: com.microsoft.azure.eventprocessorhost.LeaseLostException
  type: Class
  source:
    remote: &o0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/LeaseLostException.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/LeaseLostException.java
    startLine: 7
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public class LeaseLostException
  inheritance:
  - java.lang.Object
  - Exception
- uid: com.microsoft.azure.eventprocessorhost._lease_lost_exception.getPartitionId()
  id: getPartitionId()
  parent: com.microsoft.azure.eventprocessorhost._lease_lost_exception
  href: com.microsoft.azure.eventprocessorhost._lease_lost_exception.yml
  langs:
  - java
  name: getPartitionId()
  nameWithType: LeaseLostException.getPartitionId()
  fullName: String com.microsoft.azure.eventprocessorhost.LeaseLostException.getPartitionId()
  overload: com.microsoft.azure.eventprocessorhost._lease_lost_exception.getPartitionId*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/LeaseLostException.java
    startLine: 20
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public String getPartitionId()
    return:
      type: "26831127"
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.eventprocessorhost._lease_lost_exception.getPartitionId*
  name: getPartitionId
  nameWithType: LeaseLostException.getPartitionId
  fullName: String com.microsoft.azure.eventprocessorhost.LeaseLostException.getPartitionId
  package: com.microsoft.azure.eventprocessorhost
- uid: com.microsoft.azure.eventprocessorhost._lease
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._lease.yml
  name: Lease
  nameWithType: Lease
  fullName: com.microsoft.azure.eventprocessorhost.Lease
  type: Class
  summary: >-
    <p>

      <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> class is public so that advanced users can implement an <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref>. Unless you are implementing <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref> you should not have to deal with objects of this class or derived classes directly. </p>

    <p>When implementing an <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref> it may be necessary to derive from this class to carry around more information and override isExpired. The data fields have been left private instead of protected because they have a full set of getters and setters (except partitionId, which is immutable) which provide equivalent access. When implementing AzureBlobLease, for example, there was no need for more access than the getters and setters provide. </p>

    <p>Note that a <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> object just carries information about a partition lease. The functionality to acquire/renew/release a lease is all on the <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref>. </p>
  syntax:
    content: public class Lease
