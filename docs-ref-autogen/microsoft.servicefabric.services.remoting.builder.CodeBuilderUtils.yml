### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.addDataMemberField(ClassWriter cw, Class<?> argumentType, String fieldName)
  name: addDataMemberField(ClassWriter cw, Class<?> argumentType, String fieldName)
  nameWithType: CodeBuilderUtils.addDataMemberField(ClassWriter cw, Class<?> argumentType, String fieldName)
  parameters:
  - name: cw
    type: <xref href="ClassWriter?alt=ClassWriter&text=ClassWriter" data-throw-if-not-resolved="False"/>
  - name: argumentType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  - name: fieldName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public static void addDataMemberField(ClassWriter cw, Class<?> argumentType, String fieldName)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.addDataMemberField(ClassWriter,Class<?>,String)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.getJvmClassName(Class<?> type)
  name: getJvmClassName(Class<?> type)
  nameWithType: CodeBuilderUtils.getJvmClassName(Class<?> type)
  parameters:
  - name: type
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public static String getJvmClassName(Class<?> type)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.getJvmClassName(Class<?>)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.getJvmClassName(String type)
  name: getJvmClassName(String type)
  nameWithType: CodeBuilderUtils.getJvmClassName(String type)
  parameters:
  - name: type
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public static String getJvmClassName(String type)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.getJvmClassName(String)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.getJvmSignature(Class<?> type)
  name: getJvmSignature(Class<?> type)
  nameWithType: CodeBuilderUtils.getJvmSignature(Class<?> type)
  parameters:
  - name: type
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public static String getJvmSignature(Class<?> type)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.getJvmSignature(Class<?>)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.getJvmSignature(String typeName)
  name: getJvmSignature(String typeName)
  nameWithType: CodeBuilderUtils.getJvmSignature(String typeName)
  parameters:
  - name: typeName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public static String getJvmSignature(String typeName)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.getJvmSignature(String)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.getMethodSignature(Method method)
  name: getMethodSignature(Method method)
  nameWithType: CodeBuilderUtils.getMethodSignature(Method method)
  parameters:
  - name: method
    type: <xref href="Method?alt=Method&text=Method" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public static String getMethodSignature(Method method)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.getMethodSignature(Method)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.initializeClassBuilder(ClassWriter cw, String name, Class<?> baseType, Class<?>... interfaces)
  name: initializeClassBuilder(ClassWriter cw, String name, Class<?> baseType, Class<?>... interfaces)
  nameWithType: CodeBuilderUtils.initializeClassBuilder(ClassWriter cw, String name, Class<?> baseType, Class<?>... interfaces)
  parameters:
  - name: cw
    type: <xref href="ClassWriter?alt=ClassWriter&text=ClassWriter" data-throw-if-not-resolved="False"/>
  - name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: baseType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  - name: interfaces
    type: <xref href="Class%3C%3F%3E...?alt=Class%3C%3F%3E...&text=Class%3C%3F%3E..." data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="ClassWriter?alt=ClassWriter&text=ClassWriter" data-throw-if-not-resolved="False"/>
  syntax: public static ClassWriter initializeClassBuilder(ClassWriter cw, String name, Class<?> baseType, Class<?>... interfaces)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils.initializeClassBuilder(ClassWriter,String,Class<?>,Class<?>...)
nameWithType: CodeBuilderUtils
syntax: public class CodeBuilderUtils
type: class
uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils
fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderUtils
name: CodeBuilderUtils
package: microsoft.servicefabric.services.remoting.builder
summary: <p>CodeBuilder utility methods. For internal use only. </p>
metadata: {}
