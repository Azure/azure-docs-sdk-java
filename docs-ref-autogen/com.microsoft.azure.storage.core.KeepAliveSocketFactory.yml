### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="SSLSocketFactory" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(InetAddress inetAddress, int i)
  name: createSocket(InetAddress inetAddress, int i)
  nameWithType: KeepAliveSocketFactory.createSocket(InetAddress inetAddress, int i)
  parameters:
  - name: inetAddress
    type: <xref href="InetAddress?alt=InetAddress&text=InetAddress" data-throw-if-not-resolved="False"/>
  - name: i
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Socket?alt=Socket&text=Socket" data-throw-if-not-resolved="False"/>
  syntax: public Socket createSocket(InetAddress inetAddress, int i)
  uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(InetAddress,int)
- fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(InetAddress inetAddress, int i, InetAddress inetAddress1, int i1)
  name: createSocket(InetAddress inetAddress, int i, InetAddress inetAddress1, int i1)
  nameWithType: KeepAliveSocketFactory.createSocket(InetAddress inetAddress, int i, InetAddress inetAddress1, int i1)
  parameters:
  - name: inetAddress
    type: <xref href="InetAddress?alt=InetAddress&text=InetAddress" data-throw-if-not-resolved="False"/>
  - name: i
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - name: inetAddress1
    type: <xref href="InetAddress?alt=InetAddress&text=InetAddress" data-throw-if-not-resolved="False"/>
  - name: i1
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Socket?alt=Socket&text=Socket" data-throw-if-not-resolved="False"/>
  syntax: public Socket createSocket(InetAddress inetAddress, int i, InetAddress inetAddress1, int i1)
  uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(InetAddress,int,InetAddress,int)
- fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(Socket socket, String s, int i, boolean b)
  name: createSocket(Socket socket, String s, int i, boolean b)
  nameWithType: KeepAliveSocketFactory.createSocket(Socket socket, String s, int i, boolean b)
  parameters:
  - name: socket
    type: <xref href="Socket?alt=Socket&text=Socket" data-throw-if-not-resolved="False"/>
  - name: s
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: i
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - name: b
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Socket?alt=Socket&text=Socket" data-throw-if-not-resolved="False"/>
  syntax: public Socket createSocket(Socket socket, String s, int i, boolean b)
  uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(Socket,String,int,boolean)
- fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(String s, int i)
  name: createSocket(String s, int i)
  nameWithType: KeepAliveSocketFactory.createSocket(String s, int i)
  parameters:
  - name: s
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: i
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Socket?alt=Socket&text=Socket" data-throw-if-not-resolved="False"/>
  syntax: public Socket createSocket(String s, int i)
  uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(String,int)
- fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(String s, int i, InetAddress inetAddress, int i1)
  name: createSocket(String s, int i, InetAddress inetAddress, int i1)
  nameWithType: KeepAliveSocketFactory.createSocket(String s, int i, InetAddress inetAddress, int i1)
  parameters:
  - name: s
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: i
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - name: inetAddress
    type: <xref href="InetAddress?alt=InetAddress&text=InetAddress" data-throw-if-not-resolved="False"/>
  - name: i1
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Socket?alt=Socket&text=Socket" data-throw-if-not-resolved="False"/>
  syntax: public Socket createSocket(String s, int i, InetAddress inetAddress, int i1)
  uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(String,int,InetAddress,int)
- fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getDefaultCipherSuites()
  name: getDefaultCipherSuites()
  nameWithType: KeepAliveSocketFactory.getDefaultCipherSuites()
  returns:
    type: <xref href="String+%5B%5D?alt=String+%5B%5D&text=String+%5B%5D" data-throw-if-not-resolved="False"/>
  syntax: public String [] getDefaultCipherSuites()
  uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getDefaultCipherSuites()
- fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getInstance()
  name: getInstance()
  nameWithType: KeepAliveSocketFactory.getInstance()
  returns:
    type: <xref href="com.microsoft.azure.storage.core.KeepAliveSocketFactory?alt=com.microsoft.azure.storage.core.KeepAliveSocketFactory&text=KeepAliveSocketFactory" data-throw-if-not-resolved="False"/>
  syntax: public static KeepAliveSocketFactory getInstance()
  uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getInstance()
- fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getSupportedCipherSuites()
  name: getSupportedCipherSuites()
  nameWithType: KeepAliveSocketFactory.getSupportedCipherSuites()
  returns:
    type: <xref href="String+%5B%5D?alt=String+%5B%5D&text=String+%5B%5D" data-throw-if-not-resolved="False"/>
  syntax: public String [] getSupportedCipherSuites()
  uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getSupportedCipherSuites()
nameWithType: KeepAliveSocketFactory
syntax: public class KeepAliveSocketFactory
type: class
uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory
fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory
name: KeepAliveSocketFactory
package: com.microsoft.azure.storage.core
summary: >-
  <p>RESERVED FOR INTERNAL USE.</p>

  <p>This type is used to help work around a bug in the JDK where connection timeouts are not honored on a retried request. In other words, if a customer set a timeout on an operation, this timeout is only ever respected on the first attempt at the request. Retries will cause a different underlying connection implementation to be loaded that will ignore the timeout parameter. Therefore, requests can potentially hang forever if the connection is broken after these retries.</p>

  <p>Enabling keep-alive timeouts acts as a fallback in these scenarios so that, even if the operation timeout is ignored, the socket will still eventually timeout and the request will be cancelled. We enable keep alive timeouts via a wrapper implementation of a SocketFactory. We use a default socket factory to get sockets from the system and then simply set the keep-alive option to true before returning to the client. This factory will be set on the HttpsUrlConnection objects. </p>
metadata: {}
