### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory
  id: KeepAliveSocketFactory
  parent: com.microsoft.azure.storage.core
  children:
  - com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(InetAddress,int)
  - com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(InetAddress,int,InetAddress,int)
  - com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(Socket,String,int,boolean)
  - com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(String,int)
  - com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(String,int,InetAddress,int)
  - com.microsoft.azure.storage.core.KeepAliveSocketFactory.getDefaultCipherSuites()
  - com.microsoft.azure.storage.core.KeepAliveSocketFactory.getInstance()
  - com.microsoft.azure.storage.core.KeepAliveSocketFactory.getSupportedCipherSuites()
  href: com.microsoft.azure.storage.core.KeepAliveSocketFactory.yml
  langs:
  - java
  name: KeepAliveSocketFactory
  nameWithType: KeepAliveSocketFactory
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/core/KeepAliveSocketFactory.java
      branch: legacy-master
      repo: https://github.com/azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/core/KeepAliveSocketFactory.java
    startLine: 39
  package: com.microsoft.azure.storage.core
  summary: "<p>RESERVED FOR INTERNAL USE.</p>\r\n<p>This type is used to help work around a bug in the JDK where connection timeouts are not honored on a retried request. In other words, if a customer set a timeout on an operation, this timeout is only ever respected on the first attempt at the request. Retries will cause a different underlying connection implementation to be loaded that will ignore the timeout parameter. Therefore, requests can potentially hang forever if the connection is broken after these retries.</p>\r\n<p>Enabling keep-alive timeouts acts as a fallback in these scenarios so that, even if the operation timeout is ignored, the socket will still eventually timeout and the request will be cancelled. We enable keep alive timeouts via a wrapper implementation of a SocketFactory. We use a default socket factory to get sockets from the system and then simply set the keep-alive option to true before returning to the client. This factory will be set on the HttpsUrlConnection objects. </p>"
  syntax: &o1
    content: public class KeepAliveSocketFactory
  inheritance:
  - java.lang.Object
  - SSLSocketFactory
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(InetAddress,int)
  id: createSocket(InetAddress,int)
  parent: com.microsoft.azure.storage.core.KeepAliveSocketFactory
  href: com.microsoft.azure.storage.core.KeepAliveSocketFactory.yml
  langs:
  - java
  name: createSocket(InetAddress inetAddress, int i)
  nameWithType: KeepAliveSocketFactory.createSocket(InetAddress inetAddress, int i)
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(InetAddress inetAddress, int i)
  overload: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/core/KeepAliveSocketFactory.java
    startLine: 84
  package: com.microsoft.azure.storage.core
  syntax:
    content: public Socket createSocket(InetAddress inetAddress, int i)
    parameters:
    - id: inetAddress
      type: 0595dc3f
    - id: i
      type: f75371fa
    return:
      type: 599bf669
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(InetAddress,int,InetAddress,int)
  id: createSocket(InetAddress,int,InetAddress,int)
  parent: com.microsoft.azure.storage.core.KeepAliveSocketFactory
  href: com.microsoft.azure.storage.core.KeepAliveSocketFactory.yml
  langs:
  - java
  name: createSocket(InetAddress inetAddress, int i, InetAddress inetAddress1, int i1)
  nameWithType: KeepAliveSocketFactory.createSocket(InetAddress inetAddress, int i, InetAddress inetAddress1, int i1)
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(InetAddress inetAddress, int i, InetAddress inetAddress1, int i1)
  overload: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/core/KeepAliveSocketFactory.java
    startLine: 91
  package: com.microsoft.azure.storage.core
  syntax:
    content: public Socket createSocket(InetAddress inetAddress, int i, InetAddress inetAddress1, int i1)
    parameters:
    - id: inetAddress
      type: 0595dc3f
    - id: i
      type: f75371fa
    - id: inetAddress1
      type: 0595dc3f
    - id: i1
      type: f75371fa
    return:
      type: 599bf669
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(Socket,String,int,boolean)
  id: createSocket(Socket,String,int,boolean)
  parent: com.microsoft.azure.storage.core.KeepAliveSocketFactory
  href: com.microsoft.azure.storage.core.KeepAliveSocketFactory.yml
  langs:
  - java
  name: createSocket(Socket socket, String s, int i, boolean b)
  nameWithType: KeepAliveSocketFactory.createSocket(Socket socket, String s, int i, boolean b)
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(Socket socket, String s, int i, boolean b)
  overload: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/core/KeepAliveSocketFactory.java
    startLine: 63
  package: com.microsoft.azure.storage.core
  syntax:
    content: public Socket createSocket(Socket socket, String s, int i, boolean b)
    parameters:
    - id: socket
      type: 599bf669
    - id: s
      type: "26831127"
    - id: i
      type: f75371fa
    - id: b
      type: 4fc6e284
    return:
      type: 599bf669
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(String,int)
  id: createSocket(String,int)
  parent: com.microsoft.azure.storage.core.KeepAliveSocketFactory
  href: com.microsoft.azure.storage.core.KeepAliveSocketFactory.yml
  langs:
  - java
  name: createSocket(String s, int i)
  nameWithType: KeepAliveSocketFactory.createSocket(String s, int i)
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(String s, int i)
  overload: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/core/KeepAliveSocketFactory.java
    startLine: 70
  package: com.microsoft.azure.storage.core
  syntax:
    content: public Socket createSocket(String s, int i)
    parameters:
    - id: s
      type: "26831127"
    - id: i
      type: f75371fa
    return:
      type: 599bf669
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(String,int,InetAddress,int)
  id: createSocket(String,int,InetAddress,int)
  parent: com.microsoft.azure.storage.core.KeepAliveSocketFactory
  href: com.microsoft.azure.storage.core.KeepAliveSocketFactory.yml
  langs:
  - java
  name: createSocket(String s, int i, InetAddress inetAddress, int i1)
  nameWithType: KeepAliveSocketFactory.createSocket(String s, int i, InetAddress inetAddress, int i1)
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket(String s, int i, InetAddress inetAddress, int i1)
  overload: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/core/KeepAliveSocketFactory.java
    startLine: 77
  package: com.microsoft.azure.storage.core
  syntax:
    content: public Socket createSocket(String s, int i, InetAddress inetAddress, int i1)
    parameters:
    - id: s
      type: "26831127"
    - id: i
      type: f75371fa
    - id: inetAddress
      type: 0595dc3f
    - id: i1
      type: f75371fa
    return:
      type: 599bf669
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getDefaultCipherSuites()
  id: getDefaultCipherSuites()
  parent: com.microsoft.azure.storage.core.KeepAliveSocketFactory
  href: com.microsoft.azure.storage.core.KeepAliveSocketFactory.yml
  langs:
  - java
  name: getDefaultCipherSuites()
  nameWithType: KeepAliveSocketFactory.getDefaultCipherSuites()
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getDefaultCipherSuites()
  overload: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getDefaultCipherSuites*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/core/KeepAliveSocketFactory.java
    startLine: 53
  package: com.microsoft.azure.storage.core
  syntax:
    content: public String [] getDefaultCipherSuites()
    return:
      type: 1bb63ab0
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getInstance()
  id: getInstance()
  parent: com.microsoft.azure.storage.core.KeepAliveSocketFactory
  href: com.microsoft.azure.storage.core.KeepAliveSocketFactory.yml
  langs:
  - java
  name: getInstance()
  nameWithType: KeepAliveSocketFactory.getInstance()
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getInstance()
  overload: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getInstance*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/core/KeepAliveSocketFactory.java
    startLine: 48
  package: com.microsoft.azure.storage.core
  syntax:
    content: public static KeepAliveSocketFactory getInstance()
    return:
      type: com.microsoft.azure.storage.core.KeepAliveSocketFactory
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getSupportedCipherSuites()
  id: getSupportedCipherSuites()
  parent: com.microsoft.azure.storage.core.KeepAliveSocketFactory
  href: com.microsoft.azure.storage.core.KeepAliveSocketFactory.yml
  langs:
  - java
  name: getSupportedCipherSuites()
  nameWithType: KeepAliveSocketFactory.getSupportedCipherSuites()
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getSupportedCipherSuites()
  overload: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getSupportedCipherSuites*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/core/KeepAliveSocketFactory.java
    startLine: 58
  package: com.microsoft.azure.storage.core
  syntax:
    content: public String [] getSupportedCipherSuites()
    return:
      type: 1bb63ab0
references:
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getInstance*
  name: getInstance
  nameWithType: KeepAliveSocketFactory.getInstance
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getInstance
  package: com.microsoft.azure.storage.core
- uid: 1bb63ab0
  spec.java:
  - name: String []
    fullName: String []
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getDefaultCipherSuites*
  name: getDefaultCipherSuites
  nameWithType: KeepAliveSocketFactory.getDefaultCipherSuites
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getDefaultCipherSuites
  package: com.microsoft.azure.storage.core
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getSupportedCipherSuites*
  name: getSupportedCipherSuites
  nameWithType: KeepAliveSocketFactory.getSupportedCipherSuites
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.getSupportedCipherSuites
  package: com.microsoft.azure.storage.core
- uid: 599bf669
  spec.java:
  - name: Socket
    fullName: Socket
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket*
  name: createSocket
  nameWithType: KeepAliveSocketFactory.createSocket
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory.createSocket
  package: com.microsoft.azure.storage.core
- uid: 0595dc3f
  spec.java:
  - name: InetAddress
    fullName: InetAddress
- uid: com.microsoft.azure.storage.core.KeepAliveSocketFactory
  parent: com.microsoft.azure.storage.core
  href: com.microsoft.azure.storage.core.KeepAliveSocketFactory.yml
  name: KeepAliveSocketFactory
  nameWithType: KeepAliveSocketFactory
  fullName: com.microsoft.azure.storage.core.KeepAliveSocketFactory
  type: Class
  summary: "<p>RESERVED FOR INTERNAL USE.</p>\r\n<p>This type is used to help work around a bug in the JDK where connection timeouts are not honored on a retried request. In other words, if a customer set a timeout on an operation, this timeout is only ever respected on the first attempt at the request. Retries will cause a different underlying connection implementation to be loaded that will ignore the timeout parameter. Therefore, requests can potentially hang forever if the connection is broken after these retries.</p>\r\n<p>Enabling keep-alive timeouts acts as a fallback in these scenarios so that, even if the operation timeout is ignored, the socket will still eventually timeout and the request will be cancelled. We enable keep alive timeouts via a wrapper implementation of a SocketFactory. We use a default socket factory to get sockets from the system and then simply set the keep-alive option to true before returning to the client. This factory will be set on the HttpsUrlConnection objects. </p>"
  syntax: *o1
