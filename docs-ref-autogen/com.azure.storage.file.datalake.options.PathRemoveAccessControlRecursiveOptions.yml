### YamlMime:ManagedReference
items:
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  id: PathRemoveAccessControlRecursiveOptions
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options
  children:
  - com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.PathRemoveAccessControlRecursiveOptions(java.util.List<com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry>)
  - com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getAccessControlList()
  - com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getBatchSize()
  - com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getContinuationToken()
  - com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getMaxBatches()
  - com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getProgressHandler()
  - com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.isContinueOnFailure()
  - com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setBatchSize(java.lang.Integer)
  - com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinuationToken(java.lang.String)
  - com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinueOnFailure(boolean)
  - com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setMaxBatches(java.lang.Integer)
  - com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setProgressHandler(java.util.function.Consumer<com.azure.core.http.rest.Response<com.azure.storage.file.datalake.models.AccessControlChanges>>)
  langs:
  - java
  name: PathRemoveAccessControlRecursiveOptions
  nameWithType: PathRemoveAccessControlRecursiveOptions
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  type: Class
  package: com.azure.storage.file.datalake.options
  summary: Optional parameters for Remove Access Control Recursive.
  syntax:
    content: public class PathRemoveAccessControlRecursiveOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.PathRemoveAccessControlRecursiveOptions(java.util.List<com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry>)
  id: PathRemoveAccessControlRecursiveOptions(java.util.List<com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry>)
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  langs:
  - java
  name: PathRemoveAccessControlRecursiveOptions(List<PathRemoveAccessControlEntry> accessControlList)
  nameWithType: PathRemoveAccessControlRecursiveOptions.PathRemoveAccessControlRecursiveOptions(List<PathRemoveAccessControlEntry> accessControlList)
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.PathRemoveAccessControlRecursiveOptions(List<PathRemoveAccessControlEntry> accessControlList)
  overload: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.PathRemoveAccessControlRecursiveOptions*
  type: Constructor
  package: com.azure.storage.file.datalake.options
  summary: Constructs a new options object.
  syntax:
    content: public PathRemoveAccessControlRecursiveOptions(List<PathRemoveAccessControlEntry> accessControlList)
    parameters:
    - id: accessControlList
      type: java.util.List<com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry>
      description: The POSIX access control list for the file or directory.
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getAccessControlList()
  id: getAccessControlList()
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  langs:
  - java
  name: getAccessControlList()
  nameWithType: PathRemoveAccessControlRecursiveOptions.getAccessControlList()
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getAccessControlList()
  overload: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getAccessControlList*
  type: Method
  package: com.azure.storage.file.datalake.options
  summary: Returns the POSIX access control list for the file or directory.
  syntax:
    content: public List<PathRemoveAccessControlEntry> getAccessControlList()
    return:
      type: java.util.List<com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry>
      description: The POSIX access control list for the file or directory.
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getBatchSize()
  id: getBatchSize()
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  langs:
  - java
  name: getBatchSize()
  nameWithType: PathRemoveAccessControlRecursiveOptions.getBatchSize()
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getBatchSize()
  overload: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getBatchSize*
  type: Method
  package: com.azure.storage.file.datalake.options
  summary: >-
    Gets the batch size.


    If data set size exceeds batch size then operation will be split into multiple requests so that progress can be tracked. Batch size should be between 1 and 2000. The default when unspecified is 2000.
  syntax:
    content: public Integer getBatchSize()
    return:
      type: java.lang.Integer
      description: The size of the batch.
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getContinuationToken()
  id: getContinuationToken()
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  langs:
  - java
  name: getContinuationToken()
  nameWithType: PathRemoveAccessControlRecursiveOptions.getContinuationToken()
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getContinuationToken()
  overload: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getContinuationToken*
  type: Method
  package: com.azure.storage.file.datalake.options
  summary: Returns a token that can be used to resume previously stopped operation.
  syntax:
    content: public String getContinuationToken()
    return:
      type: java.lang.String
      description: A token that can be used to resume previously stopped operation.
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getMaxBatches()
  id: getMaxBatches()
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  langs:
  - java
  name: getMaxBatches()
  nameWithType: PathRemoveAccessControlRecursiveOptions.getMaxBatches()
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getMaxBatches()
  overload: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getMaxBatches*
  type: Method
  package: com.azure.storage.file.datalake.options
  summary: >-
    Gets the maximum number of batches that single change Access Control operation can execute.


    If maximum is reached before all subpaths are processed then continuation token can be used to resume operation. Empty value indicates that maximum number of batches in unbound and operation continues till end. Operation may \* also halt if an error is hit and `continueOnFailure` is false.
  syntax:
    content: public Integer getMaxBatches()
    return:
      type: java.lang.Integer
      description: The maximum number of batches.
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getProgressHandler()
  id: getProgressHandler()
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  langs:
  - java
  name: getProgressHandler()
  nameWithType: PathRemoveAccessControlRecursiveOptions.getProgressHandler()
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getProgressHandler()
  overload: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getProgressHandler*
  type: Method
  package: com.azure.storage.file.datalake.options
  summary: Gets a callback where caller can track progress of the operation as well as collect paths that failed to change Access Control.
  syntax:
    content: public Consumer<Response<AccessControlChanges>> getProgressHandler()
    return:
      type: java.util.function.Consumer<com.azure.core.http.rest.Response<com.azure.storage.file.datalake.models.AccessControlChanges>>
      description: The progress handler.
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.isContinueOnFailure()
  id: isContinueOnFailure()
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  langs:
  - java
  name: isContinueOnFailure()
  nameWithType: PathRemoveAccessControlRecursiveOptions.isContinueOnFailure()
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.isContinueOnFailure()
  overload: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.isContinueOnFailure*
  type: Method
  package: com.azure.storage.file.datalake.options
  summary: >-
    Returns if the operation should continue on user failure.


    If set to false, the operation will terminate quickly on encountering user failures. If true, the operation will ignore user failures and proceed with the operation on other sub-entities of the directory.
  syntax:
    content: public boolean isContinueOnFailure()
    return:
      type: boolean
      description: If the operation should continue on user failure.
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setBatchSize(java.lang.Integer)
  id: setBatchSize(java.lang.Integer)
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  langs:
  - java
  name: setBatchSize(Integer batchSize)
  nameWithType: PathRemoveAccessControlRecursiveOptions.setBatchSize(Integer batchSize)
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setBatchSize(Integer batchSize)
  overload: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setBatchSize*
  type: Method
  package: com.azure.storage.file.datalake.options
  summary: >-
    Sets the batch size.


    If data set size exceeds batch size then operation will be split into multiple requests so that progress can be tracked. Batch size should be between 1 and 2000. The default when unspecified is 2000.
  syntax:
    content: public PathRemoveAccessControlRecursiveOptions setBatchSize(Integer batchSize)
    parameters:
    - id: batchSize
      type: java.lang.Integer
      description: The size of the batch.
    return:
      type: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
      description: The updated object.
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinuationToken(java.lang.String)
  id: setContinuationToken(java.lang.String)
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  langs:
  - java
  name: setContinuationToken(String continuationToken)
  nameWithType: PathRemoveAccessControlRecursiveOptions.setContinuationToken(String continuationToken)
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinuationToken(String continuationToken)
  overload: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinuationToken*
  type: Method
  package: com.azure.storage.file.datalake.options
  summary: Sets a token that can be used to resume previously stopped operation.
  syntax:
    content: public PathRemoveAccessControlRecursiveOptions setContinuationToken(String continuationToken)
    parameters:
    - id: continuationToken
      type: java.lang.String
      description: A token that can be used to resume previously stopped operation.
    return:
      type: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
      description: The updated object.
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinueOnFailure(boolean)
  id: setContinueOnFailure(boolean)
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  langs:
  - java
  name: setContinueOnFailure(boolean continueOnFailure)
  nameWithType: PathRemoveAccessControlRecursiveOptions.setContinueOnFailure(boolean continueOnFailure)
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinueOnFailure(boolean continueOnFailure)
  overload: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinueOnFailure*
  type: Method
  package: com.azure.storage.file.datalake.options
  summary: >-
    Sets if the operation should continue on user failure.


    If set to false, the operation will terminate quickly on encountering user failures. If true, the operation will ignore user failures and proceed with the operation on other sub-entities of the directory.
  syntax:
    content: public PathRemoveAccessControlRecursiveOptions setContinueOnFailure(boolean continueOnFailure)
    parameters:
    - id: continueOnFailure
      type: boolean
      description: Whether the operation should continue on user failure.
    return:
      type: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
      description: The updated object.
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setMaxBatches(java.lang.Integer)
  id: setMaxBatches(java.lang.Integer)
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  langs:
  - java
  name: setMaxBatches(Integer maxBatches)
  nameWithType: PathRemoveAccessControlRecursiveOptions.setMaxBatches(Integer maxBatches)
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setMaxBatches(Integer maxBatches)
  overload: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setMaxBatches*
  type: Method
  package: com.azure.storage.file.datalake.options
  summary: >-
    Sets the maximum number of batches that single change Access Control operation can execute.


    If maximum is reached before all subpaths are processed then continuation token can be used to resume operation. Empty value indicates that maximum number of batches in unbound and operation continues till end. Operation may \* also halt if an error is hit and `continueOnFailure` is false.
  syntax:
    content: public PathRemoveAccessControlRecursiveOptions setMaxBatches(Integer maxBatches)
    parameters:
    - id: maxBatches
      type: java.lang.Integer
      description: The maximum number of batches.
    return:
      type: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
      description: The updated object.
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setProgressHandler(java.util.function.Consumer<com.azure.core.http.rest.Response<com.azure.storage.file.datalake.models.AccessControlChanges>>)
  id: setProgressHandler(java.util.function.Consumer<com.azure.core.http.rest.Response<com.azure.storage.file.datalake.models.AccessControlChanges>>)
  artifact: com.azure:azure-storage-file-datalake:12.3.0
  parent: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
  langs:
  - java
  name: setProgressHandler(Consumer<Response<AccessControlChanges>> progressHandler)
  nameWithType: PathRemoveAccessControlRecursiveOptions.setProgressHandler(Consumer<Response<AccessControlChanges>> progressHandler)
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setProgressHandler(Consumer<Response<AccessControlChanges>> progressHandler)
  overload: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setProgressHandler*
  type: Method
  package: com.azure.storage.file.datalake.options
  summary: Sets a callback where caller can track progress of the operation as well as collect paths that failed to change Access Control.
  syntax:
    content: public PathRemoveAccessControlRecursiveOptions setProgressHandler(Consumer<Response<AccessControlChanges>> progressHandler)
    parameters:
    - id: progressHandler
      type: java.util.function.Consumer<com.azure.core.http.rest.Response<com.azure.storage.file.datalake.models.AccessControlChanges>>
      description: The progress handler.
    return:
      type: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions
      description: The updated object.
references:
- uid: java.util.List<com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry
    name: PathRemoveAccessControlEntry
    fullName: com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.PathRemoveAccessControlRecursiveOptions*
  name: PathRemoveAccessControlRecursiveOptions
  nameWithType: PathRemoveAccessControlRecursiveOptions.PathRemoveAccessControlRecursiveOptions
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.PathRemoveAccessControlRecursiveOptions
  package: com.azure.storage.file.datalake.options
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getAccessControlList*
  name: getAccessControlList
  nameWithType: PathRemoveAccessControlRecursiveOptions.getAccessControlList
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getAccessControlList
  package: com.azure.storage.file.datalake.options
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getBatchSize*
  name: getBatchSize
  nameWithType: PathRemoveAccessControlRecursiveOptions.getBatchSize
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getBatchSize
  package: com.azure.storage.file.datalake.options
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setBatchSize*
  name: setBatchSize
  nameWithType: PathRemoveAccessControlRecursiveOptions.setBatchSize
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setBatchSize
  package: com.azure.storage.file.datalake.options
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getMaxBatches*
  name: getMaxBatches
  nameWithType: PathRemoveAccessControlRecursiveOptions.getMaxBatches
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getMaxBatches
  package: com.azure.storage.file.datalake.options
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setMaxBatches*
  name: setMaxBatches
  nameWithType: PathRemoveAccessControlRecursiveOptions.setMaxBatches
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setMaxBatches
  package: com.azure.storage.file.datalake.options
- uid: java.util.function.Consumer<com.azure.core.http.rest.Response<com.azure.storage.file.datalake.models.AccessControlChanges>>
  spec.java:
  - uid: java.util.function.Consumer
    name: Consumer
    fullName: java.util.function.Consumer
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.file.datalake.models.AccessControlChanges
    name: AccessControlChanges
    fullName: com.azure.storage.file.datalake.models.AccessControlChanges
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getProgressHandler*
  name: getProgressHandler
  nameWithType: PathRemoveAccessControlRecursiveOptions.getProgressHandler
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getProgressHandler
  package: com.azure.storage.file.datalake.options
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setProgressHandler*
  name: setProgressHandler
  nameWithType: PathRemoveAccessControlRecursiveOptions.setProgressHandler
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setProgressHandler
  package: com.azure.storage.file.datalake.options
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getContinuationToken*
  name: getContinuationToken
  nameWithType: PathRemoveAccessControlRecursiveOptions.getContinuationToken
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.getContinuationToken
  package: com.azure.storage.file.datalake.options
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinuationToken*
  name: setContinuationToken
  nameWithType: PathRemoveAccessControlRecursiveOptions.setContinuationToken
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinuationToken
  package: com.azure.storage.file.datalake.options
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.isContinueOnFailure*
  name: isContinueOnFailure
  nameWithType: PathRemoveAccessControlRecursiveOptions.isContinueOnFailure
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.isContinueOnFailure
  package: com.azure.storage.file.datalake.options
- uid: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinueOnFailure*
  name: setContinueOnFailure
  nameWithType: PathRemoveAccessControlRecursiveOptions.setContinueOnFailure
  fullName: com.azure.storage.file.datalake.options.PathRemoveAccessControlRecursiveOptions.setContinueOnFailure
  package: com.azure.storage.file.datalake.options
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry
  name: PathRemoveAccessControlEntry
  nameWithType: PathRemoveAccessControlEntry
  fullName: com.azure.storage.file.datalake.models.PathRemoveAccessControlEntry
- uid: java.util.function.Consumer
  name: Consumer
  nameWithType: Consumer
  fullName: java.util.function.Consumer
- uid: com.azure.storage.file.datalake.models.AccessControlChanges
  name: AccessControlChanges
  nameWithType: AccessControlChanges
  fullName: com.azure.storage.file.datalake.models.AccessControlChanges
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
