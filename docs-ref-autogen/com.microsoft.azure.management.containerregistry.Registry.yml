### YamlMime:JavaType
uid: "com.microsoft.azure.management.containerregistry.Registry"
fullName: "com.microsoft.azure.management.containerregistry.Registry"
name: "Registry"
nameWithType: "Registry"
summary: "An immutable client-side representation of an Azure registry."
syntax: "public interface Registry extends GroupableResource<ContainerRegistryManager,RegistryInner>, Refreshable<Registry>, Updatable<Registry.Update>"
methods:
- uid: "com.microsoft.azure.management.containerregistry.Registry.adminUserEnabled()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.adminUserEnabled()"
  name: "adminUserEnabled()"
  nameWithType: "Registry.adminUserEnabled()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean adminUserEnabled()"
  returns:
    description: "the value that indicates whether the admin user is enabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.Registry.creationDate()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.creationDate()"
  name: "creationDate()"
  nameWithType: "Registry.creationDate()"
  modifiers:
  - "abstract"
  syntax: "public abstract DateTime creationDate()"
  returns:
    description: "the creation date of the container registry in ISO8601 format"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.Registry.getBuildSourceUploadUrl()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.getBuildSourceUploadUrl()"
  name: "getBuildSourceUploadUrl()"
  nameWithType: "Registry.getBuildSourceUploadUrl()"
  modifiers:
  - "abstract"
  syntax: "public abstract SourceUploadDefinition getBuildSourceUploadUrl()"
  returns:
    description: "returns the upload location for the user to be able to upload the source."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.SourceUploadDefinition?alt=com.microsoft.azure.management.containerregistry.SourceUploadDefinition&text=SourceUploadDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.Registry.getBuildSourceUploadUrlAsync()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.getBuildSourceUploadUrlAsync()"
  name: "getBuildSourceUploadUrlAsync()"
  nameWithType: "Registry.getBuildSourceUploadUrlAsync()"
  summary: "Gets the upload location for the user to be able to upload the source asynchronously."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<SourceUploadDefinition> getBuildSourceUploadUrlAsync()"
  desc: "Gets the upload location for the user to be able to upload the source asynchronously."
  returns:
    description: "a representation of the future computation of this call"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerregistry.SourceUploadDefinition?alt=com.microsoft.azure.management.containerregistry.SourceUploadDefinition&text=SourceUploadDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.containerregistry.Registry.getCredentials()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.getCredentials()"
  name: "getCredentials()"
  nameWithType: "Registry.getCredentials()"
  modifiers:
  - "abstract"
  syntax: "public abstract RegistryCredentials getCredentials()"
  returns:
    description: "the login credentials for the specified container registry"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RegistryCredentials?alt=com.microsoft.azure.management.containerregistry.RegistryCredentials&text=RegistryCredentials\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.Registry.getCredentialsAsync()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.getCredentialsAsync()"
  name: "getCredentialsAsync()"
  nameWithType: "Registry.getCredentialsAsync()"
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<RegistryCredentials> getCredentialsAsync()"
  returns:
    description: "a representation of the future computation of this call"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerregistry.RegistryCredentials?alt=com.microsoft.azure.management.containerregistry.RegistryCredentials&text=RegistryCredentials\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.containerregistry.Registry.listQuotaUsages()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.listQuotaUsages()"
  name: "listQuotaUsages()"
  nameWithType: "Registry.listQuotaUsages()"
  summary: "Lists the quota usages for the specified container registry."
  modifiers:
  - "abstract"
  syntax: "public abstract Collection<RegistryUsage> listQuotaUsages()"
  desc: "Lists the quota usages for the specified container registry."
  returns:
    description: "the list of container registry's quota usages"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerregistry.RegistryUsage?alt=com.microsoft.azure.management.containerregistry.RegistryUsage&text=RegistryUsage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.containerregistry.Registry.listQuotaUsagesAsync()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.listQuotaUsagesAsync()"
  name: "listQuotaUsagesAsync()"
  nameWithType: "Registry.listQuotaUsagesAsync()"
  summary: "Lists the quota usages for the specified container registry."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<RegistryUsage> listQuotaUsagesAsync()"
  desc: "Lists the quota usages for the specified container registry."
  returns:
    description: "a representation of the future computation of this call"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerregistry.RegistryUsage?alt=com.microsoft.azure.management.containerregistry.RegistryUsage&text=RegistryUsage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.containerregistry.Registry.loginServerUrl()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.loginServerUrl()"
  name: "loginServerUrl()"
  nameWithType: "Registry.loginServerUrl()"
  modifiers:
  - "abstract"
  syntax: "public abstract String loginServerUrl()"
  returns:
    description: "the URL that can be used to log into the container registry"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.Registry.regenerateCredential(com.microsoft.azure.management.containerregistry.AccessKeyType)"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.regenerateCredential(AccessKeyType accessKeyType)"
  name: "regenerateCredential(AccessKeyType accessKeyType)"
  nameWithType: "Registry.regenerateCredential(AccessKeyType accessKeyType)"
  summary: "Regenerates one of the login credentials for the specified container registry."
  modifiers:
  - "abstract"
  parameters:
  - description: "the admin user access key name to regenerate the value for"
    name: "accessKeyType"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.AccessKeyType?alt=com.microsoft.azure.management.containerregistry.AccessKeyType&text=AccessKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RegistryCredentials regenerateCredential(AccessKeyType accessKeyType)"
  desc: "Regenerates one of the login credentials for the specified container registry."
  returns:
    description: "the result of the regeneration"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RegistryCredentials?alt=com.microsoft.azure.management.containerregistry.RegistryCredentials&text=RegistryCredentials\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.Registry.regenerateCredentialAsync(com.microsoft.azure.management.containerregistry.AccessKeyType)"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.regenerateCredentialAsync(AccessKeyType accessKeyType)"
  name: "regenerateCredentialAsync(AccessKeyType accessKeyType)"
  nameWithType: "Registry.regenerateCredentialAsync(AccessKeyType accessKeyType)"
  summary: "Regenerates one of the login credentials for the specified container registry."
  modifiers:
  - "abstract"
  parameters:
  - description: "the admin user access key name to regenerate the value for"
    name: "accessKeyType"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.AccessKeyType?alt=com.microsoft.azure.management.containerregistry.AccessKeyType&text=AccessKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<RegistryCredentials> regenerateCredentialAsync(AccessKeyType accessKeyType)"
  desc: "Regenerates one of the login credentials for the specified container registry."
  returns:
    description: "a representation of the future computation of this call"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerregistry.RegistryCredentials?alt=com.microsoft.azure.management.containerregistry.RegistryCredentials&text=RegistryCredentials\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.containerregistry.Registry.scheduleRun()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.scheduleRun()"
  name: "scheduleRun()"
  nameWithType: "Registry.scheduleRun()"
  modifiers:
  - "abstract"
  syntax: "public abstract RegistryTaskRun.DefinitionStages.BlankFromRegistry scheduleRun()"
  returns:
    description: "returns entry point to manage the build tasks for the container registry."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.BlankFromRegistry?alt=com.microsoft.azure.management.containerregistry.RegistryTaskRun.DefinitionStages.BlankFromRegistry&text=BlankFromRegistry\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.Registry.sku()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.sku()"
  name: "sku()"
  nameWithType: "Registry.sku()"
  modifiers:
  - "abstract"
  syntax: "public abstract Sku sku()"
  returns:
    description: "the SKU of the container registry."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Sku?alt=com.microsoft.azure.management.containerregistry.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.Registry.storageAccountId()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.storageAccountId()"
  name: "storageAccountId()"
  nameWithType: "Registry.storageAccountId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String storageAccountId()"
  returns:
    description: "the ID of the storage account for the container registry; 'null' if container register SKU a managed tier"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.Registry.storageAccountName()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.storageAccountName()"
  name: "storageAccountName()"
  nameWithType: "Registry.storageAccountName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String storageAccountName()"
  returns:
    description: "the name of the storage account for the container registry; 'null' if container register SKU a managed tier"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.Registry.webhooks()"
  fullName: "com.microsoft.azure.management.containerregistry.Registry.webhooks()"
  name: "webhooks()"
  nameWithType: "Registry.webhooks()"
  modifiers:
  - "abstract"
  syntax: "public abstract WebhookOperations webhooks()"
  returns:
    description: "returns entry point to manage container registry webhooks."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.WebhookOperations?alt=com.microsoft.azure.management.containerregistry.WebhookOperations&text=WebhookOperations\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of an Azure registry."
implements:
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource&text=GroupableResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerregistry.implementation.ContainerRegistryManager?alt=com.microsoft.azure.management.containerregistry.implementation.ContainerRegistryManager&text=ContainerRegistryManager\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.containerregistry.implementation.RegistryInner?alt=com.microsoft.azure.management.containerregistry.implementation.RegistryInner&text=RegistryInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Refreshable?alt=com.microsoft.azure.management.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerregistry.Registry?alt=com.microsoft.azure.management.containerregistry.Registry&text=Registry\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Updatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.containerregistry.Registry.Update?alt=com.microsoft.azure.management.containerregistry.Registry.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.containerregistry"
artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.41.4
