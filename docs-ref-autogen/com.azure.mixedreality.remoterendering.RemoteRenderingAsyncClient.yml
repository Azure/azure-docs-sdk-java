### YamlMime:JavaType
uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient"
fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient"
name: "RemoteRenderingAsyncClient"
nameWithType: "RemoteRenderingAsyncClient"
summary: "A builder for creating a new instance of the Mixed<wbr>Reality<wbr>Remote<wbr>Rendering type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RemoteRenderingAsyncClient"
methods:
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.beginConversion(java.lang.String,com.azure.mixedreality.remoterendering.models.AssetConversionOptions)"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.beginConversion(String conversionId, AssetConversionOptions options)"
  name: "beginConversion(String conversionId, AssetConversionOptions options)"
  nameWithType: "RemoteRenderingAsyncClient.beginConversion(String conversionId, AssetConversionOptions options)"
  summary: "Starts a conversion using an asset stored in an Azure Blob Storage account."
  parameters:
  - description: "An ID uniquely identifying the conversion for the given account. The ID is case sensitive,\n     can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain\n     more than 256 characters."
    name: "conversionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The conversion options."
    name: "options"
    type: "<xref href=\"com.azure.mixedreality.remoterendering.models.AssetConversionOptions?alt=com.azure.mixedreality.remoterendering.models.AssetConversionOptions&text=AssetConversionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<AssetConversion,AssetConversion> beginConversion(String conversionId, AssetConversionOptions options)"
  desc: "Starts a conversion using an asset stored in an Azure Blob Storage account. If the remote rendering account has been linked with the storage account no Shared Access Signatures (storageContainerReadListSas, storageContainerWriteSas) for storage access need to be provided. Documentation how to link your Azure Remote Rendering account with the Azure Blob Storage account can be found in the \\[documentation\\](https://docs.microsoft.com/azure/remote-rendering/how-tos/create-an-account\\#link-storage-accounts).\n\nAll files in the input container starting with the blobPrefix will be retrieved to perform the conversion. To cut down on conversion times only necessary files should be available under the blobPrefix."
  returns:
    description: "the conversion."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.mixedreality.remoterendering.models.AssetConversion?alt=com.azure.mixedreality.remoterendering.models.AssetConversion&text=AssetConversion\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.mixedreality.remoterendering.models.AssetConversion?alt=com.azure.mixedreality.remoterendering.models.AssetConversion&text=AssetConversion\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.beginSession(java.lang.String)"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.beginSession(String sessionId)"
  name: "beginSession(String sessionId)"
  nameWithType: "RemoteRenderingAsyncClient.beginSession(String sessionId)"
  summary: "Creates a new rendering session."
  parameters:
  - description: "An ID uniquely identifying the rendering session for the given account. The ID is case\n     sensitive, can contain any combination of alphanumeric characters including hyphens and underscores, and\n     cannot contain more than 256 characters."
    name: "sessionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<RenderingSession,RenderingSession> beginSession(String sessionId)"
  desc: "Creates a new rendering session."
  returns:
    description: "the rendering session."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.mixedreality.remoterendering.models.RenderingSession?alt=com.azure.mixedreality.remoterendering.models.RenderingSession&text=RenderingSession\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.mixedreality.remoterendering.models.RenderingSession?alt=com.azure.mixedreality.remoterendering.models.RenderingSession&text=RenderingSession\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.beginSession(java.lang.String,com.azure.mixedreality.remoterendering.models.BeginSessionOptions)"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.beginSession(String sessionId, BeginSessionOptions options)"
  name: "beginSession(String sessionId, BeginSessionOptions options)"
  nameWithType: "RemoteRenderingAsyncClient.beginSession(String sessionId, BeginSessionOptions options)"
  summary: "Creates a new rendering session."
  parameters:
  - description: "An ID uniquely identifying the rendering session for the given account. The ID is case\n     sensitive, can contain any combination of alphanumeric characters including hyphens and underscores, and\n     cannot contain more than 256 characters."
    name: "sessionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Settings for the session to be created."
    name: "options"
    type: "<xref href=\"com.azure.mixedreality.remoterendering.models.BeginSessionOptions?alt=com.azure.mixedreality.remoterendering.models.BeginSessionOptions&text=BeginSessionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<RenderingSession,RenderingSession> beginSession(String sessionId, BeginSessionOptions options)"
  desc: "Creates a new rendering session."
  returns:
    description: "the rendering session."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.mixedreality.remoterendering.models.RenderingSession?alt=com.azure.mixedreality.remoterendering.models.RenderingSession&text=RenderingSession\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.mixedreality.remoterendering.models.RenderingSession?alt=com.azure.mixedreality.remoterendering.models.RenderingSession&text=RenderingSession\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.endSession(java.lang.String)"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.endSession(String sessionId)"
  name: "endSession(String sessionId)"
  nameWithType: "RemoteRenderingAsyncClient.endSession(String sessionId)"
  summary: "Stops a particular rendering session."
  parameters:
  - description: "An ID uniquely identifying the rendering session for the given account. The ID is case\n     sensitive, can contain any combination of alphanumeric characters including hyphens and underscores, and\n     cannot contain more than 256 characters."
    name: "sessionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> endSession(String sessionId)"
  desc: "Stops a particular rendering session."
  returns:
    description: "nothing on completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.endSessionWithResponse(java.lang.String)"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.endSessionWithResponse(String sessionId)"
  name: "endSessionWithResponse(String sessionId)"
  nameWithType: "RemoteRenderingAsyncClient.endSessionWithResponse(String sessionId)"
  summary: "Stops a particular rendering session."
  parameters:
  - description: "An ID uniquely identifying the rendering session for the given account. The ID is case\n     sensitive, can contain any combination of alphanumeric characters including hyphens and underscores, and\n     cannot contain more than 256 characters."
    name: "sessionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> endSessionWithResponse(String sessionId)"
  desc: "Stops a particular rendering session."
  returns:
    description: "nothing on completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.getConversion(java.lang.String)"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.getConversion(String conversionId)"
  name: "getConversion(String conversionId)"
  nameWithType: "RemoteRenderingAsyncClient.getConversion(String conversionId)"
  summary: "Gets the status of a previously created asset conversion."
  parameters:
  - description: "An ID uniquely identifying the conversion for the given account. The ID is case sensitive,\n     can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain\n     more than 256 characters."
    name: "conversionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AssetConversion> getConversion(String conversionId)"
  desc: "Gets the status of a previously created asset conversion."
  returns:
    description: "the conversion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.mixedreality.remoterendering.models.AssetConversion?alt=com.azure.mixedreality.remoterendering.models.AssetConversion&text=AssetConversion\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.getConversionWithResponse(java.lang.String)"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.getConversionWithResponse(String conversionId)"
  name: "getConversionWithResponse(String conversionId)"
  nameWithType: "RemoteRenderingAsyncClient.getConversionWithResponse(String conversionId)"
  summary: "Gets the status of a previously created asset conversion."
  parameters:
  - description: "An ID uniquely identifying the conversion for the given account. The ID is case sensitive,\n     can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain\n     more than 256 characters."
    name: "conversionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<AssetConversion>> getConversionWithResponse(String conversionId)"
  desc: "Gets the status of a previously created asset conversion."
  returns:
    description: "the conversion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.mixedreality.remoterendering.models.AssetConversion?alt=com.azure.mixedreality.remoterendering.models.AssetConversion&text=AssetConversion\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.getSession(java.lang.String)"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.getSession(String sessionId)"
  name: "getSession(String sessionId)"
  nameWithType: "RemoteRenderingAsyncClient.getSession(String sessionId)"
  summary: "Gets properties of a particular rendering session."
  parameters:
  - description: "An ID uniquely identifying the rendering session for the given account. The ID is case\n     sensitive, can contain any combination of alphanumeric characters including hyphens and underscores, and\n     cannot contain more than 256 characters."
    name: "sessionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<RenderingSession> getSession(String sessionId)"
  desc: "Gets properties of a particular rendering session."
  returns:
    description: "the rendering session."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.mixedreality.remoterendering.models.RenderingSession?alt=com.azure.mixedreality.remoterendering.models.RenderingSession&text=RenderingSession\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.getSessionWithResponse(java.lang.String)"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.getSessionWithResponse(String sessionId)"
  name: "getSessionWithResponse(String sessionId)"
  nameWithType: "RemoteRenderingAsyncClient.getSessionWithResponse(String sessionId)"
  summary: "Gets properties of a particular rendering session."
  parameters:
  - description: "An ID uniquely identifying the rendering session for the given account. The ID is case\n     sensitive, can contain any combination of alphanumeric characters including hyphens and underscores, and\n     cannot contain more than 256 characters."
    name: "sessionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<RenderingSession>> getSessionWithResponse(String sessionId)"
  desc: "Gets properties of a particular rendering session."
  returns:
    description: "the rendering session."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.mixedreality.remoterendering.models.RenderingSession?alt=com.azure.mixedreality.remoterendering.models.RenderingSession&text=RenderingSession\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.listConversions()"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.listConversions()"
  name: "listConversions()"
  nameWithType: "RemoteRenderingAsyncClient.listConversions()"
  summary: "Gets a list of all conversions."
  syntax: "public PagedFlux<AssetConversion> listConversions()"
  desc: "Gets a list of all conversions."
  returns:
    description: "a list of all conversions."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.mixedreality.remoterendering.models.AssetConversion?alt=com.azure.mixedreality.remoterendering.models.AssetConversion&text=AssetConversion\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.listSessions()"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.listSessions()"
  name: "listSessions()"
  nameWithType: "RemoteRenderingAsyncClient.listSessions()"
  summary: "Get a list of all rendering sessions."
  syntax: "public PagedFlux<RenderingSession> listSessions()"
  desc: "Get a list of all rendering sessions."
  returns:
    description: "a list of all rendering sessions."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.mixedreality.remoterendering.models.RenderingSession?alt=com.azure.mixedreality.remoterendering.models.RenderingSession&text=RenderingSession\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.updateSession(java.lang.String,com.azure.mixedreality.remoterendering.models.UpdateSessionOptions)"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.updateSession(String sessionId, UpdateSessionOptions options)"
  name: "updateSession(String sessionId, UpdateSessionOptions options)"
  nameWithType: "RemoteRenderingAsyncClient.updateSession(String sessionId, UpdateSessionOptions options)"
  summary: "Updates a particular rendering session."
  parameters:
  - description: "An ID uniquely identifying the rendering session for the given account. The ID is case\n     sensitive, can contain any combination of alphanumeric characters including hyphens and underscores, and\n     cannot contain more than 256 characters."
    name: "sessionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Options for the session to be updated."
    name: "options"
    type: "<xref href=\"com.azure.mixedreality.remoterendering.models.UpdateSessionOptions?alt=com.azure.mixedreality.remoterendering.models.UpdateSessionOptions&text=UpdateSessionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<RenderingSession> updateSession(String sessionId, UpdateSessionOptions options)"
  desc: "Updates a particular rendering session."
  returns:
    description: "the rendering session."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.mixedreality.remoterendering.models.RenderingSession?alt=com.azure.mixedreality.remoterendering.models.RenderingSession&text=RenderingSession\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.updateSessionWithResponse(java.lang.String,com.azure.mixedreality.remoterendering.models.UpdateSessionOptions)"
  fullName: "com.azure.mixedreality.remoterendering.RemoteRenderingAsyncClient.updateSessionWithResponse(String sessionId, UpdateSessionOptions options)"
  name: "updateSessionWithResponse(String sessionId, UpdateSessionOptions options)"
  nameWithType: "RemoteRenderingAsyncClient.updateSessionWithResponse(String sessionId, UpdateSessionOptions options)"
  summary: "Updates a particular rendering session."
  parameters:
  - description: "An ID uniquely identifying the rendering session for the given account. The ID is case\n     sensitive, can contain any combination of alphanumeric characters including hyphens and underscores, and\n     cannot contain more than 256 characters."
    name: "sessionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Options for the session to be updated."
    name: "options"
    type: "<xref href=\"com.azure.mixedreality.remoterendering.models.UpdateSessionOptions?alt=com.azure.mixedreality.remoterendering.models.UpdateSessionOptions&text=UpdateSessionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<RenderingSession>> updateSessionWithResponse(String sessionId, UpdateSessionOptions options)"
  desc: "Updates a particular rendering session."
  returns:
    description: "the rendering session."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.mixedreality.remoterendering.models.RenderingSession?alt=com.azure.mixedreality.remoterendering.models.RenderingSession&text=RenderingSession\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "A builder for creating a new instance of the MixedRealityRemoteRendering type."
metadata: {}
package: "com.azure.mixedreality.remoterendering"
artifact: com.azure:azure-mixedreality-remoterendering:1.1.10
