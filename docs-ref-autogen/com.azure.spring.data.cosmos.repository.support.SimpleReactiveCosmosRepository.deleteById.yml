### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteById*"
fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>.deleteById"
name: "deleteById"
nameWithType: "SimpleReactiveCosmosRepository<T,K>.deleteById"
members:
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteById(K)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>.deleteById(K id)"
  name: "deleteById(K id)"
  nameWithType: "SimpleReactiveCosmosRepository<T,K>.deleteById(K id)"
  parameters:
  - name: "id"
    type: "<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> deleteById(K id)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteById(K,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>.deleteById(K id, PartitionKey partitionKey)"
  name: "deleteById(K id, PartitionKey partitionKey)"
  nameWithType: "SimpleReactiveCosmosRepository<T,K>.deleteById(K id, PartitionKey partitionKey)"
  summary: "Deletes an entity by its id and partition key."
  parameters:
  - name: "id"
    type: "<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />"
  - name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> deleteById(K id, PartitionKey partitionKey)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository.deleteById(org.reactivestreams.Publisher<K>)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleReactiveCosmosRepository<T,K>.deleteById(Publisher<K> publisher)"
  name: "deleteById(Publisher<K> publisher)"
  nameWithType: "SimpleReactiveCosmosRepository<T,K>.deleteById(Publisher<K> publisher)"
  parameters:
  - name: "publisher"
    type: "<xref href=\"org.reactivestreams.Publisher?alt=org.reactivestreams.Publisher&text=Publisher\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Void> deleteById(Publisher<K> publisher)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:3.3.0
