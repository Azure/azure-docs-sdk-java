### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation"
fullName: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation<ResourceT>"
name: "SupportsBatchCreation<ResourceT>"
nameWithType: "SupportsBatchCreation<ResourceT>"
summary: "Providing access to creating a batch of Azure top level resources of same type."
syntax: "public interface SupportsBatchCreation<ResourceT>"
methods:
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(com.microsoft.azure.management.resources.fluentcore.model.Creatable<ResourceT>...)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation<ResourceT>.create(Creatable<ResourceT>[] creatables)"
  name: "create(Creatable<ResourceT>[] creatables)"
  nameWithType: "SupportsBatchCreation<ResourceT>.create(Creatable<ResourceT>[] creatables)"
  summary: "Executes the create requests on a collection (batch) of resources."
  modifiers:
  - "abstract"
  parameters:
  - description: "the creatables in the batch"
    name: "creatables"
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Creatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Creatable&text=Creatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;[]"
  syntax: "public abstract CreatedResources<ResourceT> create(Creatable<ResourceT>[] creatables)"
  desc: "Executes the create requests on a collection (batch) of resources."
  returns:
    description: "the batch operation result from which created resources in this batch can be accessed."
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.CreatedResources?alt=com.microsoft.azure.management.resources.fluentcore.model.CreatedResources&text=CreatedResources\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(java.util.List<com.microsoft.azure.management.resources.fluentcore.model.Creatable<ResourceT>>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation<ResourceT>.create(List<Creatable<ResourceT>> creatables)"
  name: "create(List<Creatable<ResourceT>> creatables)"
  nameWithType: "SupportsBatchCreation<ResourceT>.create(List<Creatable<ResourceT>> creatables)"
  summary: "Executes the create requests on a collection (batch) of resources."
  modifiers:
  - "abstract"
  parameters:
  - description: "the list of creatables in the batch"
    name: "creatables"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Creatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Creatable&text=Creatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public abstract CreatedResources<ResourceT> create(List<Creatable<ResourceT>> creatables)"
  desc: "Executes the create requests on a collection (batch) of resources."
  returns:
    description: "the batch operation result from which created resources in this batch can be accessed."
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.CreatedResources?alt=com.microsoft.azure.management.resources.fluentcore.model.CreatedResources&text=CreatedResources\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(com.microsoft.azure.management.resources.fluentcore.model.Creatable<ResourceT>...)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation<ResourceT>.createAsync(Creatable<ResourceT>[] creatables)"
  name: "createAsync(Creatable<ResourceT>[] creatables)"
  nameWithType: "SupportsBatchCreation<ResourceT>.createAsync(Creatable<ResourceT>[] creatables)"
  summary: "Puts the requests to create a batch of resources into the queue and allow the HTTP client to execute it when system resources are available."
  modifiers:
  - "abstract"
  parameters:
  - description: "the creatables in the batch"
    name: "creatables"
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Creatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Creatable&text=Creatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;[]"
  syntax: "public abstract Observable<Indexable> createAsync(Creatable<ResourceT>[] creatables)"
  desc: "Puts the requests to create a batch of resources into the queue and allow the HTTP client to execute it when system resources are available."
  returns:
    description: "an observable for the resources"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Indexable?alt=com.microsoft.azure.management.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.fluentcore.model.CreatedResources<ResourceT>>,com.microsoft.azure.management.resources.fluentcore.model.Creatable<ResourceT>...)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation<ResourceT>.createAsync(ServiceCallback<CreatedResources<ResourceT>> callback, Creatable<ResourceT>[] creatables)"
  name: "createAsync(ServiceCallback<CreatedResources<ResourceT>> callback, Creatable<ResourceT>[] creatables)"
  nameWithType: "SupportsBatchCreation<ResourceT>.createAsync(ServiceCallback<CreatedResources<ResourceT>> callback, Creatable<ResourceT>[] creatables)"
  summary: "Puts the requests to create a batch of resources into the queue and allow the HTTP client to execute it when system resources are available."
  modifiers:
  - "abstract"
  parameters:
  - description: "the callback to handle success and failure"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.CreatedResources?alt=com.microsoft.azure.management.resources.fluentcore.model.CreatedResources&text=CreatedResources\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the creatables in the batch"
    name: "creatables"
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Creatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Creatable&text=Creatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;[]"
  syntax: "public abstract ServiceFuture<CreatedResources<ResourceT>> createAsync(ServiceCallback<CreatedResources<ResourceT>> callback, Creatable<ResourceT>[] creatables)"
  desc: "Puts the requests to create a batch of resources into the queue and allow the HTTP client to execute it when system resources are available."
  returns:
    description: "a handle to cancel the request"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.CreatedResources?alt=com.microsoft.azure.management.resources.fluentcore.model.CreatedResources&text=CreatedResources\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.fluentcore.model.CreatedResources<ResourceT>>,java.util.List<com.microsoft.azure.management.resources.fluentcore.model.Creatable<ResourceT>>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation<ResourceT>.createAsync(ServiceCallback<CreatedResources<ResourceT>> callback, List<Creatable<ResourceT>> creatables)"
  name: "createAsync(ServiceCallback<CreatedResources<ResourceT>> callback, List<Creatable<ResourceT>> creatables)"
  nameWithType: "SupportsBatchCreation<ResourceT>.createAsync(ServiceCallback<CreatedResources<ResourceT>> callback, List<Creatable<ResourceT>> creatables)"
  summary: "Puts the requests to create a batch of resources into the queue and allow the HTTP client to execute it when system resources are available."
  modifiers:
  - "abstract"
  parameters:
  - description: "the callback to handle success and failure"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.CreatedResources?alt=com.microsoft.azure.management.resources.fluentcore.model.CreatedResources&text=CreatedResources\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the list of creatables in the batch"
    name: "creatables"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Creatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Creatable&text=Creatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public abstract ServiceFuture<CreatedResources<ResourceT>> createAsync(ServiceCallback<CreatedResources<ResourceT>> callback, List<Creatable<ResourceT>> creatables)"
  desc: "Puts the requests to create a batch of resources into the queue and allow the HTTP client to execute it when system resources are available."
  returns:
    description: "a handle to cancel the request"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.CreatedResources?alt=com.microsoft.azure.management.resources.fluentcore.model.CreatedResources&text=CreatedResources\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(java.util.List<com.microsoft.azure.management.resources.fluentcore.model.Creatable<ResourceT>>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation<ResourceT>.createAsync(List<Creatable<ResourceT>> creatables)"
  name: "createAsync(List<Creatable<ResourceT>> creatables)"
  nameWithType: "SupportsBatchCreation<ResourceT>.createAsync(List<Creatable<ResourceT>> creatables)"
  summary: "Puts the requests to create a batch of resources into the queue and allow the HTTP client to execute it when system resources are available."
  modifiers:
  - "abstract"
  parameters:
  - description: "the list of creatables in the batch"
    name: "creatables"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Creatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Creatable&text=Creatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ResourceT?alt=ResourceT&text=ResourceT\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public abstract Observable<Indexable> createAsync(List<Creatable<ResourceT>> creatables)"
  desc: "Puts the requests to create a batch of resources into the queue and allow the HTTP client to execute it when system resources are available."
  returns:
    description: "an observable for the resources"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Indexable?alt=com.microsoft.azure.management.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
typeParameters:
- description: "the top level Azure resource type"
  name: "ResourceT"
desc: "Providing access to creating a batch of Azure top level resources of same type.\n\n(Note: this interface is not intended to be implemented by user code)"
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.collection"
artifact: com.microsoft.azure:azure-mgmt-resources:1.41.4
