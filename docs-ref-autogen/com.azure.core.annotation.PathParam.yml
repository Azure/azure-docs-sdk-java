### YamlMime:ManagedReference
items:
- uid: "com.azure.core.annotation.PathParam"
  id: "PathParam"
  parent: "com.azure.core.annotation"
  children:
  - "com.azure.core.annotation.PathParam.encoded()"
  - "com.azure.core.annotation.PathParam.value()"
  langs:
  - "java"
  name: "PathParam"
  nameWithType: "PathParam"
  fullName: "com.azure.core.annotation.PathParam"
  type: "Interface"
  package: "com.azure.core.annotation"
  summary: "Annotation to annotate replacement for a named path segment in REST endpoint URL.\n\nA parameter that is annotated with PathParam will be ignored if the \"uri template\" does not contain a path segment variable with name <xref uid=\"com.azure.core.annotation.PathParam.value()\" data-throw-if-not-resolved=\"false\">PathParam#value()</xref>.\n\n**Example 1:**\n\n```java\n@GET(\"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft\n .Compute/virtualMachines/\")\n  VirtualMachine getByResourceGroup(@PathParam(\"subscriptionId\") String subscriptionId, @PathParam\n  (\"resourceGroupName\") String rgName, @PathParam(\"foo\") String bar);\n```\n\nThe value of parameters subscriptionId, resourceGroupName will be encoded and encoded value will be used to replace the corresponding path segment `{subscriptionId}`, `{resourceGroupName}` respectively.\n\n**Example 2: (A use case where PathParam.encoded=true will be used)**\n\nIt is possible that, a path segment variable can be used to represent sub path:\n\n```java\n@GET(\"http://wq.com/foo/{subpath}/values\")\n  String getValues(@PathParam(\"subpath\") String param1);\n```\n\nIn this case, if consumer pass \"a/b\" as the value for param1 then the resolved url looks like: \"`http://wq.com/foo/a%2Fb/values`\".\n\nFor such cases the encoded attribute can be used:\n\n```java\n@GET(\"http://wq.com/foo/{subpath}/values\")\n  String getValues(@PathParam(value = \"subpath\", encoded = true) String param1);\n```\n\nIn this case, if consumer pass \"a/b\" as the value for param1 then the resolved url looks as expected: \"`http://wq.com/foo/a/b/values`\"."
  syntax:
    content: "public interface PathParam implements Annotation"
  implements:
  - "java.lang.annotation.Annotation"
- uid: "com.azure.core.annotation.PathParam.encoded()"
  id: "encoded()"
  parent: "com.azure.core.annotation.PathParam"
  langs:
  - "java"
  name: "encoded()"
  nameWithType: "PathParam.encoded()"
  fullName: "com.azure.core.annotation.PathParam.encoded()"
  overload: "com.azure.core.annotation.PathParam.encoded*"
  type: "Method"
  package: "com.azure.core.annotation"
  summary: "A value true for this argument indicates that value of <xref uid=\"com.azure.core.annotation.PathParam.value()\" data-throw-if-not-resolved=\"false\">PathParam#value()</xref> is already encoded hence engine should not encode it, by default value will be encoded."
  syntax:
    content: "public abstract boolean encoded()"
    return:
      type: "boolean"
      description: "Whether or not this path parameter is already encoded."
- uid: "com.azure.core.annotation.PathParam.value()"
  id: "value()"
  parent: "com.azure.core.annotation.PathParam"
  langs:
  - "java"
  name: "value()"
  nameWithType: "PathParam.value()"
  fullName: "com.azure.core.annotation.PathParam.value()"
  overload: "com.azure.core.annotation.PathParam.value*"
  type: "Method"
  package: "com.azure.core.annotation"
  summary: "The name of the variable in the endpoint uri template which will be replaced with the value of the parameter annotated with this annotation."
  syntax:
    content: "public abstract String value()"
    return:
      type: "java.lang.String"
      description: "The name of the variable in the endpoint uri template which will be replaced with the\n     value of the parameter annotated with this annotation."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.annotation.PathParam.value*"
  name: "value"
  nameWithType: "PathParam.value"
  fullName: "com.azure.core.annotation.PathParam.value"
  package: "com.azure.core.annotation"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.annotation.PathParam.encoded*"
  name: "encoded"
  nameWithType: "PathParam.encoded"
  fullName: "com.azure.core.annotation.PathParam.encoded"
  package: "com.azure.core.annotation"
- uid: "java.lang.annotation.Annotation"
  name: "Annotation"
  nameWithType: "Annotation"
  fullName: "java.lang.annotation.Annotation"
