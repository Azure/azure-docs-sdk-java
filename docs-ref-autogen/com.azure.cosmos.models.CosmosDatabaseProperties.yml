### YamlMime:JavaType
uid: "com.azure.cosmos.models.CosmosDatabaseProperties"
fullName: "com.azure.cosmos.models.CosmosDatabaseProperties"
name: "CosmosDatabaseProperties"
nameWithType: "CosmosDatabaseProperties"
summary: "Represents a Cosmos<wbr>Async<wbr>Database in the Azure Cosmos database service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CosmosDatabaseProperties"
constructors:
- uid: "com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties(String id)"
  name: "CosmosDatabaseProperties(String id)"
  nameWithType: "CosmosDatabaseProperties.CosmosDatabaseProperties(String id)"
  summary: "Constructor"
  parameters:
  - description: "id of the database"
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDatabaseProperties(String id)"
  desc: "Constructor"
methods:
- uid: "com.azure.cosmos.models.CosmosDatabaseProperties.getETag()"
  fullName: "com.azure.cosmos.models.CosmosDatabaseProperties.getETag()"
  name: "getETag()"
  nameWithType: "CosmosDatabaseProperties.getETag()"
  summary: "Get the entity tag associated with the resource."
  syntax: "public String getETag()"
  desc: "Get the entity tag associated with the resource. This is only relevant when getting response from the server."
  returns:
    description: "the e tag."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosDatabaseProperties.getId()"
  fullName: "com.azure.cosmos.models.CosmosDatabaseProperties.getId()"
  name: "getId()"
  nameWithType: "CosmosDatabaseProperties.getId()"
  summary: "Gets the name of the resource."
  syntax: "public String getId()"
  desc: "Gets the name of the resource."
  returns:
    description: "the name of the resource."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosDatabaseProperties.getResourceId()"
  fullName: "com.azure.cosmos.models.CosmosDatabaseProperties.getResourceId()"
  name: "getResourceId()"
  nameWithType: "CosmosDatabaseProperties.getResourceId()"
  summary: "Gets the ID associated with the resource."
  syntax: "public String getResourceId()"
  desc: "Gets the ID associated with the resource."
  returns:
    description: "the ID associated with the resource."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosDatabaseProperties.getTimestamp()"
  fullName: "com.azure.cosmos.models.CosmosDatabaseProperties.getTimestamp()"
  name: "getTimestamp()"
  nameWithType: "CosmosDatabaseProperties.getTimestamp()"
  summary: "Get the last modified timestamp associated with the resource."
  syntax: "public Instant getTimestamp()"
  desc: "Get the last modified timestamp associated with the resource. This is only relevant when getting response from the server."
  returns:
    description: "the timestamp."
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosDatabaseProperties.setId(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosDatabaseProperties.setId(String id)"
  name: "setId(String id)"
  nameWithType: "CosmosDatabaseProperties.setId(String id)"
  summary: "Sets the name of the resource."
  parameters:
  - description: "the name of the resource."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosDatabaseProperties setId(String id)"
  desc: "Sets the name of the resource."
  returns:
    description: "the current instance of <xref uid=\"com.azure.cosmos.models.CosmosDatabaseProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosDatabaseProperties\"></xref>."
    type: "<xref href=\"com.azure.cosmos.models.CosmosDatabaseProperties?alt=com.azure.cosmos.models.CosmosDatabaseProperties&text=CosmosDatabaseProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a CosmosAsyncDatabase in the Azure Cosmos database service. A cosmos database manages users, permissions and a set of containers\n\nEach Azure Cosmos DB Service is able to support multiple independent named databases, with the database being the logical container for data. Each Database consists of one or more cosmos containers, each of which in turn contain one or more cosmos items. Since databases are an an administrative resource and the Service Key will be required in order to access and successfully complete any action using the User APIs."
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.35.0
