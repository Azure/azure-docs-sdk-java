### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.models.CosmosDatabaseProperties
  id: CosmosDatabaseProperties
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models
  children:
  - com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties(java.lang.String)
  - com.azure.cosmos.models.CosmosDatabaseProperties.getETag()
  - com.azure.cosmos.models.CosmosDatabaseProperties.getId()
  - com.azure.cosmos.models.CosmosDatabaseProperties.getResourceId()
  - com.azure.cosmos.models.CosmosDatabaseProperties.getTimestamp()
  - com.azure.cosmos.models.CosmosDatabaseProperties.setId(java.lang.String)
  langs:
  - java
  name: CosmosDatabaseProperties
  nameWithType: CosmosDatabaseProperties
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties
  type: Class
  package: com.azure.cosmos.models
  summary: >-
    Represents a CosmosAsyncDatabase in the Azure Cosmos database service. A cosmos database manages users, permissions and a set of containers


    Each Azure Cosmos DB Service is able to support multiple independent named databases, with the database being the logical container for data. Each Database consists of one or more cosmos containers, each of which in turn contain one or more cosmos items. Since databases are an an administrative resource and the Service Key will be required in order to access and successfully complete any action using the User APIs.
  syntax:
    content: public final class CosmosDatabaseProperties
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties(com.azure.cosmos.implementation.Database)
  id: CosmosDatabaseProperties(com.azure.cosmos.implementation.Database)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosDatabaseProperties
  langs:
  - java
  name: CosmosDatabaseProperties(Database database)
  nameWithType: CosmosDatabaseProperties.CosmosDatabaseProperties(Database database)
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties(Database database)
  overload: com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties*
  type: Constructor
  package: com.azure.cosmos.models
  syntax:
    content: " CosmosDatabaseProperties(Database database)"
    parameters:
    - id: database
      type: com.azure.cosmos.implementation.Database
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties(java.lang.String)
  id: CosmosDatabaseProperties(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosDatabaseProperties
  langs:
  - java
  name: CosmosDatabaseProperties(String id)
  nameWithType: CosmosDatabaseProperties.CosmosDatabaseProperties(String id)
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties(String id)
  overload: com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties*
  type: Constructor
  package: com.azure.cosmos.models
  summary: Constructor
  syntax:
    content: public CosmosDatabaseProperties(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: id of the database
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties(java.lang.String,java.lang.String)
  id: CosmosDatabaseProperties(java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosDatabaseProperties
  langs:
  - java
  name: CosmosDatabaseProperties(String jsonString, String dummy)
  nameWithType: CosmosDatabaseProperties.CosmosDatabaseProperties(String jsonString, String dummy)
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties(String jsonString, String dummy)
  overload: com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties*
  type: Constructor
  package: com.azure.cosmos.models
  syntax:
    content: " CosmosDatabaseProperties(String jsonString, String dummy)"
    parameters:
    - id: jsonString
      type: java.lang.String
    - id: dummy
      type: java.lang.String
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.getETag()
  id: getETag()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosDatabaseProperties
  langs:
  - java
  name: getETag()
  nameWithType: CosmosDatabaseProperties.getETag()
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.getETag()
  overload: com.azure.cosmos.models.CosmosDatabaseProperties.getETag*
  type: Method
  package: com.azure.cosmos.models
  summary: Get the entity tag associated with the resource. This is only relevant when getting response from the server.
  syntax:
    content: public String getETag()
    return:
      type: java.lang.String
      description: the e tag.
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.getId()
  id: getId()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosDatabaseProperties
  langs:
  - java
  name: getId()
  nameWithType: CosmosDatabaseProperties.getId()
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.getId()
  overload: com.azure.cosmos.models.CosmosDatabaseProperties.getId*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the name of the resource.
  syntax:
    content: public String getId()
    return:
      type: java.lang.String
      description: the name of the resource.
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.getResourceId()
  id: getResourceId()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosDatabaseProperties
  langs:
  - java
  name: getResourceId()
  nameWithType: CosmosDatabaseProperties.getResourceId()
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.getResourceId()
  overload: com.azure.cosmos.models.CosmosDatabaseProperties.getResourceId*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the ID associated with the resource.
  syntax:
    content: public String getResourceId()
    return:
      type: java.lang.String
      description: the ID associated with the resource.
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.getTimestamp()
  id: getTimestamp()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosDatabaseProperties
  langs:
  - java
  name: getTimestamp()
  nameWithType: CosmosDatabaseProperties.getTimestamp()
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.getTimestamp()
  overload: com.azure.cosmos.models.CosmosDatabaseProperties.getTimestamp*
  type: Method
  package: com.azure.cosmos.models
  summary: Get the last modified timestamp associated with the resource. This is only relevant when getting response from the server.
  syntax:
    content: public Instant getTimestamp()
    return:
      type: java.time.Instant
      description: the timestamp.
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.setId(java.lang.String)
  id: setId(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.CosmosDatabaseProperties
  langs:
  - java
  name: setId(String id)
  nameWithType: CosmosDatabaseProperties.setId(String id)
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.setId(String id)
  overload: com.azure.cosmos.models.CosmosDatabaseProperties.setId*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the name of the resource.
  syntax:
    content: public CosmosDatabaseProperties setId(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the name of the resource.
    return:
      type: com.azure.cosmos.models.CosmosDatabaseProperties
      description: the current instance of <xref uid="com.azure.cosmos.models.CosmosDatabaseProperties" data-throw-if-not-resolved="false">CosmosDatabaseProperties</xref>.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties*
  name: CosmosDatabaseProperties
  nameWithType: CosmosDatabaseProperties.CosmosDatabaseProperties
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.implementation.Database
  name: Database
  nameWithType: Database
  fullName: com.azure.cosmos.implementation.Database
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.getId*
  name: getId
  nameWithType: CosmosDatabaseProperties.getId
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.getId
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.setId*
  name: setId
  nameWithType: CosmosDatabaseProperties.setId
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.setId
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.getResourceId*
  name: getResourceId
  nameWithType: CosmosDatabaseProperties.getResourceId
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.getResourceId
  package: com.azure.cosmos.models
- uid: java.time.Instant
  spec.java:
  - uid: java.time.Instant
    name: Instant
    fullName: java.time.Instant
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.getTimestamp*
  name: getTimestamp
  nameWithType: CosmosDatabaseProperties.getTimestamp
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.getTimestamp
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.CosmosDatabaseProperties.getETag*
  name: getETag
  nameWithType: CosmosDatabaseProperties.getETag
  fullName: com.azure.cosmos.models.CosmosDatabaseProperties.getETag
  package: com.azure.cosmos.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
