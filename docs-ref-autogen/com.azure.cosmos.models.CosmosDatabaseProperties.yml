### YamlMime:JavaType
uid: "com.azure.cosmos.models.CosmosDatabaseProperties"
fullName: "com.azure.cosmos.models.CosmosDatabaseProperties"
name: "CosmosDatabaseProperties"
nameWithType: "CosmosDatabaseProperties"
summary: "Represents a CosmosAsyncDatabase in the Azure Cosmos database service. A cosmos database manages users, permissions and a set of containers\n\nEach Azure Cosmos DB Service is able to support multiple independent named databases, with the database being the logical container for data. Each Database consists of one or more cosmos containers, each of which in turn contain one or more cosmos items. Since databases are an an administrative resource and the Service Key will be required in order to access and successfully complete any action using the User APIs."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CosmosDatabaseProperties"
constructors:
- "com.azure.cosmos.models.CosmosDatabaseProperties.CosmosDatabaseProperties(java.lang.String)"
methods:
- "com.azure.cosmos.models.CosmosDatabaseProperties.getETag()"
- "com.azure.cosmos.models.CosmosDatabaseProperties.getId()"
- "com.azure.cosmos.models.CosmosDatabaseProperties.getResourceId()"
- "com.azure.cosmos.models.CosmosDatabaseProperties.getTimestamp()"
- "com.azure.cosmos.models.CosmosDatabaseProperties.setId(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.11.0
