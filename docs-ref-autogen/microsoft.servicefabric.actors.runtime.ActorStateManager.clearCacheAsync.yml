### YamlMime:JavaMember
nameWithType: ActorStateManager.clearCacheAsync
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.clearCacheAsync()
  name: clearCacheAsync()
  nameWithType: ActorStateManager.clearCacheAsync()
  returns:
    description: <p>A task that represents the asynchronous clear cache operation. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture<?>&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Clears all the cached actor states and any operation(s) performed on <xref uid="microsoft.servicefabric.actors.runtime.ActorStateManager" data-throw-if-not-resolved="false">ActorStateManager</xref> since last state save operation.</p>

    <p>

      <b>Remarks:</b> All the operation(s) performed on <xref uid="microsoft.servicefabric.actors.runtime.ActorStateManager" data-throw-if-not-resolved="false">ActorStateManager</xref> since last save operation are cleared on clearing the cache and will not be included in next save operation. </p>
  syntax: public CompletableFuture<?> clearCacheAsync()
  uid: microsoft.servicefabric.actors.runtime.ActorStateManager.clearCacheAsync()
- fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.clearCacheAsync(CancellationToken cancellationToken)
  name: clearCacheAsync(CancellationToken cancellationToken)
  nameWithType: ActorStateManager.clearCacheAsync(CancellationToken cancellationToken)
  parameters:
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task that represents the asynchronous clear cache operation. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture<?>&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Clears all the cached actor states and any operation(s) performed on <xref uid="microsoft.servicefabric.actors.runtime.ActorStateManager" data-throw-if-not-resolved="false">ActorStateManager</xref> since last state save operation.</p>

    <p>

      <b>Remarks:</b> All the operation(s) performed on <xref uid="microsoft.servicefabric.actors.runtime.ActorStateManager" data-throw-if-not-resolved="false">ActorStateManager</xref> since last save operation are cleared on clearing the cache and will not be included in next save operation. </p>
  syntax: public CompletableFuture<?> clearCacheAsync(CancellationToken cancellationToken)
  uid: microsoft.servicefabric.actors.runtime.ActorStateManager.clearCacheAsync(CancellationToken)
uid: microsoft.servicefabric.actors.runtime.ActorStateManager.clearCacheAsync*
fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.clearCacheAsync()
name: clearCacheAsync()
package: microsoft.servicefabric.actors.runtime
metadata: {}
