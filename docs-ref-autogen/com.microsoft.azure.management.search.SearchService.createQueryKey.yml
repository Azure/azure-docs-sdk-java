### YamlMime:JavaMember
nameWithType: SearchService.createQueryKey
type: method
members:
- fullName: com.microsoft.azure.management.search.SearchService.createQueryKey(String name)
  name: createQueryKey(String name)
  nameWithType: SearchService.createQueryKey(String name)
  parameters:
  - description: <p>The name of the new query API key. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the &lt;QueryKey&gt; object if successful </p>
    type: <xref href="com.microsoft.azure.management.search.QueryKey?alt=com.microsoft.azure.management.search.QueryKey&text=QueryKey" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Regenerates either the primary or secondary admin API key. </p>

    <p>You can only regenerate one key at a time.</p>

    <p></p>
  syntax: public QueryKey createQueryKey(String name)
  uid: com.microsoft.azure.management.search.SearchService.createQueryKey(String)
uid: com.microsoft.azure.management.search.SearchService.createQueryKey*
fullName: com.microsoft.azure.management.search.SearchService.createQueryKey(String name)
name: createQueryKey(String name)
package: com.microsoft.azure.management.search
metadata: {}
