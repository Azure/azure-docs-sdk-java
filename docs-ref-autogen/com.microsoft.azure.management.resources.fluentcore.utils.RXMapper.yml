### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.fluentcore.utils.RXMapper"
fullName: "com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>"
name: "RXMapper<T>"
nameWithType: "RXMapper<T>"
summary: "An internal utility class representing an RX function returning the provided type instance from a call with an arbitrary parameter."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RXMapper<T> implements Func1<Object,T>"
methods:
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.<T>map(rx.Observable<?>,T)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.<T>map(Observable<?> fromObservable, T toValue)"
  name: "<T>map(Observable<?> fromObservable, T toValue)"
  nameWithType: "RXMapper<T>.<T>map(Observable<?> fromObservable, T toValue)"
  summary: "Shortcut for mapping the output of an arbitrary observable to one returning an instance of a specific type, using the IO scheduler."
  modifiers:
  - "static"
  parameters:
  - description: "the source observable"
    name: "fromObservable"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - description: "the value to emit to the observer"
    name: "toValue"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Observable<T> <T>map(Observable<?> fromObservable, T toValue)"
  desc: "Shortcut for mapping the output of an arbitrary observable to one returning an instance of a specific type, using the IO scheduler."
  returns:
    description: "an observable emitting the specified value"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.call(java.lang.Object)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.call(Object t)"
  name: "call(Object t)"
  nameWithType: "RXMapper<T>.call(Object t)"
  parameters:
  - name: "t"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public T call(Object t)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.mapToVoid(rx.Observable<?>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.mapToVoid(Observable<?> fromObservable)"
  name: "mapToVoid(Observable<?> fromObservable)"
  nameWithType: "RXMapper<T>.mapToVoid(Observable<?> fromObservable)"
  summary: "Shortcut for mapping an arbitrary observable to void, using the IO scheduler."
  modifiers:
  - "static"
  parameters:
  - description: "the source observable"
    name: "fromObservable"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public static Observable<Void> mapToVoid(Observable<?> fromObservable)"
  desc: "Shortcut for mapping an arbitrary observable to void, using the IO scheduler."
  returns:
    description: "a void-emitting observable"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
typeParameters:
- description: "the type to emit as Observable"
  name: "T"
desc: "An internal utility class representing an RX function returning the provided type instance from a call with an arbitrary parameter."
implements:
- "<xref href=\"rx.functions.Func1?alt=rx.functions.Func1&text=Func1\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.utils"
artifact: com.microsoft.azure:azure-mgmt-resources:1.41.4
