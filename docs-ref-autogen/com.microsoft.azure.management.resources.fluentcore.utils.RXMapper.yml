### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper
  id: RXMapper
  artifact: com.microsoft.azure:azure-mgmt-resources:1.36.1
  parent: com.microsoft.azure.management.resources.fluentcore.utils
  children:
  - com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.<T>map(rx.Observable<?>,T)
  - com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.call(java.lang.Object)
  - com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.mapToVoid(rx.Observable<?>)
  langs:
  - java
  name: RXMapper<T>
  nameWithType: RXMapper<T>
  fullName: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>
  type: Class
  package: com.microsoft.azure.management.resources.fluentcore.utils
  summary: An internal utility class representing an RX function returning the provided type instance from a call with an arbitrary parameter.
  syntax:
    content: public final class RXMapper<T> implements Func1<Object,T>
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  implements:
  - rx.functions.Func1<java.lang.Object,T>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.<T>map(rx.Observable<?>,T)
  id: <T>map(rx.Observable<?>,T)
  artifact: com.microsoft.azure:azure-mgmt-resources:1.36.1
  parent: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper
  langs:
  - java
  name: <T>map(Observable<?> fromObservable, T toValue)
  nameWithType: RXMapper<T>.<T>map(Observable<?> fromObservable, T toValue)
  fullName: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.<T>map(Observable<?> fromObservable, T toValue)
  overload: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.map*
  type: Method
  package: com.microsoft.azure.management.resources.fluentcore.utils
  summary: Shortcut for mapping the output of an arbitrary observable to one returning an instance of a specific type, using the IO scheduler.
  syntax:
    content: public static Observable<T> <T>map(Observable<?> fromObservable, T toValue)
    parameters:
    - id: fromObservable
      type: rx.Observable<?>
      description: the source observable
    - id: toValue
      type: T
      description: the value to emit to the observer
    return:
      type: rx.Observable<T>
      description: an observable emitting the specified value
- uid: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.RXMapper()
  id: RXMapper()
  artifact: com.microsoft.azure:azure-mgmt-resources:1.36.1
  parent: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper
  langs:
  - java
  name: RXMapper()
  nameWithType: RXMapper<T>.RXMapper()
  fullName: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.RXMapper()
  overload: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.RXMapper*
  type: Constructor
  package: com.microsoft.azure.management.resources.fluentcore.utils
  summary: Void emitting mapper.
  syntax:
    content: private RXMapper()
- uid: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.RXMapper(T)
  id: RXMapper(T)
  artifact: com.microsoft.azure:azure-mgmt-resources:1.36.1
  parent: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper
  langs:
  - java
  name: RXMapper(T value)
  nameWithType: RXMapper<T>.RXMapper(T value)
  fullName: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.RXMapper(T value)
  overload: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.RXMapper*
  type: Constructor
  package: com.microsoft.azure.management.resources.fluentcore.utils
  syntax:
    content: private RXMapper(T value)
    parameters:
    - id: value
      type: T
      description: the value to emit
- uid: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.call(java.lang.Object)
  id: call(java.lang.Object)
  artifact: com.microsoft.azure:azure-mgmt-resources:1.36.1
  parent: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper
  langs:
  - java
  name: call(Object t)
  nameWithType: RXMapper<T>.call(Object t)
  fullName: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.call(Object t)
  overload: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.call*
  type: Method
  package: com.microsoft.azure.management.resources.fluentcore.utils
  syntax:
    content: public T call(Object t)
    parameters:
    - id: t
      type: java.lang.Object
    return:
      type: T
- uid: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.mapToVoid(rx.Observable<?>)
  id: mapToVoid(rx.Observable<?>)
  artifact: com.microsoft.azure:azure-mgmt-resources:1.36.1
  parent: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper
  langs:
  - java
  name: mapToVoid(Observable<?> fromObservable)
  nameWithType: RXMapper<T>.mapToVoid(Observable<?> fromObservable)
  fullName: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.mapToVoid(Observable<?> fromObservable)
  overload: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.mapToVoid*
  type: Method
  package: com.microsoft.azure.management.resources.fluentcore.utils
  summary: Shortcut for mapping an arbitrary observable to void, using the IO scheduler.
  syntax:
    content: public static Observable<Void> mapToVoid(Observable<?> fromObservable)
    parameters:
    - id: fromObservable
      type: rx.Observable<?>
      description: the source observable
    return:
      type: rx.Observable<java.lang.Void>
      description: a void-emitting observable
references:
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.RXMapper*
  name: RXMapper
  nameWithType: RXMapper<T>.RXMapper
  fullName: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.RXMapper
  package: com.microsoft.azure.management.resources.fluentcore.utils
- uid: rx.Observable<?>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: rx.Observable<T>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.map*
  name: <T>map
  nameWithType: RXMapper<T>.<T>map
  fullName: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.<T>map
  package: com.microsoft.azure.management.resources.fluentcore.utils
- uid: rx.Observable<java.lang.Void>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.mapToVoid*
  name: mapToVoid
  nameWithType: RXMapper<T>.mapToVoid
  fullName: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.mapToVoid
  package: com.microsoft.azure.management.resources.fluentcore.utils
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.call*
  name: call
  nameWithType: RXMapper<T>.call
  fullName: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.call
  package: com.microsoft.azure.management.resources.fluentcore.utils
- uid: rx.functions.Func1<java.lang.Object,T>
  name: Func1<Object,T>
  nameWithType: Func1<Object,T>
  fullName: rx.functions.Func1<java.lang.Object,T>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: rx.Observable
  name: Observable
  nameWithType: Observable
  fullName: rx.Observable
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: rx.functions.Func1
  name: Func1
  nameWithType: Func1
  fullName: rx.functions.Func1
- uid: java.lang.Object,T
  name: Object,T
  nameWithType: Object,T
  fullName: java.lang.Object,T
