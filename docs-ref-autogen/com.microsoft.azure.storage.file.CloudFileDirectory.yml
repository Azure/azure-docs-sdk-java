### YamlMime:JavaType
constructors:
- com.microsoft.azure.storage.file.CloudFileDirectory.CloudFileDirectory(final StorageUri)
- com.microsoft.azure.storage.file.CloudFileDirectory.CloudFileDirectory(final StorageUri,final StorageCredentials)
- com.microsoft.azure.storage.file.CloudFileDirectory.CloudFileDirectory(final StorageUri,final String,final CloudFileShare)
- com.microsoft.azure.storage.file.CloudFileDirectory.CloudFileDirectory(final URI)
- com.microsoft.azure.storage.file.CloudFileDirectory.CloudFileDirectory(final URI,final StorageCredentials)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.file.ListFileItem?alt=com.microsoft.azure.storage.file.ListFileItem&text=ListFileItem" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.azure.storage.file.CloudFileDirectory.assertValidFilePermissionOrKey()
- com.microsoft.azure.storage.file.CloudFileDirectory.closeAllHandlesSegmented()
- com.microsoft.azure.storage.file.CloudFileDirectory.closeAllHandlesSegmented(final ResultContinuation,boolean,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.closeHandleSegmented(String)
- com.microsoft.azure.storage.file.CloudFileDirectory.closeHandleSegmented(String,ResultContinuation,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.create()
- com.microsoft.azure.storage.file.CloudFileDirectory.create(FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.createIfNotExists()
- com.microsoft.azure.storage.file.CloudFileDirectory.createIfNotExists(FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.delete()
- com.microsoft.azure.storage.file.CloudFileDirectory.delete(AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.deleteIfExists()
- com.microsoft.azure.storage.file.CloudFileDirectory.deleteIfExists(AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.downloadAttributes()
- com.microsoft.azure.storage.file.CloudFileDirectory.downloadAttributes(AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.exists()
- com.microsoft.azure.storage.file.CloudFileDirectory.exists(final AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.getDirectoryReference(final String)
- com.microsoft.azure.storage.file.CloudFileDirectory.getFileReference(final String)
- com.microsoft.azure.storage.file.CloudFileDirectory.getMetadata()
- com.microsoft.azure.storage.file.CloudFileDirectory.getName()
- com.microsoft.azure.storage.file.CloudFileDirectory.getParent()
- com.microsoft.azure.storage.file.CloudFileDirectory.getProperties()
- com.microsoft.azure.storage.file.CloudFileDirectory.getServiceClient()
- com.microsoft.azure.storage.file.CloudFileDirectory.getShare()
- com.microsoft.azure.storage.file.CloudFileDirectory.getStorageUri()
- com.microsoft.azure.storage.file.CloudFileDirectory.getUri()
- com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectories()
- com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectories(FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectories(String,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectoriesSegmented()
- com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectoriesSegmented(final Integer,final ResultContinuation,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectoriesSegmented(final String,final Integer,final ResultContinuation,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.listHandles()
- com.microsoft.azure.storage.file.CloudFileDirectory.listHandles(boolean,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.listHandlesSegmented()
- com.microsoft.azure.storage.file.CloudFileDirectory.listHandlesSegmented(final Integer,final boolean,final ResultContinuation,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.setFilePermission(String)
- com.microsoft.azure.storage.file.CloudFileDirectory.setMetadata(HashMap<String, String>)
- com.microsoft.azure.storage.file.CloudFileDirectory.setProperties(final FileDirectoryProperties)
- com.microsoft.azure.storage.file.CloudFileDirectory.setShare(final CloudFileShare)
- com.microsoft.azure.storage.file.CloudFileDirectory.setStorageUri(final StorageUri)
- com.microsoft.azure.storage.file.CloudFileDirectory.uploadMetadata()
- com.microsoft.azure.storage.file.CloudFileDirectory.uploadMetadata(AccessCondition,FileRequestOptions,OperationContext)
- com.microsoft.azure.storage.file.CloudFileDirectory.uploadProperties()
- com.microsoft.azure.storage.file.CloudFileDirectory.uploadProperties(final AccessCondition,FileRequestOptions,OperationContext)
nameWithType: CloudFileDirectory
syntax: public class CloudFileDirectory implements ListFileItem
type: class
uid: com.microsoft.azure.storage.file.CloudFileDirectory
fullName: com.microsoft.azure.storage.file.CloudFileDirectory
name: CloudFileDirectory
package: com.microsoft.azure.storage.file
summary: >-
  <p>Represents a virtual directory of files. </p>

  <p>Directories, which are encapsulated as <xref uid="com.microsoft.azure.storage.file.CloudFileDirectory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> objects, hold files and can also contain sub-directories. </p>
metadata: {}
