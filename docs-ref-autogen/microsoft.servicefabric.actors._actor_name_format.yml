### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors._actor_name_format
  id: _actor_name_format
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_name_format.getConfigPackageName(Class<?>)
  - microsoft.servicefabric.actors._actor_name_format.getFabricServiceEndpointName(Class<?>)
  - microsoft.servicefabric.actors._actor_name_format.getFabricServiceName(Class<?>,String)
  - microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorConfigSectionName(Class<?>)
  - microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorEndpointName(Class<?>)
  - microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorSecurityConfigSectionName(Class<?>)
  - microsoft.servicefabric.actors._actor_name_format.getFabricServiceTransportSettingsSectionName(Class<?>)
  - microsoft.servicefabric.actors._actor_name_format.getFabricServiceTypeName(Class<?>)
  - microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri(Class<?>,String,String)
  - microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri(Class<?>,URI,String)
  - microsoft.servicefabric.actors._actor_name_format.getName(Class<?>)
  href: microsoft.servicefabric.actors._actor_name_format.yml
  langs:
  - java
  name: ActorNameFormat
  nameWithType: ActorNameFormat
  fullName: microsoft.servicefabric.actors.ActorNameFormat
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
    startLine: 14
  package: microsoft.servicefabric.actors
  summary: "<p>Contains static methods for generating names like service name, application name form the actor interface type. </p>"
  syntax:
    content: public class ActorNameFormat
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.actors._actor_name_format.getConfigPackageName(Class<?>)
  id: getConfigPackageName(Class<?>)
  parent: microsoft.servicefabric.actors._actor_name_format
  href: microsoft.servicefabric.actors._actor_name_format.yml
  langs:
  - java
  name: getConfigPackageName(Class<?> actorImplementationType)
  nameWithType: ActorNameFormat.getConfigPackageName(Class<?> actorImplementationType)
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getConfigPackageName(Class<?> actorImplementationType)
  overload: microsoft.servicefabric.actors._actor_name_format.getConfigPackageName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
    startLine: 59
  package: microsoft.servicefabric.actors
  summary: "<p>Gets the configuration package name used in service package for the actor.</p>\r\n<p></p>"
  syntax:
    content: public static String getConfigPackageName(Class<?> actorImplementationType)
    parameters:
    - id: actorImplementationType
      type: a19781f8
      description: <p>Type of class implementing the actor. </p>
    return:
      type: "26831127"
      description: <p>configuration package name. </p>
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceEndpointName(Class<?>)
  id: getFabricServiceEndpointName(Class<?>)
  parent: microsoft.servicefabric.actors._actor_name_format
  href: microsoft.servicefabric.actors._actor_name_format.yml
  langs:
  - java
  name: getFabricServiceEndpointName(Class<?> actorImplementationType)
  nameWithType: ActorNameFormat.getFabricServiceEndpointName(Class<?> actorImplementationType)
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceEndpointName(Class<?> actorImplementationType)
  overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceEndpointName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
    startLine: 98
  package: microsoft.servicefabric.actors
  summary: "<p>Gets the service endpoint for the actor type which is specified in service manifest for the actor service.</p>\r\n<p></p>"
  syntax:
    content: public static String getFabricServiceEndpointName(Class<?> actorImplementationType)
    parameters:
    - id: actorImplementationType
      type: a19781f8
      description: <p>Type of class implementing the actor. </p>
    return:
      type: "26831127"
      description: <p>Service endpoint name. </p>
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceName(Class<?>,String)
  id: getFabricServiceName(Class<?>,String)
  parent: microsoft.servicefabric.actors._actor_name_format
  href: microsoft.servicefabric.actors._actor_name_format.yml
  langs:
  - java
  name: getFabricServiceName(Class<?> actorInterfaceType, String serviceName)
  nameWithType: ActorNameFormat.getFabricServiceName(Class<?> actorInterfaceType, String serviceName)
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceName(Class<?> actorInterfaceType, String serviceName)
  overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
    startLine: 205
  package: microsoft.servicefabric.actors
  summary: "<p>Gets name of service which hosts the actor type in Service Fabric cluster.</p>\r\n<p></p>"
  syntax:
    content: public static String getFabricServiceName(Class<?> actorInterfaceType, String serviceName)
    parameters:
    - id: actorInterfaceType
      type: a19781f8
      description: <p>Type of the actor interface. </p>
    - id: serviceName
      type: "26831127"
      description: <p>Name of service hosting the actor type. If this value is null then service name is constructed using the actorInterfaceType. </p>
    return:
      type: "26831127"
      description: <p>Service Fabric service name hosting the actor type. </p>
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorConfigSectionName(Class<?>)
  id: getFabricServiceReplicatorConfigSectionName(Class<?>)
  parent: microsoft.servicefabric.actors._actor_name_format
  href: microsoft.servicefabric.actors._actor_name_format.yml
  langs:
  - java
  name: getFabricServiceReplicatorConfigSectionName(Class<?> actorImplementationType)
  nameWithType: ActorNameFormat.getFabricServiceReplicatorConfigSectionName(Class<?> actorImplementationType)
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorConfigSectionName(Class<?> actorImplementationType)
  overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorConfigSectionName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
    startLine: 30
  package: microsoft.servicefabric.actors
  summary: "<p>Gets the replicator configuration section name specified in configuration package for the actor service.</p>\r\n<p>\r\n  <b>Remarks:</b> Values specified in replicator configuration section are used to configure <xref uid=\"system.fabric._replicator_settings\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings</xref> for the replication of actor state between primary and secondary replicas. </p>"
  syntax:
    content: public static String getFabricServiceReplicatorConfigSectionName(Class<?> actorImplementationType)
    parameters:
    - id: actorImplementationType
      type: a19781f8
      description: <p>Type of class implementing the actor. </p>
    return:
      type: "26831127"
      description: <p>Replicator configuration section name. </p>
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorEndpointName(Class<?>)
  id: getFabricServiceReplicatorEndpointName(Class<?>)
  parent: microsoft.servicefabric.actors._actor_name_format
  href: microsoft.servicefabric.actors._actor_name_format.yml
  langs:
  - java
  name: getFabricServiceReplicatorEndpointName(Class<?> actorImplementationType)
  nameWithType: ActorNameFormat.getFabricServiceReplicatorEndpointName(Class<?> actorImplementationType)
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorEndpointName(Class<?> actorImplementationType)
  overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorEndpointName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
    startLine: 70
  package: microsoft.servicefabric.actors
  summary: "<p>Gets the replicator endpoint which is specified in service manifest for the actor service.</p>\r\n<p></p>"
  syntax:
    content: public static String getFabricServiceReplicatorEndpointName(Class<?> actorImplementationType)
    parameters:
    - id: actorImplementationType
      type: a19781f8
      description: <p>Type of class implementing the actor. </p>
    return:
      type: "26831127"
      description: <p>Service replicator endpoint name. </p>
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorSecurityConfigSectionName(Class<?>)
  id: getFabricServiceReplicatorSecurityConfigSectionName(Class<?>)
  parent: microsoft.servicefabric.actors._actor_name_format
  href: microsoft.servicefabric.actors._actor_name_format.yml
  langs:
  - java
  name: getFabricServiceReplicatorSecurityConfigSectionName(Class<?> actorImplementationType)
  nameWithType: ActorNameFormat.getFabricServiceReplicatorSecurityConfigSectionName(Class<?> actorImplementationType)
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorSecurityConfigSectionName(Class<?> actorImplementationType)
  overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorSecurityConfigSectionName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
    startLine: 86
  package: microsoft.servicefabric.actors
  summary: "<p>Gets the replicator security configuration section name specified in configuration package for the actor service.</p>\r\n<p>\r\n  <b>Remarks:</b> Values specified in replicator security configuration section are used to configure <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings#securityCredentials</xref> for the replication of actor state between primary and secondary replicas. </p>"
  syntax:
    content: public static String getFabricServiceReplicatorSecurityConfigSectionName(Class<?> actorImplementationType)
    parameters:
    - id: actorImplementationType
      type: a19781f8
      description: <p>Type of class implementing the actor. </p>
    return:
      type: "26831127"
      description: <p>Replicator security configuration section name. </p>
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTransportSettingsSectionName(Class<?>)
  id: getFabricServiceTransportSettingsSectionName(Class<?>)
  parent: microsoft.servicefabric.actors._actor_name_format
  href: microsoft.servicefabric.actors._actor_name_format.yml
  langs:
  - java
  name: getFabricServiceTransportSettingsSectionName(Class<?> actorImplementationType)
  nameWithType: ActorNameFormat.getFabricServiceTransportSettingsSectionName(Class<?> actorImplementationType)
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceTransportSettingsSectionName(Class<?> actorImplementationType)
  overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTransportSettingsSectionName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
    startLine: 48
  package: microsoft.servicefabric.actors
  summary: "<p>Gets the fabrictransport configuration section name specified in configuration package for the actor service.</p>\r\n<p>\r\n  <b>Remarks:</b>Values specified in FabricTransport configuration section are used to configure <xref uid=\"\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.fabrictransport.runtime.FabricTransportListenerSettings</xref> for the communication. </p>"
  syntax:
    content: public static String getFabricServiceTransportSettingsSectionName(Class<?> actorImplementationType)
    parameters:
    - id: actorImplementationType
      type: a19781f8
      description: <p>Type of class implementing the actor. </p>
    return:
      type: "26831127"
      description: <p>FabricTransport configuration section name. </p>
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTypeName(Class<?>)
  id: getFabricServiceTypeName(Class<?>)
  parent: microsoft.servicefabric.actors._actor_name_format
  href: microsoft.servicefabric.actors._actor_name_format.yml
  langs:
  - java
  name: getFabricServiceTypeName(Class<?> actorImplementationType)
  nameWithType: ActorNameFormat.getFabricServiceTypeName(Class<?> actorImplementationType)
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceTypeName(Class<?> actorImplementationType)
  overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTypeName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
    startLine: 109
  package: microsoft.servicefabric.actors
  summary: "<p>Gets service type name for the actor.</p>\r\n<p></p>"
  syntax:
    content: public static String getFabricServiceTypeName(Class<?> actorImplementationType)
    parameters:
    - id: actorImplementationType
      type: a19781f8
      description: <p>Actor implementation type. </p>
    return:
      type: "26831127"
      description: <p>Service type name. </p>
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri(Class<?>,String,String)
  id: getFabricServiceUri(Class<?>,String,String)
  parent: microsoft.servicefabric.actors._actor_name_format
  href: microsoft.servicefabric.actors._actor_name_format.yml
  langs:
  - java
  name: getFabricServiceUri(Class<?> actorInterfaceType, String applicationName, String serviceName)
  nameWithType: ActorNameFormat.getFabricServiceUri(Class<?> actorInterfaceType, String applicationName, String serviceName)
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceUri(Class<?> actorInterfaceType, String applicationName, String serviceName)
  overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
    startLine: 172
  package: microsoft.servicefabric.actors
  summary: "<p>Gets service Uri which hosts the actor type in Service Fabric cluster.</p>\r\n<p>\r\n  <b>Remarks:</b> If applicationName is passed as null or empty string, an attempt is made to get application name from <xref uid=\"system.fabric._code_package_activation_context\" data-throw-if-not-resolved=\"false\">system.fabric.CodePackageActivationContext</xref>. If the method still cannot determine application name, <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref> is thrown. </p>"
  syntax:
    content: public static URI getFabricServiceUri(Class<?> actorInterfaceType, String applicationName, String serviceName)
    parameters:
    - id: actorInterfaceType
      type: a19781f8
      description: <p>Type of the actor interface. </p>
    - id: applicationName
      type: "26831127"
      description: <p>Service Fabric application name containing the actor service. If this value is null application name is obtained from <xref uid="system.fabric._code_package_activation_context.getApplicationName()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getApplicationName()</xref></p>
    - id: serviceName
      type: "26831127"
      description: <p>Name of service hosting the actor type. If this value is null then service name is constructed using the actorInterfaceType. </p>
    return:
      type: "62304784"
      description: <p>Service Fabric service Uri hosting the actor type. </p>
  exceptions:
  - type: 114cf0c6
    description: <p>Throws URISyntaxException </p>
  - type: 3c87bd19
    description: <p>When applicationName cannot be determined using <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>. </p>
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri(Class<?>,URI,String)
  id: getFabricServiceUri(Class<?>,URI,String)
  parent: microsoft.servicefabric.actors._actor_name_format
  href: microsoft.servicefabric.actors._actor_name_format.yml
  langs:
  - java
  name: getFabricServiceUri(Class<?> actorInterfaceType, URI applicationUri, String serviceName)
  nameWithType: ActorNameFormat.getFabricServiceUri(Class<?> actorInterfaceType, URI applicationUri, String serviceName)
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceUri(Class<?> actorInterfaceType, URI applicationUri, String serviceName)
  overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
    startLine: 138
  package: microsoft.servicefabric.actors
  summary: "<p>Gets service Uri which hosts the actor type in Service Fabric cluster.</p>\r\n<p>\r\n  <b>Remarks:</b> If applicationUri is passed as null or empty string, an attempt is made to get application name from <xref uid=\"system.fabric._code_package_activation_context\" data-throw-if-not-resolved=\"false\">system.fabric.CodePackageActivationContext</xref>. If the method still cannot determine application name, <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref> is thrown. </p>"
  syntax:
    content: public static URI getFabricServiceUri(Class<?> actorInterfaceType, URI applicationUri, String serviceName)
    parameters:
    - id: actorInterfaceType
      type: a19781f8
      description: <p>Type of the actor interface. </p>
    - id: applicationUri
      type: "62304784"
      description: <p>Service Fabric application Uri containing the actor service. If this value is null application name is obtained from <xref uid="system.fabric._code_package_activation_context.getApplicationName()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getApplicationName()</xref></p>
    - id: serviceName
      type: "26831127"
      description: <p>Name of service hosting the actor type. If this value is null then service name is constructed using the actorInterfaceType. </p>
    return:
      type: "62304784"
      description: <p>Service Fabric service Uri hosting the actor type. </p>
  exceptions:
  - type: 114cf0c6
    description: <p>Throws URISyntaxException </p>
  - type: 3c87bd19
    description: <p>When applicationUri cannot be determined using <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>. </p>
- uid: microsoft.servicefabric.actors._actor_name_format.getName(Class<?>)
  id: getName(Class<?>)
  parent: microsoft.servicefabric.actors._actor_name_format
  href: microsoft.servicefabric.actors._actor_name_format.yml
  langs:
  - java
  name: getName(Class<?> actorInterfaceType)
  nameWithType: ActorNameFormat.getName(Class<?> actorInterfaceType)
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getName(Class<?> actorInterfaceType)
  overload: microsoft.servicefabric.actors._actor_name_format.getName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
    startLine: 217
  package: microsoft.servicefabric.actors
  summary: "<p>Gets name of Actor from actorInterfaceType.</p>\r\n<p></p>"
  syntax:
    content: public static String getName(Class<?> actorInterfaceType)
    parameters:
    - id: actorInterfaceType
      type: a19781f8
      description: <p>Type of the actor interface. </p>
    return:
      type: "26831127"
      description: <p>Name of Actor. </p>
references:
- uid: a19781f8
  spec.java:
  - name: Class<?>
    fullName: Class<?>
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorConfigSectionName*
  name: getFabricServiceReplicatorConfigSectionName
  nameWithType: ActorNameFormat.getFabricServiceReplicatorConfigSectionName
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorConfigSectionName
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTransportSettingsSectionName*
  name: getFabricServiceTransportSettingsSectionName
  nameWithType: ActorNameFormat.getFabricServiceTransportSettingsSectionName
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceTransportSettingsSectionName
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_name_format.getConfigPackageName*
  name: getConfigPackageName
  nameWithType: ActorNameFormat.getConfigPackageName
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getConfigPackageName
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorEndpointName*
  name: getFabricServiceReplicatorEndpointName
  nameWithType: ActorNameFormat.getFabricServiceReplicatorEndpointName
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorEndpointName
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorSecurityConfigSectionName*
  name: getFabricServiceReplicatorSecurityConfigSectionName
  nameWithType: ActorNameFormat.getFabricServiceReplicatorSecurityConfigSectionName
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorSecurityConfigSectionName
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceEndpointName*
  name: getFabricServiceEndpointName
  nameWithType: ActorNameFormat.getFabricServiceEndpointName
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceEndpointName
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTypeName*
  name: getFabricServiceTypeName
  nameWithType: ActorNameFormat.getFabricServiceTypeName
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceTypeName
  package: microsoft.servicefabric.actors
- uid: 114cf0c6
  spec.java:
  - name: java.net.URISyntaxException
    fullName: java.net.URISyntaxException
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri*
  name: getFabricServiceUri
  nameWithType: ActorNameFormat.getFabricServiceUri
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceUri
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceName*
  name: getFabricServiceName
  nameWithType: ActorNameFormat.getFabricServiceName
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceName
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_name_format.getName*
  name: getName
  nameWithType: ActorNameFormat.getName
  fullName: microsoft.servicefabric.actors.ActorNameFormat.getName
  package: microsoft.servicefabric.actors
- uid: system.fabric._replicator_settings
  parent: system.fabric
  href: system.fabric._replicator_settings.yml
  name: ReplicatorSettings
  nameWithType: ReplicatorSettings
  fullName: system.fabric.ReplicatorSettings
  type: Class
  summary: <p>Allows a stateful replica to configure the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref> when creating it <xref uid="system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)" data-throw-if-not-resolved="false">system.fabric.StatefulServicePartition#createReplicator(system.fabric.StateProvider,system.fabric.ReplicatorSettings)</xref></p>
  syntax:
    content: public class ReplicatorSettings
- uid: system.fabric._code_package_activation_context.getApplicationName()
  parent: system.fabric._code_package_activation_context
  href: system.fabric._code_package_activation_context.yml
  name: getApplicationName()
  nameWithType: CodePackageActivationContext.getApplicationName()
  fullName: system.fabric.CodePackageActivationContext.getApplicationName()
  type: Method
  summary: >-
    <p>Gets the name of the application.</p>

    <p></p>
  syntax:
    content: public String getApplicationName()
    return:
      type: "26831127"
      description: <p>The name of the application. </p>
- uid: system.fabric._code_package_activation_context
  parent: system.fabric
  href: system.fabric._code_package_activation_context.yml
  name: CodePackageActivationContext
  nameWithType: CodePackageActivationContext
  fullName: system.fabric.CodePackageActivationContext
  type: Interface
  summary: <p>Represents activation context for the Service Fabric service. This is valid for fabric activated service only. </p>
  syntax:
    content: public interface CodePackageActivationContext
