### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus._message
  id: _message
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus._message.getBody()
  - com.microsoft.azure.servicebus._message.getContentType()
  - com.microsoft.azure.servicebus._message.getCorrelationId()
  - com.microsoft.azure.servicebus._message.getDeadLetterSource()
  - com.microsoft.azure.servicebus._message.getDeliveryCount()
  - com.microsoft.azure.servicebus._message.getEnqueuedTimeUtc()
  - com.microsoft.azure.servicebus._message.getExpiresAtUtc()
  - com.microsoft.azure.servicebus._message.getLabel()
  - com.microsoft.azure.servicebus._message.getLockedUntilUtc()
  - com.microsoft.azure.servicebus._message.getLockToken()
  - com.microsoft.azure.servicebus._message.getMessageId()
  - com.microsoft.azure.servicebus._message.getPartitionKey()
  - com.microsoft.azure.servicebus._message.getProperties()
  - com.microsoft.azure.servicebus._message.getReplyTo()
  - com.microsoft.azure.servicebus._message.getReplyToSessionId()
  - com.microsoft.azure.servicebus._message.getScheduledEnqueuedTimeUtc()
  - com.microsoft.azure.servicebus._message.getScheduledEnqueueTimeUtc()
  - com.microsoft.azure.servicebus._message.getSequenceNumber()
  - com.microsoft.azure.servicebus._message.getSessionId()
  - com.microsoft.azure.servicebus._message.getTimeToLive()
  - com.microsoft.azure.servicebus._message.getTo()
  - com.microsoft.azure.servicebus._message.Message()
  - com.microsoft.azure.servicebus._message.Message(byte [])
  - com.microsoft.azure.servicebus._message.Message(byte [],String)
  - com.microsoft.azure.servicebus._message.Message(String)
  - com.microsoft.azure.servicebus._message.Message(String,String)
  - com.microsoft.azure.servicebus._message.Message(String,byte [],String)
  - com.microsoft.azure.servicebus._message.Message(String,String,String)
  - com.microsoft.azure.servicebus._message.setBody(byte [])
  - com.microsoft.azure.servicebus._message.setContentType(String)
  - com.microsoft.azure.servicebus._message.setCorrelationId(String)
  - com.microsoft.azure.servicebus._message.setLabel(String)
  - com.microsoft.azure.servicebus._message.setLockedUntilUtc(Instant)
  - com.microsoft.azure.servicebus._message.setMessageId(String)
  - com.microsoft.azure.servicebus._message.setPartitionKey(String)
  - com.microsoft.azure.servicebus._message.setProperties(Map<String, String>)
  - com.microsoft.azure.servicebus._message.setReplyTo(String)
  - com.microsoft.azure.servicebus._message.setReplyToSessionId(String)
  - com.microsoft.azure.servicebus._message.setScheduledEnqueuedTimeUtc(Instant)
  - com.microsoft.azure.servicebus._message.setScheduledEnqueueTimeUtc(Instant)
  - com.microsoft.azure.servicebus._message.setSessionId(String)
  - com.microsoft.azure.servicebus._message.setTimeToLive(Duration)
  - com.microsoft.azure.servicebus._message.setTo(String)
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.servicebus.Message
  type: Class
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 18
  package: com.microsoft.azure.servicebus
  syntax:
    content: public class Message implements IMessage
  inheritance:
  - java.lang.Object
  - Serializable
- uid: com.microsoft.azure.servicebus._message.getBody()
  id: getBody()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getBody()
  nameWithType: Message.getBody()
  fullName: com.microsoft.azure.servicebus.Message.getBody()
  overload: com.microsoft.azure.servicebus._message.getBody*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 187
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the body of this message as a byte array. It is up to client applications to decode the bytes.</p>\r\n<p></p>"
  syntax:
    content: public byte [] getBody()
    return:
      type: ccd9418d
      description: <p>body of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getBody()
- uid: com.microsoft.azure.servicebus._message.getContentType()
  id: getContentType()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getContentType()
  nameWithType: Message.getContentType()
  fullName: com.microsoft.azure.servicebus.Message.getContentType()
  overload: com.microsoft.azure.servicebus._message.getContentType*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 135
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the content type of this message.</p>\r\n<p>Optionally describes the payload of the message, with a descriptor following the format of RFC2045, Section 5, for example \"application/json\".</p>\r\n<p></p>"
  syntax:
    content: public String getContentType()
    return:
      type: "26831127"
      description: <p>content type of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getContentType()
- uid: com.microsoft.azure.servicebus._message.getCorrelationId()
  id: getCorrelationId()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getCorrelationId()
  nameWithType: Message.getCorrelationId()
  fullName: com.microsoft.azure.servicebus.Message.getCorrelationId()
  overload: com.microsoft.azure.servicebus._message.getCorrelationId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 207
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets a correlation identifier.</p>\r\n<p>Allows an application to specify a context for the message for the purposes of correlation, for example reflecting the MessageId of a message that is being replied to.</p>\r\n<p></p>"
  syntax:
    content: public String getCorrelationId()
    return:
      type: "26831127"
      description: <p>correlation Id of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getCorrelationId()
- uid: com.microsoft.azure.servicebus._message.getDeadLetterSource()
  id: getDeadLetterSource()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getDeadLetterSource()
  nameWithType: Message.getDeadLetterSource()
  fullName: com.microsoft.azure.servicebus.Message.getDeadLetterSource()
  overload: com.microsoft.azure.servicebus._message.getDeadLetterSource*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 289
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the name of the queue or subscription that this message was enqueued on, before it was deadlettered.</p>\r\n<p>This value is only set in messages that have been dead-lettered and subsequently auto-forwarded from the dead-letter queue to another entity. Indicates the entity in which the message was dead-lettered. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public String getDeadLetterSource()
    return:
      type: "26831127"
      description: <p>dead letter source of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getDeadLetterSource()
- uid: com.microsoft.azure.servicebus._message.getDeliveryCount()
  id: getDeliveryCount()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getDeliveryCount()
  nameWithType: Message.getDeliveryCount()
  fullName: com.microsoft.azure.servicebus.Message.getDeliveryCount()
  overload: com.microsoft.azure.servicebus._message.getDeliveryCount*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 106
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the number of the times this message was delivered to clients.</p>\r\n<p>The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver. This property is read-only.</p>\r\n<p></p>"
  syntax: &o3
    content: public long getDeliveryCount()
    return:
      type: 0364520f
      description: <p>delivery count of this message. </p>
  overridden: com.microsoft.azure.servicebus._i_message.getDeliveryCount()
- uid: com.microsoft.azure.servicebus._message.getEnqueuedTimeUtc()
  id: getEnqueuedTimeUtc()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getEnqueuedTimeUtc()
  nameWithType: Message.getEnqueuedTimeUtc()
  fullName: com.microsoft.azure.servicebus.Message.getEnqueuedTimeUtc()
  overload: com.microsoft.azure.servicebus._message.getEnqueuedTimeUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 159
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the instant at which this message was enqueued in Azure Service Bus.</p>\r\n<p>The UTC instant at which the message has been accepted and stored in the entity. For scheduled messages, this reflects the time when the message was activated. This value can be used as an authoritative and neutral arrival time indicator when the receiver does not want to trust the sender's clock. This property is read-only.</p>\r\n<p></p>"
  syntax: &o1
    content: public Instant getEnqueuedTimeUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the message was enqueued in Azure Service Bus </p>
  overridden: com.microsoft.azure.servicebus._i_message.getEnqueuedTimeUtc()
- uid: com.microsoft.azure.servicebus._message.getExpiresAtUtc()
  id: getExpiresAtUtc()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getExpiresAtUtc()
  nameWithType: Message.getExpiresAtUtc()
  fullName: com.microsoft.azure.servicebus.Message.getExpiresAtUtc()
  overload: com.microsoft.azure.servicebus._message.getExpiresAtUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 145
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the instant at which this message will expire.</p>\r\n<p>The value is the UTC instant for when the message is scheduled for removal and will no longer available for retrieval from the entity due to expiration. Expiry is controlled by the <xref uid=\"com.microsoft.azure.servicebus._message.getTimeToLive()\" data-throw-if-not-resolved=\"false\">TimeToLive</xref> property. This property is computed from <xref uid=\"com.microsoft.azure.servicebus._message.getEnqueuedTimeUtc()\" data-throw-if-not-resolved=\"false\">EnqueuedTimeUtc</xref>+<xref uid=\"com.microsoft.azure.servicebus._message.getTimeToLive()\" data-throw-if-not-resolved=\"false\">TimeToLive</xref>.</p>\r\n<p></p>"
  syntax:
    content: public Instant getExpiresAtUtc()
    return:
      type: 328f8254
      description: <p>instant at which this message expires </p>
  overridden: com.microsoft.azure.servicebus._i_message.getExpiresAtUtc()
- uid: com.microsoft.azure.servicebus._message.getLabel()
  id: getLabel()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getLabel()
  nameWithType: Message.getLabel()
  fullName: com.microsoft.azure.servicebus.Message.getLabel()
  overload: com.microsoft.azure.servicebus._message.getLabel*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 237
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the application specific message label.</p>\r\n<p>This property enables the application to indicate the purpose of the message to the receiver in a standardized fashion, similar to an email subject line. The mapped AMQP property is \"subject\".</p>\r\n<p></p>"
  syntax:
    content: public String getLabel()
    return:
      type: "26831127"
      description: <p>Label property value of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getLabel()
- uid: com.microsoft.azure.servicebus._message.getLockedUntilUtc()
  id: getLockedUntilUtc()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getLockedUntilUtc()
  nameWithType: Message.getLockedUntilUtc()
  fullName: com.microsoft.azure.servicebus.Message.getLockedUntilUtc()
  overload: com.microsoft.azure.servicebus._message.getLockedUntilUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 150
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the instant at which the lock of this message expires.</p>\r\n<p>For messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC instant until which the message is held locked in the queue/subscription. When the lock expires, the <xref uid=\"com.microsoft.azure.servicebus._message.getDeliveryCount()\" data-throw-if-not-resolved=\"false\">DeliveryCount</xref> is incremented and the message is again available for retrieval. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public Instant getLockedUntilUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the lock of this message expires if the message is received using PEEKLOCK mode. Otherwise it returns null. </p>
  overridden: com.microsoft.azure.servicebus._i_message.getLockedUntilUtc()
- uid: com.microsoft.azure.servicebus._message.getLockToken()
  id: getLockToken()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getLockToken()
  nameWithType: Message.getLockToken()
  fullName: com.microsoft.azure.servicebus.Message.getLockToken()
  overload: com.microsoft.azure.servicebus._message.getLockToken*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 298
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the lock token for the current message.</p>\r\n<p>The lock token is a reference to the lock that is being held by the broker in PEEKLOCK mode. Locks are used to explicitly settle messages as explained in the <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement\">product documentation in more detail</a>. The token can also be used to pin the lock permanently through the <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/message-deferral\">Deferral API</a> and, with that, take the message out of the regular delivery state flow. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public UUID getLockToken()
    return:
      type: add9545a
      description: <p>lock token of this message. </p>
  overridden: com.microsoft.azure.servicebus._i_message.getLockToken()
- uid: com.microsoft.azure.servicebus._message.getMessageId()
  id: getMessageId()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getMessageId()
  nameWithType: Message.getMessageId()
  fullName: com.microsoft.azure.servicebus.Message.getMessageId()
  overload: com.microsoft.azure.servicebus._message.getMessageId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 115
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the Id of this message.</p>\r\n<p>The message identifier is an application-defined value that uniquely identifies the message and its payload. The identifier is a free-form string and can reflect a GUID or an identifier derived from the application context. If enabled, the <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/duplicate-detection\">duplicate detection</a> feature identifies and removes second and further submissions of messages with the same MessageId.</p>\r\n<p></p>"
  syntax:
    content: public String getMessageId()
    return:
      type: "26831127"
      description: <p>Id of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getMessageId()
- uid: com.microsoft.azure.servicebus._message.getPartitionKey()
  id: getPartitionKey()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getPartitionKey()
  nameWithType: Message.getPartitionKey()
  fullName: com.microsoft.azure.servicebus.Message.getPartitionKey()
  overload: com.microsoft.azure.servicebus._message.getPartitionKey*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 279
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the partition key for sending a message to a partitioned entity.</p>\r\n<p>For <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning\">partitioned entities</a>, setting this value enables assigning related messages to the same internal partition, so that submission sequence order is correctly recorded. The partition is chosen by a hash function over this value and cannot be chosen directly. For session-aware entities, the <xref uid=\"com.microsoft.azure.servicebus._message.getSessionId()\" data-throw-if-not-resolved=\"false\">SessionId </xref> property overrides this value.</p>\r\n<p></p>"
  syntax:
    content: public String getPartitionKey()
    return:
      type: "26831127"
      description: <p>partition key of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getPartitionKey()
- uid: com.microsoft.azure.servicebus._message.getProperties()
  id: getProperties()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getProperties()
  nameWithType: Message.getProperties()
  fullName: com.microsoft.azure.servicebus.Message.getProperties()
  overload: com.microsoft.azure.servicebus._message.getProperties*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 197
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the map of user application properties of this message. Client applications can set user properties (headers) on the message using this map.</p>\r\n<p></p>"
  syntax:
    content: public Map<String, String> getProperties()
    return:
      type: 689c8cb5
      description: <p>the map of user application properties of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getProperties()
- uid: com.microsoft.azure.servicebus._message.getReplyTo()
  id: getReplyTo()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getReplyTo()
  nameWithType: Message.getReplyTo()
  fullName: com.microsoft.azure.servicebus.Message.getReplyTo()
  overload: com.microsoft.azure.servicebus._message.getReplyTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 227
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the address of an entity to send replies to.</p>\r\n<p>This optional and application-defined value is a standard way to express a reply path to the receiver of the message. When a sender expects a reply, it sets the value to the absolute or relative path of the queue or topic it expects the reply to be sent to.</p>\r\n<p></p>"
  syntax: &o4
    content: public String getReplyTo()
    return:
      type: "26831127"
      description: <p>ReplyTo property value of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getReplyTo()
- uid: com.microsoft.azure.servicebus._message.getReplyToSessionId()
  id: getReplyToSessionId()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getReplyToSessionId()
  nameWithType: Message.getReplyToSessionId()
  fullName: com.microsoft.azure.servicebus.Message.getReplyToSessionId()
  overload: com.microsoft.azure.servicebus._message.getReplyToSessionId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 247
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets or sets a session identifier augmenting the <xref uid=\"com.microsoft.azure.servicebus._message.getReplyTo()\" data-throw-if-not-resolved=\"false\">ReplyTo</xref> address.</p>\r\n<p>This value augments the ReplyTo information and specifies which SessionId should be set for the reply when sent to the reply entity.</p>\r\n<p></p>"
  syntax:
    content: public String getReplyToSessionId()
    return:
      type: "26831127"
      description: <p>ReplyToSessionId property value of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getReplyToSessionId()
- uid: com.microsoft.azure.servicebus._message.getScheduledEnqueuedTimeUtc()
  id: getScheduledEnqueuedTimeUtc()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getScheduledEnqueuedTimeUtc()
  nameWithType: Message.getScheduledEnqueuedTimeUtc()
  fullName: com.microsoft.azure.servicebus.Message.getScheduledEnqueuedTimeUtc()
  overload: com.microsoft.azure.servicebus._message.getScheduledEnqueuedTimeUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 258
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the scheduled enqueue time of this message.</p>\r\n<p>This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000101\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Replaced by <xref uid=\"com.microsoft.azure.servicebus._message.getScheduledEnqueueTimeUtc()\" data-throw-if-not-resolved=\"false\">getScheduledEnqueueTimeUtc()</xref></p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public Instant getScheduledEnqueuedTimeUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the message will be enqueued in Azure Service Bus </p>
  overridden: com.microsoft.azure.servicebus._i_message.getScheduledEnqueuedTimeUtc()
- uid: com.microsoft.azure.servicebus._message.getScheduledEnqueueTimeUtc()
  id: getScheduledEnqueueTimeUtc()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getScheduledEnqueueTimeUtc()
  nameWithType: Message.getScheduledEnqueueTimeUtc()
  fullName: com.microsoft.azure.servicebus.Message.getScheduledEnqueueTimeUtc()
  overload: com.microsoft.azure.servicebus._message.getScheduledEnqueueTimeUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 269
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the scheduled enqueue time of this message.</p>\r\n<p>This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state.</p>\r\n<p></p>"
  syntax: &o5
    content: public Instant getScheduledEnqueueTimeUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the message will be enqueued in Azure Service Bus </p>
  overridden: com.microsoft.azure.servicebus._i_message.getScheduledEnqueueTimeUtc()
- uid: com.microsoft.azure.servicebus._message.getSequenceNumber()
  id: getSequenceNumber()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getSequenceNumber()
  nameWithType: Message.getSequenceNumber()
  fullName: com.microsoft.azure.servicebus.Message.getSequenceNumber()
  overload: com.microsoft.azure.servicebus._message.getSequenceNumber*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 168
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the unique number assigned to a message by Service Bus.</p>\r\n<p>The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier. For partitioned entities, the topmost 16 bits reflect the partition identifier. Sequence numbers monotonically increase and are gapless. They roll over to 0 when the 48-64 bit range is exhausted. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public long getSequenceNumber()
    return:
      type: 0364520f
      description: <p>sequence number of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getSequenceNumber()
- uid: com.microsoft.azure.servicebus._message.getSessionId()
  id: getSessionId()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getSessionId()
  nameWithType: Message.getSessionId()
  fullName: com.microsoft.azure.servicebus.Message.getSessionId()
  overload: com.microsoft.azure.servicebus._message.getSessionId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 177
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the session identifier for a session-aware entity.</p>\r\n<p>For session-aware entities, this application-defined value specifies the session affiliation of the message. Messages with the same session identifier are subject to summary locking and enable exact in-order processing and demultiplexing. For session-unaware entities, this value is ignored.</p>\r\n<p></p>"
  syntax: &o7
    content: public String getSessionId()
    return:
      type: "26831127"
      description: <p>session id of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getSessionId()
- uid: com.microsoft.azure.servicebus._message.getTimeToLive()
  id: getTimeToLive()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getTimeToLive()
  nameWithType: Message.getTimeToLive()
  fullName: com.microsoft.azure.servicebus.Message.getTimeToLive()
  overload: com.microsoft.azure.servicebus._message.getTimeToLive*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 125
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the duration before this message expires.</p>\r\n<p>This value is the relative duration after which the message expires, starting from the instant the message has been accepted and stored by the broker, as captured in <xref uid=\"com.microsoft.azure.servicebus._message.getEnqueuedTimeUtc()\" data-throw-if-not-resolved=\"false\">getEnqueuedTimeUtc</xref>. When not set explicitly, the assumed value is the DefaultTimeToLive set for the respective queue or topic. A message-level TimeToLive value cannot be longer than the entity's DefaultTimeToLive setting and it is silently adjusted if it does.</p>\r\n<p></p>"
  syntax: &o2
    content: public Duration getTimeToLive()
    return:
      type: e02a2de0
      description: <p>Time to Live duration of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getTimeToLive()
- uid: com.microsoft.azure.servicebus._message.getTo()
  id: getTo()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: getTo()
  nameWithType: Message.getTo()
  fullName: com.microsoft.azure.servicebus.Message.getTo()
  overload: com.microsoft.azure.servicebus._message.getTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 217
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the \"to\" address.</p>\r\n<p></p>"
  syntax:
    content: public String getTo()
    return:
      type: "26831127"
      description: <p>To property value of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.getTo()
- uid: com.microsoft.azure.servicebus._message.Message()
  id: Message()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: Message()
  nameWithType: Message.Message()
  fullName: com.microsoft.azure.servicebus.Message.Message()
  overload: com.microsoft.azure.servicebus._message.Message*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 67
  package: com.microsoft.azure.servicebus
  syntax:
    content: public Message()
- uid: com.microsoft.azure.servicebus._message.Message(byte [])
  id: Message(byte [])
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: Message(byte[] content)
  nameWithType: Message.Message(byte[] content)
  fullName: com.microsoft.azure.servicebus.Message.Message(byte[] content)
  overload: com.microsoft.azure.servicebus._message.Message*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 77
  package: com.microsoft.azure.servicebus
  syntax:
    content: public Message(byte[] content)
    parameters:
    - id: content
      type: ccd9418d
- uid: com.microsoft.azure.servicebus._message.Message(byte [],String)
  id: Message(byte [],String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: Message(byte[] content, String contentType)
  nameWithType: Message.Message(byte[] content, String contentType)
  fullName: com.microsoft.azure.servicebus.Message.Message(byte[] content, String contentType)
  overload: com.microsoft.azure.servicebus._message.Message*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 87
  package: com.microsoft.azure.servicebus
  syntax:
    content: public Message(byte[] content, String contentType)
    parameters:
    - id: content
      type: ccd9418d
    - id: contentType
      type: "26831127"
- uid: com.microsoft.azure.servicebus._message.Message(String)
  id: Message(String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: Message(String content)
  nameWithType: Message.Message(String content)
  fullName: com.microsoft.azure.servicebus.Message.Message(String content)
  overload: com.microsoft.azure.servicebus._message.Message*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 72
  package: com.microsoft.azure.servicebus
  syntax:
    content: public Message(String content)
    parameters:
    - id: content
      type: "26831127"
- uid: com.microsoft.azure.servicebus._message.Message(String,String)
  id: Message(String,String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: Message(String content, String contentType)
  nameWithType: Message.Message(String content, String contentType)
  fullName: com.microsoft.azure.servicebus.Message.Message(String content, String contentType)
  overload: com.microsoft.azure.servicebus._message.Message*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 82
  package: com.microsoft.azure.servicebus
  syntax:
    content: public Message(String content, String contentType)
    parameters:
    - id: content
      type: "26831127"
    - id: contentType
      type: "26831127"
- uid: com.microsoft.azure.servicebus._message.Message(String,byte [],String)
  id: Message(String,byte [],String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: Message(String messageId, byte[] content, String contentType)
  nameWithType: Message.Message(String messageId, byte[] content, String contentType)
  fullName: com.microsoft.azure.servicebus.Message.Message(String messageId, byte[] content, String contentType)
  overload: com.microsoft.azure.servicebus._message.Message*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 97
  package: com.microsoft.azure.servicebus
  syntax:
    content: public Message(String messageId, byte[] content, String contentType)
    parameters:
    - id: messageId
      type: "26831127"
    - id: content
      type: ccd9418d
    - id: contentType
      type: "26831127"
- uid: com.microsoft.azure.servicebus._message.Message(String,String,String)
  id: Message(String,String,String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: Message(String messageId, String content, String contentType)
  nameWithType: Message.Message(String messageId, String content, String contentType)
  fullName: com.microsoft.azure.servicebus.Message.Message(String messageId, String content, String contentType)
  overload: com.microsoft.azure.servicebus._message.Message*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 92
  package: com.microsoft.azure.servicebus
  syntax:
    content: public Message(String messageId, String content, String contentType)
    parameters:
    - id: messageId
      type: "26831127"
    - id: content
      type: "26831127"
    - id: contentType
      type: "26831127"
- uid: com.microsoft.azure.servicebus._message.setBody(byte [])
  id: setBody(byte [])
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setBody(byte[] content)
  nameWithType: Message.setBody(byte[] content)
  fullName: com.microsoft.azure.servicebus.Message.setBody(byte[] content)
  overload: com.microsoft.azure.servicebus._message.setBody*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 192
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the body of this message as a byte array.</p>\r\n<p></p>"
  syntax:
    content: public void setBody(byte[] content)
    parameters:
    - id: body
      type: ccd9418d
      description: <p>body of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.setBody(byte [])
- uid: com.microsoft.azure.servicebus._message.setContentType(String)
  id: setContentType(String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setContentType(String contentType)
  nameWithType: Message.setContentType(String contentType)
  fullName: com.microsoft.azure.servicebus.Message.setContentType(String contentType)
  overload: com.microsoft.azure.servicebus._message.setContentType*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 140
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the content type of this message.</p>\r\n<p></p>"
  syntax:
    content: public void setContentType(String contentType)
    parameters:
    - id: contentType
      type: "26831127"
      description: <p>content type of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.setContentType(String)
- uid: com.microsoft.azure.servicebus._message.setCorrelationId(String)
  id: setCorrelationId(String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setCorrelationId(String correlationId)
  nameWithType: Message.setCorrelationId(String correlationId)
  fullName: com.microsoft.azure.servicebus.Message.setCorrelationId(String correlationId)
  overload: com.microsoft.azure.servicebus._message.setCorrelationId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 212
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets a correlation identifier.</p>\r\n<p></p>"
  syntax:
    content: public void setCorrelationId(String correlationId)
    parameters:
    - id: correlationId
      type: "26831127"
      description: <p>correlation Id of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.setCorrelationId(String)
- uid: com.microsoft.azure.servicebus._message.setLabel(String)
  id: setLabel(String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setLabel(String label)
  nameWithType: Message.setLabel(String label)
  fullName: com.microsoft.azure.servicebus.Message.setLabel(String label)
  overload: com.microsoft.azure.servicebus._message.setLabel*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 242
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets an application specific message label.</p>\r\n<p></p>"
  syntax:
    content: public void setLabel(String label)
    parameters:
    - id: label
      type: "26831127"
      description: <p>Label property value of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.setLabel(String)
- uid: com.microsoft.azure.servicebus._message.setLockedUntilUtc(Instant)
  id: setLockedUntilUtc(Instant)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setLockedUntilUtc(Instant lockedUntilUtc)
  nameWithType: Message.setLockedUntilUtc(Instant lockedUntilUtc)
  fullName: com.microsoft.azure.servicebus.Message.setLockedUntilUtc(Instant lockedUntilUtc)
  overload: com.microsoft.azure.servicebus._message.setLockedUntilUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 154
  package: com.microsoft.azure.servicebus
  syntax:
    content: public void setLockedUntilUtc(Instant lockedUntilUtc)
    parameters:
    - id: lockedUntilUtc
      type: 328f8254
- uid: com.microsoft.azure.servicebus._message.setMessageId(String)
  id: setMessageId(String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setMessageId(String messageId)
  nameWithType: Message.setMessageId(String messageId)
  fullName: com.microsoft.azure.servicebus.Message.setMessageId(String messageId)
  overload: com.microsoft.azure.servicebus._message.setMessageId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 120
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the Id of this message. </p>"
  syntax:
    content: public void setMessageId(String messageId)
    parameters:
    - id: messageId
      type: "26831127"
      description: <p>Id of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.setMessageId(String)
- uid: com.microsoft.azure.servicebus._message.setPartitionKey(String)
  id: setPartitionKey(String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setPartitionKey(String partitionKey)
  nameWithType: Message.setPartitionKey(String partitionKey)
  fullName: com.microsoft.azure.servicebus.Message.setPartitionKey(String partitionKey)
  overload: com.microsoft.azure.servicebus._message.setPartitionKey*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 284
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets a partition key for sending a message to a partitioned entity</p>\r\n<p></p>"
  syntax:
    content: public void setPartitionKey(String partitionKey)
    parameters:
    - id: partitionKey
      type: "26831127"
      description: <p>partition key of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.setPartitionKey(String)
- uid: com.microsoft.azure.servicebus._message.setProperties(Map<String, String>)
  id: setProperties(Map<String, String>)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setProperties(Map<String, String> properties)
  nameWithType: Message.setProperties(Map<String, String> properties)
  fullName: com.microsoft.azure.servicebus.Message.setProperties(Map<String, String> properties)
  overload: com.microsoft.azure.servicebus._message.setProperties*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 202
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the map of user application properties of this message. Client applications can set user properties on the message using this map.</p>\r\n<p></p>"
  syntax:
    content: public void setProperties(Map<String, String> properties)
    parameters:
    - id: properties
      type: 689c8cb5
      description: <p>the map of user application properties of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.setProperties(Map<String, String>)
- uid: com.microsoft.azure.servicebus._message.setReplyTo(String)
  id: setReplyTo(String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setReplyTo(String replyTo)
  nameWithType: Message.setReplyTo(String replyTo)
  fullName: com.microsoft.azure.servicebus.Message.setReplyTo(String replyTo)
  overload: com.microsoft.azure.servicebus._message.setReplyTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 232
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the address of an entity to send replies to.</p>\r\n<p></p>"
  syntax:
    content: public void setReplyTo(String replyTo)
    parameters:
    - id: replyTo
      type: "26831127"
      description: <p>ReplyTo property value of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.setReplyTo(String)
- uid: com.microsoft.azure.servicebus._message.setReplyToSessionId(String)
  id: setReplyToSessionId(String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setReplyToSessionId(String replyToSessionId)
  nameWithType: Message.setReplyToSessionId(String replyToSessionId)
  fullName: com.microsoft.azure.servicebus.Message.setReplyToSessionId(String replyToSessionId)
  overload: com.microsoft.azure.servicebus._message.setReplyToSessionId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 252
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets or sets a session identifier augmenting the <xref uid=\"com.microsoft.azure.servicebus._message.getReplyTo()\" data-throw-if-not-resolved=\"false\">ReplyTo</xref> address.</p>\r\n<p></p>"
  syntax:
    content: public void setReplyToSessionId(String replyToSessionId)
    parameters:
    - id: replyToSessionId
      type: "26831127"
      description: <p>ReplyToSessionId property value of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.setReplyToSessionId(String)
- uid: com.microsoft.azure.servicebus._message.setScheduledEnqueuedTimeUtc(Instant)
  id: setScheduledEnqueuedTimeUtc(Instant)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
  nameWithType: Message.setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.Message.setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
  overload: com.microsoft.azure.servicebus._message.setScheduledEnqueuedTimeUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 264
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the scheduled enqueue time of this message.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000102\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Replaced by <xref uid=\"com.microsoft.azure.servicebus._message.setScheduledEnqueueTimeUtc(Instant)\" data-throw-if-not-resolved=\"false\">setScheduledEnqueueTimeUtc(Instant)</xref></p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public void setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>the instant at which this message should be enqueued in Azure Service Bus </p>
  overridden: com.microsoft.azure.servicebus._i_message.setScheduledEnqueuedTimeUtc(Instant)
- uid: com.microsoft.azure.servicebus._message.setScheduledEnqueueTimeUtc(Instant)
  id: setScheduledEnqueueTimeUtc(Instant)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  nameWithType: Message.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.Message.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  overload: com.microsoft.azure.servicebus._message.setScheduledEnqueueTimeUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 274
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the scheduled enqueue time of this message.</p>\r\n<p></p>"
  syntax: &o6
    content: public void setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>the instant at which this message should be enqueued in Azure Service Bus </p>
  overridden: com.microsoft.azure.servicebus._i_message.setScheduledEnqueueTimeUtc(Instant)
- uid: com.microsoft.azure.servicebus._message.setSessionId(String)
  id: setSessionId(String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setSessionId(String sessionId)
  nameWithType: Message.setSessionId(String sessionId)
  fullName: com.microsoft.azure.servicebus.Message.setSessionId(String sessionId)
  overload: com.microsoft.azure.servicebus._message.setSessionId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 182
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the session identifier for a session-aware entity.</p>\r\n<p></p>"
  syntax:
    content: public void setSessionId(String sessionId)
    parameters:
    - id: sessionId
      type: "26831127"
      description: <p>session id of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.setSessionId(String)
- uid: com.microsoft.azure.servicebus._message.setTimeToLive(Duration)
  id: setTimeToLive(Duration)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setTimeToLive(Duration timeToLive)
  nameWithType: Message.setTimeToLive(Duration timeToLive)
  fullName: com.microsoft.azure.servicebus.Message.setTimeToLive(Duration timeToLive)
  overload: com.microsoft.azure.servicebus._message.setTimeToLive*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 130
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the duration of time before this message expires.</p>\r\n<p></p>"
  syntax:
    content: public void setTimeToLive(Duration timeToLive)
    parameters:
    - id: timeToLive
      type: e02a2de0
      description: <p>Time to Live duration of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.setTimeToLive(Duration)
- uid: com.microsoft.azure.servicebus._message.setTo(String)
  id: setTo(String)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  langs:
  - java
  name: setTo(String to)
  nameWithType: Message.setTo(String to)
  fullName: com.microsoft.azure.servicebus.Message.setTo(String to)
  overload: com.microsoft.azure.servicebus._message.setTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/Message.java
    startLine: 222
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the \"to\" address.</p>\r\n<p>This property is reserved for future use in routing scenarios and presently ignored by the broker itself. Applications can use this value in rule-driven <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding\">auto-forward chaining</a> scenarios to indicate the intended logical destination of the message.</p>\r\n<p></p>"
  syntax:
    content: public void setTo(String to)
    parameters:
    - id: to
      type: "26831127"
      description: <p>To property value of this message </p>
  overridden: com.microsoft.azure.servicebus._i_message.setTo(String)
references:
- uid: com.microsoft.azure.servicebus._message.Message*
  name: Message
  nameWithType: Message.Message
  fullName: com.microsoft.azure.servicebus.Message.Message
  package: com.microsoft.azure.servicebus
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: com.microsoft.azure.servicebus._message.getDeliveryCount*
  name: getDeliveryCount
  nameWithType: Message.getDeliveryCount
  fullName: com.microsoft.azure.servicebus.Message.getDeliveryCount
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getMessageId*
  name: getMessageId
  nameWithType: Message.getMessageId
  fullName: com.microsoft.azure.servicebus.Message.getMessageId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setMessageId*
  name: setMessageId
  nameWithType: Message.setMessageId
  fullName: com.microsoft.azure.servicebus.Message.setMessageId
  package: com.microsoft.azure.servicebus
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: com.microsoft.azure.servicebus._message.getTimeToLive*
  name: getTimeToLive
  nameWithType: Message.getTimeToLive
  fullName: com.microsoft.azure.servicebus.Message.getTimeToLive
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setTimeToLive*
  name: setTimeToLive
  nameWithType: Message.setTimeToLive
  fullName: com.microsoft.azure.servicebus.Message.setTimeToLive
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getContentType*
  name: getContentType
  nameWithType: Message.getContentType
  fullName: com.microsoft.azure.servicebus.Message.getContentType
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setContentType*
  name: setContentType
  nameWithType: Message.setContentType
  fullName: com.microsoft.azure.servicebus.Message.setContentType
  package: com.microsoft.azure.servicebus
- uid: 328f8254
  spec.java:
  - name: Instant
    fullName: Instant
- uid: com.microsoft.azure.servicebus._message.getExpiresAtUtc*
  name: getExpiresAtUtc
  nameWithType: Message.getExpiresAtUtc
  fullName: com.microsoft.azure.servicebus.Message.getExpiresAtUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getLockedUntilUtc*
  name: getLockedUntilUtc
  nameWithType: Message.getLockedUntilUtc
  fullName: com.microsoft.azure.servicebus.Message.getLockedUntilUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setLockedUntilUtc*
  name: setLockedUntilUtc
  nameWithType: Message.setLockedUntilUtc
  fullName: com.microsoft.azure.servicebus.Message.setLockedUntilUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getEnqueuedTimeUtc*
  name: getEnqueuedTimeUtc
  nameWithType: Message.getEnqueuedTimeUtc
  fullName: com.microsoft.azure.servicebus.Message.getEnqueuedTimeUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getSequenceNumber*
  name: getSequenceNumber
  nameWithType: Message.getSequenceNumber
  fullName: com.microsoft.azure.servicebus.Message.getSequenceNumber
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getSessionId*
  name: getSessionId
  nameWithType: Message.getSessionId
  fullName: com.microsoft.azure.servicebus.Message.getSessionId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setSessionId*
  name: setSessionId
  nameWithType: Message.setSessionId
  fullName: com.microsoft.azure.servicebus.Message.setSessionId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getBody*
  name: getBody
  nameWithType: Message.getBody
  fullName: com.microsoft.azure.servicebus.Message.getBody
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setBody*
  name: setBody
  nameWithType: Message.setBody
  fullName: com.microsoft.azure.servicebus.Message.setBody
  package: com.microsoft.azure.servicebus
- uid: 689c8cb5
  spec.java:
  - name: Map<String, String>
    fullName: Map<String, String>
- uid: com.microsoft.azure.servicebus._message.getProperties*
  name: getProperties
  nameWithType: Message.getProperties
  fullName: com.microsoft.azure.servicebus.Message.getProperties
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setProperties*
  name: setProperties
  nameWithType: Message.setProperties
  fullName: com.microsoft.azure.servicebus.Message.setProperties
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getCorrelationId*
  name: getCorrelationId
  nameWithType: Message.getCorrelationId
  fullName: com.microsoft.azure.servicebus.Message.getCorrelationId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setCorrelationId*
  name: setCorrelationId
  nameWithType: Message.setCorrelationId
  fullName: com.microsoft.azure.servicebus.Message.setCorrelationId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getTo*
  name: getTo
  nameWithType: Message.getTo
  fullName: com.microsoft.azure.servicebus.Message.getTo
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setTo*
  name: setTo
  nameWithType: Message.setTo
  fullName: com.microsoft.azure.servicebus.Message.setTo
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getReplyTo*
  name: getReplyTo
  nameWithType: Message.getReplyTo
  fullName: com.microsoft.azure.servicebus.Message.getReplyTo
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setReplyTo*
  name: setReplyTo
  nameWithType: Message.setReplyTo
  fullName: com.microsoft.azure.servicebus.Message.setReplyTo
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getLabel*
  name: getLabel
  nameWithType: Message.getLabel
  fullName: com.microsoft.azure.servicebus.Message.getLabel
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setLabel*
  name: setLabel
  nameWithType: Message.setLabel
  fullName: com.microsoft.azure.servicebus.Message.setLabel
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getReplyToSessionId*
  name: getReplyToSessionId
  nameWithType: Message.getReplyToSessionId
  fullName: com.microsoft.azure.servicebus.Message.getReplyToSessionId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setReplyToSessionId*
  name: setReplyToSessionId
  nameWithType: Message.setReplyToSessionId
  fullName: com.microsoft.azure.servicebus.Message.setReplyToSessionId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getScheduledEnqueuedTimeUtc*
  name: getScheduledEnqueuedTimeUtc
  nameWithType: Message.getScheduledEnqueuedTimeUtc
  fullName: com.microsoft.azure.servicebus.Message.getScheduledEnqueuedTimeUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setScheduledEnqueuedTimeUtc*
  name: setScheduledEnqueuedTimeUtc
  nameWithType: Message.setScheduledEnqueuedTimeUtc
  fullName: com.microsoft.azure.servicebus.Message.setScheduledEnqueuedTimeUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getScheduledEnqueueTimeUtc*
  name: getScheduledEnqueueTimeUtc
  nameWithType: Message.getScheduledEnqueueTimeUtc
  fullName: com.microsoft.azure.servicebus.Message.getScheduledEnqueueTimeUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setScheduledEnqueueTimeUtc*
  name: setScheduledEnqueueTimeUtc
  nameWithType: Message.setScheduledEnqueueTimeUtc
  fullName: com.microsoft.azure.servicebus.Message.setScheduledEnqueueTimeUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getPartitionKey*
  name: getPartitionKey
  nameWithType: Message.getPartitionKey
  fullName: com.microsoft.azure.servicebus.Message.getPartitionKey
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.setPartitionKey*
  name: setPartitionKey
  nameWithType: Message.setPartitionKey
  fullName: com.microsoft.azure.servicebus.Message.setPartitionKey
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._message.getDeadLetterSource*
  name: getDeadLetterSource
  nameWithType: Message.getDeadLetterSource
  fullName: com.microsoft.azure.servicebus.Message.getDeadLetterSource
  package: com.microsoft.azure.servicebus
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: com.microsoft.azure.servicebus._message.getLockToken*
  name: getLockToken
  nameWithType: Message.getLockToken
  fullName: com.microsoft.azure.servicebus.Message.getLockToken
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._i_message
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._i_message.yml
  name: IMessage
  nameWithType: IMessage
  fullName: com.microsoft.azure.servicebus.IMessage
  type: Interface
  summary: >-
    <p>Represents the message that is exchanged between Azure Service Bus and its clients.</p>

    <p></p>
  syntax:
    content: public interface IMessage
- uid: com.microsoft.azure.servicebus._i_message.getDeliveryCount()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getDeliveryCount()
  nameWithType: IMessage.getDeliveryCount()
  fullName: com.microsoft.azure.servicebus.IMessage.getDeliveryCount()
  type: Method
  summary: >-
    <p>Gets the number of the times this message was delivered to clients.</p>

    <p>The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver. This property is read-only.</p>

    <p></p>
  syntax:
    content: public long getDeliveryCount()
    return:
      type: 0364520f
      description: <p>delivery count of this message. </p>
- uid: com.microsoft.azure.servicebus._i_message.getMessageId()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getMessageId()
  nameWithType: IMessage.getMessageId()
  fullName: com.microsoft.azure.servicebus.IMessage.getMessageId()
  type: Method
  summary: >-
    <p>Gets the Id of this message.</p>

    <p>The message identifier is an application-defined value that uniquely identifies the message and its payload. The identifier is a free-form string and can reflect a GUID or an identifier derived from the application context. If enabled, the <a href="https://docs.microsoft.com/azure/service-bus-messaging/duplicate-detection">duplicate detection</a> feature identifies and removes second and further submissions of messages with the same MessageId.</p>

    <p></p>
  syntax:
    content: public String getMessageId()
    return:
      type: "26831127"
      description: <p>Id of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.setMessageId(String)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setMessageId(String messageId)
  nameWithType: IMessage.setMessageId(String messageId)
  fullName: com.microsoft.azure.servicebus.IMessage.setMessageId(String messageId)
  type: Method
  summary: <p>Sets the Id of this message. </p>
  syntax:
    content: public void setMessageId(String messageId)
    parameters:
    - id: messageId
      type: "26831127"
      description: <p>Id of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getTimeToLive()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getTimeToLive()
  nameWithType: IMessage.getTimeToLive()
  fullName: com.microsoft.azure.servicebus.IMessage.getTimeToLive()
  type: Method
  summary: >-
    <p>Gets the duration before this message expires.</p>

    <p>This value is the relative duration after which the message expires, starting from the instant the message has been accepted and stored by the broker, as captured in <xref uid="com.microsoft.azure.servicebus._i_message.getEnqueuedTimeUtc()" data-throw-if-not-resolved="false">getEnqueuedTimeUtc</xref>. When not set explicitly, the assumed value is the DefaultTimeToLive set for the respective queue or topic. A message-level TimeToLive value cannot be longer than the entity's DefaultTimeToLive setting and it is silently adjusted if it does.</p>

    <p></p>
  syntax:
    content: public Duration getTimeToLive()
    return:
      type: e02a2de0
      description: <p>Time to Live duration of this message </p>
- uid: com.microsoft.azure.servicebus._message.getEnqueuedTimeUtc()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  name: getEnqueuedTimeUtc()
  nameWithType: Message.getEnqueuedTimeUtc()
  fullName: com.microsoft.azure.servicebus.Message.getEnqueuedTimeUtc()
  type: Method
  summary: >-
    <p>Gets the instant at which this message was enqueued in Azure Service Bus.</p>

    <p>The UTC instant at which the message has been accepted and stored in the entity. For scheduled messages, this reflects the time when the message was activated. This value can be used as an authoritative and neutral arrival time indicator when the receiver does not want to trust the sender's clock. This property is read-only.</p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.servicebus._i_message.setTimeToLive(Duration)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setTimeToLive(Duration timeToLive)
  nameWithType: IMessage.setTimeToLive(Duration timeToLive)
  fullName: com.microsoft.azure.servicebus.IMessage.setTimeToLive(Duration timeToLive)
  type: Method
  summary: >-
    <p>Sets the duration of time before this message expires.</p>

    <p></p>
  syntax:
    content: public void setTimeToLive(Duration timeToLive)
    parameters:
    - id: timeToLive
      type: e02a2de0
      description: <p>Time to Live duration of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getContentType()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getContentType()
  nameWithType: IMessage.getContentType()
  fullName: com.microsoft.azure.servicebus.IMessage.getContentType()
  type: Method
  summary: >-
    <p>Gets the content type of this message.</p>

    <p>Optionally describes the payload of the message, with a descriptor following the format of RFC2045, Section 5, for example "application/json".</p>

    <p></p>
  syntax:
    content: public String getContentType()
    return:
      type: "26831127"
      description: <p>content type of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.setContentType(String)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setContentType(String contentType)
  nameWithType: IMessage.setContentType(String contentType)
  fullName: com.microsoft.azure.servicebus.IMessage.setContentType(String contentType)
  type: Method
  summary: >-
    <p>Sets the content type of this message.</p>

    <p></p>
  syntax:
    content: public void setContentType(String contentType)
    parameters:
    - id: contentType
      type: "26831127"
      description: <p>content type of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getExpiresAtUtc()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getExpiresAtUtc()
  nameWithType: IMessage.getExpiresAtUtc()
  fullName: com.microsoft.azure.servicebus.IMessage.getExpiresAtUtc()
  type: Method
  summary: >-
    <p>Gets the instant at which this message will expire.</p>

    <p>The value is the UTC instant for when the message is scheduled for removal and will no longer available for retrieval from the entity due to expiration. Expiry is controlled by the <xref uid="com.microsoft.azure.servicebus._i_message.getTimeToLive()" data-throw-if-not-resolved="false">TimeToLive</xref> property. This property is computed from <xref uid="com.microsoft.azure.servicebus._i_message.getEnqueuedTimeUtc()" data-throw-if-not-resolved="false">EnqueuedTimeUtc</xref>+<xref uid="com.microsoft.azure.servicebus._i_message.getTimeToLive()" data-throw-if-not-resolved="false">TimeToLive</xref>.</p>

    <p></p>
  syntax:
    content: public Instant getExpiresAtUtc()
    return:
      type: 328f8254
      description: <p>instant at which this message expires </p>
- uid: com.microsoft.azure.servicebus._message.getTimeToLive()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  name: getTimeToLive()
  nameWithType: Message.getTimeToLive()
  fullName: com.microsoft.azure.servicebus.Message.getTimeToLive()
  type: Method
  summary: >-
    <p>Gets the duration before this message expires.</p>

    <p>This value is the relative duration after which the message expires, starting from the instant the message has been accepted and stored by the broker, as captured in <xref uid="com.microsoft.azure.servicebus._message.getEnqueuedTimeUtc()" data-throw-if-not-resolved="false">getEnqueuedTimeUtc</xref>. When not set explicitly, the assumed value is the DefaultTimeToLive set for the respective queue or topic. A message-level TimeToLive value cannot be longer than the entity's DefaultTimeToLive setting and it is silently adjusted if it does.</p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.servicebus._i_message.getLockedUntilUtc()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getLockedUntilUtc()
  nameWithType: IMessage.getLockedUntilUtc()
  fullName: com.microsoft.azure.servicebus.IMessage.getLockedUntilUtc()
  type: Method
  summary: >-
    <p>Gets the instant at which the lock of this message expires.</p>

    <p>For messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC instant until which the message is held locked in the queue/subscription. When the lock expires, the <xref uid="com.microsoft.azure.servicebus._i_message.getDeliveryCount()" data-throw-if-not-resolved="false">DeliveryCount</xref> is incremented and the message is again available for retrieval. This property is read-only.</p>

    <p></p>
  syntax:
    content: public Instant getLockedUntilUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the lock of this message expires if the message is received using PEEKLOCK mode. Otherwise it returns null. </p>
- uid: com.microsoft.azure.servicebus._message.getDeliveryCount()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  name: getDeliveryCount()
  nameWithType: Message.getDeliveryCount()
  fullName: com.microsoft.azure.servicebus.Message.getDeliveryCount()
  type: Method
  summary: >-
    <p>Gets the number of the times this message was delivered to clients.</p>

    <p>The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver. This property is read-only.</p>

    <p></p>
  syntax: *o3
- uid: com.microsoft.azure.servicebus._i_message.getEnqueuedTimeUtc()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getEnqueuedTimeUtc()
  nameWithType: IMessage.getEnqueuedTimeUtc()
  fullName: com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()
  type: Method
  summary: >-
    <p>Gets the instant at which this message was enqueued in Azure Service Bus.</p>

    <p>The UTC instant at which the message has been accepted and stored in the entity. For scheduled messages, this reflects the time when the message was activated. This value can be used as an authoritative and neutral arrival time indicator when the receiver does not want to trust the sender's clock. This property is read-only.</p>

    <p></p>
  syntax:
    content: public Instant getEnqueuedTimeUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the message was enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus._i_message.getSequenceNumber()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getSequenceNumber()
  nameWithType: IMessage.getSequenceNumber()
  fullName: com.microsoft.azure.servicebus.IMessage.getSequenceNumber()
  type: Method
  summary: >-
    <p>Gets the unique number assigned to a message by Service Bus.</p>

    <p>The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier. For partitioned entities, the topmost 16 bits reflect the partition identifier. Sequence numbers monotonically increase and are gapless. They roll over to 0 when the 48-64 bit range is exhausted. This property is read-only.</p>

    <p></p>
  syntax:
    content: public long getSequenceNumber()
    return:
      type: 0364520f
      description: <p>sequence number of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getSessionId()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getSessionId()
  nameWithType: IMessage.getSessionId()
  fullName: com.microsoft.azure.servicebus.IMessage.getSessionId()
  type: Method
  summary: >-
    <p>Gets the session identifier for a session-aware entity.</p>

    <p>For session-aware entities, this application-defined value specifies the session affiliation of the message. Messages with the same session identifier are subject to summary locking and enable exact in-order processing and demultiplexing. For session-unaware entities, this value is ignored.</p>

    <p></p>
  syntax:
    content: public String getSessionId()
    return:
      type: "26831127"
      description: <p>session id of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.setSessionId(String)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setSessionId(String sessionId)
  nameWithType: IMessage.setSessionId(String sessionId)
  fullName: com.microsoft.azure.servicebus.IMessage.setSessionId(String sessionId)
  type: Method
  summary: >-
    <p>Sets the session identifier for a session-aware entity.</p>

    <p></p>
  syntax:
    content: public void setSessionId(String sessionId)
    parameters:
    - id: sessionId
      type: "26831127"
      description: <p>session id of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getBody()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getBody()
  nameWithType: IMessage.getBody()
  fullName: com.microsoft.azure.servicebus.IMessage.getBody()
  type: Method
  summary: >-
    <p>Gets the body of this message as a byte array. It is up to client applications to decode the bytes.</p>

    <p></p>
  syntax:
    content: public byte [] getBody()
    return:
      type: ccd9418d
      description: <p>body of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.setBody(byte [])
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setBody(byte[] body)
  nameWithType: IMessage.setBody(byte[] body)
  fullName: com.microsoft.azure.servicebus.IMessage.setBody(byte[] body)
  type: Method
  summary: >-
    <p>Sets the body of this message as a byte array.</p>

    <p></p>
  syntax:
    content: public void setBody(byte[] body)
    parameters:
    - id: body
      type: ccd9418d
      description: <p>body of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getProperties()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getProperties()
  nameWithType: IMessage.getProperties()
  fullName: com.microsoft.azure.servicebus.IMessage.getProperties()
  type: Method
  summary: >-
    <p>Gets the map of user application properties of this message. Client applications can set user properties (headers) on the message using this map.</p>

    <p></p>
  syntax:
    content: public Map<String, String> getProperties()
    return:
      type: 689c8cb5
      description: <p>the map of user application properties of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.setProperties(Map<String, String>)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setProperties(Map<String, String> properties)
  nameWithType: IMessage.setProperties(Map<String, String> properties)
  fullName: com.microsoft.azure.servicebus.IMessage.setProperties(Map<String, String> properties)
  type: Method
  summary: >-
    <p>Sets the map of user application properties of this message. Client applications can set user properties on the message using this map.</p>

    <p></p>
  syntax:
    content: public void setProperties(Map<String, String> properties)
    parameters:
    - id: properties
      type: 689c8cb5
      description: <p>the map of user application properties of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getCorrelationId()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getCorrelationId()
  nameWithType: IMessage.getCorrelationId()
  fullName: com.microsoft.azure.servicebus.IMessage.getCorrelationId()
  type: Method
  summary: >-
    <p>Gets a correlation identifier.</p>

    <p>Allows an application to specify a context for the message for the purposes of correlation, for example reflecting the MessageId of a message that is being replied to.</p>

    <p></p>
  syntax:
    content: public String getCorrelationId()
    return:
      type: "26831127"
      description: <p>correlation Id of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.setCorrelationId(String)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setCorrelationId(String correlationId)
  nameWithType: IMessage.setCorrelationId(String correlationId)
  fullName: com.microsoft.azure.servicebus.IMessage.setCorrelationId(String correlationId)
  type: Method
  summary: >-
    <p>Sets a correlation identifier.</p>

    <p></p>
  syntax:
    content: public void setCorrelationId(String correlationId)
    parameters:
    - id: correlationId
      type: "26831127"
      description: <p>correlation Id of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getTo()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getTo()
  nameWithType: IMessage.getTo()
  fullName: com.microsoft.azure.servicebus.IMessage.getTo()
  type: Method
  summary: >-
    <p>Gets the "to" address.</p>

    <p></p>
  syntax:
    content: public String getTo()
    return:
      type: "26831127"
      description: <p>To property value of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.setTo(String)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setTo(String to)
  nameWithType: IMessage.setTo(String to)
  fullName: com.microsoft.azure.servicebus.IMessage.setTo(String to)
  type: Method
  summary: >-
    <p>Sets the "to" address.</p>

    <p>This property is reserved for future use in routing scenarios and presently ignored by the broker itself. Applications can use this value in rule-driven <a href="https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding">auto-forward chaining</a> scenarios to indicate the intended logical destination of the message.</p>

    <p></p>
  syntax:
    content: public void setTo(String to)
    parameters:
    - id: to
      type: "26831127"
      description: <p>To property value of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getReplyTo()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getReplyTo()
  nameWithType: IMessage.getReplyTo()
  fullName: com.microsoft.azure.servicebus.IMessage.getReplyTo()
  type: Method
  summary: >-
    <p>Gets the address of an entity to send replies to.</p>

    <p>This optional and application-defined value is a standard way to express a reply path to the receiver of the message. When a sender expects a reply, it sets the value to the absolute or relative path of the queue or topic it expects the reply to be sent to.</p>

    <p></p>
  syntax:
    content: public String getReplyTo()
    return:
      type: "26831127"
      description: <p>ReplyTo property value of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.setReplyTo(String)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setReplyTo(String replyTo)
  nameWithType: IMessage.setReplyTo(String replyTo)
  fullName: com.microsoft.azure.servicebus.IMessage.setReplyTo(String replyTo)
  type: Method
  summary: >-
    <p>Sets the address of an entity to send replies to.</p>

    <p></p>
  syntax:
    content: public void setReplyTo(String replyTo)
    parameters:
    - id: replyTo
      type: "26831127"
      description: <p>ReplyTo property value of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getLabel()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getLabel()
  nameWithType: IMessage.getLabel()
  fullName: com.microsoft.azure.servicebus.IMessage.getLabel()
  type: Method
  summary: >-
    <p>Gets the application specific message label.</p>

    <p>This property enables the application to indicate the purpose of the message to the receiver in a standardized fashion, similar to an email subject line. The mapped AMQP property is "subject".</p>

    <p></p>
  syntax:
    content: public String getLabel()
    return:
      type: "26831127"
      description: <p>Label property value of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.setLabel(String)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setLabel(String label)
  nameWithType: IMessage.setLabel(String label)
  fullName: com.microsoft.azure.servicebus.IMessage.setLabel(String label)
  type: Method
  summary: >-
    <p>Sets an application specific message label.</p>

    <p></p>
  syntax:
    content: public void setLabel(String label)
    parameters:
    - id: label
      type: "26831127"
      description: <p>Label property value of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getReplyToSessionId()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getReplyToSessionId()
  nameWithType: IMessage.getReplyToSessionId()
  fullName: com.microsoft.azure.servicebus.IMessage.getReplyToSessionId()
  type: Method
  summary: >-
    <p>Gets or sets a session identifier augmenting the <xref uid="com.microsoft.azure.servicebus._i_message.getReplyTo()" data-throw-if-not-resolved="false">ReplyTo</xref> address.</p>

    <p>This value augments the ReplyTo information and specifies which SessionId should be set for the reply when sent to the reply entity.</p>

    <p></p>
  syntax:
    content: public String getReplyToSessionId()
    return:
      type: "26831127"
      description: <p>ReplyToSessionId property value of this message </p>
- uid: com.microsoft.azure.servicebus._message.getReplyTo()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  name: getReplyTo()
  nameWithType: Message.getReplyTo()
  fullName: com.microsoft.azure.servicebus.Message.getReplyTo()
  type: Method
  summary: >-
    <p>Gets the address of an entity to send replies to.</p>

    <p>This optional and application-defined value is a standard way to express a reply path to the receiver of the message. When a sender expects a reply, it sets the value to the absolute or relative path of the queue or topic it expects the reply to be sent to.</p>

    <p></p>
  syntax: *o4
- uid: com.microsoft.azure.servicebus._i_message.setReplyToSessionId(String)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setReplyToSessionId(String replyToSessionId)
  nameWithType: IMessage.setReplyToSessionId(String replyToSessionId)
  fullName: com.microsoft.azure.servicebus.IMessage.setReplyToSessionId(String replyToSessionId)
  type: Method
  summary: >-
    <p>Gets or sets a session identifier augmenting the <xref uid="com.microsoft.azure.servicebus._i_message.getReplyTo()" data-throw-if-not-resolved="false">ReplyTo</xref> address.</p>

    <p></p>
  syntax:
    content: public void setReplyToSessionId(String replyToSessionId)
    parameters:
    - id: replyToSessionId
      type: "26831127"
      description: <p>ReplyToSessionId property value of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getScheduledEnqueuedTimeUtc()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getScheduledEnqueuedTimeUtc()
  nameWithType: IMessage.getScheduledEnqueuedTimeUtc()
  fullName: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueuedTimeUtc()
  type: Method
  summary: >-
    <p>Gets the scheduled enqueue time of this message.</p>

    <p>This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state.</p>

    <p>

      <xrefsect id="deprecated_1_deprecated000101">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>Replaced by <xref uid="com.microsoft.azure.servicebus._i_message.getScheduledEnqueueTimeUtc()" data-throw-if-not-resolved="false">getScheduledEnqueueTimeUtc()</xref></p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax:
    content: public Instant getScheduledEnqueuedTimeUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the message will be enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus._message.getScheduledEnqueueTimeUtc()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  name: getScheduledEnqueueTimeUtc()
  nameWithType: Message.getScheduledEnqueueTimeUtc()
  fullName: com.microsoft.azure.servicebus.Message.getScheduledEnqueueTimeUtc()
  type: Method
  summary: >-
    <p>Gets the scheduled enqueue time of this message.</p>

    <p>This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state.</p>

    <p></p>
  syntax: *o5
- uid: com.microsoft.azure.servicebus._i_message.setScheduledEnqueuedTimeUtc(Instant)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
  nameWithType: IMessage.setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
  type: Method
  summary: >-
    <p>Sets the scheduled enqueue time of this message.</p>

    <p>

      <xrefsect id="deprecated_1_deprecated000102">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>Replaced by <xref uid="com.microsoft.azure.servicebus._i_message.setScheduledEnqueueTimeUtc(Instant)" data-throw-if-not-resolved="false">setScheduledEnqueueTimeUtc(Instant)</xref></p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax:
    content: public void setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>the instant at which this message should be enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus._message.setScheduledEnqueueTimeUtc(Instant)
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  name: setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  nameWithType: Message.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.Message.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  type: Method
  summary: >-
    <p>Sets the scheduled enqueue time of this message.</p>

    <p></p>
  syntax: *o6
- uid: com.microsoft.azure.servicebus._i_message.getScheduledEnqueueTimeUtc()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getScheduledEnqueueTimeUtc()
  nameWithType: IMessage.getScheduledEnqueueTimeUtc()
  fullName: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc()
  type: Method
  summary: >-
    <p>Gets the scheduled enqueue time of this message.</p>

    <p>This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state.</p>

    <p></p>
  syntax:
    content: public Instant getScheduledEnqueueTimeUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the message will be enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus._i_message.setScheduledEnqueueTimeUtc(Instant)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  nameWithType: IMessage.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  type: Method
  summary: >-
    <p>Sets the scheduled enqueue time of this message.</p>

    <p></p>
  syntax:
    content: public void setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>the instant at which this message should be enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus._i_message.getPartitionKey()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getPartitionKey()
  nameWithType: IMessage.getPartitionKey()
  fullName: com.microsoft.azure.servicebus.IMessage.getPartitionKey()
  type: Method
  summary: >-
    <p>Gets the partition key for sending a message to a partitioned entity.</p>

    <p>For <a href="https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning">partitioned entities</a>, setting this value enables assigning related messages to the same internal partition, so that submission sequence order is correctly recorded. The partition is chosen by a hash function over this value and cannot be chosen directly. For session-aware entities, the <xref uid="com.microsoft.azure.servicebus._i_message.getSessionId()" data-throw-if-not-resolved="false">SessionId </xref> property overrides this value.</p>

    <p></p>
  syntax:
    content: public String getPartitionKey()
    return:
      type: "26831127"
      description: <p>partition key of this message </p>
- uid: com.microsoft.azure.servicebus._message.getSessionId()
  parent: com.microsoft.azure.servicebus._message
  href: com.microsoft.azure.servicebus._message.yml
  name: getSessionId()
  nameWithType: Message.getSessionId()
  fullName: com.microsoft.azure.servicebus.Message.getSessionId()
  type: Method
  summary: >-
    <p>Gets the session identifier for a session-aware entity.</p>

    <p>For session-aware entities, this application-defined value specifies the session affiliation of the message. Messages with the same session identifier are subject to summary locking and enable exact in-order processing and demultiplexing. For session-unaware entities, this value is ignored.</p>

    <p></p>
  syntax: *o7
- uid: com.microsoft.azure.servicebus._i_message.setPartitionKey(String)
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: setPartitionKey(String partitionKey)
  nameWithType: IMessage.setPartitionKey(String partitionKey)
  fullName: com.microsoft.azure.servicebus.IMessage.setPartitionKey(String partitionKey)
  type: Method
  summary: >-
    <p>Sets a partition key for sending a message to a partitioned entity</p>

    <p></p>
  syntax:
    content: public void setPartitionKey(String partitionKey)
    parameters:
    - id: partitionKey
      type: "26831127"
      description: <p>partition key of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getDeadLetterSource()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getDeadLetterSource()
  nameWithType: IMessage.getDeadLetterSource()
  fullName: com.microsoft.azure.servicebus.IMessage.getDeadLetterSource()
  type: Method
  summary: >-
    <p>Gets the name of the queue or subscription that this message was enqueued on, before it was deadlettered.</p>

    <p>This value is only set in messages that have been dead-lettered and subsequently auto-forwarded from the dead-letter queue to another entity. Indicates the entity in which the message was dead-lettered. This property is read-only.</p>

    <p></p>
  syntax:
    content: public String getDeadLetterSource()
    return:
      type: "26831127"
      description: <p>dead letter source of this message </p>
- uid: com.microsoft.azure.servicebus._i_message.getLockToken()
  parent: com.microsoft.azure.servicebus._i_message
  href: com.microsoft.azure.servicebus._i_message.yml
  name: getLockToken()
  nameWithType: IMessage.getLockToken()
  fullName: com.microsoft.azure.servicebus.IMessage.getLockToken()
  type: Method
  summary: >-
    <p>Gets the lock token for the current message.</p>

    <p>The lock token is a reference to the lock that is being held by the broker in PEEKLOCK mode. Locks are used to explicitly settle messages as explained in the <a href="https://docs.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement">product documentation in more detail</a>. The token can also be used to pin the lock permanently through the <a href="https://docs.microsoft.com/azure/service-bus-messaging/message-deferral">Deferral API</a> and, with that, take the message out of the regular delivery state flow. This property is read-only.</p>

    <p></p>
  syntax:
    content: public UUID getLockToken()
    return:
      type: add9545a
      description: <p>lock token of this message. </p>
