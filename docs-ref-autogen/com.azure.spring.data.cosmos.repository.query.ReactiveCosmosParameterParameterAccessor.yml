### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor
  id: ReactiveCosmosParameterParameterAccessor
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.query
  children:
  - com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor.ReactiveCosmosParameterParameterAccessor(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod,java.lang.Object[])
  - com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor.getValues()
  langs:
  - java
  name: ReactiveCosmosParameterParameterAccessor
  nameWithType: ReactiveCosmosParameterParameterAccessor
  fullName: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor
  type: Class
  package: com.azure.spring.data.cosmos.repository.query
  summary: <xref uid="com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor" data-throw-if-not-resolved="false">ReactiveCosmosParameterParameterAccessor</xref> implementation using a <xref uid="org.springframework.data.repository.query.ParametersParameterAccessor" data-throw-if-not-resolved="false">ParametersParameterAccessor</xref> instance to find special parameters.
  syntax:
    content: public class ReactiveCosmosParameterParameterAccessor extends ParametersParameterAccessor implements ReactiveCosmosParameterAccessor
  inheritance:
  - java.lang.Object
  - org.springframework.data.repository.query.ParametersParameterAccessor
  implements:
  - com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.data.repository.query.ParametersParameterAccessor.<T>getValue(int)
  - org.springframework.data.repository.query.ParametersParameterAccessor.findDynamicProjection()
  - org.springframework.data.repository.query.ParametersParameterAccessor.getBindableValue(int)
  - org.springframework.data.repository.query.ParametersParameterAccessor.getDynamicProjection()
  - org.springframework.data.repository.query.ParametersParameterAccessor.getPageable()
  - org.springframework.data.repository.query.ParametersParameterAccessor.getParameters()
  - org.springframework.data.repository.query.ParametersParameterAccessor.getSort()
  - org.springframework.data.repository.query.ParametersParameterAccessor.getValues()
  - org.springframework.data.repository.query.ParametersParameterAccessor.hasBindableNullValue()
  - org.springframework.data.repository.query.ParametersParameterAccessor.iterator()
- uid: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor.ReactiveCosmosParameterParameterAccessor(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod,java.lang.Object[])
  id: ReactiveCosmosParameterParameterAccessor(com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod,java.lang.Object[])
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor
  langs:
  - java
  name: ReactiveCosmosParameterParameterAccessor(ReactiveCosmosQueryMethod method, Object[] values)
  nameWithType: ReactiveCosmosParameterParameterAccessor.ReactiveCosmosParameterParameterAccessor(ReactiveCosmosQueryMethod method, Object[] values)
  fullName: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor.ReactiveCosmosParameterParameterAccessor(ReactiveCosmosQueryMethod method, Object[] values)
  overload: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor.ReactiveCosmosParameterParameterAccessor*
  type: Constructor
  package: com.azure.spring.data.cosmos.repository.query
  summary: Creates a new <xref uid="com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor" data-throw-if-not-resolved="false">ReactiveCosmosParameterParameterAccessor</xref>.
  syntax:
    content: public ReactiveCosmosParameterParameterAccessor(ReactiveCosmosQueryMethod method, Object[] values)
    parameters:
    - id: method
      type: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod
      description: must not be null.
    - id: values
      type: java.lang.Object[]
      description: must not be null.
- uid: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor.getValues()
  id: getValues()
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor
  langs:
  - java
  name: getValues()
  nameWithType: ReactiveCosmosParameterParameterAccessor.getValues()
  fullName: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor.getValues()
  overload: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor.getValues*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  summary: Get values of method parameters
  syntax:
    content: public Object[] getValues()
    return:
      type: java.lang.Object[]
references:
- uid: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod
  name: ReactiveCosmosQueryMethod
  nameWithType: ReactiveCosmosQueryMethod
  fullName: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosQueryMethod
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor.ReactiveCosmosParameterParameterAccessor*
  name: ReactiveCosmosParameterParameterAccessor
  nameWithType: ReactiveCosmosParameterParameterAccessor.ReactiveCosmosParameterParameterAccessor
  fullName: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor.ReactiveCosmosParameterParameterAccessor
  package: com.azure.spring.data.cosmos.repository.query
- uid: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor.getValues*
  name: getValues
  nameWithType: ReactiveCosmosParameterParameterAccessor.getValues
  fullName: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterParameterAccessor.getValues
  package: com.azure.spring.data.cosmos.repository.query
- uid: org.springframework.data.repository.query.ParametersParameterAccessor
  name: ParametersParameterAccessor
  nameWithType: ParametersParameterAccessor
  fullName: org.springframework.data.repository.query.ParametersParameterAccessor
- uid: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor
  name: ReactiveCosmosParameterAccessor
  nameWithType: ReactiveCosmosParameterAccessor
  fullName: com.azure.spring.data.cosmos.repository.query.ReactiveCosmosParameterAccessor
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: org.springframework.data.repository.query.ParametersParameterAccessor.getDynamicProjection()
  name: ParametersParameterAccessor.getDynamicProjection()
  nameWithType: ParametersParameterAccessor.getDynamicProjection()
  fullName: org.springframework.data.repository.query.ParametersParameterAccessor.getDynamicProjection()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.springframework.data.repository.query.ParametersParameterAccessor.getBindableValue(int)
  name: ParametersParameterAccessor.getBindableValue(int)
  nameWithType: ParametersParameterAccessor.getBindableValue(int)
  fullName: org.springframework.data.repository.query.ParametersParameterAccessor.getBindableValue(int)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.springframework.data.repository.query.ParametersParameterAccessor.getSort()
  name: ParametersParameterAccessor.getSort()
  nameWithType: ParametersParameterAccessor.getSort()
  fullName: org.springframework.data.repository.query.ParametersParameterAccessor.getSort()
- uid: org.springframework.data.repository.query.ParametersParameterAccessor.<T>getValue(int)
  name: ParametersParameterAccessor.<T>getValue(int)
  nameWithType: ParametersParameterAccessor.<T>getValue(int)
  fullName: org.springframework.data.repository.query.ParametersParameterAccessor.<T>getValue(int)
- uid: org.springframework.data.repository.query.ParametersParameterAccessor.getValues()
  name: ParametersParameterAccessor.getValues()
  nameWithType: ParametersParameterAccessor.getValues()
  fullName: org.springframework.data.repository.query.ParametersParameterAccessor.getValues()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.springframework.data.repository.query.ParametersParameterAccessor.iterator()
  name: ParametersParameterAccessor.iterator()
  nameWithType: ParametersParameterAccessor.iterator()
  fullName: org.springframework.data.repository.query.ParametersParameterAccessor.iterator()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: org.springframework.data.repository.query.ParametersParameterAccessor.getPageable()
  name: ParametersParameterAccessor.getPageable()
  nameWithType: ParametersParameterAccessor.getPageable()
  fullName: org.springframework.data.repository.query.ParametersParameterAccessor.getPageable()
- uid: org.springframework.data.repository.query.ParametersParameterAccessor.findDynamicProjection()
  name: ParametersParameterAccessor.findDynamicProjection()
  nameWithType: ParametersParameterAccessor.findDynamicProjection()
  fullName: org.springframework.data.repository.query.ParametersParameterAccessor.findDynamicProjection()
- uid: org.springframework.data.repository.query.ParametersParameterAccessor.getParameters()
  name: ParametersParameterAccessor.getParameters()
  nameWithType: ParametersParameterAccessor.getParameters()
  fullName: org.springframework.data.repository.query.ParametersParameterAccessor.getParameters()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.springframework.data.repository.query.ParametersParameterAccessor.hasBindableNullValue()
  name: ParametersParameterAccessor.hasBindableNullValue()
  nameWithType: ParametersParameterAccessor.hasBindableNullValue()
  fullName: org.springframework.data.repository.query.ParametersParameterAccessor.hasBindableNullValue()
- uid: T>getValue(int)
  name: T>getValue(int)
  nameWithType: T>getValue(int)
  fullName: T>getValue(int)
- uid: org.springframework.data.repository.query.ParametersParameterAccessor.
  name: ParametersParameterAccessor.
  nameWithType: ParametersParameterAccessor.
  fullName: org.springframework.data.repository.query.ParametersParameterAccessor.
