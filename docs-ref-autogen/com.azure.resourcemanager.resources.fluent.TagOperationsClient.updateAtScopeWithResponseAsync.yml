### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluent.TagOperationsClient.updateAtScopeWithResponseAsync*"
fullName: "com.azure.resourcemanager.resources.fluent.TagOperationsClient.updateAtScopeWithResponseAsync"
name: "updateAtScopeWithResponseAsync"
nameWithType: "TagOperationsClient.updateAtScopeWithResponseAsync"
members:
- uid: "com.azure.resourcemanager.resources.fluent.TagOperationsClient.updateAtScopeWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.TagsPatchResource)"
  fullName: "com.azure.resourcemanager.resources.fluent.TagOperationsClient.updateAtScopeWithResponseAsync(String scope, TagsPatchResource parameters)"
  name: "updateAtScopeWithResponseAsync(String scope, TagsPatchResource parameters)"
  nameWithType: "TagOperationsClient.updateAtScopeWithResponseAsync(String scope, TagsPatchResource parameters)"
  summary: "This operation allows replacing, merging or selectively deleting tags on the specified resource or subscription. The specified entity can have a maximum of 50 tags at the end of the operation. The 'replace' option replaces the entire set of existing tags with a new set. The 'merge' option allows adding tags with new names and updating the values of tags with existing names. The 'delete' option allows selectively deleting tags based on given names or name/value pairs."
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Wrapper resource for tags patch API request only."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.TagsPatchResource?alt=com.azure.resourcemanager.resources.models.TagsPatchResource&text=TagsPatchResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<TagsResourceInner>> updateAtScopeWithResponseAsync(String scope, TagsPatchResource parameters)"
  returns:
    description: "wrapper resource for tags API requests and responses."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.TagsResourceInner?alt=com.azure.resourcemanager.resources.fluent.models.TagsResourceInner&text=TagsResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
