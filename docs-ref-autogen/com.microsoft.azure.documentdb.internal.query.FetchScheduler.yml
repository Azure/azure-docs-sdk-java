### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.documentdb.internal.query.FetchScheduler"
  id: "FetchScheduler"
  parent: "com.microsoft.azure.documentdb.internal.query"
  children:
  - "com.microsoft.azure.documentdb.internal.query.FetchScheduler.FetchScheduler(java.util.concurrent.Executor,int)"
  - "com.microsoft.azure.documentdb.internal.query.FetchScheduler.getMaxDegreeOfParallelism()"
  - "com.microsoft.azure.documentdb.internal.query.FetchScheduler.schedule(java.util.concurrent.Callable<java.lang.Void>)"
  - "com.microsoft.azure.documentdb.internal.query.FetchScheduler.stop()"
  langs:
  - "java"
  name: "FetchScheduler"
  nameWithType: "FetchScheduler"
  fullName: "com.microsoft.azure.documentdb.internal.query.FetchScheduler"
  type: "Class"
  package: "com.microsoft.azure.documentdb.internal.query"
  syntax:
    content: "public class FetchScheduler"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.FetchScheduler(java.util.concurrent.Executor,int)"
  id: "FetchScheduler(java.util.concurrent.Executor,int)"
  parent: "com.microsoft.azure.documentdb.internal.query.FetchScheduler"
  langs:
  - "java"
  name: "FetchScheduler(Executor executor, int maxDegreeOfParallelism)"
  nameWithType: "FetchScheduler.FetchScheduler(Executor executor, int maxDegreeOfParallelism)"
  fullName: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.FetchScheduler(Executor executor, int maxDegreeOfParallelism)"
  overload: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.FetchScheduler*"
  type: "Constructor"
  package: "com.microsoft.azure.documentdb.internal.query"
  syntax:
    content: "public FetchScheduler(Executor executor, int maxDegreeOfParallelism)"
    parameters:
    - id: "executor"
      type: "java.util.concurrent.Executor"
    - id: "maxDegreeOfParallelism"
      type: "int"
- uid: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.getMaxDegreeOfParallelism()"
  id: "getMaxDegreeOfParallelism()"
  parent: "com.microsoft.azure.documentdb.internal.query.FetchScheduler"
  langs:
  - "java"
  name: "getMaxDegreeOfParallelism()"
  nameWithType: "FetchScheduler.getMaxDegreeOfParallelism()"
  fullName: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.getMaxDegreeOfParallelism()"
  overload: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.getMaxDegreeOfParallelism*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal.query"
  syntax:
    content: "public int getMaxDegreeOfParallelism()"
    return:
      type: "int"
- uid: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.schedule(java.util.concurrent.Callable<java.lang.Void>)"
  id: "schedule(java.util.concurrent.Callable<java.lang.Void>)"
  parent: "com.microsoft.azure.documentdb.internal.query.FetchScheduler"
  langs:
  - "java"
  name: "schedule(Callable<Void> callable)"
  nameWithType: "FetchScheduler.schedule(Callable<Void> callable)"
  fullName: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.schedule(Callable<Void> callable)"
  overload: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.schedule*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal.query"
  syntax:
    content: "public void schedule(Callable<Void> callable)"
    parameters:
    - id: "callable"
      type: "java.util.concurrent.Callable<java.lang.Void>"
- uid: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.stop()"
  id: "stop()"
  parent: "com.microsoft.azure.documentdb.internal.query.FetchScheduler"
  langs:
  - "java"
  name: "stop()"
  nameWithType: "FetchScheduler.stop()"
  fullName: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.stop()"
  overload: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.stop*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal.query"
  syntax:
    content: "public void stop()"
references:
- uid: "java.util.concurrent.Executor"
  spec.java:
  - uid: "java.util.concurrent.Executor"
    name: "Executor"
    fullName: "java.util.concurrent.Executor"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.FetchScheduler*"
  name: "FetchScheduler"
  nameWithType: "FetchScheduler.FetchScheduler"
  fullName: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.FetchScheduler"
  package: "com.microsoft.azure.documentdb.internal.query"
- uid: "java.util.concurrent.Callable<java.lang.Void>"
  spec.java:
  - uid: "java.util.concurrent.Callable"
    name: "Callable"
    fullName: "java.util.concurrent.Callable"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.schedule*"
  name: "schedule"
  nameWithType: "FetchScheduler.schedule"
  fullName: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.schedule"
  package: "com.microsoft.azure.documentdb.internal.query"
- uid: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.getMaxDegreeOfParallelism*"
  name: "getMaxDegreeOfParallelism"
  nameWithType: "FetchScheduler.getMaxDegreeOfParallelism"
  fullName: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.getMaxDegreeOfParallelism"
  package: "com.microsoft.azure.documentdb.internal.query"
- uid: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.stop*"
  name: "stop"
  nameWithType: "FetchScheduler.stop"
  fullName: "com.microsoft.azure.documentdb.internal.query.FetchScheduler.stop"
  package: "com.microsoft.azure.documentdb.internal.query"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "java.util.concurrent.Callable"
  name: "Callable"
  nameWithType: "Callable"
  fullName: "java.util.concurrent.Callable"
