### YamlMime:JavaMember
nameWithType: DeviceClient.DeviceClient
type: constructor
members:
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String connectionString, IotHubClientProtocol protocol)
  name: DeviceClient(String connectionString, IotHubClientProtocol protocol)
  nameWithType: DeviceClient.DeviceClient(String connectionString, IotHubClientProtocol protocol)
  parameters:
  - description: >-
      <p>the connection string. The connection string is a set of key-value pairs that are separated by ';', with the keys and values separated by '='. It should contain values for the following keys: <code>HostName 

          </code> ,<code>DeviceId 

          </code> , and<code>SharedAccessKey 

          </code> . </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the communication protocol used (i.e. HTTPS).</p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>if any of<code>connectionString 

          </code> or <code>protocol 

          </code> are<code>null 

          </code> ; or if<code>connectionString 

          </code> is missing one of the following attributes:<code>HostName 

          </code> ,<code>DeviceId 

          </code> , or <code>SharedAccessKey 

          </code> or if the IoT hub hostname does not conform to RFC 3986 or if the provided<code>connectionString 

          </code> is for an x509 authenticated device </p>
  summary: >-
    <p>Constructor that takes a connection string as an argument.</p>

    <p></p>
  syntax: public DeviceClient(String connectionString, IotHubClientProtocol protocol)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String,IotHubClientProtocol)
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String connectionString, IotHubClientProtocol protocol, ClientOptions clientOptions)
  name: DeviceClient(String connectionString, IotHubClientProtocol protocol, ClientOptions clientOptions)
  nameWithType: DeviceClient.DeviceClient(String connectionString, IotHubClientProtocol protocol, ClientOptions clientOptions)
  parameters:
  - description: >-
      <p>the connection string. The connection string is a set of key-value pairs that are separated by ';', with the keys and values separated by '='. It should contain values for the following keys: <code>HostName 

          </code> ,<code>DeviceId 

          </code> , and<code>SharedAccessKey 

          </code> . </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the communication protocol used (i.e. HTTPS) </p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol" data-throw-if-not-resolved="False"/>
  - description: <p>The options that allow configuration of the device client instance during initialization</p>
    name: clientOptions
    type: <xref href="com.microsoft.azure.sdk.iot.device.ClientOptions?alt=com.microsoft.azure.sdk.iot.device.ClientOptions&text=ClientOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>if any of<code>connectionString 

          </code> or <code>protocol 

          </code> are<code>null 

          </code> ; or if<code>connectionString 

          </code> is missing one of the following attributes:<code>HostName 

          </code> ,<code>DeviceId 

          </code> , or <code>SharedAccessKey 

          </code> or if the IoT hub hostname does not conform to RFC 3986 or if the provided<code>connectionString 

          </code> is for an x509 authenticated device </p>
  summary: >-
    <p>Constructor that takes a connection string as an argument.</p>

    <p></p>
  syntax: public DeviceClient(String connectionString, IotHubClientProtocol protocol, ClientOptions clientOptions)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String,IotHubClientProtocol,ClientOptions)
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String hostName, String deviceId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol)
  name: DeviceClient(String hostName, String deviceId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol)
  nameWithType: DeviceClient.DeviceClient(String hostName, String deviceId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol)
  parameters:
  - description: <p>The host name of the IoT Hub that this client will connect to. </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The Id of the device that the connection will identify as. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The provider of all SAS tokens that are used during authentication. </p>
    name: sasTokenProvider
    type: <xref href="com.microsoft.azure.sdk.iot.device.SasTokenProvider?alt=com.microsoft.azure.sdk.iot.device.SasTokenProvider&text=SasTokenProvider" data-throw-if-not-resolved="False"/>
  - description: <p>The protocol that the client will connect over. </p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor that allows for the client's SAS token generation to be controlled by the user. Note that options in this client such as setting the SAS token expiry time will throw <xref uid="" data-throw-if-not-resolved="false" data-raw-source="UnsupportedOperationException"></xref> since the SDK no longer controls that when this constructor is used. </p>
  syntax: public DeviceClient(String hostName, String deviceId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String,String,SasTokenProvider,IotHubClientProtocol)
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String hostName, String deviceId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  name: DeviceClient(String hostName, String deviceId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  nameWithType: DeviceClient.DeviceClient(String hostName, String deviceId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  parameters:
  - description: <p>The host name of the IoT Hub that this client will connect to. </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The Id of the device that the connection will identify as. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The provider of all SAS tokens that are used during authentication. </p>
    name: sasTokenProvider
    type: <xref href="com.microsoft.azure.sdk.iot.device.SasTokenProvider?alt=com.microsoft.azure.sdk.iot.device.SasTokenProvider&text=SasTokenProvider" data-throw-if-not-resolved="False"/>
  - description: <p>The protocol that the client will connect over. </p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol" data-throw-if-not-resolved="False"/>
  - description: <p>The options that allow configuration of the device client instance during initialization. </p>
    name: clientOptions
    type: <xref href="com.microsoft.azure.sdk.iot.device.ClientOptions?alt=com.microsoft.azure.sdk.iot.device.ClientOptions&text=ClientOptions" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor that allows for the client's SAS token generation to be controlled by the user. Note that options in this client such as setting the SAS token expiry time will throw <xref uid="" data-throw-if-not-resolved="false" data-raw-source="UnsupportedOperationException"></xref> since the SDK no longer controls that when this constructor is used. </p>
  syntax: public DeviceClient(String hostName, String deviceId, SasTokenProvider sasTokenProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String,String,SasTokenProvider,IotHubClientProtocol,ClientOptions)
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol)
  name: DeviceClient(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol)
  nameWithType: DeviceClient.DeviceClient(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol)
  parameters:
  - description: '<p>The hostname of the iot hub to connect to (format: "yourHubName.azure-devices.net") </p>'
    name: uri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The id for the device to use </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The security provider for the device </p>
    name: securityProvider
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider?alt=com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider&text=SecurityProvider" data-throw-if-not-resolved="False"/>
  - description: <p>The protocol the device shall use for communication to the IoT Hub </p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If the SecurityProvider throws any exception while authenticating </p>
  summary: >-
    <p>Creates a device client that uses the provided security provider for authentication.</p>

    <p></p>
  syntax: public DeviceClient(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String,String,SecurityProvider,IotHubClientProtocol)
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  name: DeviceClient(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  nameWithType: DeviceClient.DeviceClient(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  parameters:
  - description: '<p>The hostname of the iot hub to connect to (format: "yourHubName.azure-devices.net") </p>'
    name: uri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The id for the device to use </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The security provider for the device </p>
    name: securityProvider
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider?alt=com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider&text=SecurityProvider" data-throw-if-not-resolved="False"/>
  - description: <p>The protocol the device shall use for communication to the IoT Hub </p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol" data-throw-if-not-resolved="False"/>
  - description: <p>The options that allow configuration of the device client instance during initialization </p>
    name: clientOptions
    type: <xref href="com.microsoft.azure.sdk.iot.device.ClientOptions?alt=com.microsoft.azure.sdk.iot.device.ClientOptions&text=ClientOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If the SecurityProvider throws any exception while authenticating </p>
  summary: >-
    <p>Creates a device client that uses the provided security provider for authentication.</p>

    <p></p>
  syntax: public DeviceClient(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol, ClientOptions clientOptions)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String,String,SecurityProvider,IotHubClientProtocol,ClientOptions)
uid: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient*
fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient
name: DeviceClient
package: com.microsoft.azure.sdk.iot.device
metadata: {}
