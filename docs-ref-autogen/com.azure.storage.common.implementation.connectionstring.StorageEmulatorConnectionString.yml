### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString"
  id: "StorageEmulatorConnectionString"
  parent: "com.azure.storage.common.implementation.connectionstring"
  children:
  - "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString.StorageEmulatorConnectionString()"
  - "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString.tryCreate(com.azure.storage.common.implementation.connectionstring.ConnectionSettings,com.azure.core.util.logging.ClientLogger)"
  langs:
  - "java"
  name: "StorageEmulatorConnectionString"
  nameWithType: "StorageEmulatorConnectionString"
  fullName: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString"
  type: "Class"
  package: "com.azure.storage.common.implementation.connectionstring"
  summary: "Type to parse a connection string and creates <xref uid=\"com.azure.storage.common.implementation.connectionstring.StorageConnectionString\" data-throw-if-not-resolved=\"false\">StorageConnectionString</xref> for emulator."
  syntax:
    content: "final class StorageEmulatorConnectionString"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString.StorageEmulatorConnectionString()"
  id: "StorageEmulatorConnectionString()"
  parent: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString"
  langs:
  - "java"
  name: "StorageEmulatorConnectionString()"
  nameWithType: "StorageEmulatorConnectionString.StorageEmulatorConnectionString()"
  fullName: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString.StorageEmulatorConnectionString()"
  overload: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString.StorageEmulatorConnectionString*"
  type: "Constructor"
  package: "com.azure.storage.common.implementation.connectionstring"
  syntax:
    content: " StorageEmulatorConnectionString()"
- uid: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString.tryCreate(com.azure.storage.common.implementation.connectionstring.ConnectionSettings,com.azure.core.util.logging.ClientLogger)"
  id: "tryCreate(com.azure.storage.common.implementation.connectionstring.ConnectionSettings,com.azure.core.util.logging.ClientLogger)"
  parent: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString"
  langs:
  - "java"
  name: "tryCreate(ConnectionSettings settings, ClientLogger logger)"
  nameWithType: "StorageEmulatorConnectionString.tryCreate(ConnectionSettings settings, ClientLogger logger)"
  fullName: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString.tryCreate(ConnectionSettings settings, ClientLogger logger)"
  overload: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString.tryCreate*"
  type: "Method"
  package: "com.azure.storage.common.implementation.connectionstring"
  summary: "Try parsing the connection string and create <xref uid=\"com.azure.storage.common.implementation.connectionstring.StorageConnectionString\" data-throw-if-not-resolved=\"false\">StorageConnectionString</xref> from it."
  syntax:
    content: "static StorageConnectionString tryCreate(ConnectionSettings settings, ClientLogger logger)"
    parameters:
    - id: "settings"
      type: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
      description: "the connection settings"
    - id: "logger"
      type: "com.azure.core.util.logging.ClientLogger"
      description: "the logger"
    return:
      type: "com.azure.storage.common.implementation.connectionstring.StorageConnectionString"
      description: "the StorageConnectionString for emulator"
references:
- uid: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString.StorageEmulatorConnectionString*"
  name: "StorageEmulatorConnectionString"
  nameWithType: "StorageEmulatorConnectionString.StorageEmulatorConnectionString"
  fullName: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString.StorageEmulatorConnectionString"
  package: "com.azure.storage.common.implementation.connectionstring"
- uid: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
  name: "ConnectionSettings"
  nameWithType: "ConnectionSettings"
  fullName: "com.azure.storage.common.implementation.connectionstring.ConnectionSettings"
- uid: "com.azure.core.util.logging.ClientLogger"
  spec.java:
  - uid: "com.azure.core.util.logging.ClientLogger"
    name: "ClientLogger"
    fullName: "com.azure.core.util.logging.ClientLogger"
- uid: "com.azure.storage.common.implementation.connectionstring.StorageConnectionString"
  name: "StorageConnectionString"
  nameWithType: "StorageConnectionString"
  fullName: "com.azure.storage.common.implementation.connectionstring.StorageConnectionString"
- uid: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString.tryCreate*"
  name: "tryCreate"
  nameWithType: "StorageEmulatorConnectionString.tryCreate"
  fullName: "com.azure.storage.common.implementation.connectionstring.StorageEmulatorConnectionString.tryCreate"
  package: "com.azure.storage.common.implementation.connectionstring"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
