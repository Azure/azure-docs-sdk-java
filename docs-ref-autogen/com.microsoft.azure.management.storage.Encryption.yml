### YamlMime:JavaType
uid: "com.microsoft.azure.management.storage.Encryption"
fullName: "com.microsoft.azure.management.storage.Encryption"
name: "Encryption"
nameWithType: "Encryption"
summary: "The encryption settings on the storage account."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Encryption"
constructors:
- uid: "com.microsoft.azure.management.storage.Encryption.Encryption()"
  fullName: "com.microsoft.azure.management.storage.Encryption.Encryption()"
  name: "Encryption()"
  nameWithType: "Encryption.Encryption()"
  syntax: "public Encryption()"
methods:
- uid: "com.microsoft.azure.management.storage.Encryption.keySource()"
  fullName: "com.microsoft.azure.management.storage.Encryption.keySource()"
  name: "keySource()"
  nameWithType: "Encryption.keySource()"
  summary: "Get the encryption key<wbr>Source (provider)."
  syntax: "public KeySource keySource()"
  desc: "Get the encryption keySource (provider). Possible values (case-insensitive): Microsoft.Storage, Microsoft.Keyvault. Possible values include: 'Microsoft.Storage', 'Microsoft.Keyvault'."
  returns:
    description: "the keySource value"
    type: "<xref href=\"com.microsoft.azure.management.storage.KeySource?alt=com.microsoft.azure.management.storage.KeySource&text=KeySource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.Encryption.keyVaultProperties()"
  fullName: "com.microsoft.azure.management.storage.Encryption.keyVaultProperties()"
  name: "keyVaultProperties()"
  nameWithType: "Encryption.keyVaultProperties()"
  summary: "Get properties provided by key vault."
  syntax: "public KeyVaultProperties keyVaultProperties()"
  desc: "Get properties provided by key vault."
  returns:
    description: "the keyVaultProperties value"
    type: "<xref href=\"com.microsoft.azure.management.storage.KeyVaultProperties?alt=com.microsoft.azure.management.storage.KeyVaultProperties&text=KeyVaultProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.Encryption.requireInfrastructureEncryption()"
  fullName: "com.microsoft.azure.management.storage.Encryption.requireInfrastructureEncryption()"
  name: "requireInfrastructureEncryption()"
  nameWithType: "Encryption.requireInfrastructureEncryption()"
  summary: "Get a boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest."
  syntax: "public Boolean requireInfrastructureEncryption()"
  desc: "Get a boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest."
  returns:
    description: "the requireInfrastructureEncryption value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.Encryption.services()"
  fullName: "com.microsoft.azure.management.storage.Encryption.services()"
  name: "services()"
  nameWithType: "Encryption.services()"
  summary: "Get list of services which support encryption."
  syntax: "public EncryptionServices services()"
  desc: "Get list of services which support encryption."
  returns:
    description: "the services value"
    type: "<xref href=\"com.microsoft.azure.management.storage.EncryptionServices?alt=com.microsoft.azure.management.storage.EncryptionServices&text=EncryptionServices\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.Encryption.withKeySource(com.microsoft.azure.management.storage.KeySource)"
  fullName: "com.microsoft.azure.management.storage.Encryption.withKeySource(KeySource keySource)"
  name: "withKeySource(KeySource keySource)"
  nameWithType: "Encryption.withKeySource(KeySource keySource)"
  summary: "Set the encryption key<wbr>Source (provider)."
  parameters:
  - description: "the keySource value to set"
    name: "keySource"
    type: "<xref href=\"com.microsoft.azure.management.storage.KeySource?alt=com.microsoft.azure.management.storage.KeySource&text=KeySource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Encryption withKeySource(KeySource keySource)"
  desc: "Set the encryption keySource (provider). Possible values (case-insensitive): Microsoft.Storage, Microsoft.Keyvault. Possible values include: 'Microsoft.Storage', 'Microsoft.Keyvault'."
  returns:
    description: "the Encryption object itself."
    type: "<xref href=\"com.microsoft.azure.management.storage.Encryption?alt=com.microsoft.azure.management.storage.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.Encryption.withKeyVaultProperties(com.microsoft.azure.management.storage.KeyVaultProperties)"
  fullName: "com.microsoft.azure.management.storage.Encryption.withKeyVaultProperties(KeyVaultProperties keyVaultProperties)"
  name: "withKeyVaultProperties(KeyVaultProperties keyVaultProperties)"
  nameWithType: "Encryption.withKeyVaultProperties(KeyVaultProperties keyVaultProperties)"
  summary: "Set properties provided by key vault."
  parameters:
  - description: "the keyVaultProperties value to set"
    name: "keyVaultProperties"
    type: "<xref href=\"com.microsoft.azure.management.storage.KeyVaultProperties?alt=com.microsoft.azure.management.storage.KeyVaultProperties&text=KeyVaultProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Encryption withKeyVaultProperties(KeyVaultProperties keyVaultProperties)"
  desc: "Set properties provided by key vault."
  returns:
    description: "the Encryption object itself."
    type: "<xref href=\"com.microsoft.azure.management.storage.Encryption?alt=com.microsoft.azure.management.storage.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.Encryption.withRequireInfrastructureEncryption(java.lang.Boolean)"
  fullName: "com.microsoft.azure.management.storage.Encryption.withRequireInfrastructureEncryption(Boolean requireInfrastructureEncryption)"
  name: "withRequireInfrastructureEncryption(Boolean requireInfrastructureEncryption)"
  nameWithType: "Encryption.withRequireInfrastructureEncryption(Boolean requireInfrastructureEncryption)"
  summary: "Set a boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest."
  parameters:
  - description: "the requireInfrastructureEncryption value to set"
    name: "requireInfrastructureEncryption"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Encryption withRequireInfrastructureEncryption(Boolean requireInfrastructureEncryption)"
  desc: "Set a boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest."
  returns:
    description: "the Encryption object itself."
    type: "<xref href=\"com.microsoft.azure.management.storage.Encryption?alt=com.microsoft.azure.management.storage.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.Encryption.withServices(com.microsoft.azure.management.storage.EncryptionServices)"
  fullName: "com.microsoft.azure.management.storage.Encryption.withServices(EncryptionServices services)"
  name: "withServices(EncryptionServices services)"
  nameWithType: "Encryption.withServices(EncryptionServices services)"
  summary: "Set list of services which support encryption."
  parameters:
  - description: "the services value to set"
    name: "services"
    type: "<xref href=\"com.microsoft.azure.management.storage.EncryptionServices?alt=com.microsoft.azure.management.storage.EncryptionServices&text=EncryptionServices\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Encryption withServices(EncryptionServices services)"
  desc: "Set list of services which support encryption."
  returns:
    description: "the Encryption object itself."
    type: "<xref href=\"com.microsoft.azure.management.storage.Encryption?alt=com.microsoft.azure.management.storage.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The encryption settings on the storage account."
metadata: {}
package: "com.microsoft.azure.management.storage"
artifact: com.microsoft.azure:azure-mgmt-storage:1.41.4
