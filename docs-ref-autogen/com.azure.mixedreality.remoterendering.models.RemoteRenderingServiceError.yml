### YamlMime:JavaType
uid: "com.azure.mixedreality.remoterendering.models.RemoteRenderingServiceError"
fullName: "com.azure.mixedreality.remoterendering.models.RemoteRenderingServiceError"
name: "RemoteRenderingServiceError"
nameWithType: "RemoteRenderingServiceError"
summary: "Represents an error in the service."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RemoteRenderingServiceError"
constructors:
- "com.azure.mixedreality.remoterendering.models.RemoteRenderingServiceError.RemoteRenderingServiceError(java.lang.String,java.lang.String,java.lang.String,com.azure.mixedreality.remoterendering.models.RemoteRenderingServiceError,java.util.List<com.azure.mixedreality.remoterendering.models.RemoteRenderingServiceError>)"
methods:
- "com.azure.mixedreality.remoterendering.models.RemoteRenderingServiceError.getCode()"
- "com.azure.mixedreality.remoterendering.models.RemoteRenderingServiceError.getInnerError()"
- "com.azure.mixedreality.remoterendering.models.RemoteRenderingServiceError.getMessage()"
- "com.azure.mixedreality.remoterendering.models.RemoteRenderingServiceError.getTarget()"
- "com.azure.mixedreality.remoterendering.models.RemoteRenderingServiceError.listRootErrors()"
type: "class"
metadata: {}
package: "com.azure.mixedreality.remoterendering.models"
artifact: com.azure:azure-mixedreality-remoterendering:1.0.0
