### YamlMime:JavaType
uid: "com.azure.core.amqp.AmqpSession"
fullName: "com.azure.core.amqp.AmqpSession"
name: "AmqpSession"
nameWithType: "AmqpSession"
summary: "An AMQP session representing bidirectional communication that supports multiple <xref uid=\"com.azure.core.amqp.AmqpLink\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AMQP links\"></xref>."
syntax: "public interface AmqpSession extends Disposable, AsyncCloseable"
methods:
- uid: "com.azure.core.amqp.AmqpSession.closeAsync()"
  fullName: "com.azure.core.amqp.AmqpSession.closeAsync()"
  name: "closeAsync()"
  nameWithType: "AmqpSession.closeAsync()"
  modifiers:
  - "default"
  syntax: "public default Mono<Void> closeAsync()"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.amqp.AmqpSession.commitTransaction(com.azure.core.amqp.AmqpTransaction)"
  fullName: "com.azure.core.amqp.AmqpSession.commitTransaction(AmqpTransaction transaction)"
  name: "commitTransaction(AmqpTransaction transaction)"
  nameWithType: "AmqpSession.commitTransaction(AmqpTransaction transaction)"
  summary: "Commit the transaction on the message broker."
  modifiers:
  - "abstract"
  parameters:
  - description: "to commit."
    name: "transaction"
    type: "<xref href=\"com.azure.core.amqp.AmqpTransaction?alt=com.azure.core.amqp.AmqpTransaction&text=AmqpTransaction\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> commitTransaction(AmqpTransaction transaction)"
  desc: "Commit the transaction on the message broker."
  returns:
    description: "A completable mono."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.amqp.AmqpSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  fullName: "com.azure.core.amqp.AmqpSession.createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  name: "createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  nameWithType: "AmqpSession.createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  summary: "Creates a new AMQP link that consumes events from the message broker."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the link."
    name: "linkName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The entity path this link connects to, so that it may read events from the message broker."
    name: "entityPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Timeout required for creating and opening an AMQP link."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "The retry policy to use when consuming messages."
    name: "retryPolicy"
    type: "<xref href=\"com.azure.core.amqp.AmqpRetryPolicy?alt=com.azure.core.amqp.AmqpRetryPolicy&text=AmqpRetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<AmqpLink> createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  desc: "Creates a new AMQP link that consumes events from the message broker."
  returns:
    description: "A newly created AMQP link."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.amqp.AmqpLink?alt=com.azure.core.amqp.AmqpLink&text=AmqpLink\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.amqp.AmqpSession.createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  fullName: "com.azure.core.amqp.AmqpSession.createProducer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  name: "createProducer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  nameWithType: "AmqpSession.createProducer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  summary: "Creates a new AMQP link that publishes events to the message broker."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the link."
    name: "linkName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The entity path this link connects to when producing events."
    name: "entityPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Timeout required for creating and opening AMQP link."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "The retry policy to use when sending messages."
    name: "retryPolicy"
    type: "<xref href=\"com.azure.core.amqp.AmqpRetryPolicy?alt=com.azure.core.amqp.AmqpRetryPolicy&text=AmqpRetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<AmqpLink> createProducer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  desc: "Creates a new AMQP link that publishes events to the message broker."
  returns:
    description: "A newly created AMQP link."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.amqp.AmqpLink?alt=com.azure.core.amqp.AmqpLink&text=AmqpLink\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.amqp.AmqpSession.createTransaction()"
  fullName: "com.azure.core.amqp.AmqpSession.createTransaction()"
  name: "createTransaction()"
  nameWithType: "AmqpSession.createTransaction()"
  summary: "Creates the transaction on the message broker."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<AmqpTransaction> createTransaction()"
  desc: "Creates the transaction on the message broker."
  returns:
    description: "A newly created AMQPTransaction."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.amqp.AmqpTransaction?alt=com.azure.core.amqp.AmqpTransaction&text=AmqpTransaction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.amqp.AmqpSession.getEndpointStates()"
  fullName: "com.azure.core.amqp.AmqpSession.getEndpointStates()"
  name: "getEndpointStates()"
  nameWithType: "AmqpSession.getEndpointStates()"
  summary: "Gets the endpoint states for the AMQP session."
  modifiers:
  - "abstract"
  syntax: "public abstract Flux<AmqpEndpointState> getEndpointStates()"
  desc: "Gets the endpoint states for the AMQP session. <xref uid=\"com.azure.core.amqp.exception.AmqpException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpExceptions\"></xref> that occur on the link are reported in the connection state. When the stream terminates, the session is closed."
  returns:
    description: "A stream of endpoint states for the AMQP session."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.amqp.AmqpEndpointState?alt=com.azure.core.amqp.AmqpEndpointState&text=AmqpEndpointState\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.amqp.AmqpSession.getOperationTimeout()"
  fullName: "com.azure.core.amqp.AmqpSession.getOperationTimeout()"
  name: "getOperationTimeout()"
  nameWithType: "AmqpSession.getOperationTimeout()"
  summary: "Gets the operation timeout for starting the AMQP session."
  modifiers:
  - "abstract"
  syntax: "public abstract Duration getOperationTimeout()"
  desc: "Gets the operation timeout for starting the AMQP session."
  returns:
    description: "The timeout for starting the AMQP session."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.amqp.AmqpSession.getOrCreateTransactionCoordinator()"
  fullName: "com.azure.core.amqp.AmqpSession.getOrCreateTransactionCoordinator()"
  name: "getOrCreateTransactionCoordinator()"
  nameWithType: "AmqpSession.getOrCreateTransactionCoordinator()"
  summary: "Gets an existing or newly created <xref uid=\"? extends com.azure.core.amqp.AmqpTransactionCoordinator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpTransactionCoordinator\"></xref> on the <xref uid=\"com.azure.core.amqp.AmqpSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpSession\"></xref> which maintains one instance of the <xref uid=\"? extends com.azure.core.amqp.AmqpTransactionCoordinator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpTransactionCoordinator\"></xref> object."
  modifiers:
  - "default"
  syntax: "public default Mono<? extends AmqpTransactionCoordinator> getOrCreateTransactionCoordinator()"
  desc: "Gets an existing or newly created <xref uid=\"? extends com.azure.core.amqp.AmqpTransactionCoordinator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpTransactionCoordinator\"></xref> on the <xref uid=\"com.azure.core.amqp.AmqpSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpSession\"></xref> which maintains one instance of the <xref uid=\"? extends com.azure.core.amqp.AmqpTransactionCoordinator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpTransactionCoordinator\"></xref> object. The <xref uid=\"? extends com.azure.core.amqp.AmqpTransactionCoordinator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpTransactionCoordinator\"></xref> is used to create/commit or rollback the transaction which can span over one or more message broker entities. The interface <xref uid=\"com.azure.core.amqp.AmqpSession\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpSession\"></xref> provides default implementation for back-word compatibility but it throws <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> to warn that an implementing class must override and provide implementation of this API. Azure SDK already provides implementation for this API."
  returns:
    description: "An existing or if it does not exists newly created <xref uid=\"? extends com.azure.core.amqp.AmqpTransactionCoordinator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpTransactionCoordinator\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends com.azure.core.amqp.AmqpTransactionCoordinator?alt=? extends com.azure.core.amqp.AmqpTransactionCoordinator&text=AmqpTransactionCoordinator\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.amqp.AmqpSession.getSessionName()"
  fullName: "com.azure.core.amqp.AmqpSession.getSessionName()"
  name: "getSessionName()"
  nameWithType: "AmqpSession.getSessionName()"
  summary: "Gets the name for this AMQP session."
  modifiers:
  - "abstract"
  syntax: "public abstract String getSessionName()"
  desc: "Gets the name for this AMQP session."
  returns:
    description: "The name for the AMQP session."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.amqp.AmqpSession.removeLink(java.lang.String)"
  fullName: "com.azure.core.amqp.AmqpSession.removeLink(String linkName)"
  name: "removeLink(String linkName)"
  nameWithType: "AmqpSession.removeLink(String linkName)"
  summary: "Removes an <xref uid=\"com.azure.core.amqp.AmqpLink\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpLink\"></xref> with the given `linkName`."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the link to remove."
    name: "linkName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract boolean removeLink(String linkName)"
  desc: "Removes an <xref uid=\"com.azure.core.amqp.AmqpLink\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpLink\"></xref> with the given `linkName`."
  returns:
    description: "<code>true</code> if the link was removed; <code>false</code> otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.amqp.AmqpSession.rollbackTransaction(com.azure.core.amqp.AmqpTransaction)"
  fullName: "com.azure.core.amqp.AmqpSession.rollbackTransaction(AmqpTransaction transaction)"
  name: "rollbackTransaction(AmqpTransaction transaction)"
  nameWithType: "AmqpSession.rollbackTransaction(AmqpTransaction transaction)"
  summary: "Rollback the transaction on the message broker."
  modifiers:
  - "abstract"
  parameters:
  - description: "to rollback"
    name: "transaction"
    type: "<xref href=\"com.azure.core.amqp.AmqpTransaction?alt=com.azure.core.amqp.AmqpTransaction&text=AmqpTransaction\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> rollbackTransaction(AmqpTransaction transaction)"
  desc: "Rollback the transaction on the message broker."
  returns:
    description: "A completable mono."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An AMQP session representing bidirectional communication that supports multiple <xref uid=\"com.azure.core.amqp.AmqpLink\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AMQP links\"></xref>."
implements:
- "<xref href=\"com.azure.core.util.AsyncCloseable?alt=com.azure.core.util.AsyncCloseable&text=AsyncCloseable\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"reactor.core.Disposable?alt=reactor.core.Disposable&text=Disposable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.amqp"
artifact: com.azure:azure-core-amqp:2.7.0
