### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.AmqpSession"
  id: "AmqpSession"
  parent: "com.azure.core.amqp"
  children:
  - "com.azure.core.amqp.AmqpSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  - "com.azure.core.amqp.AmqpSession.createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  - "com.azure.core.amqp.AmqpSession.getEndpointStates()"
  - "com.azure.core.amqp.AmqpSession.getOperationTimeout()"
  - "com.azure.core.amqp.AmqpSession.getSessionName()"
  - "com.azure.core.amqp.AmqpSession.removeLink(java.lang.String)"
  langs:
  - "java"
  name: "AmqpSession"
  nameWithType: "AmqpSession"
  fullName: "com.azure.core.amqp.AmqpSession"
  type: "Interface"
  package: "com.azure.core.amqp"
  summary: "An AMQP session representing bidirectional communication that supports multiple <xref uid=\"com.azure.core.amqp.AmqpLink\" data-throw-if-not-resolved=\"false\">AMQP links</xref>."
  syntax:
    content: "public interface AmqpSession extends Disposable"
  implements:
  - "reactor.core.Disposable"
- uid: "com.azure.core.amqp.AmqpSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  id: "createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  parent: "com.azure.core.amqp.AmqpSession"
  langs:
  - "java"
  name: "createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  nameWithType: "AmqpSession.createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  fullName: "com.azure.core.amqp.AmqpSession.createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  overload: "com.azure.core.amqp.AmqpSession.createConsumer*"
  type: "Method"
  package: "com.azure.core.amqp"
  summary: "Creates a new AMQP link that consumes events from the message broker."
  syntax:
    content: "public abstract Mono<AmqpLink> createConsumer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
      description: "Name of the link."
    - id: "entityPath"
      type: "java.lang.String"
      description: "The entity path this link connects to, so that it may read events from the message broker."
    - id: "timeout"
      type: "java.time.Duration"
      description: "Timeout required for creating and opening an AMQP link."
    - id: "retryPolicy"
      type: "com.azure.core.amqp.AmqpRetryPolicy"
      description: "The retry policy to use when consuming messages."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.AmqpLink>"
      description: "A newly created AMQP link."
- uid: "com.azure.core.amqp.AmqpSession.createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  id: "createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)"
  parent: "com.azure.core.amqp.AmqpSession"
  langs:
  - "java"
  name: "createProducer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  nameWithType: "AmqpSession.createProducer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  fullName: "com.azure.core.amqp.AmqpSession.createProducer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
  overload: "com.azure.core.amqp.AmqpSession.createProducer*"
  type: "Method"
  package: "com.azure.core.amqp"
  summary: "Creates a new AMQP link that publishes events to the message broker."
  syntax:
    content: "public abstract Mono<AmqpLink> createProducer(String linkName, String entityPath, Duration timeout, AmqpRetryPolicy retryPolicy)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
      description: "Name of the link."
    - id: "entityPath"
      type: "java.lang.String"
      description: "The entity path this link connects to when producing events."
    - id: "timeout"
      type: "java.time.Duration"
      description: "Timeout required for creating and opening AMQP link."
    - id: "retryPolicy"
      type: "com.azure.core.amqp.AmqpRetryPolicy"
      description: "The retry policy to use when sending messages."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.AmqpLink>"
      description: "A newly created AMQP link."
- uid: "com.azure.core.amqp.AmqpSession.getEndpointStates()"
  id: "getEndpointStates()"
  parent: "com.azure.core.amqp.AmqpSession"
  langs:
  - "java"
  name: "getEndpointStates()"
  nameWithType: "AmqpSession.getEndpointStates()"
  fullName: "com.azure.core.amqp.AmqpSession.getEndpointStates()"
  overload: "com.azure.core.amqp.AmqpSession.getEndpointStates*"
  type: "Method"
  package: "com.azure.core.amqp"
  summary: "Gets the endpoint states for the AMQP session. <xref uid=\"com.azure.core.amqp.exception.AmqpException\" data-throw-if-not-resolved=\"false\">AmqpExceptions</xref> that occur on the link are reported in the connection state. When the stream terminates, the session is closed."
  syntax:
    content: "public abstract Flux<AmqpEndpointState> getEndpointStates()"
    return:
      type: "reactor.core.publisher.Flux<com.azure.core.amqp.AmqpEndpointState>"
      description: "A stream of endpoint states for the AMQP session."
- uid: "com.azure.core.amqp.AmqpSession.getOperationTimeout()"
  id: "getOperationTimeout()"
  parent: "com.azure.core.amqp.AmqpSession"
  langs:
  - "java"
  name: "getOperationTimeout()"
  nameWithType: "AmqpSession.getOperationTimeout()"
  fullName: "com.azure.core.amqp.AmqpSession.getOperationTimeout()"
  overload: "com.azure.core.amqp.AmqpSession.getOperationTimeout*"
  type: "Method"
  package: "com.azure.core.amqp"
  summary: "Gets the operation timeout for starting the AMQP session."
  syntax:
    content: "public abstract Duration getOperationTimeout()"
    return:
      type: "java.time.Duration"
      description: "The timeout for starting the AMQP session."
- uid: "com.azure.core.amqp.AmqpSession.getSessionName()"
  id: "getSessionName()"
  parent: "com.azure.core.amqp.AmqpSession"
  langs:
  - "java"
  name: "getSessionName()"
  nameWithType: "AmqpSession.getSessionName()"
  fullName: "com.azure.core.amqp.AmqpSession.getSessionName()"
  overload: "com.azure.core.amqp.AmqpSession.getSessionName*"
  type: "Method"
  package: "com.azure.core.amqp"
  summary: "Gets the name for this AMQP session."
  syntax:
    content: "public abstract String getSessionName()"
    return:
      type: "java.lang.String"
      description: "The name for the AMQP session."
- uid: "com.azure.core.amqp.AmqpSession.removeLink(java.lang.String)"
  id: "removeLink(java.lang.String)"
  parent: "com.azure.core.amqp.AmqpSession"
  langs:
  - "java"
  name: "removeLink(String linkName)"
  nameWithType: "AmqpSession.removeLink(String linkName)"
  fullName: "com.azure.core.amqp.AmqpSession.removeLink(String linkName)"
  overload: "com.azure.core.amqp.AmqpSession.removeLink*"
  type: "Method"
  package: "com.azure.core.amqp"
  summary: "Removes an <xref uid=\"com.azure.core.amqp.AmqpLink\" data-throw-if-not-resolved=\"false\">AmqpLink</xref> with the given `linkName`."
  syntax:
    content: "public abstract boolean removeLink(String linkName)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
      description: "Name of the link to remove."
    return:
      type: "boolean"
      description: "<code>true</code> if the link was removed; <code>false</code> otherwise."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.amqp.AmqpSession.getSessionName*"
  name: "getSessionName"
  nameWithType: "AmqpSession.getSessionName"
  fullName: "com.azure.core.amqp.AmqpSession.getSessionName"
  package: "com.azure.core.amqp"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.core.amqp.AmqpSession.getOperationTimeout*"
  name: "getOperationTimeout"
  nameWithType: "AmqpSession.getOperationTimeout"
  fullName: "com.azure.core.amqp.AmqpSession.getOperationTimeout"
  package: "com.azure.core.amqp"
- uid: "com.azure.core.amqp.AmqpRetryPolicy"
  name: "AmqpRetryPolicy"
  nameWithType: "AmqpRetryPolicy"
  fullName: "com.azure.core.amqp.AmqpRetryPolicy"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.AmqpLink>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.AmqpLink"
    name: "AmqpLink"
    fullName: "com.azure.core.amqp.AmqpLink"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.AmqpSession.createProducer*"
  name: "createProducer"
  nameWithType: "AmqpSession.createProducer"
  fullName: "com.azure.core.amqp.AmqpSession.createProducer"
  package: "com.azure.core.amqp"
- uid: "com.azure.core.amqp.AmqpSession.createConsumer*"
  name: "createConsumer"
  nameWithType: "AmqpSession.createConsumer"
  fullName: "com.azure.core.amqp.AmqpSession.createConsumer"
  package: "com.azure.core.amqp"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.amqp.AmqpSession.removeLink*"
  name: "removeLink"
  nameWithType: "AmqpSession.removeLink"
  fullName: "com.azure.core.amqp.AmqpSession.removeLink"
  package: "com.azure.core.amqp"
- uid: "reactor.core.publisher.Flux<com.azure.core.amqp.AmqpEndpointState>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.AmqpEndpointState"
    name: "AmqpEndpointState"
    fullName: "com.azure.core.amqp.AmqpEndpointState"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.AmqpSession.getEndpointStates*"
  name: "getEndpointStates"
  nameWithType: "AmqpSession.getEndpointStates"
  fullName: "com.azure.core.amqp.AmqpSession.getEndpointStates"
  package: "com.azure.core.amqp"
- uid: "reactor.core.Disposable"
  name: "Disposable"
  nameWithType: "Disposable"
  fullName: "reactor.core.Disposable"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.core.amqp.AmqpLink"
  name: "AmqpLink"
  nameWithType: "AmqpLink"
  fullName: "com.azure.core.amqp.AmqpLink"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.core.amqp.AmqpEndpointState"
  name: "AmqpEndpointState"
  nameWithType: "AmqpEndpointState"
  fullName: "com.azure.core.amqp.AmqpEndpointState"
