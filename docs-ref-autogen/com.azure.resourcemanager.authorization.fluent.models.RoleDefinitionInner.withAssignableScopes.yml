### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner.withAssignableScopes*"
fullName: "com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner.withAssignableScopes"
name: "withAssignableScopes"
nameWithType: "RoleDefinitionInner.withAssignableScopes"
members:
- uid: "com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner.withAssignableScopes(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner.withAssignableScopes(List<String> assignableScopes)"
  name: "withAssignableScopes(List<String> assignableScopes)"
  nameWithType: "RoleDefinitionInner.withAssignableScopes(List<String> assignableScopes)"
  summary: "Set the assignableScopes property: Role definition assignable scopes."
  parameters:
  - description: "the assignableScopes value to set."
    name: "assignableScopes"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RoleDefinitionInner withAssignableScopes(List<String> assignableScopes)"
  returns:
    description: "the RoleDefinitionInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleDefinitionInner&text=RoleDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
