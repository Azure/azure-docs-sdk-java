### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.models.RoleAssignment"
fullName: "com.azure.resourcemanager.authorization.models.RoleAssignment"
name: "RoleAssignment"
nameWithType: "RoleAssignment"
summary: "An immutable client-side representation of an Azure AD role assignment."
syntax: "public interface RoleAssignment extends Indexable, HasInnerModel<RoleAssignmentInner>, HasId, HasName, HasManager<AuthorizationManager>"
methods:
- uid: "com.azure.resourcemanager.authorization.models.RoleAssignment.condition()"
  fullName: "com.azure.resourcemanager.authorization.models.RoleAssignment.condition()"
  name: "condition()"
  nameWithType: "RoleAssignment.condition()"
  modifiers:
  - "abstract"
  syntax: "public abstract String condition()"
  returns:
    description: "the condition"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.authorization.models.RoleAssignment.principalId()"
  fullName: "com.azure.resourcemanager.authorization.models.RoleAssignment.principalId()"
  name: "principalId()"
  nameWithType: "RoleAssignment.principalId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String principalId()"
  returns:
    description: "the principal ID"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.authorization.models.RoleAssignment.roleDefinitionId()"
  fullName: "com.azure.resourcemanager.authorization.models.RoleAssignment.roleDefinitionId()"
  name: "roleDefinitionId()"
  nameWithType: "RoleAssignment.roleDefinitionId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String roleDefinitionId()"
  returns:
    description: "the role definition ID"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.authorization.models.RoleAssignment.scope()"
  fullName: "com.azure.resourcemanager.authorization.models.RoleAssignment.scope()"
  name: "scope()"
  nameWithType: "RoleAssignment.scope()"
  modifiers:
  - "abstract"
  syntax: "public abstract String scope()"
  returns:
    description: "the role assignment scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
type: "interface"
desc: "An immutable client-side representation of an Azure AD role assignment."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.HasId?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasId&text=HasId\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.AuthorizationManager?alt=com.azure.resourcemanager.authorization.AuthorizationManager&text=AuthorizationManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.HasName?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasName&text=HasName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel?alt=com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel&text=HasInnerModel\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.authorization.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.19.0
