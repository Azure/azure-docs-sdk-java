### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.blob.BlockBlobURL
  id: BlockBlobURL
  parent: com.microsoft.azure.storage.blob
  children:
  - com.microsoft.azure.storage.blob.BlockBlobURL.BlockBlobURL(URL,HttpPipeline)
  - com.microsoft.azure.storage.blob.BlockBlobURL.commitBlockList(List<String>)
  - com.microsoft.azure.storage.blob.BlockBlobURL.commitBlockList(List<String>,BlobHTTPHeaders,Metadata,BlobAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlockBlobURL.getBlockList(BlockListType)
  - com.microsoft.azure.storage.blob.BlockBlobURL.getBlockList(BlockListType,LeaseAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlockBlobURL.MAX_BLOCKS
  - com.microsoft.azure.storage.blob.BlockBlobURL.MAX_STAGE_BLOCK_BYTES
  - com.microsoft.azure.storage.blob.BlockBlobURL.MAX_UPLOAD_BLOB_BYTES
  - com.microsoft.azure.storage.blob.BlockBlobURL.stageBlock(String,Flowable<ByteBuffer>,long)
  - com.microsoft.azure.storage.blob.BlockBlobURL.stageBlock(String,Flowable<ByteBuffer>,long,LeaseAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlockBlobURL.stageBlockFromURL(String,URL,BlobRange)
  - com.microsoft.azure.storage.blob.BlockBlobURL.stageBlockFromURL(String,URL,BlobRange,byte [],LeaseAccessConditions,SourceModifiedAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlockBlobURL.upload(Flowable<ByteBuffer>,long)
  - com.microsoft.azure.storage.blob.BlockBlobURL.upload(Flowable<ByteBuffer>,long,BlobHTTPHeaders,Metadata,BlobAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlockBlobURL.withPipeline(HttpPipeline)
  - com.microsoft.azure.storage.blob.BlockBlobURL.withSnapshot(String)
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: BlockBlobURL
  nameWithType: BlockBlobURL
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
      branch: master
      repo: https://github.com/Azure/azure-storage-java
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 37
  package: com.microsoft.azure.storage.blob
  summary: "<p>Represents a URL to a block blob. It may be obtained by direct construction or via the create method on a <xref uid=\"com.microsoft.azure.storage.blob.ContainerURL\" data-throw-if-not-resolved=\"false\">ContainerURL</xref> object. This class does not hold any state about a particular blob but is instead a convenient way of sending off appropriate requests to the resource on the service. Please refer to the <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/understanding-block-blobs&amp;ndash;append-blobs&amp;ndash;and-page-blobs\">Azure Docs</a> for more information on block blobs. </p>"
  syntax: &o1
    content: public class BlockBlobURL extends BlobURL
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.storage.blob.StorageURL
  - com.microsoft.azure.storage.blob.BlobURL
  inheritedMembers:
  - com.microsoft.azure.storage.blob.BlobURL.abortCopyFromURL(String)
  - com.microsoft.azure.storage.blob.BlobURL.abortCopyFromURL(String,LeaseAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlobURL.acquireLease(String,int)
  - com.microsoft.azure.storage.blob.BlobURL.acquireLease(String,int,ModifiedAccessConditions,Context)
  - com.microsoft.azure.storage.blob.StorageURL.appendToURLPath(URL,String)
  - com.microsoft.azure.storage.blob.BlobURL.BlobURL(URL,HttpPipeline)
  - com.microsoft.azure.storage.blob.BlobURL.breakLease()
  - com.microsoft.azure.storage.blob.BlobURL.breakLease(Integer,ModifiedAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlobURL.changeLease(String,String)
  - com.microsoft.azure.storage.blob.BlobURL.changeLease(String,String,ModifiedAccessConditions,Context)
  - com.microsoft.azure.storage.blob.StorageURL.createPipeline()
  - com.microsoft.azure.storage.blob.StorageURL.createPipeline(ICredentials)
  - com.microsoft.azure.storage.blob.StorageURL.createPipeline(PipelineOptions)
  - com.microsoft.azure.storage.blob.StorageURL.createPipeline(ICredentials,PipelineOptions)
  - com.microsoft.azure.storage.blob.BlobURL.createSnapshot()
  - com.microsoft.azure.storage.blob.BlobURL.createSnapshot(Metadata,BlobAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlobURL.delete()
  - com.microsoft.azure.storage.blob.BlobURL.delete(DeleteSnapshotsOptionType,BlobAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlobURL.download()
  - com.microsoft.azure.storage.blob.BlobURL.download(BlobRange,BlobAccessConditions,boolean,Context)
  - com.microsoft.azure.storage.blob.BlobURL.getAccountInfo()
  - com.microsoft.azure.storage.blob.BlobURL.getAccountInfo(Context)
  - com.microsoft.azure.storage.blob.BlobURL.getProperties()
  - com.microsoft.azure.storage.blob.BlobURL.getProperties(BlobAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlobURL.releaseLease(String)
  - com.microsoft.azure.storage.blob.BlobURL.releaseLease(String,ModifiedAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlobURL.renewLease(String)
  - com.microsoft.azure.storage.blob.BlobURL.renewLease(String,ModifiedAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlobURL.setHTTPHeaders(BlobHTTPHeaders)
  - com.microsoft.azure.storage.blob.BlobURL.setHTTPHeaders(BlobHTTPHeaders,BlobAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlobURL.setMetadata(Metadata)
  - com.microsoft.azure.storage.blob.BlobURL.setMetadata(Metadata,BlobAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlobURL.setTier(AccessTier)
  - com.microsoft.azure.storage.blob.BlobURL.setTier(AccessTier,LeaseAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlobURL.startCopyFromURL(URL)
  - com.microsoft.azure.storage.blob.BlobURL.startCopyFromURL(URL,Metadata,ModifiedAccessConditions,BlobAccessConditions,Context)
  - com.microsoft.azure.storage.blob.StorageURL.storageClient
  - com.microsoft.azure.storage.blob.StorageURL.StorageURL(URL,HttpPipeline)
  - com.microsoft.azure.storage.blob.BlobURL.syncCopyFromURL(URL)
  - com.microsoft.azure.storage.blob.BlobURL.syncCopyFromURL(URL,Metadata,ModifiedAccessConditions,BlobAccessConditions,Context)
  - com.microsoft.azure.storage.blob.BlobURL.toAppendBlobURL()
  - com.microsoft.azure.storage.blob.BlobURL.toBlockBlobURL()
  - com.microsoft.azure.storage.blob.BlobURL.toPageBlobURL()
  - com.microsoft.azure.storage.blob.StorageURL.toString()
  - com.microsoft.azure.storage.blob.StorageURL.toURL()
  - com.microsoft.azure.storage.blob.BlobURL.undelete()
  - com.microsoft.azure.storage.blob.BlobURL.undelete(Context)
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.BlockBlobURL(URL,HttpPipeline)
  id: BlockBlobURL(URL,HttpPipeline)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: BlockBlobURL(URL url, HttpPipeline pipeline)
  nameWithType: BlockBlobURL.BlockBlobURL(URL url, HttpPipeline pipeline)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.BlockBlobURL(URL url, HttpPipeline pipeline)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.BlockBlobURL*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 64
  package: com.microsoft.azure.storage.blob
  summary: "<p>Creates a<code>BlockBlobURL \r\n    </code> object pointing to the account specified by the URL and using the provided pipeline to make HTTP requests.</p>\r\n<p></p>"
  syntax:
    content: public BlockBlobURL(URL url, HttpPipeline pipeline)
    parameters:
    - id: url
      type: a891b3e6
      description: >-
        <p>A<code>URL 

            </code> to an Azure Storage block blob. </p>
    - id: pipeline
      type: 6fbf082c
      description: >-
        <p>A<code>HttpPipeline 

            </code> which configures the behavior of HTTP exchanges. Please refer to <xref uid="com.microsoft.azure.storage.blob.StorageURL.createPipeline(ICredentials,PipelineOptions)" data-throw-if-not-resolved="false">StorageURL#createPipeline(ICredentials, PipelineOptions)</xref> for more information. </p>
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.commitBlockList(List<String>)
  id: commitBlockList(List<String>)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: commitBlockList(List<String> base64BlockIDs)
  nameWithType: BlockBlobURL.commitBlockList(List<String> base64BlockIDs)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.commitBlockList(List<String> base64BlockIDs)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.commitBlockList*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 390
  package: com.microsoft.azure.storage.blob
  summary: "<p>Writes a blob by specifying the list of block IDs that are to make up the blob. In order to be written as part of a blob, a block must have been successfully written to the server in a prior stageBlock operation. You can call commitBlockList to update a blob by uploading only those blocks that have changed, then committing the new and existing blocks together. Any blocks not specified in the block list and permanently deleted. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-block-list\">Azure Docs</a>. </p>\r\n<p>For more efficient bulk-upload scenarios, please refer to the <xref uid=\"com.microsoft.azure.storage.blob.TransferManager\" data-throw-if-not-resolved=\"false\">TransferManager</xref> for convenience methods.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=blocks \"Sample code for BlockBlobURL.commitBlockList\")] \r\nFor more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public Single<BlockBlobCommitBlockListResponse> commitBlockList(List<String> base64BlockIDs)
    parameters:
    - id: base64BlockIDs
      type: 7d60c20e
      description: >-
        <p>A list of base64 encode<code>String 

            </code> s that specifies the block IDs to be committed.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.commitBlockList(List<String>,BlobHTTPHeaders,Metadata,BlobAccessConditions,Context)
  id: commitBlockList(List<String>,BlobHTTPHeaders,Metadata,BlobAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: commitBlockList(List<String> base64BlockIDs, BlobHTTPHeaders headers, Metadata metadata, BlobAccessConditions accessConditions, Context context)
  nameWithType: BlockBlobURL.commitBlockList(List<String> base64BlockIDs, BlobHTTPHeaders headers, Metadata metadata, BlobAccessConditions accessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.commitBlockList(List<String> base64BlockIDs, BlobHTTPHeaders headers, Metadata metadata, BlobAccessConditions accessConditions, Context context)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.commitBlockList*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 426
  package: com.microsoft.azure.storage.blob
  summary: "<p>Writes a blob by specifying the list of block IDs that are to make up the blob. In order to be written as part of a blob, a block must have been successfully written to the server in a prior stageBlock operation. You can call commitBlockList to update a blob by uploading only those blocks that have changed, then committing the new and existing blocks together. Any blocks not specified in the block list and permanently deleted. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-block-list\">Azure Docs</a>. </p>\r\n<p>For more efficient bulk-upload scenarios, please refer to the <xref uid=\"com.microsoft.azure.storage.blob.TransferManager\" data-throw-if-not-resolved=\"false\">TransferManager</xref> for convenience methods.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=blocks \"Sample code for BlockBlobURL.commitBlockList\")] \r\nFor more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public Single<BlockBlobCommitBlockListResponse> commitBlockList(List<String> base64BlockIDs, BlobHTTPHeaders headers, Metadata metadata, BlobAccessConditions accessConditions, Context context)
    parameters:
    - id: base64BlockIDs
      type: 7d60c20e
      description: >-
        <p>A list of base64 encode<code>String 

            </code> s that specifies the block IDs to be committed. </p>
    - id: headers
      type: com.microsoft.azure.storage.blob.models.BlobHTTPHeaders
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">BlobHTTPHeaders</xref>

        </p>
    - id: metadata
      type: com.microsoft.azure.storage.blob.Metadata
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.Metadata" data-throw-if-not-resolved="false">Metadata</xref>

        </p>
    - id: accessConditions
      type: com.microsoft.azure.storage.blob.BlobAccessConditions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobAccessConditions" data-throw-if-not-resolved="false">BlobAccessConditions</xref>

        </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.getBlockList(BlockListType)
  id: getBlockList(BlockListType)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: getBlockList(BlockListType listType)
  nameWithType: BlockBlobURL.getBlockList(BlockListType listType)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.getBlockList(BlockListType listType)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.getBlockList*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 335
  package: com.microsoft.azure.storage.blob
  summary: "<p>Returns the list of blocks that have been uploaded as part of a block blob using the specified block list filter. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/get-block-list\">Azure Docs</a>.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=blocks \"Sample code for BlockBlobURL.getBlockList\")] \r\nFor more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public Single<BlockBlobGetBlockListResponse> getBlockList(BlockListType listType)
    parameters:
    - id: listType
      type: com.microsoft.azure.storage.blob.models.BlockListType
      description: <p>Specifies which type of blocks to return.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobGetBlockListResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.getBlockList(BlockListType,LeaseAccessConditions,Context)
  id: getBlockList(BlockListType,LeaseAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: getBlockList(BlockListType listType, LeaseAccessConditions leaseAccessConditions, Context context)
  nameWithType: BlockBlobURL.getBlockList(BlockListType listType, LeaseAccessConditions leaseAccessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.getBlockList(BlockListType listType, LeaseAccessConditions leaseAccessConditions, Context context)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.getBlockList*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 362
  package: com.microsoft.azure.storage.blob
  summary: "<p>Returns the list of blocks that have been uploaded as part of a block blob using the specified block list filter. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/get-block-list\">Azure Docs</a>.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=blocks \"Sample code for BlockBlobURL.getBlockList\")] \r\nFor more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public Single<BlockBlobGetBlockListResponse> getBlockList(BlockListType listType, LeaseAccessConditions leaseAccessConditions, Context context)
    parameters:
    - id: listType
      type: com.microsoft.azure.storage.blob.models.BlockListType
      description: <p>Specifies which type of blocks to return. </p>
    - id: leaseAccessConditions
      type: com.microsoft.azure.storage.blob.models.LeaseAccessConditions
      description: <p>By setting lease access conditions, requests will fail if the provided lease does not match the active lease on the blob. </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobGetBlockListResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.MAX_BLOCKS
  id: MAX_BLOCKS
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: MAX_BLOCKS
  nameWithType: BlockBlobURL.MAX_BLOCKS
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.MAX_BLOCKS
  type: Field
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 52
  package: com.microsoft.azure.storage.blob
  summary: "<p>Indicates the maximum number of blocks allowed in a block blob. </p>"
  syntax:
    content: public static final int MAX_BLOCKS= 50000
    return:
      type: cd225469
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.MAX_STAGE_BLOCK_BYTES
  id: MAX_STAGE_BLOCK_BYTES
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: MAX_STAGE_BLOCK_BYTES
  nameWithType: BlockBlobURL.MAX_STAGE_BLOCK_BYTES
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.MAX_STAGE_BLOCK_BYTES
  type: Field
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 47
  package: com.microsoft.azure.storage.blob
  summary: "<p>Indicates the maximum number of bytes that can be sent in a call to stageBlock. </p>"
  syntax:
    content: public static final int MAX_STAGE_BLOCK_BYTES= 100 * Constants.MB
    return:
      type: cd225469
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.MAX_UPLOAD_BLOB_BYTES
  id: MAX_UPLOAD_BLOB_BYTES
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: MAX_UPLOAD_BLOB_BYTES
  nameWithType: BlockBlobURL.MAX_UPLOAD_BLOB_BYTES
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.MAX_UPLOAD_BLOB_BYTES
  type: Field
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 42
  package: com.microsoft.azure.storage.blob
  summary: "<p>Indicates the maximum number of bytes that can be sent in a call to upload. </p>"
  syntax:
    content: public static final int MAX_UPLOAD_BLOB_BYTES= 256 * Constants.MB
    return:
      type: cd225469
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlock(String,Flowable<ByteBuffer>,long)
  id: stageBlock(String,Flowable<ByteBuffer>,long)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: stageBlock(String base64BlockID, Flowable<ByteBuffer> data, long length)
  nameWithType: BlockBlobURL.stageBlock(String base64BlockID, Flowable<ByteBuffer> data, long length)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlock(String base64BlockID, Flowable<ByteBuffer> data, long length)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlock*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 201
  package: com.microsoft.azure.storage.blob
  summary: "<p>Uploads the specified block to the block blob's \"staging area\" to be later committed by a call to commitBlockList. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-block\">Azure Docs</a>. </p>\r\n<p>Note that the data passed must be replayable if retries are enabled (the default). In other words, the <code>Flowable \r\n    </code> must produce the same data each time it is subscribed to.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=blocks \"Sample code for BlockBlobURL.stageBlock\")] \r\nFor more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public Single<BlockBlobStageBlockResponse> stageBlock(String base64BlockID, Flowable<ByteBuffer> data, long length)
    parameters:
    - id: base64BlockID
      type: "26831127"
      description: >-
        <p>A Base64 encoded<code>String 

            </code> that specifies the ID for this block. Note that all block ids for a given blob must be the same length. </p>
    - id: data
      type: e919870b
      description: >-
        <p>The data to write to the block. Note that this<code>Flowable 

            </code> must be replayable if retries are enabled (the default). In other words, the Flowable must produce the same data each time it is subscribed to. </p>
    - id: length
      type: 0364520f
      description: >-
        <p>The exact length of the data. It is important that this value match precisely the length of the data emitted by the<code>Flowable 

            </code> .</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobStageBlockResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlock(String,Flowable<ByteBuffer>,long,LeaseAccessConditions,Context)
  id: stageBlock(String,Flowable<ByteBuffer>,long,LeaseAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: stageBlock(String base64BlockID, Flowable<ByteBuffer> data, long length, LeaseAccessConditions leaseAccessConditions, Context context)
  nameWithType: BlockBlobURL.stageBlock(String base64BlockID, Flowable<ByteBuffer> data, long length, LeaseAccessConditions leaseAccessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlock(String base64BlockID, Flowable<ByteBuffer> data, long length, LeaseAccessConditions leaseAccessConditions, Context context)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlock*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 239
  package: com.microsoft.azure.storage.blob
  summary: "<p>Uploads the specified block to the block blob's \"staging area\" to be later committed by a call to commitBlockList. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-block\">Azure Docs</a>. </p>\r\n<p>Note that the data passed must be replayable if retries are enabled (the default). In other words, the <code>Flowable \r\n    </code> must produce the same data each time it is subscribed to.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=blocks \"Sample code for BlockBlobURL.stageBlock\")] \r\nFor more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public Single<BlockBlobStageBlockResponse> stageBlock(String base64BlockID, Flowable<ByteBuffer> data, long length, LeaseAccessConditions leaseAccessConditions, Context context)
    parameters:
    - id: base64BlockID
      type: "26831127"
      description: >-
        <p>A Base64 encoded<code>String 

            </code> that specifies the ID for this block. Note that all block ids for a given blob must be the same length. </p>
    - id: data
      type: e919870b
      description: >-
        <p>The data to write to the block. Note that this<code>Flowable 

            </code> must be replayable if retries are enabled (the default). In other words, the Flowable must produce the same data each time it is subscribed to. </p>
    - id: length
      type: 0364520f
      description: >-
        <p>The exact length of the data. It is important that this value match precisely the length of the data emitted by the<code>Flowable 

            </code> . </p>
    - id: leaseAccessConditions
      type: com.microsoft.azure.storage.blob.models.LeaseAccessConditions
      description: <p>By setting lease access conditions, requests will fail if the provided lease does not match the active lease on the blob. </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobStageBlockResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlockFromURL(String,URL,BlobRange)
  id: stageBlockFromURL(String,URL,BlobRange)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: stageBlockFromURL(String base64BlockID, URL sourceURL, BlobRange sourceRange)
  nameWithType: BlockBlobURL.stageBlockFromURL(String base64BlockID, URL sourceURL, BlobRange sourceRange)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlockFromURL(String base64BlockID, URL sourceURL, BlobRange sourceRange)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlockFromURL*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 268
  package: com.microsoft.azure.storage.blob
  summary: "<p>Creates a new block to be committed as part of a blob where the contents are read from a URL. For more information, see the <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\">Azure Docs</a>.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=block_from_url \"Sample code for BlockBlobURL.stageBlockFromURL\")] For more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public Single<BlockBlobStageBlockFromURLResponse> stageBlockFromURL(String base64BlockID, URL sourceURL, BlobRange sourceRange)
    parameters:
    - id: base64BlockID
      type: "26831127"
      description: >-
        <p>A Base64 encoded<code>String 

            </code> that specifies the ID for this block. Note that all block ids for a given blob must be the same length. </p>
    - id: sourceURL
      type: a891b3e6
      description: <p>The url to the blob that will be the source of the copy. A source blob in the same storage account can be authenticated via Shared Key. However, if the source is a blob in another account, the source blob must either be public or must be authenticated via a shared access signature. If the source blob is public, no authentication is required to perform the operation. </p>
    - id: sourceRange
      type: com.microsoft.azure.storage.blob.BlobRange
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>

        </p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobStageBlockFromURLResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlockFromURL(String,URL,BlobRange,byte [],LeaseAccessConditions,SourceModifiedAccessConditions,Context)
  id: stageBlockFromURL(String,URL,BlobRange,byte [],LeaseAccessConditions,SourceModifiedAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: stageBlockFromURL(String base64BlockID, URL sourceURL, BlobRange sourceRange, byte[] sourceContentMD5, LeaseAccessConditions leaseAccessConditions, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)
  nameWithType: BlockBlobURL.stageBlockFromURL(String base64BlockID, URL sourceURL, BlobRange sourceRange, byte[] sourceContentMD5, LeaseAccessConditions leaseAccessConditions, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlockFromURL(String base64BlockID, URL sourceURL, BlobRange sourceRange, byte[] sourceContentMD5, LeaseAccessConditions leaseAccessConditions, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlockFromURL*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 309
  package: com.microsoft.azure.storage.blob
  summary: "<p>Creates a new block to be committed as part of a blob where the contents are read from a URL. For more information, see the <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\">Azure Docs</a>.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=block_from_url \"Sample code for BlockBlobURL.stageBlockFromURL\")] For more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public Single<BlockBlobStageBlockFromURLResponse> stageBlockFromURL(String base64BlockID, URL sourceURL, BlobRange sourceRange, byte[] sourceContentMD5, LeaseAccessConditions leaseAccessConditions, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)
    parameters:
    - id: base64BlockID
      type: "26831127"
      description: >-
        <p>A Base64 encoded<code>String 

            </code> that specifies the ID for this block. Note that all block ids for a given blob must be the same length. </p>
    - id: sourceURL
      type: a891b3e6
      description: <p>The url to the blob that will be the source of the copy. A source blob in the same storage account can be authenticated via Shared Key. However, if the source is a blob in another account, the source blob must either be public or must be authenticated via a shared access signature. If the source blob is public, no authentication is required to perform the operation. </p>
    - id: sourceRange
      type: com.microsoft.azure.storage.blob.BlobRange
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>

        </p>
    - id: sourceContentMD5
      type: ccd9418d
      description: <p>An MD5 hash of the block content from the source blob. If specified, the service will calculate the MD5 of the received data and fail the request if it does not match the provided MD5. </p>
    - id: leaseAccessConditions
      type: com.microsoft.azure.storage.blob.models.LeaseAccessConditions
      description: <p>By setting lease access conditions, requests will fail if the provided lease does not match the active lease on the blob. </p>
    - id: sourceModifiedAccessConditions
      type: com.microsoft.azure.storage.blob.models.SourceModifiedAccessConditions
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">SourceModifiedAccessConditions</xref>

        </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobStageBlockFromURLResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.upload(Flowable<ByteBuffer>,long)
  id: upload(Flowable<ByteBuffer>,long)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: upload(Flowable<ByteBuffer> data, long length)
  nameWithType: BlockBlobURL.upload(Flowable<ByteBuffer> data, long length)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.upload(Flowable<ByteBuffer> data, long length)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.upload*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 124
  package: com.microsoft.azure.storage.blob
  summary: "<p>Creates a new block blob, or updates the content of an existing block blob. Updating an existing block blob overwrites any existing metadata on the blob. Partial updates are not supported with PutBlob; the content of the existing blob is overwritten with the new content. To perform a partial update of a block blob's, use PutBlock and PutBlockList. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-blob\">Azure Docs</a>. </p>\r\n<p>Note that the data passed must be replayable if retries are enabled (the default). In other words, the <code>Flowable \r\n    </code> must produce the same data each time it is subscribed to. </p>\r\n<p>For more efficient bulk-upload scenarios, please refer to the <xref uid=\"com.microsoft.azure.storage.blob.TransferManager\" data-throw-if-not-resolved=\"false\">TransferManager</xref> for convenience methods.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=upload_download \"Sample code for BlockBlobURL.upload\")] \r\nFor more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public Single<BlockBlobUploadResponse> upload(Flowable<ByteBuffer> data, long length)
    parameters:
    - id: data
      type: e919870b
      description: >-
        <p>The data to write to the blob. Note that this<code>Flowable 

            </code> must be replayable if retries are enabled (the default). In other words, the Flowable must produce the same data each time it is subscribed to. </p>
    - id: length
      type: 0364520f
      description: >-
        <p>The exact length of the data. It is important that this value match precisely the length of the data emitted by the<code>Flowable 

            </code> .</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobUploadResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.upload(Flowable<ByteBuffer>,long,BlobHTTPHeaders,Metadata,BlobAccessConditions,Context)
  id: upload(Flowable<ByteBuffer>,long,BlobHTTPHeaders,Metadata,BlobAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: upload(Flowable<ByteBuffer> data, long length, BlobHTTPHeaders headers, Metadata metadata, BlobAccessConditions accessConditions, Context context)
  nameWithType: BlockBlobURL.upload(Flowable<ByteBuffer> data, long length, BlobHTTPHeaders headers, Metadata metadata, BlobAccessConditions accessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.upload(Flowable<ByteBuffer> data, long length, BlobHTTPHeaders headers, Metadata metadata, BlobAccessConditions accessConditions, Context context)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.upload*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 166
  package: com.microsoft.azure.storage.blob
  summary: "<p>Creates a new block blob, or updates the content of an existing block blob. Updating an existing block blob overwrites any existing metadata on the blob. Partial updates are not supported with PutBlob; the content of the existing blob is overwritten with the new content. To perform a partial update of a block blob's, use PutBlock and PutBlockList. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-blob\">Azure Docs</a>. </p>\r\n<p>Note that the data passed must be replayable if retries are enabled (the default). In other words, the <code>Flowable \r\n    </code> must produce the same data each time it is subscribed to. </p>\r\n<p>For more efficient bulk-upload scenarios, please refer to the <xref uid=\"com.microsoft.azure.storage.blob.TransferManager\" data-throw-if-not-resolved=\"false\">TransferManager</xref> for convenience methods.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=upload_download \"Sample code for BlockBlobURL.upload\")] \r\nFor more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public Single<BlockBlobUploadResponse> upload(Flowable<ByteBuffer> data, long length, BlobHTTPHeaders headers, Metadata metadata, BlobAccessConditions accessConditions, Context context)
    parameters:
    - id: data
      type: e919870b
      description: >-
        <p>The data to write to the blob. Note that this<code>Flowable 

            </code> must be replayable if retries are enabled (the default). In other words, the Flowable must produce the same data each time it is subscribed to. </p>
    - id: length
      type: 0364520f
      description: >-
        <p>The exact length of the data. It is important that this value match precisely the length of the data emitted by the<code>Flowable 

            </code> . </p>
    - id: headers
      type: com.microsoft.azure.storage.blob.models.BlobHTTPHeaders
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">BlobHTTPHeaders</xref>

        </p>
    - id: metadata
      type: com.microsoft.azure.storage.blob.Metadata
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.Metadata" data-throw-if-not-resolved="false">Metadata</xref>

        </p>
    - id: accessConditions
      type: com.microsoft.azure.storage.blob.BlobAccessConditions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobAccessConditions" data-throw-if-not-resolved="false">BlobAccessConditions</xref>

        </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobUploadResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.withPipeline(HttpPipeline)
  id: withPipeline(HttpPipeline)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: withPipeline(HttpPipeline pipeline)
  nameWithType: BlockBlobURL.withPipeline(HttpPipeline pipeline)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.withPipeline(HttpPipeline pipeline)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.withPipeline*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 76
  package: com.microsoft.azure.storage.blob
  summary: "<p>Creates a new <xref uid=\"com.microsoft.azure.storage.blob.BlockBlobURL\" data-throw-if-not-resolved=\"false\">BlockBlobURL</xref> with the given pipeline.</p>\r\n<p></p>"
  syntax:
    content: public BlockBlobURL withPipeline(HttpPipeline pipeline)
    parameters:
    - id: pipeline
      type: 6fbf082c
      description: <p>An <xref uid="" data-throw-if-not-resolved="false">HttpPipeline</xref> object to set.</p>
    return:
      type: com.microsoft.azure.storage.blob.BlockBlobURL
      description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlockBlobURL" data-throw-if-not-resolved="false">BlockBlobURL</xref> object with the given pipeline. </p>
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.withSnapshot(String)
  id: withSnapshot(String)
  parent: com.microsoft.azure.storage.blob.BlockBlobURL
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  langs:
  - java
  name: withSnapshot(String snapshot)
  nameWithType: BlockBlobURL.withSnapshot(String snapshot)
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.withSnapshot(String snapshot)
  overload: com.microsoft.azure.storage.blob.BlockBlobURL.withSnapshot*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/BlockBlobURL.java
    startLine: 92
  package: com.microsoft.azure.storage.blob
  summary: "<p>Creates a new <xref uid=\"com.microsoft.azure.storage.blob.BlockBlobURL\" data-throw-if-not-resolved=\"false\">BlockBlobURL</xref> with the given snapshot.</p>\r\n<p></p>"
  syntax:
    content: public BlockBlobURL withSnapshot(String snapshot)
    parameters:
    - id: snapshot
      type: "26831127"
      description: >-
        <p>A<code>String 

            </code> of the snapshot identifier.</p>
    return:
      type: com.microsoft.azure.storage.blob.BlockBlobURL
      description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlockBlobURL" data-throw-if-not-resolved="false">BlockBlobURL</xref> object with the given pipeline. </p>
references:
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: a891b3e6
  spec.java:
  - name: URL
    fullName: URL
- uid: 6fbf082c
  spec.java:
  - name: HttpPipeline
    fullName: HttpPipeline
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.BlockBlobURL*
  name: BlockBlobURL
  nameWithType: BlockBlobURL.BlockBlobURL
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.BlockBlobURL
  package: com.microsoft.azure.storage.blob
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.withPipeline*
  name: withPipeline
  nameWithType: BlockBlobURL.withPipeline
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.withPipeline
  package: com.microsoft.azure.storage.blob
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.withSnapshot*
  name: withSnapshot
  nameWithType: BlockBlobURL.withSnapshot
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.withSnapshot
  package: com.microsoft.azure.storage.blob
- uid: e919870b
  spec.java:
  - name: Flowable<ByteBuffer>
    fullName: Flowable<ByteBuffer>
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobUploadResponsea08ddfce
  spec.java:
  - name: Single<
    fullName: Single<
  - uid: com.microsoft.azure.storage.blob.models.BlockBlobUploadResponse
    name: BlockBlobUploadResponse
    fullName: com.microsoft.azure.storage.blob.models.BlockBlobUploadResponse
    href: com.microsoft.azure.storage.blob.models.BlockBlobUploadResponse.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.upload*
  name: upload
  nameWithType: BlockBlobURL.upload
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.upload
  package: com.microsoft.azure.storage.blob
- uid: 64204ead
  spec.java:
  - name: Context
    fullName: Context
- uid: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobStageBlockResponsea08ddfce
  spec.java:
  - name: Single<
    fullName: Single<
  - uid: com.microsoft.azure.storage.blob.models.BlockBlobStageBlockResponse
    name: BlockBlobStageBlockResponse
    fullName: com.microsoft.azure.storage.blob.models.BlockBlobStageBlockResponse
    href: com.microsoft.azure.storage.blob.models.BlockBlobStageBlockResponse.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlock*
  name: stageBlock
  nameWithType: BlockBlobURL.stageBlock
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlock
  package: com.microsoft.azure.storage.blob
- uid: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobStageBlockFromURLResponsea08ddfce
  spec.java:
  - name: Single<
    fullName: Single<
  - uid: com.microsoft.azure.storage.blob.models.BlockBlobStageBlockFromURLResponse
    name: BlockBlobStageBlockFromURLResponse
    fullName: com.microsoft.azure.storage.blob.models.BlockBlobStageBlockFromURLResponse
    href: com.microsoft.azure.storage.blob.models.BlockBlobStageBlockFromURLResponse.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlockFromURL*
  name: stageBlockFromURL
  nameWithType: BlockBlobURL.stageBlockFromURL
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.stageBlockFromURL
  package: com.microsoft.azure.storage.blob
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobGetBlockListResponsea08ddfce
  spec.java:
  - name: Single<
    fullName: Single<
  - uid: com.microsoft.azure.storage.blob.models.BlockBlobGetBlockListResponse
    name: BlockBlobGetBlockListResponse
    fullName: com.microsoft.azure.storage.blob.models.BlockBlobGetBlockListResponse
    href: com.microsoft.azure.storage.blob.models.BlockBlobGetBlockListResponse.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.getBlockList*
  name: getBlockList
  nameWithType: BlockBlobURL.getBlockList
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.getBlockList
  package: com.microsoft.azure.storage.blob
- uid: 7d60c20e
  spec.java:
  - name: List<String>
    fullName: List<String>
- uid: 449e6419com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponsea08ddfce
  spec.java:
  - name: Single<
    fullName: Single<
  - uid: com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponse
    name: BlockBlobCommitBlockListResponse
    fullName: com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponse
    href: com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponse.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.blob.BlockBlobURL.commitBlockList*
  name: commitBlockList
  nameWithType: BlockBlobURL.commitBlockList
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL.commitBlockList
  package: com.microsoft.azure.storage.blob
- uid: com.microsoft.azure.storage.blob.BlobURL.abortCopyFromURL(String)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: abortCopyFromURL(String copyId)
  nameWithType: BlobURL.abortCopyFromURL(String copyId)
  fullName: com.microsoft.azure.storage.blob.BlobURL.abortCopyFromURL(String copyId)
  type: Method
  summary: "<p>Stops a pending copy that was previously started and leaves a destination blob with 0 length and metadata. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/abort-copy-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobAbortCopyFromURLResponse> abortCopyFromURL(String copyId)
    parameters:
    - id: copyId
      type: "26831127"
      description: >-
        <p>The id of the copy operation to abort. Returned as the<code>copyId 

            </code> field on the <xref uid="" data-throw-if-not-resolved="false">BlobStartCopyFromURLHeaders</xref> object.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobAbortCopyFromURLResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.abortCopyFromURL(String,LeaseAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: abortCopyFromURL(String copyId, LeaseAccessConditions leaseAccessConditions, Context context)
  nameWithType: BlobURL.abortCopyFromURL(String copyId, LeaseAccessConditions leaseAccessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.abortCopyFromURL(String copyId, LeaseAccessConditions leaseAccessConditions, Context context)
  type: Method
  summary: "<p>Stops a pending copy that was previously started and leaves a destination blob with 0 length and metadata. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/abort-copy-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobAbortCopyFromURLResponse> abortCopyFromURL(String copyId, LeaseAccessConditions leaseAccessConditions, Context context)
    parameters:
    - id: copyId
      type: "26831127"
      description: >-
        <p>The id of the copy operation to abort. Returned as the<code>copyId 

            </code> field on the <xref uid="" data-throw-if-not-resolved="false">BlobStartCopyFromURLHeaders</xref> object. </p>
    - id: leaseAccessConditions
      type: com.microsoft.azure.storage.blob.models.LeaseAccessConditions
      description: <p>By setting lease access conditions, requests will fail if the provided lease does not match the active lease on the blob. </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobAbortCopyFromURLResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.acquireLease(String,int)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: acquireLease(String proposedId, int duration)
  nameWithType: BlobURL.acquireLease(String proposedId, int duration)
  fullName: com.microsoft.azure.storage.blob.BlobURL.acquireLease(String proposedId, int duration)
  type: Method
  summary: "<p>Acquires a lease on the blob for write and delete operations. The lease duration must be between 15 to 60 seconds, or infinite (-1). For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/lease-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobAcquireLeaseResponse> acquireLease(String proposedId, int duration)
    parameters:
    - id: proposedId
      type: "26831127"
      description: >-
        <p>A<code>String 

            </code> in any valid GUID format. May be null. </p>
    - id: duration
      type: f75371fa
      description: <p>The duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobAcquireLeaseResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.acquireLease(String,int,ModifiedAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: acquireLease(String proposedID, int duration, ModifiedAccessConditions modifiedAccessConditions, Context context)
  nameWithType: BlobURL.acquireLease(String proposedID, int duration, ModifiedAccessConditions modifiedAccessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.acquireLease(String proposedID, int duration, ModifiedAccessConditions modifiedAccessConditions, Context context)
  type: Method
  summary: "<p>Acquires a lease on the blob for write and delete operations. The lease duration must be between 15 to 60 seconds, or infinite (-1). For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/lease-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobAcquireLeaseResponse> acquireLease(String proposedID, int duration, ModifiedAccessConditions modifiedAccessConditions, Context context)
    parameters:
    - id: proposedID
      type: "26831127"
      description: >-
        <p>A<code>String 

            </code> in any valid GUID format. May be null. </p>
    - id: duration
      type: f75371fa
      description: <p>The duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. </p>
    - id: modifiedAccessConditions
      type: com.microsoft.azure.storage.blob.models.ModifiedAccessConditions
      description: <p>Standard HTTP Access conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions related to when the blob was changed relative to the given request. The request will fail if the specified condition is not satisfied. </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobAcquireLeaseResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.StorageURL.appendToURLPath(URL,String)
  parent: com.microsoft.azure.storage.blob.StorageURL
  href: com.microsoft.azure.storage.blob.StorageURL.yml
  name: appendToURLPath(URL baseURL, String name)
  nameWithType: StorageURL.appendToURLPath(URL baseURL, String name)
  fullName: com.microsoft.azure.storage.blob.StorageURL.appendToURLPath(URL baseURL, String name)
  type: Method
  summary: "<p>Appends a string to the end of a URL's path (prefixing the string with a '/' if required).</p>\r\n<p></p>"
  syntax:
    content: protected static URL appendToURLPath(URL baseURL, String name)
    parameters:
    - id: baseURL
      type: a891b3e6
      description: <p>The url to which the name should be appended. </p>
    - id: name
      type: "26831127"
      description: <p>The name to be appended.</p>
    return:
      type: a891b3e6
      description: <p>A url with the name appended.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.BlobURL(URL,HttpPipeline)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: BlobURL(URL url, HttpPipeline pipeline)
  nameWithType: BlobURL.BlobURL(URL url, HttpPipeline pipeline)
  fullName: com.microsoft.azure.storage.blob.BlobURL.BlobURL(URL url, HttpPipeline pipeline)
  type: Constructor
  summary: "<p>Creates a<code>BlobURL \r\n    </code> object pointing to the account specified by the URL and using the provided pipeline to make HTTP requests.</p>\r\n<p></p>"
  syntax:
    content: public BlobURL(URL url, HttpPipeline pipeline)
    parameters:
    - id: url
      type: a891b3e6
      description: >-
        <p>A<code>URL 

            </code> to an Azure Storage blob. </p>
    - id: pipeline
      type: 6fbf082c
      description: >-
        <p>A<code>HttpPipeline 

            </code> which configures the behavior of HTTP exchanges. Please refer to <xref uid="com.microsoft.azure.storage.blob.StorageURL.createPipeline(ICredentials,PipelineOptions)" data-throw-if-not-resolved="false">StorageURL#createPipeline(ICredentials, PipelineOptions)</xref> for more information. </p>
- uid: com.microsoft.azure.storage.blob.BlobURL.breakLease()
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: breakLease()
  nameWithType: BlobURL.breakLease()
  fullName: com.microsoft.azure.storage.blob.BlobURL.breakLease()
  type: Method
  summary: "<p>BreakLease breaks the blob's previously-acquired lease (if it exists). Pass the LeaseBreakDefault (-1) constant to break a fixed-duration lease when it expires or an infinite lease immediately. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/lease-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobBreakLeaseResponse> breakLease()
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobBreakLeaseResponsea08ddfce
      description: <p>Emits the successful response. </p>
- uid: com.microsoft.azure.storage.blob.BlobURL.breakLease(Integer,ModifiedAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: breakLease(Integer breakPeriodInSeconds, ModifiedAccessConditions modifiedAccessConditions, Context context)
  nameWithType: BlobURL.breakLease(Integer breakPeriodInSeconds, ModifiedAccessConditions modifiedAccessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.breakLease(Integer breakPeriodInSeconds, ModifiedAccessConditions modifiedAccessConditions, Context context)
  type: Method
  summary: "<p>BreakLease breaks the blob's previously-acquired lease (if it exists). Pass the LeaseBreakDefault (-1) constant to break a fixed-duration lease when it expires or an infinite lease immediately. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/lease-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobBreakLeaseResponse> breakLease(Integer breakPeriodInSeconds, ModifiedAccessConditions modifiedAccessConditions, Context context)
    parameters:
    - id: breakPeriodInSeconds
      type: 08effaa0
      description: >-
        <p>An optional<code>Integer 

            </code> representing the proposed duration of seconds that the lease should continue before it is broken, between 0 and 60 seconds. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. </p>
    - id: modifiedAccessConditions
      type: com.microsoft.azure.storage.blob.models.ModifiedAccessConditions
      description: <p>Standard HTTP Access conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions related to when the blob was changed relative to the given request. The request will fail if the specified condition is not satisfied. </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobBreakLeaseResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.changeLease(String,String)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: changeLease(String leaseId, String proposedID)
  nameWithType: BlobURL.changeLease(String leaseId, String proposedID)
  fullName: com.microsoft.azure.storage.blob.BlobURL.changeLease(String leaseId, String proposedID)
  type: Method
  summary: "<p>ChangeLease changes the blob's lease ID. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/lease-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobChangeLeaseResponse> changeLease(String leaseId, String proposedID)
    parameters:
    - id: leaseId
      type: "26831127"
      description: <p>The leaseId of the active lease on the blob. </p>
    - id: proposedID
      type: "26831127"
      description: >-
        <p>A<code>String 

            </code> in any valid GUID format.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobChangeLeaseResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.changeLease(String,String,ModifiedAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: changeLease(String leaseId, String proposedID, ModifiedAccessConditions modifiedAccessConditions, Context context)
  nameWithType: BlobURL.changeLease(String leaseId, String proposedID, ModifiedAccessConditions modifiedAccessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.changeLease(String leaseId, String proposedID, ModifiedAccessConditions modifiedAccessConditions, Context context)
  type: Method
  summary: "<p>ChangeLease changes the blob's lease ID. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/lease-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobChangeLeaseResponse> changeLease(String leaseId, String proposedID, ModifiedAccessConditions modifiedAccessConditions, Context context)
    parameters:
    - id: leaseId
      type: "26831127"
      description: <p>The leaseId of the active lease on the blob. </p>
    - id: proposedID
      type: "26831127"
      description: >-
        <p>A<code>String 

            </code> in any valid GUID format. </p>
    - id: modifiedAccessConditions
      type: com.microsoft.azure.storage.blob.models.ModifiedAccessConditions
      description: <p>Standard HTTP Access conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions related to when the blob was changed relative to the given request. The request will fail if the specified condition is not satisfied. </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobChangeLeaseResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.StorageURL.createPipeline()
  parent: com.microsoft.azure.storage.blob.StorageURL
  href: com.microsoft.azure.storage.blob.StorageURL.yml
  name: createPipeline()
  nameWithType: StorageURL.createPipeline()
  fullName: com.microsoft.azure.storage.blob.StorageURL.createPipeline()
  type: Method
  summary: "<p>Creates an pipeline to process the HTTP requests and Responses.</p>\r\n<p></p>"
  syntax:
    content: public static HttpPipeline createPipeline()
    return:
      type: 6fbf082c
      description: <p>The pipeline. </p>
- uid: com.microsoft.azure.storage.blob.StorageURL.createPipeline(ICredentials)
  parent: com.microsoft.azure.storage.blob.StorageURL
  href: com.microsoft.azure.storage.blob.StorageURL.yml
  name: createPipeline(ICredentials credentials)
  nameWithType: StorageURL.createPipeline(ICredentials credentials)
  fullName: com.microsoft.azure.storage.blob.StorageURL.createPipeline(ICredentials credentials)
  type: Method
  summary: "<p>Creates an pipeline to process the HTTP requests and Responses.</p>\r\n<p></p>"
  syntax:
    content: public static HttpPipeline createPipeline(ICredentials credentials)
    parameters:
    - id: credentials
      type: com.microsoft.azure.storage.blob.ICredentials
      description: <p>The credentials the pipeline will use to authenticate the requests.</p>
    return:
      type: 6fbf082c
      description: <p>The pipeline. </p>
- uid: com.microsoft.azure.storage.blob.StorageURL.createPipeline(PipelineOptions)
  parent: com.microsoft.azure.storage.blob.StorageURL
  href: com.microsoft.azure.storage.blob.StorageURL.yml
  name: createPipeline(PipelineOptions pipelineOptions)
  nameWithType: StorageURL.createPipeline(PipelineOptions pipelineOptions)
  fullName: com.microsoft.azure.storage.blob.StorageURL.createPipeline(PipelineOptions pipelineOptions)
  type: Method
  summary: "<p>Creates an pipeline to process the HTTP requests and Responses.</p>\r\n<p></p>"
  syntax:
    content: public static HttpPipeline createPipeline(PipelineOptions pipelineOptions)
    parameters:
    - id: pipelineOptions
      type: com.microsoft.azure.storage.blob.PipelineOptions
      description: <p>Configurations for each policy in the pipeline. </p>
    return:
      type: 6fbf082c
      description: <p>The pipeline. </p>
- uid: com.microsoft.azure.storage.blob.StorageURL.createPipeline(ICredentials,PipelineOptions)
  parent: com.microsoft.azure.storage.blob.StorageURL
  href: com.microsoft.azure.storage.blob.StorageURL.yml
  name: createPipeline(ICredentials credentials, PipelineOptions pipelineOptions)
  nameWithType: StorageURL.createPipeline(ICredentials credentials, PipelineOptions pipelineOptions)
  fullName: com.microsoft.azure.storage.blob.StorageURL.createPipeline(ICredentials credentials, PipelineOptions pipelineOptions)
  type: Method
  summary: "<p>Creates an pipeline to process the HTTP requests and Responses.</p>\r\n<p></p>"
  syntax:
    content: public static HttpPipeline createPipeline(ICredentials credentials, PipelineOptions pipelineOptions)
    parameters:
    - id: credentials
      type: com.microsoft.azure.storage.blob.ICredentials
      description: <p>The credentials the pipeline will use to authenticate the requests. </p>
    - id: pipelineOptions
      type: com.microsoft.azure.storage.blob.PipelineOptions
      description: <p>Configurations for each policy in the pipeline.</p>
    return:
      type: 6fbf082c
      description: <p>The pipeline.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.createSnapshot()
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: createSnapshot()
  nameWithType: BlobURL.createSnapshot()
  fullName: com.microsoft.azure.storage.blob.BlobURL.createSnapshot()
  type: Method
  summary: "<p>Creates a read-only snapshot of a blob. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/snapshot-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobCreateSnapshotResponse> createSnapshot()
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobCreateSnapshotResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.createSnapshot(Metadata,BlobAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: createSnapshot(Metadata metadata, BlobAccessConditions accessConditions, Context context)
  nameWithType: BlobURL.createSnapshot(Metadata metadata, BlobAccessConditions accessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.createSnapshot(Metadata metadata, BlobAccessConditions accessConditions, Context context)
  type: Method
  summary: "<p>Creates a read-only snapshot of a blob. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/snapshot-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobCreateSnapshotResponse> createSnapshot(Metadata metadata, BlobAccessConditions accessConditions, Context context)
    parameters:
    - id: metadata
      type: com.microsoft.azure.storage.blob.Metadata
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.Metadata" data-throw-if-not-resolved="false">Metadata</xref>

        </p>
    - id: accessConditions
      type: com.microsoft.azure.storage.blob.BlobAccessConditions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobAccessConditions" data-throw-if-not-resolved="false">BlobAccessConditions</xref>

        </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobCreateSnapshotResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.delete()
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: delete()
  nameWithType: BlobURL.delete()
  fullName: com.microsoft.azure.storage.blob.BlobURL.delete()
  type: Method
  summary: "<p>Deletes the specified blob or snapshot. Note that deleting a blob also deletes all its snapshots. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/delete-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobDeleteResponse> delete()
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobDeleteResponsea08ddfce
      description: <p>Emits the successful response. </p>
- uid: com.microsoft.azure.storage.blob.BlobURL.delete(DeleteSnapshotsOptionType,BlobAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: delete(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobAccessConditions accessConditions, Context context)
  nameWithType: BlobURL.delete(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobAccessConditions accessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.delete(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobAccessConditions accessConditions, Context context)
  type: Method
  summary: "<p>Deletes the specified blob or snapshot. Note that deleting a blob also deletes all its snapshots. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/delete-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobDeleteResponse> delete(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobAccessConditions accessConditions, Context context)
    parameters:
    - id: deleteBlobSnapshotOptions
      type: com.microsoft.azure.storage.blob.models.DeleteSnapshotsOptionType
      description: >-
        <p>Specifies the behavior for deleting the snapshots on this blob.<code>Include 

            </code> will delete the base blob and all snapshots.<code>Only 

            </code> will delete only the snapshots. If a snapshot is being deleted, you must pass null. </p>
    - id: accessConditions
      type: com.microsoft.azure.storage.blob.BlobAccessConditions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobAccessConditions" data-throw-if-not-resolved="false">BlobAccessConditions</xref>

        </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobDeleteResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.download()
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: download()
  nameWithType: BlobURL.download()
  fullName: com.microsoft.azure.storage.blob.BlobURL.download()
  type: Method
  summary: "<p>Reads a range of bytes from a blob. The response also includes the blob's properties and metadata. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/get-blob\">Azure Docs</a>. </p>\r\n<p>Note that the response body has reliable download functionality built in, meaning that a failed download stream will be automatically retried. This behavior may be configured with <xref uid=\"com.microsoft.azure.storage.blob.ReliableDownloadOptions\" data-throw-if-not-resolved=\"false\">ReliableDownloadOptions</xref>.</p>\r\n<p></p>"
  syntax:
    content: public Single<DownloadResponse> download()
    return:
      type: 449e6419com.microsoft.azure.storage.blob.DownloadResponsea08ddfce
      description: <p>Emits the successful response. </p>
- uid: com.microsoft.azure.storage.blob.BlobURL.download(BlobRange,BlobAccessConditions,boolean,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: download(BlobRange range, BlobAccessConditions accessConditions, boolean rangeGetContentMD5, Context context)
  nameWithType: BlobURL.download(BlobRange range, BlobAccessConditions accessConditions, boolean rangeGetContentMD5, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.download(BlobRange range, BlobAccessConditions accessConditions, boolean rangeGetContentMD5, Context context)
  type: Method
  summary: "<p>Reads a range of bytes from a blob. The response also includes the blob's properties and metadata. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/get-blob\">Azure Docs</a>. </p>\r\n<p>Note that the response body has reliable download functionality built in, meaning that a failed download stream will be automatically retried. This behavior may be configured with <xref uid=\"com.microsoft.azure.storage.blob.ReliableDownloadOptions\" data-throw-if-not-resolved=\"false\">ReliableDownloadOptions</xref>.</p>\r\n<p></p>"
  syntax:
    content: public Single<DownloadResponse> download(BlobRange range, BlobAccessConditions accessConditions, boolean rangeGetContentMD5, Context context)
    parameters:
    - id: range
      type: com.microsoft.azure.storage.blob.BlobRange
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>

        </p>
    - id: accessConditions
      type: com.microsoft.azure.storage.blob.BlobAccessConditions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobAccessConditions" data-throw-if-not-resolved="false">BlobAccessConditions</xref>

        </p>
    - id: rangeGetContentMD5
      type: 4fc6e284
      description: <p>Whether the contentMD5 for the specified blob range should be returned. </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.DownloadResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.getAccountInfo()
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: getAccountInfo()
  nameWithType: BlobURL.getAccountInfo()
  fullName: com.microsoft.azure.storage.blob.BlobURL.getAccountInfo()
  type: Method
  summary: "<p>Returns the sku name and account kind for the account. For more information, please see the <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobGetAccountInfoResponse> getAccountInfo()
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobGetAccountInfoResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.getAccountInfo(Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: getAccountInfo(Context context)
  nameWithType: BlobURL.getAccountInfo(Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.getAccountInfo(Context context)
  type: Method
  summary: "<p>Returns the sku name and account kind for the account. For more information, please see the <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobGetAccountInfoResponse> getAccountInfo(Context context)
    parameters:
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobGetAccountInfoResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.getProperties()
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: getProperties()
  nameWithType: BlobURL.getProperties()
  fullName: com.microsoft.azure.storage.blob.BlobURL.getProperties()
  type: Method
  summary: "<p>Returns the blob's metadata and properties. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/get-blob-properties\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobGetPropertiesResponse> getProperties()
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobGetPropertiesResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.getProperties(BlobAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: getProperties(BlobAccessConditions accessConditions, Context context)
  nameWithType: BlobURL.getProperties(BlobAccessConditions accessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.getProperties(BlobAccessConditions accessConditions, Context context)
  type: Method
  summary: "<p>Returns the blob's metadata and properties. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/get-blob-properties\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobGetPropertiesResponse> getProperties(BlobAccessConditions accessConditions, Context context)
    parameters:
    - id: accessConditions
      type: com.microsoft.azure.storage.blob.BlobAccessConditions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobAccessConditions" data-throw-if-not-resolved="false">BlobAccessConditions</xref>

        </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobGetPropertiesResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.releaseLease(String)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: releaseLease(String leaseID)
  nameWithType: BlobURL.releaseLease(String leaseID)
  fullName: com.microsoft.azure.storage.blob.BlobURL.releaseLease(String leaseID)
  type: Method
  summary: "<p>Releases the blob's previously-acquired lease. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/lease-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobReleaseLeaseResponse> releaseLease(String leaseID)
    parameters:
    - id: leaseID
      type: "26831127"
      description: <p>The leaseId of the active lease on the blob.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobReleaseLeaseResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.releaseLease(String,ModifiedAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: releaseLease(String leaseID, ModifiedAccessConditions modifiedAccessConditions, Context context)
  nameWithType: BlobURL.releaseLease(String leaseID, ModifiedAccessConditions modifiedAccessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.releaseLease(String leaseID, ModifiedAccessConditions modifiedAccessConditions, Context context)
  type: Method
  summary: "<p>Releases the blob's previously-acquired lease. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/lease-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobReleaseLeaseResponse> releaseLease(String leaseID, ModifiedAccessConditions modifiedAccessConditions, Context context)
    parameters:
    - id: leaseID
      type: "26831127"
      description: <p>The leaseId of the active lease on the blob. </p>
    - id: modifiedAccessConditions
      type: com.microsoft.azure.storage.blob.models.ModifiedAccessConditions
      description: <p>Standard HTTP Access conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions related to when the blob was changed relative to the given request. The request will fail if the specified condition is not satisfied. </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobReleaseLeaseResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.renewLease(String)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: renewLease(String leaseID)
  nameWithType: BlobURL.renewLease(String leaseID)
  fullName: com.microsoft.azure.storage.blob.BlobURL.renewLease(String leaseID)
  type: Method
  summary: "<p>Renews the blob's previously-acquired lease. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/lease-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobRenewLeaseResponse> renewLease(String leaseID)
    parameters:
    - id: leaseID
      type: "26831127"
      description: <p>The leaseId of the active lease on the blob.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobRenewLeaseResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.renewLease(String,ModifiedAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: renewLease(String leaseID, ModifiedAccessConditions modifiedAccessConditions, Context context)
  nameWithType: BlobURL.renewLease(String leaseID, ModifiedAccessConditions modifiedAccessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.renewLease(String leaseID, ModifiedAccessConditions modifiedAccessConditions, Context context)
  type: Method
  summary: "<p>Renews the blob's previously-acquired lease. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/lease-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobRenewLeaseResponse> renewLease(String leaseID, ModifiedAccessConditions modifiedAccessConditions, Context context)
    parameters:
    - id: leaseID
      type: "26831127"
      description: <p>The leaseId of the active lease on the blob. </p>
    - id: modifiedAccessConditions
      type: com.microsoft.azure.storage.blob.models.ModifiedAccessConditions
      description: <p>Standard HTTP Access conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions related to when the blob was changed relative to the given request. The request will fail if the specified condition is not satisfied. </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobRenewLeaseResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.setHTTPHeaders(BlobHTTPHeaders)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: setHTTPHeaders(BlobHTTPHeaders headers)
  nameWithType: BlobURL.setHTTPHeaders(BlobHTTPHeaders headers)
  fullName: com.microsoft.azure.storage.blob.BlobURL.setHTTPHeaders(BlobHTTPHeaders headers)
  type: Method
  summary: "<p>Changes a blob's HTTP header properties. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/set-blob-properties\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobSetHTTPHeadersResponse> setHTTPHeaders(BlobHTTPHeaders headers)
    parameters:
    - id: headers
      type: com.microsoft.azure.storage.blob.models.BlobHTTPHeaders
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">BlobHTTPHeaders</xref>

        </p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobSetHTTPHeadersResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.setHTTPHeaders(BlobHTTPHeaders,BlobAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: setHTTPHeaders(BlobHTTPHeaders headers, BlobAccessConditions accessConditions, Context context)
  nameWithType: BlobURL.setHTTPHeaders(BlobHTTPHeaders headers, BlobAccessConditions accessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.setHTTPHeaders(BlobHTTPHeaders headers, BlobAccessConditions accessConditions, Context context)
  type: Method
  summary: "<p>Changes a blob's HTTP header properties. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/set-blob-properties\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobSetHTTPHeadersResponse> setHTTPHeaders(BlobHTTPHeaders headers, BlobAccessConditions accessConditions, Context context)
    parameters:
    - id: headers
      type: com.microsoft.azure.storage.blob.models.BlobHTTPHeaders
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">BlobHTTPHeaders</xref>

        </p>
    - id: accessConditions
      type: com.microsoft.azure.storage.blob.BlobAccessConditions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobAccessConditions" data-throw-if-not-resolved="false">BlobAccessConditions</xref>

        </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobSetHTTPHeadersResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.setMetadata(Metadata)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: setMetadata(Metadata metadata)
  nameWithType: BlobURL.setMetadata(Metadata metadata)
  fullName: com.microsoft.azure.storage.blob.BlobURL.setMetadata(Metadata metadata)
  type: Method
  summary: "<p>Changes a blob's metadata. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobSetMetadataResponse> setMetadata(Metadata metadata)
    parameters:
    - id: metadata
      type: com.microsoft.azure.storage.blob.Metadata
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.Metadata" data-throw-if-not-resolved="false">Metadata</xref>

        </p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobSetMetadataResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.setMetadata(Metadata,BlobAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: setMetadata(Metadata metadata, BlobAccessConditions accessConditions, Context context)
  nameWithType: BlobURL.setMetadata(Metadata metadata, BlobAccessConditions accessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.setMetadata(Metadata metadata, BlobAccessConditions accessConditions, Context context)
  type: Method
  summary: "<p>Changes a blob's metadata. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobSetMetadataResponse> setMetadata(Metadata metadata, BlobAccessConditions accessConditions, Context context)
    parameters:
    - id: metadata
      type: com.microsoft.azure.storage.blob.Metadata
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.Metadata" data-throw-if-not-resolved="false">Metadata</xref>

        </p>
    - id: accessConditions
      type: com.microsoft.azure.storage.blob.BlobAccessConditions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobAccessConditions" data-throw-if-not-resolved="false">BlobAccessConditions</xref>

        </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobSetMetadataResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.setTier(AccessTier)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: setTier(AccessTier tier)
  nameWithType: BlobURL.setTier(AccessTier tier)
  fullName: com.microsoft.azure.storage.blob.BlobURL.setTier(AccessTier tier)
  type: Method
  summary: "<p>Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag. </p>\r\n<p>For detailed information about block blob level tiering see the <a href=\"https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers.\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobSetTierResponse> setTier(AccessTier tier)
    parameters:
    - id: tier
      type: com.microsoft.azure.storage.blob.models.AccessTier
      description: <p>The new tier for the blob.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobSetTierResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.setTier(AccessTier,LeaseAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: setTier(AccessTier tier, LeaseAccessConditions leaseAccessConditions, Context context)
  nameWithType: BlobURL.setTier(AccessTier tier, LeaseAccessConditions leaseAccessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.setTier(AccessTier tier, LeaseAccessConditions leaseAccessConditions, Context context)
  type: Method
  summary: "<p>Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag. </p>\r\n<p>For detailed information about block blob level tiering see the <a href=\"https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers.\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobSetTierResponse> setTier(AccessTier tier, LeaseAccessConditions leaseAccessConditions, Context context)
    parameters:
    - id: tier
      type: com.microsoft.azure.storage.blob.models.AccessTier
      description: <p>The new tier for the blob. </p>
    - id: leaseAccessConditions
      type: com.microsoft.azure.storage.blob.models.LeaseAccessConditions
      description: <p>By setting lease access conditions, requests will fail if the provided lease does not match the active lease on the blob. </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobSetTierResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.startCopyFromURL(URL)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: startCopyFromURL(URL sourceURL)
  nameWithType: BlobURL.startCopyFromURL(URL sourceURL)
  fullName: com.microsoft.azure.storage.blob.BlobURL.startCopyFromURL(URL sourceURL)
  type: Method
  summary: "<p>Copies the data at the source URL to a blob. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/copy-blob\">Azure Docs</a></p>\r\n<p></p>"
  syntax:
    content: public Single<BlobStartCopyFromURLResponse> startCopyFromURL(URL sourceURL)
    parameters:
    - id: sourceURL
      type: a891b3e6
      description: <p>The source URL to copy from. URLs outside of Azure may only be copied to block blobs.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobStartCopyFromURLResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.startCopyFromURL(URL,Metadata,ModifiedAccessConditions,BlobAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: startCopyFromURL(URL sourceURL, Metadata metadata, ModifiedAccessConditions sourceModifiedAccessConditions, BlobAccessConditions destAccessConditions, Context context)
  nameWithType: BlobURL.startCopyFromURL(URL sourceURL, Metadata metadata, ModifiedAccessConditions sourceModifiedAccessConditions, BlobAccessConditions destAccessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.startCopyFromURL(URL sourceURL, Metadata metadata, ModifiedAccessConditions sourceModifiedAccessConditions, BlobAccessConditions destAccessConditions, Context context)
  type: Method
  summary: "<p>Copies the data at the source URL to a blob. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/copy-blob\">Azure Docs</a></p>\r\n<p></p>"
  syntax:
    content: public Single<BlobStartCopyFromURLResponse> startCopyFromURL(URL sourceURL, Metadata metadata, ModifiedAccessConditions sourceModifiedAccessConditions, BlobAccessConditions destAccessConditions, Context context)
    parameters:
    - id: sourceURL
      type: a891b3e6
      description: <p>The source URL to copy from. URLs outside of Azure may only be copied to block blobs. </p>
    - id: metadata
      type: com.microsoft.azure.storage.blob.Metadata
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.Metadata" data-throw-if-not-resolved="false">Metadata</xref>

        </p>
    - id: sourceModifiedAccessConditions
      type: com.microsoft.azure.storage.blob.models.ModifiedAccessConditions
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">ModifiedAccessConditions</xref> against the source. Standard HTTP Access conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions related to when the blob was changed relative to the given request. The request will fail if the specified condition is not satisfied. </p>
    - id: destAccessConditions
      type: com.microsoft.azure.storage.blob.BlobAccessConditions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobAccessConditions" data-throw-if-not-resolved="false">BlobAccessConditions</xref> against the destination. </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobStartCopyFromURLResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.StorageURL.storageClient
  parent: com.microsoft.azure.storage.blob.StorageURL
  href: com.microsoft.azure.storage.blob.StorageURL.yml
  name: storageClient
  nameWithType: StorageURL.storageClient
  fullName: com.microsoft.azure.storage.blob.StorageURL.storageClient
  type: Field
  syntax:
    content: protected final GeneratedStorageClient storageClient
    return:
      type: 93de0ef9com.microsoft.azure.storage.blob.GeneratedStorageClient
- uid: com.microsoft.azure.storage.blob.StorageURL.StorageURL(URL,HttpPipeline)
  parent: com.microsoft.azure.storage.blob.StorageURL
  href: com.microsoft.azure.storage.blob.StorageURL.yml
  name: StorageURL(URL url, HttpPipeline pipeline)
  nameWithType: StorageURL.StorageURL(URL url, HttpPipeline pipeline)
  fullName: com.microsoft.azure.storage.blob.StorageURL.StorageURL(URL url, HttpPipeline pipeline)
  type: Constructor
  syntax:
    content: protected StorageURL(URL url, HttpPipeline pipeline)
    parameters:
    - id: url
      type: a891b3e6
    - id: pipeline
      type: 6fbf082c
- uid: com.microsoft.azure.storage.blob.BlobURL.syncCopyFromURL(URL)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: syncCopyFromURL(URL copySource)
  nameWithType: BlobURL.syncCopyFromURL(URL copySource)
  fullName: com.microsoft.azure.storage.blob.BlobURL.syncCopyFromURL(URL copySource)
  type: Method
  summary: "<p>Copies the data at the source URL to a blob and waits for the copy to complete before returning a response. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/copy-blob\">Azure Docs</a></p>\r\n<p></p>"
  syntax:
    content: public Single<BlobCopyFromURLResponse> syncCopyFromURL(URL copySource)
    parameters:
    - id: copySource
      type: a891b3e6
      description: <p>The source URL to copy from.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobCopyFromURLResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.syncCopyFromURL(URL,Metadata,ModifiedAccessConditions,BlobAccessConditions,Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: syncCopyFromURL(URL copySource, Metadata metadata, ModifiedAccessConditions sourceModifiedAccessConditions, BlobAccessConditions destAccessConditions, Context context)
  nameWithType: BlobURL.syncCopyFromURL(URL copySource, Metadata metadata, ModifiedAccessConditions sourceModifiedAccessConditions, BlobAccessConditions destAccessConditions, Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.syncCopyFromURL(URL copySource, Metadata metadata, ModifiedAccessConditions sourceModifiedAccessConditions, BlobAccessConditions destAccessConditions, Context context)
  type: Method
  summary: "<p>Copies the data at the source URL to a blob and waits for the copy to complete before returning a response. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/copy-blob\">Azure Docs</a></p>\r\n<p></p>"
  syntax:
    content: public Single<BlobCopyFromURLResponse> syncCopyFromURL(URL copySource, Metadata metadata, ModifiedAccessConditions sourceModifiedAccessConditions, BlobAccessConditions destAccessConditions, Context context)
    parameters:
    - id: copySource
      type: a891b3e6
      description: <p>The source URL to copy from. URLs outside of Azure may only be copied to block blobs. </p>
    - id: metadata
      type: com.microsoft.azure.storage.blob.Metadata
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.Metadata" data-throw-if-not-resolved="false">Metadata</xref>

        </p>
    - id: sourceModifiedAccessConditions
      type: com.microsoft.azure.storage.blob.models.ModifiedAccessConditions
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false">ModifiedAccessConditions</xref> against the source. Standard HTTP Access conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions related to when the blob was changed relative to the given request. The request will fail if the specified condition is not satisfied. </p>
    - id: destAccessConditions
      type: com.microsoft.azure.storage.blob.BlobAccessConditions
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob.BlobAccessConditions" data-throw-if-not-resolved="false">BlobAccessConditions</xref> against the destination. </p>
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobCopyFromURLResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.toAppendBlobURL()
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: toAppendBlobURL()
  nameWithType: BlobURL.toAppendBlobURL()
  fullName: com.microsoft.azure.storage.blob.BlobURL.toAppendBlobURL()
  type: Method
  summary: "<p>Converts this BlobURL to an <xref uid=\"com.microsoft.azure.storage.blob.AppendBlobURL\" data-throw-if-not-resolved=\"false\">AppendBlobURL</xref> object. Note that this does not change the actual type of the blob if it has already been created.</p>\r\n<p></p>"
  syntax:
    content: public AppendBlobURL toAppendBlobURL()
    return:
      type: com.microsoft.azure.storage.blob.AppendBlobURL
      description: <p>An <xref uid="com.microsoft.azure.storage.blob.AppendBlobURL" data-throw-if-not-resolved="false">AppendBlobURL</xref> object. </p>
- uid: com.microsoft.azure.storage.blob.BlobURL.toBlockBlobURL()
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: toBlockBlobURL()
  nameWithType: BlobURL.toBlockBlobURL()
  fullName: com.microsoft.azure.storage.blob.BlobURL.toBlockBlobURL()
  type: Method
  summary: "<p>Converts this BlobURL to a <xref uid=\"com.microsoft.azure.storage.blob.BlockBlobURL\" data-throw-if-not-resolved=\"false\">BlockBlobURL</xref> object. Note that this does not change the actual type of the blob if it has already been created.</p>\r\n<p></p>"
  syntax:
    content: public BlockBlobURL toBlockBlobURL()
    return:
      type: com.microsoft.azure.storage.blob.BlockBlobURL
      description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlockBlobURL" data-throw-if-not-resolved="false">BlockBlobURL</xref> object. </p>
- uid: com.microsoft.azure.storage.blob.BlobURL.toPageBlobURL()
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: toPageBlobURL()
  nameWithType: BlobURL.toPageBlobURL()
  fullName: com.microsoft.azure.storage.blob.BlobURL.toPageBlobURL()
  type: Method
  summary: "<p>Converts this BlobURL to a <xref uid=\"com.microsoft.azure.storage.blob.PageBlobURL\" data-throw-if-not-resolved=\"false\">PageBlobURL</xref> object. Note that this does not change the actual type of the blob if it has already been created.</p>\r\n<p></p>"
  syntax:
    content: public PageBlobURL toPageBlobURL()
    return:
      type: com.microsoft.azure.storage.blob.PageBlobURL
      description: <p>A <xref uid="com.microsoft.azure.storage.blob.PageBlobURL" data-throw-if-not-resolved="false">PageBlobURL</xref> object. </p>
- uid: com.microsoft.azure.storage.blob.StorageURL.toString()
  parent: com.microsoft.azure.storage.blob.StorageURL
  href: com.microsoft.azure.storage.blob.StorageURL.yml
  name: toString()
  nameWithType: StorageURL.toString()
  fullName: com.microsoft.azure.storage.blob.StorageURL.toString()
  type: Method
  syntax:
    content: public String toString()
    return:
      type: "26831127"
- uid: com.microsoft.azure.storage.blob.StorageURL.toURL()
  parent: com.microsoft.azure.storage.blob.StorageURL
  href: com.microsoft.azure.storage.blob.StorageURL.yml
  name: toURL()
  nameWithType: StorageURL.toURL()
  fullName: com.microsoft.azure.storage.blob.StorageURL.toURL()
  type: Method
  syntax:
    content: public URL toURL()
    return:
      type: a891b3e6
      description: <p>The underlying url to the resource. </p>
- uid: com.microsoft.azure.storage.blob.BlobURL.undelete()
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: undelete()
  nameWithType: BlobURL.undelete()
  fullName: com.microsoft.azure.storage.blob.BlobURL.undelete()
  type: Method
  summary: "<p>Undelete restores the content and metadata of a soft-deleted blob and/or any associated soft-deleted snapshots. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/undelete-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobUndeleteResponse> undelete()
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobUndeleteResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL.undelete(Context)
  parent: com.microsoft.azure.storage.blob.BlobURL
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: undelete(Context context)
  nameWithType: BlobURL.undelete(Context context)
  fullName: com.microsoft.azure.storage.blob.BlobURL.undelete(Context context)
  type: Method
  summary: "<p>Undelete restores the content and metadata of a soft-deleted blob and/or any associated soft-deleted snapshots. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/undelete-blob\">Azure Docs</a>.</p>\r\n<p></p>"
  syntax:
    content: public Single<BlobUndeleteResponse> undelete(Context context)
    parameters:
    - id: context
      type: 64204ead
      description: >-
        <p>

          <code>Context 

            </code> offers a means of passing arbitrary data (key/value pairs) to an <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref>'s policy objects. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE 

            </code> or<code>null 

            </code> . Each context object is immutable. The<code>withContext 

            </code> with data method creates a new<code>Context 

            </code> object that refers to its parent, forming a linked list.</p>
    return:
      type: 449e6419com.microsoft.azure.storage.blob.models.BlobUndeleteResponsea08ddfce
      description: <p>Emits the successful response.</p>
- uid: com.microsoft.azure.storage.blob.BlobURL
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.BlobURL.yml
  name: BlobURL
  nameWithType: BlobURL
  fullName: com.microsoft.azure.storage.blob.BlobURL
  type: Class
  summary: "<p>Represents a URL to a blob of any type: block, append, or page. It may be obtained by direct construction or via the create method on a <xref uid=\"com.microsoft.azure.storage.blob.ContainerURL\" data-throw-if-not-resolved=\"false\">ContainerURL</xref> object. This class does not hold any state about a particular blob but is instead a convenient way of sending off appropriate requests to the resource on the service. Please refer to the <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/understanding-block-blobs&amp;ndash;append-blobs&amp;ndash;and-page-blobs\">Azure Docs</a> for more information. </p>"
  syntax:
    content: public class BlobURL extends StorageURL
- uid: com.microsoft.azure.storage.blob.BlockBlobURL
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.BlockBlobURL.yml
  name: BlockBlobURL
  nameWithType: BlockBlobURL
  fullName: com.microsoft.azure.storage.blob.BlockBlobURL
  type: Class
  summary: "<p>Represents a URL to a block blob. It may be obtained by direct construction or via the create method on a <xref uid=\"com.microsoft.azure.storage.blob.ContainerURL\" data-throw-if-not-resolved=\"false\">ContainerURL</xref> object. This class does not hold any state about a particular blob but is instead a convenient way of sending off appropriate requests to the resource on the service. Please refer to the <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/understanding-block-blobs&amp;ndash;append-blobs&amp;ndash;and-page-blobs\">Azure Docs</a> for more information on block blobs. </p>"
  syntax: *o1
- uid: com.microsoft.azure.storage.blob.models.BlockBlobUploadResponse
  parent: com.microsoft.azure.storage.blob.models
  href: com.microsoft.azure.storage.blob.models.BlockBlobUploadResponse.yml
  name: BlockBlobUploadResponse
  nameWithType: BlockBlobUploadResponse
  fullName: com.microsoft.azure.storage.blob.models.BlockBlobUploadResponse
  type: Class
  summary: "<p>Contains all response data for the upload operation. </p>"
  syntax:
    content: public class BlockBlobUploadResponse
- uid: com.microsoft.azure.storage.blob.TransferManager
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.TransferManager.yml
  name: TransferManager
  nameWithType: TransferManager
  fullName: com.microsoft.azure.storage.blob.TransferManager
  type: Class
  summary: "<p>This class contains a collection of methods (and structures associated with those methods) which perform higher-level operations. Whereas operations on the URL types guarantee a single REST request and make no assumptions on desired behavior, these methods will often compose several requests to provide a convenient way of performing more complex operations. Further, we will make our own assumptions and optimizations for common cases that may not be ideal for rarer cases. </p>"
  syntax:
    content: public class TransferManager
- uid: com.microsoft.azure.storage.blob.models.BlobHTTPHeaders
  parent: com.microsoft.azure.storage.blob.models
  href: com.microsoft.azure.storage.blob.models.BlobHTTPHeaders.yml
  name: BlobHTTPHeaders
  nameWithType: BlobHTTPHeaders
  fullName: com.microsoft.azure.storage.blob.models.BlobHTTPHeaders
  type: Class
  summary: "<p>Additional parameters for a set of operations. </p>"
  syntax:
    content: public class BlobHTTPHeaders
- uid: com.microsoft.azure.storage.blob.Metadata
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.Metadata.yml
  name: Metadata
  nameWithType: Metadata
  fullName: com.microsoft.azure.storage.blob.Metadata
  type: Class
  summary: "<p>Contains metadata key/value pairs to be associated with a storage resource. The user may store any additional information about the resource that they like using this map. It is passed to create and setMetadata methods on any URL type. Null may be passed to set no metadata. </p>"
  syntax:
    content: public class Metadata
- uid: com.microsoft.azure.storage.blob.BlobAccessConditions
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.BlobAccessConditions.yml
  name: BlobAccessConditions
  nameWithType: BlobAccessConditions
  fullName: com.microsoft.azure.storage.blob.BlobAccessConditions
  type: Class
  summary: "<p>This class contains values which will restrict the successful operation of a variety of requests to the conditions present. These conditions are entirely optional. The entire object or any of its properties may be set to null when passed to a method to indicate that those conditions are not desired. Please refer to the type of each field for more information on those particular access conditions. </p>"
  syntax:
    content: public class BlobAccessConditions
- uid: com.microsoft.azure.storage.blob.models.BlockBlobStageBlockResponse
  parent: com.microsoft.azure.storage.blob.models
  href: com.microsoft.azure.storage.blob.models.BlockBlobStageBlockResponse.yml
  name: BlockBlobStageBlockResponse
  nameWithType: BlockBlobStageBlockResponse
  fullName: com.microsoft.azure.storage.blob.models.BlockBlobStageBlockResponse
  type: Class
  summary: "<p>Contains all response data for the stageBlock operation. </p>"
  syntax:
    content: public class BlockBlobStageBlockResponse
- uid: com.microsoft.azure.storage.blob.models.LeaseAccessConditions
  parent: com.microsoft.azure.storage.blob.models
  href: com.microsoft.azure.storage.blob.models.LeaseAccessConditions.yml
  name: LeaseAccessConditions
  nameWithType: LeaseAccessConditions
  fullName: com.microsoft.azure.storage.blob.models.LeaseAccessConditions
  type: Class
  summary: "<p>Additional parameters for a set of operations. </p>"
  syntax:
    content: public class LeaseAccessConditions
- uid: com.microsoft.azure.storage.blob.models.BlockBlobStageBlockFromURLResponse
  parent: com.microsoft.azure.storage.blob.models
  href: com.microsoft.azure.storage.blob.models.BlockBlobStageBlockFromURLResponse.yml
  name: BlockBlobStageBlockFromURLResponse
  nameWithType: BlockBlobStageBlockFromURLResponse
  fullName: com.microsoft.azure.storage.blob.models.BlockBlobStageBlockFromURLResponse
  type: Class
  summary: "<p>Contains all response data for the stageBlockFromURL operation. </p>"
  syntax:
    content: public class BlockBlobStageBlockFromURLResponse
- uid: com.microsoft.azure.storage.blob.BlobRange
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.BlobRange.yml
  name: BlobRange
  nameWithType: BlobRange
  fullName: com.microsoft.azure.storage.blob.BlobRange
  type: Class
  summary: "<p>This is a representation of a range of bytes on a blob, typically used during a download operation. This type is immutable to ensure thread-safety of requests, so changing the values for a different operation requires construction of a new object. Passing null as a BlobRange value will default to the entire range of the blob. </p>"
  syntax:
    content: public class BlobRange
- uid: com.microsoft.azure.storage.blob.models.SourceModifiedAccessConditions
  parent: com.microsoft.azure.storage.blob.models
  href: com.microsoft.azure.storage.blob.models.SourceModifiedAccessConditions.yml
  name: SourceModifiedAccessConditions
  nameWithType: SourceModifiedAccessConditions
  fullName: com.microsoft.azure.storage.blob.models.SourceModifiedAccessConditions
  type: Class
  summary: "<p>Additional parameters for a set of operations. </p>"
  syntax:
    content: public class SourceModifiedAccessConditions
- uid: com.microsoft.azure.storage.blob.models.BlockBlobGetBlockListResponse
  parent: com.microsoft.azure.storage.blob.models
  href: com.microsoft.azure.storage.blob.models.BlockBlobGetBlockListResponse.yml
  name: BlockBlobGetBlockListResponse
  nameWithType: BlockBlobGetBlockListResponse
  fullName: com.microsoft.azure.storage.blob.models.BlockBlobGetBlockListResponse
  type: Class
  summary: "<p>Contains all response data for the getBlockList operation. </p>"
  syntax:
    content: public class BlockBlobGetBlockListResponse
- uid: com.microsoft.azure.storage.blob.models.BlockListType
  parent: com.microsoft.azure.storage.blob.models
  href: com.microsoft.azure.storage.blob.models.BlockListType.yml
  name: BlockListType
  nameWithType: BlockListType
  fullName: com.microsoft.azure.storage.blob.models.BlockListType
  type: Enum
  summary: "<p>Defines values for BlockListType. </p>"
  syntax:
    content: public enum BlockListType
- uid: com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponse
  parent: com.microsoft.azure.storage.blob.models
  href: com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponse.yml
  name: BlockBlobCommitBlockListResponse
  nameWithType: BlockBlobCommitBlockListResponse
  fullName: com.microsoft.azure.storage.blob.models.BlockBlobCommitBlockListResponse
  type: Class
  summary: "<p>Contains all response data for the commitBlockList operation. </p>"
  syntax:
    content: public class BlockBlobCommitBlockListResponse
- uid: com.microsoft.azure.storage.blob.ContainerURL
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.ContainerURL.yml
  name: ContainerURL
  nameWithType: ContainerURL
  fullName: com.microsoft.azure.storage.blob.ContainerURL
  type: Class
  summary: "<p>Represents a URL to a container. It may be obtained by direct construction or via the create method on a <xref uid=\"com.microsoft.azure.storage.blob.ServiceURL\" data-throw-if-not-resolved=\"false\">ServiceURL</xref> object. This class does not hold any state about a particular blob but is instead a convenient way of sending off appropriate requests to the resource on the service. It may also be used to construct URLs to blobs. Please refer to the <a href=\"https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blobs-introduction\">Azure Docs</a> for more information on containers. </p>"
  syntax:
    content: public class ContainerURL
