### YamlMime:JavaMember
uid: "com.azure.core.util.BinaryData.fromStreamAsync*"
fullName: "com.azure.core.util.BinaryData.fromStreamAsync"
name: "fromStreamAsync"
nameWithType: "BinaryData.fromStreamAsync"
members:
- uid: "com.azure.core.util.BinaryData.fromStreamAsync(java.io.InputStream)"
  fullName: "com.azure.core.util.BinaryData.fromStreamAsync(InputStream inputStream)"
  name: "fromStreamAsync(InputStream inputStream)"
  nameWithType: "BinaryData.fromStreamAsync(InputStream inputStream)"
  summary: "Creates an instance of <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref> from the given <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>.\n\nIf `inputStream` is null or empty an empty <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref> is returned.\n\n**NOTE:** The <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref> is not closed by this function.\n\n**Create an instance from an InputStream**\n\n```java\nfinal ByteArrayInputStream inputStream = new ByteArrayInputStream(\"Some Data\".getBytes(StandardCharsets.UTF_8));\n \n Mono<BinaryData> binaryDataMono = BinaryData.fromStreamAsync(inputStream);\n \n Disposable subscriber = binaryDataMono\n     .map(binaryData -> {\n         System.out.println(binaryData.toString());\n         return true;\n     })\n     .subscribe();\n \n // So that your program wait for above subscribe to complete.\n TimeUnit.SECONDS.sleep(5);\n subscriber.dispose();\n```"
  parameters:
  - description: "The <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref> that <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref> will represent."
    name: "inputStream"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Mono<BinaryData> fromStreamAsync(InputStream inputStream)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> of <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref> representing the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.core.util"
artifact: com.azure:azure-core:1.15.0
