### YamlMime:JavaMember
uid: "com.azure.storage.queue.QueueServiceClient.setPropertiesWithResponse*"
fullName: "com.azure.storage.queue.QueueServiceClient.setPropertiesWithResponse"
name: "setPropertiesWithResponse"
nameWithType: "QueueServiceClient.setPropertiesWithResponse"
members:
- uid: "com.azure.storage.queue.QueueServiceClient.setPropertiesWithResponse(com.azure.storage.queue.models.QueueServiceProperties,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.queue.QueueServiceClient.setPropertiesWithResponse(QueueServiceProperties properties, Duration timeout, Context context)"
  name: "setPropertiesWithResponse(QueueServiceProperties properties, Duration timeout, Context context)"
  nameWithType: "QueueServiceClient.setPropertiesWithResponse(QueueServiceProperties properties, Duration timeout, Context context)"
  summary: "Sets the properties for the storage account's Queue service. The properties range from storage analytics and metric to CORS (Cross-Origin Resource Sharing). To maintain the CORS in the Queue service pass a `null` value for <xref uid=\"com.azure.storage.queue.models.QueueServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CORS\"></xref>. To disable all CORS in the Queue service pass an empty list for <xref uid=\"com.azure.storage.queue.models.QueueServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CORS\"></xref>.\n\n**Code Sample**\n\nClear CORS in the Queue service\n\n```java\nQueueServiceProperties properties = client.getProperties();\n properties.setCors(Collections.emptyList());\n Response<Void> response = client.setPropertiesWithResponse(properties, Duration.ofSeconds(1),\n     new Context(key1, value1));\n System.out.printf(\"Setting Queue service properties completed with status code %d\", response.getStatusCode());\n```\n\nEnable Minute and Hour Metrics\n\n```java\nQueueServiceProperties properties = client.getProperties();\n properties.getMinuteMetrics().setEnabled(true);\n properties.getHourMetrics().setEnabled(true);\n Response<Void> response = client.setPropertiesWithResponse(properties, Duration.ofSeconds(1),\n     new Context(key1, value1));\n System.out.printf(\"Setting Queue service properties completed with status code %d\", response.getStatusCode());\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-queue-service-properties"
  parameters:
  - description: "Storage account Queue service properties"
    name: "properties"
    type: "<xref href=\"com.azure.storage.queue.models.QueueServiceProperties?alt=com.azure.storage.queue.models.QueueServiceProperties&text=QueueServiceProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> setPropertiesWithResponse(QueueServiceProperties properties, Duration timeout, Context context)"
  returns:
    description: "A response that only contains headers and response status code"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.queue"
artifact: com.azure:azure-storage-queue:12.6.0
