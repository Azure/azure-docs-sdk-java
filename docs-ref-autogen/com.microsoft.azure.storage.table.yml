### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.table
  id: table
  children:
  - com.microsoft.azure.storage.table.CloudTable
  - com.microsoft.azure.storage.table.CloudTableClient
  - com.microsoft.azure.storage.table.DynamicTableEntity
  - com.microsoft.azure.storage.table.EdmType
  - com.microsoft.azure.storage.table.Encrypt
  - com.microsoft.azure.storage.table.EntityProperty
  - com.microsoft.azure.storage.table.EntityResolver
  - com.microsoft.azure.storage.table.Ignore
  - com.microsoft.azure.storage.table.QueryTableOperation
  - com.microsoft.azure.storage.table.SharedAccessTablePermissions
  - com.microsoft.azure.storage.table.SharedAccessTablePolicy
  - com.microsoft.azure.storage.table.StoreAs
  - com.microsoft.azure.storage.table.TableBatchOperation
  - com.microsoft.azure.storage.table.TableEncryptionPolicy
  - com.microsoft.azure.storage.table.TableEntity
  - com.microsoft.azure.storage.table.TableOperation
  - com.microsoft.azure.storage.table.TablePayloadFormat
  - com.microsoft.azure.storage.table.TablePermissions
  - com.microsoft.azure.storage.table.TableQuery
  - com.microsoft.azure.storage.table.TableQuery.Operators
  - com.microsoft.azure.storage.table.TableQuery.QueryComparisons
  - com.microsoft.azure.storage.table.TableRequestOptions
  - com.microsoft.azure.storage.table.TableRequestOptions.EncryptionResolver
  - com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver
  - com.microsoft.azure.storage.table.TableResult
  - com.microsoft.azure.storage.table.TableServiceEntity
  - com.microsoft.azure.storage.table.TableServiceException
  href: com.microsoft.azure.storage.table.yml
  langs:
  - java
  name: com.microsoft.azure.storage.table
  nameWithType: com.microsoft.azure.storage.table
  fullName: com.microsoft.azure.storage.table
  type: Namespace
  source:
    remote:
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/CloudTable.java
      branch: legacy-master
      repo: https://github.com/azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/CloudTable.java
    startLine: 14
  syntax:
    content: package com.microsoft.azure.storage.table
references:
- uid: com.microsoft.azure.storage.table.CloudTable
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.CloudTable.yml
  name: CloudTable
  nameWithType: CloudTable
  fullName: com.microsoft.azure.storage.table.CloudTable
  type: Class
  summary: "<p>Represents a table in the Microsoft Azure Table service. </p>"
  syntax:
    content: public class CloudTable
- uid: com.microsoft.azure.storage.table.CloudTableClient
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.CloudTableClient.yml
  name: CloudTableClient
  nameWithType: CloudTableClient
  fullName: com.microsoft.azure.storage.table.CloudTableClient
  type: Class
  summary: "<p>Provides a service client for accessing the Microsoft Azure Table service. </p>\r\n<p>The <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> class encapsulates the base URI for the Table service endpoint and the credentials for accessing the storage account, and provides methods to create, delete, list, and query tables, as well as methods to execute operations and queries on table entities. These methods invoke Storage Service REST API operations to make the requests and obtain the results that are returned. </p>\r\n<p>A Table service endpoint is the base URI for Table service resources, including the DNS name of the storage account: <br /><br />\r\n For more information, see the MSDN topic <a href=\"http://msdn.microsoft.com/en-us/library/azure/dd179360.aspx\">Addressing Table Service Resources</a>. </p>\r\n<p>The credentials can be a combination of the storage account name and a key, or a shared access signature. For more information, see the MSDN topic <a href=\"http://msdn.microsoft.com/en-us/library/azure/hh225339.aspx\">Authenticating Access to Your Storage Account</a>. </p>"
  syntax:
    content: public class CloudTableClient extends ServiceClient
- uid: com.microsoft.azure.storage.table.DynamicTableEntity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.DynamicTableEntity.yml
  name: DynamicTableEntity
  nameWithType: DynamicTableEntity
  fullName: com.microsoft.azure.storage.table.DynamicTableEntity
  type: Class
  summary: "<p>A <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> type which allows callers direct access to the property map of the entity. This class extends <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> to eliminate the use of reflection for serialization and deserialization. </p>"
  syntax:
    content: public class DynamicTableEntity extends TableServiceEntity
- uid: com.microsoft.azure.storage.table.EdmType
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.EdmType.yml
  name: EdmType
  nameWithType: EdmType
  fullName: com.microsoft.azure.storage.table.EdmType
  type: Enum
  summary: "<p>A enumeration used to represent the primitive types of the Entity Data Model (EDM) in the Open Data Protocol (OData). The EDM is the underlying abstract data model used by OData services. The <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType\"></xref> enumeration includes a <xref uid=\"com.microsoft.azure.storage.table.EdmType.parse(final String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"parse(String)\"></xref> method to convert EDM data type names to the enumeration type, and overrides the <xref uid=\"com.microsoft.azure.storage.table.EdmType.toString()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"toString()\"></xref> method to produce an EDM data type name. </p>\r\n<p>For more information about OData, see the <a href=\"http://www.odata.org/\">Open Data Protocol</a> website. </p>\r\n<p>For an overview of the available EDM primitive data types and names, see the <a href=\"http://www.odata.org/developers/protocols/overview#AbstractTypeSystem\">Primitive Data Types</a> section of the <a href=\"http://www.odata.org/developers/protocols/overview\">OData Protocol Overview</a>. </p>\r\n<p>The Abstract Type System used to define the primitive types supported by OData is defined in detail in <a href=\"http://msdn.microsoft.com/en-us/library/dd541474.aspx\">[MC-CSDL] (section 2.2.1)</a>. </p>"
  syntax:
    content: public enum EdmType
- uid: com.microsoft.azure.storage.table.Encrypt
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.Encrypt.yml
  name: Encrypt
  nameWithType: Encrypt
  fullName: com.microsoft.azure.storage.table.Encrypt
  type: Interface
  summary: "<p>Represents a custom attribute that can be used to indicate whether an entity property should be encrypted. Use this annotation to specify whether to encrypt the data stored by a setter method or decrypt the data retrieved by a getter method in a class implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public interface Encrypt
- uid: com.microsoft.azure.storage.table.EntityProperty
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.EntityProperty.yml
  name: EntityProperty
  nameWithType: EntityProperty
  fullName: com.microsoft.azure.storage.table.EntityProperty
  type: Class
  summary: "<p>A class which represents a single typed property value in a table entity. An <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> stores the data type as an <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType\"></xref>. The value, which may be  for object types, but not for primitive types, is serialized and stored as a . </p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> provides overloaded constructors and overloads of the  method for supported value types. Each overloaded constructor or  method sets the <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType\"></xref> and serializes the value appropriately based on the parameter type. </p>\r\n<p>Use one of the <em>Type</em> methods to deserialize an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> as the appropriate Java type. The method will throw a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParseException\"></xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalArgumentException\"></xref> if the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityProperty\"></xref> cannot be deserialized as the Java type. </p>"
  syntax:
    content: public class EntityProperty
- uid: com.microsoft.azure.storage.table.EntityResolver
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.EntityResolver.yml
  name: EntityResolver<T>
  nameWithType: EntityResolver<T>
  fullName: com.microsoft.azure.storage.table.EntityResolver<T>
  type: Interface
  summary: "<p>An interface to perform client side projection on a retrieved entity. An <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityResolver\"></xref> instance must implement a  method projecting the entity data represented by the parameters passed in as a new instance of the type specified by the type parameter. </p>\r\n<p>This interface is useful for converting directly from table entity data to a client object type without requiring a separate table entity class type that deserializes every property individually. For example, a client can perform a client side projection of a <em>Customer</em> entity by simply returning the  for the <em>CustomerName</em> property of each entity. The result of this projection will be a collection of s containing each customer name.</p>\r\n<p></p>"
  syntax:
    content: public interface EntityResolver<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>The type of the object that the resolver produces. </p>
- uid: com.microsoft.azure.storage.table.Ignore
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.Ignore.yml
  name: Ignore
  nameWithType: Ignore
  fullName: com.microsoft.azure.storage.table.Ignore
  type: Interface
  summary: "<p>An annotation set on a method to prevent its use in serializing or deserializing a property by reflection. Apply the  annotation to methods in a class implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> to force them to be ignored during reflection-based serialization and deserialization. See the documentation for <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> for more information on using reflection-based serialization and deserialization.</p>\r\n<p></p>"
  syntax:
    content: public interface Ignore
- uid: com.microsoft.azure.storage.table.QueryTableOperation
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.QueryTableOperation.yml
  name: QueryTableOperation
  nameWithType: QueryTableOperation
  fullName: com.microsoft.azure.storage.table.QueryTableOperation
  type: Class
  summary: "<p>A class that extends <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> to implement a query to retrieve a single table entity. To execute a <xref uid=\"com.microsoft.azure.storage.table.QueryTableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryTableOperation\"></xref> instance, call the  method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance. This operation can be executed directly or as part of a <xref uid=\"com.microsoft.azure.storage.table.TableBatchOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableBatchOperation\"></xref>. If the <xref uid=\"com.microsoft.azure.storage.table.QueryTableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryTableOperation\"></xref> returns an entity result, it is stored in the corresponding <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableResult\"></xref> returned by the  method. </p>"
  syntax:
    content: public class QueryTableOperation extends TableOperation
- uid: com.microsoft.azure.storage.table.SharedAccessTablePermissions
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.SharedAccessTablePermissions.yml
  name: SharedAccessTablePermissions
  nameWithType: SharedAccessTablePermissions
  fullName: com.microsoft.azure.storage.table.SharedAccessTablePermissions
  type: Enum
  summary: "<p>Specifies the set of possible permissions for a shared access table policy. </p>"
  syntax:
    content: public enum SharedAccessTablePermissions
- uid: com.microsoft.azure.storage.table.SharedAccessTablePolicy
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.SharedAccessTablePolicy.yml
  name: SharedAccessTablePolicy
  nameWithType: SharedAccessTablePolicy
  fullName: com.microsoft.azure.storage.table.SharedAccessTablePolicy
  type: Class
  summary: "<p>Represents a shared access policy, which specifies the start time, expiry time, and permissions for a shared access signature. </p>"
  syntax:
    content: public class SharedAccessTablePolicy extends SharedAccessPolicy
- uid: com.microsoft.azure.storage.table.StoreAs
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.StoreAs.yml
  name: StoreAs
  nameWithType: StoreAs
  fullName: com.microsoft.azure.storage.table.StoreAs
  type: Interface
  summary: "<p>An annotation used to override the name a property is serialized and deserialized with using reflection. Use this annotation to specify the property name to associate with the data stored by a setter method or retrieved by a getter method in a class implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> that uses reflection-based serialization and deserialization. Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the  annotation. </p>\r\n<p>Example: </p>\r\n<p></p>\r\n<p></p>\r\n<p>This example shows how the methods that would get and set an entity property named <em>ObjectPropertyName</em> in the default case can be annotated to get and set an entity property named <em>EntityPropertyName</em>. See the documentation for <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> for more information on using reflection-based serialization and deserialization.</p>\r\n<p></p>"
  syntax:
    content: public interface StoreAs
- uid: com.microsoft.azure.storage.table.TableBatchOperation
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableBatchOperation.yml
  name: TableBatchOperation
  nameWithType: TableBatchOperation
  fullName: com.microsoft.azure.storage.table.TableBatchOperation
  type: Class
  summary: "<p>A class which represents a batch operation. A batch operation is a collection of table operations which are executed by the Storage Service REST API as a single atomic operation, by invoking an <a href=\"http://msdn.microsoft.com/en-us/library/azure/dd894038.aspx\">Entity Group Transaction</a>. </p>\r\n<p>A batch operation may contain up to 100 individual table operations, with the requirement that each operation entity must have same partition key. A batch with a retrieve operation cannot contain any other operations. Note that the total payload of a batch operation is limited to 4MB. </p>"
  syntax:
    content: public class TableBatchOperation
- uid: com.microsoft.azure.storage.table.TableEncryptionPolicy
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableEncryptionPolicy.yml
  name: TableEncryptionPolicy
  nameWithType: TableEncryptionPolicy
  fullName: com.microsoft.azure.storage.table.TableEncryptionPolicy
  type: Class
  summary: "<p>Represents a table encryption policy that is used to perform envelope encryption/decryption of Azure table entities. </p>"
  syntax:
    content: public class TableEncryptionPolicy
- uid: com.microsoft.azure.storage.table.TableEntity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableEntity.yml
  name: TableEntity
  nameWithType: TableEntity
  fullName: com.microsoft.azure.storage.table.TableEntity
  type: Interface
  summary: "<p>An interface required for table entity types. The <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> interface declares getter and setter methods for the common entity properties, and  and  methods for serialization and deserialization of all entity properties using a property map. Create classes implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity. </p>\r\n<p>The Storage client library includes two implementations of <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> that provide for simple property access and serialization: </p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> and provides a simple property map to store and retrieve properties. Use a <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties. You can also use this type to perform bulk table updates of heterogeneous entities without losing property information. </p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> is an implementation of <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> that uses reflection-based serialization and deserialization behavior in its  and  methods. <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref>-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically. </p>\r\n<p>Any class that implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> by invoking the static methods  in  and  in . The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically. When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data. The reflection code looks for getter and setter methods in pairs of the form </p>\r\n<p></p>\r\n<p>and </p>\r\n<p></p>\r\n<p>where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property. See the table in the class description for <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> for a map of property types to their Java equivalents. The <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention. Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotations are case sensitive for matching property names with reflection. Use the <xref uid=\"com.microsoft.azure.storage.table.Ignore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Ignore\"></xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization. Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation in a subclass that uses the reflection methods. </p>\r\n<p></p>"
  syntax:
    content: public interface TableEntity
- uid: com.microsoft.azure.storage.table.TableOperation
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableOperation.yml
  name: TableOperation
  nameWithType: TableOperation
  fullName: com.microsoft.azure.storage.table.TableOperation
  type: Class
  summary: "<p>A class which represents a single table operation. </p>\r\n<p>Use the static factory methods to construct <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instances for operations on tables that insert, update, merge, delete, replace or retrieve table entities. To execute a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> instance, call the  method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> instance. A <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> may be executed directly or as part of a <xref uid=\"com.microsoft.azure.storage.table.TableBatchOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableBatchOperation\"></xref>. If a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref> returns an entity result, it is stored in the corresponding <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableResult\"></xref> returned by the  method. </p>"
  syntax:
    content: public class TableOperation
- uid: com.microsoft.azure.storage.table.TablePayloadFormat
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TablePayloadFormat.yml
  name: TablePayloadFormat
  nameWithType: TablePayloadFormat
  fullName: com.microsoft.azure.storage.table.TablePayloadFormat
  type: Enum
  summary: "<p>Describes the payload formats supported for Tables. </p>"
  syntax:
    content: public enum TablePayloadFormat
- uid: com.microsoft.azure.storage.table.TablePermissions
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TablePermissions.yml
  name: TablePermissions
  nameWithType: TablePermissions
  fullName: com.microsoft.azure.storage.table.TablePermissions
  type: Class
  summary: "<p>Represents the permissions for a table. </p>"
  syntax:
    content: public class TablePermissions extends Permissions<SharedAccessTablePolicy>
- uid: com.microsoft.azure.storage.table.TableQuery
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableQuery.yml
  name: TableQuery<T>
  nameWithType: TableQuery<T>
  fullName: com.microsoft.azure.storage.table.TableQuery<T>
  type: Class
  summary: "<p>A class which represents a query against a specified table. A <xref uid=\"com.microsoft.azure.storage.table.TableQuery\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableQuery\"></xref> instance aggregates the query parameters to use when the query is executed. One of the  or  methods of <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CloudTableClient\"></xref> must be called to execute the query. The parameters are encoded and passed to the server when the table query is executed. </p>\r\n<p>To create a table query with fluent syntax, the <xref uid=\"com.microsoft.azure.storage.table.TableQuery.from(final Class&lt;T&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"from\"></xref> static factory method and the <xref uid=\"com.microsoft.azure.storage.table.TableQuery.where(final String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"where\"></xref>, <xref uid=\"com.microsoft.azure.storage.table.TableQuery.select(final String [])\" data-throw-if-not-resolved=\"false\" data-raw-source=\"select\"></xref>, and <xref uid=\"com.microsoft.azure.storage.table.TableQuery.take(final Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"take\"></xref> mutator methods each return a reference to the object which can be chained into a single expression. Use the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"from(Class)\"></xref> static class factory method to create a  instance that executes on the named table with entities of the specified <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> implementing type. Use the <xref uid=\"com.microsoft.azure.storage.table.TableQuery.where(final String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"where\"></xref> method to specify a filter expression for the entities returned. Use the <xref uid=\"com.microsoft.azure.storage.table.TableQuery.select(final String [])\" data-throw-if-not-resolved=\"false\" data-raw-source=\"select\"></xref> method to specify the table entity properties to return. Use the <xref uid=\"com.microsoft.azure.storage.table.TableQuery.take(final Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"take\"></xref> method to limit the number of entities returned by the query. Note that nothing prevents calling these methods more than once on a , so the values saved in the  will be the last encountered in order of execution. </p>\r\n<p>As an example, you could construct a table query using fluent syntax: </p>\r\n<p></p>\r\n<p>This example creates a query on the \"Products\" table for all entities where the PartitionKey value is \"ProductsMNO\" and the RowKey value is greater than or equal to \"Napkin\" and requests the first 25 matching entities, selecting only the common properties and the property named \"InventoryCount\", and returns them as <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicTableEntity\"></xref> objects. </p>\r\n<p>Filter expressions for use with the <xref uid=\"com.microsoft.azure.storage.table.TableQuery.where(final String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"where\"></xref> method or <xref uid=\"com.microsoft.azure.storage.table.TableQuery.setFilterString(final String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setFilterString\"></xref> method can be created using fluent syntax with the overloaded <xref uid=\"com.microsoft.azure.storage.table.TableQuery.generateFilterCondition(String,String,final boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"generateFilterCondition\"></xref> methods and <xref uid=\"com.microsoft.azure.storage.table.TableQuery.combineFilters(String,String,String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"combineFilters\"></xref> method, using the comparison operators defined in <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryComparisons\"></xref> and the logical operators defined in <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Operators\"></xref>. Note that the first operand in a filter comparison must be a property name, and the second operand must evaluate to a constant. The PartitionKey and RowKey property values are  types for comparison purposes. </p>\r\n<p>The values that may be used in table queries are explained in more detail in the MSDN topic <a href=\"http://msdn.microsoft.com/en-us/library/azure/dd894031.aspx\">Querying Tables and Entities</a>, but note that the space characters within values do not need to be URL-encoded, as this will be done when the query is executed. </p>\r\n<p>The <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableQuery#TableQuery(Class)\"></xref> constructor and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableQuery#from(Class)\"></xref> static factory methods require a class type which implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> and contains a nullary constructor. If the query will be executed using an <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EntityResolver\"></xref>, the caller may specify <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> as the class type.</p>\r\n<p></p>"
  syntax:
    content: public class TableQuery<T extends TableEntity>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: '<p>A class type which implements <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> and contains a nullary constructor. Note: when using an inner class to define the class type, mark the class as static. </p>'
- uid: com.microsoft.azure.storage.table.TableRequestOptions
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableRequestOptions.yml
  name: TableRequestOptions
  nameWithType: TableRequestOptions
  fullName: com.microsoft.azure.storage.table.TableRequestOptions
  type: Class
  summary: "<p>Represents a set of timeout, payload format, and retry policy options that may be specified for a table operation request. </p>"
  syntax:
    content: public class TableRequestOptions extends RequestOptions
- uid: com.microsoft.azure.storage.table.TableResult
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableResult.yml
  name: TableResult
  nameWithType: TableResult
  fullName: com.microsoft.azure.storage.table.TableResult
  type: Class
  summary: "<p>A class which represents the result of a table operation. The <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableResult\"></xref> class encapsulates the HTTP response and any table entity results returned by the Storage Service REST API operation called for a particular <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableOperation\"></xref>. </p>"
  syntax:
    content: public class TableResult
- uid: com.microsoft.azure.storage.table.TableServiceEntity
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableServiceEntity.yml
  name: TableServiceEntity
  nameWithType: TableServiceEntity
  fullName: com.microsoft.azure.storage.table.TableServiceEntity
  type: Class
  summary: "<p>The <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> class represents the base object type for a table entity in the Storage service. <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> provides a base implementation for the <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableEntity\"></xref> interface that provides  and  methods that by default serialize and deserialize all properties via reflection. A table entity class may extend this class and override the  and  methods to provide customized or more performant serialization logic. </p>\r\n<p>The use of reflection allows subclasses of <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TableServiceEntity\"></xref> to be serialized and deserialized without having to implement the serialization code themselves. When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data. To take advantage of the automatic serialization code, your table entity classes should provide getter and setter methods for each property in the corresponding table entity in Microsoft Azure table storage. The reflection code looks for getter and setter methods in pairs of the form </p>\r\n<p></p>\r\n<p>and </p>\r\n<p></p>\r\n<p>where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property. See the table below for a map of property types to their Java equivalents. The <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention. Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotations are case sensitive for matching property names with reflection. Use the <xref uid=\"com.microsoft.azure.storage.table.Ignore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Ignore\"></xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization. Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoreAs\"></xref> annotation in a subclass. </p>\r\n<p>The following table shows the supported property data types in Microsoft Azure storage and the corresponding Java types when deserialized. <table rows=\"9\" cols=\"4\"><caption>Supported property data types in Microsoft Azure storage</caption><row><entry thead=\"yes\"><p>Storage Type </p></entry><entry thead=\"yes\"><p>EdmType Value </p></entry><entry thead=\"yes\"><p>Java Type </p></entry><entry thead=\"yes\"><p>Description  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.Binary</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.BINARY\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#BINARY\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>An array of bytes up to 64 KB in size.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.Boolean</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.BOOLEAN\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#BOOLEAN\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A Boolean value.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.DateTime</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.DATE_TIME\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#DATE_TIME\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A 64-bit value expressed as Coordinated Universal Time (UTC). The supported range begins from 12:00 midnight, January 1, 1601 A.D. (C.E.), UTC. The range ends at December 31, 9999.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.Double</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.DOUBLE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#DOUBLE\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A 64-bit double-precision floating point value.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.Guid</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.GUID\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#GUID\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A 128-bit globally unique identifier.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.Int32</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.INT32\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#INT32\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A 32-bit integer value.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.Int64</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.INT64\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#INT64\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A 64-bit integer value.  </p></entry></row><row><entry thead=\"no\"><p><b>Edm.String</b></p></entry><entry thead=\"no\"><p><xref uid=\"com.microsoft.azure.storage.table.EdmType.STRING\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType#STRING\"></xref></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p>A UTF-16-encoded value. String values may be up to 64 KB in size.  </p></entry></row></table></p>\r\n<p>See the MSDN topic <a href=\"http://msdn.microsoft.com//library/azure/dd179338.aspx\">Understanding the Table Service Data Model</a> for an overview of tables, entities, and properties as used in the Microsoft Azure Storage service. </p>\r\n<p>For an overview of the available EDM primitive data types and names, see the</p>\r\n<p>\r\n  <a href=\"http://www.odata.org/developers/protocols/overview#AbstractTypeSystem\">Primitive Data Types</a> section of the <a href=\"http://www.odata.org/developers/protocols/overview\">OData Protocol Overview</a>. </p>\r\n<p></p>"
  syntax:
    content: public class TableServiceEntity implements TableEntity
- uid: com.microsoft.azure.storage.table.TableServiceException
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableServiceException.yml
  name: TableServiceException
  nameWithType: TableServiceException
  fullName: com.microsoft.azure.storage.table.TableServiceException
  type: Class
  summary: "<p>An exception that results when a table storage service operation fails to complete successfully. </p>"
  syntax:
    content: public class TableServiceException extends StorageException
- uid: com.microsoft.azure.storage.table.TableRequestOptions.EncryptionResolver
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableRequestOptions.EncryptionResolver.yml
  name: TableRequestOptions.EncryptionResolver
  nameWithType: TableRequestOptions.EncryptionResolver
  fullName: com.microsoft.azure.storage.table.TableRequestOptions.EncryptionResolver
  type: Interface
  summary: "<p>The interface whose function is used to get the value indicating whether a property should be encrypted or not given the partition key, row key, and the property name. </p>"
  syntax:
    content: public interface EncryptionResolver
- uid: com.microsoft.azure.storage.table.TableQuery.Operators
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableQuery.Operators.yml
  name: TableQuery.Operators
  nameWithType: TableQuery.Operators
  fullName: com.microsoft.azure.storage.table.TableQuery.Operators
  type: Class
  summary: "<p>A static class that maps identifiers to filter expression operators. </p>"
  syntax:
    content: public class Operators
- uid: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver.yml
  name: TableRequestOptions.PropertyResolver
  nameWithType: TableRequestOptions.PropertyResolver
  fullName: com.microsoft.azure.storage.table.TableRequestOptions.PropertyResolver
  type: Interface
  summary: "<p>The interface whose function is used to get the <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EdmType\"></xref> for an entity property given the partition key, row, key, and the property name, if the interface is implemented </p>"
  syntax:
    content: public interface PropertyResolver
- uid: com.microsoft.azure.storage.table.TableQuery.QueryComparisons
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableQuery.QueryComparisons.yml
  name: TableQuery.QueryComparisons
  nameWithType: TableQuery.QueryComparisons
  fullName: com.microsoft.azure.storage.table.TableQuery.QueryComparisons
  type: Class
  summary: "<p>A static class that maps identifiers to filter property comparison operators. </p>"
  syntax:
    content: public class QueryComparisons
