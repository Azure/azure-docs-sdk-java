### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer"
fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer"
name: "EdgeNGramTokenizer"
nameWithType: "EdgeNGramTokenizer"
summary: "Tokenizes the input from an edge into n-grams of the given size(s). This tokenizer is implemented using Apache Lucene."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.search.documents.indexes.models.LexicalTokenizer.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EdgeNGramTokenizer extends LexicalTokenizer"
constructors:
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.EdgeNGramTokenizer(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.EdgeNGramTokenizer(String name)"
  name: "EdgeNGramTokenizer(String name)"
  nameWithType: "EdgeNGramTokenizer.EdgeNGramTokenizer(String name)"
  summary: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.LexicalTokenizer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LexicalTokenizer\"></xref>."
  parameters:
  - description: "The name of the tokenizer. It must only contain letters, digits, spaces,\n dashes or underscores, can only start and end with alphanumeric\n characters, and is limited to 128 characters."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EdgeNGramTokenizer(String name)"
methods:
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getMaxGram()"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getMaxGram()"
  name: "getMaxGram()"
  nameWithType: "EdgeNGramTokenizer.getMaxGram()"
  summary: "Get the maxGram property: The maximum n-gram length. Default is 2. Maximum is 300."
  syntax: "public Integer getMaxGram()"
  returns:
    description: "the maxGram value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getMinGram()"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getMinGram()"
  name: "getMinGram()"
  nameWithType: "EdgeNGramTokenizer.getMinGram()"
  summary: "Get the minGram property: The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram."
  syntax: "public Integer getMinGram()"
  returns:
    description: "the minGram value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getTokenChars()"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.getTokenChars()"
  name: "getTokenChars()"
  nameWithType: "EdgeNGramTokenizer.getTokenChars()"
  summary: "Get the tokenChars property: Character classes to keep in the tokens."
  syntax: "public List<TokenCharacterKind> getTokenChars()"
  returns:
    description: "the tokenChars value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.TokenCharacterKind?alt=com.azure.search.documents.indexes.models.TokenCharacterKind&text=TokenCharacterKind\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setMaxGram(java.lang.Integer)"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setMaxGram(Integer maxGram)"
  name: "setMaxGram(Integer maxGram)"
  nameWithType: "EdgeNGramTokenizer.setMaxGram(Integer maxGram)"
  summary: "Set the maxGram property: The maximum n-gram length. Default is 2. Maximum is 300."
  parameters:
  - description: "the maxGram value to set."
    name: "maxGram"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EdgeNGramTokenizer setMaxGram(Integer maxGram)"
  returns:
    description: "the EdgeNGramTokenizer object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.EdgeNGramTokenizer?alt=com.azure.search.documents.indexes.models.EdgeNGramTokenizer&text=EdgeNGramTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setMinGram(java.lang.Integer)"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setMinGram(Integer minGram)"
  name: "setMinGram(Integer minGram)"
  nameWithType: "EdgeNGramTokenizer.setMinGram(Integer minGram)"
  summary: "Set the minGram property: The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram."
  parameters:
  - description: "the minGram value to set."
    name: "minGram"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EdgeNGramTokenizer setMinGram(Integer minGram)"
  returns:
    description: "the EdgeNGramTokenizer object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.EdgeNGramTokenizer?alt=com.azure.search.documents.indexes.models.EdgeNGramTokenizer&text=EdgeNGramTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setTokenChars(com.azure.search.documents.indexes.models.TokenCharacterKind...)"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setTokenChars(TokenCharacterKind[] tokenChars)"
  name: "setTokenChars(TokenCharacterKind[] tokenChars)"
  nameWithType: "EdgeNGramTokenizer.setTokenChars(TokenCharacterKind[] tokenChars)"
  summary: "Set the tokenChars property: Character classes to keep in the tokens."
  parameters:
  - description: "the tokenChars value to set."
    name: "tokenChars"
    type: "<xref href=\"com.azure.search.documents.indexes.models.TokenCharacterKind?alt=com.azure.search.documents.indexes.models.TokenCharacterKind&text=TokenCharacterKind\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public EdgeNGramTokenizer setTokenChars(TokenCharacterKind[] tokenChars)"
  returns:
    description: "the EdgeNGramTokenizer object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.EdgeNGramTokenizer?alt=com.azure.search.documents.indexes.models.EdgeNGramTokenizer&text=EdgeNGramTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setTokenChars(java.util.List<com.azure.search.documents.indexes.models.TokenCharacterKind>)"
  fullName: "com.azure.search.documents.indexes.models.EdgeNGramTokenizer.setTokenChars(List<TokenCharacterKind> tokenChars)"
  name: "setTokenChars(List<TokenCharacterKind> tokenChars)"
  nameWithType: "EdgeNGramTokenizer.setTokenChars(List<TokenCharacterKind> tokenChars)"
  summary: "Set the tokenChars property: Character classes to keep in the tokens."
  parameters:
  - description: "the tokenChars value to set."
    name: "tokenChars"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.TokenCharacterKind?alt=com.azure.search.documents.indexes.models.TokenCharacterKind&text=TokenCharacterKind\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EdgeNGramTokenizer setTokenChars(List<TokenCharacterKind> tokenChars)"
  returns:
    description: "the EdgeNGramTokenizer object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.EdgeNGramTokenizer?alt=com.azure.search.documents.indexes.models.EdgeNGramTokenizer&text=EdgeNGramTokenizer\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.4.9
