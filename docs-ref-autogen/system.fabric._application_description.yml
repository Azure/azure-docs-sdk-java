### YamlMime:ManagedReference
items:
- uid: system.fabric._application_description
  id: _application_description
  parent: system.fabric
  children:
  - system.fabric._application_description.ApplicationDescription()
  - system.fabric._application_description.ApplicationDescription(URI,String,String)
  - system.fabric._application_description.ApplicationDescription(URI,String,String,Map<String, List<String>>)
  - system.fabric._application_description.getApplicationName()
  - system.fabric._application_description.getApplicationParameters()
  - system.fabric._application_description.getApplicationTypeName()
  - system.fabric._application_description.getApplicationTypeVersion()
  - system.fabric._application_description.getMaximumNodes()
  - system.fabric._application_description.getMetrics()
  - system.fabric._application_description.getMinimumNodes()
  - system.fabric._application_description.setApplicationName(URI)
  - system.fabric._application_description.setApplicationTypeName(String)
  - system.fabric._application_description.setApplicationTypeVersion(String)
  - system.fabric._application_description.setMaximumNodes(long)
  - system.fabric._application_description.setMetrics(List<ApplicationMetricDescription>)
  - system.fabric._application_description.setMinimumNodes(long)
  href: system.fabric._application_description.yml
  langs:
  - java
  name: ApplicationDescription
  nameWithType: ApplicationDescription
  fullName: system.fabric.ApplicationDescription
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 15
  package: system.fabric
  summary: <p>Describes an application to be created by using <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(system.fabric.ApplicationDescription)</xref></p>
  syntax: &o3
    content: public class ApplicationDescription
  inheritance:
  - java.lang.Object
- uid: system.fabric._application_description.ApplicationDescription()
  id: ApplicationDescription()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: ApplicationDescription()
  nameWithType: ApplicationDescription.ApplicationDescription()
  fullName: system.fabric.ApplicationDescription.ApplicationDescription()
  overload: system.fabric._application_description.ApplicationDescription*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 42
  package: system.fabric
  summary: <p>Instantiates an instance of <xref uid="" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref> class. </p>
  syntax:
    content: public ApplicationDescription()
- uid: system.fabric._application_description.ApplicationDescription(URI,String,String)
  id: ApplicationDescription(URI,String,String)
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion)
  nameWithType: ApplicationDescription.ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion)
  fullName: system.fabric.ApplicationDescription.ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion)
  overload: system.fabric._application_description.ApplicationDescription*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 57
  package: system.fabric
  summary: >-
    <p>Instantiates an instance of <xref uid="" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref> with the application instance name, the application type name, and the application type version.</p>

    <p></p>
  syntax:
    content: public ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>URI of the application instance name. </p>
    - id: applicationTypeName
      type: "26831127"
      description: <p>Name of the application type. </p>
    - id: applicationTypeVersion
      type: "26831127"
      description: <p>Version of the application type. </p>
- uid: system.fabric._application_description.ApplicationDescription(URI,String,String,Map<String, List<String>>)
  id: ApplicationDescription(URI,String,String,Map<String, List<String>>)
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion, Map<String, List<String>> applicationParameters)
  nameWithType: ApplicationDescription.ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion, Map<String, List<String>> applicationParameters)
  fullName: system.fabric.ApplicationDescription.ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion, Map<String, List<String>> applicationParameters)
  overload: system.fabric._application_description.ApplicationDescription*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 75
  package: system.fabric
  summary: >-
    <p>Instantiates an instance of <xref uid="" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref> with the application instance name, the application type name, and the application type version.</p>

    <p></p>
  syntax:
    content: public ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion, Map<String, List<String>> applicationParameters)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>URI of the application instance name. </p>
    - id: applicationTypeName
      type: "26831127"
      description: <p>Name of the application type. </p>
    - id: applicationTypeVersion
      type: "26831127"
      description: <p>Version of the application type. </p>
    - id: applicationParameters
      type: b2319095
      description: <p>Collection of name-value pairs for the parameters that are specified in the ApplicationManifest.xml. </p>
- uid: system.fabric._application_description.getApplicationName()
  id: getApplicationName()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: getApplicationName()
  nameWithType: ApplicationDescription.getApplicationName()
  fullName: URI system.fabric.ApplicationDescription.getApplicationName()
  overload: system.fabric._application_description.getApplicationName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 196
  package: system.fabric
  summary: >-
    <p>Gets the URI name of the application instance.</p>

    <p></p>
  syntax:
    content: public URI getApplicationName()
    return:
      type: "62304784"
      description: <p>The application name. </p>
- uid: system.fabric._application_description.getApplicationParameters()
  id: getApplicationParameters()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: getApplicationParameters()
  nameWithType: ApplicationDescription.getApplicationParameters()
  fullName: Map<String, List<String>> system.fabric.ApplicationDescription.getApplicationParameters()
  overload: system.fabric._application_description.getApplicationParameters*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 218
  package: system.fabric
  syntax:
    content: public Map<String, List<String>> getApplicationParameters()
    return:
      type: b2319095
- uid: system.fabric._application_description.getApplicationTypeName()
  id: getApplicationTypeName()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: getApplicationTypeName()
  nameWithType: ApplicationDescription.getApplicationTypeName()
  fullName: String system.fabric.ApplicationDescription.getApplicationTypeName()
  overload: system.fabric._application_description.getApplicationTypeName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 205
  package: system.fabric
  summary: >-
    <p>Gets the name of the Service Fabric application type.</p>

    <p></p>
  syntax:
    content: public String getApplicationTypeName()
    return:
      type: "26831127"
      description: <p>The application type name. </p>
- uid: system.fabric._application_description.getApplicationTypeVersion()
  id: getApplicationTypeVersion()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: getApplicationTypeVersion()
  nameWithType: ApplicationDescription.getApplicationTypeVersion()
  fullName: String system.fabric.ApplicationDescription.getApplicationTypeVersion()
  overload: system.fabric._application_description.getApplicationTypeVersion*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 214
  package: system.fabric
  summary: >-
    <p>Gets the version of the application type.</p>

    <p></p>
  syntax:
    content: public String getApplicationTypeVersion()
    return:
      type: "26831127"
      description: <p>The application type version. </p>
- uid: system.fabric._application_description.getMaximumNodes()
  id: getMaximumNodes()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: getMaximumNodes()
  nameWithType: ApplicationDescription.getMaximumNodes()
  fullName: long system.fabric.ApplicationDescription.getMaximumNodes()
  overload: system.fabric._application_description.getMaximumNodes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 107
  package: system.fabric
  summary: >-
    <p>Gets the maximum number of nodes where this application can be instantiated.</p>

    <p></p>
  syntax: &o2
    content: public long getMaximumNodes()
    return:
      type: 0364520f
      description: <p>Number of nodes this application is allowed to span. Default value is zero. If it is zero, Application can span any number of nodes in the cluster. If this parameter is smaller than <xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> an <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> will be thrown when <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref> is called. </p>
- uid: system.fabric._application_description.getMetrics()
  id: getMetrics()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: getMetrics()
  nameWithType: ApplicationDescription.getMetrics()
  fullName: List<ApplicationMetricDescription> system.fabric.ApplicationDescription.getMetrics()
  overload: system.fabric._application_description.getMetrics*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 89
  package: system.fabric
  syntax:
    content: public List<ApplicationMetricDescription> getMetrics()
    return:
      type: 5618da2dsystem.fabric._application_metric_descriptiona08ddfce
- uid: system.fabric._application_description.getMinimumNodes()
  id: getMinimumNodes()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: getMinimumNodes()
  nameWithType: ApplicationDescription.getMinimumNodes()
  fullName: long system.fabric.ApplicationDescription.getMinimumNodes()
  overload: system.fabric._application_description.getMinimumNodes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 139
  package: system.fabric
  summary: >-
    <p>Gets the minimum number of nodes where Service Fabric will reserve capacity for this application.</p>

    <p></p>
  syntax: &o1
    content: public long getMinimumNodes()
    return:
      type: 0364520f
      description: <p>Number of nodes where Service Fabric will reserve Capacity in the cluster for this Application to be placed. Note that this does not mean that the Application is guaranteed to have replicas on all those nodes. If this parameter is set to zero, no capacity will be reserved. If this parameters is greater than <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> an <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> will be thrown when <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref> is called. </p>
- uid: system.fabric._application_description.setApplicationName(URI)
  id: setApplicationName(URI)
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: setApplicationName(URI applicationName)
  nameWithType: ApplicationDescription.setApplicationName(URI applicationName)
  fullName: void system.fabric.ApplicationDescription.setApplicationName(URI applicationName)
  overload: system.fabric._application_description.setApplicationName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 167
  package: system.fabric
  summary: >-
    <p>Sets the URI name of the application instance.</p>

    <p></p>
  syntax:
    content: public void setApplicationName(URI applicationName)
    parameters:
    - id: applicationName
      type: "62304784"
      description: <p>The application name. </p>
- uid: system.fabric._application_description.setApplicationTypeName(String)
  id: setApplicationTypeName(String)
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: setApplicationTypeName(String applicationTypeName)
  nameWithType: ApplicationDescription.setApplicationTypeName(String applicationTypeName)
  fullName: void system.fabric.ApplicationDescription.setApplicationTypeName(String applicationTypeName)
  overload: system.fabric._application_description.setApplicationTypeName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 177
  package: system.fabric
  summary: >-
    <p>Sets the name of the Service Fabric application type.</p>

    <p></p>
  syntax:
    content: public void setApplicationTypeName(String applicationTypeName)
    parameters:
    - id: applicationTypeName
      type: "26831127"
      description: <p>The application type name. </p>
- uid: system.fabric._application_description.setApplicationTypeVersion(String)
  id: setApplicationTypeVersion(String)
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: setApplicationTypeVersion(String applicationTypeVersion)
  nameWithType: ApplicationDescription.setApplicationTypeVersion(String applicationTypeVersion)
  fullName: void system.fabric.ApplicationDescription.setApplicationTypeVersion(String applicationTypeVersion)
  overload: system.fabric._application_description.setApplicationTypeVersion*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 187
  package: system.fabric
  summary: >-
    <p>Sets the version of the application type.</p>

    <p></p>
  syntax:
    content: public void setApplicationTypeVersion(String applicationTypeVersion)
    parameters:
    - id: applicationTypeVersion
      type: "26831127"
      description: <p>The application type version. </p>
- uid: system.fabric._application_description.setMaximumNodes(long)
  id: setMaximumNodes(long)
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: setMaximumNodes(long maximumNodes)
  nameWithType: ApplicationDescription.setMaximumNodes(long maximumNodes)
  fullName: void system.fabric.ApplicationDescription.setMaximumNodes(long maximumNodes)
  overload: system.fabric._application_description.setMaximumNodes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 122
  package: system.fabric
  summary: >-
    <p>Sets the maximum number of nodes where this application can be instantiated.</p>

    <p></p>
  syntax:
    content: public void setMaximumNodes(long maximumNodes)
    parameters:
    - id: maximumNodes
      type: 0364520f
      description: <p>Number of nodes this application is allowed to span. Default value is zero. If it is zero, Application can span any number of nodes in the cluster. If this parameter is smaller than <xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> an <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> will be thrown when <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref> is called. </p>
- uid: system.fabric._application_description.setMetrics(List<ApplicationMetricDescription>)
  id: setMetrics(List<ApplicationMetricDescription>)
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: setMetrics(List<ApplicationMetricDescription> metrics)
  nameWithType: ApplicationDescription.setMetrics(List<ApplicationMetricDescription> metrics)
  fullName: void system.fabric.ApplicationDescription.setMetrics(List<ApplicationMetricDescription> metrics)
  overload: system.fabric._application_description.setMetrics*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 93
  package: system.fabric
  syntax:
    content: public void setMetrics(List<ApplicationMetricDescription> metrics)
    parameters:
    - id: metrics
      type: 5618da2dsystem.fabric._application_metric_descriptiona08ddfce
- uid: system.fabric._application_description.setMinimumNodes(long)
  id: setMinimumNodes(long)
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  langs:
  - java
  name: setMinimumNodes(long minimumNodes)
  nameWithType: ApplicationDescription.setMinimumNodes(long minimumNodes)
  fullName: void system.fabric.ApplicationDescription.setMinimumNodes(long minimumNodes)
  overload: system.fabric._application_description.setMinimumNodes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
    startLine: 157
  package: system.fabric
  summary: >-
    <p>Sets the minimum number of nodes where Service Fabric will reserve capacity for this application.</p>

    <p></p>
  syntax:
    content: public void setMinimumNodes(long minimumNodes)
    parameters:
    - id: minimumNodes
      type: 0364520f
      description: <p>Number of nodes where Service Fabric will reserve Capacity in the cluster for this Application to be placed. Note that this does not mean that the Application is guaranteed to have replicas on all those nodes. If this parameter is set to zero, no capacity will be reserved. If this parameters is greater than <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> an <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> will be thrown when <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref> is called. </p>
references:
- uid: system.fabric._application_description.ApplicationDescription*
  name: ApplicationDescription
  nameWithType: ApplicationDescription.ApplicationDescription
  fullName: system.fabric.ApplicationDescription.ApplicationDescription
  package: system.fabric
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: b2319095
  spec.java:
  - name: Map<String, List<String>>
    fullName: Map<String, List<String>>
- uid: 5618da2dsystem.fabric._application_metric_descriptiona08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: system.fabric._application_metric_description
    name: ApplicationMetricDescription
    fullName: system.fabric.ApplicationMetricDescription
    href: system.fabric._application_metric_description.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric._application_description.getMetrics*
  name: getMetrics
  nameWithType: ApplicationDescription.getMetrics
  fullName: List<ApplicationMetricDescription> system.fabric.ApplicationDescription.getMetrics
  package: system.fabric
- uid: system.fabric._application_description.setMetrics*
  name: setMetrics
  nameWithType: ApplicationDescription.setMetrics
  fullName: void system.fabric.ApplicationDescription.setMetrics
  package: system.fabric
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric._application_description.getMaximumNodes*
  name: getMaximumNodes
  nameWithType: ApplicationDescription.getMaximumNodes
  fullName: long system.fabric.ApplicationDescription.getMaximumNodes
  package: system.fabric
- uid: system.fabric._application_description.setMaximumNodes*
  name: setMaximumNodes
  nameWithType: ApplicationDescription.setMaximumNodes
  fullName: void system.fabric.ApplicationDescription.setMaximumNodes
  package: system.fabric
- uid: system.fabric._application_description.getMinimumNodes*
  name: getMinimumNodes
  nameWithType: ApplicationDescription.getMinimumNodes
  fullName: long system.fabric.ApplicationDescription.getMinimumNodes
  package: system.fabric
- uid: system.fabric._application_description.setMinimumNodes*
  name: setMinimumNodes
  nameWithType: ApplicationDescription.setMinimumNodes
  fullName: void system.fabric.ApplicationDescription.setMinimumNodes
  package: system.fabric
- uid: system.fabric._application_description.setApplicationName*
  name: setApplicationName
  nameWithType: ApplicationDescription.setApplicationName
  fullName: void system.fabric.ApplicationDescription.setApplicationName
  package: system.fabric
- uid: system.fabric._application_description.setApplicationTypeName*
  name: setApplicationTypeName
  nameWithType: ApplicationDescription.setApplicationTypeName
  fullName: void system.fabric.ApplicationDescription.setApplicationTypeName
  package: system.fabric
- uid: system.fabric._application_description.setApplicationTypeVersion*
  name: setApplicationTypeVersion
  nameWithType: ApplicationDescription.setApplicationTypeVersion
  fullName: void system.fabric.ApplicationDescription.setApplicationTypeVersion
  package: system.fabric
- uid: system.fabric._application_description.getApplicationName*
  name: getApplicationName
  nameWithType: ApplicationDescription.getApplicationName
  fullName: URI system.fabric.ApplicationDescription.getApplicationName
  package: system.fabric
- uid: system.fabric._application_description.getApplicationTypeName*
  name: getApplicationTypeName
  nameWithType: ApplicationDescription.getApplicationTypeName
  fullName: String system.fabric.ApplicationDescription.getApplicationTypeName
  package: system.fabric
- uid: system.fabric._application_description.getApplicationTypeVersion*
  name: getApplicationTypeVersion
  nameWithType: ApplicationDescription.getApplicationTypeVersion
  fullName: String system.fabric.ApplicationDescription.getApplicationTypeVersion
  package: system.fabric
- uid: system.fabric._application_description.getApplicationParameters*
  name: getApplicationParameters
  nameWithType: ApplicationDescription.getApplicationParameters
  fullName: Map<String, List<String>> system.fabric.ApplicationDescription.getApplicationParameters
  package: system.fabric
- uid: system.fabric._application_metric_description
  parent: system.fabric
  href: system.fabric._application_metric_description.yml
  name: ApplicationMetricDescription
  nameWithType: ApplicationMetricDescription
  fullName: system.fabric.ApplicationMetricDescription
  type: Class
  summary: <p>Specifies the application capacity for one metric. <xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref><xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref></p>
  syntax:
    content: public class ApplicationMetricDescription
- uid: system.fabric._application_description.getMinimumNodes()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  name: getMinimumNodes()
  nameWithType: ApplicationDescription.getMinimumNodes()
  fullName: long system.fabric.ApplicationDescription.getMinimumNodes()
  type: Method
  summary: >-
    <p>Gets the minimum number of nodes where Service Fabric will reserve capacity for this application.</p>

    <p></p>
  syntax: *o1
- uid: system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)
  parent: system.fabric._application_management_client
  href: system.fabric._application_management_client.yml
  name: createApplicationAsync(ApplicationDescription applicationDescription)
  nameWithType: ApplicationManagementClient.createApplicationAsync(ApplicationDescription applicationDescription)
  fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.createApplicationAsync(ApplicationDescription applicationDescription)
  type: Method
  summary: >-
    <p>Creates and instantiates the specific Service Fabric application.</p>

    <p>

      <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricErrorCode#ImageBuilderValidationError</xref> : The create application request is not valid with respect to the provisioned manifests for the requested application type. </p>

    <p>

      <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricErrorCode#InvalidNameUri</xref> : The application name is not a valid Naming URI. </p>

    <p>

      <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricErrorCode#CorruptedImageStoreObjectFound</xref> : A corrupted file was encountered on the ImageStore. </p>

    <p>

      <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricErrorCode#ApplicationAlreadyExists</xref> : The application has already been created. </p>

    <p>

      <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricErrorCode#ApplicationTypeNotFound</xref> : The requested application type has not been provisioned yet. </p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> createApplicationAsync(ApplicationDescription applicationDescription)
    parameters:
    - id: applicationDescription
      type: system.fabric._application_description
      description: <p>The description of the application. </p>
    return:
      type: 7e53ac82
      description: <p>The created Service Fabric application. </p>
- uid: system.fabric._application_description.getMaximumNodes()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  name: getMaximumNodes()
  nameWithType: ApplicationDescription.getMaximumNodes()
  fullName: long system.fabric.ApplicationDescription.getMaximumNodes()
  type: Method
  summary: >-
    <p>Gets the maximum number of nodes where this application can be instantiated.</p>

    <p></p>
  syntax: *o2
- uid: system.fabric._application_description
  parent: system.fabric
  href: system.fabric._application_description.yml
  name: ApplicationDescription
  nameWithType: ApplicationDescription
  fullName: system.fabric.ApplicationDescription
  type: Class
  summary: <p>Describes an application to be created by using <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(system.fabric.ApplicationDescription)</xref></p>
  syntax: *o3
- uid: system.fabric._pin_collection
  parent: system.fabric
  href: system.fabric._pin_collection.yml
  name: PinCollection
  nameWithType: PinCollection
  fullName: system.fabric.PinCollection
  type: Class
  syntax:
    content: public class PinCollection
