### YamlMime:JavaType
uid: "com.microsoft.azure.management.monitor.SenderAuthorization"
fullName: "com.microsoft.azure.management.monitor.SenderAuthorization"
name: "SenderAuthorization"
nameWithType: "SenderAuthorization"
summary: "the authorization used by the user who has performed the operation that led to this event."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SenderAuthorization"
constructors:
- uid: "com.microsoft.azure.management.monitor.SenderAuthorization.SenderAuthorization()"
  fullName: "com.microsoft.azure.management.monitor.SenderAuthorization.SenderAuthorization()"
  name: "SenderAuthorization()"
  nameWithType: "SenderAuthorization.SenderAuthorization()"
  syntax: "public SenderAuthorization()"
methods:
- uid: "com.microsoft.azure.management.monitor.SenderAuthorization.action()"
  fullName: "com.microsoft.azure.management.monitor.SenderAuthorization.action()"
  name: "action()"
  nameWithType: "SenderAuthorization.action()"
  summary: "Get the permissible actions."
  syntax: "public String action()"
  desc: "Get the permissible actions. For instance: microsoft.support/supporttickets/write."
  returns:
    description: "the action value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.SenderAuthorization.role()"
  fullName: "com.microsoft.azure.management.monitor.SenderAuthorization.role()"
  name: "role()"
  nameWithType: "SenderAuthorization.role()"
  summary: "Get the role of the user."
  syntax: "public String role()"
  desc: "Get the role of the user. For instance: Subscription Admin."
  returns:
    description: "the role value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.SenderAuthorization.scope()"
  fullName: "com.microsoft.azure.management.monitor.SenderAuthorization.scope()"
  name: "scope()"
  nameWithType: "SenderAuthorization.scope()"
  summary: "Get the scope."
  syntax: "public String scope()"
  desc: "Get the scope."
  returns:
    description: "the scope value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.SenderAuthorization.withAction(java.lang.String)"
  fullName: "com.microsoft.azure.management.monitor.SenderAuthorization.withAction(String action)"
  name: "withAction(String action)"
  nameWithType: "SenderAuthorization.withAction(String action)"
  summary: "Set the permissible actions."
  parameters:
  - description: "the action value to set"
    name: "action"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SenderAuthorization withAction(String action)"
  desc: "Set the permissible actions. For instance: microsoft.support/supporttickets/write."
  returns:
    description: "the SenderAuthorization object itself."
    type: "<xref href=\"com.microsoft.azure.management.monitor.SenderAuthorization?alt=com.microsoft.azure.management.monitor.SenderAuthorization&text=SenderAuthorization\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.SenderAuthorization.withRole(java.lang.String)"
  fullName: "com.microsoft.azure.management.monitor.SenderAuthorization.withRole(String role)"
  name: "withRole(String role)"
  nameWithType: "SenderAuthorization.withRole(String role)"
  summary: "Set the role of the user."
  parameters:
  - description: "the role value to set"
    name: "role"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SenderAuthorization withRole(String role)"
  desc: "Set the role of the user. For instance: Subscription Admin."
  returns:
    description: "the SenderAuthorization object itself."
    type: "<xref href=\"com.microsoft.azure.management.monitor.SenderAuthorization?alt=com.microsoft.azure.management.monitor.SenderAuthorization&text=SenderAuthorization\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.SenderAuthorization.withScope(java.lang.String)"
  fullName: "com.microsoft.azure.management.monitor.SenderAuthorization.withScope(String scope)"
  name: "withScope(String scope)"
  nameWithType: "SenderAuthorization.withScope(String scope)"
  summary: "Set the scope."
  parameters:
  - description: "the scope value to set"
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SenderAuthorization withScope(String scope)"
  desc: "Set the scope."
  returns:
    description: "the SenderAuthorization object itself."
    type: "<xref href=\"com.microsoft.azure.management.monitor.SenderAuthorization?alt=com.microsoft.azure.management.monitor.SenderAuthorization&text=SenderAuthorization\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "the authorization used by the user who has performed the operation that led to this event. This captures the RBAC properties of the event. These usually include the 'action', 'role' and the 'scope'."
metadata: {}
package: "com.microsoft.azure.management.monitor"
artifact: com.microsoft.azure:azure-mgmt-monitor:1.41.4
