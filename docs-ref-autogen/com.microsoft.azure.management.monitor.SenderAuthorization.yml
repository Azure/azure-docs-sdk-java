### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.monitor.SenderAuthorization
  id: SenderAuthorization
  artifact: com.microsoft.azure:azure-mgmt-monitor:1.36.1
  parent: com.microsoft.azure.management.monitor
  children:
  - com.microsoft.azure.management.monitor.SenderAuthorization.SenderAuthorization()
  - com.microsoft.azure.management.monitor.SenderAuthorization.action()
  - com.microsoft.azure.management.monitor.SenderAuthorization.role()
  - com.microsoft.azure.management.monitor.SenderAuthorization.scope()
  - com.microsoft.azure.management.monitor.SenderAuthorization.withAction(java.lang.String)
  - com.microsoft.azure.management.monitor.SenderAuthorization.withRole(java.lang.String)
  - com.microsoft.azure.management.monitor.SenderAuthorization.withScope(java.lang.String)
  langs:
  - java
  name: SenderAuthorization
  nameWithType: SenderAuthorization
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization
  type: Class
  package: com.microsoft.azure.management.monitor
  summary: the authorization used by the user who has performed the operation that led to this event. This captures the RBAC properties of the event. These usually include the 'action', 'role' and the 'scope'.
  syntax:
    content: public class SenderAuthorization
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.SenderAuthorization()
  id: SenderAuthorization()
  artifact: com.microsoft.azure:azure-mgmt-monitor:1.36.1
  parent: com.microsoft.azure.management.monitor.SenderAuthorization
  langs:
  - java
  name: SenderAuthorization()
  nameWithType: SenderAuthorization.SenderAuthorization()
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.SenderAuthorization()
  overload: com.microsoft.azure.management.monitor.SenderAuthorization.SenderAuthorization*
  type: Constructor
  package: com.microsoft.azure.management.monitor
  syntax:
    content: public SenderAuthorization()
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.action()
  id: action()
  artifact: com.microsoft.azure:azure-mgmt-monitor:1.36.1
  parent: com.microsoft.azure.management.monitor.SenderAuthorization
  langs:
  - java
  name: action()
  nameWithType: SenderAuthorization.action()
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.action()
  overload: com.microsoft.azure.management.monitor.SenderAuthorization.action*
  type: Method
  package: com.microsoft.azure.management.monitor
  summary: 'Get the permissible actions. For instance: microsoft.support/supporttickets/write.'
  syntax:
    content: public String action()
    return:
      type: java.lang.String
      description: the action value
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.role()
  id: role()
  artifact: com.microsoft.azure:azure-mgmt-monitor:1.36.1
  parent: com.microsoft.azure.management.monitor.SenderAuthorization
  langs:
  - java
  name: role()
  nameWithType: SenderAuthorization.role()
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.role()
  overload: com.microsoft.azure.management.monitor.SenderAuthorization.role*
  type: Method
  package: com.microsoft.azure.management.monitor
  summary: 'Get the role of the user. For instance: Subscription Admin.'
  syntax:
    content: public String role()
    return:
      type: java.lang.String
      description: the role value
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.scope()
  id: scope()
  artifact: com.microsoft.azure:azure-mgmt-monitor:1.36.1
  parent: com.microsoft.azure.management.monitor.SenderAuthorization
  langs:
  - java
  name: scope()
  nameWithType: SenderAuthorization.scope()
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.scope()
  overload: com.microsoft.azure.management.monitor.SenderAuthorization.scope*
  type: Method
  package: com.microsoft.azure.management.monitor
  summary: Get the scope.
  syntax:
    content: public String scope()
    return:
      type: java.lang.String
      description: the scope value
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.withAction(java.lang.String)
  id: withAction(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-monitor:1.36.1
  parent: com.microsoft.azure.management.monitor.SenderAuthorization
  langs:
  - java
  name: withAction(String action)
  nameWithType: SenderAuthorization.withAction(String action)
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.withAction(String action)
  overload: com.microsoft.azure.management.monitor.SenderAuthorization.withAction*
  type: Method
  package: com.microsoft.azure.management.monitor
  summary: 'Set the permissible actions. For instance: microsoft.support/supporttickets/write.'
  syntax:
    content: public SenderAuthorization withAction(String action)
    parameters:
    - id: action
      type: java.lang.String
      description: the action value to set
    return:
      type: com.microsoft.azure.management.monitor.SenderAuthorization
      description: the SenderAuthorization object itself.
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.withRole(java.lang.String)
  id: withRole(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-monitor:1.36.1
  parent: com.microsoft.azure.management.monitor.SenderAuthorization
  langs:
  - java
  name: withRole(String role)
  nameWithType: SenderAuthorization.withRole(String role)
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.withRole(String role)
  overload: com.microsoft.azure.management.monitor.SenderAuthorization.withRole*
  type: Method
  package: com.microsoft.azure.management.monitor
  summary: 'Set the role of the user. For instance: Subscription Admin.'
  syntax:
    content: public SenderAuthorization withRole(String role)
    parameters:
    - id: role
      type: java.lang.String
      description: the role value to set
    return:
      type: com.microsoft.azure.management.monitor.SenderAuthorization
      description: the SenderAuthorization object itself.
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.withScope(java.lang.String)
  id: withScope(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-monitor:1.36.1
  parent: com.microsoft.azure.management.monitor.SenderAuthorization
  langs:
  - java
  name: withScope(String scope)
  nameWithType: SenderAuthorization.withScope(String scope)
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.withScope(String scope)
  overload: com.microsoft.azure.management.monitor.SenderAuthorization.withScope*
  type: Method
  package: com.microsoft.azure.management.monitor
  summary: Set the scope.
  syntax:
    content: public SenderAuthorization withScope(String scope)
    parameters:
    - id: scope
      type: java.lang.String
      description: the scope value to set
    return:
      type: com.microsoft.azure.management.monitor.SenderAuthorization
      description: the SenderAuthorization object itself.
references:
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.SenderAuthorization*
  name: SenderAuthorization
  nameWithType: SenderAuthorization.SenderAuthorization
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.SenderAuthorization
  package: com.microsoft.azure.management.monitor
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.action*
  name: action
  nameWithType: SenderAuthorization.action
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.action
  package: com.microsoft.azure.management.monitor
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.withAction*
  name: withAction
  nameWithType: SenderAuthorization.withAction
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.withAction
  package: com.microsoft.azure.management.monitor
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.role*
  name: role
  nameWithType: SenderAuthorization.role
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.role
  package: com.microsoft.azure.management.monitor
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.withRole*
  name: withRole
  nameWithType: SenderAuthorization.withRole
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.withRole
  package: com.microsoft.azure.management.monitor
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.scope*
  name: scope
  nameWithType: SenderAuthorization.scope
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.scope
  package: com.microsoft.azure.management.monitor
- uid: com.microsoft.azure.management.monitor.SenderAuthorization.withScope*
  name: withScope
  nameWithType: SenderAuthorization.withScope
  fullName: com.microsoft.azure.management.monitor.SenderAuthorization.withScope
  package: com.microsoft.azure.management.monitor
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
