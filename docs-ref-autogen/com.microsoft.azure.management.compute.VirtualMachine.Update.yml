### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.Appliable.apply()
- com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync()
- com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync(final ServiceCallback<T>)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithExtension.defineNewExtension(String)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk(String)
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithExtension.updateExtension(String)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.updateUnmanagedDataDisk(String)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithBootDiagnostics.withBootDiagnostics()
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithBootDiagnostics.withBootDiagnostics(Creatable<StorageAccount>)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithBootDiagnostics.withBootDiagnostics(StorageAccount)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithBootDiagnostics.withBootDiagnostics(String)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk,int,CachingTypes)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk,int,int,CachingTypes)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithSecondaryNetworkInterface.withExistingSecondaryNetworkInterface(NetworkInterface)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk(String,String,String)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedServiceIdentity.withManagedServiceIdentity()
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedServiceIdentity.withManagedServiceIdentity(int)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk>)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk>,int,CachingTypes)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(int)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(int,int,CachingTypes)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(int,int,CachingTypes,StorageAccountTypes)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithSecondaryNetworkInterface.withNewSecondaryNetworkInterface(Creatable<NetworkInterface>)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk(Integer)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithBootDiagnostics.withoutBootDiagnostics()
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withoutDataDisk(int)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithExtension.withoutExtension(String)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithSecondaryNetworkInterface.withoutSecondaryNetworkInterface(String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withoutTag(String)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(String)
- com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(int)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTag(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTags(Map<String, String>)
methods:
- fullName: com.microsoft.azure.management.compute.VirtualMachine.Update.withDataDiskDefaultCachingType(CachingTypes cachingType)
  name: withDataDiskDefaultCachingType(CachingTypes cachingType)
  nameWithType: VirtualMachine.Update.withDataDiskDefaultCachingType(CachingTypes cachingType)
  parameters:
  - description: <p>a caching type </p>
    name: cachingType
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the default caching type for the managed data disks.</p>

    <p></p>
  syntax: public Update withDataDiskDefaultCachingType(CachingTypes cachingType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.Update.withDataDiskDefaultCachingType(CachingTypes)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.Update.withDataDiskDefaultStorageAccountType(StorageAccountTypes storageAccountType)
  name: withDataDiskDefaultStorageAccountType(StorageAccountTypes storageAccountType)
  nameWithType: VirtualMachine.Update.withDataDiskDefaultStorageAccountType(StorageAccountTypes storageAccountType)
  parameters:
  - description: <p>a storage account type </p>
    name: storageAccountType
    type: <xref href="com.microsoft.azure.management.compute.StorageAccountTypes?alt=com.microsoft.azure.management.compute.StorageAccountTypes&text=StorageAccountTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies a storage account type.</p>

    <p></p>
  syntax: public Update withDataDiskDefaultStorageAccountType(StorageAccountTypes storageAccountType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.Update.withDataDiskDefaultStorageAccountType(StorageAccountTypes)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.Update.withOSDiskCaching(CachingTypes cachingType)
  name: withOSDiskCaching(CachingTypes cachingType)
  nameWithType: VirtualMachine.Update.withOSDiskCaching(CachingTypes cachingType)
  parameters:
  - description: <p>a caching type. </p>
    name: cachingType
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the caching type for the OS disk.</p>

    <p></p>
  syntax: public Update withOSDiskCaching(CachingTypes cachingType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.Update.withOSDiskCaching(CachingTypes)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.Update.withOSDiskEncryptionSettings(DiskEncryptionSettings settings)
  name: withOSDiskEncryptionSettings(DiskEncryptionSettings settings)
  nameWithType: VirtualMachine.Update.withOSDiskEncryptionSettings(DiskEncryptionSettings settings)
  parameters:
  - description: <p>the encryption settings. </p>
    name: settings
    type: <xref href="com.microsoft.azure.management.compute.DiskEncryptionSettings?alt=com.microsoft.azure.management.compute.DiskEncryptionSettings&text=DiskEncryptionSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the stage representing creatable VM update </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the encryption settings for the OS Disk.</p>

    <p></p>
  syntax: public Update withOSDiskEncryptionSettings(DiskEncryptionSettings settings)
  uid: com.microsoft.azure.management.compute.VirtualMachine.Update.withOSDiskEncryptionSettings(DiskEncryptionSettings)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.Update.withOSDiskSizeInGB(int size)
  name: withOSDiskSizeInGB(int size)
  nameWithType: VirtualMachine.Update.withOSDiskSizeInGB(int size)
  parameters:
  - description: <p>a disk size. </p>
    name: size
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the size of the OS disk in GB. </p>

    <p>Only unmanaged disks may be resized as part of a VM update. Managed disks must be resized separately, using managed disk API.</p>

    <p></p>
  syntax: public Update withOSDiskSizeInGB(int size)
  uid: com.microsoft.azure.management.compute.VirtualMachine.Update.withOSDiskSizeInGB(int)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.Update.withOSDiskSizeInGB(Integer size)
  name: withOSDiskSizeInGB(Integer size)
  nameWithType: VirtualMachine.Update.withOSDiskSizeInGB(Integer size)
  parameters:
  - description: <p>a disk size. </p>
    name: size
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the size of the OS disk in GB. </p>

    <p>Only unmanaged disks may be resized as part of a VM update. Managed disks must be resized separately, using managed disk API.</p>

    <p></p>
  syntax: public Update withOSDiskSizeInGB(Integer size)
  uid: com.microsoft.azure.management.compute.VirtualMachine.Update.withOSDiskSizeInGB(Integer)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.Update.withSize(String sizeName)
  name: withSize(String sizeName)
  nameWithType: VirtualMachine.Update.withSize(String sizeName)
  parameters:
  - description: <p>the name of a size for the virtual machine as text </p>
    name: sizeName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies a new size for the virtual machine.</p>

    <p></p>
  syntax: public Update withSize(String sizeName)
  uid: com.microsoft.azure.management.compute.VirtualMachine.Update.withSize(String)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.Update.withSize(VirtualMachineSizeTypes size)
  name: withSize(VirtualMachineSizeTypes size)
  nameWithType: VirtualMachine.Update.withSize(VirtualMachineSizeTypes size)
  parameters:
  - description: <p>a size from the list of available sizes for the virtual machine </p>
    name: size
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineSizeTypes?alt=com.microsoft.azure.management.compute.VirtualMachineSizeTypes&text=VirtualMachineSizeTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.Update?alt=com.microsoft.azure.management.compute.VirtualMachine.Update&text=VirtualMachine.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies a new size for the virtual machine.</p>

    <p></p>
  syntax: public Update withSize(VirtualMachineSizeTypes size)
  uid: com.microsoft.azure.management.compute.VirtualMachine.Update.withSize(VirtualMachineSizeTypes)
nameWithType: VirtualMachine.Update
syntax: public interface Update extends Appliable<VirtualMachine>,Resource.UpdateWithTags<Update>,VirtualMachine.UpdateStages.WithUnmanagedDataDisk,VirtualMachine.UpdateStages.WithManagedDataDisk,VirtualMachine.UpdateStages.WithSecondaryNetworkInterface,VirtualMachine.UpdateStages.WithExtension,VirtualMachine.UpdateStages.WithBootDiagnostics,VirtualMachine.UpdateStages.WithManagedServiceIdentity
type: interface
uid: com.microsoft.azure.management.compute.VirtualMachine.Update
fullName: com.microsoft.azure.management.compute.VirtualMachine.Update
name: VirtualMachine.Update
package: com.microsoft.azure.management.compute
summary: <p>The template for an update operation, containing all the settings that can be modified. </p>
metadata: {}
