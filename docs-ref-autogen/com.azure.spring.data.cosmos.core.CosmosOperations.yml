### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.core.CosmosOperations"
fullName: "com.azure.spring.data.cosmos.core.CosmosOperations"
name: "CosmosOperations"
nameWithType: "CosmosOperations"
summary: "Interface for cosmosDB operations"
syntax: "public interface **CosmosOperations**"
methods:
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T,ID>findByIds(java.lang.Iterable<ID>,java.lang.Class<T>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.<T,ID>findByIds(Iterable<ID> ids, Class<T> domainType, String containerName)"
  name: "<T,ID>findByIds(Iterable<ID> ids, Class<T> domainType, String containerName)"
  nameWithType: "CosmosOperations.<T,ID>findByIds(Iterable<ID> ids, Class<T> domainType, String containerName)"
  summary: "Find by ids"
  modifiers:
  - "abstract"
  parameters:
  - description: "iterable of ids"
    name: "ids"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "type class"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Iterable<T> <T,ID>findByIds(Iterable<ID> ids, Class<T> domainType, String containerName)"
  desc: "Find by ids"
  returns:
    description: "results in an Iterable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>count(com.azure.cosmos.models.SqlQuerySpec,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.count(SqlQuerySpec querySpec, String containerName)"
  name: "count(SqlQuerySpec querySpec, String containerName)"
  nameWithType: "CosmosOperations.count(SqlQuerySpec querySpec, String containerName)"
  summary: "Count"
  modifiers:
  - "abstract"
  parameters:
  - description: "the document query spec"
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract long <T>count(SqlQuerySpec querySpec, String containerName)"
  desc: "Count"
  returns:
    description: "count result"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>count(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.count(CosmosQuery query, String containerName)"
  name: "count(CosmosQuery query, String containerName)"
  nameWithType: "CosmosOperations.count(CosmosQuery query, String containerName)"
  summary: "Count"
  modifiers:
  - "abstract"
  parameters:
  - description: "the document query"
    name: "query"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract long <T>count(CosmosQuery query, String containerName)"
  desc: "Count"
  returns:
    description: "count result"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>delete(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.Class<T>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.delete(CosmosQuery query, Class<T> domainType, String containerName)"
  name: "delete(CosmosQuery query, Class<T> domainType, String containerName)"
  nameWithType: "CosmosOperations.delete(CosmosQuery query, Class<T> domainType, String containerName)"
  summary: "Delete items matching query"
  modifiers:
  - "abstract"
  parameters:
  - description: "the document query"
    name: "query"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
  - description: "type class"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Iterable<T> <T>delete(CosmosQuery query, Class<T> domainType, String containerName)"
  desc: "Delete items matching query"
  returns:
    description: "deleted items in a Iterable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>deleteEntity(java.lang.String,T)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.deleteEntity(String containerName, T entity)"
  name: "deleteEntity(String containerName, T entity)"
  nameWithType: "CosmosOperations.deleteEntity(String containerName, T entity)"
  summary: "Delete using entity"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the entity object"
    name: "entity"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void <T>deleteEntity(String containerName, T entity)"
  desc: "Delete using entity"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>exists(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.Class<T>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.exists(CosmosQuery query, Class<T> domainType, String containerName)"
  name: "exists(CosmosQuery query, Class<T> domainType, String containerName)"
  nameWithType: "CosmosOperations.exists(CosmosQuery query, Class<T> domainType, String containerName)"
  summary: "Exists"
  modifiers:
  - "abstract"
  parameters:
  - description: "the document query"
    name: "query"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
  - description: "type class"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Boolean <T>exists(CosmosQuery query, Class<T> domainType, String containerName)"
  desc: "Exists"
  returns:
    description: "Boolean"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>find(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.Class<T>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.find(CosmosQuery query, Class<T> domainType, String containerName)"
  name: "find(CosmosQuery query, Class<T> domainType, String containerName)"
  nameWithType: "CosmosOperations.find(CosmosQuery query, Class<T> domainType, String containerName)"
  summary: "Find query"
  modifiers:
  - "abstract"
  parameters:
  - description: "the document query"
    name: "query"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
  - description: "type class"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Iterable<T> <T>find(CosmosQuery query, Class<T> domainType, String containerName)"
  desc: "Find query"
  returns:
    description: "results in an Iterable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findAll(com.azure.cosmos.models.PartitionKey,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.findAll(PartitionKey partitionKey, Class<T> domainType)"
  name: "findAll(PartitionKey partitionKey, Class<T> domainType)"
  nameWithType: "CosmosOperations.findAll(PartitionKey partitionKey, Class<T> domainType)"
  summary: "Find the Document<wbr>Query, find all the items specified by domain type in the given container."
  modifiers:
  - "abstract"
  parameters:
  - description: "the partition key"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "the domain type"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Iterable<T> <T>findAll(PartitionKey partitionKey, Class<T> domainType)"
  desc: "Find the DocumentQuery, find all the items specified by domain type in the given container."
  returns:
    description: "results in an Iterable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findAll(java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.findAll(Class<T> domainType)"
  name: "findAll(Class<T> domainType)"
  nameWithType: "CosmosOperations.findAll(Class<T> domainType)"
  summary: "Find the Document<wbr>Query, find all the items specified by domain type."
  modifiers:
  - "abstract"
  parameters:
  - description: "the domain type"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Iterable<T> <T>findAll(Class<T> domainType)"
  desc: "Find the DocumentQuery, find all the items specified by domain type."
  returns:
    description: "results in an Iterable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findAll(java.lang.String,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.findAll(String containerName, Class<T> domainType)"
  name: "findAll(String containerName, Class<T> domainType)"
  nameWithType: "CosmosOperations.findAll(String containerName, Class<T> domainType)"
  summary: "Find the Document<wbr>Query, find all the items specified by domain type in the given container."
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the domain type"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Iterable<T> <T>findAll(String containerName, Class<T> domainType)"
  desc: "Find the DocumentQuery, find all the items specified by domain type in the given container."
  returns:
    description: "results in an Iterable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findAll(org.springframework.data.domain.Pageable,java.lang.Class<T>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.findAll(Pageable pageable, Class<T> domainType, String containerName)"
  name: "findAll(Pageable pageable, Class<T> domainType, String containerName)"
  nameWithType: "CosmosOperations.findAll(Pageable pageable, Class<T> domainType, String containerName)"
  summary: "Find all items in a given container with partition key"
  modifiers:
  - "abstract"
  parameters:
  - description: "Pageable object"
    name: "pageable"
    type: "<xref href=\"org.springframework.data.domain.Pageable?alt=org.springframework.data.domain.Pageable&text=Pageable\" data-throw-if-not-resolved=\"False\" />"
  - description: "the domainType"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Page<T> <T>findAll(Pageable pageable, Class<T> domainType, String containerName)"
  desc: "Find all items in a given container with partition key"
  returns:
    description: "results as Page"
    type: "<xref href=\"org.springframework.data.domain.Page?alt=org.springframework.data.domain.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findById(java.lang.Object,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.findById(Object id, Class<T> domainType)"
  name: "findById(Object id, Class<T> domainType)"
  nameWithType: "CosmosOperations.findById(Object id, Class<T> domainType)"
  summary: "Finds item by id"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "must not be null"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract T <T>findById(Object id, Class<T> domainType)"
  desc: "Finds item by id"
  returns:
    description: "found item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findById(java.lang.Object,java.lang.Class<T>,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.findById(Object id, Class<T> domainType, PartitionKey partitionKey)"
  name: "findById(Object id, Class<T> domainType, PartitionKey partitionKey)"
  nameWithType: "CosmosOperations.findById(Object id, Class<T> domainType, PartitionKey partitionKey)"
  summary: "Finds item by id"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "must not be null"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "must not be null"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T <T>findById(Object id, Class<T> domainType, PartitionKey partitionKey)"
  desc: "Finds item by id"
  returns:
    description: "found item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>findById(java.lang.String,java.lang.Object,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.findById(String containerName, Object id, Class<T> domainType)"
  name: "findById(String containerName, Object id, Class<T> domainType)"
  nameWithType: "CosmosOperations.findById(String containerName, Object id, Class<T> domainType)"
  summary: "Finds item by id"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "must not be null"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "must not be null"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract T <T>findById(String containerName, Object id, Class<T> domainType)"
  desc: "Finds item by id"
  returns:
    description: "found item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>insert(T,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.insert(T objectToSave, PartitionKey partitionKey)"
  name: "insert(T objectToSave, PartitionKey partitionKey)"
  nameWithType: "CosmosOperations.insert(T objectToSave, PartitionKey partitionKey)"
  summary: "Inserts item"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "objectToSave"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T <T>insert(T objectToSave, PartitionKey partitionKey)"
  desc: "Inserts item"
  returns:
    description: "the inserted item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>insert(java.lang.String,T)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.insert(String containerName, T objectToSave)"
  name: "insert(String containerName, T objectToSave)"
  nameWithType: "CosmosOperations.insert(String containerName, T objectToSave)"
  summary: "Inserts item"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "must not be null"
    name: "objectToSave"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T <T>insert(String containerName, T objectToSave)"
  desc: "Inserts item"
  returns:
    description: "the inserted item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>insert(java.lang.String,T,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.insert(String containerName, T objectToSave, PartitionKey partitionKey)"
  name: "insert(String containerName, T objectToSave, PartitionKey partitionKey)"
  nameWithType: "CosmosOperations.insert(String containerName, T objectToSave, PartitionKey partitionKey)"
  summary: "Inserts item"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "must not be null"
    name: "objectToSave"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T <T>insert(String containerName, T objectToSave, PartitionKey partitionKey)"
  desc: "Inserts item"
  returns:
    description: "the inserted item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>paginationQuery(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.Class<T>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.paginationQuery(CosmosQuery query, Class<T> domainType, String containerName)"
  name: "paginationQuery(CosmosQuery query, Class<T> domainType, String containerName)"
  nameWithType: "CosmosOperations.paginationQuery(CosmosQuery query, Class<T> domainType, String containerName)"
  summary: "Pagination query"
  modifiers:
  - "abstract"
  parameters:
  - description: "the document query"
    name: "query"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
  - description: "type class"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Page<T> <T>paginationQuery(CosmosQuery query, Class<T> domainType, String containerName)"
  desc: "Pagination query"
  returns:
    description: "results as Page"
    type: "<xref href=\"org.springframework.data.domain.Page?alt=org.springframework.data.domain.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>patch(java.lang.Object,com.azure.cosmos.models.PartitionKey,java.lang.Class<T>,com.azure.cosmos.models.CosmosPatchOperations)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations)"
  name: "patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations)"
  nameWithType: "CosmosOperations.patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations)"
  summary: "patches item"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "must not be null"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "must not be null, max operations is 10"
    name: "patchOperations"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchOperations?alt=com.azure.cosmos.models.CosmosPatchOperations&text=CosmosPatchOperations\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T <T>patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations)"
  desc: "patches item"
  returns:
    description: "the patched item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>patch(java.lang.Object,com.azure.cosmos.models.PartitionKey,java.lang.Class<T>,com.azure.cosmos.models.CosmosPatchOperations,com.azure.cosmos.models.CosmosPatchItemRequestOptions)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  name: "patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  nameWithType: "CosmosOperations.patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  summary: "patches item"
  modifiers:
  - "abstract"
  parameters:
  - description: "must not be null"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "must not be null"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "must not be null"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "must not be null, max operations is 10"
    name: "patchOperations"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchOperations?alt=com.azure.cosmos.models.CosmosPatchOperations&text=CosmosPatchOperations\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional CosmosPatchItemRequestOptions, e.g. options.setFilterPredicate(\"FROM products p WHERE p.used = false\");"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchItemRequestOptions?alt=com.azure.cosmos.models.CosmosPatchItemRequestOptions&text=CosmosPatchItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T <T>patch(Object id, PartitionKey partitionKey, Class<T> domainType, CosmosPatchOperations patchOperations, CosmosPatchItemRequestOptions options)"
  desc: "patches item"
  returns:
    description: "the patched item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>runPaginationQuery(com.azure.cosmos.models.SqlQuerySpec,org.springframework.data.domain.Pageable,java.lang.Class<?>,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.runPaginationQuery(SqlQuerySpec querySpec, Pageable pageable, Class<?> domainType, Class<T> returnType)"
  name: "runPaginationQuery(SqlQuerySpec querySpec, Pageable pageable, Class<?> domainType, Class<T> returnType)"
  nameWithType: "CosmosOperations.runPaginationQuery(SqlQuerySpec querySpec, Pageable pageable, Class<?> domainType, Class<T> returnType)"
  summary: "Run the query."
  modifiers:
  - "abstract"
  parameters:
  - description: "the query spec"
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the pageable"
    name: "pageable"
    type: "<xref href=\"org.springframework.data.domain.Pageable?alt=org.springframework.data.domain.Pageable&text=Pageable\" data-throw-if-not-resolved=\"False\" />"
  - description: "the domain type"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  - description: "the return type"
    name: "returnType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Page<T> <T>runPaginationQuery(SqlQuerySpec querySpec, Pageable pageable, Class<?> domainType, Class<T> returnType)"
  desc: "Run the query."
  returns:
    description: "the Page"
    type: "<xref href=\"org.springframework.data.domain.Page?alt=org.springframework.data.domain.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>runQuery(com.azure.cosmos.models.SqlQuerySpec,java.lang.Class<?>,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.runQuery(SqlQuerySpec querySpec, Class<?> domainType, Class<T> returnType)"
  name: "runQuery(SqlQuerySpec querySpec, Class<?> domainType, Class<T> returnType)"
  nameWithType: "CosmosOperations.runQuery(SqlQuerySpec querySpec, Class<?> domainType, Class<T> returnType)"
  summary: "Run the query."
  modifiers:
  - "abstract"
  parameters:
  - description: "the query spec"
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the domain type"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  - description: "the return type"
    name: "returnType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Iterable<T> <T>runQuery(SqlQuerySpec querySpec, Class<?> domainType, Class<T> returnType)"
  desc: "Run the query."
  returns:
    description: "the Iterable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>runQuery(com.azure.cosmos.models.SqlQuerySpec,org.springframework.data.domain.Sort,java.lang.Class<?>,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.runQuery(SqlQuerySpec querySpec, Sort sort, Class<?> domainType, Class<T> returnType)"
  name: "runQuery(SqlQuerySpec querySpec, Sort sort, Class<?> domainType, Class<T> returnType)"
  nameWithType: "CosmosOperations.runQuery(SqlQuerySpec querySpec, Sort sort, Class<?> domainType, Class<T> returnType)"
  summary: "Run the query."
  modifiers:
  - "abstract"
  parameters:
  - description: "the query spec"
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the sort order"
    name: "sort"
    type: "<xref href=\"org.springframework.data.domain.Sort?alt=org.springframework.data.domain.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  - description: "the domain type"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  - description: "the return type"
    name: "returnType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Iterable<T> <T>runQuery(SqlQuerySpec querySpec, Sort sort, Class<?> domainType, Class<T> returnType)"
  desc: "Run the query."
  returns:
    description: "the Iterable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\">Iterable</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>runSliceQuery(com.azure.cosmos.models.SqlQuerySpec,org.springframework.data.domain.Pageable,java.lang.Class<?>,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.runSliceQuery(SqlQuerySpec querySpec, Pageable pageable, Class<?> domainType, Class<T> returnType)"
  name: "runSliceQuery(SqlQuerySpec querySpec, Pageable pageable, Class<?> domainType, Class<T> returnType)"
  nameWithType: "CosmosOperations.runSliceQuery(SqlQuerySpec querySpec, Pageable pageable, Class<?> domainType, Class<T> returnType)"
  summary: "Run custom SQL query"
  modifiers:
  - "abstract"
  parameters:
  - description: "the query spec"
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the pageable"
    name: "pageable"
    type: "<xref href=\"org.springframework.data.domain.Pageable?alt=org.springframework.data.domain.Pageable&text=Pageable\" data-throw-if-not-resolved=\"False\" />"
  - description: "the domain type"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  - description: "the return type"
    name: "returnType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Slice<T> <T>runSliceQuery(SqlQuerySpec querySpec, Pageable pageable, Class<?> domainType, Class<T> returnType)"
  desc: "Run custom SQL query"
  returns:
    description: "the Page"
    type: "<xref href=\"org.springframework.data.domain.Slice?alt=org.springframework.data.domain.Slice&text=Slice\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>sliceQuery(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.Class<T>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.sliceQuery(CosmosQuery query, Class<T> domainType, String containerName)"
  name: "sliceQuery(CosmosQuery query, Class<T> domainType, String containerName)"
  nameWithType: "CosmosOperations.sliceQuery(CosmosQuery query, Class<T> domainType, String containerName)"
  summary: "Slice query"
  modifiers:
  - "abstract"
  parameters:
  - description: "the document query"
    name: "query"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.query.CosmosQuery?alt=com.azure.spring.data.cosmos.core.query.CosmosQuery&text=CosmosQuery\" data-throw-if-not-resolved=\"False\" />"
  - description: "type class"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Slice<T> <T>sliceQuery(CosmosQuery query, Class<T> domainType, String containerName)"
  desc: "Slice query"
  returns:
    description: "results as Slice"
    type: "<xref href=\"org.springframework.data.domain.Slice?alt=org.springframework.data.domain.Slice&text=Slice\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>upsert(T)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.upsert(T object)"
  name: "upsert(T object)"
  nameWithType: "CosmosOperations.upsert(T object)"
  summary: "Upserts an item with partition key"
  modifiers:
  - "abstract"
  parameters:
  - description: "upsert object"
    name: "object"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void <T>upsert(T object)"
  desc: "Upserts an item with partition key"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>upsert(java.lang.String,T)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.upsert(String containerName, T object)"
  name: "upsert(String containerName, T object)"
  nameWithType: "CosmosOperations.upsert(String containerName, T object)"
  summary: "Upserts an item into container with partition key"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "upsert object"
    name: "object"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void <T>upsert(String containerName, T object)"
  desc: "Upserts an item into container with partition key"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.<T>upsertAndReturnEntity(java.lang.String,T)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.upsertAndReturnEntity(String containerName, T object)"
  name: "upsertAndReturnEntity(String containerName, T object)"
  nameWithType: "CosmosOperations.upsertAndReturnEntity(String containerName, T object)"
  summary: "Upserts an item and return item properties"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "upsert object"
    name: "object"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T <T>upsertAndReturnEntity(String containerName, T object)"
  desc: "Upserts an item and return item properties"
  returns:
    description: "upsert object entity"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.count(java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.count(String containerName)"
  name: "count(String containerName)"
  nameWithType: "CosmosOperations.count(String containerName)"
  summary: "Count"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract long count(String containerName)"
  desc: "Count"
  returns:
    description: "count result"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.createContainerIfNotExists(com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<?,?>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.createContainerIfNotExists(CosmosEntityInformation<?,?> information)"
  name: "createContainerIfNotExists(CosmosEntityInformation<?,?> information)"
  nameWithType: "CosmosOperations.createContainerIfNotExists(CosmosEntityInformation<?,?> information)"
  summary: "Creates container if not exists"
  modifiers:
  - "abstract"
  parameters:
  - description: "CosmosEntityInformation"
    name: "information"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation?alt=com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation&text=CosmosEntityInformation\" data-throw-if-not-resolved=\"False\" />&lt;?,?&gt;"
  syntax: "public abstract CosmosContainerProperties createContainerIfNotExists(CosmosEntityInformation<?,?> information)"
  desc: "Creates container if not exists"
  returns:
    description: "CosmosContainerProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.deleteAll(java.lang.String,java.lang.Class<?>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.deleteAll(String containerName, Class<?> domainType)"
  name: "deleteAll(String containerName, Class<?> domainType)"
  nameWithType: "CosmosOperations.deleteAll(String containerName, Class<?> domainType)"
  summary: "Delete all items in a container"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the domainType"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  syntax: "public abstract void deleteAll(String containerName, Class<?> domainType)"
  desc: "Delete all items in a container"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.deleteById(java.lang.String,java.lang.Object,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.deleteById(String containerName, Object id, PartitionKey partitionKey)"
  name: "deleteById(String containerName, Object id, PartitionKey partitionKey)"
  nameWithType: "CosmosOperations.deleteById(String containerName, Object id, PartitionKey partitionKey)"
  summary: "Delete an item by id"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the id"
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "the partition key"
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String containerName, Object id, PartitionKey partitionKey)"
  desc: "Delete an item by id"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.deleteContainer(java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.deleteContainer(String containerName)"
  name: "deleteContainer(String containerName)"
  nameWithType: "CosmosOperations.deleteContainer(String containerName)"
  summary: "Delete container"
  modifiers:
  - "abstract"
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void deleteContainer(String containerName)"
  desc: "Delete container"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.getContainerName(java.lang.Class<?>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.getContainerName(Class<?> domainType)"
  name: "getContainerName(Class<?> domainType)"
  nameWithType: "CosmosOperations.getContainerName(Class<?> domainType)"
  summary: "To get container name by domain<wbr>Type"
  modifiers:
  - "abstract"
  parameters:
  - description: "class type"
    name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
  syntax: "public abstract String getContainerName(Class<?> domainType)"
  desc: "To get container name by domainType"
  returns:
    description: "String"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.getContainerProperties(java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.getContainerProperties(String containerName)"
  name: "getContainerProperties(String containerName)"
  nameWithType: "CosmosOperations.getContainerProperties(String containerName)"
  summary: "Get properties for specified container"
  modifiers:
  - "abstract"
  parameters:
  - description: "String"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract CosmosContainerProperties getContainerProperties(String containerName)"
  desc: "Get properties for specified container"
  returns:
    description: "CosmosContainerProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.getConverter()"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.getConverter()"
  name: "getConverter()"
  nameWithType: "CosmosOperations.getConverter()"
  summary: "To get converter"
  modifiers:
  - "abstract"
  syntax: "public abstract MappingCosmosConverter getConverter()"
  desc: "To get converter"
  returns:
    description: "MappingCosmosConverter"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.convert.MappingCosmosConverter?alt=com.azure.spring.data.cosmos.core.convert.MappingCosmosConverter&text=MappingCosmosConverter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.data.cosmos.core.CosmosOperations.replaceContainerProperties(java.lang.String,com.azure.cosmos.models.CosmosContainerProperties)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosOperations.replaceContainerProperties(String containerName, CosmosContainerProperties properties)"
  name: "replaceContainerProperties(String containerName, CosmosContainerProperties properties)"
  nameWithType: "CosmosOperations.replaceContainerProperties(String containerName, CosmosContainerProperties properties)"
  summary: "Replace container properties for the specified container"
  modifiers:
  - "abstract"
  parameters:
  - description: "String"
    name: "containerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "CosmosContainerProperties"
    name: "properties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CosmosContainerProperties replaceContainerProperties(String containerName, CosmosContainerProperties properties)"
  desc: "Replace container properties for the specified container"
  returns:
    description: "CosmosContainerProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Interface for cosmosDB operations"
metadata: {}
package: "com.azure.spring.data.cosmos.core"
artifact: com.azure:azure-spring-data-cosmos:3.38.0
