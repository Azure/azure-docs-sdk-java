### YamlMime:JavaType
uid: "com.microsoft.azure.management.sql.SqlServers"
fullName: "com.microsoft.azure.management.sql.SqlServers"
name: "SqlServers"
nameWithType: "SqlServers"
summary: "Entry point to SQL Server management API."
syntax: "public interface SqlServers extends SupportsCreating<SqlServer.DefinitionStages.Blank>, SupportsListing<SqlServer>, SupportsListingByResourceGroup<SqlServer>, SupportsGettingByResourceGroup<SqlServer>, SupportsGettingById<SqlServer>, SupportsDeletingById, SupportsDeletingByResourceGroup, SupportsBatchCreation<SqlServer>, SupportsBatchDeletion, HasManager<SqlServerManager>, HasInner<ServersInner>"
methods:
- uid: "com.microsoft.azure.management.sql.SqlServers.checkNameAvailability(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.SqlServers.checkNameAvailability(String name)"
  name: "checkNameAvailability(String name)"
  nameWithType: "SqlServers.checkNameAvailability(String name)"
  summary: "Checks if the specified container registry name is valid and available."
  modifiers:
  - "abstract"
  parameters:
  - description: "the container registry name to check"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityResult checkNameAvailability(String name)"
  desc: "Checks if the specified container registry name is valid and available."
  returns:
    description: "whether the name is available and other info if not"
    type: "<xref href=\"com.microsoft.azure.management.sql.CheckNameAvailabilityResult?alt=com.microsoft.azure.management.sql.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlServers.checkNameAvailabilityAsync(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.SqlServers.checkNameAvailabilityAsync(String name)"
  name: "checkNameAvailabilityAsync(String name)"
  nameWithType: "SqlServers.checkNameAvailabilityAsync(String name)"
  summary: "Checks if container registry name is valid and is not in use asynchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "the container registry name to check"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<CheckNameAvailabilityResult> checkNameAvailabilityAsync(String name)"
  desc: "Checks if container registry name is valid and is not in use asynchronously."
  returns:
    description: "a representation of the future computation of this call, returning whether the name is available or other info if not"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.CheckNameAvailabilityResult?alt=com.microsoft.azure.management.sql.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.sql.SqlServers.databases()"
  fullName: "com.microsoft.azure.management.sql.SqlServers.databases()"
  name: "databases()"
  nameWithType: "SqlServers.databases()"
  modifiers:
  - "abstract"
  syntax: "public abstract SqlDatabaseOperations databases()"
  returns:
    description: "the SQL Server Database API entry point"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlDatabaseOperations?alt=com.microsoft.azure.management.sql.SqlDatabaseOperations&text=SqlDatabaseOperations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlServers.dnsAliases()"
  fullName: "com.microsoft.azure.management.sql.SqlServers.dnsAliases()"
  name: "dnsAliases()"
  nameWithType: "SqlServers.dnsAliases()"
  modifiers:
  - "abstract"
  syntax: "public abstract SqlServerDnsAliasOperations dnsAliases()"
  returns:
    description: "the SQL Server DNS aliases API entry point"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlServerDnsAliasOperations?alt=com.microsoft.azure.management.sql.SqlServerDnsAliasOperations&text=SqlServerDnsAliasOperations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlServers.elasticPools()"
  fullName: "com.microsoft.azure.management.sql.SqlServers.elasticPools()"
  name: "elasticPools()"
  nameWithType: "SqlServers.elasticPools()"
  modifiers:
  - "abstract"
  syntax: "public abstract SqlElasticPoolOperations elasticPools()"
  returns:
    description: "the SQL Server Elastic Pools API entry point"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlElasticPoolOperations?alt=com.microsoft.azure.management.sql.SqlElasticPoolOperations&text=SqlElasticPoolOperations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlServers.encryptionProtectors()"
  fullName: "com.microsoft.azure.management.sql.SqlServers.encryptionProtectors()"
  name: "encryptionProtectors()"
  nameWithType: "SqlServers.encryptionProtectors()"
  modifiers:
  - "abstract"
  syntax: "public abstract SqlEncryptionProtectorOperations encryptionProtectors()"
  returns:
    description: "the SQL Encryption Protector entry point"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlEncryptionProtectorOperations?alt=com.microsoft.azure.management.sql.SqlEncryptionProtectorOperations&text=SqlEncryptionProtectorOperations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlServers.failoverGroups()"
  fullName: "com.microsoft.azure.management.sql.SqlServers.failoverGroups()"
  name: "failoverGroups()"
  nameWithType: "SqlServers.failoverGroups()"
  modifiers:
  - "abstract"
  syntax: "public abstract SqlFailoverGroupOperations failoverGroups()"
  returns:
    description: "the SQL Failover Group API entry point"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlFailoverGroupOperations?alt=com.microsoft.azure.management.sql.SqlFailoverGroupOperations&text=SqlFailoverGroupOperations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlServers.firewallRules()"
  fullName: "com.microsoft.azure.management.sql.SqlServers.firewallRules()"
  name: "firewallRules()"
  nameWithType: "SqlServers.firewallRules()"
  modifiers:
  - "abstract"
  syntax: "public abstract SqlFirewallRuleOperations firewallRules()"
  returns:
    description: "the SQL Server Firewall Rules API entry point"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlFirewallRuleOperations?alt=com.microsoft.azure.management.sql.SqlFirewallRuleOperations&text=SqlFirewallRuleOperations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlServers.getCapabilitiesByRegion(com.microsoft.azure.management.resources.fluentcore.arm.Region)"
  fullName: "com.microsoft.azure.management.sql.SqlServers.getCapabilitiesByRegion(Region region)"
  name: "getCapabilitiesByRegion(Region region)"
  nameWithType: "SqlServers.getCapabilitiesByRegion(Region region)"
  summary: "Gets the Azure SQL server capabilities for a given Azure region."
  modifiers:
  - "abstract"
  parameters:
  - description: "the location to get the Azure SQL server capabilities for"
    name: "region"
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract RegionCapabilities getCapabilitiesByRegion(Region region)"
  desc: "Gets the Azure SQL server capabilities for a given Azure region."
  returns:
    description: "the server capabilities object"
    type: "<xref href=\"com.microsoft.azure.management.sql.RegionCapabilities?alt=com.microsoft.azure.management.sql.RegionCapabilities&text=RegionCapabilities\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlServers.getCapabilitiesByRegionAsync(com.microsoft.azure.management.resources.fluentcore.arm.Region)"
  fullName: "com.microsoft.azure.management.sql.SqlServers.getCapabilitiesByRegionAsync(Region region)"
  name: "getCapabilitiesByRegionAsync(Region region)"
  nameWithType: "SqlServers.getCapabilitiesByRegionAsync(Region region)"
  summary: "Gets the Azure SQL server capabilities for a given Azure region asynchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "the location to get the Azure SQL server capabilities for"
    name: "region"
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<RegionCapabilities> getCapabilitiesByRegionAsync(Region region)"
  desc: "Gets the Azure SQL server capabilities for a given Azure region asynchronously."
  returns:
    description: "a representation of the future computation of this call, returning the server capabilities object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.RegionCapabilities?alt=com.microsoft.azure.management.sql.RegionCapabilities&text=RegionCapabilities\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.sql.SqlServers.listUsageByRegion(com.microsoft.azure.management.resources.fluentcore.arm.Region)"
  fullName: "com.microsoft.azure.management.sql.SqlServers.listUsageByRegion(Region region)"
  name: "listUsageByRegion(Region region)"
  nameWithType: "SqlServers.listUsageByRegion(Region region)"
  summary: "Lists the Azure SQL server usages for a given Azure region."
  modifiers:
  - "abstract"
  parameters:
  - description: "the location to get the Azure SQL server usages for"
    name: "region"
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<SqlSubscriptionUsageMetric> listUsageByRegion(Region region)"
  desc: "Lists the Azure SQL server usages for a given Azure region."
  returns:
    description: "the SQL usage object"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.SqlSubscriptionUsageMetric?alt=com.microsoft.azure.management.sql.SqlSubscriptionUsageMetric&text=SqlSubscriptionUsageMetric\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.sql.SqlServers.listUsageByRegionAsync(com.microsoft.azure.management.resources.fluentcore.arm.Region)"
  fullName: "com.microsoft.azure.management.sql.SqlServers.listUsageByRegionAsync(Region region)"
  name: "listUsageByRegionAsync(Region region)"
  nameWithType: "SqlServers.listUsageByRegionAsync(Region region)"
  summary: "Lists the Azure SQL server usages for a given Azure region asynchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "the location to get the Azure SQL server usages for"
    name: "region"
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<SqlSubscriptionUsageMetric> listUsageByRegionAsync(Region region)"
  desc: "Lists the Azure SQL server usages for a given Azure region asynchronously."
  returns:
    description: "a representation of the future computation of this call, returning the server usages object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.SqlSubscriptionUsageMetric?alt=com.microsoft.azure.management.sql.SqlSubscriptionUsageMetric&text=SqlSubscriptionUsageMetric\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.sql.SqlServers.serverKeys()"
  fullName: "com.microsoft.azure.management.sql.SqlServers.serverKeys()"
  name: "serverKeys()"
  nameWithType: "SqlServers.serverKeys()"
  modifiers:
  - "abstract"
  syntax: "public abstract SqlServerKeyOperations serverKeys()"
  returns:
    description: "the SQL Server Key entry point"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlServerKeyOperations?alt=com.microsoft.azure.management.sql.SqlServerKeyOperations&text=SqlServerKeyOperations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlServers.serverSecurityAlertPolicies()"
  fullName: "com.microsoft.azure.management.sql.SqlServers.serverSecurityAlertPolicies()"
  name: "serverSecurityAlertPolicies()"
  nameWithType: "SqlServers.serverSecurityAlertPolicies()"
  modifiers:
  - "abstract"
  syntax: "public abstract SqlServerSecurityAlertPolicyOperations serverSecurityAlertPolicies()"
  returns:
    description: "entry point to manage SQL Server Security Alert Policy"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicyOperations?alt=com.microsoft.azure.management.sql.SqlServerSecurityAlertPolicyOperations&text=SqlServerSecurityAlertPolicyOperations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlServers.syncGroups()"
  fullName: "com.microsoft.azure.management.sql.SqlServers.syncGroups()"
  name: "syncGroups()"
  nameWithType: "SqlServers.syncGroups()"
  modifiers:
  - "abstract"
  syntax: "public abstract SqlSyncGroupOperations syncGroups()"
  returns:
    description: "the SQL Sync Group entry point"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlSyncGroupOperations?alt=com.microsoft.azure.management.sql.SqlSyncGroupOperations&text=SqlSyncGroupOperations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlServers.syncMembers()"
  fullName: "com.microsoft.azure.management.sql.SqlServers.syncMembers()"
  name: "syncMembers()"
  nameWithType: "SqlServers.syncMembers()"
  modifiers:
  - "abstract"
  syntax: "public abstract SqlSyncMemberOperations syncMembers()"
  returns:
    description: "the SQL Sync Group entry point"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlSyncMemberOperations?alt=com.microsoft.azure.management.sql.SqlSyncMemberOperations&text=SqlSyncMemberOperations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlServers.virtualNetworkRules()"
  fullName: "com.microsoft.azure.management.sql.SqlServers.virtualNetworkRules()"
  name: "virtualNetworkRules()"
  nameWithType: "SqlServers.virtualNetworkRules()"
  modifiers:
  - "abstract"
  syntax: "public abstract SqlVirtualNetworkRuleOperations virtualNetworkRules()"
  returns:
    description: "the SQL Server VirtualNetwork Rules API entry point"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlVirtualNetworkRuleOperations?alt=com.microsoft.azure.management.sql.SqlVirtualNetworkRuleOperations&text=SqlVirtualNetworkRuleOperations\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Entry point to SQL Server management API."
implements:
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion?alt=com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion&text=SupportsBatchDeletion\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup?alt=com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup&text=SupportsDeletingByResourceGroup\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById?alt=com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById&text=SupportsGettingById\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.SqlServer?alt=com.microsoft.azure.management.sql.SqlServer&text=SqlServer\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup?alt=com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup&text=SupportsGettingByResourceGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.SqlServer?alt=com.microsoft.azure.management.sql.SqlServer&text=SqlServer\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup?alt=com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup&text=SupportsListingByResourceGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.SqlServer?alt=com.microsoft.azure.management.sql.SqlServer&text=SqlServer\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.implementation.SqlServerManager?alt=com.microsoft.azure.management.sql.implementation.SqlServerManager&text=SqlServerManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation?alt=com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation&text=SupportsBatchCreation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.SqlServer?alt=com.microsoft.azure.management.sql.SqlServer&text=SqlServer\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating?alt=com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.SqlServer.DefinitionStages.Blank?alt=com.microsoft.azure.management.sql.SqlServer.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById?alt=com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById&text=SupportsDeletingById\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing?alt=com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing&text=SupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.SqlServer?alt=com.microsoft.azure.management.sql.SqlServer&text=SqlServer\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.HasInner?alt=com.microsoft.azure.management.resources.fluentcore.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.implementation.ServersInner?alt=com.microsoft.azure.management.sql.implementation.ServersInner&text=ServersInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.sql"
artifact: com.microsoft.azure:azure-mgmt-sql:1.41.4
