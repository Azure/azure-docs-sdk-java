### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction*"
fullName: "com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction"
name: "withJobAction"
nameWithType: "ExitOptions.withJobAction"
members:
- uid: "com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction(com.microsoft.azure.batch.protocol.models.JobAction)"
  fullName: "com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction(JobAction jobAction)"
  name: "withJobAction(JobAction jobAction)"
  nameWithType: "ExitOptions.withJobAction(JobAction jobAction)"
  summary: "Set the default is none for exit code 0 and terminate for all other exit conditions. If the Job's onTaskFailed property is noaction, then specifying this property returns an error and the add Task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Possible values include: 'none', 'disable', 'terminate'."
  parameters:
  - description: "the jobAction value to set"
    name: "jobAction"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAction?alt=com.microsoft.azure.batch.protocol.models.JobAction&text=JobAction\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExitOptions withJobAction(JobAction jobAction)"
  returns:
    description: "the ExitOptions object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:8.0.0
