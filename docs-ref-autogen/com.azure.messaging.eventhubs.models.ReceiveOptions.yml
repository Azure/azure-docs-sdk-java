### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.models.ReceiveOptions"
fullName: "com.azure.messaging.eventhubs.models.ReceiveOptions"
name: "ReceiveOptions"
nameWithType: "ReceiveOptions"
summary: "Set of options that can be specified when receiving events from an <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubConsumerAsyncClient\"></xref> or <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubConsumerClient\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ReceiveOptions"
constructors:
- uid: "com.azure.messaging.eventhubs.models.ReceiveOptions.ReceiveOptions()"
  fullName: "com.azure.messaging.eventhubs.models.ReceiveOptions.ReceiveOptions()"
  name: "ReceiveOptions()"
  nameWithType: "ReceiveOptions.ReceiveOptions()"
  syntax: "public ReceiveOptions()"
methods:
- uid: "com.azure.messaging.eventhubs.models.ReceiveOptions.getOwnerLevel()"
  fullName: "com.azure.messaging.eventhubs.models.ReceiveOptions.getOwnerLevel()"
  name: "getOwnerLevel()"
  nameWithType: "ReceiveOptions.getOwnerLevel()"
  summary: "Gets the owner level for this consumer."
  syntax: "public Long getOwnerLevel()"
  desc: "Gets the owner level for this consumer. If the value is `null`, then this is not an exclusive consumer. Otherwise, it is an exclusive consumer, and there can only be one active consumer for each partition and consumer group combination. The exclusive consumer is be based on which one has the higher owner level value."
  returns:
    description: "The owner level for this receive operation. If the <code>null</code>, then this is not an exclusive consumer."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.models.ReceiveOptions.getTrackLastEnqueuedEventProperties()"
  fullName: "com.azure.messaging.eventhubs.models.ReceiveOptions.getTrackLastEnqueuedEventProperties()"
  name: "getTrackLastEnqueuedEventProperties()"
  nameWithType: "ReceiveOptions.getTrackLastEnqueuedEventProperties()"
  summary: "Gets whether or not the receive operation should request information on the last enqueued event on its associated partition, and track that information as events are received."
  syntax: "public boolean getTrackLastEnqueuedEventProperties()"
  desc: "Gets whether or not the receive operation should request information on the last enqueued event on its associated partition, and track that information as events are received."
  returns:
    description: "<code>true</code> if the resulting receive operation will keep track of the last enqueued information for that\n     partition; <code>false</code> otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.models.ReceiveOptions.setOwnerLevel(java.lang.Long)"
  fullName: "com.azure.messaging.eventhubs.models.ReceiveOptions.setOwnerLevel(Long priority)"
  name: "setOwnerLevel(Long priority)"
  nameWithType: "ReceiveOptions.setOwnerLevel(Long priority)"
  summary: "Sets the `ownerLevel` value on this receive operation."
  parameters:
  - description: "The priority associated with an exclusive receive operation; for a non-exclusive receive\n     operation, this value should be <code>null</code>."
    name: "priority"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReceiveOptions setOwnerLevel(Long priority)"
  desc: "Sets the `ownerLevel` value on this receive operation. When populated, the level indicates that the receive operation is intended to be the only reader of events for the requested partition and associated consumer group. To do so, this receive operation will attempt to assert ownership over the partition; in the case where there is more than one exclusive receive operation for the same partition/consumer group pair, the one having a larger <xref uid=\"com.azure.messaging.eventhubs.models.ReceiveOptions.getOwnerLevel()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveOptions#getOwnerLevel()\"></xref> value will \"win\".\n\nWhen an exclusive receive operation is used, those receive operations which are not exclusive or which have a lower priority will either not be allowed to be created. If they already exist, will encounter an exception during the next attempted operation."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.models.ReceiveOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveOptions\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.models.ReceiveOptions?alt=com.azure.messaging.eventhubs.models.ReceiveOptions&text=ReceiveOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.models.ReceiveOptions.setTrackLastEnqueuedEventProperties(boolean)"
  fullName: "com.azure.messaging.eventhubs.models.ReceiveOptions.setTrackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)"
  name: "setTrackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)"
  nameWithType: "ReceiveOptions.setTrackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)"
  summary: "Sets whether or not the receive operation should request information on the last enqueued event on its associated partition, and track that information as events are received."
  parameters:
  - description: "<code>true</code> if the resulting events will keep track of the last\n     enqueued information for that partition; <code>false</code> otherwise."
    name: "trackLastEnqueuedEventProperties"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReceiveOptions setTrackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)"
  desc: "Sets whether or not the receive operation should request information on the last enqueued event on its associated partition, and track that information as events are received.\n\nWhen information about the partition's last enqueued event is being tracked, each event received from the Event Hubs service will carry metadata about the partition that it otherwise would not. This results in a small amount of additional network bandwidth consumption that is generally a favorable trade-off when considered against periodically making requests for partition properties using the Event Hub client."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.models.ReceiveOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveOptions\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.models.ReceiveOptions?alt=com.azure.messaging.eventhubs.models.ReceiveOptions&text=ReceiveOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Set of options that can be specified when receiving events from an <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubConsumerAsyncClient\"></xref> or <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubConsumerClient\"></xref>."
metadata: {}
package: "com.azure.messaging.eventhubs.models"
artifact: com.azure:azure-messaging-eventhubs:5.13.0
