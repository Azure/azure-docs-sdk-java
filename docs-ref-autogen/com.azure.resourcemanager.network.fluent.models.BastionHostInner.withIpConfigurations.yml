### YamlMime:JavaMember
uid: "com.azure.resourcemanager.network.fluent.models.BastionHostInner.withIpConfigurations*"
fullName: "com.azure.resourcemanager.network.fluent.models.BastionHostInner.withIpConfigurations"
name: "withIpConfigurations"
nameWithType: "BastionHostInner.withIpConfigurations"
members:
- uid: "com.azure.resourcemanager.network.fluent.models.BastionHostInner.withIpConfigurations(java.util.List<com.azure.resourcemanager.network.models.BastionHostIpConfiguration>)"
  fullName: "com.azure.resourcemanager.network.fluent.models.BastionHostInner.withIpConfigurations(List<BastionHostIpConfiguration> ipConfigurations)"
  name: "withIpConfigurations(List<BastionHostIpConfiguration> ipConfigurations)"
  nameWithType: "BastionHostInner.withIpConfigurations(List<BastionHostIpConfiguration> ipConfigurations)"
  summary: "Set the ipConfigurations property: IP configuration of the Bastion Host resource."
  parameters:
  - description: "the ipConfigurations value to set."
    name: "ipConfigurations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.BastionHostIpConfiguration?alt=com.azure.resourcemanager.network.models.BastionHostIpConfiguration&text=BastionHostIpConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BastionHostInner withIpConfigurations(List<BastionHostIpConfiguration> ipConfigurations)"
  returns:
    description: "the BastionHostInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.BastionHostInner?alt=com.azure.resourcemanager.network.fluent.models.BastionHostInner&text=BastionHostInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
