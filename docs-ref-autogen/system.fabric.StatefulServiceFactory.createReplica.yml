### YamlMime:JavaMember
nameWithType: StatefulServiceFactory.createReplica
type: method
members:
- fullName: system.fabric.StatefulServiceFactory.createReplica(String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
  name: createReplica(String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
  nameWithType: StatefulServiceFactory.createReplica(String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
  parameters:
  - description: <p>The service type that Service Fabric requests to be created. </p>
    name: serviceTypeName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The fabric:/ name (Uri) of the service with which this replica is associated. </p>
    name: serviceName
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>A byte array that contains the initialization data which was originally passed as a part of this service's service description. </p>
    name: initializationData
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>The partition ID of type, a GUID, with which this replica is associated. </p>
    name: partitionId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The replica ID of type long for this replica. </p>
    name: replicaId
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InstantiationException?alt=InstantiationException&text=InstantiationException" data-throw-if-not-resolved="False"/>
    description: <p>On failure of instance creation </p>
  - type: <xref href="IllegalAccessException?alt=IllegalAccessException&text=IllegalAccessException" data-throw-if-not-resolved="False"/>
    description: <p>On Access voilation </p>
  returns:
    description: <p>Returns <xref uid="system.fabric.StatefulServiceReplica" data-throw-if-not-resolved="false" data-raw-source="system.fabric.StatefulServiceReplica"></xref>. </p>
    type: <xref href="system.fabric.StatefulServiceReplica?alt=system.fabric.StatefulServiceReplica&text=StatefulServiceReplica" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Called by Service Fabric to create a stateful service replica for a particular service.</p>

    <p></p>
  syntax: public StatefulServiceReplica createReplica(String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
  uid: system.fabric.StatefulServiceFactory.createReplica(String,URI,byte [],UUID,long)
uid: system.fabric.StatefulServiceFactory.createReplica*
fullName: system.fabric.StatefulServiceFactory.createReplica
name: createReplica(String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)
package: system.fabric
metadata: {}
