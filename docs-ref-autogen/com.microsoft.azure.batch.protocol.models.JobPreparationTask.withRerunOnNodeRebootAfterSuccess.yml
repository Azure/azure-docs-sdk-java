### YamlMime:JavaMember
nameWithType: JobPreparationTask.withRerunOnNodeRebootAfterSuccess
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTask.withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)
  name: withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)
  nameWithType: JobPreparationTask.withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)
  parameters:
  - description: <p>the rerunOnNodeRebootAfterSuccess value to set </p>
    name: rerunOnNodeRebootAfterSuccess
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTask object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTask?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTask&text=JobPreparationTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the Job Preparation task is always rerun if a compute node is reimaged, or if the Job Preparation task did not complete (e.g. because the reboot occurred while the task was running). Therefore, you should always write a Job Preparation task to be idempotent and to behave correctly if run multiple times. The default value is true.</p>

    <p></p>
  syntax: public JobPreparationTask withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTask.withRerunOnNodeRebootAfterSuccess(Boolean)
uid: com.microsoft.azure.batch.protocol.models.JobPreparationTask.withRerunOnNodeRebootAfterSuccess*
fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTask.withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)
name: withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
