### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.models.JobPreparationTask.withRerunOnNodeRebootAfterSuccess*"
fullName: "com.microsoft.azure.batch.protocol.models.JobPreparationTask.withRerunOnNodeRebootAfterSuccess"
name: "withRerunOnNodeRebootAfterSuccess"
nameWithType: "JobPreparationTask.withRerunOnNodeRebootAfterSuccess"
members:
- uid: "com.microsoft.azure.batch.protocol.models.JobPreparationTask.withRerunOnNodeRebootAfterSuccess(java.lang.Boolean)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobPreparationTask.withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)"
  name: "withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)"
  nameWithType: "JobPreparationTask.withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)"
  summary: "Set the Job Preparation Task is always rerun if a Compute Node is reimaged, or if the Job Preparation Task did not complete (e.g. because the reboot occurred while the Task was running). Therefore, you should always write a Job Preparation Task to be idempotent and to behave correctly if run multiple times. The default value is true."
  parameters:
  - description: "the rerunOnNodeRebootAfterSuccess value to set"
    name: "rerunOnNodeRebootAfterSuccess"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobPreparationTask withRerunOnNodeRebootAfterSuccess(Boolean rerunOnNodeRebootAfterSuccess)"
  returns:
    description: "the JobPreparationTask object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobPreparationTask?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTask&text=JobPreparationTask\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:8.0.0
