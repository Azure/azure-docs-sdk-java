### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAtManagementGroupScopeAsync*"
fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAtManagementGroupScopeAsync"
name: "registerAtManagementGroupScopeAsync"
nameWithType: "ProvidersClient.registerAtManagementGroupScopeAsync"
members:
- uid: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAtManagementGroupScopeAsync(String resourceProviderNamespace, String groupId)"
  name: "registerAtManagementGroupScopeAsync(String resourceProviderNamespace, String groupId)"
  nameWithType: "ProvidersClient.registerAtManagementGroupScopeAsync(String resourceProviderNamespace, String groupId)"
  summary: "Registers a management group with a resource provider."
  parameters:
  - description: "The namespace of the resource provider to register."
    name: "resourceProviderNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The management group ID."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> registerAtManagementGroupScopeAsync(String resourceProviderNamespace, String groupId)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.3.0
