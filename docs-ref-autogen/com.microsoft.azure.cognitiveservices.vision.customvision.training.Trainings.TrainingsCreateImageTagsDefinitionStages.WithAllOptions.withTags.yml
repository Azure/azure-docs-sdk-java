### YamlMime:JavaMember
nameWithType: Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions.withTags
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions.withTags(List<ImageTagCreateEntry> tags)
  name: withTags(List<ImageTagCreateEntry> tags)
  nameWithType: Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions.withTags(List<ImageTagCreateEntry> tags)
  parameters:
  - name: tags
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateEntry?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateEntry&text=ImageTagCreateEntry" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>next definition stage </p>
    type: <xref href="TrainingsCreateImageTagsDefinitionStages.WithExecute?alt=TrainingsCreateImageTagsDefinitionStages.WithExecute&text=TrainingsCreateImageTagsDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Image Tag entries to include in this batch.</p>

    <p></p>
  syntax: public TrainingsCreateImageTagsDefinitionStages.WithExecute withTags(List<ImageTagCreateEntry> tags)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions.withTags(List<ImageTagCreateEntry>)
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions.withTags*
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions.withTags(List<ImageTagCreateEntry> tags)
name: withTags(List<ImageTagCreateEntry> tags)
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
metadata: {}
