### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device._module_client
  id: _module_client
  parent: com.microsoft.azure.sdk.iot.device
  children:
  - com.microsoft.azure.sdk.iot.device._module_client.createFromEnvironment()
  - com.microsoft.azure.sdk.iot.device._module_client.createFromEnvironment(IotHubClientProtocol)
  - com.microsoft.azure.sdk.iot.device._module_client.getTwin()
  - com.microsoft.azure.sdk.iot.device._module_client.invokeMethod(String,MethodRequest)
  - com.microsoft.azure.sdk.iot.device._module_client.invokeMethod(String,String,MethodRequest)
  - com.microsoft.azure.sdk.iot.device._module_client.ModuleClient(String,IotHubClientProtocol)
  - com.microsoft.azure.sdk.iot.device._module_client.ModuleClient(String,IotHubClientProtocol,String,boolean,String,boolean)
  - com.microsoft.azure.sdk.iot.device._module_client.sendEventAsync(Message,IotHubEventCallback,Object)
  - com.microsoft.azure.sdk.iot.device._module_client.sendEventAsync(Message,IotHubEventCallback,Object,String)
  - com.microsoft.azure.sdk.iot.device._module_client.setMessageCallback(MessageCallback,Object)
  - com.microsoft.azure.sdk.iot.device._module_client.setMessageCallback(String,MessageCallback,Object)
  - com.microsoft.azure.sdk.iot.device._module_client.startTwin(IotHubEventCallback,Object,PropertyCallBack,Object)
  - com.microsoft.azure.sdk.iot.device._module_client.startTwin(IotHubEventCallback,Object,TwinPropertyCallBack,Object)
  - com.microsoft.azure.sdk.iot.device._module_client.subscribeToMethod(DeviceMethodCallback,Object,IotHubEventCallback,Object)
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: ModuleClient
  nameWithType: ModuleClient
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 33
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Public API for communicating from Edge Modules. A ModuleClient can be used to send messages from an Edge module to an EdgeHub or an IotHub. It can also send twin updates and listen for method calls from an EdgeHub or IotHub as well </p>"
  syntax: &o1
    content: public class ModuleClient extends InternalClient
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.sdk.iot.device._internal_client
  inheritedMembers:
  - com.microsoft.azure.sdk.iot.device._internal_client.close()
  - com.microsoft.azure.sdk.iot.device._internal_client.closeNow()
  - com.microsoft.azure.sdk.iot.device._internal_client.getConfig()
  - com.microsoft.azure.sdk.iot.device._internal_client.getProductInfo()
  - com.microsoft.azure.sdk.iot.device._internal_client.logger
  - com.microsoft.azure.sdk.iot.device._internal_client.open()
  - com.microsoft.azure.sdk.iot.device._internal_client.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback,Object)
  - com.microsoft.azure.sdk.iot.device._internal_client.sendReportedProperties(Set<Property>)
  - com.microsoft.azure.sdk.iot.device._internal_client.sendReportedProperties(Set<Property>,int)
  - com.microsoft.azure.sdk.iot.device._internal_client.setOperationTimeout(long)
  - com.microsoft.azure.sdk.iot.device._internal_client.setOption(String,Object)
  - com.microsoft.azure.sdk.iot.device._internal_client.setRetryPolicy(RetryPolicy)
  - com.microsoft.azure.sdk.iot.device._internal_client.subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>>)
  - com.microsoft.azure.sdk.iot.device._internal_client.subscribeToTwinDesiredProperties(Map<Property, Pair<TwinPropertyCallBack, Object>>)
- uid: com.microsoft.azure.sdk.iot.device._module_client.createFromEnvironment()
  id: createFromEnvironment()
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: createFromEnvironment()
  nameWithType: ModuleClient.createFromEnvironment()
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment()
  overload: com.microsoft.azure.sdk.iot.device._module_client.createFromEnvironment*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 122
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Create a module client instance from your environment variables </p>"
  syntax:
    content: public static ModuleClient createFromEnvironment()
    return:
      type: com.microsoft.azure.sdk.iot.device._module_client
      description: <p>the created module client instance </p>
  exceptions:
  - type: 9fe91d4c
    description: <p>if the module client cannot be created </p>
- uid: com.microsoft.azure.sdk.iot.device._module_client.createFromEnvironment(IotHubClientProtocol)
  id: createFromEnvironment(IotHubClientProtocol)
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: createFromEnvironment(IotHubClientProtocol protocol)
  nameWithType: ModuleClient.createFromEnvironment(IotHubClientProtocol protocol)
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment(IotHubClientProtocol protocol)
  overload: com.microsoft.azure.sdk.iot.device._module_client.createFromEnvironment*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 133
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Create a module client instance from your environment variables </p>"
  syntax:
    content: public static ModuleClient createFromEnvironment(IotHubClientProtocol protocol)
    parameters:
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
      description: <p>the protocol the module client instance will use </p>
    return:
      type: com.microsoft.azure.sdk.iot.device._module_client
      description: <p>the created module client instance </p>
  exceptions:
  - type: 9fe91d4c
    description: <p>if the module client cannot be created </p>
- uid: com.microsoft.azure.sdk.iot.device._module_client.getTwin()
  id: getTwin()
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: getTwin()
  nameWithType: ModuleClient.getTwin()
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.getTwin()
  overload: com.microsoft.azure.sdk.iot.device._module_client.getTwin*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 367
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Retrieves the twin's latest desired properties </p>"
  syntax:
    content: public void getTwin()
  exceptions:
  - type: cbf33bbe
    description: <p>if the iothub cannot be reached </p>
- uid: com.microsoft.azure.sdk.iot.device._module_client.invokeMethod(String,MethodRequest)
  id: invokeMethod(String,MethodRequest)
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: invokeMethod(String deviceId, MethodRequest methodRequest)
  nameWithType: ModuleClient.invokeMethod(String deviceId, MethodRequest methodRequest)
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.invokeMethod(String deviceId, MethodRequest methodRequest)
  overload: com.microsoft.azure.sdk.iot.device._module_client.invokeMethod*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 304
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Invoke a method on a device </p>"
  syntax:
    content: public MethodResult invokeMethod(String deviceId, MethodRequest methodRequest)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>the device to invoke a method on </p>
    - id: methodRequest
      type: com.microsoft.azure.sdk.iot.device.edge._method_request
      description: <p>the request containing the method to invoke on the device </p>
    return:
      type: com.microsoft.azure.sdk.iot.device.edge._method_result
      description: <p>the result of the method call </p>
  exceptions:
  - type: 9fe91d4c
    description: <p>if the method cannot be invoked </p>
  - type: 3c87bd19
    description: <p>if deviceid is null or empty </p>
- uid: com.microsoft.azure.sdk.iot.device._module_client.invokeMethod(String,String,MethodRequest)
  id: invokeMethod(String,String,MethodRequest)
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: invokeMethod(String deviceId, String moduleId, MethodRequest methodRequest)
  nameWithType: ModuleClient.invokeMethod(String deviceId, String moduleId, MethodRequest methodRequest)
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.invokeMethod(String deviceId, String moduleId, MethodRequest methodRequest)
  overload: com.microsoft.azure.sdk.iot.device._module_client.invokeMethod*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 335
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Invoke a method on a module </p>"
  syntax:
    content: public MethodResult invokeMethod(String deviceId, String moduleId, MethodRequest methodRequest)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>the device the module belongs to </p>
    - id: moduleId
      type: "26831127"
      description: <p>the module to invoke the method on </p>
    - id: methodRequest
      type: com.microsoft.azure.sdk.iot.device.edge._method_request
      description: <p>the request containing the method to invoke on the device </p>
    return:
      type: com.microsoft.azure.sdk.iot.device.edge._method_result
      description: <p>the result of the method call </p>
  exceptions:
  - type: 9fe91d4c
    description: <p>if the method cannot be invoked </p>
  - type: 3c87bd19
    description: <p>if deviceid is null or empty, or if moduleid is null or empty </p>
- uid: com.microsoft.azure.sdk.iot.device._module_client.ModuleClient(String,IotHubClientProtocol)
  id: ModuleClient(String,IotHubClientProtocol)
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: ModuleClient(String connectionString, IotHubClientProtocol protocol)
  nameWithType: ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol)
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol)
  overload: com.microsoft.azure.sdk.iot.device._module_client.ModuleClient*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 75
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Constructor for a ModuleClient instance. \r\nor</p>\r\n<p>HostName=xxxx;DeviceId=xxxx;SharedAccessKey= xxxx;moduleId=xxxx;HostNameGateway=xxxx </p>"
  syntax:
    content: public ModuleClient(String connectionString, IotHubClientProtocol protocol)
    parameters:
    - id: connectionString
      type: "26831127"
      description: <p>The connection string for the edge module to connect to. Must be in format HostName=xxxx;deviceId=xxxx;SharedAccessKey= xxxx;moduleId=xxxx;</p>
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
      description: <p>The protocol to use when communicating with the module </p>
  exceptions:
  - type: 9fe91d4c
    description: <p>if an exception is encountered when parsing the connection string </p>
  - type: b1c38b44
    description: <p>if using any protocol besides MQTT, if the connection string is missing the "moduleId" field, or if the connection string uses x509 </p>
  - type: 3c87bd19
    description: <p>if the provided connection string is null or empty, or if the provided protocol is null </p>
  - type: "44102508"
    description: <p>if the connection string cannot be parsed for a valid hostname </p>
- uid: com.microsoft.azure.sdk.iot.device._module_client.ModuleClient(String,IotHubClientProtocol,String,boolean,String,boolean)
  id: ModuleClient(String,IotHubClientProtocol,String,boolean,String,boolean)
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: ModuleClient(String connectionString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  nameWithType: ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String connectionString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  overload: com.microsoft.azure.sdk.iot.device._module_client.ModuleClient*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 108
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Create a module client instance that uses x509 authentication.</p>\r\n<p>Note! Communication from a module to another EdgeHub using x509 authentication is not currently supported and the service will always return \"UNAUTHORIZED\"</p>\r\n<p>Communication from a module directly to the IotHub does support x509 authentication, though.</p>\r\n<p>\r\nor</p>\r\n<p>HostName=xxxx;DeviceId=xxxx;SharedAccessKey= xxxx;moduleId=xxxx;HostNameGateway=xxxx </p>"
  syntax:
    content: public ModuleClient(String connectionString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
    parameters:
    - id: connectionString
      type: "26831127"
      description: <p>The connection string for the edge module to connect to. Must be in format HostName=xxxx;deviceId=xxxx;SharedAccessKey= xxxx;moduleId=xxxx;</p>
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
      description: <p>The protocol to communicate with </p>
    - id: publicKeyCertificate
      type: "26831127"
      description: <p>The PEM formatted string for the public key certificate or the system path to the file containing the PEM. </p>
    - id: isCertificatePath
      type: 4fc6e284
      description: <p>'false' if the publicKeyCertificate argument is a path to the PEM, and 'true' if it is the PEM string itself, </p>
    - id: privateKey
      type: "26831127"
      description: <p>The PEM formatted string for the private key or the system path to the file containing the PEM. </p>
    - id: isPrivateKeyPath
      type: 4fc6e284
      description: <p>'false' if the privateKey argument is a path to the PEM, and 'true' if it is the PEM string itself, </p>
  exceptions:
  - type: "44102508"
    description: <p>If the connString cannot be parsed </p>
  - type: 9fe91d4c
    description: <p>if any other exception occurs while building the module client </p>
- uid: com.microsoft.azure.sdk.iot.device._module_client.sendEventAsync(Message,IotHubEventCallback,Object)
  id: sendEventAsync(Message,IotHubEventCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext)
  nameWithType: ModuleClient.sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext)
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device._module_client.sendEventAsync*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 286
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public void sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
    - id: callbackContext
      type: "79317049"
- uid: com.microsoft.azure.sdk.iot.device._module_client.sendEventAsync(Message,IotHubEventCallback,Object,String)
  id: sendEventAsync(Message,IotHubEventCallback,Object,String)
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, String outputName)
  nameWithType: ModuleClient.sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, String outputName)
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, String outputName)
  overload: com.microsoft.azure.sdk.iot.device._module_client.sendEventAsync*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 270
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Sends a message to a particular outputName asynchronously</p>\r\n<p></p>"
  syntax:
    content: public void sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, String outputName)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to send </p>
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: <p>the callback to be fired when the message is acknowledged by the service </p>
    - id: callbackContext
      type: "79317049"
      description: <p>the context to be included in the callback when fired </p>
    - id: outputName
      type: "26831127"
      description: <p>the outputName to route the message to </p>
  exceptions:
  - type: 3c87bd19
    description: <p>if the provided outputName is null or empty </p>
- uid: com.microsoft.azure.sdk.iot.device._module_client.setMessageCallback(MessageCallback,Object)
  id: setMessageCallback(MessageCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: setMessageCallback(MessageCallback callback, Object context)
  nameWithType: ModuleClient.setMessageCallback(MessageCallback callback, Object context)
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.setMessageCallback(MessageCallback callback, Object context)
  overload: com.microsoft.azure.sdk.iot.device._module_client.setMessageCallback*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 441
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Sets the message callback.</p>\r\n<p></p>"
  syntax:
    content: public ModuleClient setMessageCallback(MessageCallback callback, Object context)
    parameters:
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._message_callback
      description: >-
        <p>the message callback. Can be<code>null 

            </code> . </p>
    - id: context
      type: "79317049"
      description: >-
        <p>the context to be passed to the callback. Can be<code>null 

            </code> .</p>
    return:
      type: com.microsoft.azure.sdk.iot.device._module_client
      description: <p>itself, for fluent setting.</p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if the callback is<code>null 

          </code> but a context is passed in. </p>
  - type: 12fe80de
    description: <p>if the callback is set after the client is closed. </p>
- uid: com.microsoft.azure.sdk.iot.device._module_client.setMessageCallback(String,MessageCallback,Object)
  id: setMessageCallback(String,MessageCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: setMessageCallback(String inputName, MessageCallback callback, Object context)
  nameWithType: ModuleClient.setMessageCallback(String inputName, MessageCallback callback, Object context)
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.setMessageCallback(String inputName, MessageCallback callback, Object context)
  overload: com.microsoft.azure.sdk.iot.device._module_client.setMessageCallback*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 458
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Sets the message callback to be fired when a telemetry message arrives on the specified input channel. All other messages will trigger the default message callback in setMessageCallback(MessageCallback callback, Object context). Any message that triggers this callback will not also trigger the default callback.</p>\r\n<p></p>"
  syntax:
    content: public ModuleClient setMessageCallback(String inputName, MessageCallback callback, Object context)
    parameters:
    - id: inputName
      type: "26831127"
      description: <p>the input name channel to listen for. </p>
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._message_callback
      description: >-
        <p>the message callback. Can be<code>null 

            </code> . </p>
    - id: context
      type: "79317049"
      description: >-
        <p>the context to be passed to the callback. Can be<code>null 

            </code> .</p>
    return:
      type: com.microsoft.azure.sdk.iot.device._module_client
      description: <p>this object, for fluent setting </p>
- uid: com.microsoft.azure.sdk.iot.device._module_client.startTwin(IotHubEventCallback,Object,PropertyCallBack,Object)
  id: startTwin(IotHubEventCallback,Object,PropertyCallBack,Object)
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  nameWithType: ModuleClient.startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  overload: com.microsoft.azure.sdk.iot.device._module_client.startTwin*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 384
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Starts the device twin.</p>\r\n<p></p>"
  syntax:
    content: public void startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
    parameters:
    - id: deviceTwinStatusCallback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: >-
        <p>the IotHubEventCallback callback for providing the status of Device Twin operations. Cannot be<code>null 

            </code> . </p>
    - id: deviceTwinStatusCallbackContext
      type: "79317049"
      description: >-
        <p>the context to be passed to the status callback. Can be<code>null 

            </code> . </p>
    - id: genericPropertyCallBack
      type: com.microsoft.azure.sdk.iot.device._device_twin._property_call_back
      description: >-
        <p>the PropertyCallBack callback for providing any changes in desired properties. Cannot be<code>null 

            </code> . </p>
    - id: genericPropertyCallBackContext
      type: "79317049"
      description: >-
        <p>the context to be passed to the property callback. Can be<code>null 

            </code> . *</p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if the callback is<code>null 

          </code></p>
  - type: b1c38b44
    description: <p>if called more than once on the same device </p>
  - type: cbf33bbe
    description: <p>if called when client is not opened </p>
- uid: com.microsoft.azure.sdk.iot.device._module_client.startTwin(IotHubEventCallback,Object,TwinPropertyCallBack,Object)
  id: startTwin(IotHubEventCallback,Object,TwinPropertyCallBack,Object)
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  nameWithType: ModuleClient.startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  overload: com.microsoft.azure.sdk.iot.device._module_client.startTwin*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 403
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Starts the device twin.</p>\r\n<p></p>"
  syntax:
    content: public void startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
    parameters:
    - id: deviceTwinStatusCallback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: >-
        <p>the IotHubEventCallback callback for providing the status of Device Twin operations. Cannot be<code>null 

            </code> . </p>
    - id: deviceTwinStatusCallbackContext
      type: "79317049"
      description: >-
        <p>the context to be passed to the status callback. Can be<code>null 

            </code> . </p>
    - id: genericPropertyCallBack
      type: com.microsoft.azure.sdk.iot.device._device_twin._twin_property_call_back
      description: >-
        <p>the TwinPropertyCallBack callback for providing any changes in desired properties. Cannot be<code>null 

            </code> . </p>
    - id: genericPropertyCallBackContext
      type: "79317049"
      description: >-
        <p>the context to be passed to the property callback. Can be<code>null 

            </code> . *</p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if the callback is<code>null 

          </code></p>
  - type: b1c38b44
    description: <p>if called more than once on the same device </p>
  - type: cbf33bbe
    description: <p>if called when client is not opened </p>
- uid: com.microsoft.azure.sdk.iot.device._module_client.subscribeToMethod(DeviceMethodCallback,Object,IotHubEventCallback,Object)
  id: subscribeToMethod(DeviceMethodCallback,Object,IotHubEventCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device._module_client
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  langs:
  - java
  name: subscribeToMethod(DeviceMethodCallback methodCallback, Object methodCallbackContext, IotHubEventCallback methodStatusCallback, Object methodStatusCallbackContext)
  nameWithType: ModuleClient.subscribeToMethod(DeviceMethodCallback methodCallback, Object methodCallbackContext, IotHubEventCallback methodStatusCallback, Object methodStatusCallbackContext)
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.subscribeToMethod(DeviceMethodCallback methodCallback, Object methodCallbackContext, IotHubEventCallback methodStatusCallback, Object methodStatusCallbackContext)
  overload: com.microsoft.azure.sdk.iot.device._module_client.subscribeToMethod*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java
    startLine: 421
  package: com.microsoft.azure.sdk.iot.device
  summary: "<p>Subscribes to method invocations on this module. This does not include method invocations on the device the module belongs to</p>\r\n<p></p>"
  syntax:
    content: public void subscribeToMethod(DeviceMethodCallback methodCallback, Object methodCallbackContext, IotHubEventCallback methodStatusCallback, Object methodStatusCallbackContext)
    parameters:
    - id: methodCallback
      type: com.microsoft.azure.sdk.iot.device._device_twin._device_method_callback
      description: >-
        <p>Callback on which device methods shall be invoked. Cannot be<code>null 

            </code> . </p>
    - id: methodCallbackContext
      type: "79317049"
      description: >-
        <p>Context for device method callback. Can be<code>null 

            </code> . </p>
    - id: methodStatusCallback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: >-
        <p>Callback for providing IotHub status for device methods. Cannot be<code>null 

            </code> . </p>
    - id: methodStatusCallbackContext
      type: "79317049"
      description: >-
        <p>Context for device method status callback. Can be<code>null 

            </code> .</p>
  exceptions:
  - type: cbf33bbe
    description: <p>if called when client is not opened. </p>
  - type: 3c87bd19
    description: <p>if either callback are null. </p>
references:
- uid: 9fe91d4c
  spec.java:
  - name: ModuleClientException
    fullName: ModuleClientException
- uid: b1c38b44
  spec.java:
  - name: UnsupportedOperationException
    fullName: UnsupportedOperationException
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "44102508"
  spec.java:
  - name: URISyntaxException
    fullName: URISyntaxException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.device._module_client.ModuleClient*
  name: ModuleClient
  nameWithType: ModuleClient.ModuleClient
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient
  package: com.microsoft.azure.sdk.iot.device
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.microsoft.azure.sdk.iot.device._module_client.sendEventAsync*
  name: sendEventAsync
  nameWithType: ModuleClient.sendEventAsync
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.sendEventAsync
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._module_client.invokeMethod*
  name: invokeMethod
  nameWithType: ModuleClient.invokeMethod
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.invokeMethod
  package: com.microsoft.azure.sdk.iot.device
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.azure.sdk.iot.device._module_client.getTwin*
  name: getTwin
  nameWithType: ModuleClient.getTwin
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.getTwin
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._module_client.startTwin*
  name: startTwin
  nameWithType: ModuleClient.startTwin
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.startTwin
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._module_client.subscribeToMethod*
  name: subscribeToMethod
  nameWithType: ModuleClient.subscribeToMethod
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.subscribeToMethod
  package: com.microsoft.azure.sdk.iot.device
- uid: 12fe80de
  spec.java:
  - name: IllegalStateException
    fullName: IllegalStateException
- uid: com.microsoft.azure.sdk.iot.device._module_client.setMessageCallback*
  name: setMessageCallback
  nameWithType: ModuleClient.setMessageCallback
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.setMessageCallback
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._module_client.createFromEnvironment*
  name: createFromEnvironment
  nameWithType: ModuleClient.createFromEnvironment
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._internal_client.close()
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: close()
  nameWithType: InternalClient.close()
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.close()
  type: Method
  syntax:
    content: public void close()
- uid: com.microsoft.azure.sdk.iot.device._internal_client.closeNow()
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: closeNow()
  nameWithType: InternalClient.closeNow()
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.closeNow()
  type: Method
  syntax:
    content: public void closeNow()
- uid: com.microsoft.azure.sdk.iot.device._internal_client.getConfig()
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: getConfig()
  nameWithType: InternalClient.getConfig()
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.getConfig()
  type: Method
  summary: >-
    <p>Getter for the device client config.</p>

    <p></p>
  syntax:
    content: public DeviceClientConfig getConfig()
    return:
      type: com.microsoft.azure.sdk.iot.device._device_client_config
      description: <p>the value of the config. </p>
- uid: com.microsoft.azure.sdk.iot.device._internal_client.getProductInfo()
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: getProductInfo()
  nameWithType: InternalClient.getProductInfo()
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.getProductInfo()
  type: Method
  syntax:
    content: public ProductInfo getProductInfo()
    return:
      type: com.microsoft.azure.sdk.iot.device._product_info
- uid: com.microsoft.azure.sdk.iot.device._internal_client.logger
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: logger
  nameWithType: InternalClient.logger
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.logger
  type: Field
  syntax:
    content: protected CustomLogger logger
    return:
      type: com.microsoft.azure.sdk.iot.device._custom_logger
- uid: com.microsoft.azure.sdk.iot.device._internal_client.open()
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: open()
  nameWithType: InternalClient.open()
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.open()
  type: Method
  syntax:
    content: public void open()
- uid: com.microsoft.azure.sdk.iot.device._internal_client.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
  nameWithType: InternalClient.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
  type: Method
  summary: >-
    <p>Registers a callback to be executed when the connection status of the device changes. The callback will be fired with a status and a reason why the device's status changed. When the callback is fired, the provided context will be provided alongside the status and reason.</p>

    <p></p>
  syntax:
    content: public void registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback callback, Object callbackContext)
    parameters:
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_status_change_callback
      description: <p>The callback to be fired when the connection status of the device changes. Can be null to unset this listener as long as the provided callbackContext is also null. </p>
    - id: callbackContext
      type: "79317049"
      description: >-
        <p>a context to be passed to the callback. Can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.device._internal_client.sendReportedProperties(Set<Property>)
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: sendReportedProperties(Set<Property> reportedProperties)
  nameWithType: InternalClient.sendReportedProperties(Set<Property> reportedProperties)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.sendReportedProperties(Set<Property> reportedProperties)
  type: Method
  summary: >-
    <p>Sends reported properties</p>

    <p></p>
  syntax:
    content: public void sendReportedProperties(Set<Property> reportedProperties)
    parameters:
    - id: reportedProperties
      type: b398a0f1com.microsoft.azure.sdk.iot.device._device_twin._propertya08ddfce
      description: >-
        <p>the Set for desired properties and their corresponding callback and context. Cannot be<code>null 

            </code> .</p>
- uid: com.microsoft.azure.sdk.iot.device._internal_client.sendReportedProperties(Set<Property>,int)
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: sendReportedProperties(Set<Property> reportedProperties, int version)
  nameWithType: InternalClient.sendReportedProperties(Set<Property> reportedProperties, int version)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.sendReportedProperties(Set<Property> reportedProperties, int version)
  type: Method
  summary: >-
    <p>Sends reported properties</p>

    <p></p>
  syntax:
    content: public void sendReportedProperties(Set<Property> reportedProperties, int version)
    parameters:
    - id: reportedProperties
      type: b398a0f1com.microsoft.azure.sdk.iot.device._device_twin._propertya08ddfce
      description: >-
        <p>the Set for desired properties and their corresponding callback and context. Cannot be<code>null 

            </code> . </p>
    - id: version
      type: f75371fa
      description: <p>the Reported property version. Cannot be negative.</p>
- uid: com.microsoft.azure.sdk.iot.device._internal_client.setOperationTimeout(long)
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: setOperationTimeout(long timeout)
  nameWithType: InternalClient.setOperationTimeout(long timeout)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.setOperationTimeout(long timeout)
  type: Method
  summary: <p>Set the length of time, in milliseconds, that any given operation will expire in. These operations include reconnecting upon a connection drop and sending a message. </p>
  syntax:
    content: public void setOperationTimeout(long timeout)
    parameters:
    - id: timeout
      type: 0364520f
      description: <p>the length in time, in milliseconds, until a given operation shall expire </p>
- uid: com.microsoft.azure.sdk.iot.device._internal_client.setOption(String,Object)
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: setOption(String optionName, Object value)
  nameWithType: InternalClient.setOption(String optionName, Object value)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.setOption(String optionName, Object value)
  type: Method
  summary: >-
    <p>Sets a runtime option identified by parameter<code>optionName 

        </code> to<code>value 

        </code> .</p>

    <p>The options that can be set via this API are:<ul><li><p><b>SetMinimumPollingInterval</b> - this option is applicable only when the transport configured with this client is HTTP. This option specifies the interval in milliseconds between calls to the service checking for availability of new messages. The value is expected to be of type<code>long 

        </code> .</p></li><li><p><b>SetCertificatePath</b> - this option is applicable only when the transport configured with this client is AMQP. This option specifies the path to the certificate used to verify peer. The value is expected to be of type<code>String 

        </code> .</p></li><li><p><b>SetSASTokenExpiryTime</b> - this option is applicable for HTTP/ AMQP/MQTT. This option specifies the interval in seconds after which SASToken expires. If the transport is already open then setting this option will restart the transport with the updated expiry time, and will use that expiry time length for all subsequently generated sas tokens. The value is expected to be of type<code>long 

        </code> .</p></li></ul></p>

    <p></p>
  syntax:
    content: public void setOption(String optionName, Object value)
    parameters:
    - id: optionName
      type: "26831127"
      description: <p>the option name to modify </p>
    - id: value
      type: "79317049"
      description: <p>an object of the appropriate type for the option's value </p>
- uid: com.microsoft.azure.sdk.iot.device._internal_client.setRetryPolicy(RetryPolicy)
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: setRetryPolicy(RetryPolicy retryPolicy)
  nameWithType: InternalClient.setRetryPolicy(RetryPolicy retryPolicy)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.setRetryPolicy(RetryPolicy retryPolicy)
  type: Method
  summary: <p>Sets the given retry policy on the underlying transport <a href="https://github.com/Azure/azure-iot-sdk-java/blob/master/device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/retryPolicy.md">See more details about the default retry policy and about using custom retry policies here</a></p>
  syntax:
    content: public void setRetryPolicy(RetryPolicy retryPolicy)
    parameters:
    - id: retryPolicy
      type: com.microsoft.azure.sdk.iot.device.transport._retry_policy
      description: <p>the new interval in milliseconds </p>
- uid: com.microsoft.azure.sdk.iot.device._internal_client.subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>>)
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>> onDesiredPropertyChange)
  nameWithType: InternalClient.subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>> onDesiredPropertyChange)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>> onDesiredPropertyChange)
  type: Method
  summary: >-
    <p>Subscribes to desired properties</p>

    <p></p>
  syntax:
    content: public void subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>> onDesiredPropertyChange)
    parameters:
    - id: onDesiredPropertyChange
      type: 6110eba5com.microsoft.azure.sdk.iot.device._device_twin._propertyb33c76fccom.microsoft.azure.sdk.iot.device._device_twin._pair78504a52com.microsoft.azure.sdk.iot.device._device_twin._property_call_back0a3cd938
      description: >-
        <p>the Map for desired properties and their corresponding callback and context. Can be<code>null 

            </code> .</p>
- uid: com.microsoft.azure.sdk.iot.device._internal_client.subscribeToTwinDesiredProperties(Map<Property, Pair<TwinPropertyCallBack, Object>>)
  parent: com.microsoft.azure.sdk.iot.device._internal_client
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: subscribeToTwinDesiredProperties(Map<Property, Pair<TwinPropertyCallBack, Object>> onDesiredPropertyChange)
  nameWithType: InternalClient.subscribeToTwinDesiredProperties(Map<Property, Pair<TwinPropertyCallBack, Object>> onDesiredPropertyChange)
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToTwinDesiredProperties(Map<Property, Pair<TwinPropertyCallBack, Object>> onDesiredPropertyChange)
  type: Method
  summary: >-
    <p>Subscribes to desired properties</p>

    <p></p>
  syntax:
    content: public void subscribeToTwinDesiredProperties(Map<Property, Pair<TwinPropertyCallBack, Object>> onDesiredPropertyChange)
    parameters:
    - id: onDesiredPropertyChange
      type: 6110eba5com.microsoft.azure.sdk.iot.device._device_twin._propertyb33c76fccom.microsoft.azure.sdk.iot.device._device_twin._pair78504a52com.microsoft.azure.sdk.iot.device._device_twin._twin_property_call_back7ac78387
      description: >-
        <p>the Map for desired properties and their corresponding callback and context. Can be<code>null 

            </code> .</p>
- uid: com.microsoft.azure.sdk.iot.device._internal_client
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._internal_client.yml
  name: InternalClient
  nameWithType: InternalClient
  fullName: com.microsoft.azure.sdk.iot.device.InternalClient
  type: Class
  syntax:
    content: public class InternalClient
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol.yml
  name: IotHubClientProtocol
  nameWithType: IotHubClientProtocol
  fullName: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
  type: Enum
  summary: <p>The application-layer protocol used by the client to communicate with an IoT Hub. </p>
  syntax:
    content: public enum IotHubClientProtocol
- uid: com.microsoft.azure.sdk.iot.device.exceptions._module_client_exception
  parent: com.microsoft.azure.sdk.iot.device.exceptions
  href: com.microsoft.azure.sdk.iot.device.exceptions._module_client_exception.yml
  name: ModuleClientException
  nameWithType: ModuleClientException
  fullName: com.microsoft.azure.sdk.iot.device.exceptions.ModuleClientException
  type: Class
  syntax:
    content: public class ModuleClientException
- uid: com.microsoft.azure.sdk.iot.device._message
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.device.Message
  type: Class
  syntax:
    content: public class Message
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
  name: IotHubEventCallback
  nameWithType: IotHubEventCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
  type: Interface
  summary: >-
    <p>An interface for an IoT Hub event callback.</p>

    <p>Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback#execute(IotHubStatusCode, Object)</xref> upon receiving a response from an IoT Hub. </p>
  syntax:
    content: public interface IotHubEventCallback
- uid: com.microsoft.azure.sdk.iot.device.edge._method_result
  parent: com.microsoft.azure.sdk.iot.device.edge
  href: com.microsoft.azure.sdk.iot.device.edge._method_result.yml
  name: MethodResult
  nameWithType: MethodResult
  fullName: com.microsoft.azure.sdk.iot.device.edge.MethodResult
  type: Class
  syntax:
    content: public class MethodResult
- uid: com.microsoft.azure.sdk.iot.device.edge._method_request
  parent: com.microsoft.azure.sdk.iot.device.edge
  href: com.microsoft.azure.sdk.iot.device.edge._method_request.yml
  name: MethodRequest
  nameWithType: MethodRequest
  fullName: com.microsoft.azure.sdk.iot.device.edge.MethodRequest
  type: Class
  summary: <p>Json parser for a method request. Used to invoke methods on other devices/modules </p>
  syntax:
    content: public class MethodRequest
- uid: com.microsoft.azure.sdk.iot.device._device_twin._property_call_back
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._property_call_back.yml
  name: PropertyCallBack<Type1,Type2>
  nameWithType: PropertyCallBack<Type1,Type2>
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack<Type1,Type2>
  type: Interface
  syntax:
    content: public interface PropertyCallBack<Type1,Type2>
    typeParameters:
    - id: Type1
      type: 5f35c83f
    - id: Type2
      type: be713184
- uid: com.microsoft.azure.sdk.iot.device._device_twin._twin_property_call_back
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._twin_property_call_back.yml
  name: TwinPropertyCallBack
  nameWithType: TwinPropertyCallBack
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack
  type: Interface
  syntax:
    content: public interface TwinPropertyCallBack
- uid: com.microsoft.azure.sdk.iot.device._device_twin._device_method_callback
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._device_method_callback.yml
  name: DeviceMethodCallback
  nameWithType: DeviceMethodCallback
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodCallback
  type: Interface
  syntax:
    content: public interface DeviceMethodCallback
- uid: com.microsoft.azure.sdk.iot.device._module_client
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._module_client.yml
  name: ModuleClient
  nameWithType: ModuleClient
  fullName: com.microsoft.azure.sdk.iot.device.ModuleClient
  type: Class
  summary: <p>Public API for communicating from Edge Modules. A ModuleClient can be used to send messages from an Edge module to an EdgeHub or an IotHub. It can also send twin updates and listen for method calls from an EdgeHub or IotHub as well </p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.device._message_callback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message_callback.yml
  name: MessageCallback
  nameWithType: MessageCallback
  fullName: com.microsoft.azure.sdk.iot.device.MessageCallback
  type: Interface
  summary: >-
    <p>An interface for an IoT Hub message callback. </p>

    <p>The developer is expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._message_callback.execute(Message,Object)" data-throw-if-not-resolved="false">MessageCallback#execute(Message, Object)</xref> upon receiving a message from an IoT Hub. </p>
  syntax:
    content: public interface MessageCallback
- uid: com.microsoft.azure.sdk.iot.device.auth._iot_hub_authentication_provider
  parent: com.microsoft.azure.sdk.iot.device.auth
  href: com.microsoft.azure.sdk.iot.device.auth._iot_hub_authentication_provider.yml
  name: IotHubAuthenticationProvider
  nameWithType: IotHubAuthenticationProvider
  fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider
  type: Class
  summary: <p>Base class for providing authentication for a Device Client or Module Client, including x509 and SAS based authentication. </p>
  syntax:
    content: public class IotHubAuthenticationProvider
- uid: com.microsoft.azure.sdk.iot.device.exceptions._transport_exception
  parent: com.microsoft.azure.sdk.iot.device.exceptions
  href: com.microsoft.azure.sdk.iot.device.exceptions._transport_exception.yml
  name: TransportException
  nameWithType: TransportException
  fullName: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
  type: Class
  syntax:
    content: public class TransportException
- uid: com.microsoft.azure.sdk.iot.device._device_client_config
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
  name: DeviceClientConfig
  nameWithType: DeviceClientConfig
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
  type: Class
  summary: <p>Configuration settings for an IoT Hub client. Validates all user-defined settings. </p>
  syntax:
    content: public class DeviceClientConfig
