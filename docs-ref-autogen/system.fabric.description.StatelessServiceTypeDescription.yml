### YamlMime:JavaType
constructors:
- fullName: system.fabric.description.StatelessServiceTypeDescription.StatelessServiceTypeDescription()
  name: StatelessServiceTypeDescription()
  nameWithType: StatelessServiceTypeDescription.StatelessServiceTypeDescription()
  summary: <p>Creates and initializes an instance of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.description.StatelessServiceTypeDescription"></xref> object. </p>
  syntax: public StatelessServiceTypeDescription()
  uid: system.fabric.description.StatelessServiceTypeDescription.StatelessServiceTypeDescription()
- fullName: system.fabric.description.StatelessServiceTypeDescription.StatelessServiceTypeDescription(boolean useImplicitHost)
  name: StatelessServiceTypeDescription(boolean useImplicitHost)
  nameWithType: StatelessServiceTypeDescription.StatelessServiceTypeDescription(boolean useImplicitHost)
  parameters:
  - name: useImplicitHost
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public StatelessServiceTypeDescription(boolean useImplicitHost)
  uid: system.fabric.description.StatelessServiceTypeDescription.StatelessServiceTypeDescription(boolean)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="system.fabric.description.ServiceTypeDescription?alt=system.fabric.description.ServiceTypeDescription&text=ServiceTypeDescription" data-throw-if-not-resolved="False"/>
inheritedMembers:
- system.fabric.description.ServiceTypeDescription.getExtensions()
- system.fabric.description.ServiceTypeDescription.getLoadMetrics()
- system.fabric.description.ServiceTypeDescription.getPlacementConstraints()
- system.fabric.description.ServiceTypeDescription.getPolicies()
- system.fabric.description.ServiceTypeDescription.getServiceTypeKind()
- system.fabric.description.ServiceTypeDescription.getServiceTypeName()
- system.fabric.description.ServiceTypeDescription.setPlacementConstraints(String)
- system.fabric.description.ServiceTypeDescription.setPolicies(List<ServicePlacementPolicyDescription>)
- system.fabric.description.ServiceTypeDescription.setServiceTypeKind(ServiceDescriptionKind)
- system.fabric.description.ServiceTypeDescription.setServiceTypeName(String)
methods:
- fullName: system.fabric.description.StatelessServiceTypeDescription.isUseImplicitHost()
  name: isUseImplicitHost()
  nameWithType: StatelessServiceTypeDescription.isUseImplicitHost()
  returns:
    description: <p>boolean. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies that the service does not implement Service Fabric interfaces. Service Fabric should start the specified executables.</p>

    <p></p>
  syntax: public boolean isUseImplicitHost()
  uid: system.fabric.description.StatelessServiceTypeDescription.isUseImplicitHost()
- fullName: system.fabric.description.StatelessServiceTypeDescription.setUseImplicitHost(boolean useImplicitHost)
  name: setUseImplicitHost(boolean useImplicitHost)
  nameWithType: StatelessServiceTypeDescription.setUseImplicitHost(boolean useImplicitHost)
  parameters:
  - description: <p>Flag to specify Service Fabric should start the specified executables or not. </p>
    name: useImplicitHost
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies that the service does not implement Service Fabric interfaces. Service Fabric should start the specified executables.</p>

    <p></p>
  syntax: public void setUseImplicitHost(boolean useImplicitHost)
  uid: system.fabric.description.StatelessServiceTypeDescription.setUseImplicitHost(boolean)
nameWithType: StatelessServiceTypeDescription
syntax: public class StatelessServiceTypeDescription extends ServiceTypeDescription
type: class
uid: system.fabric.description.StatelessServiceTypeDescription
fullName: system.fabric.description.StatelessServiceTypeDescription
name: StatelessServiceTypeDescription
package: system.fabric.description
metadata: {}
