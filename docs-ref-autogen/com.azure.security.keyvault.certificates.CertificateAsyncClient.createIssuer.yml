### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.createIssuer*"
fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.createIssuer"
name: "createIssuer"
nameWithType: "CertificateAsyncClient.createIssuer"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.createIssuer(com.azure.security.keyvault.certificates.models.CertificateIssuer)"
  fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.createIssuer(CertificateIssuer issuer)"
  name: "createIssuer(CertificateIssuer issuer)"
  nameWithType: "CertificateAsyncClient.createIssuer(CertificateIssuer issuer)"
  summary: "Creates the specified certificate issuer. The SetCertificateIssuer operation updates the specified certificate issuer if it already exists or adds it if doesn't exist. This operation requires the certificates/setissuers permission.\n\n**Code Samples**\n\nCreates a new certificate issuer in the key vault. Prints out the created certificate issuer details when a response has been received.\n\n```java\nCertificateIssuer issuer = new CertificateIssuer(\"issuerName\", \"providerName\")\n     .setAccountId(\"keyvaultuser\")\n     .setPassword(\"temp2\");\n certificateAsyncClient.createIssuer(issuer)\n     .subscriberContext(Context.of(key1, value1, key2, value2))\n     .subscribe(issuerResponse -> {\n         System.out.printf(\"Issuer created with %s and %s\", issuerResponse.getName(),\n             issuerResponse.getProvider());\n     });\n```"
  parameters:
  - description: "The configuration of the certificate issuer to be created."
    name: "issuer"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificateIssuer?alt=com.azure.security.keyvault.certificates.models.CertificateIssuer&text=CertificateIssuer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CertificateIssuer> createIssuer(CertificateIssuer issuer)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the created <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateIssuer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate issuer\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.CertificateIssuer?alt=com.azure.security.keyvault.certificates.models.CertificateIssuer&text=CertificateIssuer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.1.4
