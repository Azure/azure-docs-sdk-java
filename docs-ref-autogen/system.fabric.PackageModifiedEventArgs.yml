### YamlMime:JavaType
constructors:
- system.fabric.PackageModifiedEventArgs.PackageModifiedEventArgs(T,T)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- system.fabric.PackageModifiedEventArgs.getNewPackage()
- system.fabric.PackageModifiedEventArgs.getOldPackage()
- system.fabric.PackageModifiedEventArgs.setNewPackage(T)
- system.fabric.PackageModifiedEventArgs.setOldPackage(T)
nameWithType: PackageModifiedEventArgs<T>
syntax: public class PackageModifiedEventArgs<T>
type: class
typeParameters:
- description: <p>Type of the package being described. See <xref uid="system.fabric.CodePackage" data-throw-if-not-resolved="false">system.fabric.CodePackage</xref>, <xref uid="system.fabric.ConfigurationPackage" data-throw-if-not-resolved="false">system.fabric.ConfigurationPackage</xref> and <xref uid="system.fabric.DataPackage" data-throw-if-not-resolved="false">system.fabric.DataPackage</xref>. Also see <xref uid="system.fabric.CodePackageActivationContext.getCodePackageRemovedEvent()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getCodePackageRemovedEvent()</xref>, <xref uid="system.fabric.CodePackageActivationContext.getConfigurationPackageRemovedEvent()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getConfigurationPackageRemovedEvent()</xref> and <xref uid="system.fabric.CodePackageActivationContext.getDataPackageRemovedEvent()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getDataPackageRemovedEvent()</xref>. </p>
  name: T
uid: system.fabric.PackageModifiedEventArgs
fullName: system.fabric.PackageModifiedEventArgs<T>
name: PackageModifiedEventArgs<T>
package: system.fabric
summary: <p>Describes a package modified event. </p>
metadata: {}
