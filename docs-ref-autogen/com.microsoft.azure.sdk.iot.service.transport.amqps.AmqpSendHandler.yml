### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  id: AmqpSendHandler
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  children:
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ProxyOptions)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.DEVICE_PATH_FORMAT
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.ENDPOINT
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.MODULE_PATH_FORMAT
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.SEND_TAG
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.createProtonMessage(java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.createProtonMessage(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onDelivery(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onLinkInit(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.verifySendSucceeded()
  langs:
  - java
  name: AmqpSendHandler
  nameWithType: AmqpSendHandler
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  type: Class
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: Instance of the QPID-Proton-J BaseHandler class to override the events what are needed to handle the send operation Contains and sets connection parameters (path, port, endpoint) Maintains the layers of AMQP protocol (Link, Session, Connection, Transport) Creates and sets SASL authentication for transport
  syntax:
    content: public class AmqpSendHandler extends AmqpConnectionHandler
  inheritance:
  - java.lang.Object
  - org.apache.qpid.proton.engine.BaseHandler
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandler
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler
  inheritedMembers:
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalOpen(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalClose(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalOpen(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteClose(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalClose(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalOpen(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteClose(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onTransportError(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onReactorInit(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)
  - com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.verifyConnectionWasOpened()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.apache.qpid.proton.engine.BaseHandler.add(org.apache.qpid.proton.engine.Handler)
  - org.apache.qpid.proton.engine.BaseHandler.children()
  - org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Extendable)
  - org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Record)
  - org.apache.qpid.proton.engine.BaseHandler.handle(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onDelivery(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onLinkFinal(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onLinkInit(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onReactorFinal(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onSelectableError(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onSelectableInit(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onSessionFinal(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onSessionInit(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onTimerTask(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onTransport(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onTransportClosed(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.onUnhandled(org.apache.qpid.proton.engine.Event)
  - org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Extendable,org.apache.qpid.proton.engine.Handler)
  - org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Record,org.apache.qpid.proton.engine.Handler)
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol)
  id: AmqpSendHandler(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: AmqpSendHandler.AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: Constructor to set up connection parameters and initialize handshaker for transport
  syntax:
    content: public AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
    parameters:
    - id: hostName
      type: java.lang.String
      description: 'The address string of the service (example: AAA.BBB.CCC)'
    - id: userName
      type: java.lang.String
      description: 'The username string to use SASL authentication (example: user@sas.service)'
    - id: sasToken
      type: java.lang.String
      description: The SAS token string
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: protocol to use
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ProxyOptions)
  id: AmqpSendHandler(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ProxyOptions)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
  nameWithType: AmqpSendHandler.AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: Constructor to set up connection parameters and initialize handshaker for transport
  syntax:
    content: public AmqpSendHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)
    parameters:
    - id: hostName
      type: java.lang.String
      description: 'The address string of the service (example: AAA.BBB.CCC)'
    - id: userName
      type: java.lang.String
      description: 'The username string to use SASL authentication (example: user@sas.service)'
    - id: sasToken
      type: java.lang.String
      description: The SAS token string
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: protocol to use
    - id: proxyOptions
      type: com.microsoft.azure.sdk.iot.service.ProxyOptions
      description: the proxy options to tunnel through, if a proxy should be used.
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.DEVICE_PATH_FORMAT
  id: DEVICE_PATH_FORMAT
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: DEVICE_PATH_FORMAT
  nameWithType: AmqpSendHandler.DEVICE_PATH_FORMAT
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.DEVICE_PATH_FORMAT
  type: Field
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  syntax:
    content: public static final String DEVICE_PATH_FORMAT
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.ENDPOINT
  id: ENDPOINT
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: ENDPOINT
  nameWithType: AmqpSendHandler.ENDPOINT
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.ENDPOINT
  type: Field
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  syntax:
    content: public static final String ENDPOINT
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.MODULE_PATH_FORMAT
  id: MODULE_PATH_FORMAT
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: MODULE_PATH_FORMAT
  nameWithType: AmqpSendHandler.MODULE_PATH_FORMAT
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.MODULE_PATH_FORMAT
  type: Field
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  syntax:
    content: public static final String MODULE_PATH_FORMAT
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.SEND_TAG
  id: SEND_TAG
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: SEND_TAG
  nameWithType: AmqpSendHandler.SEND_TAG
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.SEND_TAG
  type: Field
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  syntax:
    content: public static final String SEND_TAG
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.createProtonMessage(java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  id: createProtonMessage(java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: createProtonMessage(String deviceId, Message message)
  nameWithType: AmqpSendHandler.createProtonMessage(String deviceId, Message message)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.createProtonMessage(String deviceId, Message message)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.createProtonMessage*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: Create Proton message from deviceId and content string
  syntax:
    content: public void createProtonMessage(String deviceId, Message message)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The device name string
    - id: message
      type: com.microsoft.azure.sdk.iot.service.Message
      description: The message to be sent
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.createProtonMessage(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  id: createProtonMessage(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: createProtonMessage(String deviceId, String moduleId, Message message)
  nameWithType: AmqpSendHandler.createProtonMessage(String deviceId, String moduleId, Message message)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.createProtonMessage(String deviceId, String moduleId, Message message)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.createProtonMessage*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: Create Proton message from deviceId and content string
  syntax:
    content: public void createProtonMessage(String deviceId, String moduleId, Message message)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The device name string
    - id: moduleId
      type: java.lang.String
      description: The device name string
    - id: message
      type: com.microsoft.azure.sdk.iot.service.Message
      description: The message to be sent
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)
  id: onConnectionInit(org.apache.qpid.proton.engine.Event)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: onConnectionInit(Event event)
  nameWithType: AmqpSendHandler.onConnectionInit(Event event)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onConnectionInit(Event event)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onConnectionInit*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: Event handler for the connection init event
  syntax:
    content: public void onConnectionInit(Event event)
    parameters:
    - id: event
      type: org.apache.qpid.proton.engine.Event
      description: The proton event object
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)
  id: onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: onConnectionRemoteClose(Event event)
  nameWithType: AmqpSendHandler.onConnectionRemoteClose(Event event)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onConnectionRemoteClose(Event event)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onConnectionRemoteClose*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  syntax:
    content: public void onConnectionRemoteClose(Event event)
    parameters:
    - id: event
      type: org.apache.qpid.proton.engine.Event
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onDelivery(org.apache.qpid.proton.engine.Event)
  id: onDelivery(org.apache.qpid.proton.engine.Event)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: onDelivery(Event event)
  nameWithType: AmqpSendHandler.onDelivery(Event event)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onDelivery(Event event)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onDelivery*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  syntax:
    content: public void onDelivery(Event event)
    parameters:
    - id: event
      type: org.apache.qpid.proton.engine.Event
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)
  id: onLinkFlow(org.apache.qpid.proton.engine.Event)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: onLinkFlow(Event event)
  nameWithType: AmqpSendHandler.onLinkFlow(Event event)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onLinkFlow(Event event)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onLinkFlow*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: Event handler for the link flow event
  syntax:
    content: public void onLinkFlow(Event event)
    parameters:
    - id: event
      type: org.apache.qpid.proton.engine.Event
      description: The proton event object
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onLinkInit(org.apache.qpid.proton.engine.Event)
  id: onLinkInit(org.apache.qpid.proton.engine.Event)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: onLinkInit(Event event)
  nameWithType: AmqpSendHandler.onLinkInit(Event event)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onLinkInit(Event event)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onLinkInit*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: Event handler for the link init event
  syntax:
    content: public void onLinkInit(Event event)
    parameters:
    - id: event
      type: org.apache.qpid.proton.engine.Event
      description: The proton event object
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.verifySendSucceeded()
  id: verifySendSucceeded()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
  langs:
  - java
  name: verifySendSucceeded()
  nameWithType: AmqpSendHandler.verifySendSucceeded()
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.verifySendSucceeded()
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.verifySendSucceeded*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  syntax:
    content: public void verifySendSucceeded()
  exceptions:
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  - type: java.io.IOException
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
  name: IotHubServiceClientProtocol
  nameWithType: IotHubServiceClientProtocol
  fullName: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler*
  name: AmqpSendHandler
  nameWithType: AmqpSendHandler.AmqpSendHandler
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.AmqpSendHandler
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.ProxyOptions
  name: ProxyOptions
  nameWithType: ProxyOptions
  fullName: com.microsoft.azure.sdk.iot.service.ProxyOptions
- uid: com.microsoft.azure.sdk.iot.service.Message
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.service.Message
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.createProtonMessage*
  name: createProtonMessage
  nameWithType: AmqpSendHandler.createProtonMessage
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.createProtonMessage
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: org.apache.qpid.proton.engine.Event
  spec.java:
  - uid: org.apache.qpid.proton.engine.Event
    name: Event
    fullName: org.apache.qpid.proton.engine.Event
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onConnectionInit*
  name: onConnectionInit
  nameWithType: AmqpSendHandler.onConnectionInit
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onConnectionInit
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onLinkInit*
  name: onLinkInit
  nameWithType: AmqpSendHandler.onLinkInit
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onLinkInit
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onLinkFlow*
  name: onLinkFlow
  nameWithType: AmqpSendHandler.onLinkFlow
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onLinkFlow
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onDelivery*
  name: onDelivery
  nameWithType: AmqpSendHandler.onDelivery
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onDelivery
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onConnectionRemoteClose*
  name: onConnectionRemoteClose
  nameWithType: AmqpSendHandler.onConnectionRemoteClose
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.onConnectionRemoteClose
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.verifySendSucceeded*
  name: verifySendSucceeded
  nameWithType: AmqpSendHandler.verifySendSucceeded
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler.verifySendSucceeded
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler
  name: AmqpConnectionHandler
  nameWithType: AmqpConnectionHandler
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: org.apache.qpid.proton.engine.BaseHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onLinkFlow(Event)
  nameWithType: BaseHandler.onLinkFlow(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalOpen(org.apache.qpid.proton.engine.Event)
  name: ErrorLoggingBaseHandlerWithCleanup.onLinkLocalOpen(Event)
  nameWithType: ErrorLoggingBaseHandlerWithCleanup.onLinkLocalOpen(Event)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalOpen(org.apache.qpid.proton.engine.Event)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)
  name: AmqpConnectionHandler.onLinkRemoteOpen(Event)
  nameWithType: AmqpConnectionHandler.onLinkRemoteOpen(Event)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onTransportError(org.apache.qpid.proton.engine.Event)
  name: ErrorLoggingBaseHandlerWithCleanup.onTransportError(Event)
  nameWithType: ErrorLoggingBaseHandlerWithCleanup.onTransportError(Event)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onTransportError(org.apache.qpid.proton.engine.Event)
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalClose(org.apache.qpid.proton.engine.Event)
  name: ErrorLoggingBaseHandlerWithCleanup.onSessionLocalClose(Event)
  nameWithType: ErrorLoggingBaseHandlerWithCleanup.onSessionLocalClose(Event)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalClose(org.apache.qpid.proton.engine.Event)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onReactorInit(org.apache.qpid.proton.engine.Event)
  name: AmqpConnectionHandler.onReactorInit(Event)
  nameWithType: AmqpConnectionHandler.onReactorInit(Event)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onReactorInit(org.apache.qpid.proton.engine.Event)
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)
  name: ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteClose(Event)
  nameWithType: ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteClose(Event)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.apache.qpid.proton.engine.BaseHandler.onDelivery(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onDelivery(Event)
  nameWithType: BaseHandler.onDelivery(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onDelivery(org.apache.qpid.proton.engine.Event)
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteClose(org.apache.qpid.proton.engine.Event)
  name: ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteClose(Event)
  nameWithType: ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteClose(Event)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteClose(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onLinkLocalDetach(Event)
  nameWithType: BaseHandler.onLinkLocalDetach(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.handle(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.handle(Event)
  nameWithType: BaseHandler.handle(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.handle(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onSelectableError(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onSelectableError(Event)
  nameWithType: BaseHandler.onSelectableError(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onSelectableError(org.apache.qpid.proton.engine.Event)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteClose(org.apache.qpid.proton.engine.Event)
  name: ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteClose(Event)
  nameWithType: ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteClose(Event)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteClose(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Record)
  name: BaseHandler.getHandler(Record)
  nameWithType: BaseHandler.getHandler(Record)
  fullName: org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Record)
- uid: org.apache.qpid.proton.engine.BaseHandler.onSessionInit(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onSessionInit(Event)
  nameWithType: BaseHandler.onSessionInit(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onSessionInit(org.apache.qpid.proton.engine.Event)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.apache.qpid.proton.engine.BaseHandler.onReactorFinal(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onReactorFinal(Event)
  nameWithType: BaseHandler.onReactorFinal(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onReactorFinal(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onUnhandled(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onUnhandled(Event)
  nameWithType: BaseHandler.onUnhandled(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onUnhandled(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.children()
  name: BaseHandler.children()
  nameWithType: BaseHandler.children()
  fullName: org.apache.qpid.proton.engine.BaseHandler.children()
- uid: org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Record,org.apache.qpid.proton.engine.Handler)
  name: BaseHandler.setHandler(Record,Handler)
  nameWithType: BaseHandler.setHandler(Record,Handler)
  fullName: org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Record,org.apache.qpid.proton.engine.Handler)
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.verifyConnectionWasOpened()
  name: AmqpConnectionHandler.verifyConnectionWasOpened()
  nameWithType: AmqpConnectionHandler.verifyConnectionWasOpened()
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.verifyConnectionWasOpened()
- uid: org.apache.qpid.proton.engine.BaseHandler.onLinkInit(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onLinkInit(Event)
  nameWithType: BaseHandler.onLinkInit(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onLinkInit(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Extendable)
  name: BaseHandler.getHandler(Extendable)
  nameWithType: BaseHandler.getHandler(Extendable)
  fullName: org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Extendable)
- uid: org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onLinkRemoteDetach(Event)
  nameWithType: BaseHandler.onLinkRemoteDetach(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onSelectableExpired(Event)
  nameWithType: BaseHandler.onSelectableExpired(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onConnectionUnbound(Event)
  nameWithType: BaseHandler.onConnectionUnbound(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onConnectionInit(Event)
  nameWithType: BaseHandler.onConnectionInit(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onTransportClosed(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onTransportClosed(Event)
  nameWithType: BaseHandler.onTransportClosed(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onTransportClosed(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onLinkFinal(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onLinkFinal(Event)
  nameWithType: BaseHandler.onLinkFinal(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onLinkFinal(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onTransportTailClosed(Event)
  nameWithType: BaseHandler.onTransportTailClosed(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Extendable,org.apache.qpid.proton.engine.Handler)
  name: BaseHandler.setHandler(Extendable,Handler)
  nameWithType: BaseHandler.setHandler(Extendable,Handler)
  fullName: org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Extendable,org.apache.qpid.proton.engine.Handler)
- uid: org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onSelectableWritable(Event)
  nameWithType: BaseHandler.onSelectableWritable(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onTransport(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onTransport(Event)
  nameWithType: BaseHandler.onTransport(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onTransport(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onSelectableUpdated(Event)
  nameWithType: BaseHandler.onSelectableUpdated(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated(org.apache.qpid.proton.engine.Event)
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)
  name: AmqpConnectionHandler.onSessionRemoteOpen(Event)
  nameWithType: AmqpConnectionHandler.onSessionRemoteOpen(Event)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalOpen(org.apache.qpid.proton.engine.Event)
  name: ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalOpen(Event)
  nameWithType: ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalOpen(Event)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalOpen(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onConnectionFinal(Event)
  nameWithType: BaseHandler.onConnectionFinal(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal(org.apache.qpid.proton.engine.Event)
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)
  name: AmqpConnectionHandler.onConnectionRemoteOpen(Event)
  nameWithType: AmqpConnectionHandler.onConnectionRemoteOpen(Event)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onSelectableFinal(Event)
  nameWithType: BaseHandler.onSelectableFinal(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onTimerTask(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onTimerTask(Event)
  nameWithType: BaseHandler.onTimerTask(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onTimerTask(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onSelectableReadable(Event)
  nameWithType: BaseHandler.onSelectableReadable(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable(org.apache.qpid.proton.engine.Event)
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalOpen(org.apache.qpid.proton.engine.Event)
  name: ErrorLoggingBaseHandlerWithCleanup.onSessionLocalOpen(Event)
  nameWithType: ErrorLoggingBaseHandlerWithCleanup.onSessionLocalOpen(Event)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalOpen(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onSelectableInit(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onSelectableInit(Event)
  nameWithType: BaseHandler.onSelectableInit(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onSelectableInit(org.apache.qpid.proton.engine.Event)
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)
  name: ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalClose(Event)
  nameWithType: ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalClose(Event)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onSessionFinal(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onSessionFinal(Event)
  nameWithType: BaseHandler.onSessionFinal(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onSessionFinal(org.apache.qpid.proton.engine.Event)
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)
  name: AmqpConnectionHandler.onConnectionBound(Event)
  nameWithType: AmqpConnectionHandler.onConnectionBound(Event)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onReactorQuiesced(Event)
  nameWithType: BaseHandler.onReactorQuiesced(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced(org.apache.qpid.proton.engine.Event)
- uid: org.apache.qpid.proton.engine.BaseHandler.add(org.apache.qpid.proton.engine.Handler)
  name: BaseHandler.add(Handler)
  nameWithType: BaseHandler.add(Handler)
  fullName: org.apache.qpid.proton.engine.BaseHandler.add(org.apache.qpid.proton.engine.Handler)
- uid: org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed(org.apache.qpid.proton.engine.Event)
  name: BaseHandler.onTransportHeadClosed(Event)
  nameWithType: BaseHandler.onTransportHeadClosed(Event)
  fullName: org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed(org.apache.qpid.proton.engine.Event)
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalClose(org.apache.qpid.proton.engine.Event)
  name: ErrorLoggingBaseHandlerWithCleanup.onLinkLocalClose(Event)
  nameWithType: ErrorLoggingBaseHandlerWithCleanup.onLinkLocalClose(Event)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalClose(org.apache.qpid.proton.engine.Event)
