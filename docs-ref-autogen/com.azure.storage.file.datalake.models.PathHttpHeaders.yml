### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.models.PathHttpHeaders"
fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders"
name: "PathHttpHeaders"
nameWithType: "PathHttpHeaders"
summary: "Parameter group."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PathHttpHeaders"
constructors:
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.PathHttpHeaders()"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.PathHttpHeaders()"
  name: "PathHttpHeaders()"
  nameWithType: "PathHttpHeaders.PathHttpHeaders()"
  syntax: "public PathHttpHeaders()"
methods:
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.getCacheControl()"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.getCacheControl()"
  name: "getCacheControl()"
  nameWithType: "PathHttpHeaders.getCacheControl()"
  summary: "Get the cacheControl property: Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request."
  syntax: "public String getCacheControl()"
  returns:
    description: "the cacheControl value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.getContentDisposition()"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.getContentDisposition()"
  name: "getContentDisposition()"
  nameWithType: "PathHttpHeaders.getContentDisposition()"
  summary: "Get the contentDisposition property: Optional. Sets the blob's Content-Disposition header."
  syntax: "public String getContentDisposition()"
  returns:
    description: "the contentDisposition value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.getContentEncoding()"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.getContentEncoding()"
  name: "getContentEncoding()"
  nameWithType: "PathHttpHeaders.getContentEncoding()"
  summary: "Get the contentEncoding property: Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request."
  syntax: "public String getContentEncoding()"
  returns:
    description: "the contentEncoding value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.getContentLanguage()"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.getContentLanguage()"
  name: "getContentLanguage()"
  nameWithType: "PathHttpHeaders.getContentLanguage()"
  summary: "Get the contentLanguage property: Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request."
  syntax: "public String getContentLanguage()"
  returns:
    description: "the contentLanguage value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.getContentMd5()"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.getContentMd5()"
  name: "getContentMd5()"
  nameWithType: "PathHttpHeaders.getContentMd5()"
  summary: "Get the contentMd5 property: Specify the transactional md5 for the body, to be validated by the service."
  syntax: "public byte[] getContentMd5()"
  returns:
    description: "the contentMd5 value."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.getContentType()"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.getContentType()"
  name: "getContentType()"
  nameWithType: "PathHttpHeaders.getContentType()"
  summary: "Get the contentType property: Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request."
  syntax: "public String getContentType()"
  returns:
    description: "the contentType value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.getTransactionalContentHash()"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.getTransactionalContentHash()"
  name: "getTransactionalContentHash()"
  nameWithType: "PathHttpHeaders.getTransactionalContentHash()"
  summary: "Get the transactionalContentHash property: Specify the transactional md5 for the body, to be validated by the service."
  syntax: "public byte[] getTransactionalContentHash()"
  returns:
    description: "the transactionalContentHash value."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.setCacheControl(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.setCacheControl(String cacheControl)"
  name: "setCacheControl(String cacheControl)"
  nameWithType: "PathHttpHeaders.setCacheControl(String cacheControl)"
  summary: "Set the cacheControl property: Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request."
  parameters:
  - description: "the cacheControl value to set."
    name: "cacheControl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathHttpHeaders setCacheControl(String cacheControl)"
  returns:
    description: "the PathHttpHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.PathHttpHeaders?alt=com.azure.storage.file.datalake.models.PathHttpHeaders&text=PathHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.setContentDisposition(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.setContentDisposition(String contentDisposition)"
  name: "setContentDisposition(String contentDisposition)"
  nameWithType: "PathHttpHeaders.setContentDisposition(String contentDisposition)"
  summary: "Set the contentDisposition property: Optional. Sets the blob's Content-Disposition header."
  parameters:
  - description: "the contentDisposition value to set."
    name: "contentDisposition"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathHttpHeaders setContentDisposition(String contentDisposition)"
  returns:
    description: "the PathHttpHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.PathHttpHeaders?alt=com.azure.storage.file.datalake.models.PathHttpHeaders&text=PathHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.setContentEncoding(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.setContentEncoding(String contentEncoding)"
  name: "setContentEncoding(String contentEncoding)"
  nameWithType: "PathHttpHeaders.setContentEncoding(String contentEncoding)"
  summary: "Set the contentEncoding property: Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request."
  parameters:
  - description: "the contentEncoding value to set."
    name: "contentEncoding"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathHttpHeaders setContentEncoding(String contentEncoding)"
  returns:
    description: "the PathHttpHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.PathHttpHeaders?alt=com.azure.storage.file.datalake.models.PathHttpHeaders&text=PathHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.setContentLanguage(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.setContentLanguage(String contentLanguage)"
  name: "setContentLanguage(String contentLanguage)"
  nameWithType: "PathHttpHeaders.setContentLanguage(String contentLanguage)"
  summary: "Set the contentLanguage property: Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request."
  parameters:
  - description: "the contentLanguage value to set."
    name: "contentLanguage"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathHttpHeaders setContentLanguage(String contentLanguage)"
  returns:
    description: "the PathHttpHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.PathHttpHeaders?alt=com.azure.storage.file.datalake.models.PathHttpHeaders&text=PathHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.setContentMd5(byte[])"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.setContentMd5(byte[] contentMd5)"
  name: "setContentMd5(byte[] contentMd5)"
  nameWithType: "PathHttpHeaders.setContentMd5(byte[] contentMd5)"
  summary: "Set the contentMd5 property: Specify the transactional md5 for the body, to be validated by the service."
  parameters:
  - description: "the contentMd5 value to set."
    name: "contentMd5"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public PathHttpHeaders setContentMd5(byte[] contentMd5)"
  returns:
    description: "the PathHttpHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.PathHttpHeaders?alt=com.azure.storage.file.datalake.models.PathHttpHeaders&text=PathHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.setContentType(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.setContentType(String contentType)"
  name: "setContentType(String contentType)"
  nameWithType: "PathHttpHeaders.setContentType(String contentType)"
  summary: "Set the contentType property: Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request."
  parameters:
  - description: "the contentType value to set."
    name: "contentType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathHttpHeaders setContentType(String contentType)"
  returns:
    description: "the PathHttpHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.PathHttpHeaders?alt=com.azure.storage.file.datalake.models.PathHttpHeaders&text=PathHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.PathHttpHeaders.setTransactionalContentHash(byte[])"
  fullName: "com.azure.storage.file.datalake.models.PathHttpHeaders.setTransactionalContentHash(byte[] transactionalContentHash)"
  name: "setTransactionalContentHash(byte[] transactionalContentHash)"
  nameWithType: "PathHttpHeaders.setTransactionalContentHash(byte[] transactionalContentHash)"
  summary: "Set the transactionalContentHash property: Specify the transactional md5 for the body, to be validated by the service."
  parameters:
  - description: "the transactionalContentHash value to set."
    name: "transactionalContentHash"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public PathHttpHeaders setTransactionalContentHash(byte[] transactionalContentHash)"
  returns:
    description: "the PathHttpHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.PathHttpHeaders?alt=com.azure.storage.file.datalake.models.PathHttpHeaders&text=PathHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.storage.file.datalake.models"
artifact: com.azure:azure-storage-file-datalake:12.9.0
