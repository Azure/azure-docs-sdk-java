### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity
  id: BasicCosmosPersistentEntity
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.core.mapping
  children:
  - com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.BasicCosmosPersistentEntity(org.springframework.data.util.TypeInformation<T>)
  - com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.getCollection()
  - com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.getContainer()
  - com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.getLanguage()
  - com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.setApplicationContext(org.springframework.context.ApplicationContext)
  langs:
  - java
  name: BasicCosmosPersistentEntity<T>
  nameWithType: BasicCosmosPersistentEntity<T>
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity<T>
  type: Class
  package: com.azure.spring.data.cosmos.core.mapping
  summary: Simple value object to capture information of <xref uid="com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty" data-throw-if-not-resolved="false">CosmosPersistentProperty</xref>s.
  syntax:
    content: public class BasicCosmosPersistentEntity<T> extends BasicPersistentEntity<T,CosmosPersistentProperty> implements CosmosPersistentEntity<T>, ApplicationContextAware
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  - org.springframework.data.mapping.model.BasicPersistentEntity
  implements:
  - com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity<T>
  - org.springframework.context.ApplicationContextAware
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.data.mapping.model.BasicPersistentEntity.<A>findAnnotation(java.lang.Class<A>)
  - org.springframework.data.mapping.model.BasicPersistentEntity.<A>isAnnotationPresent(java.lang.Class<A>)
  - org.springframework.data.mapping.model.BasicPersistentEntity.<B>getPropertyAccessor(B)
  - org.springframework.data.mapping.model.BasicPersistentEntity.<B>getPropertyPathAccessor(B)
  - org.springframework.data.mapping.model.BasicPersistentEntity.addAssociation(org.springframework.data.mapping.Association<P>)
  - org.springframework.data.mapping.model.BasicPersistentEntity.addPersistentProperty(P)
  - org.springframework.data.mapping.model.BasicPersistentEntity.doWithAssociations(org.springframework.data.mapping.AssociationHandler<P>)
  - org.springframework.data.mapping.model.BasicPersistentEntity.doWithAssociations(org.springframework.data.mapping.SimpleAssociationHandler)
  - org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(org.springframework.data.mapping.PropertyHandler<P>)
  - org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(org.springframework.data.mapping.SimplePropertyHandler)
  - org.springframework.data.mapping.model.BasicPersistentEntity.getEvaluationContext(java.lang.Object)
  - org.springframework.data.mapping.model.BasicPersistentEntity.getFallbackIsNewStrategy()
  - org.springframework.data.mapping.model.BasicPersistentEntity.getIdProperty()
  - org.springframework.data.mapping.model.BasicPersistentEntity.getIdentifierAccessor(java.lang.Object)
  - org.springframework.data.mapping.model.BasicPersistentEntity.getName()
  - org.springframework.data.mapping.model.BasicPersistentEntity.getPersistenceConstructor()
  - org.springframework.data.mapping.model.BasicPersistentEntity.getPersistentProperties(java.lang.Class<? extends java.lang.annotation.Annotation>)
  - org.springframework.data.mapping.model.BasicPersistentEntity.getPersistentProperty(java.lang.String)
  - org.springframework.data.mapping.model.BasicPersistentEntity.getType()
  - org.springframework.data.mapping.model.BasicPersistentEntity.getTypeAlias()
  - org.springframework.data.mapping.model.BasicPersistentEntity.getTypeInformation()
  - org.springframework.data.mapping.model.BasicPersistentEntity.getVersionProperty()
  - org.springframework.data.mapping.model.BasicPersistentEntity.hasIdProperty()
  - org.springframework.data.mapping.model.BasicPersistentEntity.hasVersionProperty()
  - org.springframework.data.mapping.model.BasicPersistentEntity.isConstructorArgument(org.springframework.data.mapping.PersistentProperty<?>)
  - org.springframework.data.mapping.model.BasicPersistentEntity.isIdProperty(org.springframework.data.mapping.PersistentProperty<?>)
  - org.springframework.data.mapping.model.BasicPersistentEntity.isImmutable()
  - org.springframework.data.mapping.model.BasicPersistentEntity.isNew(java.lang.Object)
  - org.springframework.data.mapping.model.BasicPersistentEntity.isVersionProperty(org.springframework.data.mapping.PersistentProperty<?>)
  - org.springframework.data.mapping.model.BasicPersistentEntity.iterator()
  - org.springframework.data.mapping.model.BasicPersistentEntity.requiresPropertyPopulation()
  - org.springframework.data.mapping.model.BasicPersistentEntity.returnPropertyIfBetterIdPropertyCandidateOrNull(P)
  - org.springframework.data.mapping.model.BasicPersistentEntity.setEvaluationContextProvider(org.springframework.data.spel.EvaluationContextProvider)
  - org.springframework.data.mapping.model.BasicPersistentEntity.setPersistentPropertyAccessorFactory(org.springframework.data.mapping.model.PersistentPropertyAccessorFactory)
  - org.springframework.data.mapping.model.BasicPersistentEntity.verify()
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.BasicCosmosPersistentEntity(org.springframework.data.util.TypeInformation<T>)
  id: BasicCosmosPersistentEntity(org.springframework.data.util.TypeInformation<T>)
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity
  langs:
  - java
  name: BasicCosmosPersistentEntity(TypeInformation<T> typeInformation)
  nameWithType: BasicCosmosPersistentEntity<T>.BasicCosmosPersistentEntity(TypeInformation<T> typeInformation)
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity<T>.BasicCosmosPersistentEntity(TypeInformation<T> typeInformation)
  overload: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.BasicCosmosPersistentEntity*
  type: Constructor
  package: com.azure.spring.data.cosmos.core.mapping
  summary: Creates a new <xref uid="com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity" data-throw-if-not-resolved="false">BasicCosmosPersistentEntity</xref> from the given <xref uid="org.springframework.data.util.TypeInformation" data-throw-if-not-resolved="false">TypeInformation</xref>.
  syntax:
    content: public BasicCosmosPersistentEntity(TypeInformation<T> typeInformation)
    parameters:
    - id: typeInformation
      type: org.springframework.data.util.TypeInformation<T>
      description: must not be null.
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.getCollection()
  id: getCollection()
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity
  langs:
  - java
  name: getCollection()
  nameWithType: BasicCosmosPersistentEntity<T>.getCollection()
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity<T>.getCollection()
  overload: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.getCollection*
  type: Method
  package: com.azure.spring.data.cosmos.core.mapping
  summary: To get collection of entity
  syntax:
    content: public String getCollection()
    return:
      type: java.lang.String
      description: String
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.getContainer()
  id: getContainer()
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity
  langs:
  - java
  name: getContainer()
  nameWithType: BasicCosmosPersistentEntity<T>.getContainer()
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity<T>.getContainer()
  overload: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.getContainer*
  type: Method
  package: com.azure.spring.data.cosmos.core.mapping
  summary: To get container of entity
  syntax:
    content: public String getContainer()
    return:
      type: java.lang.String
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.getLanguage()
  id: getLanguage()
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity
  langs:
  - java
  name: getLanguage()
  nameWithType: BasicCosmosPersistentEntity<T>.getLanguage()
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity<T>.getLanguage()
  overload: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.getLanguage*
  type: Method
  package: com.azure.spring.data.cosmos.core.mapping
  summary: To get language
  syntax:
    content: public String getLanguage()
    return:
      type: java.lang.String
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.setApplicationContext(org.springframework.context.ApplicationContext)
  id: setApplicationContext(org.springframework.context.ApplicationContext)
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity
  langs:
  - java
  name: setApplicationContext(ApplicationContext applicationContext)
  nameWithType: BasicCosmosPersistentEntity<T>.setApplicationContext(ApplicationContext applicationContext)
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity<T>.setApplicationContext(ApplicationContext applicationContext)
  overload: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.setApplicationContext*
  type: Method
  package: com.azure.spring.data.cosmos.core.mapping
  summary: To set application context
  syntax:
    content: public void setApplicationContext(ApplicationContext applicationContext)
    parameters:
    - id: applicationContext
      type: org.springframework.context.ApplicationContext
      description: must not be null.
  exceptions:
  - type: org.springframework.beans.BeansException
    description: the bean exception
references:
- uid: org.springframework.data.util.TypeInformation<T>
  spec.java:
  - uid: org.springframework.data.util.TypeInformation
    name: TypeInformation
    fullName: org.springframework.data.util.TypeInformation
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.BasicCosmosPersistentEntity*
  name: BasicCosmosPersistentEntity
  nameWithType: BasicCosmosPersistentEntity<T>.BasicCosmosPersistentEntity
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity<T>.BasicCosmosPersistentEntity
  package: com.azure.spring.data.cosmos.core.mapping
- uid: org.springframework.beans.BeansException
  spec.java:
  - uid: org.springframework.beans.BeansException
    name: BeansException
    fullName: org.springframework.beans.BeansException
- uid: org.springframework.context.ApplicationContext
  spec.java:
  - uid: org.springframework.context.ApplicationContext
    name: ApplicationContext
    fullName: org.springframework.context.ApplicationContext
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.setApplicationContext*
  name: setApplicationContext
  nameWithType: BasicCosmosPersistentEntity<T>.setApplicationContext
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity<T>.setApplicationContext
  package: com.azure.spring.data.cosmos.core.mapping
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.getCollection*
  name: getCollection
  nameWithType: BasicCosmosPersistentEntity<T>.getCollection
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity<T>.getCollection
  package: com.azure.spring.data.cosmos.core.mapping
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.getContainer*
  name: getContainer
  nameWithType: BasicCosmosPersistentEntity<T>.getContainer
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity<T>.getContainer
  package: com.azure.spring.data.cosmos.core.mapping
- uid: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity.getLanguage*
  name: getLanguage
  nameWithType: BasicCosmosPersistentEntity<T>.getLanguage
  fullName: com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentEntity<T>.getLanguage
  package: com.azure.spring.data.cosmos.core.mapping
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: org.springframework.data.mapping.model.BasicPersistentEntity<T,com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty>
  name: BasicPersistentEntity<T,CosmosPersistentProperty>
  nameWithType: BasicPersistentEntity<T,CosmosPersistentProperty>
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity<T,com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty>
- uid: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity<T>
  name: CosmosPersistentEntity<T>
  nameWithType: CosmosPersistentEntity<T>
  fullName: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity<T>
- uid: org.springframework.context.ApplicationContextAware
  name: ApplicationContextAware
  nameWithType: ApplicationContextAware
  fullName: org.springframework.context.ApplicationContextAware
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.isConstructorArgument(org.springframework.data.mapping.PersistentProperty<?>)
  name: BasicPersistentEntity.isConstructorArgument(PersistentProperty<?>)
  nameWithType: BasicPersistentEntity.isConstructorArgument(PersistentProperty<?>)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.isConstructorArgument(org.springframework.data.mapping.PersistentProperty<?>)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.hasIdProperty()
  name: BasicPersistentEntity.hasIdProperty()
  nameWithType: BasicPersistentEntity.hasIdProperty()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.hasIdProperty()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getPersistenceConstructor()
  name: BasicPersistentEntity.getPersistenceConstructor()
  nameWithType: BasicPersistentEntity.getPersistenceConstructor()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getPersistenceConstructor()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.returnPropertyIfBetterIdPropertyCandidateOrNull(P)
  name: BasicPersistentEntity.returnPropertyIfBetterIdPropertyCandidateOrNull(P)
  nameWithType: BasicPersistentEntity.returnPropertyIfBetterIdPropertyCandidateOrNull(P)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.returnPropertyIfBetterIdPropertyCandidateOrNull(P)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.setEvaluationContextProvider(org.springframework.data.spel.EvaluationContextProvider)
  name: BasicPersistentEntity.setEvaluationContextProvider(EvaluationContextProvider)
  nameWithType: BasicPersistentEntity.setEvaluationContextProvider(EvaluationContextProvider)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.setEvaluationContextProvider(org.springframework.data.spel.EvaluationContextProvider)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getEvaluationContext(java.lang.Object)
  name: BasicPersistentEntity.getEvaluationContext(Object)
  nameWithType: BasicPersistentEntity.getEvaluationContext(Object)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getEvaluationContext(java.lang.Object)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getPersistentProperties(java.lang.Class<? extends java.lang.annotation.Annotation>)
  name: BasicPersistentEntity.getPersistentProperties(Class<? extends Annotation>)
  nameWithType: BasicPersistentEntity.getPersistentProperties(Class<? extends Annotation>)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getPersistentProperties(java.lang.Class<? extends java.lang.annotation.Annotation>)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getFallbackIsNewStrategy()
  name: BasicPersistentEntity.getFallbackIsNewStrategy()
  nameWithType: BasicPersistentEntity.getFallbackIsNewStrategy()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getFallbackIsNewStrategy()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.<B>getPropertyAccessor(B)
  name: BasicPersistentEntity.<B>getPropertyAccessor(B)
  nameWithType: BasicPersistentEntity.<B>getPropertyAccessor(B)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.<B>getPropertyAccessor(B)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.addAssociation(org.springframework.data.mapping.Association<P>)
  name: BasicPersistentEntity.addAssociation(Association<P>)
  nameWithType: BasicPersistentEntity.addAssociation(Association<P>)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.addAssociation(org.springframework.data.mapping.Association<P>)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getType()
  name: BasicPersistentEntity.getType()
  nameWithType: BasicPersistentEntity.getType()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getType()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.isNew(java.lang.Object)
  name: BasicPersistentEntity.isNew(Object)
  nameWithType: BasicPersistentEntity.isNew(Object)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.isNew(java.lang.Object)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.iterator()
  name: BasicPersistentEntity.iterator()
  nameWithType: BasicPersistentEntity.iterator()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.iterator()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.<B>getPropertyPathAccessor(B)
  name: BasicPersistentEntity.<B>getPropertyPathAccessor(B)
  nameWithType: BasicPersistentEntity.<B>getPropertyPathAccessor(B)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.<B>getPropertyPathAccessor(B)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.isImmutable()
  name: BasicPersistentEntity.isImmutable()
  nameWithType: BasicPersistentEntity.isImmutable()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.isImmutable()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getTypeAlias()
  name: BasicPersistentEntity.getTypeAlias()
  nameWithType: BasicPersistentEntity.getTypeAlias()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getTypeAlias()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(org.springframework.data.mapping.PropertyHandler<P>)
  name: BasicPersistentEntity.doWithProperties(PropertyHandler<P>)
  nameWithType: BasicPersistentEntity.doWithProperties(PropertyHandler<P>)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(org.springframework.data.mapping.PropertyHandler<P>)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.<A>isAnnotationPresent(java.lang.Class<A>)
  name: BasicPersistentEntity.<A>isAnnotationPresent(Class<A>)
  nameWithType: BasicPersistentEntity.<A>isAnnotationPresent(Class<A>)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.<A>isAnnotationPresent(java.lang.Class<A>)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getIdProperty()
  name: BasicPersistentEntity.getIdProperty()
  nameWithType: BasicPersistentEntity.getIdProperty()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getIdProperty()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.doWithAssociations(org.springframework.data.mapping.AssociationHandler<P>)
  name: BasicPersistentEntity.doWithAssociations(AssociationHandler<P>)
  nameWithType: BasicPersistentEntity.doWithAssociations(AssociationHandler<P>)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.doWithAssociations(org.springframework.data.mapping.AssociationHandler<P>)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(org.springframework.data.mapping.SimplePropertyHandler)
  name: BasicPersistentEntity.doWithProperties(SimplePropertyHandler)
  nameWithType: BasicPersistentEntity.doWithProperties(SimplePropertyHandler)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(org.springframework.data.mapping.SimplePropertyHandler)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.addPersistentProperty(P)
  name: BasicPersistentEntity.addPersistentProperty(P)
  nameWithType: BasicPersistentEntity.addPersistentProperty(P)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.addPersistentProperty(P)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getTypeInformation()
  name: BasicPersistentEntity.getTypeInformation()
  nameWithType: BasicPersistentEntity.getTypeInformation()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getTypeInformation()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.hasVersionProperty()
  name: BasicPersistentEntity.hasVersionProperty()
  nameWithType: BasicPersistentEntity.hasVersionProperty()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.hasVersionProperty()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.setPersistentPropertyAccessorFactory(org.springframework.data.mapping.model.PersistentPropertyAccessorFactory)
  name: BasicPersistentEntity.setPersistentPropertyAccessorFactory(PersistentPropertyAccessorFactory)
  nameWithType: BasicPersistentEntity.setPersistentPropertyAccessorFactory(PersistentPropertyAccessorFactory)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.setPersistentPropertyAccessorFactory(org.springframework.data.mapping.model.PersistentPropertyAccessorFactory)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.<A>findAnnotation(java.lang.Class<A>)
  name: BasicPersistentEntity.<A>findAnnotation(Class<A>)
  nameWithType: BasicPersistentEntity.<A>findAnnotation(Class<A>)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.<A>findAnnotation(java.lang.Class<A>)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getName()
  name: BasicPersistentEntity.getName()
  nameWithType: BasicPersistentEntity.getName()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getName()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.isVersionProperty(org.springframework.data.mapping.PersistentProperty<?>)
  name: BasicPersistentEntity.isVersionProperty(PersistentProperty<?>)
  nameWithType: BasicPersistentEntity.isVersionProperty(PersistentProperty<?>)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.isVersionProperty(org.springframework.data.mapping.PersistentProperty<?>)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getVersionProperty()
  name: BasicPersistentEntity.getVersionProperty()
  nameWithType: BasicPersistentEntity.getVersionProperty()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getVersionProperty()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.doWithAssociations(org.springframework.data.mapping.SimpleAssociationHandler)
  name: BasicPersistentEntity.doWithAssociations(SimpleAssociationHandler)
  nameWithType: BasicPersistentEntity.doWithAssociations(SimpleAssociationHandler)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.doWithAssociations(org.springframework.data.mapping.SimpleAssociationHandler)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getPersistentProperty(java.lang.String)
  name: BasicPersistentEntity.getPersistentProperty(String)
  nameWithType: BasicPersistentEntity.getPersistentProperty(String)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getPersistentProperty(java.lang.String)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.requiresPropertyPopulation()
  name: BasicPersistentEntity.requiresPropertyPopulation()
  nameWithType: BasicPersistentEntity.requiresPropertyPopulation()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.requiresPropertyPopulation()
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.isIdProperty(org.springframework.data.mapping.PersistentProperty<?>)
  name: BasicPersistentEntity.isIdProperty(PersistentProperty<?>)
  nameWithType: BasicPersistentEntity.isIdProperty(PersistentProperty<?>)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.isIdProperty(org.springframework.data.mapping.PersistentProperty<?>)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getIdentifierAccessor(java.lang.Object)
  name: BasicPersistentEntity.getIdentifierAccessor(Object)
  nameWithType: BasicPersistentEntity.getIdentifierAccessor(Object)
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getIdentifierAccessor(java.lang.Object)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.verify()
  name: BasicPersistentEntity.verify()
  nameWithType: BasicPersistentEntity.verify()
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.verify()
- uid: org.springframework.data.util.TypeInformation
  name: TypeInformation
  nameWithType: TypeInformation
  fullName: org.springframework.data.util.TypeInformation
- uid: T,com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty
  name: T,CosmosPersistentProperty
  nameWithType: T,CosmosPersistentProperty
  fullName: T,com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty
- uid: org.springframework.data.mapping.model.BasicPersistentEntity
  name: BasicPersistentEntity
  nameWithType: BasicPersistentEntity
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity
- uid: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity
  name: CosmosPersistentEntity
  nameWithType: CosmosPersistentEntity
  fullName: com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.isConstructorArgument(org.springframework.data.mapping.PersistentProperty
  name: BasicPersistentEntity.isConstructorArgument(PersistentProperty
  nameWithType: BasicPersistentEntity.isConstructorArgument(PersistentProperty
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.isConstructorArgument(org.springframework.data.mapping.PersistentProperty
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: '? extends java.lang.annotation.Annotation>)'
  name: '? extends Annotation>)'
  nameWithType: '? extends Annotation>)'
  fullName: '? extends java.lang.annotation.Annotation>)'
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.getPersistentProperties(java.lang.Class
  name: BasicPersistentEntity.getPersistentProperties(Class
  nameWithType: BasicPersistentEntity.getPersistentProperties(Class
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.getPersistentProperties(java.lang.Class
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.
  name: BasicPersistentEntity.
  nameWithType: BasicPersistentEntity.
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.
- uid: B>getPropertyAccessor(B)
  name: B>getPropertyAccessor(B)
  nameWithType: B>getPropertyAccessor(B)
  fullName: B>getPropertyAccessor(B)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.addAssociation(org.springframework.data.mapping.Association
  name: BasicPersistentEntity.addAssociation(Association
  nameWithType: BasicPersistentEntity.addAssociation(Association
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.addAssociation(org.springframework.data.mapping.Association
- uid: P>)
  name: P>)
  nameWithType: P>)
  fullName: P>)
- uid: B>getPropertyPathAccessor(B)
  name: B>getPropertyPathAccessor(B)
  nameWithType: B>getPropertyPathAccessor(B)
  fullName: B>getPropertyPathAccessor(B)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(org.springframework.data.mapping.PropertyHandler
  name: BasicPersistentEntity.doWithProperties(PropertyHandler
  nameWithType: BasicPersistentEntity.doWithProperties(PropertyHandler
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(org.springframework.data.mapping.PropertyHandler
- uid: A>isAnnotationPresent(java.lang.Class
  name: A>isAnnotationPresent(Class
  nameWithType: A>isAnnotationPresent(Class
  fullName: A>isAnnotationPresent(java.lang.Class
- uid: A>)
  name: A>)
  nameWithType: A>)
  fullName: A>)
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.doWithAssociations(org.springframework.data.mapping.AssociationHandler
  name: BasicPersistentEntity.doWithAssociations(AssociationHandler
  nameWithType: BasicPersistentEntity.doWithAssociations(AssociationHandler
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.doWithAssociations(org.springframework.data.mapping.AssociationHandler
- uid: A>findAnnotation(java.lang.Class
  name: A>findAnnotation(Class
  nameWithType: A>findAnnotation(Class
  fullName: A>findAnnotation(java.lang.Class
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.isVersionProperty(org.springframework.data.mapping.PersistentProperty
  name: BasicPersistentEntity.isVersionProperty(PersistentProperty
  nameWithType: BasicPersistentEntity.isVersionProperty(PersistentProperty
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.isVersionProperty(org.springframework.data.mapping.PersistentProperty
- uid: org.springframework.data.mapping.model.BasicPersistentEntity.isIdProperty(org.springframework.data.mapping.PersistentProperty
  name: BasicPersistentEntity.isIdProperty(PersistentProperty
  nameWithType: BasicPersistentEntity.isIdProperty(PersistentProperty
  fullName: org.springframework.data.mapping.model.BasicPersistentEntity.isIdProperty(org.springframework.data.mapping.PersistentProperty
