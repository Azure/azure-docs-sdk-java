### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener"
fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener"
name: "ApplicationGatewayHttpListener"
nameWithType: "ApplicationGatewayHttpListener"
summary: "Http listener of an application gateway."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.SubResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.SubResource.id()"
- "com.microsoft.azure.SubResource.withId(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ApplicationGatewayHttpListener extends SubResource"
constructors:
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.ApplicationGatewayHttpListener()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.ApplicationGatewayHttpListener()"
  name: "ApplicationGatewayHttpListener()"
  nameWithType: "ApplicationGatewayHttpListener.ApplicationGatewayHttpListener()"
  syntax: "public ApplicationGatewayHttpListener()"
methods:
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.customErrorConfigurations()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.customErrorConfigurations()"
  name: "customErrorConfigurations()"
  nameWithType: "ApplicationGatewayHttpListener.customErrorConfigurations()"
  summary: "Get custom error configurations of the HTTP listener."
  syntax: "public List<ApplicationGatewayCustomError> customErrorConfigurations()"
  desc: "Get custom error configurations of the HTTP listener."
  returns:
    description: "the customErrorConfigurations value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayCustomError?alt=com.microsoft.azure.management.network.ApplicationGatewayCustomError&text=ApplicationGatewayCustomError\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.etag()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.etag()"
  name: "etag()"
  nameWithType: "ApplicationGatewayHttpListener.etag()"
  summary: "Get a unique read-only string that changes whenever the resource is updated."
  syntax: "public String etag()"
  desc: "Get a unique read-only string that changes whenever the resource is updated."
  returns:
    description: "the etag value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.firewallPolicy()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.firewallPolicy()"
  name: "firewallPolicy()"
  nameWithType: "ApplicationGatewayHttpListener.firewallPolicy()"
  summary: "Get reference to the Firewall<wbr>Policy resource."
  syntax: "public SubResource firewallPolicy()"
  desc: "Get reference to the FirewallPolicy resource."
  returns:
    description: "the firewallPolicy value"
    type: "<xref href=\"com.microsoft.azure.SubResource?alt=com.microsoft.azure.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.frontendIPConfiguration()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.frontendIPConfiguration()"
  name: "frontendIPConfiguration()"
  nameWithType: "ApplicationGatewayHttpListener.frontendIPConfiguration()"
  summary: "Get frontend IP configuration resource of an application gateway."
  syntax: "public SubResource frontendIPConfiguration()"
  desc: "Get frontend IP configuration resource of an application gateway."
  returns:
    description: "the frontendIPConfiguration value"
    type: "<xref href=\"com.microsoft.azure.SubResource?alt=com.microsoft.azure.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.frontendPort()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.frontendPort()"
  name: "frontendPort()"
  nameWithType: "ApplicationGatewayHttpListener.frontendPort()"
  summary: "Get frontend port resource of an application gateway."
  syntax: "public SubResource frontendPort()"
  desc: "Get frontend port resource of an application gateway."
  returns:
    description: "the frontendPort value"
    type: "<xref href=\"com.microsoft.azure.SubResource?alt=com.microsoft.azure.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.hostName()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.hostName()"
  name: "hostName()"
  nameWithType: "ApplicationGatewayHttpListener.hostName()"
  summary: "Get host name of HTTP listener."
  syntax: "public String hostName()"
  desc: "Get host name of HTTP listener."
  returns:
    description: "the hostName value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.hostnames()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.hostnames()"
  name: "hostnames()"
  nameWithType: "ApplicationGatewayHttpListener.hostnames()"
  summary: "Get list of Host names for HTTP Listener that allows special wildcard characters as well."
  syntax: "public List<String> hostnames()"
  desc: "Get list of Host names for HTTP Listener that allows special wildcard characters as well."
  returns:
    description: "the hostnames value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.name()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.name()"
  name: "name()"
  nameWithType: "ApplicationGatewayHttpListener.name()"
  summary: "Get name of the HTTP listener that is unique within an Application Gateway."
  syntax: "public String name()"
  desc: "Get name of the HTTP listener that is unique within an Application Gateway."
  returns:
    description: "the name value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.protocol()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.protocol()"
  name: "protocol()"
  nameWithType: "ApplicationGatewayHttpListener.protocol()"
  summary: "Get protocol of the HTTP listener."
  syntax: "public ApplicationGatewayProtocol protocol()"
  desc: "Get protocol of the HTTP listener. Possible values include: 'Http', 'Https'."
  returns:
    description: "the protocol value"
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayProtocol?alt=com.microsoft.azure.management.network.ApplicationGatewayProtocol&text=ApplicationGatewayProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.provisioningState()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ApplicationGatewayHttpListener.provisioningState()"
  summary: "Get the provisioning state of the HTTP listener resource."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioning state of the HTTP listener resource. Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'."
  returns:
    description: "the provisioningState value"
    type: "<xref href=\"com.microsoft.azure.management.network.ProvisioningState?alt=com.microsoft.azure.management.network.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.requireServerNameIndication()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.requireServerNameIndication()"
  name: "requireServerNameIndication()"
  nameWithType: "ApplicationGatewayHttpListener.requireServerNameIndication()"
  summary: "Get applicable only if protocol is https."
  syntax: "public Boolean requireServerNameIndication()"
  desc: "Get applicable only if protocol is https. Enables SNI for multi-hosting."
  returns:
    description: "the requireServerNameIndication value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.sslCertificate()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.sslCertificate()"
  name: "sslCertificate()"
  nameWithType: "ApplicationGatewayHttpListener.sslCertificate()"
  summary: "Get sSL certificate resource of an application gateway."
  syntax: "public SubResource sslCertificate()"
  desc: "Get sSL certificate resource of an application gateway."
  returns:
    description: "the sslCertificate value"
    type: "<xref href=\"com.microsoft.azure.SubResource?alt=com.microsoft.azure.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.type()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.type()"
  name: "type()"
  nameWithType: "ApplicationGatewayHttpListener.type()"
  summary: "Get type of the resource."
  syntax: "public String type()"
  desc: "Get type of the resource."
  returns:
    description: "the type value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withCustomErrorConfigurations(java.util.List<com.microsoft.azure.management.network.ApplicationGatewayCustomError>)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withCustomErrorConfigurations(List<ApplicationGatewayCustomError> customErrorConfigurations)"
  name: "withCustomErrorConfigurations(List<ApplicationGatewayCustomError> customErrorConfigurations)"
  nameWithType: "ApplicationGatewayHttpListener.withCustomErrorConfigurations(List<ApplicationGatewayCustomError> customErrorConfigurations)"
  summary: "Set custom error configurations of the HTTP listener."
  parameters:
  - description: "the customErrorConfigurations value to set"
    name: "customErrorConfigurations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayCustomError?alt=com.microsoft.azure.management.network.ApplicationGatewayCustomError&text=ApplicationGatewayCustomError\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ApplicationGatewayHttpListener withCustomErrorConfigurations(List<ApplicationGatewayCustomError> customErrorConfigurations)"
  desc: "Set custom error configurations of the HTTP listener."
  returns:
    description: "the ApplicationGatewayHttpListener object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayHttpListener?alt=com.microsoft.azure.management.network.ApplicationGatewayHttpListener&text=ApplicationGatewayHttpListener\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withFirewallPolicy(com.microsoft.azure.SubResource)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withFirewallPolicy(SubResource firewallPolicy)"
  name: "withFirewallPolicy(SubResource firewallPolicy)"
  nameWithType: "ApplicationGatewayHttpListener.withFirewallPolicy(SubResource firewallPolicy)"
  summary: "Set reference to the Firewall<wbr>Policy resource."
  parameters:
  - description: "the firewallPolicy value to set"
    name: "firewallPolicy"
    type: "<xref href=\"com.microsoft.azure.SubResource?alt=com.microsoft.azure.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationGatewayHttpListener withFirewallPolicy(SubResource firewallPolicy)"
  desc: "Set reference to the FirewallPolicy resource."
  returns:
    description: "the ApplicationGatewayHttpListener object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayHttpListener?alt=com.microsoft.azure.management.network.ApplicationGatewayHttpListener&text=ApplicationGatewayHttpListener\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withFrontendIPConfiguration(com.microsoft.azure.SubResource)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withFrontendIPConfiguration(SubResource frontendIPConfiguration)"
  name: "withFrontendIPConfiguration(SubResource frontendIPConfiguration)"
  nameWithType: "ApplicationGatewayHttpListener.withFrontendIPConfiguration(SubResource frontendIPConfiguration)"
  summary: "Set frontend IP configuration resource of an application gateway."
  parameters:
  - description: "the frontendIPConfiguration value to set"
    name: "frontendIPConfiguration"
    type: "<xref href=\"com.microsoft.azure.SubResource?alt=com.microsoft.azure.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationGatewayHttpListener withFrontendIPConfiguration(SubResource frontendIPConfiguration)"
  desc: "Set frontend IP configuration resource of an application gateway."
  returns:
    description: "the ApplicationGatewayHttpListener object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayHttpListener?alt=com.microsoft.azure.management.network.ApplicationGatewayHttpListener&text=ApplicationGatewayHttpListener\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withFrontendPort(com.microsoft.azure.SubResource)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withFrontendPort(SubResource frontendPort)"
  name: "withFrontendPort(SubResource frontendPort)"
  nameWithType: "ApplicationGatewayHttpListener.withFrontendPort(SubResource frontendPort)"
  summary: "Set frontend port resource of an application gateway."
  parameters:
  - description: "the frontendPort value to set"
    name: "frontendPort"
    type: "<xref href=\"com.microsoft.azure.SubResource?alt=com.microsoft.azure.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationGatewayHttpListener withFrontendPort(SubResource frontendPort)"
  desc: "Set frontend port resource of an application gateway."
  returns:
    description: "the ApplicationGatewayHttpListener object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayHttpListener?alt=com.microsoft.azure.management.network.ApplicationGatewayHttpListener&text=ApplicationGatewayHttpListener\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withHostName(java.lang.String)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withHostName(String hostName)"
  name: "withHostName(String hostName)"
  nameWithType: "ApplicationGatewayHttpListener.withHostName(String hostName)"
  summary: "Set host name of HTTP listener."
  parameters:
  - description: "the hostName value to set"
    name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationGatewayHttpListener withHostName(String hostName)"
  desc: "Set host name of HTTP listener."
  returns:
    description: "the ApplicationGatewayHttpListener object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayHttpListener?alt=com.microsoft.azure.management.network.ApplicationGatewayHttpListener&text=ApplicationGatewayHttpListener\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withHostnames(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withHostnames(List<String> hostnames)"
  name: "withHostnames(List<String> hostnames)"
  nameWithType: "ApplicationGatewayHttpListener.withHostnames(List<String> hostnames)"
  summary: "Set list of Host names for HTTP Listener that allows special wildcard characters as well."
  parameters:
  - description: "the hostnames value to set"
    name: "hostnames"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ApplicationGatewayHttpListener withHostnames(List<String> hostnames)"
  desc: "Set list of Host names for HTTP Listener that allows special wildcard characters as well."
  returns:
    description: "the ApplicationGatewayHttpListener object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayHttpListener?alt=com.microsoft.azure.management.network.ApplicationGatewayHttpListener&text=ApplicationGatewayHttpListener\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withName(java.lang.String)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withName(String name)"
  name: "withName(String name)"
  nameWithType: "ApplicationGatewayHttpListener.withName(String name)"
  summary: "Set name of the HTTP listener that is unique within an Application Gateway."
  parameters:
  - description: "the name value to set"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationGatewayHttpListener withName(String name)"
  desc: "Set name of the HTTP listener that is unique within an Application Gateway."
  returns:
    description: "the ApplicationGatewayHttpListener object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayHttpListener?alt=com.microsoft.azure.management.network.ApplicationGatewayHttpListener&text=ApplicationGatewayHttpListener\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withProtocol(com.microsoft.azure.management.network.ApplicationGatewayProtocol)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withProtocol(ApplicationGatewayProtocol protocol)"
  name: "withProtocol(ApplicationGatewayProtocol protocol)"
  nameWithType: "ApplicationGatewayHttpListener.withProtocol(ApplicationGatewayProtocol protocol)"
  summary: "Set protocol of the HTTP listener."
  parameters:
  - description: "the protocol value to set"
    name: "protocol"
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayProtocol?alt=com.microsoft.azure.management.network.ApplicationGatewayProtocol&text=ApplicationGatewayProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationGatewayHttpListener withProtocol(ApplicationGatewayProtocol protocol)"
  desc: "Set protocol of the HTTP listener. Possible values include: 'Http', 'Https'."
  returns:
    description: "the ApplicationGatewayHttpListener object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayHttpListener?alt=com.microsoft.azure.management.network.ApplicationGatewayHttpListener&text=ApplicationGatewayHttpListener\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withRequireServerNameIndication(java.lang.Boolean)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withRequireServerNameIndication(Boolean requireServerNameIndication)"
  name: "withRequireServerNameIndication(Boolean requireServerNameIndication)"
  nameWithType: "ApplicationGatewayHttpListener.withRequireServerNameIndication(Boolean requireServerNameIndication)"
  summary: "Set applicable only if protocol is https."
  parameters:
  - description: "the requireServerNameIndication value to set"
    name: "requireServerNameIndication"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationGatewayHttpListener withRequireServerNameIndication(Boolean requireServerNameIndication)"
  desc: "Set applicable only if protocol is https. Enables SNI for multi-hosting."
  returns:
    description: "the ApplicationGatewayHttpListener object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayHttpListener?alt=com.microsoft.azure.management.network.ApplicationGatewayHttpListener&text=ApplicationGatewayHttpListener\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withSslCertificate(com.microsoft.azure.SubResource)"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayHttpListener.withSslCertificate(SubResource sslCertificate)"
  name: "withSslCertificate(SubResource sslCertificate)"
  nameWithType: "ApplicationGatewayHttpListener.withSslCertificate(SubResource sslCertificate)"
  summary: "Set sSL certificate resource of an application gateway."
  parameters:
  - description: "the sslCertificate value to set"
    name: "sslCertificate"
    type: "<xref href=\"com.microsoft.azure.SubResource?alt=com.microsoft.azure.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationGatewayHttpListener withSslCertificate(SubResource sslCertificate)"
  desc: "Set sSL certificate resource of an application gateway."
  returns:
    description: "the ApplicationGatewayHttpListener object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayHttpListener?alt=com.microsoft.azure.management.network.ApplicationGatewayHttpListener&text=ApplicationGatewayHttpListener\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Http listener of an application gateway."
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
