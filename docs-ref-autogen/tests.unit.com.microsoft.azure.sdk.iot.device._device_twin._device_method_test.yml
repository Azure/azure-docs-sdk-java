items:
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  id: _device_method_test
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  children:
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorSavesConfigSucceeds()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorThrowsIfCallBackNull()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorThrowsIfClientNull()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorThrowsIfConfigNull()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodRequestMessageCallbackExecutes()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackAbandonsOnIncorrectMessage()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackDoesNotHangOnUserCallBackHang()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackSendsResponseMessageEvenIfNonNull()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackSendsResponseOnlyIfNonNull()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackSucceeds(final @Mocked DeviceClient)
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.subscribeToMethodsDoesNotSubscribeIfAlreadySubscribed(@Mocked final DeviceMethodMessage)
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.subscribeToMethodsSucceeds(@Mocked final DeviceMethodMessage)
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.subscribeToMethodsThrowsIfCallBackNull()
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: DeviceMethodTest
  nameWithType: DeviceMethodTest
  fullName: tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 17
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public class DeviceMethodTest
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.mockedClient()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.mockedConfig()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.mockedDeviceMethodCB()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.mockeddeviceMethodResponseCB()
  - tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.mockedStatusCB()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorSavesConfigSucceeds()
  id: constructorSavesConfigSucceeds()
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: constructorSavesConfigSucceeds()
  nameWithType: DeviceMethodTest.constructorSavesConfigSucceeds()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.constructorSavesConfigSucceeds()
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorSavesConfigSucceeds*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 39
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void constructorSavesConfigSucceeds()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorThrowsIfCallBackNull()
  id: constructorThrowsIfCallBackNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: constructorThrowsIfCallBackNull()
  nameWithType: DeviceMethodTest.constructorThrowsIfCallBackNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.constructorThrowsIfCallBackNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorThrowsIfCallBackNull*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 87
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void constructorThrowsIfCallBackNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorThrowsIfClientNull()
  id: constructorThrowsIfClientNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: constructorThrowsIfClientNull()
  nameWithType: DeviceMethodTest.constructorThrowsIfClientNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.constructorThrowsIfClientNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorThrowsIfClientNull*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 72
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void constructorThrowsIfClientNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorThrowsIfConfigNull()
  id: constructorThrowsIfConfigNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: constructorThrowsIfConfigNull()
  nameWithType: DeviceMethodTest.constructorThrowsIfConfigNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.constructorThrowsIfConfigNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorThrowsIfConfigNull*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 80
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void constructorThrowsIfConfigNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodRequestMessageCallbackExecutes()
  id: deviceMethodRequestMessageCallbackExecutes()
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: deviceMethodRequestMessageCallbackExecutes()
  nameWithType: DeviceMethodTest.deviceMethodRequestMessageCallbackExecutes()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.deviceMethodRequestMessageCallbackExecutes()
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodRequestMessageCallbackExecutes*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 376
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void deviceMethodRequestMessageCallbackExecutes()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackAbandonsOnIncorrectMessage()
  id: deviceMethodResponseCallbackAbandonsOnIncorrectMessage()
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: deviceMethodResponseCallbackAbandonsOnIncorrectMessage()
  nameWithType: DeviceMethodTest.deviceMethodResponseCallbackAbandonsOnIncorrectMessage()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.deviceMethodResponseCallbackAbandonsOnIncorrectMessage()
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackAbandonsOnIncorrectMessage*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 222
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void deviceMethodResponseCallbackAbandonsOnIncorrectMessage()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackDoesNotHangOnUserCallBackHang()
  id: deviceMethodResponseCallbackDoesNotHangOnUserCallBackHang()
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: deviceMethodResponseCallbackDoesNotHangOnUserCallBackHang()
  nameWithType: DeviceMethodTest.deviceMethodResponseCallbackDoesNotHangOnUserCallBackHang()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.deviceMethodResponseCallbackDoesNotHangOnUserCallBackHang()
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackDoesNotHangOnUserCallBackHang*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 340
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void deviceMethodResponseCallbackDoesNotHangOnUserCallBackHang()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackSendsResponseMessageEvenIfNonNull()
  id: deviceMethodResponseCallbackSendsResponseMessageEvenIfNonNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: deviceMethodResponseCallbackSendsResponseMessageEvenIfNonNull()
  nameWithType: DeviceMethodTest.deviceMethodResponseCallbackSendsResponseMessageEvenIfNonNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.deviceMethodResponseCallbackSendsResponseMessageEvenIfNonNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackSendsResponseMessageEvenIfNonNull*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 302
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void deviceMethodResponseCallbackSendsResponseMessageEvenIfNonNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackSendsResponseOnlyIfNonNull()
  id: deviceMethodResponseCallbackSendsResponseOnlyIfNonNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: deviceMethodResponseCallbackSendsResponseOnlyIfNonNull()
  nameWithType: DeviceMethodTest.deviceMethodResponseCallbackSendsResponseOnlyIfNonNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.deviceMethodResponseCallbackSendsResponseOnlyIfNonNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackSendsResponseOnlyIfNonNull*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 261
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void deviceMethodResponseCallbackSendsResponseOnlyIfNonNull()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackSucceeds(final @Mocked DeviceClient)
  id: deviceMethodResponseCallbackSucceeds(final @Mocked DeviceClient)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: deviceMethodResponseCallbackSucceeds(final @Mocked DeviceClient mockedClient)
  nameWithType: DeviceMethodTest.deviceMethodResponseCallbackSucceeds(final @Mocked DeviceClient mockedClient)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.deviceMethodResponseCallbackSucceeds(final @Mocked DeviceClient mockedClient)
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackSucceeds*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 181
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void deviceMethodResponseCallbackSucceeds(final @Mocked DeviceClient mockedClient)
    parameters:
    - id: mockedClient
      type: 05d52839com.microsoft.azure.sdk.iot.device._device_client
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.subscribeToMethodsDoesNotSubscribeIfAlreadySubscribed(@Mocked final DeviceMethodMessage)
  id: subscribeToMethodsDoesNotSubscribeIfAlreadySubscribed(@Mocked final DeviceMethodMessage)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: subscribeToMethodsDoesNotSubscribeIfAlreadySubscribed(@Mocked final DeviceMethodMessage mockedMessage)
  nameWithType: DeviceMethodTest.subscribeToMethodsDoesNotSubscribeIfAlreadySubscribed(@Mocked final DeviceMethodMessage mockedMessage)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.subscribeToMethodsDoesNotSubscribeIfAlreadySubscribed(@Mocked final DeviceMethodMessage mockedMessage)
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.subscribeToMethodsDoesNotSubscribeIfAlreadySubscribed*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 142
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void subscribeToMethodsDoesNotSubscribeIfAlreadySubscribed(@Mocked final DeviceMethodMessage mockedMessage)
    parameters:
    - id: mockedMessage
      type: 5514d1f5com.microsoft.azure.sdk.iot.device._device_twin._device_method_message
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.subscribeToMethodsSucceeds(@Mocked final DeviceMethodMessage)
  id: subscribeToMethodsSucceeds(@Mocked final DeviceMethodMessage)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: subscribeToMethodsSucceeds(@Mocked final DeviceMethodMessage mockedMessage)
  nameWithType: DeviceMethodTest.subscribeToMethodsSucceeds(@Mocked final DeviceMethodMessage mockedMessage)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.subscribeToMethodsSucceeds(@Mocked final DeviceMethodMessage mockedMessage)
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.subscribeToMethodsSucceeds*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 99
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void subscribeToMethodsSucceeds(@Mocked final DeviceMethodMessage mockedMessage)
    parameters:
    - id: mockedMessage
      type: 5514d1f5com.microsoft.azure.sdk.iot.device._device_twin._device_method_message
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.subscribeToMethodsThrowsIfCallBackNull()
  id: subscribeToMethodsThrowsIfCallBackNull()
  parent: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.yml
  langs:
  - java
  name: subscribeToMethodsThrowsIfCallBackNull()
  nameWithType: DeviceMethodTest.subscribeToMethodsThrowsIfCallBackNull()
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.subscribeToMethodsThrowsIfCallBackNull()
  overload: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.subscribeToMethodsThrowsIfCallBackNull*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceMethodTest.java
    startLine: 131
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
  syntax:
    content: public void subscribeToMethodsThrowsIfCallBackNull()
references:
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorSavesConfigSucceeds*
  name: constructorSavesConfigSucceeds
  nameWithType: DeviceMethodTest.constructorSavesConfigSucceeds
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.constructorSavesConfigSucceeds
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorThrowsIfClientNull*
  name: constructorThrowsIfClientNull
  nameWithType: DeviceMethodTest.constructorThrowsIfClientNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.constructorThrowsIfClientNull
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorThrowsIfConfigNull*
  name: constructorThrowsIfConfigNull
  nameWithType: DeviceMethodTest.constructorThrowsIfConfigNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.constructorThrowsIfConfigNull
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.constructorThrowsIfCallBackNull*
  name: constructorThrowsIfCallBackNull
  nameWithType: DeviceMethodTest.constructorThrowsIfCallBackNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.constructorThrowsIfCallBackNull
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: 5514d1f5com.microsoft.azure.sdk.iot.device._device_twin._device_method_message
  spec.java:
  - name: '@Mocked final '
    fullName: '@Mocked final '
  - uid: com.microsoft.azure.sdk.iot.device._device_twin._device_method_message
    name: DeviceMethodMessage
    fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodMessage
    href: com.microsoft.azure.sdk.iot.device._device_twin._device_method_message.yml
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.subscribeToMethodsSucceeds*
  name: subscribeToMethodsSucceeds
  nameWithType: DeviceMethodTest.subscribeToMethodsSucceeds
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.subscribeToMethodsSucceeds
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.subscribeToMethodsThrowsIfCallBackNull*
  name: subscribeToMethodsThrowsIfCallBackNull
  nameWithType: DeviceMethodTest.subscribeToMethodsThrowsIfCallBackNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.subscribeToMethodsThrowsIfCallBackNull
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.subscribeToMethodsDoesNotSubscribeIfAlreadySubscribed*
  name: subscribeToMethodsDoesNotSubscribeIfAlreadySubscribed
  nameWithType: DeviceMethodTest.subscribeToMethodsDoesNotSubscribeIfAlreadySubscribed
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.subscribeToMethodsDoesNotSubscribeIfAlreadySubscribed
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: 05d52839com.microsoft.azure.sdk.iot.device._device_client
  spec.java:
  - name: 'final @Mocked '
    fullName: 'final @Mocked '
  - uid: com.microsoft.azure.sdk.iot.device._device_client
    name: DeviceClient
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
    href: com.microsoft.azure.sdk.iot.device._device_client.yml
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackSucceeds*
  name: deviceMethodResponseCallbackSucceeds
  nameWithType: DeviceMethodTest.deviceMethodResponseCallbackSucceeds
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.deviceMethodResponseCallbackSucceeds
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackAbandonsOnIncorrectMessage*
  name: deviceMethodResponseCallbackAbandonsOnIncorrectMessage
  nameWithType: DeviceMethodTest.deviceMethodResponseCallbackAbandonsOnIncorrectMessage
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.deviceMethodResponseCallbackAbandonsOnIncorrectMessage
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackSendsResponseOnlyIfNonNull*
  name: deviceMethodResponseCallbackSendsResponseOnlyIfNonNull
  nameWithType: DeviceMethodTest.deviceMethodResponseCallbackSendsResponseOnlyIfNonNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.deviceMethodResponseCallbackSendsResponseOnlyIfNonNull
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackSendsResponseMessageEvenIfNonNull*
  name: deviceMethodResponseCallbackSendsResponseMessageEvenIfNonNull
  nameWithType: DeviceMethodTest.deviceMethodResponseCallbackSendsResponseMessageEvenIfNonNull
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.deviceMethodResponseCallbackSendsResponseMessageEvenIfNonNull
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodResponseCallbackDoesNotHangOnUserCallBackHang*
  name: deviceMethodResponseCallbackDoesNotHangOnUserCallBackHang
  nameWithType: DeviceMethodTest.deviceMethodResponseCallbackDoesNotHangOnUserCallBackHang
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.deviceMethodResponseCallbackDoesNotHangOnUserCallBackHang
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.deviceMethodRequestMessageCallbackExecutes*
  name: deviceMethodRequestMessageCallbackExecutes
  nameWithType: DeviceMethodTest.deviceMethodRequestMessageCallbackExecutes
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodTest.deviceMethodRequestMessageCallbackExecutes
  package: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.mockedClient()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.mockedConfig()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.mockedDeviceMethodCB()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.mockeddeviceMethodResponseCB()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device._device_twin._device_method_test.mockedStatusCB()
- uid: com.microsoft.azure.sdk.iot.device._device_client
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  name: DeviceClient
  nameWithType: DeviceClient
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
  type: Class
  summary: >-
    <p>The public-facing API. Allows a single logical or physical device to connect to an IoT Hub. The IoT Hub client supports sending events to and receiving messages from an IoT Hub. </p>

    <p>To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages. </p>

    <p>The client buffers messages while the network is down, and re-sends them when the network comes back online. It also batches messages to improve communication efficiency (HTTPS only). </p>

    <p>The client supports HTTPS 1.1 and AMQPS 1.0 transports. </p>
  syntax:
    content: public class DeviceClient
- uid: com.microsoft.azure.sdk.iot.device._device_client_config
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
  name: DeviceClientConfig
  nameWithType: DeviceClientConfig
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
  type: Class
  summary: <p>Configuration settings for an IoT Hub client. Validates all user-defined settings. </p>
  syntax:
    content: public class DeviceClientConfig
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
  name: IotHubEventCallback
  nameWithType: IotHubEventCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
  type: Interface
  summary: >-
    <p>An interface for an IoT Hub event callback.</p>

    <p>Developers are expected to create an implementation of this interface, and the transport will call <xref href="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false"></xref> upon receiving a response from an IoT Hub. </p>
  syntax:
    content: public interface IotHubEventCallback
- uid: com.microsoft.azure.sdk.iot.device._message_callback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message_callback.yml
  name: MessageCallback
  nameWithType: MessageCallback
  fullName: com.microsoft.azure.sdk.iot.device.MessageCallback
  type: Interface
  summary: >-
    <p>An interface for an IoT Hub message callback. </p>

    <p>The developer is expected to create an implementation of this interface, and the transport will call <xref href="com.microsoft.azure.sdk.iot.device._message_callback.execute(Message,Object)" data-throw-if-not-resolved="false"></xref> upon receiving a message from an IoT Hub. </p>
  syntax:
    content: public interface MessageCallback
- uid: com.microsoft.azure.sdk.iot.device._device_twin._device_method_callback
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._device_method_callback.yml
  name: DeviceMethodCallback
  nameWithType: DeviceMethodCallback
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodCallback
  type: Interface
  syntax:
    content: public interface DeviceMethodCallback
- uid: com.microsoft.azure.sdk.iot.device._device_twin._device_method_message
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._device_method_message.yml
  name: DeviceMethodMessage
  nameWithType: DeviceMethodMessage
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodMessage
  type: Class
  syntax:
    content: public class DeviceMethodMessage extends DeviceTwinMessage
