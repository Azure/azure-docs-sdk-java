### YamlMime:JavaType
uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties"
fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties"
name: "VaultPatchProperties"
nameWithType: "VaultPatchProperties"
summary: "Properties of the vault."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VaultPatchProperties"
constructors:
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.VaultPatchProperties()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.VaultPatchProperties()"
  name: "VaultPatchProperties()"
  nameWithType: "VaultPatchProperties.VaultPatchProperties()"
  syntax: "public VaultPatchProperties()"
methods:
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.accessPolicies()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.accessPolicies()"
  name: "accessPolicies()"
  nameWithType: "VaultPatchProperties.accessPolicies()"
  summary: "Get the accessPolicies property: An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID."
  syntax: "public List<AccessPolicyEntry> accessPolicies()"
  returns:
    description: "the accessPolicies value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.keyvault.models.AccessPolicyEntry?alt=com.azure.resourcemanager.keyvault.models.AccessPolicyEntry&text=AccessPolicyEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.createMode()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.createMode()"
  name: "createMode()"
  nameWithType: "VaultPatchProperties.createMode()"
  summary: "Get the createMode property: The vault's create mode to indicate whether the vault need to be recovered or not."
  syntax: "public CreateMode createMode()"
  returns:
    description: "the createMode value."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.CreateMode?alt=com.azure.resourcemanager.keyvault.models.CreateMode&text=CreateMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enablePurgeProtection()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enablePurgeProtection()"
  name: "enablePurgeProtection()"
  nameWithType: "VaultPatchProperties.enablePurgeProtection()"
  summary: "Get the enablePurgeProtection property: Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value."
  syntax: "public Boolean enablePurgeProtection()"
  returns:
    description: "the enablePurgeProtection value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enableRbacAuthorization()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enableRbacAuthorization()"
  name: "enableRbacAuthorization()"
  nameWithType: "VaultPatchProperties.enableRbacAuthorization()"
  summary: "Get the enableRbacAuthorization property: Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the value of this property will not change."
  syntax: "public Boolean enableRbacAuthorization()"
  returns:
    description: "the enableRbacAuthorization value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enableSoftDelete()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enableSoftDelete()"
  name: "enableSoftDelete()"
  nameWithType: "VaultPatchProperties.enableSoftDelete()"
  summary: "Get the enableSoftDelete property: Property to specify whether the 'soft delete' functionality is enabled for this key vault. Once set to true, it cannot be reverted to false."
  syntax: "public Boolean enableSoftDelete()"
  returns:
    description: "the enableSoftDelete value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enabledForDeployment()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enabledForDeployment()"
  name: "enabledForDeployment()"
  nameWithType: "VaultPatchProperties.enabledForDeployment()"
  summary: "Get the enabledForDeployment property: Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
  syntax: "public Boolean enabledForDeployment()"
  returns:
    description: "the enabledForDeployment value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enabledForDiskEncryption()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enabledForDiskEncryption()"
  name: "enabledForDiskEncryption()"
  nameWithType: "VaultPatchProperties.enabledForDiskEncryption()"
  summary: "Get the enabledForDiskEncryption property: Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
  syntax: "public Boolean enabledForDiskEncryption()"
  returns:
    description: "the enabledForDiskEncryption value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enabledForTemplateDeployment()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.enabledForTemplateDeployment()"
  name: "enabledForTemplateDeployment()"
  nameWithType: "VaultPatchProperties.enabledForTemplateDeployment()"
  summary: "Get the enabledForTemplateDeployment property: Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
  syntax: "public Boolean enabledForTemplateDeployment()"
  returns:
    description: "the enabledForTemplateDeployment value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.networkAcls()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.networkAcls()"
  name: "networkAcls()"
  nameWithType: "VaultPatchProperties.networkAcls()"
  summary: "Get the networkAcls property: A collection of rules governing the accessibility of the vault from specific network locations."
  syntax: "public NetworkRuleSet networkAcls()"
  returns:
    description: "the networkAcls value."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.NetworkRuleSet?alt=com.azure.resourcemanager.keyvault.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.sku()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.sku()"
  name: "sku()"
  nameWithType: "VaultPatchProperties.sku()"
  summary: "Get the sku property: SKU details."
  syntax: "public Sku sku()"
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.Sku?alt=com.azure.resourcemanager.keyvault.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.softDeleteRetentionInDays()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.softDeleteRetentionInDays()"
  name: "softDeleteRetentionInDays()"
  nameWithType: "VaultPatchProperties.softDeleteRetentionInDays()"
  summary: "Get the softDeleteRetentionInDays property: softDelete data retention days. It accepts >=7 and <=90."
  syntax: "public Integer softDeleteRetentionInDays()"
  returns:
    description: "the softDeleteRetentionInDays value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.tenantId()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.tenantId()"
  name: "tenantId()"
  nameWithType: "VaultPatchProperties.tenantId()"
  summary: "Get the tenantId property: The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
  syntax: "public UUID tenantId()"
  returns:
    description: "the tenantId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.validate()"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.validate()"
  name: "validate()"
  nameWithType: "VaultPatchProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withAccessPolicies(java.util.List<com.azure.resourcemanager.keyvault.models.AccessPolicyEntry>)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withAccessPolicies(List<AccessPolicyEntry> accessPolicies)"
  name: "withAccessPolicies(List<AccessPolicyEntry> accessPolicies)"
  nameWithType: "VaultPatchProperties.withAccessPolicies(List<AccessPolicyEntry> accessPolicies)"
  summary: "Set the accessPolicies property: An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID."
  parameters:
  - description: "the accessPolicies value to set."
    name: "accessPolicies"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.keyvault.models.AccessPolicyEntry?alt=com.azure.resourcemanager.keyvault.models.AccessPolicyEntry&text=AccessPolicyEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VaultPatchProperties withAccessPolicies(List<AccessPolicyEntry> accessPolicies)"
  returns:
    description: "the VaultPatchProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultPatchProperties?alt=com.azure.resourcemanager.keyvault.models.VaultPatchProperties&text=VaultPatchProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withCreateMode(com.azure.resourcemanager.keyvault.models.CreateMode)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withCreateMode(CreateMode createMode)"
  name: "withCreateMode(CreateMode createMode)"
  nameWithType: "VaultPatchProperties.withCreateMode(CreateMode createMode)"
  summary: "Set the createMode property: The vault's create mode to indicate whether the vault need to be recovered or not."
  parameters:
  - description: "the createMode value to set."
    name: "createMode"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.CreateMode?alt=com.azure.resourcemanager.keyvault.models.CreateMode&text=CreateMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultPatchProperties withCreateMode(CreateMode createMode)"
  returns:
    description: "the VaultPatchProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultPatchProperties?alt=com.azure.resourcemanager.keyvault.models.VaultPatchProperties&text=VaultPatchProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withEnablePurgeProtection(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withEnablePurgeProtection(Boolean enablePurgeProtection)"
  name: "withEnablePurgeProtection(Boolean enablePurgeProtection)"
  nameWithType: "VaultPatchProperties.withEnablePurgeProtection(Boolean enablePurgeProtection)"
  summary: "Set the enablePurgeProtection property: Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value."
  parameters:
  - description: "the enablePurgeProtection value to set."
    name: "enablePurgeProtection"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultPatchProperties withEnablePurgeProtection(Boolean enablePurgeProtection)"
  returns:
    description: "the VaultPatchProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultPatchProperties?alt=com.azure.resourcemanager.keyvault.models.VaultPatchProperties&text=VaultPatchProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withEnableRbacAuthorization(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withEnableRbacAuthorization(Boolean enableRbacAuthorization)"
  name: "withEnableRbacAuthorization(Boolean enableRbacAuthorization)"
  nameWithType: "VaultPatchProperties.withEnableRbacAuthorization(Boolean enableRbacAuthorization)"
  summary: "Set the enableRbacAuthorization property: Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the value of this property will not change."
  parameters:
  - description: "the enableRbacAuthorization value to set."
    name: "enableRbacAuthorization"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultPatchProperties withEnableRbacAuthorization(Boolean enableRbacAuthorization)"
  returns:
    description: "the VaultPatchProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultPatchProperties?alt=com.azure.resourcemanager.keyvault.models.VaultPatchProperties&text=VaultPatchProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withEnableSoftDelete(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withEnableSoftDelete(Boolean enableSoftDelete)"
  name: "withEnableSoftDelete(Boolean enableSoftDelete)"
  nameWithType: "VaultPatchProperties.withEnableSoftDelete(Boolean enableSoftDelete)"
  summary: "Set the enableSoftDelete property: Property to specify whether the 'soft delete' functionality is enabled for this key vault. Once set to true, it cannot be reverted to false."
  parameters:
  - description: "the enableSoftDelete value to set."
    name: "enableSoftDelete"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultPatchProperties withEnableSoftDelete(Boolean enableSoftDelete)"
  returns:
    description: "the VaultPatchProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultPatchProperties?alt=com.azure.resourcemanager.keyvault.models.VaultPatchProperties&text=VaultPatchProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withEnabledForDeployment(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withEnabledForDeployment(Boolean enabledForDeployment)"
  name: "withEnabledForDeployment(Boolean enabledForDeployment)"
  nameWithType: "VaultPatchProperties.withEnabledForDeployment(Boolean enabledForDeployment)"
  summary: "Set the enabledForDeployment property: Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
  parameters:
  - description: "the enabledForDeployment value to set."
    name: "enabledForDeployment"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultPatchProperties withEnabledForDeployment(Boolean enabledForDeployment)"
  returns:
    description: "the VaultPatchProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultPatchProperties?alt=com.azure.resourcemanager.keyvault.models.VaultPatchProperties&text=VaultPatchProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withEnabledForDiskEncryption(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withEnabledForDiskEncryption(Boolean enabledForDiskEncryption)"
  name: "withEnabledForDiskEncryption(Boolean enabledForDiskEncryption)"
  nameWithType: "VaultPatchProperties.withEnabledForDiskEncryption(Boolean enabledForDiskEncryption)"
  summary: "Set the enabledForDiskEncryption property: Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
  parameters:
  - description: "the enabledForDiskEncryption value to set."
    name: "enabledForDiskEncryption"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultPatchProperties withEnabledForDiskEncryption(Boolean enabledForDiskEncryption)"
  returns:
    description: "the VaultPatchProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultPatchProperties?alt=com.azure.resourcemanager.keyvault.models.VaultPatchProperties&text=VaultPatchProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withEnabledForTemplateDeployment(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withEnabledForTemplateDeployment(Boolean enabledForTemplateDeployment)"
  name: "withEnabledForTemplateDeployment(Boolean enabledForTemplateDeployment)"
  nameWithType: "VaultPatchProperties.withEnabledForTemplateDeployment(Boolean enabledForTemplateDeployment)"
  summary: "Set the enabledForTemplateDeployment property: Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
  parameters:
  - description: "the enabledForTemplateDeployment value to set."
    name: "enabledForTemplateDeployment"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultPatchProperties withEnabledForTemplateDeployment(Boolean enabledForTemplateDeployment)"
  returns:
    description: "the VaultPatchProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultPatchProperties?alt=com.azure.resourcemanager.keyvault.models.VaultPatchProperties&text=VaultPatchProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withNetworkAcls(com.azure.resourcemanager.keyvault.models.NetworkRuleSet)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withNetworkAcls(NetworkRuleSet networkAcls)"
  name: "withNetworkAcls(NetworkRuleSet networkAcls)"
  nameWithType: "VaultPatchProperties.withNetworkAcls(NetworkRuleSet networkAcls)"
  summary: "Set the networkAcls property: A collection of rules governing the accessibility of the vault from specific network locations."
  parameters:
  - description: "the networkAcls value to set."
    name: "networkAcls"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.NetworkRuleSet?alt=com.azure.resourcemanager.keyvault.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultPatchProperties withNetworkAcls(NetworkRuleSet networkAcls)"
  returns:
    description: "the VaultPatchProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultPatchProperties?alt=com.azure.resourcemanager.keyvault.models.VaultPatchProperties&text=VaultPatchProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withSku(com.azure.resourcemanager.keyvault.models.Sku)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withSku(Sku sku)"
  name: "withSku(Sku sku)"
  nameWithType: "VaultPatchProperties.withSku(Sku sku)"
  summary: "Set the sku property: SKU details."
  parameters:
  - description: "the sku value to set."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.Sku?alt=com.azure.resourcemanager.keyvault.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultPatchProperties withSku(Sku sku)"
  returns:
    description: "the VaultPatchProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultPatchProperties?alt=com.azure.resourcemanager.keyvault.models.VaultPatchProperties&text=VaultPatchProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withSoftDeleteRetentionInDays(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withSoftDeleteRetentionInDays(Integer softDeleteRetentionInDays)"
  name: "withSoftDeleteRetentionInDays(Integer softDeleteRetentionInDays)"
  nameWithType: "VaultPatchProperties.withSoftDeleteRetentionInDays(Integer softDeleteRetentionInDays)"
  summary: "Set the softDeleteRetentionInDays property: softDelete data retention days. It accepts >=7 and <=90."
  parameters:
  - description: "the softDeleteRetentionInDays value to set."
    name: "softDeleteRetentionInDays"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultPatchProperties withSoftDeleteRetentionInDays(Integer softDeleteRetentionInDays)"
  returns:
    description: "the VaultPatchProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultPatchProperties?alt=com.azure.resourcemanager.keyvault.models.VaultPatchProperties&text=VaultPatchProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withTenantId(java.util.UUID)"
  fullName: "com.azure.resourcemanager.keyvault.models.VaultPatchProperties.withTenantId(UUID tenantId)"
  name: "withTenantId(UUID tenantId)"
  nameWithType: "VaultPatchProperties.withTenantId(UUID tenantId)"
  summary: "Set the tenantId property: The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
  parameters:
  - description: "the tenantId value to set."
    name: "tenantId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VaultPatchProperties withTenantId(UUID tenantId)"
  returns:
    description: "the VaultPatchProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.VaultPatchProperties?alt=com.azure.resourcemanager.keyvault.models.VaultPatchProperties&text=VaultPatchProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.keyvault.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.14.0
