### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.certificates.LifetimeActionRequest"
  id: "LifetimeActionRequest"
  parent: "com.azure.security.keyvault.certificates"
  children:
  - "com.azure.security.keyvault.certificates.LifetimeActionRequest.LifetimeActionRequest(com.azure.security.keyvault.certificates.models.LifetimeAction)"
  - "com.azure.security.keyvault.certificates.LifetimeActionRequest.action()"
  - "com.azure.security.keyvault.certificates.LifetimeActionRequest.action(com.azure.security.keyvault.certificates.Action)"
  - "com.azure.security.keyvault.certificates.LifetimeActionRequest.trigger()"
  - "com.azure.security.keyvault.certificates.LifetimeActionRequest.withTrigger(com.azure.security.keyvault.certificates.Trigger)"
  langs:
  - "java"
  name: "LifetimeActionRequest"
  nameWithType: "LifetimeActionRequest"
  fullName: "com.azure.security.keyvault.certificates.LifetimeActionRequest"
  type: "Class"
  package: "com.azure.security.keyvault.certificates"
  summary: "Action and its trigger that will be performed by Key Vault over the lifetime of a certificate."
  syntax:
    content: " class LifetimeActionRequest"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.certificates.LifetimeActionRequest.LifetimeActionRequest(com.azure.security.keyvault.certificates.models.LifetimeAction)"
  id: "LifetimeActionRequest(com.azure.security.keyvault.certificates.models.LifetimeAction)"
  parent: "com.azure.security.keyvault.certificates.LifetimeActionRequest"
  langs:
  - "java"
  name: "LifetimeActionRequest(LifetimeAction lifeTimeAction)"
  nameWithType: "LifetimeActionRequest.LifetimeActionRequest(LifetimeAction lifeTimeAction)"
  fullName: "com.azure.security.keyvault.certificates.LifetimeActionRequest.LifetimeActionRequest(LifetimeAction lifeTimeAction)"
  overload: "com.azure.security.keyvault.certificates.LifetimeActionRequest.LifetimeActionRequest*"
  type: "Constructor"
  package: "com.azure.security.keyvault.certificates"
  syntax:
    content: " LifetimeActionRequest(LifetimeAction lifeTimeAction)"
    parameters:
    - id: "lifeTimeAction"
      type: "com.azure.security.keyvault.certificates.models.LifetimeAction"
- uid: "com.azure.security.keyvault.certificates.LifetimeActionRequest.action()"
  id: "action()"
  parent: "com.azure.security.keyvault.certificates.LifetimeActionRequest"
  langs:
  - "java"
  name: "action()"
  nameWithType: "LifetimeActionRequest.action()"
  fullName: "com.azure.security.keyvault.certificates.LifetimeActionRequest.action()"
  overload: "com.azure.security.keyvault.certificates.LifetimeActionRequest.action*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  summary: "Get the action value."
  syntax:
    content: " Action action()"
    return:
      type: "com.azure.security.keyvault.certificates.Action"
      description: "the action value"
- uid: "com.azure.security.keyvault.certificates.LifetimeActionRequest.action(com.azure.security.keyvault.certificates.Action)"
  id: "action(com.azure.security.keyvault.certificates.Action)"
  parent: "com.azure.security.keyvault.certificates.LifetimeActionRequest"
  langs:
  - "java"
  name: "action(Action action)"
  nameWithType: "LifetimeActionRequest.action(Action action)"
  fullName: "com.azure.security.keyvault.certificates.LifetimeActionRequest.action(Action action)"
  overload: "com.azure.security.keyvault.certificates.LifetimeActionRequest.action*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  summary: "Set the action value."
  syntax:
    content: " LifetimeActionRequest action(Action action)"
    parameters:
    - id: "action"
      type: "com.azure.security.keyvault.certificates.Action"
      description: "the action value to set"
    return:
      type: "com.azure.security.keyvault.certificates.LifetimeActionRequest"
      description: "the LifetimeActionRequest object itself."
- uid: "com.azure.security.keyvault.certificates.LifetimeActionRequest.trigger()"
  id: "trigger()"
  parent: "com.azure.security.keyvault.certificates.LifetimeActionRequest"
  langs:
  - "java"
  name: "trigger()"
  nameWithType: "LifetimeActionRequest.trigger()"
  fullName: "com.azure.security.keyvault.certificates.LifetimeActionRequest.trigger()"
  overload: "com.azure.security.keyvault.certificates.LifetimeActionRequest.trigger*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  summary: "Get the trigger value."
  syntax:
    content: " Trigger trigger()"
    return:
      type: "com.azure.security.keyvault.certificates.Trigger"
      description: "the trigger value"
- uid: "com.azure.security.keyvault.certificates.LifetimeActionRequest.withTrigger(com.azure.security.keyvault.certificates.Trigger)"
  id: "withTrigger(com.azure.security.keyvault.certificates.Trigger)"
  parent: "com.azure.security.keyvault.certificates.LifetimeActionRequest"
  langs:
  - "java"
  name: "withTrigger(Trigger trigger)"
  nameWithType: "LifetimeActionRequest.withTrigger(Trigger trigger)"
  fullName: "com.azure.security.keyvault.certificates.LifetimeActionRequest.withTrigger(Trigger trigger)"
  overload: "com.azure.security.keyvault.certificates.LifetimeActionRequest.withTrigger*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates"
  summary: "Set the trigger value."
  syntax:
    content: " LifetimeActionRequest withTrigger(Trigger trigger)"
    parameters:
    - id: "trigger"
      type: "com.azure.security.keyvault.certificates.Trigger"
      description: "the trigger value to set"
    return:
      type: "com.azure.security.keyvault.certificates.LifetimeActionRequest"
      description: "the LifetimeActionRequest object itself."
references:
- uid: "com.azure.security.keyvault.certificates.models.LifetimeAction"
  name: "LifetimeAction"
  nameWithType: "LifetimeAction"
  fullName: "com.azure.security.keyvault.certificates.models.LifetimeAction"
- uid: "com.azure.security.keyvault.certificates.LifetimeActionRequest.LifetimeActionRequest*"
  name: "LifetimeActionRequest"
  nameWithType: "LifetimeActionRequest.LifetimeActionRequest"
  fullName: "com.azure.security.keyvault.certificates.LifetimeActionRequest.LifetimeActionRequest"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.Trigger"
  name: "Trigger"
  nameWithType: "Trigger"
  fullName: "com.azure.security.keyvault.certificates.Trigger"
- uid: "com.azure.security.keyvault.certificates.LifetimeActionRequest.trigger*"
  name: "trigger"
  nameWithType: "LifetimeActionRequest.trigger"
  fullName: "com.azure.security.keyvault.certificates.LifetimeActionRequest.trigger"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.LifetimeActionRequest.withTrigger*"
  name: "withTrigger"
  nameWithType: "LifetimeActionRequest.withTrigger"
  fullName: "com.azure.security.keyvault.certificates.LifetimeActionRequest.withTrigger"
  package: "com.azure.security.keyvault.certificates"
- uid: "com.azure.security.keyvault.certificates.Action"
  name: "Action"
  nameWithType: "Action"
  fullName: "com.azure.security.keyvault.certificates.Action"
- uid: "com.azure.security.keyvault.certificates.LifetimeActionRequest.action*"
  name: "action"
  nameWithType: "LifetimeActionRequest.action"
  fullName: "com.azure.security.keyvault.certificates.LifetimeActionRequest.action"
  package: "com.azure.security.keyvault.certificates"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
