### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.IpAccessControl"
fullName: "com.azure.resourcemanager.mediaservices.models.IpAccessControl"
name: "IpAccessControl"
nameWithType: "IpAccessControl"
summary: "The IP access control."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class IpAccessControl"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.IpAccessControl.IpAccessControl()"
  fullName: "com.azure.resourcemanager.mediaservices.models.IpAccessControl.IpAccessControl()"
  name: "IpAccessControl()"
  nameWithType: "IpAccessControl.IpAccessControl()"
  syntax: "public IpAccessControl()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.IpAccessControl.allow()"
  fullName: "com.azure.resourcemanager.mediaservices.models.IpAccessControl.allow()"
  name: "allow()"
  nameWithType: "IpAccessControl.allow()"
  summary: "Get the allow property: The IP allow list."
  syntax: "public List<IpRange> allow()"
  desc: "Get the allow property: The IP allow list."
  returns:
    description: "the allow value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.IpRange?alt=com.azure.resourcemanager.mediaservices.models.IpRange&text=IpRange\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.IpAccessControl.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.IpAccessControl.validate()"
  name: "validate()"
  nameWithType: "IpAccessControl.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.IpAccessControl.withAllow(java.util.List<com.azure.resourcemanager.mediaservices.models.IpRange>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.IpAccessControl.withAllow(List<IpRange> allow)"
  name: "withAllow(List<IpRange> allow)"
  nameWithType: "IpAccessControl.withAllow(List<IpRange> allow)"
  summary: "Set the allow property: The IP allow list."
  parameters:
  - description: "the allow value to set."
    name: "allow"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.IpRange?alt=com.azure.resourcemanager.mediaservices.models.IpRange&text=IpRange\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public IpAccessControl withAllow(List<IpRange> allow)"
  desc: "Set the allow property: The IP allow list."
  returns:
    description: "the IpAccessControl object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.IpAccessControl?alt=com.azure.resourcemanager.mediaservices.models.IpAccessControl&text=IpAccessControl\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The IP access control."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0
