### YamlMime:ManagedReference
items:
- uid: com.azure.core.test.http.MockHttpResponse
  id: MockHttpResponse
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http
  children:
  - com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int)
  - com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,byte[])
  - com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders)
  - com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders,byte[])
  - com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders,java.lang.Object)
  - com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,java.lang.Object)
  - com.azure.core.test.http.MockHttpResponse.addHeader(java.lang.String,java.lang.String)
  - com.azure.core.test.http.MockHttpResponse.getBody()
  - com.azure.core.test.http.MockHttpResponse.getBodyAsByteArray()
  - com.azure.core.test.http.MockHttpResponse.getBodyAsString()
  - com.azure.core.test.http.MockHttpResponse.getBodyAsString(java.nio.charset.Charset)
  - com.azure.core.test.http.MockHttpResponse.getHeaderValue(java.lang.String)
  - com.azure.core.test.http.MockHttpResponse.getHeaders()
  - com.azure.core.test.http.MockHttpResponse.getStatusCode()
  langs:
  - java
  name: MockHttpResponse
  nameWithType: MockHttpResponse
  fullName: com.azure.core.test.http.MockHttpResponse
  type: Class
  package: com.azure.core.test.http
  summary: An HTTP response that is created to simulate a HTTP request.
  syntax:
    content: public class MockHttpResponse extends HttpResponse
  inheritance:
  - java.lang.Object
  - com.azure.core.http.HttpResponse
  inheritedMembers:
  - com.azure.core.http.HttpResponse.buffer()
  - com.azure.core.http.HttpResponse.close()
  - com.azure.core.http.HttpResponse.getBody()
  - com.azure.core.http.HttpResponse.getBodyAsByteArray()
  - com.azure.core.http.HttpResponse.getBodyAsString()
  - com.azure.core.http.HttpResponse.getBodyAsString(java.nio.charset.Charset)
  - com.azure.core.http.HttpResponse.getHeaderValue(java.lang.String)
  - com.azure.core.http.HttpResponse.getHeaders()
  - com.azure.core.http.HttpResponse.getRequest()
  - com.azure.core.http.HttpResponse.getStatusCode()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int)
  id: MockHttpResponse(com.azure.core.http.HttpRequest,int)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: MockHttpResponse(HttpRequest request, int statusCode)
  nameWithType: MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode)
  fullName: com.azure.core.test.http.MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode)
  overload: com.azure.core.test.http.MockHttpResponse.MockHttpResponse*
  type: Constructor
  package: com.azure.core.test.http
  summary: Creates a HTTP response associated with a `request`, returns the `statusCode`, and has an empty response body.
  syntax:
    content: public MockHttpResponse(HttpRequest request, int statusCode)
    parameters:
    - id: request
      type: com.azure.core.http.HttpRequest
      description: HttpRequest associated with the response.
    - id: statusCode
      type: int
      description: Status code of the response.
- uid: com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,byte[])
  id: MockHttpResponse(com.azure.core.http.HttpRequest,int,byte[])
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: MockHttpResponse(HttpRequest request, int statusCode, byte[] bodyBytes)
  nameWithType: MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, byte[] bodyBytes)
  fullName: com.azure.core.test.http.MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, byte[] bodyBytes)
  overload: com.azure.core.test.http.MockHttpResponse.MockHttpResponse*
  type: Constructor
  package: com.azure.core.test.http
  summary: Creates an HTTP response associated with a `request`, returns the `statusCode`, and response body of `bodyBytes`.
  syntax:
    content: public MockHttpResponse(HttpRequest request, int statusCode, byte[] bodyBytes)
    parameters:
    - id: request
      type: com.azure.core.http.HttpRequest
      description: HttpRequest associated with the response.
    - id: statusCode
      type: int
      description: Status code of the response.
    - id: bodyBytes
      type: byte[]
      description: Contents of the response.
- uid: com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders)
  id: MockHttpResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers)
  nameWithType: MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers)
  fullName: com.azure.core.test.http.MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers)
  overload: com.azure.core.test.http.MockHttpResponse.MockHttpResponse*
  type: Constructor
  package: com.azure.core.test.http
  summary: Creates an HTTP response associated with a `request`, returns the `statusCode`, and http headers.
  syntax:
    content: public MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers)
    parameters:
    - id: request
      type: com.azure.core.http.HttpRequest
      description: HttpRequest associated with the response.
    - id: statusCode
      type: int
      description: Status code of the response.
    - id: headers
      type: com.azure.core.http.HttpHeaders
      description: Headers of the response.
- uid: com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders,byte[])
  id: MockHttpResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders,byte[])
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, byte[] bodyBytes)
  nameWithType: MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, byte[] bodyBytes)
  fullName: com.azure.core.test.http.MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, byte[] bodyBytes)
  overload: com.azure.core.test.http.MockHttpResponse.MockHttpResponse*
  type: Constructor
  package: com.azure.core.test.http
  summary: Creates an HTTP response associated with a `request`, returns the `statusCode`, contains the `headers`, and response body of `bodyBytes`.
  syntax:
    content: public MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, byte[] bodyBytes)
    parameters:
    - id: request
      type: com.azure.core.http.HttpRequest
      description: HttpRequest associated with the response.
    - id: statusCode
      type: int
      description: Status code of the response.
    - id: headers
      type: com.azure.core.http.HttpHeaders
      description: HttpHeaders of the response.
    - id: bodyBytes
      type: byte[]
      description: Contents of the response.
- uid: com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders,java.lang.Object)
  id: MockHttpResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders,java.lang.Object)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, Object serializable)
  nameWithType: MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, Object serializable)
  fullName: com.azure.core.test.http.MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, Object serializable)
  overload: com.azure.core.test.http.MockHttpResponse.MockHttpResponse*
  type: Constructor
  package: com.azure.core.test.http
  summary: Creates an HTTP response associated with a `request`, returns the `statusCode`, contains the given `headers`, and response body that is JSON serialized from `serializable`.
  syntax:
    content: public MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, Object serializable)
    parameters:
    - id: request
      type: com.azure.core.http.HttpRequest
      description: HttpRequest associated with the response.
    - id: statusCode
      type: int
      description: Status code of the response.
    - id: headers
      type: com.azure.core.http.HttpHeaders
      description: HttpHeaders of the response.
    - id: serializable
      type: java.lang.Object
      description: Contents to be serialized into JSON for the response.
- uid: com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,java.lang.Object)
  id: MockHttpResponse(com.azure.core.http.HttpRequest,int,java.lang.Object)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: MockHttpResponse(HttpRequest request, int statusCode, Object serializable)
  nameWithType: MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, Object serializable)
  fullName: com.azure.core.test.http.MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, Object serializable)
  overload: com.azure.core.test.http.MockHttpResponse.MockHttpResponse*
  type: Constructor
  package: com.azure.core.test.http
  summary: Creates an HTTP response associated with a `request`, returns the `statusCode`, and response body that is JSON serialized from `serializable`.
  syntax:
    content: public MockHttpResponse(HttpRequest request, int statusCode, Object serializable)
    parameters:
    - id: request
      type: com.azure.core.http.HttpRequest
      description: HttpRequest associated with the response.
    - id: statusCode
      type: int
      description: Status code of the response.
    - id: serializable
      type: java.lang.Object
      description: Contents to be serialized into JSON for the response.
- uid: com.azure.core.test.http.MockHttpResponse.addHeader(java.lang.String,java.lang.String)
  id: addHeader(java.lang.String,java.lang.String)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: addHeader(String name, String value)
  nameWithType: MockHttpResponse.addHeader(String name, String value)
  fullName: com.azure.core.test.http.MockHttpResponse.addHeader(String name, String value)
  overload: com.azure.core.test.http.MockHttpResponse.addHeader*
  type: Method
  package: com.azure.core.test.http
  summary: Adds the header `name` and `value` to the existing set of HTTP headers.
  syntax:
    content: public MockHttpResponse addHeader(String name, String value)
    parameters:
    - id: name
      type: java.lang.String
      description: The header to add
    - id: value
      type: java.lang.String
      description: The header value.
    return:
      type: com.azure.core.test.http.MockHttpResponse
      description: The updated response object.
- uid: com.azure.core.test.http.MockHttpResponse.getBody()
  id: getBody()
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: getBody()
  nameWithType: MockHttpResponse.getBody()
  fullName: com.azure.core.test.http.MockHttpResponse.getBody()
  overload: com.azure.core.test.http.MockHttpResponse.getBody*
  type: Method
  package: com.azure.core.test.http
  syntax:
    content: public Flux<ByteBuffer> getBody()
    return:
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
- uid: com.azure.core.test.http.MockHttpResponse.getBodyAsByteArray()
  id: getBodyAsByteArray()
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: getBodyAsByteArray()
  nameWithType: MockHttpResponse.getBodyAsByteArray()
  fullName: com.azure.core.test.http.MockHttpResponse.getBodyAsByteArray()
  overload: com.azure.core.test.http.MockHttpResponse.getBodyAsByteArray*
  type: Method
  package: com.azure.core.test.http
  syntax:
    content: public Mono<byte[]> getBodyAsByteArray()
    return:
      type: reactor.core.publisher.Mono<byte[]>
- uid: com.azure.core.test.http.MockHttpResponse.getBodyAsString()
  id: getBodyAsString()
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: getBodyAsString()
  nameWithType: MockHttpResponse.getBodyAsString()
  fullName: com.azure.core.test.http.MockHttpResponse.getBodyAsString()
  overload: com.azure.core.test.http.MockHttpResponse.getBodyAsString*
  type: Method
  package: com.azure.core.test.http
  syntax:
    content: public Mono<String> getBodyAsString()
    return:
      type: reactor.core.publisher.Mono<java.lang.String>
- uid: com.azure.core.test.http.MockHttpResponse.getBodyAsString(java.nio.charset.Charset)
  id: getBodyAsString(java.nio.charset.Charset)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: getBodyAsString(Charset charset)
  nameWithType: MockHttpResponse.getBodyAsString(Charset charset)
  fullName: com.azure.core.test.http.MockHttpResponse.getBodyAsString(Charset charset)
  overload: com.azure.core.test.http.MockHttpResponse.getBodyAsString*
  type: Method
  package: com.azure.core.test.http
  syntax:
    content: public Mono<String> getBodyAsString(Charset charset)
    parameters:
    - id: charset
      type: java.nio.charset.Charset
    return:
      type: reactor.core.publisher.Mono<java.lang.String>
- uid: com.azure.core.test.http.MockHttpResponse.getHeaderValue(java.lang.String)
  id: getHeaderValue(java.lang.String)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: getHeaderValue(String name)
  nameWithType: MockHttpResponse.getHeaderValue(String name)
  fullName: com.azure.core.test.http.MockHttpResponse.getHeaderValue(String name)
  overload: com.azure.core.test.http.MockHttpResponse.getHeaderValue*
  type: Method
  package: com.azure.core.test.http
  syntax:
    content: public String getHeaderValue(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.azure.core.test.http.MockHttpResponse.getHeaders()
  id: getHeaders()
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: getHeaders()
  nameWithType: MockHttpResponse.getHeaders()
  fullName: com.azure.core.test.http.MockHttpResponse.getHeaders()
  overload: com.azure.core.test.http.MockHttpResponse.getHeaders*
  type: Method
  package: com.azure.core.test.http
  syntax:
    content: public HttpHeaders getHeaders()
    return:
      type: com.azure.core.http.HttpHeaders
- uid: com.azure.core.test.http.MockHttpResponse.getStatusCode()
  id: getStatusCode()
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.http.MockHttpResponse
  langs:
  - java
  name: getStatusCode()
  nameWithType: MockHttpResponse.getStatusCode()
  fullName: com.azure.core.test.http.MockHttpResponse.getStatusCode()
  overload: com.azure.core.test.http.MockHttpResponse.getStatusCode*
  type: Method
  package: com.azure.core.test.http
  syntax:
    content: public int getStatusCode()
    return:
      type: int
references:
- uid: com.azure.core.http.HttpRequest
  spec.java:
  - uid: com.azure.core.http.HttpRequest
    name: HttpRequest
    fullName: com.azure.core.http.HttpRequest
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.core.test.http.MockHttpResponse.MockHttpResponse*
  name: MockHttpResponse
  nameWithType: MockHttpResponse.MockHttpResponse
  fullName: com.azure.core.test.http.MockHttpResponse.MockHttpResponse
  package: com.azure.core.test.http
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.azure.core.http.HttpHeaders
  spec.java:
  - uid: com.azure.core.http.HttpHeaders
    name: HttpHeaders
    fullName: com.azure.core.http.HttpHeaders
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.core.test.http.MockHttpResponse.getStatusCode*
  name: getStatusCode
  nameWithType: MockHttpResponse.getStatusCode
  fullName: com.azure.core.test.http.MockHttpResponse.getStatusCode
  package: com.azure.core.test.http
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.test.http.MockHttpResponse.getHeaderValue*
  name: getHeaderValue
  nameWithType: MockHttpResponse.getHeaderValue
  fullName: com.azure.core.test.http.MockHttpResponse.getHeaderValue
  package: com.azure.core.test.http
- uid: com.azure.core.test.http.MockHttpResponse.getHeaders*
  name: getHeaders
  nameWithType: MockHttpResponse.getHeaders
  fullName: com.azure.core.test.http.MockHttpResponse.getHeaders
  package: com.azure.core.test.http
- uid: reactor.core.publisher.Mono<byte[]>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
- uid: com.azure.core.test.http.MockHttpResponse.getBodyAsByteArray*
  name: getBodyAsByteArray
  nameWithType: MockHttpResponse.getBodyAsByteArray
  fullName: com.azure.core.test.http.MockHttpResponse.getBodyAsByteArray
  package: com.azure.core.test.http
- uid: reactor.core.publisher.Flux<java.nio.ByteBuffer>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
- uid: com.azure.core.test.http.MockHttpResponse.getBody*
  name: getBody
  nameWithType: MockHttpResponse.getBody
  fullName: com.azure.core.test.http.MockHttpResponse.getBody
  package: com.azure.core.test.http
- uid: reactor.core.publisher.Mono<java.lang.String>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.core.test.http.MockHttpResponse.getBodyAsString*
  name: getBodyAsString
  nameWithType: MockHttpResponse.getBodyAsString
  fullName: com.azure.core.test.http.MockHttpResponse.getBodyAsString
  package: com.azure.core.test.http
- uid: java.nio.charset.Charset
  spec.java:
  - uid: java.nio.charset.Charset
    name: Charset
    fullName: java.nio.charset.Charset
- uid: com.azure.core.test.http.MockHttpResponse.addHeader*
  name: addHeader
  nameWithType: MockHttpResponse.addHeader
  fullName: com.azure.core.test.http.MockHttpResponse.addHeader
  package: com.azure.core.test.http
- uid: com.azure.core.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: com.azure.core.http.HttpResponse
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.core.http.HttpResponse.getBodyAsString(java.nio.charset.Charset)
  name: HttpResponse.getBodyAsString(Charset)
  nameWithType: HttpResponse.getBodyAsString(Charset)
  fullName: com.azure.core.http.HttpResponse.getBodyAsString(java.nio.charset.Charset)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.core.http.HttpResponse.getBody()
  name: HttpResponse.getBody()
  nameWithType: HttpResponse.getBody()
  fullName: com.azure.core.http.HttpResponse.getBody()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.core.http.HttpResponse.getHeaders()
  name: HttpResponse.getHeaders()
  nameWithType: HttpResponse.getHeaders()
  fullName: com.azure.core.http.HttpResponse.getHeaders()
- uid: com.azure.core.http.HttpResponse.getBodyAsString()
  name: HttpResponse.getBodyAsString()
  nameWithType: HttpResponse.getBodyAsString()
  fullName: com.azure.core.http.HttpResponse.getBodyAsString()
- uid: com.azure.core.http.HttpResponse.getHeaderValue(java.lang.String)
  name: HttpResponse.getHeaderValue(String)
  nameWithType: HttpResponse.getHeaderValue(String)
  fullName: com.azure.core.http.HttpResponse.getHeaderValue(java.lang.String)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.HttpResponse.getBodyAsByteArray()
  name: HttpResponse.getBodyAsByteArray()
  nameWithType: HttpResponse.getBodyAsByteArray()
  fullName: com.azure.core.http.HttpResponse.getBodyAsByteArray()
- uid: com.azure.core.http.HttpResponse.getRequest()
  name: HttpResponse.getRequest()
  nameWithType: HttpResponse.getRequest()
  fullName: com.azure.core.http.HttpResponse.getRequest()
- uid: com.azure.core.http.HttpResponse.close()
  name: HttpResponse.close()
  nameWithType: HttpResponse.close()
  fullName: com.azure.core.http.HttpResponse.close()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.core.http.HttpResponse.getStatusCode()
  name: HttpResponse.getStatusCode()
  nameWithType: HttpResponse.getStatusCode()
  fullName: com.azure.core.http.HttpResponse.getStatusCode()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.core.http.HttpResponse.buffer()
  name: HttpResponse.buffer()
  nameWithType: HttpResponse.buffer()
  fullName: com.azure.core.http.HttpResponse.buffer()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
