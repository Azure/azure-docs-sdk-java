### YamlMime:JavaType
uid: "com.azure.core.test.http.MockHttpResponse"
fullName: "com.azure.core.test.http.MockHttpResponse"
name: "MockHttpResponse"
nameWithType: "MockHttpResponse"
summary: "An HTTP response that is created to simulate a HTTP request."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.http.HttpResponse?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.http.HttpResponse.buffer()?alt=com.azure.core.http.HttpResponse.buffer&text=buffer\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.close()?alt=com.azure.core.http.HttpResponse.close&text=close\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.getBody()?alt=com.azure.core.http.HttpResponse.getBody&text=getBody\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.getBodyAsBinaryData()?alt=com.azure.core.http.HttpResponse.getBodyAsBinaryData&text=getBodyAsBinaryData\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.getBodyAsByteArray()?alt=com.azure.core.http.HttpResponse.getBodyAsByteArray&text=getBodyAsByteArray\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.getBodyAsInputStream()?alt=com.azure.core.http.HttpResponse.getBodyAsInputStream&text=getBodyAsInputStream\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.getBodyAsString()?alt=com.azure.core.http.HttpResponse.getBodyAsString&text=getBodyAsString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.getBodyAsString(java.nio.charset.Charset)?alt=com.azure.core.http.HttpResponse.getBodyAsString&text=getBodyAsString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.getHeaderValue(com.azure.core.http.HttpHeaderName)?alt=com.azure.core.http.HttpResponse.getHeaderValue&text=getHeaderValue\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.getHeaderValue(java.lang.String)?alt=com.azure.core.http.HttpResponse.getHeaderValue&text=getHeaderValue\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.getHeaders()?alt=com.azure.core.http.HttpResponse.getHeaders&text=getHeaders\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.getRequest()?alt=com.azure.core.http.HttpResponse.getRequest&text=getRequest\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.getStatusCode()?alt=com.azure.core.http.HttpResponse.getStatusCode&text=getStatusCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.writeBodyTo(java.nio.channels.WritableByteChannel)?alt=com.azure.core.http.HttpResponse.writeBodyTo&text=writeBodyTo\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.HttpResponse.writeBodyToAsync(java.nio.channels.AsynchronousByteChannel)?alt=com.azure.core.http.HttpResponse.writeBodyToAsync&text=writeBodyToAsync\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **MockHttpResponse**</br> extends <xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int)"
  fullName: "com.azure.core.test.http.MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode)"
  name: "MockHttpResponse(HttpRequest request, int statusCode)"
  nameWithType: "MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode)"
  summary: "Creates a HTTP response associated with a `request`, returns the `statusCode`, and has an empty response body."
  parameters:
  - description: "HttpRequest associated with the response."
    name: "request"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "Status code of the response."
    name: "statusCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MockHttpResponse(HttpRequest request, int statusCode)"
  desc: "Creates a HTTP response associated with a `request`, returns the `statusCode`, and has an empty response body."
- uid: "com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,byte[])"
  fullName: "com.azure.core.test.http.MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, byte[] bodyBytes)"
  name: "MockHttpResponse(HttpRequest request, int statusCode, byte[] bodyBytes)"
  nameWithType: "MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, byte[] bodyBytes)"
  summary: "Creates an HTTP response associated with a `request`, returns the `statusCode`, and response body of `bodyBytes`."
  parameters:
  - description: "HttpRequest associated with the response."
    name: "request"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "Status code of the response."
    name: "statusCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Contents of the response."
    name: "bodyBytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public MockHttpResponse(HttpRequest request, int statusCode, byte[] bodyBytes)"
  desc: "Creates an HTTP response associated with a `request`, returns the `statusCode`, and response body of `bodyBytes`."
- uid: "com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders)"
  fullName: "com.azure.core.test.http.MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers)"
  name: "MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers)"
  nameWithType: "MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers)"
  summary: "Creates an HTTP response associated with a `request`, returns the `statusCode`, and http headers."
  parameters:
  - description: "HttpRequest associated with the response."
    name: "request"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "Status code of the response."
    name: "statusCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Headers of the response."
    name: "headers"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers)"
  desc: "Creates an HTTP response associated with a `request`, returns the `statusCode`, and http headers."
- uid: "com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders,byte[])"
  fullName: "com.azure.core.test.http.MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, byte[] bodyBytes)"
  name: "MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, byte[] bodyBytes)"
  nameWithType: "MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, byte[] bodyBytes)"
  summary: "Creates an HTTP response associated with a `request`, returns the `statusCode`, contains the `headers`, and response body of `bodyBytes`."
  parameters:
  - description: "HttpRequest associated with the response."
    name: "request"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "Status code of the response."
    name: "statusCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "HttpHeaders of the response."
    name: "headers"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  - description: "Contents of the response."
    name: "bodyBytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, byte[] bodyBytes)"
  desc: "Creates an HTTP response associated with a `request`, returns the `statusCode`, contains the `headers`, and response body of `bodyBytes`."
- uid: "com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,com.azure.core.http.HttpHeaders,java.lang.Object)"
  fullName: "com.azure.core.test.http.MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, Object serializable)"
  name: "MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, Object serializable)"
  nameWithType: "MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, Object serializable)"
  summary: "Creates an HTTP response associated with a `request`, returns the `statusCode`, contains the given `headers`, and response body that is JSON serialized from `serializable`."
  parameters:
  - description: "HttpRequest associated with the response."
    name: "request"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "Status code of the response."
    name: "statusCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "HttpHeaders of the response."
    name: "headers"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  - description: "Contents to be serialized into JSON for the response."
    name: "serializable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public MockHttpResponse(HttpRequest request, int statusCode, HttpHeaders headers, Object serializable)"
  desc: "Creates an HTTP response associated with a `request`, returns the `statusCode`, contains the given `headers`, and response body that is JSON serialized from `serializable`."
- uid: "com.azure.core.test.http.MockHttpResponse.MockHttpResponse(com.azure.core.http.HttpRequest,int,java.lang.Object)"
  fullName: "com.azure.core.test.http.MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, Object serializable)"
  name: "MockHttpResponse(HttpRequest request, int statusCode, Object serializable)"
  nameWithType: "MockHttpResponse.MockHttpResponse(HttpRequest request, int statusCode, Object serializable)"
  summary: "Creates an HTTP response associated with a `request`, returns the `statusCode`, and response body that is JSON serialized from `serializable`."
  parameters:
  - description: "HttpRequest associated with the response."
    name: "request"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "Status code of the response."
    name: "statusCode"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Contents to be serialized into JSON for the response."
    name: "serializable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public MockHttpResponse(HttpRequest request, int statusCode, Object serializable)"
  desc: "Creates an HTTP response associated with a `request`, returns the `statusCode`, and response body that is JSON serialized from `serializable`."
methods:
- uid: "com.azure.core.test.http.MockHttpResponse.addHeader(java.lang.String,java.lang.String)"
  fullName: "com.azure.core.test.http.MockHttpResponse.addHeader(String name, String value)"
  name: "addHeader(String name, String value)"
  nameWithType: "MockHttpResponse.addHeader(String name, String value)"
  summary: "Adds the header `name` and `value` to the existing set of HTTP headers."
  deprecatedTag: "Don't use this method."
  parameters:
  - description: "The header to add"
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The header value."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Deprecated.html\">@Deprecated</a></br>public MockHttpResponse addHeader(String name, String value)"
  desc: "Adds the header `name` and `value` to the existing set of HTTP headers."
  hasDeprecatedTag: true
  returns:
    description: "The updated response object."
    type: "<xref href=\"com.azure.core.test.http.MockHttpResponse?alt=com.azure.core.test.http.MockHttpResponse&text=MockHttpResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.test.http.MockHttpResponse.buffer()"
  fullName: "com.azure.core.test.http.MockHttpResponse.buffer()"
  name: "buffer()"
  nameWithType: "MockHttpResponse.buffer()"
  overridden: "com.azure.core.http.HttpResponse.buffer()"
  syntax: "public HttpResponse buffer()"
  returns:
    type: "<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.test.http.MockHttpResponse.getBody()"
  fullName: "com.azure.core.test.http.MockHttpResponse.getBody()"
  name: "getBody()"
  nameWithType: "MockHttpResponse.getBody()"
  overridden: "com.azure.core.http.HttpResponse.getBody()"
  syntax: "public Flux<ByteBuffer> getBody()"
  returns:
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;"
- uid: "com.azure.core.test.http.MockHttpResponse.getBodyAsByteArray()"
  fullName: "com.azure.core.test.http.MockHttpResponse.getBodyAsByteArray()"
  name: "getBodyAsByteArray()"
  nameWithType: "MockHttpResponse.getBodyAsByteArray()"
  overridden: "com.azure.core.http.HttpResponse.getBodyAsByteArray()"
  syntax: "public Mono<byte[]> getBodyAsByteArray()"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
- uid: "com.azure.core.test.http.MockHttpResponse.getBodyAsString()"
  fullName: "com.azure.core.test.http.MockHttpResponse.getBodyAsString()"
  name: "getBodyAsString()"
  nameWithType: "MockHttpResponse.getBodyAsString()"
  overridden: "com.azure.core.http.HttpResponse.getBodyAsString()"
  syntax: "public Mono<String> getBodyAsString()"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.core.test.http.MockHttpResponse.getBodyAsString(java.nio.charset.Charset)"
  fullName: "com.azure.core.test.http.MockHttpResponse.getBodyAsString(Charset charset)"
  name: "getBodyAsString(Charset charset)"
  nameWithType: "MockHttpResponse.getBodyAsString(Charset charset)"
  overridden: "com.azure.core.http.HttpResponse.getBodyAsString(java.nio.charset.Charset)"
  parameters:
  - name: "charset"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/charset/Charset.html\">Charset</a>"
  syntax: "public Mono<String> getBodyAsString(Charset charset)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.core.test.http.MockHttpResponse.getHeaderValue(com.azure.core.http.HttpHeaderName)"
  fullName: "com.azure.core.test.http.MockHttpResponse.getHeaderValue(HttpHeaderName headerName)"
  name: "getHeaderValue(HttpHeaderName headerName)"
  nameWithType: "MockHttpResponse.getHeaderValue(HttpHeaderName headerName)"
  overridden: "com.azure.core.http.HttpResponse.getHeaderValue(com.azure.core.http.HttpHeaderName)"
  parameters:
  - name: "headerName"
    type: "<xref href=\"com.azure.core.http.HttpHeaderName?alt=com.azure.core.http.HttpHeaderName&text=HttpHeaderName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String getHeaderValue(HttpHeaderName headerName)"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.core.test.http.MockHttpResponse.getHeaderValue(java.lang.String)"
  fullName: "com.azure.core.test.http.MockHttpResponse.getHeaderValue(String name)"
  name: "getHeaderValue(String name)"
  nameWithType: "MockHttpResponse.getHeaderValue(String name)"
  overridden: "com.azure.core.http.HttpResponse.getHeaderValue(java.lang.String)"
  parameters:
  - name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Deprecated.html\">@Deprecated</a></br>public String getHeaderValue(String name)"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.core.test.http.MockHttpResponse.getHeaders()"
  fullName: "com.azure.core.test.http.MockHttpResponse.getHeaders()"
  name: "getHeaders()"
  nameWithType: "MockHttpResponse.getHeaders()"
  overridden: "com.azure.core.http.HttpResponse.getHeaders()"
  syntax: "public HttpHeaders getHeaders()"
  returns:
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.test.http.MockHttpResponse.getStatusCode()"
  fullName: "com.azure.core.test.http.MockHttpResponse.getStatusCode()"
  name: "getStatusCode()"
  nameWithType: "MockHttpResponse.getStatusCode()"
  overridden: "com.azure.core.http.HttpResponse.getStatusCode()"
  syntax: "public int getStatusCode()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "An HTTP response that is created to simulate a HTTP request."
metadata: {}
package: "com.azure.core.test.http"
artifact: com.azure:azure-core-test:1.22.1
