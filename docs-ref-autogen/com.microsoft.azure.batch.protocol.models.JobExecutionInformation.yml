### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.endTime()
  name: endTime()
  nameWithType: JobExecutionInformation.endTime()
  returns:
    description: <p>the endTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the job is in the completed state.</p>

    <p></p>
  syntax: public DateTime endTime()
  uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.endTime()
- fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.poolId()
  name: poolId()
  nameWithType: JobExecutionInformation.poolId()
  returns:
    description: <p>the poolId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this element contains the actual pool where the job is assigned. When you get job details from the service, they also contain a poolInfo element, which contains the pool configuration data from when the job was added or updated. That poolInfo element may also contain a poolId element. If it does, the two IDs are the same. If it does not, it means the job ran on an auto pool, and this property contains the ID of that auto pool.</p>

    <p></p>
  syntax: public String poolId()
  uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.poolId()
- fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.schedulingError()
  name: schedulingError()
  nameWithType: JobExecutionInformation.schedulingError()
  returns:
    description: <p>the schedulingError value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSchedulingError?alt=com.microsoft.azure.batch.protocol.models.JobSchedulingError&text=JobSchedulingError" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is not set if there was no error starting the job.</p>

    <p></p>
  syntax: public JobSchedulingError schedulingError()
  uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.schedulingError()
- fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.startTime()
  name: startTime()
  nameWithType: JobExecutionInformation.startTime()
  returns:
    description: <p>the startTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this is the time at which the job was created.</p>

    <p></p>
  syntax: public DateTime startTime()
  uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.startTime()
- fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.terminateReason()
  name: terminateReason()
  nameWithType: JobExecutionInformation.terminateReason()
  returns:
    description: <p>the terminateReason value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the job is in the completed state. If the Batch service terminates the job, it sets the reason as follows: JMComplete - the Job Manager task completed, and killJobOnCompletion was set to true. MaxWallClockTimeExpiry - the job reached its maxWallClockTime constraint. TerminateJobSchedule - the job ran as part of a schedule, and the schedule terminated. AllTasksComplete - the job's onAllTasksComplete attribute is set to terminatejob, and all tasks in the job are complete. TaskFailed - the job's onTaskFailure attribute is set to performExitOptionsJobAction, and a task in the job failed with an exit condition that specified a jobAction of terminatejob. Any other string is a user-defined reason specified in a call to the 'Terminate a job' operation.</p>

    <p></p>
  syntax: public String terminateReason()
  uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.terminateReason()
- fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withEndTime(DateTime endTime)
  name: withEndTime(DateTime endTime)
  nameWithType: JobExecutionInformation.withEndTime(DateTime endTime)
  parameters:
  - description: <p>the endTime value to set </p>
    name: endTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobExecutionInformation&text=JobExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the job is in the completed state.</p>

    <p></p>
  syntax: public JobExecutionInformation withEndTime(DateTime endTime)
  uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withEndTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withPoolId(String poolId)
  name: withPoolId(String poolId)
  nameWithType: JobExecutionInformation.withPoolId(String poolId)
  parameters:
  - description: <p>the poolId value to set </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobExecutionInformation&text=JobExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this element contains the actual pool where the job is assigned. When you get job details from the service, they also contain a poolInfo element, which contains the pool configuration data from when the job was added or updated. That poolInfo element may also contain a poolId element. If it does, the two IDs are the same. If it does not, it means the job ran on an auto pool, and this property contains the ID of that auto pool.</p>

    <p></p>
  syntax: public JobExecutionInformation withPoolId(String poolId)
  uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withPoolId(String)
- fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withSchedulingError(JobSchedulingError schedulingError)
  name: withSchedulingError(JobSchedulingError schedulingError)
  nameWithType: JobExecutionInformation.withSchedulingError(JobSchedulingError schedulingError)
  parameters:
  - description: <p>the schedulingError value to set </p>
    name: schedulingError
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSchedulingError?alt=com.microsoft.azure.batch.protocol.models.JobSchedulingError&text=JobSchedulingError" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobExecutionInformation&text=JobExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is not set if there was no error starting the job.</p>

    <p></p>
  syntax: public JobExecutionInformation withSchedulingError(JobSchedulingError schedulingError)
  uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withSchedulingError(JobSchedulingError)
- fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withStartTime(DateTime startTime)
  name: withStartTime(DateTime startTime)
  nameWithType: JobExecutionInformation.withStartTime(DateTime startTime)
  parameters:
  - description: <p>the startTime value to set </p>
    name: startTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobExecutionInformation&text=JobExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this is the time at which the job was created.</p>

    <p></p>
  syntax: public JobExecutionInformation withStartTime(DateTime startTime)
  uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withStartTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withTerminateReason(String terminateReason)
  name: withTerminateReason(String terminateReason)
  nameWithType: JobExecutionInformation.withTerminateReason(String terminateReason)
  parameters:
  - description: <p>the terminateReason value to set </p>
    name: terminateReason
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobExecutionInformation&text=JobExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the job is in the completed state. If the Batch service terminates the job, it sets the reason as follows: JMComplete - the Job Manager task completed, and killJobOnCompletion was set to true. MaxWallClockTimeExpiry - the job reached its maxWallClockTime constraint. TerminateJobSchedule - the job ran as part of a schedule, and the schedule terminated. AllTasksComplete - the job's onAllTasksComplete attribute is set to terminatejob, and all tasks in the job are complete. TaskFailed - the job's onTaskFailure attribute is set to performExitOptionsJobAction, and a task in the job failed with an exit condition that specified a jobAction of terminatejob. Any other string is a user-defined reason specified in a call to the 'Terminate a job' operation.</p>

    <p></p>
  syntax: public JobExecutionInformation withTerminateReason(String terminateReason)
  uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withTerminateReason(String)
nameWithType: JobExecutionInformation
syntax: public class JobExecutionInformation
type: class
uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
name: JobExecutionInformation
package: com.microsoft.azure.batch.protocol.models
summary: <p>Contains information about the execution of a job in the Azure Batch service. </p>
metadata: {}
