### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  id: JobExecutionInformation
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.JobExecutionInformation.JobExecutionInformation()
  - com.microsoft.azure.batch.protocol.models.JobExecutionInformation.endTime()
  - com.microsoft.azure.batch.protocol.models.JobExecutionInformation.poolId()
  - com.microsoft.azure.batch.protocol.models.JobExecutionInformation.schedulingError()
  - com.microsoft.azure.batch.protocol.models.JobExecutionInformation.startTime()
  - com.microsoft.azure.batch.protocol.models.JobExecutionInformation.terminateReason()
  - com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withEndTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withPoolId(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withSchedulingError(com.microsoft.azure.batch.protocol.models.JobSchedulingError)
  - com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withStartTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withTerminateReason(java.lang.String)
  langs:
  - java
  name: JobExecutionInformation
  nameWithType: JobExecutionInformation
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: Contains information about the execution of a Job in the Azure Batch service.
  syntax:
    content: public class JobExecutionInformation
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.JobExecutionInformation()
  id: JobExecutionInformation()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  langs:
  - java
  name: JobExecutionInformation()
  nameWithType: JobExecutionInformation.JobExecutionInformation()
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.JobExecutionInformation()
  overload: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.JobExecutionInformation*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public JobExecutionInformation()
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.endTime()
  id: endTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  langs:
  - java
  name: endTime()
  nameWithType: JobExecutionInformation.endTime()
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.endTime()
  overload: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.endTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is set only if the Job is in the completed state.
  syntax:
    content: public DateTime endTime()
    return:
      type: org.joda.time.DateTime
      description: the endTime value
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.poolId()
  id: poolId()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  langs:
  - java
  name: poolId()
  nameWithType: JobExecutionInformation.poolId()
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.poolId()
  overload: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.poolId*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this element contains the actual Pool where the Job is assigned. When you get Job details from the service, they also contain a poolInfo element, which contains the Pool configuration data from when the Job was added or updated. That poolInfo element may also contain a poolId element. If it does, the two IDs are the same. If it does not, it means the Job ran on an auto Pool, and this property contains the ID of that auto Pool.
  syntax:
    content: public String poolId()
    return:
      type: java.lang.String
      description: the poolId value
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.schedulingError()
  id: schedulingError()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  langs:
  - java
  name: schedulingError()
  nameWithType: JobExecutionInformation.schedulingError()
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.schedulingError()
  overload: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.schedulingError*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is not set if there was no error starting the Job.
  syntax:
    content: public JobSchedulingError schedulingError()
    return:
      type: com.microsoft.azure.batch.protocol.models.JobSchedulingError
      description: the schedulingError value
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.startTime()
  id: startTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  langs:
  - java
  name: startTime()
  nameWithType: JobExecutionInformation.startTime()
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.startTime()
  overload: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.startTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this is the time at which the Job was created.
  syntax:
    content: public DateTime startTime()
    return:
      type: org.joda.time.DateTime
      description: the startTime value
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.terminateReason()
  id: terminateReason()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  langs:
  - java
  name: terminateReason()
  nameWithType: JobExecutionInformation.terminateReason()
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.terminateReason()
  overload: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.terminateReason*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get this property is set only if the Job is in the completed state. If the Batch service terminates the Job, it sets the reason as follows: JMComplete - the Job Manager Task completed, and killJobOnCompletion was set to true. MaxWallClockTimeExpiry - the Job reached its maxWallClockTime constraint. TerminateJobSchedule - the Job ran as part of a schedule, and the schedule terminated. AllTasksComplete - the Job's onAllTasksComplete attribute is set to terminatejob, and all Tasks in the Job are complete. TaskFailed - the Job's onTaskFailure attribute is set to performExitOptionsJobAction, and a Task in the Job failed with an exit condition that specified a jobAction of terminatejob. Any other string is a user-defined reason specified in a call to the 'Terminate a Job' operation."
  syntax:
    content: public String terminateReason()
    return:
      type: java.lang.String
      description: the terminateReason value
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withEndTime(org.joda.time.DateTime)
  id: withEndTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  langs:
  - java
  name: withEndTime(DateTime endTime)
  nameWithType: JobExecutionInformation.withEndTime(DateTime endTime)
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withEndTime(DateTime endTime)
  overload: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withEndTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is set only if the Job is in the completed state.
  syntax:
    content: public JobExecutionInformation withEndTime(DateTime endTime)
    parameters:
    - id: endTime
      type: org.joda.time.DateTime
      description: the endTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
      description: the JobExecutionInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withPoolId(java.lang.String)
  id: withPoolId(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  langs:
  - java
  name: withPoolId(String poolId)
  nameWithType: JobExecutionInformation.withPoolId(String poolId)
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withPoolId(String poolId)
  overload: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withPoolId*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this element contains the actual Pool where the Job is assigned. When you get Job details from the service, they also contain a poolInfo element, which contains the Pool configuration data from when the Job was added or updated. That poolInfo element may also contain a poolId element. If it does, the two IDs are the same. If it does not, it means the Job ran on an auto Pool, and this property contains the ID of that auto Pool.
  syntax:
    content: public JobExecutionInformation withPoolId(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: the poolId value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
      description: the JobExecutionInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withSchedulingError(com.microsoft.azure.batch.protocol.models.JobSchedulingError)
  id: withSchedulingError(com.microsoft.azure.batch.protocol.models.JobSchedulingError)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  langs:
  - java
  name: withSchedulingError(JobSchedulingError schedulingError)
  nameWithType: JobExecutionInformation.withSchedulingError(JobSchedulingError schedulingError)
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withSchedulingError(JobSchedulingError schedulingError)
  overload: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withSchedulingError*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is not set if there was no error starting the Job.
  syntax:
    content: public JobExecutionInformation withSchedulingError(JobSchedulingError schedulingError)
    parameters:
    - id: schedulingError
      type: com.microsoft.azure.batch.protocol.models.JobSchedulingError
      description: the schedulingError value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
      description: the JobExecutionInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withStartTime(org.joda.time.DateTime)
  id: withStartTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  langs:
  - java
  name: withStartTime(DateTime startTime)
  nameWithType: JobExecutionInformation.withStartTime(DateTime startTime)
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withStartTime(DateTime startTime)
  overload: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withStartTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this is the time at which the Job was created.
  syntax:
    content: public JobExecutionInformation withStartTime(DateTime startTime)
    parameters:
    - id: startTime
      type: org.joda.time.DateTime
      description: the startTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
      description: the JobExecutionInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withTerminateReason(java.lang.String)
  id: withTerminateReason(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
  langs:
  - java
  name: withTerminateReason(String terminateReason)
  nameWithType: JobExecutionInformation.withTerminateReason(String terminateReason)
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withTerminateReason(String terminateReason)
  overload: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withTerminateReason*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set this property is set only if the Job is in the completed state. If the Batch service terminates the Job, it sets the reason as follows: JMComplete - the Job Manager Task completed, and killJobOnCompletion was set to true. MaxWallClockTimeExpiry - the Job reached its maxWallClockTime constraint. TerminateJobSchedule - the Job ran as part of a schedule, and the schedule terminated. AllTasksComplete - the Job's onAllTasksComplete attribute is set to terminatejob, and all Tasks in the Job are complete. TaskFailed - the Job's onTaskFailure attribute is set to performExitOptionsJobAction, and a Task in the Job failed with an exit condition that specified a jobAction of terminatejob. Any other string is a user-defined reason specified in a call to the 'Terminate a Job' operation."
  syntax:
    content: public JobExecutionInformation withTerminateReason(String terminateReason)
    parameters:
    - id: terminateReason
      type: java.lang.String
      description: the terminateReason value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobExecutionInformation
      description: the JobExecutionInformation object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.JobExecutionInformation*
  name: JobExecutionInformation
  nameWithType: JobExecutionInformation.JobExecutionInformation
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.JobExecutionInformation
  package: com.microsoft.azure.batch.protocol.models
- uid: org.joda.time.DateTime
  spec.java:
  - uid: org.joda.time.DateTime
    name: DateTime
    fullName: org.joda.time.DateTime
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.startTime*
  name: startTime
  nameWithType: JobExecutionInformation.startTime
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.startTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withStartTime*
  name: withStartTime
  nameWithType: JobExecutionInformation.withStartTime
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withStartTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.endTime*
  name: endTime
  nameWithType: JobExecutionInformation.endTime
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.endTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withEndTime*
  name: withEndTime
  nameWithType: JobExecutionInformation.withEndTime
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withEndTime
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.poolId*
  name: poolId
  nameWithType: JobExecutionInformation.poolId
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.poolId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withPoolId*
  name: withPoolId
  nameWithType: JobExecutionInformation.withPoolId
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withPoolId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobSchedulingError
  name: JobSchedulingError
  nameWithType: JobSchedulingError
  fullName: com.microsoft.azure.batch.protocol.models.JobSchedulingError
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.schedulingError*
  name: schedulingError
  nameWithType: JobExecutionInformation.schedulingError
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.schedulingError
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withSchedulingError*
  name: withSchedulingError
  nameWithType: JobExecutionInformation.withSchedulingError
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withSchedulingError
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.terminateReason*
  name: terminateReason
  nameWithType: JobExecutionInformation.terminateReason
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.terminateReason
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withTerminateReason*
  name: withTerminateReason
  nameWithType: JobExecutionInformation.withTerminateReason
  fullName: com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withTerminateReason
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
