### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation"
fullName: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation"
name: "JobExecutionInformation"
nameWithType: "JobExecutionInformation"
summary: "Contains information about the execution of a Job in the Azure Batch service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class JobExecutionInformation"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.JobExecutionInformation()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.JobExecutionInformation()"
  name: "JobExecutionInformation()"
  nameWithType: "JobExecutionInformation.JobExecutionInformation()"
  syntax: "public JobExecutionInformation()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.endTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.endTime()"
  name: "endTime()"
  nameWithType: "JobExecutionInformation.endTime()"
  summary: "Get this property is set only if the Job is in the completed state."
  syntax: "public DateTime endTime()"
  desc: "Get this property is set only if the Job is in the completed state."
  returns:
    description: "the endTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.poolId()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.poolId()"
  name: "poolId()"
  nameWithType: "JobExecutionInformation.poolId()"
  summary: "Get this element contains the actual Pool where the Job is assigned."
  syntax: "public String poolId()"
  desc: "Get this element contains the actual Pool where the Job is assigned. When you get Job details from the service, they also contain a poolInfo element, which contains the Pool configuration data from when the Job was added or updated. That poolInfo element may also contain a poolId element. If it does, the two IDs are the same. If it does not, it means the Job ran on an auto Pool, and this property contains the ID of that auto Pool."
  returns:
    description: "the poolId value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.schedulingError()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.schedulingError()"
  name: "schedulingError()"
  nameWithType: "JobExecutionInformation.schedulingError()"
  summary: "Get this property is not set if there was no error starting the Job."
  syntax: "public JobSchedulingError schedulingError()"
  desc: "Get this property is not set if there was no error starting the Job."
  returns:
    description: "the schedulingError value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSchedulingError?alt=com.microsoft.azure.batch.protocol.models.JobSchedulingError&text=JobSchedulingError\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.startTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.startTime()"
  name: "startTime()"
  nameWithType: "JobExecutionInformation.startTime()"
  summary: "Get this is the time at which the Job was created."
  syntax: "public DateTime startTime()"
  desc: "Get this is the time at which the Job was created."
  returns:
    description: "the startTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.terminateReason()"
  fullName: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.terminateReason()"
  name: "terminateReason()"
  nameWithType: "JobExecutionInformation.terminateReason()"
  summary: "Get this property is set only if the Job is in the completed state."
  syntax: "public String terminateReason()"
  desc: "Get this property is set only if the Job is in the completed state. If the Batch service terminates the Job, it sets the reason as follows: JMComplete - the Job Manager Task completed, and killJobOnCompletion was set to true. MaxWallClockTimeExpiry - the Job reached its maxWallClockTime constraint. TerminateJobSchedule - the Job ran as part of a schedule, and the schedule terminated. AllTasksComplete - the Job's onAllTasksComplete attribute is set to terminatejob, and all Tasks in the Job are complete. TaskFailed - the Job's onTaskFailure attribute is set to performExitOptionsJobAction, and a Task in the Job failed with an exit condition that specified a jobAction of terminatejob. Any other string is a user-defined reason specified in a call to the 'Terminate a Job' operation."
  returns:
    description: "the terminateReason value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withEndTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withEndTime(DateTime endTime)"
  name: "withEndTime(DateTime endTime)"
  nameWithType: "JobExecutionInformation.withEndTime(DateTime endTime)"
  summary: "Set this property is set only if the Job is in the completed state."
  parameters:
  - description: "the endTime value to set"
    name: "endTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobExecutionInformation withEndTime(DateTime endTime)"
  desc: "Set this property is set only if the Job is in the completed state."
  returns:
    description: "the JobExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobExecutionInformation&text=JobExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withPoolId(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withPoolId(String poolId)"
  name: "withPoolId(String poolId)"
  nameWithType: "JobExecutionInformation.withPoolId(String poolId)"
  summary: "Set this element contains the actual Pool where the Job is assigned."
  parameters:
  - description: "the poolId value to set"
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobExecutionInformation withPoolId(String poolId)"
  desc: "Set this element contains the actual Pool where the Job is assigned. When you get Job details from the service, they also contain a poolInfo element, which contains the Pool configuration data from when the Job was added or updated. That poolInfo element may also contain a poolId element. If it does, the two IDs are the same. If it does not, it means the Job ran on an auto Pool, and this property contains the ID of that auto Pool."
  returns:
    description: "the JobExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobExecutionInformation&text=JobExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withSchedulingError(com.microsoft.azure.batch.protocol.models.JobSchedulingError)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withSchedulingError(JobSchedulingError schedulingError)"
  name: "withSchedulingError(JobSchedulingError schedulingError)"
  nameWithType: "JobExecutionInformation.withSchedulingError(JobSchedulingError schedulingError)"
  summary: "Set this property is not set if there was no error starting the Job."
  parameters:
  - description: "the schedulingError value to set"
    name: "schedulingError"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobSchedulingError?alt=com.microsoft.azure.batch.protocol.models.JobSchedulingError&text=JobSchedulingError\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobExecutionInformation withSchedulingError(JobSchedulingError schedulingError)"
  desc: "Set this property is not set if there was no error starting the Job."
  returns:
    description: "the JobExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobExecutionInformation&text=JobExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withStartTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withStartTime(DateTime startTime)"
  name: "withStartTime(DateTime startTime)"
  nameWithType: "JobExecutionInformation.withStartTime(DateTime startTime)"
  summary: "Set this is the time at which the Job was created."
  parameters:
  - description: "the startTime value to set"
    name: "startTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobExecutionInformation withStartTime(DateTime startTime)"
  desc: "Set this is the time at which the Job was created."
  returns:
    description: "the JobExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobExecutionInformation&text=JobExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withTerminateReason(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.JobExecutionInformation.withTerminateReason(String terminateReason)"
  name: "withTerminateReason(String terminateReason)"
  nameWithType: "JobExecutionInformation.withTerminateReason(String terminateReason)"
  summary: "Set this property is set only if the Job is in the completed state."
  parameters:
  - description: "the terminateReason value to set"
    name: "terminateReason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JobExecutionInformation withTerminateReason(String terminateReason)"
  desc: "Set this property is set only if the Job is in the completed state. If the Batch service terminates the Job, it sets the reason as follows: JMComplete - the Job Manager Task completed, and killJobOnCompletion was set to true. MaxWallClockTimeExpiry - the Job reached its maxWallClockTime constraint. TerminateJobSchedule - the Job ran as part of a schedule, and the schedule terminated. AllTasksComplete - the Job's onAllTasksComplete attribute is set to terminatejob, and all Tasks in the Job are complete. TaskFailed - the Job's onTaskFailure attribute is set to performExitOptionsJobAction, and a Task in the Job failed with an exit condition that specified a jobAction of terminatejob. Any other string is a user-defined reason specified in a call to the 'Terminate a Job' operation."
  returns:
    description: "the JobExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobExecutionInformation&text=JobExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Contains information about the execution of a Job in the Azure Batch service."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
