### YamlMime:JavaMember
uid: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.createIndexer*"
fullName: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.createIndexer"
name: "createIndexer"
nameWithType: "SearchIndexerAsyncClient.createIndexer"
members:
- uid: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.createIndexer(com.azure.search.documents.indexes.models.SearchIndexer)"
  fullName: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.createIndexer(SearchIndexer indexer)"
  name: "createIndexer(SearchIndexer indexer)"
  nameWithType: "SearchIndexerAsyncClient.createIndexer(SearchIndexer indexer)"
  summary: "Creates a new Azure Cognitive Search indexer.\n\n**Code Sample**\n\nCreate search indexer named \"searchIndexer\".\n\n```java\nSearchIndexer searchIndexer = new SearchIndexer(\"searchIndexer\", \"dataSource\",\n     \"searchIndex\");\n searchIndexerAsyncClient.createIndexer(searchIndexer)\n     .subscribe(indexerFromService ->\n         System.out.printf(\"The indexer name is %s. The etag of indexer is %s.%n\", indexerFromService.getName(),\n         indexerFromService.getETag()));\n```"
  parameters:
  - description: "definition of the indexer to create."
    name: "indexer"
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndexer?alt=com.azure.search.documents.indexes.models.SearchIndexer&text=SearchIndexer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SearchIndexer> createIndexer(SearchIndexer indexer)"
  returns:
    description: "the created Indexer."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchIndexer?alt=com.azure.search.documents.indexes.models.SearchIndexer&text=SearchIndexer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.search.documents.indexes"
artifact: com.azure:azure-search-documents:11.1.3
