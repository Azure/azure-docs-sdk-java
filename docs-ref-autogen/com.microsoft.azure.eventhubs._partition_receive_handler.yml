items:
- uid: com.microsoft.azure.eventhubs._partition_receive_handler
  id: _partition_receive_handler
  parent: com.microsoft.azure.eventhubs
  children:
  - com.microsoft.azure.eventhubs._partition_receive_handler.onError(Throwable)
  - com.microsoft.azure.eventhubs._partition_receive_handler.onReceive(Iterable<EventData>)
  - com.microsoft.azure.eventhubs._partition_receive_handler.PartitionReceiveHandler(final int)
  - com.microsoft.azure.eventhubs._partition_receive_handler.setMaxEventCount(final int)
  href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
  langs:
  - java
  name: PartitionReceiveHandler
  nameWithType: PartitionReceiveHandler
  fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
  type: Class
  source:
    remote: &o0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiveHandler.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiveHandler.java
    startLine: 12
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>A handler class for the receive operation. Use any implementation of this abstract class to specify user action when using <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>'s setReceiveHandler().</p>

    <p></p>
  syntax: &o2
    content: public class PartitionReceiveHandler
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler(final PartitionReceiveHandler)
    description: ''
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - com.microsoft.azure.eventhubs._partition_receive_handler.getMaxEventCount()
- uid: com.microsoft.azure.eventhubs._partition_receive_handler.onError(Throwable)
  id: onError(Throwable)
  parent: com.microsoft.azure.eventhubs._partition_receive_handler
  href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
  langs:
  - java
  name: onError(Throwable error)
  nameWithType: PartitionReceiveHandler.onError(Throwable error)
  fullName: abstract void com.microsoft.azure.eventhubs.PartitionReceiveHandler.onError(Throwable error)
  overload: com.microsoft.azure.eventhubs._partition_receive_handler.onError*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiveHandler.java
    startLine: 46
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>Implement this method to Listen to errors which lead to Closure of the <xref href="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false"></xref> pump.</p>

    <p></p>
  syntax:
    content: public abstract void onError(Throwable error)
    parameters:
    - id: error
      type: a04fafd7
      description: <p>fatal error encountered while running the <xref href="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false"></xref> pump </p>
    return:
      type: 5beb11ad
- uid: com.microsoft.azure.eventhubs._partition_receive_handler.onReceive(Iterable<EventData>)
  id: onReceive(Iterable<EventData>)
  parent: com.microsoft.azure.eventhubs._partition_receive_handler
  href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
  langs:
  - java
  name: onReceive(Iterable<EventData> events)
  nameWithType: PartitionReceiveHandler.onReceive(Iterable<EventData> events)
  fullName: abstract void com.microsoft.azure.eventhubs.PartitionReceiveHandler.onReceive(Iterable<EventData> events)
  overload: com.microsoft.azure.eventhubs._partition_receive_handler.onReceive*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiveHandler.java
    startLine: 39
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>user should implement this method to specify the action to be performed on the received events.</p>

    <p></p>
  syntax: &o1
    content: public abstract void onReceive(Iterable<EventData> events)
    parameters:
    - id: events
      type: 2a13b5a5com.microsoft.azure.eventhubs._event_dataa08ddfce
      description: <p>the list of fetched events from the corresponding <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. </p>
    return:
      type: 5beb11ad
  see:
  - type: com.microsoft.azure.eventhubs._partition_receiver.receive(final int)
    description: ''
- uid: com.microsoft.azure.eventhubs._partition_receive_handler.PartitionReceiveHandler(final int)
  id: PartitionReceiveHandler(final int)
  parent: com.microsoft.azure.eventhubs._partition_receive_handler
  href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
  langs:
  - java
  name: PartitionReceiveHandler(final int maxEventCount)
  nameWithType: PartitionReceiveHandler.PartitionReceiveHandler(final int maxEventCount)
  fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler.PartitionReceiveHandler(final int maxEventCount)
  overload: com.microsoft.azure.eventhubs._partition_receive_handler.PartitionReceiveHandler*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiveHandler.java
    startLine: 15
  package: com.microsoft.azure.eventhubs
  syntax:
    content: protected PartitionReceiveHandler(final int maxEventCount)
    parameters:
    - id: maxEventCount
      type: cd225469
- uid: com.microsoft.azure.eventhubs._partition_receive_handler.setMaxEventCount(final int)
  id: setMaxEventCount(final int)
  parent: com.microsoft.azure.eventhubs._partition_receive_handler
  href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
  langs:
  - java
  name: setMaxEventCount(final int value)
  nameWithType: PartitionReceiveHandler.setMaxEventCount(final int value)
  fullName: final void com.microsoft.azure.eventhubs.PartitionReceiveHandler.setMaxEventCount(final int value)
  overload: com.microsoft.azure.eventhubs._partition_receive_handler.setMaxEventCount*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiveHandler.java
    startLine: 29
  package: com.microsoft.azure.eventhubs
  summary: >-
    <p>implementor of <xref href="com.microsoft.azure.eventhubs._partition_receive_handler.onReceive(Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false"></xref> can use this to set the limit on maximum <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s that can be received by the next <xref href="com.microsoft.azure.eventhubs._partition_receive_handler.onReceive(Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false"></xref> call</p>

    <p></p>
  syntax:
    content: protected final void setMaxEventCount(final int value)
    parameters:
    - id: value
      type: cd225469
      description: <p>maximum <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s to be received in the next <xref href="com.microsoft.azure.eventhubs._partition_receive_handler.onReceive(Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false"></xref> call </p>
    return:
      type: 3f6357ce
references:
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: com.microsoft.azure.eventhubs._partition_receive_handler.PartitionReceiveHandler*
  name: PartitionReceiveHandler
  nameWithType: PartitionReceiveHandler.PartitionReceiveHandler
  fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler.PartitionReceiveHandler
  package: com.microsoft.azure.eventhubs
- uid: 3f6357ce
  spec.java:
  - name: final void
    fullName: final void
- uid: com.microsoft.azure.eventhubs._partition_receive_handler.setMaxEventCount*
  name: setMaxEventCount
  nameWithType: PartitionReceiveHandler.setMaxEventCount
  fullName: final void com.microsoft.azure.eventhubs.PartitionReceiveHandler.setMaxEventCount
  package: com.microsoft.azure.eventhubs
- uid: 2a13b5a5com.microsoft.azure.eventhubs._event_dataa08ddfce
  spec.java:
  - name: Iterable<
    fullName: Iterable<
  - uid: com.microsoft.azure.eventhubs._event_data
    name: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    href: com.microsoft.azure.eventhubs._event_data.yml
  - name: '>'
    fullName: '>'
- uid: 5beb11ad
  spec.java:
  - name: abstract void
    fullName: abstract void
- uid: com.microsoft.azure.eventhubs._partition_receive_handler.onReceive*
  name: onReceive
  nameWithType: PartitionReceiveHandler.onReceive
  fullName: abstract void com.microsoft.azure.eventhubs.PartitionReceiveHandler.onReceive
  package: com.microsoft.azure.eventhubs
- uid: a04fafd7
  spec.java:
  - name: Throwable
    fullName: Throwable
- uid: com.microsoft.azure.eventhubs._partition_receive_handler.onError*
  name: onError
  nameWithType: PartitionReceiveHandler.onError
  fullName: abstract void com.microsoft.azure.eventhubs.PartitionReceiveHandler.onError
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.eventhubs._partition_receive_handler.getMaxEventCount()
- uid: com.microsoft.azure.eventhubs._partition_receive_handler.onReceive(Iterable<EventData>)
  parent: com.microsoft.azure.eventhubs._partition_receive_handler
  href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
  name: onReceive(Iterable<EventData> events)
  nameWithType: PartitionReceiveHandler.onReceive(Iterable<EventData> events)
  fullName: abstract void com.microsoft.azure.eventhubs.PartitionReceiveHandler.onReceive(Iterable<EventData> events)
  type: Method
  summary: >-
    <p>user should implement this method to specify the action to be performed on the received events.</p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.eventhubs._event_data
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._event_data.yml
  name: EventData
  nameWithType: EventData
  fullName: com.microsoft.azure.eventhubs.EventData
  type: Class
  summary: >-
    <p>The data structure encapsulating the Event being sent-to and received-from EventHubs. Each EventHubs partition can be visualized as a Stream of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>

    <p>Serializing a received <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> with AMQP sections other than ApplicationProperties (with primitive java types) and Data section is not supported. </p>

    <p>Here's how AMQP message sections map to <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. Here's the reference used for AMQP 1.0 specification: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><preformatted>

    i.   <xref href="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false"></xref> - AMQPMessage.ApplicationProperties section

    ii.  <xref href="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false"></xref> - if AMQPMessage.Body has Data section

    iii. <xref href="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false"></xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections

    </preformatted> While using client libraries released by Microsoft Azure EventHubs, sections (i) and (ii) alone are sufficient. Section (iii) is used for advanced scenarios, where the sending application uses third-party AMQP library to send the message to EventHubs and the receiving application uses this client library to receive <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class EventData
- uid: com.microsoft.azure.eventhubs._partition_receiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: PartitionReceiver
  nameWithType: PartitionReceiver
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver
  type: Class
  summary: >-
    <p>This is a logical representation of receiving from a EventHub partition. </p>

    <p>A <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> is tied to a ConsumerGroup + EventHub Partition combination. <itemizedlist><listitem><p>If an epoch based <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> (i.e., <xref href="com.microsoft.azure.eventhubs._partition_receiver.getEpoch()" data-throw-if-not-resolved="false"></xref> != 0) is created, EventHubs service will guarantee only 1 active receiver exists per ConsumerGroup + Partition combo. This is the recommended approach to create a <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>. </p></listitem><listitem><p>Multiple receivers per ConsumerGroup + Partition combo can be created using non-epoch receivers. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public class PartitionReceiver
- uid: com.microsoft.azure.eventhubs._partition_receiver.receive(final int)
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: receive(final int maxEventCount)
  nameWithType: PartitionReceiver.receive(final int maxEventCount)
  fullName: CompletableFuture<Iterable<EventData>> com.microsoft.azure.eventhubs.PartitionReceiver.receive(final int maxEventCount)
  type: Method
  summary: >-
    <p>Receive a batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s from an EventHub partition </p>

    <p>Sample code (sample uses sync version of the api but concept are identical): <preformatted><xref href="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false"></xref> client = <xref href="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)" data-throw-if-not-resolved="false"></xref>("__connection__");

    <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref> receiver = client.createPartitionReceiverSync("ConsumerGroup1", "1");

    Iterable{&lt;}<xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>{&gt;} receivedEvents = receiver.receiveSync();</preformatted></p>

    <p>

      <preformatted>while (true)

    {

        int batchSize = 0;

        if (receivedEvents != null)

        {

            for(EventData receivedEvent: receivedEvents)

            {

                System.out.println(String.format("Message Payload: %s", new String(receivedEvent.getBytes(), Charset.defaultCharset())));

                System.out.println(String.format("Offset: %s, SeqNo: %s, EnqueueTime: %s",

                    receivedEvent.getSystemProperties().getOffset(),

                    receivedEvent.getSystemProperties().getSequenceNumber(),

                    receivedEvent.getSystemProperties().getEnqueuedTime()));

                batchSize++;

            }

        }</preformatted>

    </p>

    <p>

      <preformatted>    System.out.println(String.format("ReceivedBatch Size: %s", batchSize));

        receivedEvents = receiver.receiveSync();

    }

    </preformatted>

    </p>

    <p></p>
  syntax:
    content: public CompletableFuture<Iterable<EventData>> receive(final int maxEventCount)
    parameters:
    - id: maxEventCount
      type: cd225469
      description: <p>maximum number of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s that this call should return </p>
    return:
      type: 5ae8a14ccom.microsoft.azure.eventhubs._event_datae7daa122
      description: <p>A completableFuture that will yield a batch of <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>'s from the partition on which this receiver is created. Returns 'null' if no <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> is present. </p>
- uid: com.microsoft.azure.eventhubs._partition_receive_handler
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
  name: PartitionReceiveHandler
  nameWithType: PartitionReceiveHandler
  fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
  type: Class
  summary: >-
    <p>A handler class for the receive operation. Use any implementation of this abstract class to specify user action when using <xref href="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false"></xref>'s setReceiveHandler().</p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler(final PartitionReceiveHandler)
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: setReceiveHandler(final PartitionReceiveHandler receiveHandler)
  nameWithType: PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler)
  fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler)
  type: Method
  summary: >-
    <p>Register a receive handler that will be called when an event is available. A <xref href="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false"></xref> is a handler that allows user to specify a callback for event processing and error handling in a receive pump model.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> setReceiveHandler(final PartitionReceiveHandler receiveHandler)
    parameters:
    - id: receiveHandler
      type: 93de0ef9com.microsoft.azure.eventhubs._partition_receive_handler
      description: <p>An implementation of <xref href="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false"></xref>. Setting this handler to <code>null</code> will stop the receive pump. </p>
    return:
      type: db03ee24
      description: <p>A completableFuture which sets receiveHandler </p>
