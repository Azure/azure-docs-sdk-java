### YamlMime:JavaMember
uid: "com.azure.storage.queue.QueueClient.receiveMessages*"
fullName: "com.azure.storage.queue.QueueClient.receiveMessages"
name: "receiveMessages"
nameWithType: "QueueClient.receiveMessages"
members:
- uid: "com.azure.storage.queue.QueueClient.receiveMessages(java.lang.Integer)"
  fullName: "com.azure.storage.queue.QueueClient.receiveMessages(Integer maxMessages)"
  name: "receiveMessages(Integer maxMessages)"
  nameWithType: "QueueClient.receiveMessages(Integer maxMessages)"
  summary: "Retrieves up to the maximum number of messages from the queue and hides them from other operations for 30 seconds.\n\n**Code Samples**\n\nReceive up to 5 messages\n\n```java\nfor (QueueMessageItem message : client.receiveMessages(5)) {\n     System.out.printf(\"Received %s and it becomes visible at %s\",\n         message.getMessageId(), message.getTimeNextVisible());\n }\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-messages"
  parameters:
  - description: "Optional. Maximum number of messages to get, if there are less messages exist in the queue\n than requested all the messages will be returned. If left empty only 1 message will be retrieved, the allowed\n range is 1 to 32 messages."
    name: "maxMessages"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<QueueMessageItem> receiveMessages(Integer maxMessages)"
  returns:
    description: "Up to <code>maxMessages</code> <xref uid=\"com.azure.storage.queue.models.QueueMessageItem\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReceiveMessageItem\"></xref> from the queue.\n Each ReceiveMessageItem contains <xref uid=\"com.azure.storage.queue.models.QueueMessageItem.getMessageId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"messageId\"></xref> and\n <xref uid=\"com.azure.storage.queue.models.QueueMessageItem.getPopReceipt()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"popReceipt\"></xref>\n used to interact with the message and other metadata about the message."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.queue.models.QueueMessageItem?alt=com.azure.storage.queue.models.QueueMessageItem&text=QueueMessageItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.queue.QueueClient.receiveMessages(java.lang.Integer,java.time.Duration,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.queue.QueueClient.receiveMessages(Integer maxMessages, Duration visibilityTimeout, Duration timeout, Context context)"
  name: "receiveMessages(Integer maxMessages, Duration visibilityTimeout, Duration timeout, Context context)"
  nameWithType: "QueueClient.receiveMessages(Integer maxMessages, Duration visibilityTimeout, Duration timeout, Context context)"
  summary: "Retrieves up to the maximum number of messages from the queue and hides them from other operations for the timeout period.\n\n**Code Samples**\n\nReceive up to 5 messages and give them a 60 second timeout period\n\n```java\nfor (QueueMessageItem message : client.receiveMessages(5, Duration.ofSeconds(60),\n     Duration.ofSeconds(1), new Context(key1, value1))) {\n     System.out.printf(\"Received %s and it becomes visible at %s\",\n         message.getMessageId(), message.getTimeNextVisible());\n }\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-messages"
  parameters:
  - description: "Optional. Maximum number of messages to get, if there are less messages exist in the queue\n than requested all the messages will be returned. If left empty only 1 message will be retrieved, the allowed\n range is 1 to 32 messages."
    name: "maxMessages"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. The timeout period for how long the message is invisible in the queue. If left\n empty the received messages will be invisible for 30 seconds. The timeout must be between 1 second and 7 days."
    name: "visibilityTimeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<QueueMessageItem> receiveMessages(Integer maxMessages, Duration visibilityTimeout, Duration timeout, Context context)"
  returns:
    description: "Up to <code>maxMessages</code> <xref uid=\"com.azure.storage.queue.models.QueueMessageItem\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DequeuedMessages\"></xref> from the queue. Each DeqeuedMessage\n contains <xref uid=\"com.azure.storage.queue.models.QueueMessageItem.getMessageId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"messageId\"></xref> and\n <xref uid=\"com.azure.storage.queue.models.QueueMessageItem.getPopReceipt()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"popReceipt\"></xref>\n used to interact with the message and other metadata about the message."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.queue.models.QueueMessageItem?alt=com.azure.storage.queue.models.QueueMessageItem&text=QueueMessageItem\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.queue"
artifact: com.azure:azure-storage-queue:12.6.0
