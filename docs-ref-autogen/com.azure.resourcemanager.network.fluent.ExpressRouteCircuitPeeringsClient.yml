### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient"
fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient"
name: "ExpressRouteCircuitPeeringsClient"
nameWithType: "ExpressRouteCircuitPeeringsClient"
summary: "An instance of this class provides access to all the operations defined in Express<wbr>Route<wbr>Circuit<wbr>Peerings<wbr>Client."
syntax: "public interface ExpressRouteCircuitPeeringsClient"
methods:
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginCreateOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  name: "beginCreateOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.beginCreateOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  summary: "Creates or updates a peering in the specified express route circuits."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to the create or update express route circuit peering operation."
    name: "peeringParameters"
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<ExpressRouteCircuitPeeringInner>,ExpressRouteCircuitPeeringInner> beginCreateOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  desc: "Creates or updates a peering in the specified express route circuits."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of peering in an ExpressRouteCircuit resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginCreateOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters, Context context)"
  name: "beginCreateOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters, Context context)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.beginCreateOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters, Context context)"
  summary: "Creates or updates a peering in the specified express route circuits."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to the create or update express route circuit peering operation."
    name: "peeringParameters"
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<ExpressRouteCircuitPeeringInner>,ExpressRouteCircuitPeeringInner> beginCreateOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters, Context context)"
  desc: "Creates or updates a peering in the specified express route circuits."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of peering in an ExpressRouteCircuit resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginCreateOrUpdateAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  name: "beginCreateOrUpdateAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.beginCreateOrUpdateAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  summary: "Creates or updates a peering in the specified express route circuits."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to the create or update express route circuit peering operation."
    name: "peeringParameters"
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<ExpressRouteCircuitPeeringInner>,ExpressRouteCircuitPeeringInner> beginCreateOrUpdateAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  desc: "Creates or updates a peering in the specified express route circuits."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of peering in an ExpressRouteCircuit resource."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginDelete(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginDelete(String resourceGroupName, String circuitName, String peeringName)"
  name: "beginDelete(String resourceGroupName, String circuitName, String peeringName)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.beginDelete(String resourceGroupName, String circuitName, String peeringName)"
  summary: "Deletes the specified peering from the specified express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String circuitName, String peeringName)"
  desc: "Deletes the specified peering from the specified express route circuit."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginDelete(String resourceGroupName, String circuitName, String peeringName, Context context)"
  name: "beginDelete(String resourceGroupName, String circuitName, String peeringName, Context context)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.beginDelete(String resourceGroupName, String circuitName, String peeringName, Context context)"
  summary: "Deletes the specified peering from the specified express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String circuitName, String peeringName, Context context)"
  desc: "Deletes the specified peering from the specified express route circuit."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginDeleteAsync(String resourceGroupName, String circuitName, String peeringName)"
  name: "beginDeleteAsync(String resourceGroupName, String circuitName, String peeringName)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.beginDeleteAsync(String resourceGroupName, String circuitName, String peeringName)"
  summary: "Deletes the specified peering from the specified express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String circuitName, String peeringName)"
  desc: "Deletes the specified peering from the specified express route circuit."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.createOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  name: "createOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.createOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  summary: "Creates or updates a peering in the specified express route circuits."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to the create or update express route circuit peering operation."
    name: "peeringParameters"
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ExpressRouteCircuitPeeringInner createOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  desc: "Creates or updates a peering in the specified express route circuits."
  returns:
    description: "peering in an ExpressRouteCircuit resource."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.createOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters, Context context)"
  name: "createOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters, Context context)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.createOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters, Context context)"
  summary: "Creates or updates a peering in the specified express route circuits."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to the create or update express route circuit peering operation."
    name: "peeringParameters"
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ExpressRouteCircuitPeeringInner createOrUpdate(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters, Context context)"
  desc: "Creates or updates a peering in the specified express route circuits."
  returns:
    description: "peering in an ExpressRouteCircuit resource."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.createOrUpdateAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  name: "createOrUpdateAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.createOrUpdateAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  summary: "Creates or updates a peering in the specified express route circuits."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to the create or update express route circuit peering operation."
    name: "peeringParameters"
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ExpressRouteCircuitPeeringInner> createOrUpdateAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  desc: "Creates or updates a peering in the specified express route circuits."
  returns:
    description: "peering in an ExpressRouteCircuit resource on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  name: "createOrUpdateWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  summary: "Creates or updates a peering in the specified express route circuits."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to the create or update express route circuit peering operation."
    name: "peeringParameters"
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)"
  desc: "Creates or updates a peering in the specified express route circuits."
  returns:
    description: "peering in an ExpressRouteCircuit resource along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.delete(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.delete(String resourceGroupName, String circuitName, String peeringName)"
  name: "delete(String resourceGroupName, String circuitName, String peeringName)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.delete(String resourceGroupName, String circuitName, String peeringName)"
  summary: "Deletes the specified peering from the specified express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String circuitName, String peeringName)"
  desc: "Deletes the specified peering from the specified express route circuit."
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.delete(String resourceGroupName, String circuitName, String peeringName, Context context)"
  name: "delete(String resourceGroupName, String circuitName, String peeringName, Context context)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.delete(String resourceGroupName, String circuitName, String peeringName, Context context)"
  summary: "Deletes the specified peering from the specified express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String circuitName, String peeringName, Context context)"
  desc: "Deletes the specified peering from the specified express route circuit."
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.deleteAsync(String resourceGroupName, String circuitName, String peeringName)"
  name: "deleteAsync(String resourceGroupName, String circuitName, String peeringName)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.deleteAsync(String resourceGroupName, String circuitName, String peeringName)"
  summary: "Deletes the specified peering from the specified express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteAsync(String resourceGroupName, String circuitName, String peeringName)"
  desc: "Deletes the specified peering from the specified express route circuit."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.deleteWithResponseAsync(String resourceGroupName, String circuitName, String peeringName)"
  name: "deleteWithResponseAsync(String resourceGroupName, String circuitName, String peeringName)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.deleteWithResponseAsync(String resourceGroupName, String circuitName, String peeringName)"
  summary: "Deletes the specified peering from the specified express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String circuitName, String peeringName)"
  desc: "Deletes the specified peering from the specified express route circuit."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.get(String resourceGroupName, String circuitName, String peeringName)"
  name: "get(String resourceGroupName, String circuitName, String peeringName)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.get(String resourceGroupName, String circuitName, String peeringName)"
  summary: "Gets the specified peering for the express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ExpressRouteCircuitPeeringInner get(String resourceGroupName, String circuitName, String peeringName)"
  desc: "Gets the specified peering for the express route circuit."
  returns:
    description: "the specified peering for the express route circuit."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.getAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.getAsync(String resourceGroupName, String circuitName, String peeringName)"
  name: "getAsync(String resourceGroupName, String circuitName, String peeringName)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.getAsync(String resourceGroupName, String circuitName, String peeringName)"
  summary: "Gets the specified peering for the express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ExpressRouteCircuitPeeringInner> getAsync(String resourceGroupName, String circuitName, String peeringName)"
  desc: "Gets the specified peering for the express route circuit."
  returns:
    description: "the specified peering for the express route circuit on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.getWithResponse(String resourceGroupName, String circuitName, String peeringName, Context context)"
  name: "getWithResponse(String resourceGroupName, String circuitName, String peeringName, Context context)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.getWithResponse(String resourceGroupName, String circuitName, String peeringName, Context context)"
  summary: "Gets the specified peering for the express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ExpressRouteCircuitPeeringInner> getWithResponse(String resourceGroupName, String circuitName, String peeringName, Context context)"
  desc: "Gets the specified peering for the express route circuit."
  returns:
    description: "the specified peering for the express route circuit along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.getWithResponseAsync(String resourceGroupName, String circuitName, String peeringName)"
  name: "getWithResponseAsync(String resourceGroupName, String circuitName, String peeringName)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.getWithResponseAsync(String resourceGroupName, String circuitName, String peeringName)"
  summary: "Gets the specified peering for the express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<ExpressRouteCircuitPeeringInner>> getWithResponseAsync(String resourceGroupName, String circuitName, String peeringName)"
  desc: "Gets the specified peering for the express route circuit."
  returns:
    description: "the specified peering for the express route circuit along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion\n     of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.list(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.list(String resourceGroupName, String circuitName)"
  name: "list(String resourceGroupName, String circuitName)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.list(String resourceGroupName, String circuitName)"
  summary: "Gets all peerings in a specified express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ExpressRouteCircuitPeeringInner> list(String resourceGroupName, String circuitName)"
  desc: "Gets all peerings in a specified express route circuit."
  returns:
    description: "all peerings in a specified express route circuit as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.list(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.list(String resourceGroupName, String circuitName, Context context)"
  name: "list(String resourceGroupName, String circuitName, Context context)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.list(String resourceGroupName, String circuitName, Context context)"
  summary: "Gets all peerings in a specified express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ExpressRouteCircuitPeeringInner> list(String resourceGroupName, String circuitName, Context context)"
  desc: "Gets all peerings in a specified express route circuit."
  returns:
    description: "all peerings in a specified express route circuit as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.listAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.listAsync(String resourceGroupName, String circuitName)"
  name: "listAsync(String resourceGroupName, String circuitName)"
  nameWithType: "ExpressRouteCircuitPeeringsClient.listAsync(String resourceGroupName, String circuitName)"
  summary: "Gets all peerings in a specified express route circuit."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the express route circuit."
    name: "circuitName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<ExpressRouteCircuitPeeringInner> listAsync(String resourceGroupName, String circuitName)"
  desc: "Gets all peerings in a specified express route circuit."
  returns:
    description: "all peerings in a specified express route circuit as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ExpressRouteCircuitPeeringsClient."
metadata: {}
package: "com.azure.resourcemanager.network.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.16.0
