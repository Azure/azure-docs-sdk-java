### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope*"
fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope"
name: "listForScope"
nameWithType: "RoleAssignmentsClient.listForScope"
members:
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(String scope)"
  name: "listForScope(String scope)"
  nameWithType: "RoleAssignmentsClient.listForScope(String scope)"
  summary: "List all role assignments that apply to a scope."
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RoleAssignmentInner> listForScope(String scope)"
  returns:
    description: "role assignment list operation result."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.listForScope(String scope, String filter, String tenantId, Context context)"
  name: "listForScope(String scope, String filter, String tenantId, Context context)"
  nameWithType: "RoleAssignmentsClient.listForScope(String scope, String filter, String tenantId, Context context)"
  summary: "List all role assignments that apply to a scope."
  parameters:
  - description: "The scope of the operation or resource. Valid scopes are: subscription (format:\n     '/subscriptions/{subscriptionId}'), resource group (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or\n     above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope\n     for the specified principal."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Tenant ID for cross-tenant request."
    name: "tenantId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<RoleAssignmentInner> listForScope(String scope, String filter, String tenantId, Context context)"
  returns:
    description: "role assignment list operation result."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleAssignmentInner&text=RoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.13.0
