### YamlMime:JavaMember
uid: "com.azure.resourcemanager.appservice.models.WebApp.DefinitionStages.WithContainerImage.withPrivateRegistryImage*"
fullName: "com.azure.resourcemanager.appservice.models.WebApp.DefinitionStages.WithContainerImage.withPrivateRegistryImage"
name: "withPrivateRegistryImage"
nameWithType: "WebApp.DefinitionStages.WithContainerImage.withPrivateRegistryImage"
members:
- uid: "com.azure.resourcemanager.appservice.models.WebApp.DefinitionStages.WithContainerImage.withPrivateRegistryImage(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.models.WebApp.DefinitionStages.WithContainerImage.withPrivateRegistryImage(String imageAndTag, String serverUrl)"
  name: "withPrivateRegistryImage(String imageAndTag, String serverUrl)"
  nameWithType: "WebApp.DefinitionStages.WithContainerImage.withPrivateRegistryImage(String imageAndTag, String serverUrl)"
  summary: "Specifies the docker container image to be one from a private registry."
  parameters:
  - description: "image and optional tag (eg 'image:tag')"
    name: "imageAndTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the URL to the private registry server"
    name: "serverUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WebApp.DefinitionStages.WithCredentials withPrivateRegistryImage(String imageAndTag, String serverUrl)"
  returns:
    description: "the next stage of the definition"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.WebApp.DefinitionStages.WithCredentials?alt=com.azure.resourcemanager.appservice.models.WebApp.DefinitionStages.WithCredentials&text=WithCredentials\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.appservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
