### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cognitiveservices.language.luis.runtime.Predictions.resolve()
  name: resolve()
  nameWithType: Predictions.resolve()
  returns:
    description: <p>the first stage of the resolve call </p>
    type: <xref href="PredictionsResolveDefinitionStages.WithAppId?alt=PredictionsResolveDefinitionStages.WithAppId&text=PredictionsResolveDefinitionStages.WithAppId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets predictions for a given utterance, in the form of intents and entities. The current maximum query size is 500 characters.</p>

    <p></p>
  syntax: public PredictionsResolveDefinitionStages.WithAppId resolve()
  uid: com.microsoft.azure.cognitiveservices.language.luis.runtime.Predictions.resolve()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.runtime.Predictions.resolve(String appId, String query, ResolveOptionalParameter resolveOptionalParameter)
  name: resolve(String appId, String query, ResolveOptionalParameter resolveOptionalParameter)
  nameWithType: Predictions.resolve(String appId, String query, ResolveOptionalParameter resolveOptionalParameter)
  parameters:
  - description: <p>The LUIS application ID (Guid). </p>
    name: appId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The utterance to predict. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: resolveOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.runtime.models.ResolveOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.runtime.models.ResolveOptionalParameter&text=ResolveOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="APIErrorException?alt=APIErrorException&text=APIErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the LuisResult object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.runtime.models.LuisResult?alt=com.microsoft.azure.cognitiveservices.language.luis.runtime.models.LuisResult&text=LuisResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets predictions for a given utterance, in the form of intents and entities. The current maximum query size is 500 characters.</p>

    <p></p>
  syntax: public LuisResult resolve(String appId, String query, ResolveOptionalParameter resolveOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.runtime.Predictions.resolve(String,String,ResolveOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.runtime.Predictions.resolveAsync(String appId, String query, ResolveOptionalParameter resolveOptionalParameter)
  name: resolveAsync(String appId, String query, ResolveOptionalParameter resolveOptionalParameter)
  nameWithType: Predictions.resolveAsync(String appId, String query, ResolveOptionalParameter resolveOptionalParameter)
  parameters:
  - description: <p>The LUIS application ID (Guid). </p>
    name: appId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The utterance to predict. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: resolveOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.runtime.models.ResolveOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.runtime.models.ResolveOptionalParameter&text=ResolveOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the LuisResult object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.runtime.models.LuisResult?alt=com.microsoft.azure.cognitiveservices.language.luis.runtime.models.LuisResult&text=LuisResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets predictions for a given utterance, in the form of intents and entities. The current maximum query size is 500 characters.</p>

    <p></p>
  syntax: public Observable<LuisResult> resolveAsync(String appId, String query, ResolveOptionalParameter resolveOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.runtime.Predictions.resolveAsync(String,String,ResolveOptionalParameter)
nameWithType: Predictions
syntax: public interface Predictions
type: interface
uid: com.microsoft.azure.cognitiveservices.language.luis.runtime.Predictions
fullName: com.microsoft.azure.cognitiveservices.language.luis.runtime.Predictions
name: Predictions
package: com.microsoft.azure.cognitiveservices.language.luis.runtime
summary: <p>An instance of this class provides access to all the operations defined in Predictions. </p>
metadata: {}
