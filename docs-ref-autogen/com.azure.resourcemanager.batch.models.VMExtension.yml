### YamlMime:JavaType
uid: "com.azure.resourcemanager.batch.models.VMExtension"
fullName: "com.azure.resourcemanager.batch.models.VMExtension"
name: "VMExtension"
nameWithType: "VMExtension"
summary: "The configuration for virtual machine extensions."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VMExtension"
constructors:
- uid: "com.azure.resourcemanager.batch.models.VMExtension.VMExtension()"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.VMExtension()"
  name: "VMExtension()"
  nameWithType: "VMExtension.VMExtension()"
  syntax: "public VMExtension()"
methods:
- uid: "com.azure.resourcemanager.batch.models.VMExtension.autoUpgradeMinorVersion()"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.autoUpgradeMinorVersion()"
  name: "autoUpgradeMinorVersion()"
  nameWithType: "VMExtension.autoUpgradeMinorVersion()"
  summary: "Get the auto<wbr>Upgrade<wbr>Minor<wbr>Version property: Indicates whether the extension should use a newer minor version if one is available at deployment time."
  syntax: "public Boolean autoUpgradeMinorVersion()"
  desc: "Get the autoUpgradeMinorVersion property: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
  returns:
    description: "the autoUpgradeMinorVersion value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.name()"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.name()"
  name: "name()"
  nameWithType: "VMExtension.name()"
  summary: "Get the name property: The name of the virtual machine extension."
  syntax: "public String name()"
  desc: "Get the name property: The name of the virtual machine extension."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.protectedSettings()"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.protectedSettings()"
  name: "protectedSettings()"
  nameWithType: "VMExtension.protectedSettings()"
  summary: "Get the protected<wbr>Settings property: The extension can contain either protected<wbr>Settings or protected<wbr>Settings<wbr>From<wbr>Key<wbr>Vault or no protected settings at all."
  syntax: "public Object protectedSettings()"
  desc: "Get the protectedSettings property: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
  returns:
    description: "the protectedSettings value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.provisionAfterExtensions()"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.provisionAfterExtensions()"
  name: "provisionAfterExtensions()"
  nameWithType: "VMExtension.provisionAfterExtensions()"
  summary: "Get the provision<wbr>After<wbr>Extensions property: The collection of extension names."
  syntax: "public List<String> provisionAfterExtensions()"
  desc: "Get the provisionAfterExtensions property: The collection of extension names. Collection of extension names after which this extension needs to be provisioned."
  returns:
    description: "the provisionAfterExtensions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.publisher()"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.publisher()"
  name: "publisher()"
  nameWithType: "VMExtension.publisher()"
  summary: "Get the publisher property: The name of the extension handler publisher."
  syntax: "public String publisher()"
  desc: "Get the publisher property: The name of the extension handler publisher."
  returns:
    description: "the publisher value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.settings()"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.settings()"
  name: "settings()"
  nameWithType: "VMExtension.settings()"
  summary: "Get the settings property: Any object."
  syntax: "public Object settings()"
  desc: "Get the settings property: Any object."
  returns:
    description: "the settings value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.type()"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.type()"
  name: "type()"
  nameWithType: "VMExtension.type()"
  summary: "Get the type property: The type of the extensions."
  syntax: "public String type()"
  desc: "Get the type property: The type of the extensions."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.typeHandlerVersion()"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.typeHandlerVersion()"
  name: "typeHandlerVersion()"
  nameWithType: "VMExtension.typeHandlerVersion()"
  summary: "Get the type<wbr>Handler<wbr>Version property: The version of script handler."
  syntax: "public String typeHandlerVersion()"
  desc: "Get the typeHandlerVersion property: The version of script handler."
  returns:
    description: "the typeHandlerVersion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.validate()"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.validate()"
  name: "validate()"
  nameWithType: "VMExtension.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.batch.models.VMExtension.withAutoUpgradeMinorVersion(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion)"
  name: "withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion)"
  nameWithType: "VMExtension.withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion)"
  summary: "Set the auto<wbr>Upgrade<wbr>Minor<wbr>Version property: Indicates whether the extension should use a newer minor version if one is available at deployment time."
  parameters:
  - description: "the autoUpgradeMinorVersion value to set."
    name: "autoUpgradeMinorVersion"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VMExtension withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion)"
  desc: "Set the autoUpgradeMinorVersion property: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
  returns:
    description: "the VMExtension object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VMExtension?alt=com.azure.resourcemanager.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.withName(String name)"
  name: "withName(String name)"
  nameWithType: "VMExtension.withName(String name)"
  summary: "Set the name property: The name of the virtual machine extension."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VMExtension withName(String name)"
  desc: "Set the name property: The name of the virtual machine extension."
  returns:
    description: "the VMExtension object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VMExtension?alt=com.azure.resourcemanager.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.withProtectedSettings(java.lang.Object)"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.withProtectedSettings(Object protectedSettings)"
  name: "withProtectedSettings(Object protectedSettings)"
  nameWithType: "VMExtension.withProtectedSettings(Object protectedSettings)"
  summary: "Set the protected<wbr>Settings property: The extension can contain either protected<wbr>Settings or protected<wbr>Settings<wbr>From<wbr>Key<wbr>Vault or no protected settings at all."
  parameters:
  - description: "the protectedSettings value to set."
    name: "protectedSettings"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VMExtension withProtectedSettings(Object protectedSettings)"
  desc: "Set the protectedSettings property: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
  returns:
    description: "the VMExtension object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VMExtension?alt=com.azure.resourcemanager.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.withProvisionAfterExtensions(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.withProvisionAfterExtensions(List<String> provisionAfterExtensions)"
  name: "withProvisionAfterExtensions(List<String> provisionAfterExtensions)"
  nameWithType: "VMExtension.withProvisionAfterExtensions(List<String> provisionAfterExtensions)"
  summary: "Set the provision<wbr>After<wbr>Extensions property: The collection of extension names."
  parameters:
  - description: "the provisionAfterExtensions value to set."
    name: "provisionAfterExtensions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VMExtension withProvisionAfterExtensions(List<String> provisionAfterExtensions)"
  desc: "Set the provisionAfterExtensions property: The collection of extension names. Collection of extension names after which this extension needs to be provisioned."
  returns:
    description: "the VMExtension object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VMExtension?alt=com.azure.resourcemanager.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.withPublisher(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.withPublisher(String publisher)"
  name: "withPublisher(String publisher)"
  nameWithType: "VMExtension.withPublisher(String publisher)"
  summary: "Set the publisher property: The name of the extension handler publisher."
  parameters:
  - description: "the publisher value to set."
    name: "publisher"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VMExtension withPublisher(String publisher)"
  desc: "Set the publisher property: The name of the extension handler publisher."
  returns:
    description: "the VMExtension object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VMExtension?alt=com.azure.resourcemanager.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.withSettings(java.lang.Object)"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.withSettings(Object settings)"
  name: "withSettings(Object settings)"
  nameWithType: "VMExtension.withSettings(Object settings)"
  summary: "Set the settings property: Any object."
  parameters:
  - description: "the settings value to set."
    name: "settings"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VMExtension withSettings(Object settings)"
  desc: "Set the settings property: Any object."
  returns:
    description: "the VMExtension object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VMExtension?alt=com.azure.resourcemanager.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.withType(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.withType(String type)"
  name: "withType(String type)"
  nameWithType: "VMExtension.withType(String type)"
  summary: "Set the type property: The type of the extensions."
  parameters:
  - description: "the type value to set."
    name: "type"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VMExtension withType(String type)"
  desc: "Set the type property: The type of the extensions."
  returns:
    description: "the VMExtension object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VMExtension?alt=com.azure.resourcemanager.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VMExtension.withTypeHandlerVersion(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.models.VMExtension.withTypeHandlerVersion(String typeHandlerVersion)"
  name: "withTypeHandlerVersion(String typeHandlerVersion)"
  nameWithType: "VMExtension.withTypeHandlerVersion(String typeHandlerVersion)"
  summary: "Set the type<wbr>Handler<wbr>Version property: The version of script handler."
  parameters:
  - description: "the typeHandlerVersion value to set."
    name: "typeHandlerVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VMExtension withTypeHandlerVersion(String typeHandlerVersion)"
  desc: "Set the typeHandlerVersion property: The version of script handler."
  returns:
    description: "the VMExtension object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VMExtension?alt=com.azure.resourcemanager.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The configuration for virtual machine extensions."
metadata: {}
package: "com.azure.resourcemanager.batch.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batch:1.0.0
