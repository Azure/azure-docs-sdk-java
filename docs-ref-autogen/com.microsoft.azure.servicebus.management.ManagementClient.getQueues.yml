### YamlMime:JavaMember
uid: "com.microsoft.azure.servicebus.management.ManagementClient.getQueues*"
fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getQueues"
name: "getQueues"
nameWithType: "ManagementClient.getQueues"
members:
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getQueues()"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getQueues()"
  name: "getQueues()"
  nameWithType: "ManagementClient.getQueues()"
  summary: "Retrieves the list of queues present in the namespace."
  syntax: "public List<QueueDescription> getQueues()"
  exceptions:
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "the first 100 queues."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.management.ManagementClient.getQueues(int,int)"
  fullName: "com.microsoft.azure.servicebus.management.ManagementClient.getQueues(int count, int skip)"
  name: "getQueues(int count, int skip)"
  nameWithType: "ManagementClient.getQueues(int count, int skip)"
  summary: "Retrieves the list of queues present in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities."
  parameters:
  - description: "- The number of queues to fetch. Defaults to 100. Maximum value allowed is 100."
    name: "count"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The number of queues to skip. Defaults to 0. Cannot be negative."
    name: "skip"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<QueueDescription> getQueues(int count, int skip)"
  exceptions:
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  - description: "- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "the list of queues."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.servicebus.management"
artifact: com.microsoft.azure:azure-servicebus:3.6.0
