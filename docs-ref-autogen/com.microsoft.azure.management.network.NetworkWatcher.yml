### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.network.NetworkWatcher.checkConnectivity()
  name: checkConnectivity()
  nameWithType: NetworkWatcher.checkConnectivity()
  returns:
    description: <p>a stage to specify parameters for connectivity check </p>
    type: <xref href="ConnectivityCheck.DefinitionStages.ToDestination?alt=ConnectivityCheck.DefinitionStages.ToDestination&text=ConnectivityCheck.DefinitionStages.ToDestination" data-throw-if-not-resolved="False"/>
  summary: <p>Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another virtual machine or an arbitrary remote server. </p>
  syntax: public ConnectivityCheck.DefinitionStages.ToDestination checkConnectivity()
  uid: com.microsoft.azure.management.network.NetworkWatcher.checkConnectivity()
- fullName: com.microsoft.azure.management.network.NetworkWatcher.getFlowLogSettings(String nsgId)
  name: getFlowLogSettings(String nsgId)
  nameWithType: NetworkWatcher.getFlowLogSettings(String nsgId)
  parameters:
  - description: <p>the name of the target resource group to get flow log status for </p>
    name: nsgId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>information on the configuration of flow log </p>
    type: <xref href="com.microsoft.azure.management.network.FlowLogSettings?alt=com.microsoft.azure.management.network.FlowLogSettings&text=FlowLogSettings" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the information on the configuration of flow log. </p>
  syntax: public FlowLogSettings getFlowLogSettings(String nsgId)
  uid: com.microsoft.azure.management.network.NetworkWatcher.getFlowLogSettings(String)
- fullName: com.microsoft.azure.management.network.NetworkWatcher.getFlowLogSettingsAsync(String nsgId)
  name: getFlowLogSettingsAsync(String nsgId)
  nameWithType: NetworkWatcher.getFlowLogSettingsAsync(String nsgId)
  parameters:
  - description: <p>the name of the target resource group to get flow log status for </p>
    name: nsgId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>information on the configuration of flow log </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.network.FlowLogSettings?alt=com.microsoft.azure.management.network.FlowLogSettings&text=FlowLogSettings" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Gets the information on the configuration of flow log asynchronously. </p>
  syntax: public Observable<FlowLogSettings> getFlowLogSettingsAsync(String nsgId)
  uid: com.microsoft.azure.management.network.NetworkWatcher.getFlowLogSettingsAsync(String)
- fullName: com.microsoft.azure.management.network.NetworkWatcher.getSecurityGroupView(String vmId)
  name: getSecurityGroupView(String vmId)
  nameWithType: NetworkWatcher.getSecurityGroupView(String vmId)
  parameters:
  - description: <p>ID of the target VM </p>
    name: vmId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the configured and effective security group rules on the specified VM </p>
    type: <xref href="com.microsoft.azure.management.network.SecurityGroupView?alt=com.microsoft.azure.management.network.SecurityGroupView&text=SecurityGroupView" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the configured and effective security group rules on the specified VM. </p>
  syntax: public SecurityGroupView getSecurityGroupView(String vmId)
  uid: com.microsoft.azure.management.network.NetworkWatcher.getSecurityGroupView(String)
- fullName: com.microsoft.azure.management.network.NetworkWatcher.getSecurityGroupViewAsync(String vmId)
  name: getSecurityGroupViewAsync(String vmId)
  nameWithType: NetworkWatcher.getSecurityGroupViewAsync(String vmId)
  parameters:
  - description: <p>ID of the target VM </p>
    name: vmId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the configured and effective security group rules on the specified VM </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.network.SecurityGroupView?alt=com.microsoft.azure.management.network.SecurityGroupView&text=SecurityGroupView" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Gets the configured and effective security group rules on the specified VM asynchronously. </p>
  syntax: public Observable<SecurityGroupView> getSecurityGroupViewAsync(String vmId)
  uid: com.microsoft.azure.management.network.NetworkWatcher.getSecurityGroupViewAsync(String)
- fullName: com.microsoft.azure.management.network.NetworkWatcher.getTopology(String targetResourceGroup)
  name: getTopology(String targetResourceGroup)
  nameWithType: NetworkWatcher.getTopology(String targetResourceGroup)
  parameters:
  - description: <p>the name of the target resource group to perform getTopology on </p>
    name: targetResourceGroup
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>current network topology by resource group </p>
    type: <xref href="com.microsoft.azure.management.network.Topology?alt=com.microsoft.azure.management.network.Topology&text=Topology" data-throw-if-not-resolved="False"/>
  summary: <p>Gets network topology of a given resource group. </p>
  syntax: public Topology getTopology(String targetResourceGroup)
  uid: com.microsoft.azure.management.network.NetworkWatcher.getTopology(String)
- fullName: com.microsoft.azure.management.network.NetworkWatcher.getTopologyAsync(String targetResourceGroup)
  name: getTopologyAsync(String targetResourceGroup)
  nameWithType: NetworkWatcher.getTopologyAsync(String targetResourceGroup)
  parameters:
  - description: <p>the name of the target resource group to perform getTopology on </p>
    name: targetResourceGroup
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>current network topology by resource group </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.network.Topology?alt=com.microsoft.azure.management.network.Topology&text=Topology" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Gets network topology of a given resource group asynchronously. </p>
  syntax: public Observable<Topology> getTopologyAsync(String targetResourceGroup)
  uid: com.microsoft.azure.management.network.NetworkWatcher.getTopologyAsync(String)
- fullName: com.microsoft.azure.management.network.NetworkWatcher.nextHop()
  name: nextHop()
  nameWithType: NetworkWatcher.nextHop()
  returns:
    description: <p>a stage to specify parameters for next hop </p>
    type: <xref href="NextHop.DefinitionStages.WithTargetResource?alt=NextHop.DefinitionStages.WithTargetResource&text=NextHop.DefinitionStages.WithTargetResource" data-throw-if-not-resolved="False"/>
  summary: <p>First step specifying the parameters to get next hop for the VM. </p>
  syntax: public NextHop.DefinitionStages.WithTargetResource nextHop()
  uid: com.microsoft.azure.management.network.NetworkWatcher.nextHop()
- fullName: com.microsoft.azure.management.network.NetworkWatcher.packetCaptures()
  name: packetCaptures()
  nameWithType: NetworkWatcher.packetCaptures()
  returns:
    description: <p>entry point to manage packet captures associated with network watcher </p>
    type: <xref href="com.microsoft.azure.management.network.PacketCaptures?alt=com.microsoft.azure.management.network.PacketCaptures&text=PacketCaptures" data-throw-if-not-resolved="False"/>
  syntax: public PacketCaptures packetCaptures()
  uid: com.microsoft.azure.management.network.NetworkWatcher.packetCaptures()
- fullName: com.microsoft.azure.management.network.NetworkWatcher.verifyIPFlow()
  name: verifyIPFlow()
  nameWithType: NetworkWatcher.verifyIPFlow()
  returns:
    description: <p>a stage to specify parameters for ip flow verification </p>
    type: <xref href="VerificationIPFlow.DefinitionStages.WithTargetResource?alt=VerificationIPFlow.DefinitionStages.WithTargetResource&text=VerificationIPFlow.DefinitionStages.WithTargetResource" data-throw-if-not-resolved="False"/>
  summary: <p>Verify IP flow from the specified VM to a location given the currently configured NSG rules. </p>
  syntax: public VerificationIPFlow.DefinitionStages.WithTargetResource verifyIPFlow()
  uid: com.microsoft.azure.management.network.NetworkWatcher.verifyIPFlow()
nameWithType: NetworkWatcher
syntax: public interface NetworkWatcher extends GroupableResource<NetworkManager, NetworkWatcherInner>,Refreshable<NetworkWatcher>,Updatable<NetworkWatcher.Update>
type: interface
uid: com.microsoft.azure.management.network.NetworkWatcher
fullName: com.microsoft.azure.management.network.NetworkWatcher
name: NetworkWatcher
package: com.microsoft.azure.management.network
summary: <p>Entry point for Network Watcher API in Azure. </p>
metadata: {}
