### YamlMime:JavaMember
nameWithType: TopicClient.peek
type: method
members:
- fullName: com.microsoft.azure.servicebus.TopicClient.peek()
  name: peek()
  nameWithType: TopicClient.peek()
  overridden: com.microsoft.azure.servicebus.IMessageBrowser.peek()
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if peek failed </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
    type: <xref href="com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>reads next the active message without changing the state of the receiver or the message source. The first call to <xref uid="com.microsoft.azure.servicebus.IMessageBrowser.peek()" data-throw-if-not-resolved="false">IMessageBrowser#peek()</xref> fetches the first active message for this receiver. Each subsequent call fetches the subsequent message in the entity.</p>

    <p></p>
  syntax: public IMessage peek()
  uid: com.microsoft.azure.servicebus.TopicClient.peek()
- fullName: com.microsoft.azure.servicebus.TopicClient.peek(long fromSequenceNumber)
  name: peek(long fromSequenceNumber)
  nameWithType: TopicClient.peek(long fromSequenceNumber)
  overridden: com.microsoft.azure.servicebus.IMessageBrowser.peek(long)
  parameters:
  - description: <p>The sequence number from where to read the message. </p>
    name: fromSequenceNumber
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if peek failed </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false">Message</xref> peeked </p>
    type: <xref href="com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reads next the active message without changing the state of the receiver or the message source.</p>

    <p></p>
  syntax: public IMessage peek(long fromSequenceNumber)
  uid: com.microsoft.azure.servicebus.TopicClient.peek(long)
uid: com.microsoft.azure.servicebus.TopicClient.peek*
fullName: com.microsoft.azure.servicebus.TopicClient.peek()
name: peek()
package: com.microsoft.azure.servicebus
metadata: {}
