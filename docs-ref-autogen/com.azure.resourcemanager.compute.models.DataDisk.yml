### YamlMime:JavaType
uid: "com.azure.resourcemanager.compute.models.DataDisk"
fullName: "com.azure.resourcemanager.compute.models.DataDisk"
name: "DataDisk"
nameWithType: "DataDisk"
summary: "Describes a data disk."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class DataDisk"
constructors:
- uid: "com.azure.resourcemanager.compute.models.DataDisk.DataDisk()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.DataDisk()"
  name: "DataDisk()"
  nameWithType: "DataDisk.DataDisk()"
  syntax: "public DataDisk()"
methods:
- uid: "com.azure.resourcemanager.compute.models.DataDisk.caching()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.caching()"
  name: "caching()"
  nameWithType: "DataDisk.caching()"
  summary: "Get the caching property: Specifies the caching requirements."
  syntax: "public CachingTypes caching()"
  desc: "Get the caching property: Specifies the caching requirements. <br><br> Possible values are: <br><br> \\*\\*None\\*\\* <br><br> \\*\\*ReadOnly\\*\\* <br><br> \\*\\*ReadWrite\\*\\* <br><br> Default: \\*\\*None for Standard storage. ReadOnly for Premium storage\\*\\*."
  returns:
    description: "the caching value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CachingTypes?alt=com.azure.resourcemanager.compute.models.CachingTypes&text=CachingTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.createOption()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.createOption()"
  name: "createOption()"
  nameWithType: "DataDisk.createOption()"
  summary: "Get the create<wbr>Option property: Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> \\*\\*Attach\\*\\* \\\\u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> \\*\\*From<wbr>Image\\*\\* \\\\u2013 This value is used when you are using an image to create the virtual machine."
  syntax: "public DiskCreateOptionTypes createOption()"
  desc: "Get the createOption property: Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> \\*\\*Attach\\*\\* \\\\u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> \\*\\*FromImage\\*\\* \\\\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described."
  returns:
    description: "the createOption value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskCreateOptionTypes?alt=com.azure.resourcemanager.compute.models.DiskCreateOptionTypes&text=DiskCreateOptionTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.deleteOption()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.deleteOption()"
  name: "deleteOption()"
  nameWithType: "DataDisk.deleteOption()"
  summary: "Get the delete<wbr>Option property: Specifies whether data disk should be deleted or detached upon VM deletion.<br><br> Possible values: <br><br> \\*\\*Delete\\*\\* If this value is used, the data disk is deleted when VM is deleted.<br><br> \\*\\*Detach\\*\\* If this value is used, the data disk is retained after VM is deleted.<br><br> The default value is set to \\*\\*detach\\*\\*."
  syntax: "public DiskDeleteOptionTypes deleteOption()"
  desc: "Get the deleteOption property: Specifies whether data disk should be deleted or detached upon VM deletion.<br><br> Possible values: <br><br> \\*\\*Delete\\*\\* If this value is used, the data disk is deleted when VM is deleted.<br><br> \\*\\*Detach\\*\\* If this value is used, the data disk is retained after VM is deleted.<br><br> The default value is set to \\*\\*detach\\*\\*."
  returns:
    description: "the deleteOption value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskDeleteOptionTypes?alt=com.azure.resourcemanager.compute.models.DiskDeleteOptionTypes&text=DiskDeleteOptionTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.detachOption()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.detachOption()"
  name: "detachOption()"
  nameWithType: "DataDisk.detachOption()"
  summary: "Get the detach<wbr>Option property: Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine."
  syntax: "public DiskDetachOptionTypes detachOption()"
  desc: "Get the detachOption property: Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: \\*\\*ForceDetach\\*\\*. <br><br> detachOption: \\*\\*ForceDetach\\*\\* is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. <br><br> This feature is still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to 'true' along with setting detachOption: 'ForceDetach'."
  returns:
    description: "the detachOption value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskDetachOptionTypes?alt=com.azure.resourcemanager.compute.models.DiskDetachOptionTypes&text=DiskDetachOptionTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.diskIopsReadWrite()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.diskIopsReadWrite()"
  name: "diskIopsReadWrite()"
  nameWithType: "DataDisk.diskIopsReadWrite()"
  summary: "Get the disk<wbr>Iops<wbr>Read<wbr>Write property: Specifies the Read-Write IOPS for the managed disk when Storage<wbr>Account<wbr>Type is UltraSSD\\_LRS."
  syntax: "public Long diskIopsReadWrite()"
  desc: "Get the diskIopsReadWrite property: Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD\\_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set."
  returns:
    description: "the diskIopsReadWrite value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.diskMBpsReadWrite()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.diskMBpsReadWrite()"
  name: "diskMBpsReadWrite()"
  nameWithType: "DataDisk.diskMBpsReadWrite()"
  summary: "Get the disk<wbr>MBps<wbr>Read<wbr>Write property: Specifies the bandwidth in MB per second for the managed disk when Storage<wbr>Account<wbr>Type is UltraSSD\\_LRS."
  syntax: "public Long diskMBpsReadWrite()"
  desc: "Get the diskMBpsReadWrite property: Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD\\_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set."
  returns:
    description: "the diskMBpsReadWrite value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.diskSizeGB()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.diskSizeGB()"
  name: "diskSizeGB()"
  nameWithType: "DataDisk.diskSizeGB()"
  summary: "Get the disk<wbr>SizeGB property: Specifies the size of an empty data disk in gigabytes."
  syntax: "public Integer diskSizeGB()"
  desc: "Get the diskSizeGB property: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."
  returns:
    description: "the diskSizeGB value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.image()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.image()"
  name: "image()"
  nameWithType: "DataDisk.image()"
  summary: "Get the image property: The source user image virtual hard disk."
  syntax: "public VirtualHardDisk image()"
  desc: "Get the image property: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist."
  returns:
    description: "the image value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.VirtualHardDisk?alt=com.azure.resourcemanager.compute.models.VirtualHardDisk&text=VirtualHardDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.lun()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.lun()"
  name: "lun()"
  nameWithType: "DataDisk.lun()"
  summary: "Get the lun property: Specifies the logical unit number of the data disk."
  syntax: "public int lun()"
  desc: "Get the lun property: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM."
  returns:
    description: "the lun value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.managedDisk()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.managedDisk()"
  name: "managedDisk()"
  nameWithType: "DataDisk.managedDisk()"
  summary: "Get the managed<wbr>Disk property: The managed disk parameters."
  syntax: "public ManagedDiskParameters managedDisk()"
  desc: "Get the managedDisk property: The managed disk parameters."
  returns:
    description: "the managedDisk value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ManagedDiskParameters?alt=com.azure.resourcemanager.compute.models.ManagedDiskParameters&text=ManagedDiskParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.name()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.name()"
  name: "name()"
  nameWithType: "DataDisk.name()"
  summary: "Get the name property: The disk name."
  syntax: "public String name()"
  desc: "Get the name property: The disk name."
  returns:
    description: "the name value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.toBeDetached()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.toBeDetached()"
  name: "toBeDetached()"
  nameWithType: "DataDisk.toBeDetached()"
  summary: "Get the to<wbr>BeDetached property: Specifies whether the data disk is in process of detachment from the Virtual<wbr>Machine/Virtual<wbr>Machine<wbr>Scaleset."
  syntax: "public Boolean toBeDetached()"
  desc: "Get the toBeDetached property: Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset."
  returns:
    description: "the toBeDetached value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.validate()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.validate()"
  name: "validate()"
  nameWithType: "DataDisk.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.compute.models.DataDisk.vhd()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.vhd()"
  name: "vhd()"
  nameWithType: "DataDisk.vhd()"
  summary: "Get the vhd property: The virtual hard disk."
  syntax: "public VirtualHardDisk vhd()"
  desc: "Get the vhd property: The virtual hard disk."
  returns:
    description: "the vhd value."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.VirtualHardDisk?alt=com.azure.resourcemanager.compute.models.VirtualHardDisk&text=VirtualHardDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.withCaching(com.azure.resourcemanager.compute.models.CachingTypes)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.withCaching(CachingTypes caching)"
  name: "withCaching(CachingTypes caching)"
  nameWithType: "DataDisk.withCaching(CachingTypes caching)"
  summary: "Set the caching property: Specifies the caching requirements."
  parameters:
  - description: "the caching value to set."
    name: "caching"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.CachingTypes?alt=com.azure.resourcemanager.compute.models.CachingTypes&text=CachingTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withCaching(CachingTypes caching)"
  desc: "Set the caching property: Specifies the caching requirements. <br><br> Possible values are: <br><br> \\*\\*None\\*\\* <br><br> \\*\\*ReadOnly\\*\\* <br><br> \\*\\*ReadWrite\\*\\* <br><br> Default: \\*\\*None for Standard storage. ReadOnly for Premium storage\\*\\*."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisk?alt=com.azure.resourcemanager.compute.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.withCreateOption(com.azure.resourcemanager.compute.models.DiskCreateOptionTypes)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.withCreateOption(DiskCreateOptionTypes createOption)"
  name: "withCreateOption(DiskCreateOptionTypes createOption)"
  nameWithType: "DataDisk.withCreateOption(DiskCreateOptionTypes createOption)"
  summary: "Set the create<wbr>Option property: Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> \\*\\*Attach\\*\\* \\\\u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> \\*\\*From<wbr>Image\\*\\* \\\\u2013 This value is used when you are using an image to create the virtual machine."
  parameters:
  - description: "the createOption value to set."
    name: "createOption"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskCreateOptionTypes?alt=com.azure.resourcemanager.compute.models.DiskCreateOptionTypes&text=DiskCreateOptionTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withCreateOption(DiskCreateOptionTypes createOption)"
  desc: "Set the createOption property: Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> \\*\\*Attach\\*\\* \\\\u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> \\*\\*FromImage\\*\\* \\\\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisk?alt=com.azure.resourcemanager.compute.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.withDeleteOption(com.azure.resourcemanager.compute.models.DiskDeleteOptionTypes)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.withDeleteOption(DiskDeleteOptionTypes deleteOption)"
  name: "withDeleteOption(DiskDeleteOptionTypes deleteOption)"
  nameWithType: "DataDisk.withDeleteOption(DiskDeleteOptionTypes deleteOption)"
  summary: "Set the delete<wbr>Option property: Specifies whether data disk should be deleted or detached upon VM deletion.<br><br> Possible values: <br><br> \\*\\*Delete\\*\\* If this value is used, the data disk is deleted when VM is deleted.<br><br> \\*\\*Detach\\*\\* If this value is used, the data disk is retained after VM is deleted.<br><br> The default value is set to \\*\\*detach\\*\\*."
  parameters:
  - description: "the deleteOption value to set."
    name: "deleteOption"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskDeleteOptionTypes?alt=com.azure.resourcemanager.compute.models.DiskDeleteOptionTypes&text=DiskDeleteOptionTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withDeleteOption(DiskDeleteOptionTypes deleteOption)"
  desc: "Set the deleteOption property: Specifies whether data disk should be deleted or detached upon VM deletion.<br><br> Possible values: <br><br> \\*\\*Delete\\*\\* If this value is used, the data disk is deleted when VM is deleted.<br><br> \\*\\*Detach\\*\\* If this value is used, the data disk is retained after VM is deleted.<br><br> The default value is set to \\*\\*detach\\*\\*."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisk?alt=com.azure.resourcemanager.compute.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.withDetachOption(com.azure.resourcemanager.compute.models.DiskDetachOptionTypes)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.withDetachOption(DiskDetachOptionTypes detachOption)"
  name: "withDetachOption(DiskDetachOptionTypes detachOption)"
  nameWithType: "DataDisk.withDetachOption(DiskDetachOptionTypes detachOption)"
  summary: "Set the detach<wbr>Option property: Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine."
  parameters:
  - description: "the detachOption value to set."
    name: "detachOption"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DiskDetachOptionTypes?alt=com.azure.resourcemanager.compute.models.DiskDetachOptionTypes&text=DiskDetachOptionTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withDetachOption(DiskDetachOptionTypes detachOption)"
  desc: "Set the detachOption property: Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: \\*\\*ForceDetach\\*\\*. <br><br> detachOption: \\*\\*ForceDetach\\*\\* is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. <br><br> This feature is still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to 'true' along with setting detachOption: 'ForceDetach'."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisk?alt=com.azure.resourcemanager.compute.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.withDiskSizeGB(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.withDiskSizeGB(Integer diskSizeGB)"
  name: "withDiskSizeGB(Integer diskSizeGB)"
  nameWithType: "DataDisk.withDiskSizeGB(Integer diskSizeGB)"
  summary: "Set the disk<wbr>SizeGB property: Specifies the size of an empty data disk in gigabytes."
  parameters:
  - description: "the diskSizeGB value to set."
    name: "diskSizeGB"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public DataDisk withDiskSizeGB(Integer diskSizeGB)"
  desc: "Set the diskSizeGB property: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisk?alt=com.azure.resourcemanager.compute.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.withImage(com.azure.resourcemanager.compute.models.VirtualHardDisk)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.withImage(VirtualHardDisk image)"
  name: "withImage(VirtualHardDisk image)"
  nameWithType: "DataDisk.withImage(VirtualHardDisk image)"
  summary: "Set the image property: The source user image virtual hard disk."
  parameters:
  - description: "the image value to set."
    name: "image"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.VirtualHardDisk?alt=com.azure.resourcemanager.compute.models.VirtualHardDisk&text=VirtualHardDisk\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withImage(VirtualHardDisk image)"
  desc: "Set the image property: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisk?alt=com.azure.resourcemanager.compute.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.withLun(int)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.withLun(int lun)"
  name: "withLun(int lun)"
  nameWithType: "DataDisk.withLun(int lun)"
  summary: "Set the lun property: Specifies the logical unit number of the data disk."
  parameters:
  - description: "the lun value to set."
    name: "lun"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withLun(int lun)"
  desc: "Set the lun property: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisk?alt=com.azure.resourcemanager.compute.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.withManagedDisk(com.azure.resourcemanager.compute.models.ManagedDiskParameters)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.withManagedDisk(ManagedDiskParameters managedDisk)"
  name: "withManagedDisk(ManagedDiskParameters managedDisk)"
  nameWithType: "DataDisk.withManagedDisk(ManagedDiskParameters managedDisk)"
  summary: "Set the managed<wbr>Disk property: The managed disk parameters."
  parameters:
  - description: "the managedDisk value to set."
    name: "managedDisk"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.ManagedDiskParameters?alt=com.azure.resourcemanager.compute.models.ManagedDiskParameters&text=ManagedDiskParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withManagedDisk(ManagedDiskParameters managedDisk)"
  desc: "Set the managedDisk property: The managed disk parameters."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisk?alt=com.azure.resourcemanager.compute.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.withName(String name)"
  name: "withName(String name)"
  nameWithType: "DataDisk.withName(String name)"
  summary: "Set the name property: The disk name."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DataDisk withName(String name)"
  desc: "Set the name property: The disk name."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisk?alt=com.azure.resourcemanager.compute.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.withToBeDetached(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.withToBeDetached(Boolean toBeDetached)"
  name: "withToBeDetached(Boolean toBeDetached)"
  nameWithType: "DataDisk.withToBeDetached(Boolean toBeDetached)"
  summary: "Set the to<wbr>BeDetached property: Specifies whether the data disk is in process of detachment from the Virtual<wbr>Machine/Virtual<wbr>Machine<wbr>Scaleset."
  parameters:
  - description: "the toBeDetached value to set."
    name: "toBeDetached"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public DataDisk withToBeDetached(Boolean toBeDetached)"
  desc: "Set the toBeDetached property: Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisk?alt=com.azure.resourcemanager.compute.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.withVhd(com.azure.resourcemanager.compute.models.VirtualHardDisk)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.withVhd(VirtualHardDisk vhd)"
  name: "withVhd(VirtualHardDisk vhd)"
  nameWithType: "DataDisk.withVhd(VirtualHardDisk vhd)"
  summary: "Set the vhd property: The virtual hard disk."
  parameters:
  - description: "the vhd value to set."
    name: "vhd"
    type: "<xref href=\"com.azure.resourcemanager.compute.models.VirtualHardDisk?alt=com.azure.resourcemanager.compute.models.VirtualHardDisk&text=VirtualHardDisk\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withVhd(VirtualHardDisk vhd)"
  desc: "Set the vhd property: The virtual hard disk."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisk?alt=com.azure.resourcemanager.compute.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.withWriteAcceleratorEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.withWriteAcceleratorEnabled(Boolean writeAcceleratorEnabled)"
  name: "withWriteAcceleratorEnabled(Boolean writeAcceleratorEnabled)"
  nameWithType: "DataDisk.withWriteAcceleratorEnabled(Boolean writeAcceleratorEnabled)"
  summary: "Set the write<wbr>Accelerator<wbr>Enabled property: Specifies whether write<wbr>Accelerator should be enabled or disabled on the disk."
  parameters:
  - description: "the writeAcceleratorEnabled value to set."
    name: "writeAcceleratorEnabled"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public DataDisk withWriteAcceleratorEnabled(Boolean writeAcceleratorEnabled)"
  desc: "Set the writeAcceleratorEnabled property: Specifies whether writeAccelerator should be enabled or disabled on the disk."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.DataDisk?alt=com.azure.resourcemanager.compute.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.DataDisk.writeAcceleratorEnabled()"
  fullName: "com.azure.resourcemanager.compute.models.DataDisk.writeAcceleratorEnabled()"
  name: "writeAcceleratorEnabled()"
  nameWithType: "DataDisk.writeAcceleratorEnabled()"
  summary: "Get the write<wbr>Accelerator<wbr>Enabled property: Specifies whether write<wbr>Accelerator should be enabled or disabled on the disk."
  syntax: "public Boolean writeAcceleratorEnabled()"
  desc: "Get the writeAcceleratorEnabled property: Specifies whether writeAccelerator should be enabled or disabled on the disk."
  returns:
    description: "the writeAcceleratorEnabled value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
type: "class"
desc: "Describes a data disk."
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.19.0
