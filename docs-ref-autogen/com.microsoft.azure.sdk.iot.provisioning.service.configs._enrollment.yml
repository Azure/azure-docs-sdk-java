### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  id: _enrollment
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  children:
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.Enrollment()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.Enrollment(String)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.Enrollment(String,Attestation)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getAttestation()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getCreatedDateTimeUtc()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getDeviceId()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getEtag()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getInitialTwinState()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getIotHubHostName()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getLastUpdatedDateTimeUtc()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getProvisioningStatus()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getRegistrationId()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getRegistrationStatus()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setAttestation(Attestation)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setAttestation(AttestationMechanism)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setCreatedDateTimeUtc(String)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setDeviceId(String)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setEtag(String)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setInitialTwinState(TwinState)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setIotHubHostName(String)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setLastUpdatedDateTimeUtc(String)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setProvisioningStatus(ProvisioningStatus)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setRegistrationId(String)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setRegistrationStatus(DeviceRegistrationStatus)
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.toJsonElement()
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: Enrollment
  nameWithType: Enrollment
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment
  type: Class
  source:
    remote: &o0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 77
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Representation of a single Device Provisioning Service enrollment with a JSON serializer and deserializer.</p>

    <p>This object is used to send <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> information to the provisioning service, or receive <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> information from the provisioning service.</p>

    <p>To create or update an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> on the provisioning service you should fill this object and call the public API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createOrUpdateIndividualEnrollment(Enrollment)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createOrUpdateIndividualEnrollment(Enrollment)</xref>. The minimum information required by the provisioning service is the<code>registrationId 

        </code> and the <code>attestation 

        </code> .</p>

    <p>A new device can be provisioned by two attestation mechanisms, Trust Platform Module (see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation" data-throw-if-not-resolved="false">TpmAttestation</xref>) or DICE (see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>). The definition of each one you should use depending on the physical authentication hardware that the device contains.</p>

    <p>The content of this class will be serialized in a JSON format and sent as a body of the rest API to the provisioning service.</p>

    <p>When serialized, an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> will look like the following example: <pre>

    *<code>*{

             "registrationId":"validRegistrationId",

             "deviceId":"ContosoDevice-123",

             "attestation":{

                 "type":"tpm",

                 "tpm":{

                     "endorsementKey":"validEndorsementKey"

                 }

             },

             "iotHubHostName":"ContosoIoTHub.azure-devices.net",

             "provisioningStatus":"enabled"

        *}

        </code></pre></p>

    <p>The content of this class can be filled by a JSON, received from the provisioning service, as result of a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> operation like create, update, or query enrollment.</p>

    <p>The following JSON is a sample or the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> response, received from the provisioning service. <pre>

    *<code>*{

             "registrationId":"validRegistrationId",

             "deviceId":"ContosoDevice-123",

             "attestation":{

                 "type":"tpm",

                 "tpm":{

                     "endorsementKey":"validEndorsementKey"

                 }

             },

             "iotHubHostName":"ContosoIoTHub.azure-devices.net",

             "provisioningStatus":"enabled"

             "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

             "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

             "etag": "\"00000000-0000-0000-0000-00000000000\""

        *}

        </code></pre></p>

    <p></p>
  syntax: &o1
    content: public class Enrollment extends Serializable
  inheritance:
  - java.lang.Object
  - java.io.Serializable
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable
  inheritedMembers:
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable.toJson()
  - com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable.toString()
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.Enrollment()
  id: Enrollment()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: Enrollment()
  nameWithType: Enrollment.Enrollment()
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.Enrollment()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.Enrollment*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 656
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Empty constructor</p>

    <p>Used only by the tools that will deserialize this class. </p>
  syntax:
    content: protected Enrollment()
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.Enrollment(String)
  id: Enrollment(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: Enrollment(String json)
  nameWithType: Enrollment.Enrollment(String json)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.Enrollment(String json)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.Enrollment*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 210
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>CONSTRUCTOR</p>

    <p>This constructor creates an instance of the enrollment filling the class with the information provided in the JSON. It is used by the SDK to parse enrollment responses from the provisioning service.</p>

    <p>The following JSON is a sample of the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> response, received from the provisioning service. <pre>

    *<code>*{

             "registrationId":"validRegistrationId",

             "deviceId":"ContosoDevice-123",

             "attestation":{

                 "type":"tpm",

                 "tpm":{

                     "endorsementKey":"validEndorsementKey"

                 }

             },

             "iotHubHostName":"ContosoIoTHub.azure-devices.net",

             "provisioningStatus":"enabled"

             "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

             "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

             "etag": "\"00000000-0000-0000-0000-00000000000\""

        *}

        </code></pre></p>

    <p></p>
  syntax:
    content: public Enrollment(String json)
    parameters:
    - id: json
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> with the JSON received from the provisioning service. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>If the provided JSON is null, empty, or invalid. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.Enrollment(String,Attestation)
  id: Enrollment(String,Attestation)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: Enrollment(String registrationId, Attestation attestation)
  nameWithType: Enrollment.Enrollment(String registrationId, Attestation attestation)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.Enrollment(String registrationId, Attestation attestation)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.Enrollment*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 171
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>CONSTRUCTOR</p>

    <p>This constructor creates an instance of the enrollment with the minimum set of information required by the provisioning service. A valid enrollment must contain the registrationId, which uniquely identify this enrollment, and the attestation mechanism, which can be TPM or X509.</p>

    <p>Other parameters can be added by calling the setters on this class.</p>

    <p>When serialized, an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> will look like the following example: <pre>

    *<code>*{

             "registrationId":"validRegistrationId",

             "attestation":{

                 "type":"tpm",

                 "tpm":{

                     "endorsementKey":"validEndorsementKey"

                 }

             }

        *}

        </code></pre></p>

    <p></p>
  syntax:
    content: public Enrollment(String registrationId, Attestation attestation)
    parameters:
    - id: registrationId
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> with an unique id for this enrollment. </p>
    - id: attestation
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation
      description: <p>the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref> mechanism that can be <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation" data-throw-if-not-resolved="false">TpmAttestation</xref> or <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>If one of the provided parameters is not correct. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getAttestation()
  id: getAttestation()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: getAttestation()
  nameWithType: Enrollment.getAttestation()
  fullName: Attestation com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getAttestation()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getAttestation*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 404
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the attestation mechanism.</p>

    <p></p>
  syntax:
    content: public Attestation getAttestation()
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation
      description: >-
        <p>The<code>Attestation 

            </code> with the attestation content. It cannot be<code>null 

            </code> . </p>
  exceptions:
  - type: 407b0ee3
    description: <p>If the type of the attestation mechanism is unknown. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getCreatedDateTimeUtc()
  id: getCreatedDateTimeUtc()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: getCreatedDateTimeUtc()
  nameWithType: Enrollment.getCreatedDateTimeUtc()
  fullName: Date com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getCreatedDateTimeUtc()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getCreatedDateTimeUtc*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 565
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the createdDateTimeUtcDate.</p>

    <p></p>
  syntax:
    content: public Date getCreatedDateTimeUtc()
    return:
      type: "12977444"
      description: >-
        <p>The<code>Date 

            </code> with the createdDateTimeUtcDate content. It can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getDeviceId()
  id: getDeviceId()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: getDeviceId()
  nameWithType: Enrollment.getDeviceId()
  fullName: String com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getDeviceId()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getDeviceId*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 342
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the deviceId.</p>

    <p></p>
  syntax:
    content: public String getDeviceId()
    return:
      type: "26831127"
      description: >-
        <p>The<code>String 

            </code> with the deviceID content. It cannot be<code>null 

            </code> or empty. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getEtag()
  id: getEtag()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: getEtag()
  nameWithType: Enrollment.getEtag()
  fullName: String com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getEtag()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getEtag*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 627
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the etag.</p>

    <p></p>
  syntax:
    content: public String getEtag()
    return:
      type: "26831127"
      description: >-
        <p>The<code>String 

            </code> with the etag content. It can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getInitialTwinState()
  id: getInitialTwinState()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: getInitialTwinState()
  nameWithType: Enrollment.getInitialTwinState()
  fullName: TwinState com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getInitialTwinState()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getInitialTwinState*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 505
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the initialTwinState.</p>

    <p></p>
  syntax:
    content: public TwinState getInitialTwinState()
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state
      description: >-
        <p>The<code>TwinState 

            </code> with the initialTwinState content. Its optional and can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getIotHubHostName()
  id: getIotHubHostName()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: getIotHubHostName()
  nameWithType: Enrollment.getIotHubHostName()
  fullName: String com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getIotHubHostName()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getIotHubHostName*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 471
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the iotHubHostName.</p>

    <p></p>
  syntax:
    content: public String getIotHubHostName()
    return:
      type: "26831127"
      description: >-
        <p>The<code>String 

            </code> with the iotHubHostName content. It cannot be<code>null 

            </code> or empty. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getLastUpdatedDateTimeUtc()
  id: getLastUpdatedDateTimeUtc()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: getLastUpdatedDateTimeUtc()
  nameWithType: Enrollment.getLastUpdatedDateTimeUtc()
  fullName: Date com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getLastUpdatedDateTimeUtc()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getLastUpdatedDateTimeUtc*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 596
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the lastUpdatedDateTimeUtcDate.</p>

    <p></p>
  syntax:
    content: public Date getLastUpdatedDateTimeUtc()
    return:
      type: "12977444"
      description: >-
        <p>The<code>Date 

            </code> with the lastUpdatedDateTimeUtcDate content. It can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getProvisioningStatus()
  id: getProvisioningStatus()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: getProvisioningStatus()
  nameWithType: Enrollment.getProvisioningStatus()
  fullName: ProvisioningStatus com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getProvisioningStatus()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getProvisioningStatus*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 535
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the provisioningStatus.</p>

    <p></p>
  syntax:
    content: public ProvisioningStatus getProvisioningStatus()
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._provisioning_status
      description: >-
        <p>The<code>ProvisioningStatus 

            </code> with the provisioningStatus content. It can be 'enabled' or 'disabled'. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getRegistrationId()
  id: getRegistrationId()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: getRegistrationId()
  nameWithType: Enrollment.getRegistrationId()
  fullName: String com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getRegistrationId()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getRegistrationId*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 309
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the registrationId.</p>

    <p></p>
  syntax:
    content: public String getRegistrationId()
    return:
      type: "26831127"
      description: >-
        <p>The<code>String 

            </code> with the registrationID content. It cannot be<code>null 

            </code> or empty. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getRegistrationStatus()
  id: getRegistrationStatus()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: getRegistrationStatus()
  nameWithType: Enrollment.getRegistrationStatus()
  fullName: DeviceRegistrationStatus com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getRegistrationStatus()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getRegistrationStatus*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 375
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Getter for the registrationStatus.</p>

    <p></p>
  syntax:
    content: public DeviceRegistrationStatus getRegistrationStatus()
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._device_registration_status
      description: >-
        <p>The<code>DeviceRegistrationStatus 

            </code> with the registrationStatus content. It can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setAttestation(Attestation)
  id: setAttestation(Attestation)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: setAttestation(Attestation attestation)
  nameWithType: Enrollment.setAttestation(Attestation attestation)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setAttestation(Attestation attestation)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setAttestation*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 454
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Setter for the attestation.</p>

    <p>

      <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref> mechanism is a mandatory parameter that provides the mechanism type and the necessary keys/certificates</p>

    <p></p>

    <p></p>
  syntax:
    content: public void setAttestation(Attestation attestation)
    parameters:
    - id: attestation
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation
      description: <p>the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref> with the new attestation mechanism. It can be <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation" data-throw-if-not-resolved="false">TpmAttestation</xref> or <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>. </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>If the provided attestation mechanism is<code>null 

          </code> . </p>
  see:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation
    description: Attestation
  - type: com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation
    description: TpmAttestation
  - type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    description: X509Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setAttestation(AttestationMechanism)
  id: setAttestation(AttestationMechanism)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: setAttestation(AttestationMechanism attestationMechanism)
  nameWithType: Enrollment.setAttestation(AttestationMechanism attestationMechanism)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setAttestation(AttestationMechanism attestationMechanism)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setAttestation*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 423
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Setter for the attestation.</p>

    <p>

      <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref> mechanism is a mandatory parameter that provides the mechanism type and the necessary keys/certificates</p>

    <p></p>

    <p></p>
  syntax:
    content: protected void setAttestation(AttestationMechanism attestationMechanism)
    parameters:
    - id: attestationMechanism
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation_mechanism
      description: >-
        <p>the<code>AttestationMechanism 

            </code> with the new attestation mechanism. It can be <code>tpm</code> or <code>x509</code>. </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>If the provided attestation mechanism is<code>null 

          </code> or invalid. </p>
  see:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation_mechanism
    description: AttestationMechanism
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setCreatedDateTimeUtc(String)
  id: setCreatedDateTimeUtc(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: setCreatedDateTimeUtc(String createdDateTimeUtc)
  nameWithType: Enrollment.setCreatedDateTimeUtc(String createdDateTimeUtc)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setCreatedDateTimeUtc(String createdDateTimeUtc)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setCreatedDateTimeUtc*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 584
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Setter for the createdDateTimeUtc.</p>

    <p>This Date and Time is provided by the provisioning service. If the enrollment is not created yet, this string can represent an invalid Date. In this case, it will be ignored.</p>

    <p>Example of the expected format: <code>"2016-06-01T21:22:43.7996883Z" 

        </code></p>

    <p></p>
  syntax:
    content: protected void setCreatedDateTimeUtc(String createdDateTimeUtc)
    parameters:
    - id: createdDateTimeUtc
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> with the new createdDateTimeUtc. It can be<code>null 

            </code> , empty or not valid. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setDeviceId(String)
  id: setDeviceId(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: setDeviceId(String deviceId)
  nameWithType: Enrollment.setDeviceId(String deviceId)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setDeviceId(String deviceId)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setDeviceId*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 361
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Setter for the deviceId.</p>

    <p>A valid device Id shall follow this criteria. A case-sensitive string (up to 128 char long) of ASCII 7-bit alphanumeric chars<itemizedlist><listitem><p>{'-', ':', '.', '+', '', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public void setDeviceId(String deviceId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> with the new deviceID. It cannot be<code>null 

            </code> , empty, or invalid. </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>If the provided deviceId is<code>null 

          </code> , empty, or invalid. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setEtag(String)
  id: setEtag(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: setEtag(String etag)
  nameWithType: Enrollment.setEtag(String etag)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setEtag(String etag)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setEtag*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 639
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Setter for the etag.</p>

    <p></p>
  syntax:
    content: public void setEtag(String etag)
    parameters:
    - id: etag
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> with the new etag. It cannot be<code>null 

            </code> , empty or invalid. </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>If the provided etag is<code>null 

          </code> , empty or invalid. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setInitialTwinState(TwinState)
  id: setInitialTwinState(TwinState)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: setInitialTwinState(TwinState initialTwinState)
  nameWithType: Enrollment.setInitialTwinState(TwinState initialTwinState)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setInitialTwinState(TwinState initialTwinState)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setInitialTwinState*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 521
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Setter for the initialTwinState.</p>

    <p>It provides a Twin precondition for the provisioned device. </p>

    <p></p>
  syntax:
    content: public void setInitialTwinState(TwinState initialTwinState)
    parameters:
    - id: initialTwinState
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state
      description: >-
        <p>the<code>TwinState 

            </code> with the new initialTwinState. It cannot be<code>null 

            </code> . </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>If the provided initialTwinState is<code>null 

          </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setIotHubHostName(String)
  id: setIotHubHostName(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: setIotHubHostName(String iotHubHostName)
  nameWithType: Enrollment.setIotHubHostName(String iotHubHostName)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setIotHubHostName(String iotHubHostName)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setIotHubHostName*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 491
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Setter for the iotHubHostName.</p>

    <p>A valid iothub host name shall follow this criteria. A case-sensitive string (up to 128 char long) of ASCII 7-bit alphanumeric chars<itemizedlist><listitem><p>{'-', ':', '.', '+', '', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}. A valid host name shall have, at least 2 parts separated by '.'. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: public void setIotHubHostName(String iotHubHostName)
    parameters:
    - id: iotHubHostName
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> with the new iotHubHostName. It cannot be<code>null 

            </code> , empty, or invalid. </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>If the provided iotHubHostName is<code>null 

          </code> , empty, or invalid. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setLastUpdatedDateTimeUtc(String)
  id: setLastUpdatedDateTimeUtc(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: setLastUpdatedDateTimeUtc(String lastUpdatedDateTimeUtc)
  nameWithType: Enrollment.setLastUpdatedDateTimeUtc(String lastUpdatedDateTimeUtc)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setLastUpdatedDateTimeUtc(String lastUpdatedDateTimeUtc)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setLastUpdatedDateTimeUtc*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 615
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Setter for the lastUpdatedDateTimeUtc.</p>

    <p>This Date and Time is provided by the provisioning service. If the enrollment is not created yet, this string can represent an invalid Date. In this case, it will be ignored.</p>

    <p>Example of the expected format: <code>"2016-06-01T21:22:43.7996883Z" 

        </code></p>

    <p></p>
  syntax:
    content: protected void setLastUpdatedDateTimeUtc(String lastUpdatedDateTimeUtc)
    parameters:
    - id: lastUpdatedDateTimeUtc
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> with the new lastUpdatedDateTimeUtc. It can be<code>null 

            </code> , empty or not valid. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setProvisioningStatus(ProvisioningStatus)
  id: setProvisioningStatus(ProvisioningStatus)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: setProvisioningStatus(ProvisioningStatus provisioningStatus)
  nameWithType: Enrollment.setProvisioningStatus(ProvisioningStatus provisioningStatus)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setProvisioningStatus(ProvisioningStatus provisioningStatus)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setProvisioningStatus*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 551
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Setter for the provisioningStatus.</p>

    <p>It provides a Status precondition for the provisioned device. </p>

    <p></p>
  syntax:
    content: public void setProvisioningStatus(ProvisioningStatus provisioningStatus)
    parameters:
    - id: provisioningStatus
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._provisioning_status
      description: >-
        <p>the<code>ProvisioningStatus 

            </code> with the new provisioningStatus. It cannot be<code>null 

            </code> . </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>If the provided provisioningStatus is<code>null 

          </code> . </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setRegistrationId(String)
  id: setRegistrationId(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: setRegistrationId(String registrationId)
  nameWithType: Enrollment.setRegistrationId(String registrationId)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setRegistrationId(String registrationId)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setRegistrationId*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 328
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Setter for the registrationId.</p>

    <p>A valid registration Id shall follow this criteria. A case-sensitive string (up to 128 char long) of ASCII 7-bit alphanumeric chars<itemizedlist><listitem><p>{'-', ':', '.', '+', '', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}. </p></listitem></itemizedlist></p>

    <p></p>
  syntax:
    content: protected void setRegistrationId(String registrationId)
    parameters:
    - id: registrationId
      type: "26831127"
      description: >-
        <p>the<code>String 

            </code> with the new registrationId. It cannot be<code>null 

            </code> , empty, or invalid. </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>If the provided registrationId is<code>null 

          </code> , empty, or invalid. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setRegistrationStatus(DeviceRegistrationStatus)
  id: setRegistrationStatus(DeviceRegistrationStatus)
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: setRegistrationStatus(DeviceRegistrationStatus registrationStatus)
  nameWithType: Enrollment.setRegistrationStatus(DeviceRegistrationStatus registrationStatus)
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setRegistrationStatus(DeviceRegistrationStatus registrationStatus)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setRegistrationStatus*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 389
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Setter for the registrationStatus.</p>

    <p></p>
  syntax:
    content: protected void setRegistrationStatus(DeviceRegistrationStatus registrationStatus)
    parameters:
    - id: registrationStatus
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._device_registration_status
      description: >-
        <p>the<code>DeviceRegistrationStatus 

            </code> with the new registrationStatus. It cannot be<code>null 

            </code> . </p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>If the provided registrationStatus is<code>null 

          </code> . </p>
  see:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.configs._device_registration_status
    description: DeviceRegistrationStatus
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.toJsonElement()
  id: toJsonElement()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  langs:
  - java
  name: toJsonElement()
  nameWithType: Enrollment.toJsonElement()
  fullName: JsonElement com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.toJsonElement()
  overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.toJsonElement*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/Enrollment.java
    startLine: 289
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: >-
    <p>Serializer</p>

    <p>Creates a<code>JsonElement 

        </code> , which the content represents the information in this class and its subclasses in a JSON format.</p>

    <p>This is useful if the caller will integrate this JSON with JSON from other classes to generate a consolidated JSON. </p>

    <p></p>
  syntax:
    content: public JsonElement toJsonElement()
    return:
      type: 8585b2e7
      description: >-
        <p>The<code>JsonElement 

            </code> with the content of this class. </p>
references:
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.Enrollment*
  name: Enrollment
  nameWithType: Enrollment.Enrollment
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.Enrollment
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: 8585b2e7
  spec.java:
  - name: JsonElement
    fullName: JsonElement
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.toJsonElement*
  name: toJsonElement
  nameWithType: Enrollment.toJsonElement
  fullName: JsonElement com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.toJsonElement
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getRegistrationId*
  name: getRegistrationId
  nameWithType: Enrollment.getRegistrationId
  fullName: String com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getRegistrationId
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getDeviceId*
  name: getDeviceId
  nameWithType: Enrollment.getDeviceId
  fullName: String com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getDeviceId
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setDeviceId*
  name: setDeviceId
  nameWithType: Enrollment.setDeviceId
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setDeviceId
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getRegistrationStatus*
  name: getRegistrationStatus
  nameWithType: Enrollment.getRegistrationStatus
  fullName: DeviceRegistrationStatus com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getRegistrationStatus
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: 407b0ee3
  spec.java:
  - name: ProvisioningServiceClientException
    fullName: ProvisioningServiceClientException
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getAttestation*
  name: getAttestation
  nameWithType: Enrollment.getAttestation
  fullName: Attestation com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getAttestation
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setAttestation*
  name: setAttestation
  nameWithType: Enrollment.setAttestation
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setAttestation
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getIotHubHostName*
  name: getIotHubHostName
  nameWithType: Enrollment.getIotHubHostName
  fullName: String com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getIotHubHostName
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setIotHubHostName*
  name: setIotHubHostName
  nameWithType: Enrollment.setIotHubHostName
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setIotHubHostName
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getInitialTwinState*
  name: getInitialTwinState
  nameWithType: Enrollment.getInitialTwinState
  fullName: TwinState com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getInitialTwinState
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setInitialTwinState*
  name: setInitialTwinState
  nameWithType: Enrollment.setInitialTwinState
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setInitialTwinState
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getProvisioningStatus*
  name: getProvisioningStatus
  nameWithType: Enrollment.getProvisioningStatus
  fullName: ProvisioningStatus com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getProvisioningStatus
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setProvisioningStatus*
  name: setProvisioningStatus
  nameWithType: Enrollment.setProvisioningStatus
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setProvisioningStatus
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: "12977444"
  spec.java:
  - name: Date
    fullName: Date
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getCreatedDateTimeUtc*
  name: getCreatedDateTimeUtc
  nameWithType: Enrollment.getCreatedDateTimeUtc
  fullName: Date com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getCreatedDateTimeUtc
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getLastUpdatedDateTimeUtc*
  name: getLastUpdatedDateTimeUtc
  nameWithType: Enrollment.getLastUpdatedDateTimeUtc
  fullName: Date com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getLastUpdatedDateTimeUtc
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.getEtag*
  name: getEtag
  nameWithType: Enrollment.getEtag
  fullName: String com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.getEtag
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setEtag*
  name: setEtag
  nameWithType: Enrollment.setEtag
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setEtag
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setRegistrationId*
  name: setRegistrationId
  nameWithType: Enrollment.setRegistrationId
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setRegistrationId
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setRegistrationStatus*
  name: setRegistrationStatus
  nameWithType: Enrollment.setRegistrationStatus
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setRegistrationStatus
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setCreatedDateTimeUtc*
  name: setCreatedDateTimeUtc
  nameWithType: Enrollment.setCreatedDateTimeUtc
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setCreatedDateTimeUtc
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.setLastUpdatedDateTimeUtc*
  name: setLastUpdatedDateTimeUtc
  nameWithType: Enrollment.setLastUpdatedDateTimeUtc
  fullName: void com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment.setLastUpdatedDateTimeUtc
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable.toJson()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable.yml
  name: toJson()
  nameWithType: Serializable.toJson()
  fullName: String com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable.toJson()
  type: Method
  summary: >-
    <p>Serializer</p>

    <p>Creates a<code>String 

        </code> , which the content represents the information in the child class and its subclasses in a JSON format. </p>

    <p></p>
  syntax:
    content: public String toJson()
    return:
      type: "26831127"
      description: >-
        <p>The<code>String 

            </code> with the JSON. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable.toString()
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable.yml
  name: toString()
  nameWithType: Serializable.toString()
  fullName: String com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable.toString()
  type: Method
  summary: >-
    <p>Creates a pretty print JSON with the content of the child class and subclasses.</p>

    <p></p>
  syntax:
    content: public String toString()
    return:
      type: "26831127"
      description: >-
        <p>The<code>String 

            </code> with the pretty print JSON. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._serializable.yml
  name: Serializable
  nameWithType: Serializable
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable
  type: Class
  summary: >-
    <p>Abstract class with the parser for the provisioning configurations.</p>

    <p></p>
  syntax:
    content: public class Serializable
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._device_registration_status
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._device_registration_status.yml
  name: DeviceRegistrationStatus
  nameWithType: DeviceRegistrationStatus
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationStatus
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service device registration status with a JSON deserializer.</p>

    <p>Example of JSON format: <pre><code>{

            "registrationId":"validRegistrationId",

            "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

            "assignedHub":"ContosoIoTHub.azure-devices.net",

            "deviceId":"ContosoDevice-123",

            "status":"assigned"

            "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

            "errorCode":200

            "errorMessage":"Succeeded"

            "etag": "\"00000000-0000-0000-0000-00000000000\""

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class DeviceRegistrationStatus
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation_mechanism
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation_mechanism.yml
  name: AttestationMechanism
  nameWithType: AttestationMechanism
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref> mechanism in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>.</p>

    <p>It is an internal class that converts one of the attestations into JSON format. To configure the attestation mechanism, see the external API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref>.</p>

    <p></p>
  syntax:
    content: public class AttestationMechanism
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state.yml
  name: TwinState
  nameWithType: TwinState
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinState
  type: Class
  summary: >-
    <p>Representation of a single Twin initial state for the Device Provisioning Service.</p>

    <p>The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state" data-throw-if-not-resolved="false">TwinState</xref> can contain one <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> of <b>Tags</b>, and one <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_collection" data-throw-if-not-resolved="false">TwinCollection</xref> of <b>desiredProperties</b>.</p>

    <p>Each entity in the collections can contain a associated <xref uid="" data-throw-if-not-resolved="false">TwinMetadata</xref>.</p>

    <p>These metadata are provided by the Service and contains information about the last updated date time, and version.</p>

    <p>For instance, the follow is a valid <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._twin_state" data-throw-if-not-resolved="false">TwinState</xref>, represented as <code>initialTwinState 

        </code> in the rest API. <pre><code>{

            "initialTwinState": {

                "tags":{

                    "SpeedUnity":"MPH",

                    "$metadata":{

                        "$lastUpdated":"2017-09-21T02:07:44.238Z",

                        "$lastUpdatedVersion":4,

                        "SpeedUnity":{

                            "$lastUpdated":"2017-09-21T02:07:44.238Z",

                            "$lastUpdatedVersion":4

                        }

                    },

                    "$version":4

                }

                "desiredProperties":{

                    "MaxSpeed":{

                        "Value":500,

                        "NewValue":300

                    },

                    "$metadata":{

                        "$lastUpdated":"2017-09-21T02:07:44.238Z",

                        "$lastUpdatedVersion":4,

                        "MaxSpeed":{

                            "$lastUpdated":"2017-09-21T02:07:44.238Z",

                            "$lastUpdatedVersion":4,

                            "Value":{

                                "$lastUpdated":"2017-09-21T02:07:44.238Z",

                                "$lastUpdatedVersion":4

                            },

                            "NewValue":{

                                "$lastUpdated":"2017-09-21T02:07:44.238Z",

                                "$lastUpdatedVersion":4

                            }

                        }

                    },

                    "$version":4

                }

            }

        }

        </code></pre></p>

    <p></p>
  syntax:
    content: public class TwinState
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._provisioning_status
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._provisioning_status.yml
  name: ProvisioningStatus
  nameWithType: ProvisioningStatus
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.ProvisioningStatus
  type: Enum
  summary: >-
    <p>The Device Provisioning Service provisioning status.</p>

    <p></p>
  syntax:
    content: public enum ProvisioningStatus
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation.yml
  name: Attestation
  nameWithType: Attestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation
  type: Class
  summary: >-
    <p>This is the abstract class that unifies all possible types of attestation that Device Provisioning Service supports.</p>

    <p>For now, the provisioning service supports <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation" data-throw-if-not-resolved="false">TpmAttestation</xref> or <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>.</p>

    <p></p>
  syntax:
    content: public class Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment.yml
  name: Enrollment
  nameWithType: Enrollment
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Enrollment
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service enrollment with a JSON serializer and deserializer.</p>

    <p>This object is used to send <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> information to the provisioning service, or receive <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> information from the provisioning service.</p>

    <p>To create or update an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> on the provisioning service you should fill this object and call the public API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createOrUpdateIndividualEnrollment(Enrollment)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createOrUpdateIndividualEnrollment(Enrollment)</xref>. The minimum information required by the provisioning service is the<code>registrationId 

        </code> and the <code>attestation 

        </code> .</p>

    <p>A new device can be provisioned by two attestation mechanisms, Trust Platform Module (see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation" data-throw-if-not-resolved="false">TpmAttestation</xref>) or DICE (see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>). The definition of each one you should use depending on the physical authentication hardware that the device contains.</p>

    <p>The content of this class will be serialized in a JSON format and sent as a body of the rest API to the provisioning service.</p>

    <p>When serialized, an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> will look like the following example: <pre>

    *<code>*{

             "registrationId":"validRegistrationId",

             "deviceId":"ContosoDevice-123",

             "attestation":{

                 "type":"tpm",

                 "tpm":{

                     "endorsementKey":"validEndorsementKey"

                 }

             },

             "iotHubHostName":"ContosoIoTHub.azure-devices.net",

             "provisioningStatus":"enabled"

        *}

        </code></pre></p>

    <p>The content of this class can be filled by a JSON, received from the provisioning service, as result of a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> operation like create, update, or query enrollment.</p>

    <p>The following JSON is a sample or the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> response, received from the provisioning service. <pre>

    *<code>*{

             "registrationId":"validRegistrationId",

             "deviceId":"ContosoDevice-123",

             "attestation":{

                 "type":"tpm",

                 "tpm":{

                     "endorsementKey":"validEndorsementKey"

                 }

             },

             "iotHubHostName":"ContosoIoTHub.azure-devices.net",

             "provisioningStatus":"enabled"

             "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

             "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

             "etag": "\"00000000-0000-0000-0000-00000000000\""

        *}

        </code></pre></p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation.yml
  name: TpmAttestation
  nameWithType: TpmAttestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service TPM <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref>.</p>

    <p>The provisioning service supports Trusted Platform Module, or TPM, as the device attestation mechanism. User must provide the Endorsement Key, and can, optionally, provide the Storage Root Key.</p>

    <p></p>
  syntax:
    content: public class TpmAttestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
  name: X509Attestation
  nameWithType: X509Attestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service X509 <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref>.</p>

    <p>The provisioning service supports Device Identifier Composition Engine, or DICE, as the device attestation mechanism. To use DICE, user must provide the X509 certificate. This class provide the means to create a new attestation for a X509 certificate and return it as an abstract interface <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref>.</p>

    <p>An X509 attestation can contains one of the 2 types of certificate:</p>

    <p>

      <variablelist>

        <varlistentry>

          <b>Client or Alias certificate:</b>

        </varlistentry>

        <listitem>

          <p>Called on this class as clientCertificates, this certificate can authenticate a single device. </p>

        </listitem>

      </variablelist>

      <variablelist>

        <varlistentry>

          <b>Signing or Root certificate:</b>

        </varlistentry>

        <listitem>

          <p>Called on this class as rootCertificates, this certificate can create multiple Client certificates to authenticate multiple devices. </p>

        </listitem>

      </variablelist>

    </p>

    <p>The provisioning service allows user to create <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>. For all operations over <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment" data-throw-if-not-resolved="false">Enrollment</xref> with <b>DICE</b>, user must provide a <b>clientCertificates</b>, and for operations over <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>, user must provide a <b>rootCertificates</b>.</p>

    <p>For each of this types of certificates, user can provide 2 Certificates, a primary and a secondary. Only the primary is mandatory, the secondary is optional.</p>

    <p>The provisioning service will process the provided certificates, but will never return it back. Instead of it, <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getPrimaryX509CertificateInfo()" data-throw-if-not-resolved="false">getPrimaryX509CertificateInfo()</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getSecondaryX509CertificateInfo()" data-throw-if-not-resolved="false">getSecondaryX509CertificateInfo()</xref> will return a translated info in the certificate.</p>

    <p></p>
  syntax:
    content: public class X509Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.exceptions._provisioning_service_client_exception
  parent: com.microsoft.azure.sdk.iot.provisioning.service.exceptions
  href: com.microsoft.azure.sdk.iot.provisioning.service.exceptions._provisioning_service_client_exception.yml
  name: ProvisioningServiceClientException
  nameWithType: ProvisioningServiceClientException
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
  type: Class
  summary: >-
    <p>Super class for the Device Provisioning Service exceptions on the Service Client.</p>

    <p>

      <pre>

        <code>ProvisioningServiceClientException

            |

            +--&gt;ProvisioningServiceClientTransportException [any transport layer exception]

            |

            +--&gt;ProvisioningServiceClientServiceException [any exception reported in the http response]

                    |

                    |

                    +--&gt;ProvisioningServiceClientBadUsageException [any http response 4xx]

                    |        |

                    |        +--&gt;ProvisioningServiceClientBadFormatException [400]

                    |        +--&gt;ProvisioningServiceClientUnathorizedException [401]

                    |        +--&gt;ProvisioningServiceClientNotFoundException [404]

                    |        +--&gt;ProvisioningServiceClientPreconditionFailedException [412]

                    |        +--&gt;ProvisioningServiceClientTooManyRequestsException [429]

                    |

                    +--&gt;ProvisioningServiceClientTransientException [any http response 5xx]

                    |        |

                    |        +--&gt;ProvisioningServiceClientInternalServerErrorException [500]

                    |

                    +--&gt;ProvisioningServiceClientUnknownException [any other http response &gt;300, but not 4xx or 5xx]

        </code>

      </pre>

    </p>
  syntax:
    content: public class ProvisioningServiceClientException
- uid: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createOrUpdateIndividualEnrollment(Enrollment)
  parent: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client
  href: com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.yml
  name: createOrUpdateIndividualEnrollment(Enrollment enrollment)
  nameWithType: ProvisioningServiceClient.createOrUpdateIndividualEnrollment(Enrollment enrollment)
  fullName: Enrollment com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment(Enrollment enrollment)
  type: Method
  summary: "<p>Create or update a individual device enrollment record.</p>\r\n<p>This API creates a new enrollment or update a existed one. All enrollments in the Device Provisioning Service contains a unique identifier called registrationId. If this API is called for an enrollment with a registrationId that already exists, it will replace the existed enrollment information by the new one. On the other hand, if the registrationId does not exit, this API will create a new enrollment.</p>\r\n<p>To use the Device Provisioning Service API, you must include the follow package on your application. <pre><code>// Include the following imports to use the Device Provisioning Service APIs.\r\n    import com.microsoft.azure.sdk.iot.provisioning.service.*;\r\n    </code></pre></p>\r\n<p>\r\n  <b>Sample:</b>\r\n</p>\r\n<p>The follow code will create a new enrollment that will provisioning the ContosoDevice1000 to the ContosoHub.azure-devices.net using TPM attestation. <pre><code>// Enrollment information.\r\n    private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\r\n                                                                 \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\r\n                                                                 \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\r\n    private static final String TPM_ENDORSEMENT_KEY = \"tpm-endorsement-key\";\r\n    private static final String REGISTRATION_ID = \"registrationId-1\";\r\n    private static final String DEVICE_ID = \"ContosoDevice1000\";\r\n    private static final String IOTHUB_HOST_NAME = \"ContosoHub.azure-devices.net\";\r\n    \r\n    public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\r\n    {\r\n        // Create a Device Provisioning Service Client.\r\n        DeviceProvisioningServiceClient deviceProvisioningServiceClient =\r\n            DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\r\n    \r\n        // Create a new individual enrollment configurations.\r\n        Attestation attestation = new TpmAttestation(TPM_ENDORSEMENT_KEY);\r\n        Enrollment enrollment =\r\n           new Enrollment(\r\n                REGISTRATION_ID,\r\n                attestation);\r\n        enrollment.setDeviceId(DEVICE_ID);\r\n        enrollment.setIotHubHostName(IOTHUB_HOST_NAME);\r\n        enrollment.setProvisioningStatus(ProvisioningStatus.DISABLED);\r\n    \r\n        // Create a new individual enrollment.\r\n        Enrollment enrollmentResult =  deviceProvisioningServiceClient.createOrUpdateIndividualEnrollment(enrollment);\r\n    }\r\n    </code></pre></p>\r\n<p>If the registrationId already exists, this method will update existed enrollments. Note that update the enrollment will not change the status of the device that was already registered using the old enrollment.</p>\r\n<p>The follow code will update the provisioningStatus of the previous enrollment from <b>disabled</b> to <b>enabled</b>. <pre><code>// Enrollment information.\r\n    private static final String PROVISIONING_CONNECTION_STRING = \"HostName=ContosoProvisioning.azure-devices-provisioning.net;\" +\r\n                                                                 \"SharedAccessKeyName=contosoprovisioningserviceowner;\" +\r\n                                                                 \"SharedAccessKey=0000000000000000000000000000000000000000000=\";\r\n    private static final String REGISTRATION_ID = \"registrationId-1\";\r\n    \r\n    public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException\r\n    {\r\n        // Create a Device Provisioning Service Client.\r\n        DeviceProvisioningServiceClient deviceProvisioningServiceClient =\r\n            DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);\r\n    \r\n        // Get the content of the previous enrollment.\r\n        Enrollment enrollment =  deviceProvisioningServiceClient.getIndividualEnrollment(REGISTRATION_ID);\r\n    \r\n        // Change the provisioning status, from disabled to enabled\r\n        enrollment.setProvisioningStatus(ProvisioningStatus.ENABLED);\r\n    \r\n        // Update the individual enrollment information.\r\n        Enrollment enrollmentResult =  deviceProvisioningServiceClient.createOrUpdateIndividualEnrollment(enrollment);\r\n    }\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public Enrollment createOrUpdateIndividualEnrollment(Enrollment enrollment)
    parameters:
    - id: enrollment
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
      description: >-
        <p>the <xref uid="" data-throw-if-not-resolved="false">Enrollment</xref> object that describes the individual enrollment that will be created of updated. It cannot be<code>null 

            </code> . </p>
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment
      description: <p>An <xref uid="" data-throw-if-not-resolved="false">Enrollment</xref> object with the result of the create or update requested. </p>
