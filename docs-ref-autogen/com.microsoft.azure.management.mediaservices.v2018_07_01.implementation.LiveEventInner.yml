### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  id: "LiveEventInner"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  children:
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.LiveEventInner()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.created()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.crossSiteAccessPolicies()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.description()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.encoding()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.input()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.lastModified()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.preview()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.provisioningState()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.resourceState()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.streamOptions()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.vanityUrl()"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withCrossSiteAccessPolicies(com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withDescription(java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withEncoding(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withInput(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withPreview(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withStreamOptions(java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag>)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withVanityUrl(java.lang.Boolean)"
  langs:
  - "java"
  name: "LiveEventInner"
  nameWithType: "LiveEventInner"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  type: "Class"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "The Live Event."
  syntax:
    content: "public class LiveEventInner extends Resource"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.ProxyResource"
  - "com.microsoft.azure.Resource"
  inheritedMembers:
  - "com.microsoft.azure.ProxyResource.id()"
  - "com.microsoft.azure.ProxyResource.name()"
  - "com.microsoft.azure.ProxyResource.type()"
  - "com.microsoft.azure.Resource.getTags()"
  - "com.microsoft.azure.Resource.location()"
  - "com.microsoft.azure.Resource.withLocation(java.lang.String)"
  - "com.microsoft.azure.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.LiveEventInner()"
  id: "LiveEventInner()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "LiveEventInner()"
  nameWithType: "LiveEventInner.LiveEventInner()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.LiveEventInner()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.LiveEventInner*"
  type: "Constructor"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public LiveEventInner()"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.created()"
  id: "created()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "created()"
  nameWithType: "LiveEventInner.created()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.created()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.created*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get the exact time the Live Event was created."
  syntax:
    content: "public DateTime created()"
    return:
      type: "org.joda.time.DateTime"
      description: "the created value"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.crossSiteAccessPolicies()"
  id: "crossSiteAccessPolicies()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "crossSiteAccessPolicies()"
  nameWithType: "LiveEventInner.crossSiteAccessPolicies()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.crossSiteAccessPolicies()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.crossSiteAccessPolicies*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get the Live Event access policies."
  syntax:
    content: "public CrossSiteAccessPolicies crossSiteAccessPolicies()"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies"
      description: "the crossSiteAccessPolicies value"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.description()"
  id: "description()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "description()"
  nameWithType: "LiveEventInner.description()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.description()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.description*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get the Live Event description."
  syntax:
    content: "public String description()"
    return:
      type: "java.lang.String"
      description: "the description value"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.encoding()"
  id: "encoding()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "encoding()"
  nameWithType: "LiveEventInner.encoding()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.encoding()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.encoding*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get the Live Event encoding."
  syntax:
    content: "public LiveEventEncoding encoding()"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding"
      description: "the encoding value"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.input()"
  id: "input()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "input()"
  nameWithType: "LiveEventInner.input()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.input()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.input*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get the Live Event input."
  syntax:
    content: "public LiveEventInput input()"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput"
      description: "the input value"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.lastModified()"
  id: "lastModified()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "lastModified()"
  nameWithType: "LiveEventInner.lastModified()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.lastModified()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.lastModified*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get the exact time the Live Event was last modified."
  syntax:
    content: "public DateTime lastModified()"
    return:
      type: "org.joda.time.DateTime"
      description: "the lastModified value"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.preview()"
  id: "preview()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "preview()"
  nameWithType: "LiveEventInner.preview()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.preview()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.preview*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get the Live Event preview."
  syntax:
    content: "public LiveEventPreview preview()"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview"
      description: "the preview value"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.provisioningState()"
  id: "provisioningState()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "provisioningState()"
  nameWithType: "LiveEventInner.provisioningState()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.provisioningState()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.provisioningState*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get the provisioning state of the Live Event."
  syntax:
    content: "public String provisioningState()"
    return:
      type: "java.lang.String"
      description: "the provisioningState value"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.resourceState()"
  id: "resourceState()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "resourceState()"
  nameWithType: "LiveEventInner.resourceState()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.resourceState()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.resourceState*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get the resource state of the Live Event. Possible values include: 'Stopped', 'Starting', 'Running', 'Stopping', 'Deleting'."
  syntax:
    content: "public LiveEventResourceState resourceState()"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventResourceState"
      description: "the resourceState value"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.streamOptions()"
  id: "streamOptions()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "streamOptions()"
  nameWithType: "LiveEventInner.streamOptions()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.streamOptions()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.streamOptions*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get the options to use for the LiveEvent. This value is specified at creation time and cannot be updated."
  syntax:
    content: "public List<StreamOptionsFlag> streamOptions()"
    return:
      type: "java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag>"
      description: "the streamOptions value"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.vanityUrl()"
  id: "vanityUrl()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "vanityUrl()"
  nameWithType: "LiveEventInner.vanityUrl()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.vanityUrl()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.vanityUrl*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Get specifies whether to use a vanity url with the Live Event. This value is specified at creation time and cannot be updated."
  syntax:
    content: "public Boolean vanityUrl()"
    return:
      type: "java.lang.Boolean"
      description: "the vanityUrl value"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withCrossSiteAccessPolicies(com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies)"
  id: "withCrossSiteAccessPolicies(com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies)"
  nameWithType: "LiveEventInner.withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withCrossSiteAccessPolicies*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Set the Live Event access policies."
  syntax:
    content: "public LiveEventInner withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies)"
    parameters:
    - id: "crossSiteAccessPolicies"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies"
      description: "the crossSiteAccessPolicies value to set"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object itself."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withDescription(java.lang.String)"
  id: "withDescription(java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "withDescription(String description)"
  nameWithType: "LiveEventInner.withDescription(String description)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withDescription(String description)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withDescription*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Set the Live Event description."
  syntax:
    content: "public LiveEventInner withDescription(String description)"
    parameters:
    - id: "description"
      type: "java.lang.String"
      description: "the description value to set"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object itself."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withEncoding(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding)"
  id: "withEncoding(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "withEncoding(LiveEventEncoding encoding)"
  nameWithType: "LiveEventInner.withEncoding(LiveEventEncoding encoding)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withEncoding(LiveEventEncoding encoding)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withEncoding*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Set the Live Event encoding."
  syntax:
    content: "public LiveEventInner withEncoding(LiveEventEncoding encoding)"
    parameters:
    - id: "encoding"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding"
      description: "the encoding value to set"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object itself."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withInput(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput)"
  id: "withInput(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "withInput(LiveEventInput input)"
  nameWithType: "LiveEventInner.withInput(LiveEventInput input)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withInput(LiveEventInput input)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withInput*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Set the Live Event input."
  syntax:
    content: "public LiveEventInner withInput(LiveEventInput input)"
    parameters:
    - id: "input"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput"
      description: "the input value to set"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object itself."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withPreview(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview)"
  id: "withPreview(com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "withPreview(LiveEventPreview preview)"
  nameWithType: "LiveEventInner.withPreview(LiveEventPreview preview)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withPreview(LiveEventPreview preview)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withPreview*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Set the Live Event preview."
  syntax:
    content: "public LiveEventInner withPreview(LiveEventPreview preview)"
    parameters:
    - id: "preview"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview"
      description: "the preview value to set"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object itself."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withStreamOptions(java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag>)"
  id: "withStreamOptions(java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag>)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "withStreamOptions(List<StreamOptionsFlag> streamOptions)"
  nameWithType: "LiveEventInner.withStreamOptions(List<StreamOptionsFlag> streamOptions)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withStreamOptions(List<StreamOptionsFlag> streamOptions)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withStreamOptions*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Set the options to use for the LiveEvent. This value is specified at creation time and cannot be updated."
  syntax:
    content: "public LiveEventInner withStreamOptions(List<StreamOptionsFlag> streamOptions)"
    parameters:
    - id: "streamOptions"
      type: "java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag>"
      description: "the streamOptions value to set"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object itself."
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withVanityUrl(java.lang.Boolean)"
  id: "withVanityUrl(java.lang.Boolean)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
  langs:
  - "java"
  name: "withVanityUrl(Boolean vanityUrl)"
  nameWithType: "LiveEventInner.withVanityUrl(Boolean vanityUrl)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withVanityUrl(Boolean vanityUrl)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withVanityUrl*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  summary: "Set specifies whether to use a vanity url with the Live Event. This value is specified at creation time and cannot be updated."
  syntax:
    content: "public LiveEventInner withVanityUrl(Boolean vanityUrl)"
    parameters:
    - id: "vanityUrl"
      type: "java.lang.Boolean"
      description: "the vanityUrl value to set"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner"
      description: "the LiveEventInner object itself."
references:
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.LiveEventInner*"
  name: "LiveEventInner"
  nameWithType: "LiveEventInner.LiveEventInner"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.LiveEventInner"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.description*"
  name: "description"
  nameWithType: "LiveEventInner.description"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.description"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withDescription*"
  name: "withDescription"
  nameWithType: "LiveEventInner.withDescription"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withDescription"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput"
  name: "LiveEventInput"
  nameWithType: "LiveEventInput"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventInput"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.input*"
  name: "input"
  nameWithType: "LiveEventInner.input"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.input"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withInput*"
  name: "withInput"
  nameWithType: "LiveEventInner.withInput"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withInput"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview"
  name: "LiveEventPreview"
  nameWithType: "LiveEventPreview"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventPreview"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.preview*"
  name: "preview"
  nameWithType: "LiveEventInner.preview"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.preview"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withPreview*"
  name: "withPreview"
  nameWithType: "LiveEventInner.withPreview"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withPreview"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding"
  name: "LiveEventEncoding"
  nameWithType: "LiveEventEncoding"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventEncoding"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.encoding*"
  name: "encoding"
  nameWithType: "LiveEventInner.encoding"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.encoding"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withEncoding*"
  name: "withEncoding"
  nameWithType: "LiveEventInner.withEncoding"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withEncoding"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.provisioningState*"
  name: "provisioningState"
  nameWithType: "LiveEventInner.provisioningState"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.provisioningState"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventResourceState"
  name: "LiveEventResourceState"
  nameWithType: "LiveEventResourceState"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.LiveEventResourceState"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.resourceState*"
  name: "resourceState"
  nameWithType: "LiveEventInner.resourceState"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.resourceState"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies"
  name: "CrossSiteAccessPolicies"
  nameWithType: "CrossSiteAccessPolicies"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.CrossSiteAccessPolicies"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.crossSiteAccessPolicies*"
  name: "crossSiteAccessPolicies"
  nameWithType: "LiveEventInner.crossSiteAccessPolicies"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.crossSiteAccessPolicies"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withCrossSiteAccessPolicies*"
  name: "withCrossSiteAccessPolicies"
  nameWithType: "LiveEventInner.withCrossSiteAccessPolicies"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withCrossSiteAccessPolicies"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.vanityUrl*"
  name: "vanityUrl"
  nameWithType: "LiveEventInner.vanityUrl"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.vanityUrl"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withVanityUrl*"
  name: "withVanityUrl"
  nameWithType: "LiveEventInner.withVanityUrl"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withVanityUrl"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "java.util.List<com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag"
    name: "StreamOptionsFlag"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.streamOptions*"
  name: "streamOptions"
  nameWithType: "LiveEventInner.streamOptions"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.streamOptions"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withStreamOptions*"
  name: "withStreamOptions"
  nameWithType: "LiveEventInner.withStreamOptions"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.withStreamOptions"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "org.joda.time.DateTime"
  spec.java:
  - uid: "org.joda.time.DateTime"
    name: "DateTime"
    fullName: "org.joda.time.DateTime"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.created*"
  name: "created"
  nameWithType: "LiveEventInner.created"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.created"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.lastModified*"
  name: "lastModified"
  nameWithType: "LiveEventInner.lastModified"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.LiveEventInner.lastModified"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.Resource"
  name: "Resource"
  nameWithType: "Resource"
  fullName: "com.microsoft.azure.Resource"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.microsoft.azure.Resource.getTags()"
  name: "Resource.getTags()"
  nameWithType: "Resource.getTags()"
  fullName: "com.microsoft.azure.Resource.getTags()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.microsoft.azure.Resource.withLocation(java.lang.String)"
  name: "Resource.withLocation(String)"
  nameWithType: "Resource.withLocation(String)"
  fullName: "com.microsoft.azure.Resource.withLocation(java.lang.String)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.ProxyResource.type()"
  name: "ProxyResource.type()"
  nameWithType: "ProxyResource.type()"
  fullName: "com.microsoft.azure.ProxyResource.type()"
- uid: "com.microsoft.azure.ProxyResource.name()"
  name: "ProxyResource.name()"
  nameWithType: "ProxyResource.name()"
  fullName: "com.microsoft.azure.ProxyResource.name()"
- uid: "com.microsoft.azure.Resource.location()"
  name: "Resource.location()"
  nameWithType: "Resource.location()"
  fullName: "com.microsoft.azure.Resource.location()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.microsoft.azure.ProxyResource.id()"
  name: "ProxyResource.id()"
  nameWithType: "ProxyResource.id()"
  fullName: "com.microsoft.azure.ProxyResource.id()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  name: "Resource.withTags(Map<String,String>)"
  nameWithType: "Resource.withTags(Map<String,String>)"
  fullName: "com.microsoft.azure.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag"
  name: "StreamOptionsFlag"
  nameWithType: "StreamOptionsFlag"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.StreamOptionsFlag"
- uid: "java.lang.String,java.lang.String>)"
  name: "String,String>)"
  nameWithType: "String,String>)"
  fullName: "java.lang.String,java.lang.String>)"
- uid: "com.microsoft.azure.Resource.withTags(java.util.Map"
  name: "Resource.withTags(Map"
  nameWithType: "Resource.withTags(Map"
  fullName: "com.microsoft.azure.Resource.withTags(java.util.Map"
