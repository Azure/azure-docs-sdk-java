### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner"
fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner"
name: "ProbeInner"
nameWithType: "ProbeInner"
summary: "A load balancer probe."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.SubResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.SubResource.id()"
- "com.azure.core.management.SubResource.withId(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ProbeInner extends SubResource"
constructors:
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.ProbeInner()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.ProbeInner()"
  name: "ProbeInner()"
  nameWithType: "ProbeInner.ProbeInner()"
  syntax: "public ProbeInner()"
methods:
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.etag()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.etag()"
  name: "etag()"
  nameWithType: "ProbeInner.etag()"
  summary: "Get the etag property: A unique read-only string that changes whenever the resource is updated."
  syntax: "public String etag()"
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.intervalInSeconds()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.intervalInSeconds()"
  name: "intervalInSeconds()"
  nameWithType: "ProbeInner.intervalInSeconds()"
  summary: "Get the intervalInSeconds property: The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5."
  syntax: "public Integer intervalInSeconds()"
  returns:
    description: "the intervalInSeconds value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.loadBalancingRules()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.loadBalancingRules()"
  name: "loadBalancingRules()"
  nameWithType: "ProbeInner.loadBalancingRules()"
  summary: "Get the loadBalancingRules property: The load balancer rules that use this probe."
  syntax: "public List<SubResource> loadBalancingRules()"
  returns:
    description: "the loadBalancingRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.name()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.name()"
  name: "name()"
  nameWithType: "ProbeInner.name()"
  summary: "Get the name property: The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource."
  syntax: "public String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.numberOfProbes()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.numberOfProbes()"
  name: "numberOfProbes()"
  nameWithType: "ProbeInner.numberOfProbes()"
  summary: "Get the numberOfProbes property: The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure."
  syntax: "public Integer numberOfProbes()"
  returns:
    description: "the numberOfProbes value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.port()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.port()"
  name: "port()"
  nameWithType: "ProbeInner.port()"
  summary: "Get the port property: The port for communicating the probe. Possible values range from 1 to 65535, inclusive."
  syntax: "public Integer port()"
  returns:
    description: "the port value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.protocol()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.protocol()"
  name: "protocol()"
  nameWithType: "ProbeInner.protocol()"
  summary: "Get the protocol property: The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful."
  syntax: "public ProbeProtocol protocol()"
  returns:
    description: "the protocol value."
    type: "<xref href=\"com.azure.resourcemanager.network.models.ProbeProtocol?alt=com.azure.resourcemanager.network.models.ProbeProtocol&text=ProbeProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.provisioningState()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ProbeInner.provisioningState()"
  summary: "Get the provisioningState property: The provisioning state of the probe resource."
  syntax: "public ProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.network.models.ProvisioningState?alt=com.azure.resourcemanager.network.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.requestPath()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.requestPath()"
  name: "requestPath()"
  nameWithType: "ProbeInner.requestPath()"
  summary: "Get the requestPath property: The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value."
  syntax: "public String requestPath()"
  returns:
    description: "the requestPath value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.type()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.type()"
  name: "type()"
  nameWithType: "ProbeInner.type()"
  summary: "Get the type property: Type of the resource."
  syntax: "public String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.validate()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.validate()"
  name: "validate()"
  nameWithType: "ProbeInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withId(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withId(String id)"
  name: "withId(String id)"
  nameWithType: "ProbeInner.withId(String id)"
  overridden: "com.azure.core.management.SubResource.withId(java.lang.String)"
  parameters:
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ProbeInner withId(String id)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ProbeInner?alt=com.azure.resourcemanager.network.fluent.models.ProbeInner&text=ProbeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withIntervalInSeconds(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withIntervalInSeconds(Integer intervalInSeconds)"
  name: "withIntervalInSeconds(Integer intervalInSeconds)"
  nameWithType: "ProbeInner.withIntervalInSeconds(Integer intervalInSeconds)"
  summary: "Set the intervalInSeconds property: The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5."
  parameters:
  - description: "the intervalInSeconds value to set."
    name: "intervalInSeconds"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ProbeInner withIntervalInSeconds(Integer intervalInSeconds)"
  returns:
    description: "the ProbeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ProbeInner?alt=com.azure.resourcemanager.network.fluent.models.ProbeInner&text=ProbeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withName(String name)"
  name: "withName(String name)"
  nameWithType: "ProbeInner.withName(String name)"
  summary: "Set the name property: The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ProbeInner withName(String name)"
  returns:
    description: "the ProbeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ProbeInner?alt=com.azure.resourcemanager.network.fluent.models.ProbeInner&text=ProbeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withNumberOfProbes(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withNumberOfProbes(Integer numberOfProbes)"
  name: "withNumberOfProbes(Integer numberOfProbes)"
  nameWithType: "ProbeInner.withNumberOfProbes(Integer numberOfProbes)"
  summary: "Set the numberOfProbes property: The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure."
  parameters:
  - description: "the numberOfProbes value to set."
    name: "numberOfProbes"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ProbeInner withNumberOfProbes(Integer numberOfProbes)"
  returns:
    description: "the ProbeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ProbeInner?alt=com.azure.resourcemanager.network.fluent.models.ProbeInner&text=ProbeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withPort(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withPort(Integer port)"
  name: "withPort(Integer port)"
  nameWithType: "ProbeInner.withPort(Integer port)"
  summary: "Set the port property: The port for communicating the probe. Possible values range from 1 to 65535, inclusive."
  parameters:
  - description: "the port value to set."
    name: "port"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ProbeInner withPort(Integer port)"
  returns:
    description: "the ProbeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ProbeInner?alt=com.azure.resourcemanager.network.fluent.models.ProbeInner&text=ProbeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withProtocol(com.azure.resourcemanager.network.models.ProbeProtocol)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withProtocol(ProbeProtocol protocol)"
  name: "withProtocol(ProbeProtocol protocol)"
  nameWithType: "ProbeInner.withProtocol(ProbeProtocol protocol)"
  summary: "Set the protocol property: The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful."
  parameters:
  - description: "the protocol value to set."
    name: "protocol"
    type: "<xref href=\"com.azure.resourcemanager.network.models.ProbeProtocol?alt=com.azure.resourcemanager.network.models.ProbeProtocol&text=ProbeProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ProbeInner withProtocol(ProbeProtocol protocol)"
  returns:
    description: "the ProbeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ProbeInner?alt=com.azure.resourcemanager.network.fluent.models.ProbeInner&text=ProbeInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withRequestPath(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ProbeInner.withRequestPath(String requestPath)"
  name: "withRequestPath(String requestPath)"
  nameWithType: "ProbeInner.withRequestPath(String requestPath)"
  summary: "Set the requestPath property: The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value."
  parameters:
  - description: "the requestPath value to set."
    name: "requestPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ProbeInner withRequestPath(String requestPath)"
  returns:
    description: "the ProbeInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ProbeInner?alt=com.azure.resourcemanager.network.fluent.models.ProbeInner&text=ProbeInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.14.0
