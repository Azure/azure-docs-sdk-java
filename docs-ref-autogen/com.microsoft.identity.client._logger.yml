### YamlMime:ManagedReference
items:
- uid: com.microsoft.identity.client._logger
  id: _logger
  parent: com.microsoft.identity.client
  children:
  - com.microsoft.identity.client._logger.getInstance()
  - com.microsoft.identity.client._logger.setEnableLogcatLog(final boolean)
  - com.microsoft.identity.client._logger.setEnablePII(final boolean)
  - com.microsoft.identity.client._logger.setExternalLogger(final ILoggerCallback)
  - com.microsoft.identity.client._logger.setLogLevel(final LogLevel)
  href: com.microsoft.identity.client._logger.yml
  langs:
  - java
  name: Logger
  nameWithType: Logger
  fullName: com.microsoft.identity.client.Logger
  type: Class
  source:
    remote: &o0
      path: msal/src/main/java/com/microsoft/identity/client/Logger.java
      branch: master
      repo: https://github.com/AzureAD/microsoft-authentication-library-for-android
    path: msal/src/main/java/com/microsoft/identity/client/Logger.java
    startLine: 68
  package: com.microsoft.identity.client
  summary: >-
    <p>Override public void log(String tag, <xref uid="com.microsoft.identity.client._logger._log_level" data-throw-if-not-resolved="false">Logger.LogLevel</xref> logLevel, String message, String additionalMessage) { } });   Loglevel can be specified at <xref uid="com.microsoft.identity.client._logger._log_level.ERROR" data-throw-if-not-resolved="false">LogLevel#ERROR</xref>, <xref uid="com.microsoft.identity.client._logger._log_level.WARNING" data-throw-if-not-resolved="false">LogLevel#WARNING</xref>, <xref uid="com.microsoft.identity.client._logger._log_level.INFO" data-throw-if-not-resolved="false">LogLevel#INFO</xref> and <xref uid="com.microsoft.identity.client._logger._log_level.VERBOSE" data-throw-if-not-resolved="false">LogLevel#VERBOSE</xref>. The sdk enables the verbose level logging by default, to set different level logging: <pre><code>Logger.getInstance().setLogLevel(Loglevel)

        </code></pre> By default, the sdk doesn't send any log messages that contain PII (personal identifiable information) info. To enable PII logging: <pre><code>Logger.getInstance().setEnablePII(true);

        </code></pre></p>
  syntax: &o1
    content: public class Logger
  inheritance:
  - java.lang.Object
- uid: com.microsoft.identity.client._logger.getInstance()
  id: getInstance()
  parent: com.microsoft.identity.client._logger
  href: com.microsoft.identity.client._logger.yml
  langs:
  - java
  name: getInstance()
  nameWithType: Logger.getInstance()
  fullName: static Logger com.microsoft.identity.client.Logger.getInstance()
  overload: com.microsoft.identity.client._logger.getInstance*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/Logger.java
    startLine: 81
  package: com.microsoft.identity.client
  syntax:
    content: public static Logger getInstance()
    return:
      type: com.microsoft.identity.client._logger
      description: <p>The single instance of <xref uid="com.microsoft.identity.client._logger" data-throw-if-not-resolved="false">Logger</xref>. </p>
- uid: com.microsoft.identity.client._logger.setEnableLogcatLog(final boolean)
  id: setEnableLogcatLog(final boolean)
  parent: com.microsoft.identity.client._logger
  href: com.microsoft.identity.client._logger.yml
  langs:
  - java
  name: setEnableLogcatLog(final boolean enableLogcatLog)
  nameWithType: Logger.setEnableLogcatLog(final boolean enableLogcatLog)
  fullName: void com.microsoft.identity.client.Logger.setEnableLogcatLog(final boolean enableLogcatLog)
  overload: com.microsoft.identity.client._logger.setEnableLogcatLog*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/Logger.java
    startLine: 119
  package: com.microsoft.identity.client
  summary: >-
    <p>Enable/Disable the Android logcat logging. By default, the sdk enables it.</p>

    <p></p>
  syntax:
    content: public void setEnableLogcatLog(final boolean enableLogcatLog)
    parameters:
    - id: enableLogcatLog
      type: 4dda0764
      description: <p>True if enabling the logcat logging, false otherwise. </p>
- uid: com.microsoft.identity.client._logger.setEnablePII(final boolean)
  id: setEnablePII(final boolean)
  parent: com.microsoft.identity.client._logger
  href: com.microsoft.identity.client._logger.yml
  langs:
  - java
  name: setEnablePII(final boolean enablePII)
  nameWithType: Logger.setEnablePII(final boolean enablePII)
  fullName: void com.microsoft.identity.client.Logger.setEnablePII(final boolean enablePII)
  overload: com.microsoft.identity.client._logger.setEnablePII*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/Logger.java
    startLine: 128
  package: com.microsoft.identity.client
  summary: >-
    <p>Enable log message with PII (personal identifiable information) info. By default, MSAL doesn't log any PII.</p>

    <p></p>
  syntax:
    content: public void setEnablePII(final boolean enablePII)
    parameters:
    - id: enablePII
      type: 4dda0764
      description: <p>True if enabling PII info to be logged, false otherwise. </p>
- uid: com.microsoft.identity.client._logger.setExternalLogger(final ILoggerCallback)
  id: setExternalLogger(final ILoggerCallback)
  parent: com.microsoft.identity.client._logger
  href: com.microsoft.identity.client._logger.yml
  langs:
  - java
  name: setExternalLogger(final ILoggerCallback externalLogger)
  nameWithType: Logger.setExternalLogger(final ILoggerCallback externalLogger)
  fullName: void com.microsoft.identity.client.Logger.setExternalLogger(final ILoggerCallback externalLogger)
  overload: com.microsoft.identity.client._logger.setExternalLogger*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/Logger.java
    startLine: 102
  package: com.microsoft.identity.client
  summary: >-
    <p>Set the custom logger. Configures external logging to configure a callback that the sdk will use to pass each log message. Overriding the logger callback is not allowed.</p>

    <p></p>
  syntax:
    content: public void setExternalLogger(final ILoggerCallback externalLogger)
    parameters:
    - id: externalLogger
      type: 93de0ef9com.microsoft.identity.client._i_logger_callback
      description: <p>The reference to the <xref uid="com.microsoft.identity.client._i_logger_callback" data-throw-if-not-resolved="false">ILoggerCallback</xref> that can output the logs to the designated places. </p>
  exceptions:
  - type: 12fe80de
    description: <p>if external logger is already set, and the caller is trying to set it again. </p>
- uid: com.microsoft.identity.client._logger.setLogLevel(final LogLevel)
  id: setLogLevel(final LogLevel)
  parent: com.microsoft.identity.client._logger
  href: com.microsoft.identity.client._logger.yml
  langs:
  - java
  name: setLogLevel(final LogLevel logLevel)
  nameWithType: Logger.setLogLevel(final LogLevel logLevel)
  fullName: void com.microsoft.identity.client.Logger.setLogLevel(final LogLevel logLevel)
  overload: com.microsoft.identity.client._logger.setLogLevel*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/Logger.java
    startLine: 90
  package: com.microsoft.identity.client
  summary: >-
    <p>Set the log level for diagnostic purpose. By default, the sdk enables the verbose level logging.</p>

    <p></p>
  syntax:
    content: public void setLogLevel(final LogLevel logLevel)
    parameters:
    - id: logLevel
      type: 93de0ef9com.microsoft.identity.client._logger._log_level
      description: <p>The <xref uid="com.microsoft.identity.client._logger._log_level" data-throw-if-not-resolved="false">LogLevel</xref> to be enabled for the diagnostic logging. </p>
references:
- uid: com.microsoft.identity.client._logger.getInstance*
  name: getInstance
  nameWithType: Logger.getInstance
  fullName: static Logger com.microsoft.identity.client.Logger.getInstance
  package: com.microsoft.identity.client
- uid: 93de0ef9com.microsoft.identity.client._logger._log_level
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.identity.client._logger._log_level
    name: Logger.LogLevel
    fullName: com.microsoft.identity.client.Logger.LogLevel
    href: com.microsoft.identity.client._logger._log_level.yml
- uid: com.microsoft.identity.client._logger.setLogLevel*
  name: setLogLevel
  nameWithType: Logger.setLogLevel
  fullName: void com.microsoft.identity.client.Logger.setLogLevel
  package: com.microsoft.identity.client
- uid: 12fe80de
  spec.java:
  - name: IllegalStateException
    fullName: IllegalStateException
- uid: 93de0ef9com.microsoft.identity.client._i_logger_callback
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.identity.client._i_logger_callback
    name: ILoggerCallback
    fullName: com.microsoft.identity.client.ILoggerCallback
    href: com.microsoft.identity.client._i_logger_callback.yml
- uid: com.microsoft.identity.client._logger.setExternalLogger*
  name: setExternalLogger
  nameWithType: Logger.setExternalLogger
  fullName: void com.microsoft.identity.client.Logger.setExternalLogger
  package: com.microsoft.identity.client
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: com.microsoft.identity.client._logger.setEnableLogcatLog*
  name: setEnableLogcatLog
  nameWithType: Logger.setEnableLogcatLog
  fullName: void com.microsoft.identity.client.Logger.setEnableLogcatLog
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client._logger.setEnablePII*
  name: setEnablePII
  nameWithType: Logger.setEnablePII
  fullName: void com.microsoft.identity.client.Logger.setEnablePII
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client._logger
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client._logger.yml
  name: Logger
  nameWithType: Logger
  fullName: com.microsoft.identity.client.Logger
  type: Class
  summary: >-
    <p>Override public void log(String tag, <xref uid="com.microsoft.identity.client._logger._log_level" data-throw-if-not-resolved="false">Logger.LogLevel</xref> logLevel, String message, String additionalMessage) { } });   Loglevel can be specified at <xref uid="com.microsoft.identity.client._logger._log_level.ERROR" data-throw-if-not-resolved="false">LogLevel#ERROR</xref>, <xref uid="com.microsoft.identity.client._logger._log_level.WARNING" data-throw-if-not-resolved="false">LogLevel#WARNING</xref>, <xref uid="com.microsoft.identity.client._logger._log_level.INFO" data-throw-if-not-resolved="false">LogLevel#INFO</xref> and <xref uid="com.microsoft.identity.client._logger._log_level.VERBOSE" data-throw-if-not-resolved="false">LogLevel#VERBOSE</xref>. The sdk enables the verbose level logging by default, to set different level logging: <pre><code>Logger.getInstance().setLogLevel(Loglevel)

        </code></pre> By default, the sdk doesn't send any log messages that contain PII (personal identifiable information) info. To enable PII logging: <pre><code>Logger.getInstance().setEnablePII(true);

        </code></pre></p>
  syntax: *o1
- uid: com.microsoft.identity.client._logger._log_level
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client._logger._log_level.yml
  name: Logger.LogLevel
  nameWithType: Logger.LogLevel
  fullName: com.microsoft.identity.client.Logger.LogLevel
  type: Enum
  summary: <p>Enum class for <xref uid="com.microsoft.identity.client._logger._log_level" data-throw-if-not-resolved="false">LogLevel</xref> that the sdk recognizes. </p>
  syntax:
    content: public enum LogLevel
- uid: com.microsoft.identity.client._logger._log_level.VERBOSE
  parent: com.microsoft.identity.client._logger._log_level
  href: com.microsoft.identity.client._logger._log_level.yml
  name: VERBOSE
  nameWithType: Logger.LogLevel.VERBOSE
  fullName: com.microsoft.identity.client.Logger.LogLevel.VERBOSE
  type: Field
  summary: <p>Verbose level logging. </p>
  syntax:
    content: public VERBOSE
- uid: com.microsoft.identity.client._i_logger_callback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client._i_logger_callback.yml
  name: ILoggerCallback
  nameWithType: ILoggerCallback
  fullName: com.microsoft.identity.client.ILoggerCallback
  type: Interface
  summary: <p>Interface for apps to configure the external logging and implement the callback to designate the output of the log messages. </p>
  syntax:
    content: public interface ILoggerCallback
- uid: com.microsoft.identity.client._logger._log_level.ERROR
  parent: com.microsoft.identity.client._logger._log_level
  href: com.microsoft.identity.client._logger._log_level.yml
  name: ERROR
  nameWithType: Logger.LogLevel.ERROR
  fullName: com.microsoft.identity.client.Logger.LogLevel.ERROR
  type: Field
  summary: <p>Error level logging. </p>
  syntax:
    content: public ERROR
- uid: com.microsoft.identity.client._logger._log_level.WARNING
  parent: com.microsoft.identity.client._logger._log_level
  href: com.microsoft.identity.client._logger._log_level.yml
  name: WARNING
  nameWithType: Logger.LogLevel.WARNING
  fullName: com.microsoft.identity.client.Logger.LogLevel.WARNING
  type: Field
  summary: <p>Warning level logging. </p>
  syntax:
    content: public WARNING
- uid: com.microsoft.identity.client._logger._log_level.INFO
  parent: com.microsoft.identity.client._logger._log_level
  href: com.microsoft.identity.client._logger._log_level.yml
  name: INFO
  nameWithType: Logger.LogLevel.INFO
  fullName: com.microsoft.identity.client.Logger.LogLevel.INFO
  type: Field
  summary: <p>Info level logging. </p>
  syntax:
    content: public INFO
