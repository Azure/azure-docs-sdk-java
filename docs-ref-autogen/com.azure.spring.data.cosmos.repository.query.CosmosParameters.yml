### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.query.CosmosParameters"
fullName: "com.azure.spring.data.cosmos.repository.query.CosmosParameters"
name: "CosmosParameters"
nameWithType: "CosmosParameters"
summary: "Method parameters that have to be bound to query parameters or applied to the query independently."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.repository.query.Parameters?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
- classRef: "<xref href=\"org.springframework.data.repository.query.Parameters?alt=org.springframework.data.repository.query.Parameters&text=Parameters\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.springframework.data.repository.query.Parameters.createFrom(java.util.List<T>)?alt=org.springframework.data.repository.query.Parameters.createFrom&text=createFrom\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.getBindableParameter(int)?alt=org.springframework.data.repository.query.Parameters.getBindableParameter&text=getBindableParameter\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.getBindableParameters()?alt=org.springframework.data.repository.query.Parameters.getBindableParameters&text=getBindableParameters\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.getDynamicProjectionIndex()?alt=org.springframework.data.repository.query.Parameters.getDynamicProjectionIndex&text=getDynamicProjectionIndex\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.getLimitIndex()?alt=org.springframework.data.repository.query.Parameters.getLimitIndex&text=getLimitIndex\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.getNumberOfParameters()?alt=org.springframework.data.repository.query.Parameters.getNumberOfParameters&text=getNumberOfParameters\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.getPageableIndex()?alt=org.springframework.data.repository.query.Parameters.getPageableIndex&text=getPageableIndex\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.getParameter(int)?alt=org.springframework.data.repository.query.Parameters.getParameter&text=getParameter\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.getScrollPositionIndex()?alt=org.springframework.data.repository.query.Parameters.getScrollPositionIndex&text=getScrollPositionIndex\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.getSortIndex()?alt=org.springframework.data.repository.query.Parameters.getSortIndex&text=getSortIndex\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.hasDynamicProjection()?alt=org.springframework.data.repository.query.Parameters.hasDynamicProjection&text=hasDynamicProjection\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.hasLimitParameter()?alt=org.springframework.data.repository.query.Parameters.hasLimitParameter&text=hasLimitParameter\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.hasPageableParameter()?alt=org.springframework.data.repository.query.Parameters.hasPageableParameter&text=hasPageableParameter\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.hasParameterAt(int)?alt=org.springframework.data.repository.query.Parameters.hasParameterAt&text=hasParameterAt\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.hasScrollPositionParameter()?alt=org.springframework.data.repository.query.Parameters.hasScrollPositionParameter&text=hasScrollPositionParameter\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.hasSortParameter()?alt=org.springframework.data.repository.query.Parameters.hasSortParameter&text=hasSortParameter\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.hasSpecialParameter()?alt=org.springframework.data.repository.query.Parameters.hasSpecialParameter&text=hasSpecialParameter\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.isBindable(java.lang.Class<?>)?alt=org.springframework.data.repository.query.Parameters.isBindable&text=isBindable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.iterator()?alt=org.springframework.data.repository.query.Parameters.iterator&text=iterator\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.query.Parameters.potentiallySortsDynamically()?alt=org.springframework.data.repository.query.Parameters.potentiallySortsDynamically&text=potentiallySortsDynamically\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **CosmosParameters**</br> extends <xref href=\"org.springframework.data.repository.query.Parameters?alt=org.springframework.data.repository.query.Parameters&text=Parameters\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.spring.data.cosmos.repository.query.CosmosParameters?alt=com.azure.spring.data.cosmos.repository.query.CosmosParameters&text=CosmosParameters\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.spring.data.cosmos.repository.query.CosmosParameter?alt=com.azure.spring.data.cosmos.repository.query.CosmosParameter&text=CosmosParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.spring.data.cosmos.repository.query.CosmosParameters.CosmosParameters(java.lang.reflect.Method)"
  fullName: "com.azure.spring.data.cosmos.repository.query.CosmosParameters.CosmosParameters(Method method)"
  name: "CosmosParameters(Method method)"
  nameWithType: "CosmosParameters.CosmosParameters(Method method)"
  summary: "Creates a new instance of <xref uid=\"com.azure.spring.data.cosmos.repository.query.CosmosParameters\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosParameters\"></xref>."
  parameters:
  - description: "must not be null."
    name: "method"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Method.html\">Method</a>"
  syntax: "public CosmosParameters(Method method)"
  desc: "Creates a new instance of <xref uid=\"com.azure.spring.data.cosmos.repository.query.CosmosParameters\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosParameters\"></xref>."
methods:
- uid: "com.azure.spring.data.cosmos.repository.query.CosmosParameters.createFrom(java.util.List<com.azure.spring.data.cosmos.repository.query.CosmosParameter>)"
  fullName: "com.azure.spring.data.cosmos.repository.query.CosmosParameters.createFrom(List<CosmosParameter> parameters)"
  name: "createFrom(List<CosmosParameter> parameters)"
  nameWithType: "CosmosParameters.createFrom(List<CosmosParameter> parameters)"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.repository.query.Parameters.createFrom(java.util.List<T>)"
  parameters:
  - name: "parameters"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.spring.data.cosmos.repository.query.CosmosParameter?alt=com.azure.spring.data.cosmos.repository.query.CosmosParameter&text=CosmosParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected CosmosParameters createFrom(List<CosmosParameter> parameters)"
  returns:
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.query.CosmosParameters?alt=com.azure.spring.data.cosmos.repository.query.CosmosParameters&text=CosmosParameters\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Method parameters that have to be bound to query parameters or applied to the query independently."
metadata: {}
package: "com.azure.spring.data.cosmos.repository.query"
artifact: com.azure:azure-spring-data-cosmos:5.16.0
