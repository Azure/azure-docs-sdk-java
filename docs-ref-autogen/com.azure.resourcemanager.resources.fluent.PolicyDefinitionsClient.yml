### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient"
fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient"
name: "PolicyDefinitionsClient"
nameWithType: "PolicyDefinitionsClient"
summary: "An instance of this class provides access to all the operations defined in Policy<wbr>Definitions<wbr>Client."
syntax: "public interface PolicyDefinitionsClient"
methods:
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdate(java.lang.String,com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdate(String policyDefinitionName, PolicyDefinitionInner parameters)"
  name: "createOrUpdate(String policyDefinitionName, PolicyDefinitionInner parameters)"
  nameWithType: "PolicyDefinitionsClient.createOrUpdate(String policyDefinitionName, PolicyDefinitionInner parameters)"
  summary: "This operation creates or updates a policy definition in the given subscription with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to create."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The policy definition properties."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PolicyDefinitionInner createOrUpdate(String policyDefinitionName, PolicyDefinitionInner parameters)"
  desc: "This operation creates or updates a policy definition in the given subscription with the given name."
  returns:
    description: "the policy definition."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateAsync(String policyDefinitionName, PolicyDefinitionInner parameters)"
  name: "createOrUpdateAsync(String policyDefinitionName, PolicyDefinitionInner parameters)"
  nameWithType: "PolicyDefinitionsClient.createOrUpdateAsync(String policyDefinitionName, PolicyDefinitionInner parameters)"
  summary: "This operation creates or updates a policy definition in the given subscription with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to create."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The policy definition properties."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<PolicyDefinitionInner> createOrUpdateAsync(String policyDefinitionName, PolicyDefinitionInner parameters)"
  desc: "This operation creates or updates a policy definition in the given subscription with the given name."
  returns:
    description: "the policy definition on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateAtManagementGroup(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateAtManagementGroup(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters)"
  name: "createOrUpdateAtManagementGroup(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters)"
  nameWithType: "PolicyDefinitionsClient.createOrUpdateAtManagementGroup(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters)"
  summary: "This operation creates or updates a policy definition in the given management group with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to create."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The policy definition properties."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PolicyDefinitionInner createOrUpdateAtManagementGroup(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters)"
  desc: "This operation creates or updates a policy definition in the given management group with the given name."
  returns:
    description: "the policy definition."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateAtManagementGroupAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateAtManagementGroupAsync(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters)"
  name: "createOrUpdateAtManagementGroupAsync(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters)"
  nameWithType: "PolicyDefinitionsClient.createOrUpdateAtManagementGroupAsync(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters)"
  summary: "This operation creates or updates a policy definition in the given management group with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to create."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The policy definition properties."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<PolicyDefinitionInner> createOrUpdateAtManagementGroupAsync(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters)"
  desc: "This operation creates or updates a policy definition in the given management group with the given name."
  returns:
    description: "the policy definition on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateAtManagementGroupWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateAtManagementGroupWithResponse(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters, Context context)"
  name: "createOrUpdateAtManagementGroupWithResponse(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters, Context context)"
  nameWithType: "PolicyDefinitionsClient.createOrUpdateAtManagementGroupWithResponse(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters, Context context)"
  summary: "This operation creates or updates a policy definition in the given management group with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to create."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The policy definition properties."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PolicyDefinitionInner> createOrUpdateAtManagementGroupWithResponse(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters, Context context)"
  desc: "This operation creates or updates a policy definition in the given management group with the given name."
  returns:
    description: "the policy definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateAtManagementGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateAtManagementGroupWithResponseAsync(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters)"
  name: "createOrUpdateAtManagementGroupWithResponseAsync(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters)"
  nameWithType: "PolicyDefinitionsClient.createOrUpdateAtManagementGroupWithResponseAsync(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters)"
  summary: "This operation creates or updates a policy definition in the given management group with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to create."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The policy definition properties."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<PolicyDefinitionInner>> createOrUpdateAtManagementGroupWithResponseAsync(String policyDefinitionName, String managementGroupId, PolicyDefinitionInner parameters)"
  desc: "This operation creates or updates a policy definition in the given management group with the given name."
  returns:
    description: "the policy definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateWithResponse(java.lang.String,com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateWithResponse(String policyDefinitionName, PolicyDefinitionInner parameters, Context context)"
  name: "createOrUpdateWithResponse(String policyDefinitionName, PolicyDefinitionInner parameters, Context context)"
  nameWithType: "PolicyDefinitionsClient.createOrUpdateWithResponse(String policyDefinitionName, PolicyDefinitionInner parameters, Context context)"
  summary: "This operation creates or updates a policy definition in the given subscription with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to create."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The policy definition properties."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PolicyDefinitionInner> createOrUpdateWithResponse(String policyDefinitionName, PolicyDefinitionInner parameters, Context context)"
  desc: "This operation creates or updates a policy definition in the given subscription with the given name."
  returns:
    description: "the policy definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.createOrUpdateWithResponseAsync(String policyDefinitionName, PolicyDefinitionInner parameters)"
  name: "createOrUpdateWithResponseAsync(String policyDefinitionName, PolicyDefinitionInner parameters)"
  nameWithType: "PolicyDefinitionsClient.createOrUpdateWithResponseAsync(String policyDefinitionName, PolicyDefinitionInner parameters)"
  summary: "This operation creates or updates a policy definition in the given subscription with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to create."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The policy definition properties."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<PolicyDefinitionInner>> createOrUpdateWithResponseAsync(String policyDefinitionName, PolicyDefinitionInner parameters)"
  desc: "This operation creates or updates a policy definition in the given subscription with the given name."
  returns:
    description: "the policy definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.delete(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.delete(String policyDefinitionName)"
  name: "delete(String policyDefinitionName)"
  nameWithType: "PolicyDefinitionsClient.delete(String policyDefinitionName)"
  summary: "This operation deletes the policy definition in the given subscription with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to delete."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void delete(String policyDefinitionName)"
  desc: "This operation deletes the policy definition in the given subscription with the given name."
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteAsync(String policyDefinitionName)"
  name: "deleteAsync(String policyDefinitionName)"
  nameWithType: "PolicyDefinitionsClient.deleteAsync(String policyDefinitionName)"
  summary: "This operation deletes the policy definition in the given subscription with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to delete."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> deleteAsync(String policyDefinitionName)"
  desc: "This operation deletes the policy definition in the given subscription with the given name."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteAtManagementGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteAtManagementGroup(String policyDefinitionName, String managementGroupId)"
  name: "deleteAtManagementGroup(String policyDefinitionName, String managementGroupId)"
  nameWithType: "PolicyDefinitionsClient.deleteAtManagementGroup(String policyDefinitionName, String managementGroupId)"
  summary: "This operation deletes the policy definition in the given management group with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to delete."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void deleteAtManagementGroup(String policyDefinitionName, String managementGroupId)"
  desc: "This operation deletes the policy definition in the given management group with the given name."
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteAtManagementGroupAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteAtManagementGroupAsync(String policyDefinitionName, String managementGroupId)"
  name: "deleteAtManagementGroupAsync(String policyDefinitionName, String managementGroupId)"
  nameWithType: "PolicyDefinitionsClient.deleteAtManagementGroupAsync(String policyDefinitionName, String managementGroupId)"
  summary: "This operation deletes the policy definition in the given management group with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to delete."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> deleteAtManagementGroupAsync(String policyDefinitionName, String managementGroupId)"
  desc: "This operation deletes the policy definition in the given management group with the given name."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteAtManagementGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteAtManagementGroupWithResponse(String policyDefinitionName, String managementGroupId, Context context)"
  name: "deleteAtManagementGroupWithResponse(String policyDefinitionName, String managementGroupId, Context context)"
  nameWithType: "PolicyDefinitionsClient.deleteAtManagementGroupWithResponse(String policyDefinitionName, String managementGroupId, Context context)"
  summary: "This operation deletes the policy definition in the given management group with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to delete."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteAtManagementGroupWithResponse(String policyDefinitionName, String managementGroupId, Context context)"
  desc: "This operation deletes the policy definition in the given management group with the given name."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteAtManagementGroupWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteAtManagementGroupWithResponseAsync(String policyDefinitionName, String managementGroupId)"
  name: "deleteAtManagementGroupWithResponseAsync(String policyDefinitionName, String managementGroupId)"
  nameWithType: "PolicyDefinitionsClient.deleteAtManagementGroupWithResponseAsync(String policyDefinitionName, String managementGroupId)"
  summary: "This operation deletes the policy definition in the given management group with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to delete."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Void>> deleteAtManagementGroupWithResponseAsync(String policyDefinitionName, String managementGroupId)"
  desc: "This operation deletes the policy definition in the given management group with the given name."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteWithResponse(String policyDefinitionName, Context context)"
  name: "deleteWithResponse(String policyDefinitionName, Context context)"
  nameWithType: "PolicyDefinitionsClient.deleteWithResponse(String policyDefinitionName, Context context)"
  summary: "This operation deletes the policy definition in the given subscription with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to delete."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String policyDefinitionName, Context context)"
  desc: "This operation deletes the policy definition in the given subscription with the given name."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.deleteWithResponseAsync(String policyDefinitionName)"
  name: "deleteWithResponseAsync(String policyDefinitionName)"
  nameWithType: "PolicyDefinitionsClient.deleteWithResponseAsync(String policyDefinitionName)"
  summary: "This operation deletes the policy definition in the given subscription with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to delete."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Void>> deleteWithResponseAsync(String policyDefinitionName)"
  desc: "This operation deletes the policy definition in the given subscription with the given name."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.get(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.get(String policyDefinitionName)"
  name: "get(String policyDefinitionName)"
  nameWithType: "PolicyDefinitionsClient.get(String policyDefinitionName)"
  summary: "This operation retrieves the policy definition in the given subscription with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to get."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PolicyDefinitionInner get(String policyDefinitionName)"
  desc: "This operation retrieves the policy definition in the given subscription with the given name."
  returns:
    description: "the policy definition."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getAsync(String policyDefinitionName)"
  name: "getAsync(String policyDefinitionName)"
  nameWithType: "PolicyDefinitionsClient.getAsync(String policyDefinitionName)"
  summary: "This operation retrieves the policy definition in the given subscription with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to get."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<PolicyDefinitionInner> getAsync(String policyDefinitionName)"
  desc: "This operation retrieves the policy definition in the given subscription with the given name."
  returns:
    description: "the policy definition on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getAtManagementGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getAtManagementGroup(String policyDefinitionName, String managementGroupId)"
  name: "getAtManagementGroup(String policyDefinitionName, String managementGroupId)"
  nameWithType: "PolicyDefinitionsClient.getAtManagementGroup(String policyDefinitionName, String managementGroupId)"
  summary: "This operation retrieves the policy definition in the given management group with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to get."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PolicyDefinitionInner getAtManagementGroup(String policyDefinitionName, String managementGroupId)"
  desc: "This operation retrieves the policy definition in the given management group with the given name."
  returns:
    description: "the policy definition."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getAtManagementGroupAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getAtManagementGroupAsync(String policyDefinitionName, String managementGroupId)"
  name: "getAtManagementGroupAsync(String policyDefinitionName, String managementGroupId)"
  nameWithType: "PolicyDefinitionsClient.getAtManagementGroupAsync(String policyDefinitionName, String managementGroupId)"
  summary: "This operation retrieves the policy definition in the given management group with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to get."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<PolicyDefinitionInner> getAtManagementGroupAsync(String policyDefinitionName, String managementGroupId)"
  desc: "This operation retrieves the policy definition in the given management group with the given name."
  returns:
    description: "the policy definition on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getAtManagementGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getAtManagementGroupWithResponse(String policyDefinitionName, String managementGroupId, Context context)"
  name: "getAtManagementGroupWithResponse(String policyDefinitionName, String managementGroupId, Context context)"
  nameWithType: "PolicyDefinitionsClient.getAtManagementGroupWithResponse(String policyDefinitionName, String managementGroupId, Context context)"
  summary: "This operation retrieves the policy definition in the given management group with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to get."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PolicyDefinitionInner> getAtManagementGroupWithResponse(String policyDefinitionName, String managementGroupId, Context context)"
  desc: "This operation retrieves the policy definition in the given management group with the given name."
  returns:
    description: "the policy definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getAtManagementGroupWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getAtManagementGroupWithResponseAsync(String policyDefinitionName, String managementGroupId)"
  name: "getAtManagementGroupWithResponseAsync(String policyDefinitionName, String managementGroupId)"
  nameWithType: "PolicyDefinitionsClient.getAtManagementGroupWithResponseAsync(String policyDefinitionName, String managementGroupId)"
  summary: "This operation retrieves the policy definition in the given management group with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to get."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<PolicyDefinitionInner>> getAtManagementGroupWithResponseAsync(String policyDefinitionName, String managementGroupId)"
  desc: "This operation retrieves the policy definition in the given management group with the given name."
  returns:
    description: "the policy definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getBuiltIn(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getBuiltIn(String policyDefinitionName)"
  name: "getBuiltIn(String policyDefinitionName)"
  nameWithType: "PolicyDefinitionsClient.getBuiltIn(String policyDefinitionName)"
  summary: "This operation retrieves the built-in policy definition with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the built-in policy definition to get."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PolicyDefinitionInner getBuiltIn(String policyDefinitionName)"
  desc: "This operation retrieves the built-in policy definition with the given name."
  returns:
    description: "the policy definition."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getBuiltInAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getBuiltInAsync(String policyDefinitionName)"
  name: "getBuiltInAsync(String policyDefinitionName)"
  nameWithType: "PolicyDefinitionsClient.getBuiltInAsync(String policyDefinitionName)"
  summary: "This operation retrieves the built-in policy definition with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the built-in policy definition to get."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<PolicyDefinitionInner> getBuiltInAsync(String policyDefinitionName)"
  desc: "This operation retrieves the built-in policy definition with the given name."
  returns:
    description: "the policy definition on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getBuiltInWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getBuiltInWithResponse(String policyDefinitionName, Context context)"
  name: "getBuiltInWithResponse(String policyDefinitionName, Context context)"
  nameWithType: "PolicyDefinitionsClient.getBuiltInWithResponse(String policyDefinitionName, Context context)"
  summary: "This operation retrieves the built-in policy definition with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the built-in policy definition to get."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PolicyDefinitionInner> getBuiltInWithResponse(String policyDefinitionName, Context context)"
  desc: "This operation retrieves the built-in policy definition with the given name."
  returns:
    description: "the policy definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getBuiltInWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getBuiltInWithResponseAsync(String policyDefinitionName)"
  name: "getBuiltInWithResponseAsync(String policyDefinitionName)"
  nameWithType: "PolicyDefinitionsClient.getBuiltInWithResponseAsync(String policyDefinitionName)"
  summary: "This operation retrieves the built-in policy definition with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the built-in policy definition to get."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<PolicyDefinitionInner>> getBuiltInWithResponseAsync(String policyDefinitionName)"
  desc: "This operation retrieves the built-in policy definition with the given name."
  returns:
    description: "the policy definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getWithResponse(String policyDefinitionName, Context context)"
  name: "getWithResponse(String policyDefinitionName, Context context)"
  nameWithType: "PolicyDefinitionsClient.getWithResponse(String policyDefinitionName, Context context)"
  summary: "This operation retrieves the policy definition in the given subscription with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to get."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PolicyDefinitionInner> getWithResponse(String policyDefinitionName, Context context)"
  desc: "This operation retrieves the policy definition in the given subscription with the given name."
  returns:
    description: "the policy definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.getWithResponseAsync(String policyDefinitionName)"
  name: "getWithResponseAsync(String policyDefinitionName)"
  nameWithType: "PolicyDefinitionsClient.getWithResponseAsync(String policyDefinitionName)"
  summary: "This operation retrieves the policy definition in the given subscription with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the policy definition to get."
    name: "policyDefinitionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<PolicyDefinitionInner>> getWithResponseAsync(String policyDefinitionName)"
  desc: "This operation retrieves the policy definition in the given subscription with the given name."
  returns:
    description: "the policy definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.list()"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.list()"
  name: "list()"
  nameWithType: "PolicyDefinitionsClient.list()"
  summary: "This operation retrieves a list of all the policy definitions in a given subscription that match the optional given $filter."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<PolicyDefinitionInner> list()"
  desc: "This operation retrieves a list of all the policy definitions in a given subscription that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq \\{value\\}' or 'category eq '\\{value\\}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the subscription, including those that apply directly or from management groups that contain the given subscription. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given subscription. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose category match the \\{value\\}."
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.list(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.list(String filter, Integer top, Context context)"
  name: "list(String filter, Integer top, Context context)"
  nameWithType: "PolicyDefinitionsClient.list(String filter, Integer top, Context context)"
  summary: "This operation retrieves a list of all the policy definitions in a given subscription that match the optional given $filter."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. Valid values for $filter are: 'atExactScope()', 'policyType\n     -eq {value}' or 'category eq '{value}''. If $filter is not provided, no filtering is performed. If\n     $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given\n     scope. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy\n     definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and\n     Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions\n     whose category match the {value}."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Maximum number of records to return. When the $top filter is not provided, it will return 500 records."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PolicyDefinitionInner> list(String filter, Integer top, Context context)"
  desc: "This operation retrieves a list of all the policy definitions in a given subscription that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq \\{value\\}' or 'category eq '\\{value\\}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the subscription, including those that apply directly or from management groups that contain the given subscription. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given subscription. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose category match the \\{value\\}."
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listAsync()"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listAsync()"
  name: "listAsync()"
  nameWithType: "PolicyDefinitionsClient.listAsync()"
  summary: "This operation retrieves a list of all the policy definitions in a given subscription that match the optional given $filter."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<PolicyDefinitionInner> listAsync()"
  desc: "This operation retrieves a list of all the policy definitions in a given subscription that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq \\{value\\}' or 'category eq '\\{value\\}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the subscription, including those that apply directly or from management groups that contain the given subscription. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given subscription. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose category match the \\{value\\}."
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listAsync(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listAsync(String filter, Integer top)"
  name: "listAsync(String filter, Integer top)"
  nameWithType: "PolicyDefinitionsClient.listAsync(String filter, Integer top)"
  summary: "This operation retrieves a list of all the policy definitions in a given subscription that match the optional given $filter."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. Valid values for $filter are: 'atExactScope()', 'policyType\n     -eq {value}' or 'category eq '{value}''. If $filter is not provided, no filtering is performed. If\n     $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given\n     scope. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy\n     definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and\n     Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions\n     whose category match the {value}."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Maximum number of records to return. When the $top filter is not provided, it will return 500 records."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public abstract PagedFlux<PolicyDefinitionInner> listAsync(String filter, Integer top)"
  desc: "This operation retrieves a list of all the policy definitions in a given subscription that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq \\{value\\}' or 'category eq '\\{value\\}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the subscription, including those that apply directly or from management groups that contain the given subscription. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given subscription. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose category match the \\{value\\}."
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listBuiltIn()"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listBuiltIn()"
  name: "listBuiltIn()"
  nameWithType: "PolicyDefinitionsClient.listBuiltIn()"
  summary: "This operation retrieves a list of all the built-in policy definitions that match the optional given $filter."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<PolicyDefinitionInner> listBuiltIn()"
  desc: "This operation retrieves a list of all the built-in policy definitions that match the optional given $filter. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all built-in policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all built-in policy definitions whose category match the \\{value\\}."
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listBuiltIn(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listBuiltIn(String filter, Integer top, Context context)"
  name: "listBuiltIn(String filter, Integer top, Context context)"
  nameWithType: "PolicyDefinitionsClient.listBuiltIn(String filter, Integer top, Context context)"
  summary: "This operation retrieves a list of all the built-in policy definitions that match the optional given $filter."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. Valid values for $filter are: 'atExactScope()', 'policyType\n     -eq {value}' or 'category eq '{value}''. If $filter is not provided, no filtering is performed. If\n     $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given\n     scope. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy\n     definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and\n     Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions\n     whose category match the {value}."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Maximum number of records to return. When the $top filter is not provided, it will return 500 records."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PolicyDefinitionInner> listBuiltIn(String filter, Integer top, Context context)"
  desc: "This operation retrieves a list of all the built-in policy definitions that match the optional given $filter. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all built-in policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all built-in policy definitions whose category match the \\{value\\}."
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listBuiltInAsync()"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listBuiltInAsync()"
  name: "listBuiltInAsync()"
  nameWithType: "PolicyDefinitionsClient.listBuiltInAsync()"
  summary: "This operation retrieves a list of all the built-in policy definitions that match the optional given $filter."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<PolicyDefinitionInner> listBuiltInAsync()"
  desc: "This operation retrieves a list of all the built-in policy definitions that match the optional given $filter. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all built-in policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all built-in policy definitions whose category match the \\{value\\}."
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listBuiltInAsync(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listBuiltInAsync(String filter, Integer top)"
  name: "listBuiltInAsync(String filter, Integer top)"
  nameWithType: "PolicyDefinitionsClient.listBuiltInAsync(String filter, Integer top)"
  summary: "This operation retrieves a list of all the built-in policy definitions that match the optional given $filter."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. Valid values for $filter are: 'atExactScope()', 'policyType\n     -eq {value}' or 'category eq '{value}''. If $filter is not provided, no filtering is performed. If\n     $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given\n     scope. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy\n     definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and\n     Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions\n     whose category match the {value}."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Maximum number of records to return. When the $top filter is not provided, it will return 500 records."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public abstract PagedFlux<PolicyDefinitionInner> listBuiltInAsync(String filter, Integer top)"
  desc: "This operation retrieves a list of all the built-in policy definitions that match the optional given $filter. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all built-in policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all built-in policy definitions whose category match the \\{value\\}."
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listByManagementGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listByManagementGroup(String managementGroupId)"
  name: "listByManagementGroup(String managementGroupId)"
  nameWithType: "PolicyDefinitionsClient.listByManagementGroup(String managementGroupId)"
  summary: "This operation retrieves a list of all the policy definitions in a given management group that match the optional given $filter."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<PolicyDefinitionInner> listByManagementGroup(String managementGroupId)"
  desc: "This operation retrieves a list of all the policy definitions in a given management group that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq \\{value\\}' or 'category eq '\\{value\\}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the management group, including those that apply directly or from management groups that contain the given management group. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given management group. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose category match the \\{value\\}."
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listByManagementGroup(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listByManagementGroup(String managementGroupId, String filter, Integer top, Context context)"
  name: "listByManagementGroup(String managementGroupId, String filter, Integer top, Context context)"
  nameWithType: "PolicyDefinitionsClient.listByManagementGroup(String managementGroupId, String filter, Integer top, Context context)"
  summary: "This operation retrieves a list of all the policy definitions in a given management group that match the optional given $filter."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. Valid values for $filter are: 'atExactScope()', 'policyType\n     -eq {value}' or 'category eq '{value}''. If $filter is not provided, no filtering is performed. If\n     $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given\n     scope. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy\n     definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and\n     Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions\n     whose category match the {value}."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Maximum number of records to return. When the $top filter is not provided, it will return 500 records."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PolicyDefinitionInner> listByManagementGroup(String managementGroupId, String filter, Integer top, Context context)"
  desc: "This operation retrieves a list of all the policy definitions in a given management group that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq \\{value\\}' or 'category eq '\\{value\\}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the management group, including those that apply directly or from management groups that contain the given management group. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given management group. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose category match the \\{value\\}."
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listByManagementGroupAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listByManagementGroupAsync(String managementGroupId)"
  name: "listByManagementGroupAsync(String managementGroupId)"
  nameWithType: "PolicyDefinitionsClient.listByManagementGroupAsync(String managementGroupId)"
  summary: "This operation retrieves a list of all the policy definitions in a given management group that match the optional given $filter."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<PolicyDefinitionInner> listByManagementGroupAsync(String managementGroupId)"
  desc: "This operation retrieves a list of all the policy definitions in a given management group that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq \\{value\\}' or 'category eq '\\{value\\}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the management group, including those that apply directly or from management groups that contain the given management group. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given management group. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose category match the \\{value\\}."
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listByManagementGroupAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.listByManagementGroupAsync(String managementGroupId, String filter, Integer top)"
  name: "listByManagementGroupAsync(String managementGroupId, String filter, Integer top)"
  nameWithType: "PolicyDefinitionsClient.listByManagementGroupAsync(String managementGroupId, String filter, Integer top)"
  summary: "This operation retrieves a list of all the policy definitions in a given management group that match the optional given $filter."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the management group."
    name: "managementGroupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. Valid values for $filter are: 'atExactScope()', 'policyType\n     -eq {value}' or 'category eq '{value}''. If $filter is not provided, no filtering is performed. If\n     $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given\n     scope. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy\n     definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and\n     Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions\n     whose category match the {value}."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Maximum number of records to return. When the $top filter is not provided, it will return 500 records."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public abstract PagedFlux<PolicyDefinitionInner> listByManagementGroupAsync(String managementGroupId, String filter, Integer top)"
  desc: "This operation retrieves a list of all the policy definitions in a given management group that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq \\{value\\}' or 'category eq '\\{value\\}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the management group, including those that apply directly or from management groups that contain the given management group. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given management group. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose category match the \\{value\\}."
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in PolicyDefinitionsClient."
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
