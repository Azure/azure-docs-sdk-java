### YamlMime:JavaType
uid: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient"
fullName: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient"
name: "AsyncOperationStatusClient"
nameWithType: "AsyncOperationStatusClient"
summary: "An instance of this class provides access to all the operations defined in Async<wbr>Operation<wbr>Status<wbr>Client."
syntax: "public interface AsyncOperationStatusClient"
methods:
- uid: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient.get(String location, String operationId)"
  name: "get(String location, String operationId)"
  nameWithType: "AsyncOperationStatusClient.get(String location, String operationId)"
  summary: "For checking the ongoing status of an operation."
  modifiers:
  - "abstract"
  parameters:
  - description: "The location at which operation was triggered."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of asynchronous operation."
    name: "operationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract OperationStatusInner get(String location, String operationId)"
  desc: "For checking the ongoing status of an operation."
  returns:
    description: "asynchronous operation status."
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.OperationStatusInner?alt=com.azure.resourcemanager.redis.fluent.models.OperationStatusInner&text=OperationStatusInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient.getAsync(String location, String operationId)"
  name: "getAsync(String location, String operationId)"
  nameWithType: "AsyncOperationStatusClient.getAsync(String location, String operationId)"
  summary: "For checking the ongoing status of an operation."
  modifiers:
  - "abstract"
  parameters:
  - description: "The location at which operation was triggered."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of asynchronous operation."
    name: "operationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<OperationStatusInner> getAsync(String location, String operationId)"
  desc: "For checking the ongoing status of an operation."
  returns:
    description: "asynchronous operation status on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.redis.fluent.models.OperationStatusInner?alt=com.azure.resourcemanager.redis.fluent.models.OperationStatusInner&text=OperationStatusInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient.getWithResponse(String location, String operationId, Context context)"
  name: "getWithResponse(String location, String operationId, Context context)"
  nameWithType: "AsyncOperationStatusClient.getWithResponse(String location, String operationId, Context context)"
  summary: "For checking the ongoing status of an operation."
  modifiers:
  - "abstract"
  parameters:
  - description: "The location at which operation was triggered."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of asynchronous operation."
    name: "operationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<OperationStatusInner> getWithResponse(String location, String operationId, Context context)"
  desc: "For checking the ongoing status of an operation."
  returns:
    description: "asynchronous operation status along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redis.fluent.models.OperationStatusInner?alt=com.azure.resourcemanager.redis.fluent.models.OperationStatusInner&text=OperationStatusInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient.getWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.redis.fluent.AsyncOperationStatusClient.getWithResponseAsync(String location, String operationId)"
  name: "getWithResponseAsync(String location, String operationId)"
  nameWithType: "AsyncOperationStatusClient.getWithResponseAsync(String location, String operationId)"
  summary: "For checking the ongoing status of an operation."
  modifiers:
  - "abstract"
  parameters:
  - description: "The location at which operation was triggered."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The ID of asynchronous operation."
    name: "operationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<OperationStatusInner>> getWithResponseAsync(String location, String operationId)"
  desc: "For checking the ongoing status of an operation."
  returns:
    description: "asynchronous operation status along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redis.fluent.models.OperationStatusInner?alt=com.azure.resourcemanager.redis.fluent.models.OperationStatusInner&text=OperationStatusInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in AsyncOperationStatusClient."
metadata: {}
package: "com.azure.resourcemanager.redis.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.19.0
