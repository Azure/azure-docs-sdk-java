### YamlMime:ManagedReference
items:
- uid: com.azure.core.test.InterceptorManager
  id: InterceptorManager
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test
  children:
  - com.azure.core.test.InterceptorManager.InterceptorManager(com.azure.core.test.TestContextManager)
  - com.azure.core.test.InterceptorManager.InterceptorManager(java.lang.String,com.azure.core.test.TestMode)
  - com.azure.core.test.InterceptorManager.InterceptorManager(java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.core.test.InterceptorManager.InterceptorManager(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,boolean)
  - com.azure.core.test.InterceptorManager.addTextReplacementRule(java.lang.String,java.lang.String)
  - com.azure.core.test.InterceptorManager.close()
  - com.azure.core.test.InterceptorManager.getPlaybackClient()
  - com.azure.core.test.InterceptorManager.getRecordPolicy()
  - com.azure.core.test.InterceptorManager.getRecordedData()
  - com.azure.core.test.InterceptorManager.isLiveMode()
  - com.azure.core.test.InterceptorManager.isPlaybackMode()
  langs:
  - java
  name: InterceptorManager
  nameWithType: InterceptorManager
  fullName: com.azure.core.test.InterceptorManager
  type: Class
  package: com.azure.core.test
  summary: >-
    A class that keeps track of network calls by either reading the data from an existing test session record or recording the network calls in memory. Test session records are saved or read from: "*session-records/`testName`.json*"

     *  If the `testMode` is <xref uid="com.azure.core.test.TestMode.PLAYBACK" data-throw-if-not-resolved="false">TestMode#PLAYBACK</xref>, the manager tries to find an existing test session record to read network calls from.
     *  If the `testMode` is <xref uid="com.azure.core.test.TestMode.RECORD" data-throw-if-not-resolved="false">TestMode#RECORD</xref>, the manager creates a new test session record and saves all the network calls to it.
     *  If the `testMode` is <xref uid="com.azure.core.test.TestMode.LIVE" data-throw-if-not-resolved="false">TestMode#LIVE</xref>, the manager won't attempt to read or create a test session record.

    When the <xref uid="com.azure.core.test.InterceptorManager" data-throw-if-not-resolved="false">InterceptorManager</xref> is disposed, if the `testMode` is <xref uid="com.azure.core.test.TestMode.RECORD" data-throw-if-not-resolved="false">TestMode#RECORD</xref>, the network calls that were recorded are persisted to: "*session-records/`testName`.json*"
  syntax:
    content: public class InterceptorManager implements AutoCloseable
  inheritance:
  - java.lang.Object
  implements:
  - java.lang.AutoCloseable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.test.InterceptorManager.InterceptorManager(com.azure.core.test.TestContextManager)
  id: InterceptorManager(com.azure.core.test.TestContextManager)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.InterceptorManager
  langs:
  - java
  name: InterceptorManager(TestContextManager testContextManager)
  nameWithType: InterceptorManager.InterceptorManager(TestContextManager testContextManager)
  fullName: com.azure.core.test.InterceptorManager.InterceptorManager(TestContextManager testContextManager)
  overload: com.azure.core.test.InterceptorManager.InterceptorManager*
  type: Constructor
  package: com.azure.core.test
  summary: >-
    Creates a new InterceptorManager that either replays test-session records or saves them.

     *  If `testMode` is <xref uid="com.azure.core.test.TestMode.PLAYBACK" data-throw-if-not-resolved="false">TestMode#PLAYBACK</xref>, the manager tries to find an existing test session record to read network calls from.
     *  If `testMode` is <xref uid="com.azure.core.test.TestMode.RECORD" data-throw-if-not-resolved="false">TestMode#RECORD</xref>, the manager creates a new test session record and saves all the network calls to it.
     *  If `testMode` is <xref uid="com.azure.core.test.TestMode.LIVE" data-throw-if-not-resolved="false">TestMode#LIVE</xref>, the manager won't attempt to read or create a test session record.

    The test session records are persisted in the path: "*session-records/`testName`.json*"
  syntax:
    content: public InterceptorManager(TestContextManager testContextManager)
    parameters:
    - id: testContextManager
      type: com.azure.core.test.TestContextManager
      description: >-
        Contextual information about the test being ran, such as test name, <xref uid="com.azure.core.test.TestMode" data-throw-if-not-resolved="false">TestMode</xref>,
         and others.
- uid: com.azure.core.test.InterceptorManager.InterceptorManager(java.lang.String,com.azure.core.test.TestMode)
  id: InterceptorManager(java.lang.String,com.azure.core.test.TestMode)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.InterceptorManager
  langs:
  - java
  name: InterceptorManager(String testName, TestMode testMode)
  nameWithType: InterceptorManager.InterceptorManager(String testName, TestMode testMode)
  fullName: com.azure.core.test.InterceptorManager.InterceptorManager(String testName, TestMode testMode)
  overload: com.azure.core.test.InterceptorManager.InterceptorManager*
  type: Constructor
  package: com.azure.core.test
  summary: >-
    Creates a new InterceptorManager that either replays test-session records or saves them.

     *  If `testMode` is <xref uid="com.azure.core.test.TestMode.PLAYBACK" data-throw-if-not-resolved="false">TestMode#PLAYBACK</xref>, the manager tries to find an existing test session record to read network calls from.
     *  If `testMode` is <xref uid="com.azure.core.test.TestMode.RECORD" data-throw-if-not-resolved="false">TestMode#RECORD</xref>, the manager creates a new test session record and saves all the network calls to it.

    The test session records are persisted in the path: "*session-records/`testName`.json*"
  syntax:
    content: public InterceptorManager(String testName, TestMode testMode)
    parameters:
    - id: testName
      type: java.lang.String
      description: Name of the test session record.
    - id: testMode
      type: com.azure.core.test.TestMode
      description: The <xref uid="com.azure.core.test.TestMode" data-throw-if-not-resolved="false">TestMode</xref> for this interceptor.
- uid: com.azure.core.test.InterceptorManager.InterceptorManager(java.lang.String,com.azure.core.test.TestMode,boolean)
  id: InterceptorManager(java.lang.String,com.azure.core.test.TestMode,boolean)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.InterceptorManager
  langs:
  - java
  name: InterceptorManager(String testName, TestMode testMode, boolean doNotRecord)
  nameWithType: InterceptorManager.InterceptorManager(String testName, TestMode testMode, boolean doNotRecord)
  fullName: com.azure.core.test.InterceptorManager.InterceptorManager(String testName, TestMode testMode, boolean doNotRecord)
  overload: com.azure.core.test.InterceptorManager.InterceptorManager*
  type: Constructor
  package: com.azure.core.test
  syntax:
    content: private InterceptorManager(String testName, TestMode testMode, boolean doNotRecord)
    parameters:
    - id: testName
      type: java.lang.String
    - id: testMode
      type: com.azure.core.test.TestMode
    - id: doNotRecord
      type: boolean
- uid: com.azure.core.test.InterceptorManager.InterceptorManager(java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: InterceptorManager(java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.InterceptorManager
  langs:
  - java
  name: InterceptorManager(String testName, Map<String,String> textReplacementRules)
  nameWithType: InterceptorManager.InterceptorManager(String testName, Map<String,String> textReplacementRules)
  fullName: com.azure.core.test.InterceptorManager.InterceptorManager(String testName, Map<String,String> textReplacementRules)
  overload: com.azure.core.test.InterceptorManager.InterceptorManager*
  type: Constructor
  package: com.azure.core.test
  summary: 'Creates a new InterceptorManager that replays test session records. It takes a set of `textReplacementRules`, that can be used by <xref uid="com.azure.core.test.http.PlaybackClient" data-throw-if-not-resolved="false">PlaybackClient</xref> to replace values in a <xref uid="com.azure.core.test.models.NetworkCallRecord.getResponse()" data-throw-if-not-resolved="false">NetworkCallRecord#getResponse()</xref>. The test session records are read from: "*session-records/`testName`.json*"'
  syntax:
    content: public InterceptorManager(String testName, Map<String,String> textReplacementRules)
    parameters:
    - id: testName
      type: java.lang.String
      description: Name of the test session record.
    - id: textReplacementRules
      type: java.util.Map<java.lang.String,java.lang.String>
      description: >-
        A set of rules to replace text in <xref uid="com.azure.core.test.models.NetworkCallRecord.getResponse()" data-throw-if-not-resolved="false">NetworkCallRecord#getResponse()</xref> when
         playing back network calls.
- uid: com.azure.core.test.InterceptorManager.InterceptorManager(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,boolean)
  id: InterceptorManager(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,boolean)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.InterceptorManager
  langs:
  - java
  name: InterceptorManager(String testName, Map<String,String> textReplacementRules, boolean doNotRecord)
  nameWithType: InterceptorManager.InterceptorManager(String testName, Map<String,String> textReplacementRules, boolean doNotRecord)
  fullName: com.azure.core.test.InterceptorManager.InterceptorManager(String testName, Map<String,String> textReplacementRules, boolean doNotRecord)
  overload: com.azure.core.test.InterceptorManager.InterceptorManager*
  type: Constructor
  package: com.azure.core.test
  summary: 'Creates a new InterceptorManager that replays test session records. It takes a set of `textReplacementRules`, that can be used by <xref uid="com.azure.core.test.http.PlaybackClient" data-throw-if-not-resolved="false">PlaybackClient</xref> to replace values in a <xref uid="com.azure.core.test.models.NetworkCallRecord.getResponse()" data-throw-if-not-resolved="false">NetworkCallRecord#getResponse()</xref>. The test session records are read from: "*session-records/`testName`.json*"'
  syntax:
    content: public InterceptorManager(String testName, Map<String,String> textReplacementRules, boolean doNotRecord)
    parameters:
    - id: testName
      type: java.lang.String
      description: Name of the test session record.
    - id: textReplacementRules
      type: java.util.Map<java.lang.String,java.lang.String>
      description: >-
        A set of rules to replace text in <xref uid="com.azure.core.test.models.NetworkCallRecord.getResponse()" data-throw-if-not-resolved="false">NetworkCallRecord#getResponse()</xref> when
         playing back network calls.
    - id: doNotRecord
      type: boolean
      description: Flag indicating whether network calls should be record or played back.
- uid: com.azure.core.test.InterceptorManager.addTextReplacementRule(java.lang.String,java.lang.String)
  id: addTextReplacementRule(java.lang.String,java.lang.String)
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.InterceptorManager
  langs:
  - java
  name: addTextReplacementRule(String regex, String replacement)
  nameWithType: InterceptorManager.addTextReplacementRule(String regex, String replacement)
  fullName: com.azure.core.test.InterceptorManager.addTextReplacementRule(String regex, String replacement)
  overload: com.azure.core.test.InterceptorManager.addTextReplacementRule*
  type: Method
  package: com.azure.core.test
  summary: Add text replacement rule (regex as key, the replacement text as value) into <xref uid="com.azure.core.test.InterceptorManager.textReplacementRules" data-throw-if-not-resolved="false">InterceptorManager#textReplacementRules</xref>
  syntax:
    content: public void addTextReplacementRule(String regex, String replacement)
    parameters:
    - id: regex
      type: java.lang.String
      description: the pattern to locate the position of replacement
    - id: replacement
      type: java.lang.String
      description: the replacement text
- uid: com.azure.core.test.InterceptorManager.close()
  id: close()
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.InterceptorManager
  langs:
  - java
  name: close()
  nameWithType: InterceptorManager.close()
  fullName: com.azure.core.test.InterceptorManager.close()
  overload: com.azure.core.test.InterceptorManager.close*
  type: Method
  package: com.azure.core.test
  summary: 'Disposes of resources used by this InterceptorManager. If `testMode` is <xref uid="com.azure.core.test.TestMode.RECORD" data-throw-if-not-resolved="false">TestMode#RECORD</xref>, all the network calls are persisted to: "*session-records/`testName`.json*"'
  syntax:
    content: public void close()
- uid: com.azure.core.test.InterceptorManager.getPlaybackClient()
  id: getPlaybackClient()
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.InterceptorManager
  langs:
  - java
  name: getPlaybackClient()
  nameWithType: InterceptorManager.getPlaybackClient()
  fullName: com.azure.core.test.InterceptorManager.getPlaybackClient()
  overload: com.azure.core.test.InterceptorManager.getPlaybackClient*
  type: Method
  package: com.azure.core.test
  summary: Gets a new HTTP client that plays back test session records managed by <xref uid="com.azure.core.test.InterceptorManager" data-throw-if-not-resolved="false">InterceptorManager</xref>.
  syntax:
    content: public HttpClient getPlaybackClient()
    return:
      type: com.azure.core.http.HttpClient
      description: An HTTP client that plays back network calls from its recorded data.
- uid: com.azure.core.test.InterceptorManager.getRecordPolicy()
  id: getRecordPolicy()
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.InterceptorManager
  langs:
  - java
  name: getRecordPolicy()
  nameWithType: InterceptorManager.getRecordPolicy()
  fullName: com.azure.core.test.InterceptorManager.getRecordPolicy()
  overload: com.azure.core.test.InterceptorManager.getRecordPolicy*
  type: Method
  package: com.azure.core.test
  summary: Gets a new HTTP pipeline policy that records network calls and its data is managed by <xref uid="com.azure.core.test.InterceptorManager" data-throw-if-not-resolved="false">InterceptorManager</xref>.
  syntax:
    content: public HttpPipelinePolicy getRecordPolicy()
    return:
      type: com.azure.core.http.policy.HttpPipelinePolicy
      description: HttpPipelinePolicy to record network calls.
- uid: com.azure.core.test.InterceptorManager.getRecordedData()
  id: getRecordedData()
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.InterceptorManager
  langs:
  - java
  name: getRecordedData()
  nameWithType: InterceptorManager.getRecordedData()
  fullName: com.azure.core.test.InterceptorManager.getRecordedData()
  overload: com.azure.core.test.InterceptorManager.getRecordedData*
  type: Method
  package: com.azure.core.test
  summary: Gets the recorded data InterceptorManager is keeping track of.
  syntax:
    content: public RecordedData getRecordedData()
    return:
      type: com.azure.core.test.models.RecordedData
      description: The recorded data managed by InterceptorManager.
- uid: com.azure.core.test.InterceptorManager.isLiveMode()
  id: isLiveMode()
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.InterceptorManager
  langs:
  - java
  name: isLiveMode()
  nameWithType: InterceptorManager.isLiveMode()
  fullName: com.azure.core.test.InterceptorManager.isLiveMode()
  overload: com.azure.core.test.InterceptorManager.isLiveMode*
  type: Method
  package: com.azure.core.test
  summary: Gets whether this InterceptorManager is in live mode.
  syntax:
    content: public boolean isLiveMode()
    return:
      type: boolean
      description: true if the InterceptorManager is in live mode and false otherwise.
- uid: com.azure.core.test.InterceptorManager.isPlaybackMode()
  id: isPlaybackMode()
  artifact: com.azure:azure-core-test:1.4.0
  parent: com.azure.core.test.InterceptorManager
  langs:
  - java
  name: isPlaybackMode()
  nameWithType: InterceptorManager.isPlaybackMode()
  fullName: com.azure.core.test.InterceptorManager.isPlaybackMode()
  overload: com.azure.core.test.InterceptorManager.isPlaybackMode*
  type: Method
  package: com.azure.core.test
  summary: Gets whether this InterceptorManager is in playback mode.
  syntax:
    content: public boolean isPlaybackMode()
    return:
      type: boolean
      description: true if the InterceptorManager is in playback mode and false otherwise.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.test.TestMode
  name: TestMode
  nameWithType: TestMode
  fullName: com.azure.core.test.TestMode
- uid: com.azure.core.test.InterceptorManager.InterceptorManager*
  name: InterceptorManager
  nameWithType: InterceptorManager.InterceptorManager
  fullName: com.azure.core.test.InterceptorManager.InterceptorManager
  package: com.azure.core.test
- uid: com.azure.core.test.TestContextManager
  name: TestContextManager
  nameWithType: TestContextManager
  fullName: com.azure.core.test.TestContextManager
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.core.test.InterceptorManager.isPlaybackMode*
  name: isPlaybackMode
  nameWithType: InterceptorManager.isPlaybackMode
  fullName: com.azure.core.test.InterceptorManager.isPlaybackMode
  package: com.azure.core.test
- uid: com.azure.core.test.InterceptorManager.isLiveMode*
  name: isLiveMode
  nameWithType: InterceptorManager.isLiveMode
  fullName: com.azure.core.test.InterceptorManager.isLiveMode
  package: com.azure.core.test
- uid: com.azure.core.test.models.RecordedData
  name: RecordedData
  nameWithType: RecordedData
  fullName: com.azure.core.test.models.RecordedData
- uid: com.azure.core.test.InterceptorManager.getRecordedData*
  name: getRecordedData
  nameWithType: InterceptorManager.getRecordedData
  fullName: com.azure.core.test.InterceptorManager.getRecordedData
  package: com.azure.core.test
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  spec.java:
  - uid: com.azure.core.http.policy.HttpPipelinePolicy
    name: HttpPipelinePolicy
    fullName: com.azure.core.http.policy.HttpPipelinePolicy
- uid: com.azure.core.test.InterceptorManager.getRecordPolicy*
  name: getRecordPolicy
  nameWithType: InterceptorManager.getRecordPolicy
  fullName: com.azure.core.test.InterceptorManager.getRecordPolicy
  package: com.azure.core.test
- uid: com.azure.core.http.HttpClient
  spec.java:
  - uid: com.azure.core.http.HttpClient
    name: HttpClient
    fullName: com.azure.core.http.HttpClient
- uid: com.azure.core.test.InterceptorManager.getPlaybackClient*
  name: getPlaybackClient
  nameWithType: InterceptorManager.getPlaybackClient
  fullName: com.azure.core.test.InterceptorManager.getPlaybackClient
  package: com.azure.core.test
- uid: com.azure.core.test.InterceptorManager.close*
  name: close
  nameWithType: InterceptorManager.close
  fullName: com.azure.core.test.InterceptorManager.close
  package: com.azure.core.test
- uid: com.azure.core.test.InterceptorManager.addTextReplacementRule*
  name: addTextReplacementRule
  nameWithType: InterceptorManager.addTextReplacementRule
  fullName: com.azure.core.test.InterceptorManager.addTextReplacementRule
  package: com.azure.core.test
- uid: java.lang.AutoCloseable
  name: AutoCloseable
  nameWithType: AutoCloseable
  fullName: java.lang.AutoCloseable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
