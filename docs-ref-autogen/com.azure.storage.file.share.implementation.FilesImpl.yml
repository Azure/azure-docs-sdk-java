### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.share.implementation.FilesImpl"
  id: "FilesImpl"
  parent: "com.azure.storage.file.share.implementation"
  children:
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesImpl(com.azure.storage.file.share.implementation.AzureFileStorageImpl)"
  - "com.azure.storage.file.share.implementation.FilesImpl.abortCopyWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.abortCopyWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.acquireLeaseWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.acquireLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.breakLeaseWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.breakLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.changeLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.changeLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.deleteWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.deleteWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.downloadWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.downloadWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Boolean,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.forceCloseHandlesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.forceCloseHandlesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.getPropertiesWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.getPropertiesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.getRangeListWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.getRangeListWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.listHandlesWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.listHandlesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.releaseLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.releaseLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.setHTTPHeadersWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.setHTTPHeadersWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.setMetadataWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.setMetadataWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.startCopyWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.startCopyWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.implementation.models.CopyFileSmbInfo,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,byte[],java.lang.String,com.azure.storage.file.share.models.SourceModifiedAccessConditions,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType,long,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType,long,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Integer,byte[],java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "FilesImpl"
  nameWithType: "FilesImpl"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl"
  type: "Class"
  package: "com.azure.storage.file.share.implementation"
  summary: "An instance of this class provides access to all the operations defined in Files."
  syntax:
    content: "public final class FilesImpl"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesImpl(com.azure.storage.file.share.implementation.AzureFileStorageImpl)"
  id: "FilesImpl(com.azure.storage.file.share.implementation.AzureFileStorageImpl)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "FilesImpl(AzureFileStorageImpl client)"
  nameWithType: "FilesImpl.FilesImpl(AzureFileStorageImpl client)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesImpl(AzureFileStorageImpl client)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesImpl*"
  type: "Constructor"
  package: "com.azure.storage.file.share.implementation"
  summary: "Initializes an instance of FilesImpl."
  syntax:
    content: "public FilesImpl(AzureFileStorageImpl client)"
    parameters:
    - id: "client"
      type: "com.azure.storage.file.share.implementation.AzureFileStorageImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.abortCopyWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "abortCopyWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "abortCopyWithRestResponseAsync(String shareName, String filePath, String copyId, Context context)"
  nameWithType: "FilesImpl.abortCopyWithRestResponseAsync(String shareName, String filePath, String copyId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.abortCopyWithRestResponseAsync(String shareName, String filePath, String copyId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.abortCopyWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Aborts a pending Copy File operation, and leaves a destination file with zero length and full metadata."
  syntax:
    content: "public Mono<FilesAbortCopyResponse> abortCopyWithRestResponseAsync(String shareName, String filePath, String copyId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "copyId"
      type: "java.lang.String"
      description: "The copy identifier provided in the x-ms-copy-id header of the original Copy File operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.abortCopyWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "abortCopyWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "abortCopyWithRestResponseAsync(String shareName, String filePath, String copyId, Integer timeout, String leaseId, Context context)"
  nameWithType: "FilesImpl.abortCopyWithRestResponseAsync(String shareName, String filePath, String copyId, Integer timeout, String leaseId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.abortCopyWithRestResponseAsync(String shareName, String filePath, String copyId, Integer timeout, String leaseId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.abortCopyWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Aborts a pending Copy File operation, and leaves a destination file with zero length and full metadata."
  syntax:
    content: "public Mono<FilesAbortCopyResponse> abortCopyWithRestResponseAsync(String shareName, String filePath, String copyId, Integer timeout, String leaseId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "copyId"
      type: "java.lang.String"
      description: "The copy identifier provided in the x-ms-copy-id header of the original Copy File operation."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.acquireLeaseWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "acquireLeaseWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "acquireLeaseWithRestResponseAsync(String shareName, String filePath, Context context)"
  nameWithType: "FilesImpl.acquireLeaseWithRestResponseAsync(String shareName, String filePath, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.acquireLeaseWithRestResponseAsync(String shareName, String filePath, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.acquireLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "\\[Update\\] The Lease File operation establishes and manages a lock on a file for write and delete operations."
  syntax:
    content: "public Mono<FilesAcquireLeaseResponse> acquireLeaseWithRestResponseAsync(String shareName, String filePath, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesAcquireLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.acquireLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "acquireLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "acquireLeaseWithRestResponseAsync(String shareName, String filePath, Integer timeout, Integer duration, String proposedLeaseId, String requestId, Context context)"
  nameWithType: "FilesImpl.acquireLeaseWithRestResponseAsync(String shareName, String filePath, Integer timeout, Integer duration, String proposedLeaseId, String requestId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.acquireLeaseWithRestResponseAsync(String shareName, String filePath, Integer timeout, Integer duration, String proposedLeaseId, String requestId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.acquireLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "\\[Update\\] The Lease File operation establishes and manages a lock on a file for write and delete operations."
  syntax:
    content: "public Mono<FilesAcquireLeaseResponse> acquireLeaseWithRestResponseAsync(String shareName, String filePath, Integer timeout, Integer duration, String proposedLeaseId, String requestId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "duration"
      type: "java.lang.Integer"
      description: "Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change."
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "Proposed lease ID, in a GUID string format. The File service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesAcquireLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.breakLeaseWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "breakLeaseWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "breakLeaseWithRestResponseAsync(String shareName, String filePath, Context context)"
  nameWithType: "FilesImpl.breakLeaseWithRestResponseAsync(String shareName, String filePath, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.breakLeaseWithRestResponseAsync(String shareName, String filePath, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.breakLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "\\[Update\\] The Lease File operation establishes and manages a lock on a file for write and delete operations."
  syntax:
    content: "public Mono<FilesBreakLeaseResponse> breakLeaseWithRestResponseAsync(String shareName, String filePath, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesBreakLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.breakLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "breakLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "breakLeaseWithRestResponseAsync(String shareName, String filePath, Integer timeout, String leaseId, String requestId, Context context)"
  nameWithType: "FilesImpl.breakLeaseWithRestResponseAsync(String shareName, String filePath, Integer timeout, String leaseId, String requestId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.breakLeaseWithRestResponseAsync(String shareName, String filePath, Integer timeout, String leaseId, String requestId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.breakLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "\\[Update\\] The Lease File operation establishes and manages a lock on a file for write and delete operations."
  syntax:
    content: "public Mono<FilesBreakLeaseResponse> breakLeaseWithRestResponseAsync(String shareName, String filePath, Integer timeout, String leaseId, String requestId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesBreakLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.changeLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "changeLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "changeLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Context context)"
  nameWithType: "FilesImpl.changeLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.changeLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.changeLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "\\[Update\\] The Lease File operation establishes and manages a lock on a file for write and delete operations."
  syntax:
    content: "public Mono<FilesChangeLeaseResponse> changeLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "leaseId"
      type: "java.lang.String"
      description: "Specifies the current lease ID on the resource."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesChangeLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.changeLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "changeLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "changeLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Integer timeout, String proposedLeaseId, String requestId, Context context)"
  nameWithType: "FilesImpl.changeLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Integer timeout, String proposedLeaseId, String requestId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.changeLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Integer timeout, String proposedLeaseId, String requestId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.changeLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "\\[Update\\] The Lease File operation establishes and manages a lock on a file for write and delete operations."
  syntax:
    content: "public Mono<FilesChangeLeaseResponse> changeLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Integer timeout, String proposedLeaseId, String requestId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "leaseId"
      type: "java.lang.String"
      description: "Specifies the current lease ID on the resource."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "Proposed lease ID, in a GUID string format. The File service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesChangeLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "createWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "createWithRestResponseAsync(String shareName, String filePath, long fileContentLength, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Context context)"
  nameWithType: "FilesImpl.createWithRestResponseAsync(String shareName, String filePath, long fileContentLength, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.createWithRestResponseAsync(String shareName, String filePath, long fileContentLength, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.createWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Creates a new file or replaces a file. Note it only initializes the file with no content."
  syntax:
    content: "public Mono<FilesCreateResponse> createWithRestResponseAsync(String shareName, String filePath, long fileContentLength, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "fileContentLength"
      type: "long"
      description: "Specifies the maximum size for the file, up to 1 TB."
    - id: "fileAttributes"
      type: "java.lang.String"
      description: "If specified, the provided file attributes shall be set. Default value: \\u2018Archive\\u2019 for file and \\u2018Directory\\u2019 for directory. \\u2018None\\u2019 can also be specified as default."
    - id: "fileCreationTime"
      type: "java.lang.String"
      description: "Creation time for the file/directory. Default value: Now."
    - id: "fileLastWriteTime"
      type: "java.lang.String"
      description: "Last write time for the file/directory. Default value: Now."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesCreateResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.core.util.Context)"
  id: "createWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "createWithRestResponseAsync(String shareName, String filePath, long fileContentLength, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Integer timeout, Map<String,String> metadata, String filePermission, String filePermissionKey, String leaseId, ShareFileHttpHeaders shareFileHttpHeaders, Context context)"
  nameWithType: "FilesImpl.createWithRestResponseAsync(String shareName, String filePath, long fileContentLength, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Integer timeout, Map<String,String> metadata, String filePermission, String filePermissionKey, String leaseId, ShareFileHttpHeaders shareFileHttpHeaders, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.createWithRestResponseAsync(String shareName, String filePath, long fileContentLength, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Integer timeout, Map<String,String> metadata, String filePermission, String filePermissionKey, String leaseId, ShareFileHttpHeaders shareFileHttpHeaders, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.createWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Creates a new file or replaces a file. Note it only initializes the file with no content."
  syntax:
    content: "public Mono<FilesCreateResponse> createWithRestResponseAsync(String shareName, String filePath, long fileContentLength, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Integer timeout, Map<String,String> metadata, String filePermission, String filePermissionKey, String leaseId, ShareFileHttpHeaders shareFileHttpHeaders, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "fileContentLength"
      type: "long"
      description: "Specifies the maximum size for the file, up to 1 TB."
    - id: "fileAttributes"
      type: "java.lang.String"
      description: "If specified, the provided file attributes shall be set. Default value: \\u2018Archive\\u2019 for file and \\u2018Directory\\u2019 for directory. \\u2018None\\u2019 can also be specified as default."
    - id: "fileCreationTime"
      type: "java.lang.String"
      description: "Creation time for the file/directory. Default value: Now."
    - id: "fileLastWriteTime"
      type: "java.lang.String"
      description: "Last write time for the file/directory. Default value: Now."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "A name-value pair to associate with a file storage object."
    - id: "filePermission"
      type: "java.lang.String"
      description: "If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified."
    - id: "filePermissionKey"
      type: "java.lang.String"
      description: "Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "shareFileHttpHeaders"
      type: "com.azure.storage.file.share.models.ShareFileHttpHeaders"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesCreateResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.deleteWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "deleteWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "deleteWithRestResponseAsync(String shareName, String filePath, Context context)"
  nameWithType: "FilesImpl.deleteWithRestResponseAsync(String shareName, String filePath, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.deleteWithRestResponseAsync(String shareName, String filePath, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.deleteWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "removes the file from the storage account."
  syntax:
    content: "public Mono<FilesDeleteResponse> deleteWithRestResponseAsync(String shareName, String filePath, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesDeleteResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.deleteWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "deleteWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "deleteWithRestResponseAsync(String shareName, String filePath, Integer timeout, String leaseId, Context context)"
  nameWithType: "FilesImpl.deleteWithRestResponseAsync(String shareName, String filePath, Integer timeout, String leaseId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.deleteWithRestResponseAsync(String shareName, String filePath, Integer timeout, String leaseId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.deleteWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "removes the file from the storage account."
  syntax:
    content: "public Mono<FilesDeleteResponse> deleteWithRestResponseAsync(String shareName, String filePath, Integer timeout, String leaseId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesDeleteResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.downloadWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "downloadWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "downloadWithRestResponseAsync(String shareName, String filePath, Context context)"
  nameWithType: "FilesImpl.downloadWithRestResponseAsync(String shareName, String filePath, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.downloadWithRestResponseAsync(String shareName, String filePath, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.downloadWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Reads or downloads a file from the system, including its metadata and properties."
  syntax:
    content: "public Mono<FilesDownloadResponse> downloadWithRestResponseAsync(String shareName, String filePath, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesDownloadResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.downloadWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Boolean,java.lang.String,com.azure.core.util.Context)"
  id: "downloadWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Boolean,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "downloadWithRestResponseAsync(String shareName, String filePath, Integer timeout, String range, Boolean rangeGetContentMD5, String leaseId, Context context)"
  nameWithType: "FilesImpl.downloadWithRestResponseAsync(String shareName, String filePath, Integer timeout, String range, Boolean rangeGetContentMD5, String leaseId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.downloadWithRestResponseAsync(String shareName, String filePath, Integer timeout, String range, Boolean rangeGetContentMD5, String leaseId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.downloadWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Reads or downloads a file from the system, including its metadata and properties."
  syntax:
    content: "public Mono<FilesDownloadResponse> downloadWithRestResponseAsync(String shareName, String filePath, Integer timeout, String range, Boolean rangeGetContentMD5, String leaseId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "range"
      type: "java.lang.String"
      description: "Return file data only from the specified byte range."
    - id: "rangeGetContentMD5"
      type: "java.lang.Boolean"
      description: "When this header is set to true and specified together with the Range header, the service returns the MD5 hash for the range, as long as the range is less than or equal to 4 MB in size."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesDownloadResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.forceCloseHandlesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "forceCloseHandlesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "forceCloseHandlesWithRestResponseAsync(String shareName, String filePath, String handleId, Context context)"
  nameWithType: "FilesImpl.forceCloseHandlesWithRestResponseAsync(String shareName, String filePath, String handleId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.forceCloseHandlesWithRestResponseAsync(String shareName, String filePath, String handleId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.forceCloseHandlesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Closes all handles open for given file."
  syntax:
    content: "public Mono<FilesForceCloseHandlesResponse> forceCloseHandlesWithRestResponseAsync(String shareName, String filePath, String handleId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "handleId"
      type: "java.lang.String"
      description: "Specifies handle ID opened on the file or directory to be closed. Asterix (\\u2018*\\u2019) is a wildcard that specifies all handles."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.forceCloseHandlesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "forceCloseHandlesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "forceCloseHandlesWithRestResponseAsync(String shareName, String filePath, String handleId, Integer timeout, String marker, String sharesnapshot, Context context)"
  nameWithType: "FilesImpl.forceCloseHandlesWithRestResponseAsync(String shareName, String filePath, String handleId, Integer timeout, String marker, String sharesnapshot, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.forceCloseHandlesWithRestResponseAsync(String shareName, String filePath, String handleId, Integer timeout, String marker, String sharesnapshot, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.forceCloseHandlesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Closes all handles open for given file."
  syntax:
    content: "public Mono<FilesForceCloseHandlesResponse> forceCloseHandlesWithRestResponseAsync(String shareName, String filePath, String handleId, Integer timeout, String marker, String sharesnapshot, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "handleId"
      type: "java.lang.String"
      description: "Specifies handle ID opened on the file or directory to be closed. Asterix (\\u2018*\\u2019) is a wildcard that specifies all handles."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "marker"
      type: "java.lang.String"
      description: "A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client."
    - id: "sharesnapshot"
      type: "java.lang.String"
      description: "The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.getPropertiesWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getPropertiesWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "getPropertiesWithRestResponseAsync(String shareName, String filePath, Context context)"
  nameWithType: "FilesImpl.getPropertiesWithRestResponseAsync(String shareName, String filePath, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.getPropertiesWithRestResponseAsync(String shareName, String filePath, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.getPropertiesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Returns all user-defined metadata, standard HTTP properties, and system properties for the file. It does not return the content of the file."
  syntax:
    content: "public Mono<FilesGetPropertiesResponse> getPropertiesWithRestResponseAsync(String shareName, String filePath, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.getPropertiesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "getPropertiesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "getPropertiesWithRestResponseAsync(String shareName, String filePath, String sharesnapshot, Integer timeout, String leaseId, Context context)"
  nameWithType: "FilesImpl.getPropertiesWithRestResponseAsync(String shareName, String filePath, String sharesnapshot, Integer timeout, String leaseId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.getPropertiesWithRestResponseAsync(String shareName, String filePath, String sharesnapshot, Integer timeout, String leaseId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.getPropertiesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Returns all user-defined metadata, standard HTTP properties, and system properties for the file. It does not return the content of the file."
  syntax:
    content: "public Mono<FilesGetPropertiesResponse> getPropertiesWithRestResponseAsync(String shareName, String filePath, String sharesnapshot, Integer timeout, String leaseId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "sharesnapshot"
      type: "java.lang.String"
      description: "The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.getRangeListWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getRangeListWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "getRangeListWithRestResponseAsync(String shareName, String filePath, Context context)"
  nameWithType: "FilesImpl.getRangeListWithRestResponseAsync(String shareName, String filePath, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.getRangeListWithRestResponseAsync(String shareName, String filePath, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.getRangeListWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Returns the list of valid ranges for a file."
  syntax:
    content: "public Mono<FilesGetRangeListResponse> getRangeListWithRestResponseAsync(String shareName, String filePath, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.getRangeListWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getRangeListWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "getRangeListWithRestResponseAsync(String shareName, String filePath, String sharesnapshot, Integer timeout, String range, String leaseId, Context context)"
  nameWithType: "FilesImpl.getRangeListWithRestResponseAsync(String shareName, String filePath, String sharesnapshot, Integer timeout, String range, String leaseId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.getRangeListWithRestResponseAsync(String shareName, String filePath, String sharesnapshot, Integer timeout, String range, String leaseId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.getRangeListWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Returns the list of valid ranges for a file."
  syntax:
    content: "public Mono<FilesGetRangeListResponse> getRangeListWithRestResponseAsync(String shareName, String filePath, String sharesnapshot, Integer timeout, String range, String leaseId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "sharesnapshot"
      type: "java.lang.String"
      description: "The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "range"
      type: "java.lang.String"
      description: "Specifies the range of bytes over which to list ranges, inclusively."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.listHandlesWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "listHandlesWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "listHandlesWithRestResponseAsync(String shareName, String filePath, Context context)"
  nameWithType: "FilesImpl.listHandlesWithRestResponseAsync(String shareName, String filePath, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.listHandlesWithRestResponseAsync(String shareName, String filePath, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.listHandlesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Lists handles for file."
  syntax:
    content: "public Mono<FilesListHandlesResponse> listHandlesWithRestResponseAsync(String shareName, String filePath, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesListHandlesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.listHandlesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "listHandlesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "listHandlesWithRestResponseAsync(String shareName, String filePath, String marker, Integer maxresults, Integer timeout, String sharesnapshot, Context context)"
  nameWithType: "FilesImpl.listHandlesWithRestResponseAsync(String shareName, String filePath, String marker, Integer maxresults, Integer timeout, String sharesnapshot, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.listHandlesWithRestResponseAsync(String shareName, String filePath, String marker, Integer maxresults, Integer timeout, String sharesnapshot, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.listHandlesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Lists handles for file."
  syntax:
    content: "public Mono<FilesListHandlesResponse> listHandlesWithRestResponseAsync(String shareName, String filePath, String marker, Integer maxresults, Integer timeout, String sharesnapshot, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "marker"
      type: "java.lang.String"
      description: "A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client."
    - id: "maxresults"
      type: "java.lang.Integer"
      description: "Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "sharesnapshot"
      type: "java.lang.String"
      description: "The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesListHandlesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.releaseLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "releaseLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "releaseLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Context context)"
  nameWithType: "FilesImpl.releaseLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.releaseLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.releaseLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "\\[Update\\] The Lease File operation establishes and manages a lock on a file for write and delete operations."
  syntax:
    content: "public Mono<FilesReleaseLeaseResponse> releaseLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "leaseId"
      type: "java.lang.String"
      description: "Specifies the current lease ID on the resource."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesReleaseLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.releaseLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "releaseLeaseWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "releaseLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Integer timeout, String requestId, Context context)"
  nameWithType: "FilesImpl.releaseLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Integer timeout, String requestId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.releaseLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Integer timeout, String requestId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.releaseLeaseWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "\\[Update\\] The Lease File operation establishes and manages a lock on a file for write and delete operations."
  syntax:
    content: "public Mono<FilesReleaseLeaseResponse> releaseLeaseWithRestResponseAsync(String shareName, String filePath, String leaseId, Integer timeout, String requestId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "leaseId"
      type: "java.lang.String"
      description: "Specifies the current lease ID on the resource."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesReleaseLeaseResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.setHTTPHeadersWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "setHTTPHeadersWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "setHTTPHeadersWithRestResponseAsync(String shareName, String filePath, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Context context)"
  nameWithType: "FilesImpl.setHTTPHeadersWithRestResponseAsync(String shareName, String filePath, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.setHTTPHeadersWithRestResponseAsync(String shareName, String filePath, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.setHTTPHeadersWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Sets HTTP headers on the file."
  syntax:
    content: "public Mono<FilesSetHTTPHeadersResponse> setHTTPHeadersWithRestResponseAsync(String shareName, String filePath, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "fileAttributes"
      type: "java.lang.String"
      description: "If specified, the provided file attributes shall be set. Default value: \\u2018Archive\\u2019 for file and \\u2018Directory\\u2019 for directory. \\u2018None\\u2019 can also be specified as default."
    - id: "fileCreationTime"
      type: "java.lang.String"
      description: "Creation time for the file/directory. Default value: Now."
    - id: "fileLastWriteTime"
      type: "java.lang.String"
      description: "Last write time for the file/directory. Default value: Now."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.setHTTPHeadersWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.core.util.Context)"
  id: "setHTTPHeadersWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "setHTTPHeadersWithRestResponseAsync(String shareName, String filePath, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Integer timeout, Long fileContentLength, String filePermission, String filePermissionKey, String leaseId, ShareFileHttpHeaders shareFileHttpHeaders, Context context)"
  nameWithType: "FilesImpl.setHTTPHeadersWithRestResponseAsync(String shareName, String filePath, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Integer timeout, Long fileContentLength, String filePermission, String filePermissionKey, String leaseId, ShareFileHttpHeaders shareFileHttpHeaders, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.setHTTPHeadersWithRestResponseAsync(String shareName, String filePath, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Integer timeout, Long fileContentLength, String filePermission, String filePermissionKey, String leaseId, ShareFileHttpHeaders shareFileHttpHeaders, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.setHTTPHeadersWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Sets HTTP headers on the file."
  syntax:
    content: "public Mono<FilesSetHTTPHeadersResponse> setHTTPHeadersWithRestResponseAsync(String shareName, String filePath, String fileAttributes, String fileCreationTime, String fileLastWriteTime, Integer timeout, Long fileContentLength, String filePermission, String filePermissionKey, String leaseId, ShareFileHttpHeaders shareFileHttpHeaders, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "fileAttributes"
      type: "java.lang.String"
      description: "If specified, the provided file attributes shall be set. Default value: \\u2018Archive\\u2019 for file and \\u2018Directory\\u2019 for directory. \\u2018None\\u2019 can also be specified as default."
    - id: "fileCreationTime"
      type: "java.lang.String"
      description: "Creation time for the file/directory. Default value: Now."
    - id: "fileLastWriteTime"
      type: "java.lang.String"
      description: "Last write time for the file/directory. Default value: Now."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "fileContentLength"
      type: "java.lang.Long"
      description: "Resizes a file to the specified size. If the specified byte value is less than the current size of the file, then all ranges above the specified byte value are cleared."
    - id: "filePermission"
      type: "java.lang.String"
      description: "If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified."
    - id: "filePermissionKey"
      type: "java.lang.String"
      description: "Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "shareFileHttpHeaders"
      type: "com.azure.storage.file.share.models.ShareFileHttpHeaders"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.setMetadataWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "setMetadataWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "setMetadataWithRestResponseAsync(String shareName, String filePath, Context context)"
  nameWithType: "FilesImpl.setMetadataWithRestResponseAsync(String shareName, String filePath, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.setMetadataWithRestResponseAsync(String shareName, String filePath, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.setMetadataWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Updates user-defined metadata for the specified file."
  syntax:
    content: "public Mono<FilesSetMetadataResponse> setMetadataWithRestResponseAsync(String shareName, String filePath, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.setMetadataWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.core.util.Context)"
  id: "setMetadataWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "setMetadataWithRestResponseAsync(String shareName, String filePath, Integer timeout, Map<String,String> metadata, String leaseId, Context context)"
  nameWithType: "FilesImpl.setMetadataWithRestResponseAsync(String shareName, String filePath, Integer timeout, Map<String,String> metadata, String leaseId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.setMetadataWithRestResponseAsync(String shareName, String filePath, Integer timeout, Map<String,String> metadata, String leaseId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.setMetadataWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Updates user-defined metadata for the specified file."
  syntax:
    content: "public Mono<FilesSetMetadataResponse> setMetadataWithRestResponseAsync(String shareName, String filePath, Integer timeout, Map<String,String> metadata, String leaseId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "A name-value pair to associate with a file storage object."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.startCopyWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "startCopyWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "startCopyWithRestResponseAsync(String shareName, String filePath, String copySource, Context context)"
  nameWithType: "FilesImpl.startCopyWithRestResponseAsync(String shareName, String filePath, String copySource, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.startCopyWithRestResponseAsync(String shareName, String filePath, String copySource, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.startCopyWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Copies a blob or file to a destination file within the storage account."
  syntax:
    content: "public Mono<FilesStartCopyResponse> startCopyWithRestResponseAsync(String shareName, String filePath, String copySource, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "copySource"
      type: "java.lang.String"
      description: "Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file to another file within the same storage account, you may use Shared Key to authenticate the source file. If you are copying a file from another storage account, or if you are copying a blob from the same storage account or another storage account, then you must authenticate the source file or blob using a shared access signature. If the source is a public blob, no authentication is required to perform the copy operation. A file in a share snapshot can also be specified as a copy source."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesStartCopyResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.startCopyWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.implementation.models.CopyFileSmbInfo,com.azure.core.util.Context)"
  id: "startCopyWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.implementation.models.CopyFileSmbInfo,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "startCopyWithRestResponseAsync(String shareName, String filePath, String copySource, Integer timeout, Map<String,String> metadata, String filePermission, String filePermissionKey, String leaseId, CopyFileSmbInfo copyFileSmbInfo, Context context)"
  nameWithType: "FilesImpl.startCopyWithRestResponseAsync(String shareName, String filePath, String copySource, Integer timeout, Map<String,String> metadata, String filePermission, String filePermissionKey, String leaseId, CopyFileSmbInfo copyFileSmbInfo, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.startCopyWithRestResponseAsync(String shareName, String filePath, String copySource, Integer timeout, Map<String,String> metadata, String filePermission, String filePermissionKey, String leaseId, CopyFileSmbInfo copyFileSmbInfo, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.startCopyWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Copies a blob or file to a destination file within the storage account."
  syntax:
    content: "public Mono<FilesStartCopyResponse> startCopyWithRestResponseAsync(String shareName, String filePath, String copySource, Integer timeout, Map<String,String> metadata, String filePermission, String filePermissionKey, String leaseId, CopyFileSmbInfo copyFileSmbInfo, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "copySource"
      type: "java.lang.String"
      description: "Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file to another file within the same storage account, you may use Shared Key to authenticate the source file. If you are copying a file from another storage account, or if you are copying a blob from the same storage account or another storage account, then you must authenticate the source file or blob using a shared access signature. If the source is a public blob, no authentication is required to perform the copy operation. A file in a share snapshot can also be specified as a copy source."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "A name-value pair to associate with a file storage object."
    - id: "filePermission"
      type: "java.lang.String"
      description: "If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified."
    - id: "filePermissionKey"
      type: "java.lang.String"
      description: "Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "copyFileSmbInfo"
      type: "com.azure.storage.file.share.implementation.models.CopyFileSmbInfo"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesStartCopyResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  id: "uploadRangeFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Context context)"
  nameWithType: "FilesImpl.uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Upload a range of bytes to a file where the contents are read from a URL."
  syntax:
    content: "public Mono<FilesUploadRangeFromURLResponse> uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "range"
      type: "java.lang.String"
      description: "Writes data to the specified byte range in the file."
    - id: "copySource"
      type: "java.lang.String"
      description: "Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file to another file within the same storage account, you may use Shared Key to authenticate the source file. If you are copying a file from another storage account, or if you are copying a blob from the same storage account or another storage account, then you must authenticate the source file or blob using a shared access signature. If the source is a public blob, no authentication is required to perform the copy operation. A file in a share snapshot can also be specified as a copy source."
    - id: "contentLength"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body. When the x-ms-write header is set to clear, the value of this header must be set to zero."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,byte[],java.lang.String,com.azure.storage.file.share.models.SourceModifiedAccessConditions,com.azure.core.util.Context)"
  id: "uploadRangeFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,byte[],java.lang.String,com.azure.storage.file.share.models.SourceModifiedAccessConditions,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Integer timeout, String sourceRange, byte[] sourceContentCrc64, String leaseId, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)"
  nameWithType: "FilesImpl.uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Integer timeout, String sourceRange, byte[] sourceContentCrc64, String leaseId, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Integer timeout, String sourceRange, byte[] sourceContentCrc64, String leaseId, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Upload a range of bytes to a file where the contents are read from a URL."
  syntax:
    content: "public Mono<FilesUploadRangeFromURLResponse> uploadRangeFromURLWithRestResponseAsync(String shareName, String filePath, String range, String copySource, long contentLength, Integer timeout, String sourceRange, byte[] sourceContentCrc64, String leaseId, SourceModifiedAccessConditions sourceModifiedAccessConditions, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "range"
      type: "java.lang.String"
      description: "Writes data to the specified byte range in the file."
    - id: "copySource"
      type: "java.lang.String"
      description: "Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file to another file within the same storage account, you may use Shared Key to authenticate the source file. If you are copying a file from another storage account, or if you are copying a blob from the same storage account or another storage account, then you must authenticate the source file or blob using a shared access signature. If the source is a public blob, no authentication is required to perform the copy operation. A file in a share snapshot can also be specified as a copy source."
    - id: "contentLength"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body. When the x-ms-write header is set to clear, the value of this header must be set to zero."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "sourceRange"
      type: "java.lang.String"
      description: "Bytes of source data in the specified range."
    - id: "sourceContentCrc64"
      type: "byte[]"
      description: "Specify the crc64 calculated for the range of bytes that must be read from the copy source."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "sourceModifiedAccessConditions"
      type: "com.azure.storage.file.share.models.SourceModifiedAccessConditions"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType,long,com.azure.core.util.Context)"
  id: "uploadRangeWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType,long,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "uploadRangeWithRestResponseAsync(String shareName, String filePath, String range, ShareFileRangeWriteType fileRangeWrite, long contentLength, Context context)"
  nameWithType: "FilesImpl.uploadRangeWithRestResponseAsync(String shareName, String filePath, String range, ShareFileRangeWriteType fileRangeWrite, long contentLength, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeWithRestResponseAsync(String shareName, String filePath, String range, ShareFileRangeWriteType fileRangeWrite, long contentLength, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Upload a range of bytes to a file."
  syntax:
    content: "public Mono<FilesUploadRangeResponse> uploadRangeWithRestResponseAsync(String shareName, String filePath, String range, ShareFileRangeWriteType fileRangeWrite, long contentLength, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "range"
      type: "java.lang.String"
      description: "Specifies the range of bytes to be written. Both the start and end of the range must be specified. For an update operation, the range can be up to 4 MB in size. For a clear operation, the range can be up to the value of the file's full size. The File service accepts only a single byte range for the Range and 'x-ms-range' headers, and the byte range must be specified in the following format: bytes=startByte-endByte."
    - id: "fileRangeWrite"
      type: "com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType"
      description: "Specify one of the following options: - Update: Writes the bytes specified by the request body into the specified range. The Range and Content-Length headers must match to perform the update. - Clear: Clears the specified range and releases the space used in storage for that range. To clear a range, set the Content-Length header to zero, and set the Range header to a value that indicates the range to clear, up to maximum file size. Possible values include: 'update', 'clear'."
    - id: "contentLength"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body. When the x-ms-write header is set to clear, the value of this header must be set to zero."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType,long,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Integer,byte[],java.lang.String,com.azure.core.util.Context)"
  id: "uploadRangeWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType,long,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Integer,byte[],java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl"
  langs:
  - "java"
  name: "uploadRangeWithRestResponseAsync(String shareName, String filePath, String range, ShareFileRangeWriteType fileRangeWrite, long contentLength, Flux<ByteBuffer> optionalbody, Integer timeout, byte[] contentMD5, String leaseId, Context context)"
  nameWithType: "FilesImpl.uploadRangeWithRestResponseAsync(String shareName, String filePath, String range, ShareFileRangeWriteType fileRangeWrite, long contentLength, Flux<ByteBuffer> optionalbody, Integer timeout, byte[] contentMD5, String leaseId, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeWithRestResponseAsync(String shareName, String filePath, String range, ShareFileRangeWriteType fileRangeWrite, long contentLength, Flux<ByteBuffer> optionalbody, Integer timeout, byte[] contentMD5, String leaseId, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  summary: "Upload a range of bytes to a file."
  syntax:
    content: "public Mono<FilesUploadRangeResponse> uploadRangeWithRestResponseAsync(String shareName, String filePath, String range, ShareFileRangeWriteType fileRangeWrite, long contentLength, Flux<ByteBuffer> optionalbody, Integer timeout, byte[] contentMD5, String leaseId, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "The name of the target share."
    - id: "filePath"
      type: "java.lang.String"
      description: "The path of the target file."
    - id: "range"
      type: "java.lang.String"
      description: "Specifies the range of bytes to be written. Both the start and end of the range must be specified. For an update operation, the range can be up to 4 MB in size. For a clear operation, the range can be up to the value of the file's full size. The File service accepts only a single byte range for the Range and 'x-ms-range' headers, and the byte range must be specified in the following format: bytes=startByte-endByte."
    - id: "fileRangeWrite"
      type: "com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType"
      description: "Specify one of the following options: - Update: Writes the bytes specified by the request body into the specified range. The Range and Content-Length headers must match to perform the update. - Clear: Clears the specified range and releases the space used in storage for that range. To clear a range, set the Content-Length header to zero, and set the Range header to a value that indicates the range to clear, up to maximum file size. Possible values include: 'update', 'clear'."
    - id: "contentLength"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body. When the x-ms-write header is set to clear, the value of this header must be set to zero."
    - id: "optionalbody"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
      description: "Initial data."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    - id: "contentMD5"
      type: "byte[]"
      description: "An MD5 hash of the content. This hash is used to verify the integrity of the data during transport. When the Content-MD5 header is specified, the File service compares the hash of the content that has arrived with the header value that was sent. If the two hashes do not match, the operation will fail with error code 400 (Bad Request)."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse>"
      description: "a Mono which performs the network request upon subscription."
references:
- uid: "com.azure.storage.file.share.implementation.AzureFileStorageImpl"
  name: "AzureFileStorageImpl"
  nameWithType: "AzureFileStorageImpl"
  fullName: "com.azure.storage.file.share.implementation.AzureFileStorageImpl"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesImpl*"
  name: "FilesImpl"
  nameWithType: "FilesImpl.FilesImpl"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesImpl"
  package: "com.azure.storage.file.share.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesCreateResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesCreateResponse"
    name: "FilesCreateResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesCreateResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.createWithRestResponseAsync*"
  name: "createWithRestResponseAsync"
  nameWithType: "FilesImpl.createWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.createWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.models.ShareFileHttpHeaders"
  name: "ShareFileHttpHeaders"
  nameWithType: "ShareFileHttpHeaders"
  fullName: "com.azure.storage.file.share.models.ShareFileHttpHeaders"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesDownloadResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesDownloadResponse"
    name: "FilesDownloadResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesDownloadResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.downloadWithRestResponseAsync*"
  name: "downloadWithRestResponseAsync"
  nameWithType: "FilesImpl.downloadWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.downloadWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse"
    name: "FilesGetPropertiesResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.getPropertiesWithRestResponseAsync*"
  name: "getPropertiesWithRestResponseAsync"
  nameWithType: "FilesImpl.getPropertiesWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.getPropertiesWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesDeleteResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesDeleteResponse"
    name: "FilesDeleteResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesDeleteResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.deleteWithRestResponseAsync*"
  name: "deleteWithRestResponseAsync"
  nameWithType: "FilesImpl.deleteWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.deleteWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse"
    name: "FilesSetHTTPHeadersResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.setHTTPHeadersWithRestResponseAsync*"
  name: "setHTTPHeadersWithRestResponseAsync"
  nameWithType: "FilesImpl.setHTTPHeadersWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.setHTTPHeadersWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse"
    name: "FilesSetMetadataResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.setMetadataWithRestResponseAsync*"
  name: "setMetadataWithRestResponseAsync"
  nameWithType: "FilesImpl.setMetadataWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.setMetadataWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType"
  name: "ShareFileRangeWriteType"
  nameWithType: "ShareFileRangeWriteType"
  fullName: "com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse"
    name: "FilesUploadRangeResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeWithRestResponseAsync*"
  name: "uploadRangeWithRestResponseAsync"
  nameWithType: "FilesImpl.uploadRangeWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse"
    name: "FilesUploadRangeFromURLResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync*"
  name: "uploadRangeFromURLWithRestResponseAsync"
  nameWithType: "FilesImpl.uploadRangeFromURLWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.uploadRangeFromURLWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "com.azure.storage.file.share.models.SourceModifiedAccessConditions"
  name: "SourceModifiedAccessConditions"
  nameWithType: "SourceModifiedAccessConditions"
  fullName: "com.azure.storage.file.share.models.SourceModifiedAccessConditions"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse"
    name: "FilesGetRangeListResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.getRangeListWithRestResponseAsync*"
  name: "getRangeListWithRestResponseAsync"
  nameWithType: "FilesImpl.getRangeListWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.getRangeListWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesStartCopyResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesStartCopyResponse"
    name: "FilesStartCopyResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesStartCopyResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.startCopyWithRestResponseAsync*"
  name: "startCopyWithRestResponseAsync"
  nameWithType: "FilesImpl.startCopyWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.startCopyWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "com.azure.storage.file.share.implementation.models.CopyFileSmbInfo"
  name: "CopyFileSmbInfo"
  nameWithType: "CopyFileSmbInfo"
  fullName: "com.azure.storage.file.share.implementation.models.CopyFileSmbInfo"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse"
    name: "FilesAbortCopyResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.abortCopyWithRestResponseAsync*"
  name: "abortCopyWithRestResponseAsync"
  nameWithType: "FilesImpl.abortCopyWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.abortCopyWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesListHandlesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesListHandlesResponse"
    name: "FilesListHandlesResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesListHandlesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.listHandlesWithRestResponseAsync*"
  name: "listHandlesWithRestResponseAsync"
  nameWithType: "FilesImpl.listHandlesWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.listHandlesWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse"
    name: "FilesForceCloseHandlesResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.forceCloseHandlesWithRestResponseAsync*"
  name: "forceCloseHandlesWithRestResponseAsync"
  nameWithType: "FilesImpl.forceCloseHandlesWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.forceCloseHandlesWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesAcquireLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesAcquireLeaseResponse"
    name: "FilesAcquireLeaseResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesAcquireLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.acquireLeaseWithRestResponseAsync*"
  name: "acquireLeaseWithRestResponseAsync"
  nameWithType: "FilesImpl.acquireLeaseWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.acquireLeaseWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesReleaseLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesReleaseLeaseResponse"
    name: "FilesReleaseLeaseResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesReleaseLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.releaseLeaseWithRestResponseAsync*"
  name: "releaseLeaseWithRestResponseAsync"
  nameWithType: "FilesImpl.releaseLeaseWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.releaseLeaseWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesChangeLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesChangeLeaseResponse"
    name: "FilesChangeLeaseResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesChangeLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.changeLeaseWithRestResponseAsync*"
  name: "changeLeaseWithRestResponseAsync"
  nameWithType: "FilesImpl.changeLeaseWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.changeLeaseWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesBreakLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesBreakLeaseResponse"
    name: "FilesBreakLeaseResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesBreakLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.breakLeaseWithRestResponseAsync*"
  name: "breakLeaseWithRestResponseAsync"
  nameWithType: "FilesImpl.breakLeaseWithRestResponseAsync"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.breakLeaseWithRestResponseAsync"
  package: "com.azure.storage.file.share.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  name: "FilesImpl.FilesService"
  nameWithType: "FilesImpl.FilesService"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.file.share.implementation.models.FilesCreateResponse"
  name: "FilesCreateResponse"
  nameWithType: "FilesCreateResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesCreateResponse"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "com.azure.storage.file.share.implementation.models.FilesDownloadResponse"
  name: "FilesDownloadResponse"
  nameWithType: "FilesDownloadResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesDownloadResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse"
  name: "FilesGetPropertiesResponse"
  nameWithType: "FilesGetPropertiesResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesDeleteResponse"
  name: "FilesDeleteResponse"
  nameWithType: "FilesDeleteResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesDeleteResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse"
  name: "FilesSetHTTPHeadersResponse"
  nameWithType: "FilesSetHTTPHeadersResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse"
  name: "FilesSetMetadataResponse"
  nameWithType: "FilesSetMetadataResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse"
  name: "FilesUploadRangeResponse"
  nameWithType: "FilesUploadRangeResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
- uid: "com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse"
  name: "FilesUploadRangeFromURLResponse"
  nameWithType: "FilesUploadRangeFromURLResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse"
  name: "FilesGetRangeListResponse"
  nameWithType: "FilesGetRangeListResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesStartCopyResponse"
  name: "FilesStartCopyResponse"
  nameWithType: "FilesStartCopyResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesStartCopyResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse"
  name: "FilesAbortCopyResponse"
  nameWithType: "FilesAbortCopyResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesListHandlesResponse"
  name: "FilesListHandlesResponse"
  nameWithType: "FilesListHandlesResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesListHandlesResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse"
  name: "FilesForceCloseHandlesResponse"
  nameWithType: "FilesForceCloseHandlesResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesAcquireLeaseResponse"
  name: "FilesAcquireLeaseResponse"
  nameWithType: "FilesAcquireLeaseResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesAcquireLeaseResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesReleaseLeaseResponse"
  name: "FilesReleaseLeaseResponse"
  nameWithType: "FilesReleaseLeaseResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesReleaseLeaseResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesChangeLeaseResponse"
  name: "FilesChangeLeaseResponse"
  nameWithType: "FilesChangeLeaseResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesChangeLeaseResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesBreakLeaseResponse"
  name: "FilesBreakLeaseResponse"
  nameWithType: "FilesBreakLeaseResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesBreakLeaseResponse"
