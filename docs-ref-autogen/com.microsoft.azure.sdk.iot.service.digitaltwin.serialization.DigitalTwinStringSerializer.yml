### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.DigitalTwinStringSerializer"
fullName: "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.DigitalTwinStringSerializer"
name: "DigitalTwinStringSerializer"
nameWithType: "DigitalTwinStringSerializer"
summary: "Configures the <xref uid=\"com.fasterxml.jackson.databind.ser.std.StdSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StdSerializer\"></xref> with custom behavior needed to work with Digital Twins REST API."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()?alt=com.fasterxml.jackson.databind.JsonSerializer.getDelegatee&text=getDelegatee\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)?alt=com.fasterxml.jackson.databind.JsonSerializer.isEmpty&text=isEmpty\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)?alt=com.fasterxml.jackson.databind.JsonSerializer.isEmpty&text=isEmpty\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()?alt=com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer&text=isUnwrappingSerializer\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer.properties()?alt=com.fasterxml.jackson.databind.JsonSerializer.properties&text=properties\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)?alt=com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee&text=replaceDelegatee\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)?alt=com.fasterxml.jackson.databind.JsonSerializer.serializeWithType&text=serializeWithType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)?alt=com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer&text=unwrappingSerializer\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()?alt=com.fasterxml.jackson.databind.JsonSerializer.usesObjectId&text=usesObjectId\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)?alt=com.fasterxml.jackson.databind.JsonSerializer.withFilterId&text=withFilterId\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer&text=StdSerializer\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull&text=_neitherNull\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty&text=_nonEmpty\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.acceptJsonFormatVisitor&text=acceptJsonFormatVisitor\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode&text=createSchemaNode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode&text=createSchemaNode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer&text=findAnnotatedContentSerializer\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer&text=findContextualConvertingSerializer\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer&text=findConvertingContentSerializer\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature&text=findFormatFeature\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides&text=findFormatOverrides\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides&text=findIncludeOverrides\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter&text=findPropertyFilter\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema&text=getSchema\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema&text=getSchema\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType&text=handledType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer&text=isDefaultSerializer\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize&text=serialize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat&text=visitArrayFormat\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat&text=visitArrayFormat\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat&text=visitFloatFormat\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat&text=visitIntFormat\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat&text=visitIntFormat\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat&text=visitStringFormat\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat&text=visitStringFormat\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow&text=wrapAndThrow\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow&text=wrapAndThrow\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **DigitalTwinStringSerializer**</br> extends <xref href=\"com.fasterxml.jackson.databind.ser.std.StdSerializer?alt=com.fasterxml.jackson.databind.ser.std.StdSerializer&text=StdSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.DigitalTwinStringSerializer.DigitalTwinStringSerializer(java.lang.Class<java.lang.String>,com.fasterxml.jackson.databind.ObjectMapper)"
  fullName: "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.DigitalTwinStringSerializer.DigitalTwinStringSerializer(Class<String> t, ObjectMapper mapper)"
  name: "DigitalTwinStringSerializer(Class<String> t, ObjectMapper mapper)"
  nameWithType: "DigitalTwinStringSerializer.DigitalTwinStringSerializer(Class<String> t, ObjectMapper mapper)"
  parameters:
  - name: "t"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "mapper"
    type: "<xref href=\"com.fasterxml.jackson.databind.ObjectMapper?alt=com.fasterxml.jackson.databind.ObjectMapper&text=ObjectMapper\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DigitalTwinStringSerializer(Class<String> t, ObjectMapper mapper)"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.DigitalTwinStringSerializer.serialize(java.lang.String,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  fullName: "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization.DigitalTwinStringSerializer.serialize(String s, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)"
  name: "serialize(String s, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)"
  nameWithType: "DigitalTwinStringSerializer.serialize(String s, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)"
  overridden: "com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
  parameters:
  - name: "s"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "jsonGenerator"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "serializerProvider"
    type: "<xref href=\"com.fasterxml.jackson.databind.SerializerProvider?alt=com.fasterxml.jackson.databind.SerializerProvider&text=SerializerProvider\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void serialize(String s, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Configures the <xref uid=\"com.fasterxml.jackson.databind.ser.std.StdSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StdSerializer\"></xref> with custom behavior needed to work with Digital Twins REST API."
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.digitaltwin.serialization"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.30.0
