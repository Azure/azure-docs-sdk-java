### YamlMime:JavaMember
uid: "com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithPermissions.allowCertificatePermissions*"
fullName: "com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithPermissions<ParentT>.allowCertificatePermissions"
name: "allowCertificatePermissions"
nameWithType: "AccessPolicy.UpdateDefinitionStages.WithPermissions<ParentT>.allowCertificatePermissions"
members:
- uid: "com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithPermissions.allowCertificatePermissions(com.azure.resourcemanager.keyvault.models.CertificatePermissions...)"
  fullName: "com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithPermissions<ParentT>.allowCertificatePermissions(CertificatePermissions[] permissions)"
  name: "allowCertificatePermissions(CertificatePermissions[] permissions)"
  nameWithType: "AccessPolicy.UpdateDefinitionStages.WithPermissions<ParentT>.allowCertificatePermissions(CertificatePermissions[] permissions)"
  summary: "Allow a list of permissions for the AD identity to access certificates."
  parameters:
  - description: "the list of permissions allowed"
    name: "permissions"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.CertificatePermissions?alt=com.azure.resourcemanager.keyvault.models.CertificatePermissions&text=CertificatePermissions\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract AccessPolicy.UpdateDefinitionStages.WithAttach<ParentT> allowCertificatePermissions(CertificatePermissions[] permissions)"
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithAttach?alt=com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithPermissions.allowCertificatePermissions(java.util.List<com.azure.resourcemanager.keyvault.models.CertificatePermissions>)"
  fullName: "com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithPermissions<ParentT>.allowCertificatePermissions(List<CertificatePermissions> permissions)"
  name: "allowCertificatePermissions(List<CertificatePermissions> permissions)"
  nameWithType: "AccessPolicy.UpdateDefinitionStages.WithPermissions<ParentT>.allowCertificatePermissions(List<CertificatePermissions> permissions)"
  summary: "Allow a list of permissions for the AD identity to access certificates."
  parameters:
  - description: "the list of permissions allowed"
    name: "permissions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.keyvault.models.CertificatePermissions?alt=com.azure.resourcemanager.keyvault.models.CertificatePermissions&text=CertificatePermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract AccessPolicy.UpdateDefinitionStages.WithAttach<ParentT> allowCertificatePermissions(List<CertificatePermissions> permissions)"
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithAttach?alt=com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.keyvault.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.1.0
