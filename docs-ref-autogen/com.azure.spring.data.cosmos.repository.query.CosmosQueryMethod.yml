### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod
  id: CosmosQueryMethod
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query
  children:
  - com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.CosmosQueryMethod(java.lang.reflect.Method,org.springframework.data.repository.core.RepositoryMetadata,org.springframework.data.projection.ProjectionFactory)
  - com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.getEntityInformation()
  - com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.getQueryAnnotation()
  - com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.hasAnnotatedQuery()
  langs:
  - java
  name: CosmosQueryMethod
  nameWithType: CosmosQueryMethod
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod
  type: Class
  package: com.azure.spring.data.cosmos.repository.query
  summary: Inherit QueryMethod class to generate a method that is designated to execute a finder query.
  syntax:
    content: public class CosmosQueryMethod extends QueryMethod
  inheritance:
  - java.lang.Object
  - org.springframework.data.repository.query.QueryMethod
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.data.repository.query.QueryMethod.createParameters(java.lang.reflect.Method)
  - org.springframework.data.repository.query.QueryMethod.getDomainClass()
  - org.springframework.data.repository.query.QueryMethod.getEntityInformation()
  - org.springframework.data.repository.query.QueryMethod.getName()
  - org.springframework.data.repository.query.QueryMethod.getNamedQueryName()
  - org.springframework.data.repository.query.QueryMethod.getParameters()
  - org.springframework.data.repository.query.QueryMethod.getResultProcessor()
  - org.springframework.data.repository.query.QueryMethod.getReturnedObjectType()
  - org.springframework.data.repository.query.QueryMethod.isCollectionQuery()
  - org.springframework.data.repository.query.QueryMethod.isModifyingQuery()
  - org.springframework.data.repository.query.QueryMethod.isPageQuery()
  - org.springframework.data.repository.query.QueryMethod.isQueryForEntity()
  - org.springframework.data.repository.query.QueryMethod.isSliceQuery()
  - org.springframework.data.repository.query.QueryMethod.isStreamQuery()
  - org.springframework.data.repository.query.QueryMethod.toString()
- uid: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.CosmosQueryMethod(java.lang.reflect.Method,org.springframework.data.repository.core.RepositoryMetadata,org.springframework.data.projection.ProjectionFactory)
  id: CosmosQueryMethod(java.lang.reflect.Method,org.springframework.data.repository.core.RepositoryMetadata,org.springframework.data.projection.ProjectionFactory)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod
  langs:
  - java
  name: CosmosQueryMethod(Method method, RepositoryMetadata metadata, ProjectionFactory factory)
  nameWithType: CosmosQueryMethod.CosmosQueryMethod(Method method, RepositoryMetadata metadata, ProjectionFactory factory)
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.CosmosQueryMethod(Method method, RepositoryMetadata metadata, ProjectionFactory factory)
  overload: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.CosmosQueryMethod*
  type: Constructor
  package: com.azure.spring.data.cosmos.repository.query
  summary: Creates a new <xref uid="com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod" data-throw-if-not-resolved="false">CosmosQueryMethod</xref> from the given parameters. Looks up the correct query to use for following invocations of the method given.
  syntax:
    content: public CosmosQueryMethod(Method method, RepositoryMetadata metadata, ProjectionFactory factory)
    parameters:
    - id: method
      type: java.lang.reflect.Method
      description: must not be null.
    - id: metadata
      type: org.springframework.data.repository.core.RepositoryMetadata
      description: must not be null.
    - id: factory
      type: org.springframework.data.projection.ProjectionFactory
      description: must not be null.
- uid: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.getEntityInformation()
  id: getEntityInformation()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod
  langs:
  - java
  name: getEntityInformation()
  nameWithType: CosmosQueryMethod.getEntityInformation()
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.getEntityInformation()
  overload: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.getEntityInformation*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  syntax:
    content: public EntityMetadata<?> getEntityInformation()
    return:
      type: org.springframework.data.repository.core.EntityMetadata<?>
- uid: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.getQueryAnnotation()
  id: getQueryAnnotation()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod
  langs:
  - java
  name: getQueryAnnotation()
  nameWithType: CosmosQueryMethod.getQueryAnnotation()
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.getQueryAnnotation()
  overload: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.getQueryAnnotation*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  summary: Returns the query string declared in a <xref uid="com.azure.spring.data.cosmos.repository.Query" data-throw-if-not-resolved="false">Query</xref> annotation or null if neither the annotation found nor the attribute was specified.
  syntax:
    content: public String getQueryAnnotation()
    return:
      type: java.lang.String
      description: the query string or null
- uid: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.hasAnnotatedQuery()
  id: hasAnnotatedQuery()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod
  langs:
  - java
  name: hasAnnotatedQuery()
  nameWithType: CosmosQueryMethod.hasAnnotatedQuery()
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.hasAnnotatedQuery()
  overload: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.hasAnnotatedQuery*
  type: Method
  package: com.azure.spring.data.cosmos.repository.query
  summary: Returns whether the method has an annotated query.
  syntax:
    content: public boolean hasAnnotatedQuery()
    return:
      type: boolean
      description: if the query method has an annotated query
references:
- uid: java.lang.reflect.Method
  spec.java:
  - uid: java.lang.reflect.Method
    name: Method
    fullName: java.lang.reflect.Method
- uid: org.springframework.data.repository.core.RepositoryMetadata
  spec.java:
  - uid: org.springframework.data.repository.core.RepositoryMetadata
    name: RepositoryMetadata
    fullName: org.springframework.data.repository.core.RepositoryMetadata
- uid: org.springframework.data.projection.ProjectionFactory
  spec.java:
  - uid: org.springframework.data.projection.ProjectionFactory
    name: ProjectionFactory
    fullName: org.springframework.data.projection.ProjectionFactory
- uid: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.CosmosQueryMethod*
  name: CosmosQueryMethod
  nameWithType: CosmosQueryMethod.CosmosQueryMethod
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.CosmosQueryMethod
  package: com.azure.spring.data.cosmos.repository.query
- uid: org.springframework.data.repository.core.EntityMetadata<?>
  spec.java:
  - uid: org.springframework.data.repository.core.EntityMetadata
    name: EntityMetadata
    fullName: org.springframework.data.repository.core.EntityMetadata
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.getEntityInformation*
  name: getEntityInformation
  nameWithType: CosmosQueryMethod.getEntityInformation
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.getEntityInformation
  package: com.azure.spring.data.cosmos.repository.query
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.hasAnnotatedQuery*
  name: hasAnnotatedQuery
  nameWithType: CosmosQueryMethod.hasAnnotatedQuery
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.hasAnnotatedQuery
  package: com.azure.spring.data.cosmos.repository.query
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.getQueryAnnotation*
  name: getQueryAnnotation
  nameWithType: CosmosQueryMethod.getQueryAnnotation
  fullName: com.azure.spring.data.cosmos.repository.query.CosmosQueryMethod.getQueryAnnotation
  package: com.azure.spring.data.cosmos.repository.query
- uid: org.springframework.data.repository.query.QueryMethod
  name: QueryMethod
  nameWithType: QueryMethod
  fullName: org.springframework.data.repository.query.QueryMethod
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.springframework.data.repository.query.QueryMethod.getParameters()
  name: QueryMethod.getParameters()
  nameWithType: QueryMethod.getParameters()
  fullName: org.springframework.data.repository.query.QueryMethod.getParameters()
- uid: org.springframework.data.repository.query.QueryMethod.isCollectionQuery()
  name: QueryMethod.isCollectionQuery()
  nameWithType: QueryMethod.isCollectionQuery()
  fullName: org.springframework.data.repository.query.QueryMethod.isCollectionQuery()
- uid: org.springframework.data.repository.query.QueryMethod.getReturnedObjectType()
  name: QueryMethod.getReturnedObjectType()
  nameWithType: QueryMethod.getReturnedObjectType()
  fullName: org.springframework.data.repository.query.QueryMethod.getReturnedObjectType()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: org.springframework.data.repository.query.QueryMethod.isSliceQuery()
  name: QueryMethod.isSliceQuery()
  nameWithType: QueryMethod.isSliceQuery()
  fullName: org.springframework.data.repository.query.QueryMethod.isSliceQuery()
- uid: org.springframework.data.repository.query.QueryMethod.createParameters(java.lang.reflect.Method)
  name: QueryMethod.createParameters(Method)
  nameWithType: QueryMethod.createParameters(Method)
  fullName: org.springframework.data.repository.query.QueryMethod.createParameters(java.lang.reflect.Method)
- uid: org.springframework.data.repository.query.QueryMethod.isPageQuery()
  name: QueryMethod.isPageQuery()
  nameWithType: QueryMethod.isPageQuery()
  fullName: org.springframework.data.repository.query.QueryMethod.isPageQuery()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.springframework.data.repository.query.QueryMethod.getEntityInformation()
  name: QueryMethod.getEntityInformation()
  nameWithType: QueryMethod.getEntityInformation()
  fullName: org.springframework.data.repository.query.QueryMethod.getEntityInformation()
- uid: org.springframework.data.repository.query.QueryMethod.getNamedQueryName()
  name: QueryMethod.getNamedQueryName()
  nameWithType: QueryMethod.getNamedQueryName()
  fullName: org.springframework.data.repository.query.QueryMethod.getNamedQueryName()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: org.springframework.data.repository.query.QueryMethod.isModifyingQuery()
  name: QueryMethod.isModifyingQuery()
  nameWithType: QueryMethod.isModifyingQuery()
  fullName: org.springframework.data.repository.query.QueryMethod.isModifyingQuery()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.springframework.data.repository.query.QueryMethod.getName()
  name: QueryMethod.getName()
  nameWithType: QueryMethod.getName()
  fullName: org.springframework.data.repository.query.QueryMethod.getName()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.springframework.data.repository.query.QueryMethod.isStreamQuery()
  name: QueryMethod.isStreamQuery()
  nameWithType: QueryMethod.isStreamQuery()
  fullName: org.springframework.data.repository.query.QueryMethod.isStreamQuery()
- uid: org.springframework.data.repository.query.QueryMethod.getDomainClass()
  name: QueryMethod.getDomainClass()
  nameWithType: QueryMethod.getDomainClass()
  fullName: org.springframework.data.repository.query.QueryMethod.getDomainClass()
- uid: org.springframework.data.repository.query.QueryMethod.toString()
  name: QueryMethod.toString()
  nameWithType: QueryMethod.toString()
  fullName: org.springframework.data.repository.query.QueryMethod.toString()
- uid: org.springframework.data.repository.query.QueryMethod.getResultProcessor()
  name: QueryMethod.getResultProcessor()
  nameWithType: QueryMethod.getResultProcessor()
  fullName: org.springframework.data.repository.query.QueryMethod.getResultProcessor()
- uid: org.springframework.data.repository.query.QueryMethod.isQueryForEntity()
  name: QueryMethod.isQueryForEntity()
  nameWithType: QueryMethod.isQueryForEntity()
  fullName: org.springframework.data.repository.query.QueryMethod.isQueryForEntity()
- uid: org.springframework.data.repository.core.EntityMetadata
  name: EntityMetadata
  nameWithType: EntityMetadata
  fullName: org.springframework.data.repository.core.EntityMetadata
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
