### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase
  id: BlobAsyncClientBase
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized
  children:
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase(com.azure.core.http.HttpPipeline,java.lang.String,com.azure.storage.blob.BlobServiceVersion,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase(com.azure.core.http.HttpPipeline,java.lang.String,com.azure.storage.blob.BlobServiceVersion,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase(com.azure.core.http.HttpPipeline,java.lang.String,com.azure.storage.blob.BlobServiceVersion,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,java.lang.String)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.abortCopyFromUrl(java.lang.String)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.accountName
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.azureBlobStorage
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(com.azure.storage.blob.options.BlobBeginCopyOptions)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(java.lang.String,java.time.Duration)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.blobName
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.containerName
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrl(java.lang.String)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrlWithResponse(com.azure.storage.blob.options.BlobCopyFromUrlOptions)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.createSnapshot()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.delete()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.download()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFile(java.lang.String)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFile(java.lang.String,boolean)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadWithResponse(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.encryptionScope
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.exists()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.existsWithResponse()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountInfo()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountInfoWithResponse()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountName()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getBlobName()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getBlobUrl()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getContainerName()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getCustomerProvidedKey()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getEncryptionScope()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getHttpPipeline()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getProperties()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getServiceVersion()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotClient(java.lang.String)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotId()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getTags()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getTagsWithResponse(com.azure.storage.blob.options.BlobGetTagsOptions)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getVersionClient(java.lang.String)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.getVersionId()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.isSnapshot()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.query(java.lang.String)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.queryWithResponse(com.azure.storage.blob.options.BlobQueryOptions)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.serviceVersion
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse(com.azure.storage.blob.options.BlobSetAccessTierOptions)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.setTags(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.setTagsWithResponse(com.azure.storage.blob.options.BlobSetTagsOptions)
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.undelete()
  - com.azure.storage.blob.specialized.BlobAsyncClientBase.undeleteWithResponse()
  langs:
  - java
  name: BlobAsyncClientBase
  nameWithType: BlobAsyncClientBase
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase
  type: Class
  package: com.azure.storage.blob.specialized
  summary: >-
    This class provides a client that contains all operations that apply to any blob type.


    This client offers the ability to download blobs. Note that uploading data is specific to each type of blob. Please refer to the <xref uid="com.azure.storage.blob.specialized.BlockBlobClient" data-throw-if-not-resolved="false">BlockBlobClient</xref>, <xref uid="com.azure.storage.blob.specialized.PageBlobClient" data-throw-if-not-resolved="false">PageBlobClient</xref>, or <xref uid="com.azure.storage.blob.specialized.AppendBlobClient" data-throw-if-not-resolved="false">AppendBlobClient</xref> for upload options.
  syntax:
    content: public class BlobAsyncClientBase
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase(com.azure.core.http.HttpPipeline,java.lang.String,com.azure.storage.blob.BlobServiceVersion,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo)
  id: BlobAsyncClientBase(com.azure.core.http.HttpPipeline,java.lang.String,com.azure.storage.blob.BlobServiceVersion,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: BlobAsyncClientBase(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName, String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey)
  nameWithType: BlobAsyncClientBase.BlobAsyncClientBase(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName, String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName, String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase*
  type: Constructor
  package: com.azure.storage.blob.specialized
  summary: Protected constructor for use by <xref uid="com.azure.storage.blob.specialized.SpecializedBlobClientBuilder" data-throw-if-not-resolved="false">SpecializedBlobClientBuilder</xref>.
  syntax:
    content: protected BlobAsyncClientBase(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName, String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey)
    parameters:
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
      description: The pipeline used to send and receive service requests.
    - id: url
      type: java.lang.String
      description: The endpoint where to send service requests.
    - id: serviceVersion
      type: com.azure.storage.blob.BlobServiceVersion
      description: The version of the service to receive requests.
    - id: accountName
      type: java.lang.String
      description: The storage account name.
    - id: containerName
      type: java.lang.String
      description: The container name.
    - id: blobName
      type: java.lang.String
      description: The blob name.
    - id: snapshot
      type: java.lang.String
      description: The snapshot identifier for the blob, pass <code>null</code> to interact with the blob directly.
    - id: customerProvidedKey
      type: com.azure.storage.blob.models.CpkInfo
      description: >-
        Customer provided key used during encryption of the blob's data on the server, pass
         <code>null</code> to allow the service to use its own encryption.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase(com.azure.core.http.HttpPipeline,java.lang.String,com.azure.storage.blob.BlobServiceVersion,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope)
  id: BlobAsyncClientBase(com.azure.core.http.HttpPipeline,java.lang.String,com.azure.storage.blob.BlobServiceVersion,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: BlobAsyncClientBase(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName, String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey, EncryptionScope encryptionScope)
  nameWithType: BlobAsyncClientBase.BlobAsyncClientBase(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName, String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey, EncryptionScope encryptionScope)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName, String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey, EncryptionScope encryptionScope)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase*
  type: Constructor
  package: com.azure.storage.blob.specialized
  summary: Protected constructor for use by <xref uid="com.azure.storage.blob.specialized.SpecializedBlobClientBuilder" data-throw-if-not-resolved="false">SpecializedBlobClientBuilder</xref>.
  syntax:
    content: protected BlobAsyncClientBase(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName, String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey, EncryptionScope encryptionScope)
    parameters:
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
      description: The pipeline used to send and receive service requests.
    - id: url
      type: java.lang.String
      description: The endpoint where to send service requests.
    - id: serviceVersion
      type: com.azure.storage.blob.BlobServiceVersion
      description: The version of the service to receive requests.
    - id: accountName
      type: java.lang.String
      description: The storage account name.
    - id: containerName
      type: java.lang.String
      description: The container name.
    - id: blobName
      type: java.lang.String
      description: The blob name.
    - id: snapshot
      type: java.lang.String
      description: The snapshot identifier for the blob, pass <code>null</code> to interact with the blob directly.
    - id: customerProvidedKey
      type: com.azure.storage.blob.models.CpkInfo
      description: >-
        Customer provided key used during encryption of the blob's data on the server, pass
         <code>null</code> to allow the service to use its own encryption.
    - id: encryptionScope
      type: com.azure.storage.blob.implementation.models.EncryptionScope
      description: >-
        Encryption scope used during encryption of the blob's data on the server, pass
         <code>null</code> to allow the service to use its own encryption.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase(com.azure.core.http.HttpPipeline,java.lang.String,com.azure.storage.blob.BlobServiceVersion,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,java.lang.String)
  id: BlobAsyncClientBase(com.azure.core.http.HttpPipeline,java.lang.String,com.azure.storage.blob.BlobServiceVersion,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: BlobAsyncClientBase(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName, String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey, EncryptionScope encryptionScope, String versionId)
  nameWithType: BlobAsyncClientBase.BlobAsyncClientBase(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName, String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey, EncryptionScope encryptionScope, String versionId)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName, String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey, EncryptionScope encryptionScope, String versionId)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase*
  type: Constructor
  package: com.azure.storage.blob.specialized
  summary: Protected constructor for use by <xref uid="com.azure.storage.blob.specialized.SpecializedBlobClientBuilder" data-throw-if-not-resolved="false">SpecializedBlobClientBuilder</xref>.
  syntax:
    content: protected BlobAsyncClientBase(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName, String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey, EncryptionScope encryptionScope, String versionId)
    parameters:
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
      description: The pipeline used to send and receive service requests.
    - id: url
      type: java.lang.String
      description: The endpoint where to send service requests.
    - id: serviceVersion
      type: com.azure.storage.blob.BlobServiceVersion
      description: The version of the service to receive requests.
    - id: accountName
      type: java.lang.String
      description: The storage account name.
    - id: containerName
      type: java.lang.String
      description: The container name.
    - id: blobName
      type: java.lang.String
      description: The blob name.
    - id: snapshot
      type: java.lang.String
      description: The snapshot identifier for the blob, pass <code>null</code> to interact with the blob directly.
    - id: customerProvidedKey
      type: com.azure.storage.blob.models.CpkInfo
      description: >-
        Customer provided key used during encryption of the blob's data on the server, pass
         <code>null</code> to allow the service to use its own encryption.
    - id: encryptionScope
      type: com.azure.storage.blob.implementation.models.EncryptionScope
      description: >-
        Encryption scope used during encryption of the blob's data on the server, pass
         <code>null</code> to allow the service to use its own encryption.
    - id: versionId
      type: java.lang.String
      description: The version identifier for the blob, pass <code>null</code> to interact with the latest blob version.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.abortCopyFromUrl(java.lang.String)
  id: abortCopyFromUrl(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: abortCopyFromUrl(String copyId)
  nameWithType: BlobAsyncClientBase.abortCopyFromUrl(String copyId)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.abortCopyFromUrl(String copyId)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.abortCopyFromUrl*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Stops a pending copy that was previously started and leaves a destination blob with 0 length and metadata.


    **Code Samples**


    ```java

    client.abortCopyFromUrl(copyId).doOnSuccess(response -> System.out.println("Aborted copy from URL"));

    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob
  syntax:
    content: public Mono<Void> abortCopyFromUrl(String copyId)
    parameters:
    - id: copyId
      type: java.lang.String
      description: The id of the copy operation to abort.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response signalling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String)
  id: abortCopyFromUrlWithResponse(java.lang.String,java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: abortCopyFromUrlWithResponse(String copyId, String leaseId)
  nameWithType: BlobAsyncClientBase.abortCopyFromUrlWithResponse(String copyId, String leaseId)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.abortCopyFromUrlWithResponse(String copyId, String leaseId)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.abortCopyFromUrlWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Stops a pending copy that was previously started and leaves a destination blob with 0 length and metadata.


    **Code Samples**


    ```java

    client.abortCopyFromUrlWithResponse(copyId, leaseId)
         .subscribe(response -> System.out.printf("Aborted copy completed with status %d%n", response.getStatusCode()));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob
  syntax:
    content: public Mono<Response<Void>> abortCopyFromUrlWithResponse(String copyId, String leaseId)
    parameters:
    - id: copyId
      type: java.lang.String
      description: The id of the copy operation to abort.
    - id: leaseId
      type: java.lang.String
      description: The lease ID the active lease on the blob must match.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A reactive response signalling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.accountName
  id: accountName
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: accountName
  nameWithType: BlobAsyncClientBase.accountName
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.accountName
  type: Field
  package: com.azure.storage.blob.specialized
  syntax:
    content: protected final String accountName
    return:
      type: java.lang.String
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.azureBlobStorage
  id: azureBlobStorage
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: azureBlobStorage
  nameWithType: BlobAsyncClientBase.azureBlobStorage
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.azureBlobStorage
  type: Field
  package: com.azure.storage.blob.specialized
  syntax:
    content: protected final AzureBlobStorageImpl azureBlobStorage
    return:
      type: com.azure.storage.blob.implementation.AzureBlobStorageImpl
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(com.azure.storage.blob.options.BlobBeginCopyOptions)
  id: beginCopy(com.azure.storage.blob.options.BlobBeginCopyOptions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: beginCopy(BlobBeginCopyOptions options)
  nameWithType: BlobAsyncClientBase.beginCopy(BlobBeginCopyOptions options)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(BlobBeginCopyOptions options)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Copies the data at the source URL to a blob.\n\n**Starting a copy operation**\n\nStarting a copy operation and polling on the responses.\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n Map<String, String> tags = Collections.singletonMap(\"tag\", \"value\");\n BlobBeginCopySourceRequestConditions modifiedRequestConditions = new BlobBeginCopySourceRequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n client.beginCopy(new BlobBeginCopyOptions(url).setMetadata(metadata).setTags(tags).setTier(AccessTier.HOT)\n     .setRehydratePriority(RehydratePriority.STANDARD).setSourceRequestConditions(modifiedRequestConditions)\n     .setDestinationRequestConditions(blobRequestConditions).setPollInterval(Duration.ofSeconds(2)))\n     .subscribe(response -> {\n         BlobCopyInfo info = response.getValue();\n         System.out.printf(\"CopyId: %s. Status: %s%n\", info.getCopyId(), info.getCopyStatus());\n     });\n```\n\n**Cancelling a copy operation**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n Map<String, String> tags = Collections.singletonMap(\"tag\", \"value\");\n BlobBeginCopySourceRequestConditions modifiedRequestConditions = new BlobBeginCopySourceRequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n PollerFlux<BlobCopyInfo, Void> poller = client.beginCopy(new BlobBeginCopyOptions(url)\n     .setMetadata(metadata).setTags(tags).setTier(AccessTier.HOT)\n     .setRehydratePriority(RehydratePriority.STANDARD).setSourceRequestConditions(modifiedRequestConditions)\n     .setDestinationRequestConditions(blobRequestConditions).setPollInterval(Duration.ofSeconds(2)));\n \n poller.take(Duration.ofMinutes(30))\n         .last()\n         .flatMap(asyncPollResponse -> {\n             if (!asyncPollResponse.getStatus().isComplete()) {\n                 return asyncPollResponse\n                         .cancelOperation()\n                         .then(Mono.error(new RuntimeException(\"Blob copy taking long time, \"\n                                 + \"operation is cancelled!\")));\n             }\n             return Mono.just(asyncPollResponse);\n         }).block();\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob"
  syntax:
    content: public PollerFlux<BlobCopyInfo,Void> beginCopy(BlobBeginCopyOptions options)
    parameters:
    - id: options
      type: com.azure.storage.blob.options.BlobBeginCopyOptions
      description: <xref uid="com.azure.storage.blob.options.BlobBeginCopyOptions" data-throw-if-not-resolved="false">BlobBeginCopyOptions</xref>
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.storage.blob.models.BlobCopyInfo,java.lang.Void>
      description: >-
        A <xref uid="com.azure.core.util.polling.PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the blob copy operation until it has completed, has failed, or has been
         cancelled.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(java.lang.String,java.time.Duration)
  id: beginCopy(java.lang.String,java.time.Duration)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: beginCopy(String sourceUrl, Duration pollInterval)
  nameWithType: BlobAsyncClientBase.beginCopy(String sourceUrl, Duration pollInterval)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(String sourceUrl, Duration pollInterval)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Copies the data at the source URL to a blob.


    **Code Samples**


    ```java

    client.beginCopy(url, Duration.ofSeconds(3))
         .subscribe(response -> System.out.printf("Copy identifier: %s%n", response));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob
  syntax:
    content: public PollerFlux<BlobCopyInfo,Void> beginCopy(String sourceUrl, Duration pollInterval)
    parameters:
    - id: sourceUrl
      type: java.lang.String
      description: The source URL to copy from. URLs outside of Azure may only be copied to block blobs.
    - id: pollInterval
      type: java.time.Duration
      description: >-
        Duration between each poll for the copy status. If none is specified, a default of one second
         is used.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.storage.blob.models.BlobCopyInfo,java.lang.Void>
      description: >-
        A <xref uid="com.azure.core.util.polling.PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the blob copy operation until it has completed, has failed, or has been
         cancelled.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
  id: beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)
  nameWithType: BlobAsyncClientBase.beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Copies the data at the source URL to a blob.\n\n**Starting a copy operation**\n\nStarting a copy operation and polling on the responses.\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n RequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n client.beginCopy(url, metadata, AccessTier.HOT, RehydratePriority.STANDARD,\n     modifiedRequestConditions, blobRequestConditions, Duration.ofSeconds(2))\n     .subscribe(response -> {\n         BlobCopyInfo info = response.getValue();\n         System.out.printf(\"CopyId: %s. Status: %s%n\", info.getCopyId(), info.getCopyStatus());\n     });\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob"
  syntax:
    content: public PollerFlux<BlobCopyInfo,Void> beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)
    parameters:
    - id: sourceUrl
      type: java.lang.String
      description: The source URL to copy from. URLs outside of Azure may only be copied to block blobs.
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the destination blob.
    - id: tier
      type: com.azure.storage.blob.models.AccessTier
      description: <xref uid="com.azure.storage.blob.models.AccessTier" data-throw-if-not-resolved="false">AccessTier</xref> for the destination blob.
    - id: priority
      type: com.azure.storage.blob.models.RehydratePriority
      description: <xref uid="com.azure.storage.blob.models.RehydratePriority" data-throw-if-not-resolved="false">RehydratePriority</xref> for rehydrating the blob.
    - id: sourceModifiedRequestConditions
      type: com.azure.core.http.RequestConditions
      description: >-
        <xref uid="com.azure.core.http.RequestConditions" data-throw-if-not-resolved="false">RequestConditions</xref> against the source. Standard HTTP Access
         conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions
         related to when the blob was changed relative to the given request. The request will fail if the specified
         condition is not satisfied.
    - id: destRequestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref> against the destination.
    - id: pollInterval
      type: java.time.Duration
      description: >-
        Duration between each poll for the copy status. If none is specified, a default of one second
         is used.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.storage.blob.models.BlobCopyInfo,java.lang.Void>
      description: >-
        A <xref uid="com.azure.core.util.polling.PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the blob copy operation until it has completed, has failed, or has been
         cancelled.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.blobName
  id: blobName
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: blobName
  nameWithType: BlobAsyncClientBase.blobName
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.blobName
  type: Field
  package: com.azure.storage.blob.specialized
  syntax:
    content: protected final String blobName
    return:
      type: java.lang.String
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.containerName
  id: containerName
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: containerName
  nameWithType: BlobAsyncClientBase.containerName
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.containerName
  type: Field
  package: com.azure.storage.blob.specialized
  syntax:
    content: protected final String containerName
    return:
      type: java.lang.String
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrl(java.lang.String)
  id: copyFromUrl(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: copyFromUrl(String copySource)
  nameWithType: BlobAsyncClientBase.copyFromUrl(String copySource)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrl(String copySource)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrl*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Copies the data at the source URL to a blob and waits for the copy to complete before returning a response.


    **Code Samples**


    ```java

    client.copyFromUrl(url).subscribe(response -> System.out.printf("Copy identifier: %s%n", response));

    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url
  syntax:
    content: public Mono<String> copyFromUrl(String copySource)
    parameters:
    - id: copySource
      type: java.lang.String
      description: The source URL to copy from.
    return:
      type: reactor.core.publisher.Mono<java.lang.String>
      description: A reactive response containing the copy ID for the long running operation.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrlWithResponse(com.azure.storage.blob.options.BlobCopyFromUrlOptions)
  id: copyFromUrlWithResponse(com.azure.storage.blob.options.BlobCopyFromUrlOptions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: copyFromUrlWithResponse(BlobCopyFromUrlOptions options)
  nameWithType: BlobAsyncClientBase.copyFromUrlWithResponse(BlobCopyFromUrlOptions options)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrlWithResponse(BlobCopyFromUrlOptions options)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrlWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Copies the data at the source URL to a blob and waits for the copy to complete before returning a response.\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n Map<String, String> tags = Collections.singletonMap(\"tag\", \"value\");\n RequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n client.copyFromUrlWithResponse(new BlobCopyFromUrlOptions(url).setMetadata(metadata).setTags(tags)\n     .setTier(AccessTier.HOT).setSourceRequestConditions(modifiedRequestConditions)\n     .setDestinationRequestConditions(blobRequestConditions))\n     .subscribe(response -> System.out.printf(\"Copy identifier: %s%n\", response));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url"
  syntax:
    content: public Mono<Response<String>> copyFromUrlWithResponse(BlobCopyFromUrlOptions options)
    parameters:
    - id: options
      type: com.azure.storage.blob.options.BlobCopyFromUrlOptions
      description: <xref uid="com.azure.storage.blob.options.BlobCopyFromUrlOptions" data-throw-if-not-resolved="false">BlobCopyFromUrlOptions</xref>
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.String>>
      description: A reactive response containing the copy ID for the long running operation.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions)
  id: copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: copyFromUrlWithResponse(String copySource, Map<String,String> metadata, AccessTier tier, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions)
  nameWithType: BlobAsyncClientBase.copyFromUrlWithResponse(String copySource, Map<String,String> metadata, AccessTier tier, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrlWithResponse(String copySource, Map<String,String> metadata, AccessTier tier, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrlWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Copies the data at the source URL to a blob and waits for the copy to complete before returning a response.\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n RequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n client.copyFromUrlWithResponse(url, metadata, AccessTier.HOT, modifiedRequestConditions, blobRequestConditions)\n     .subscribe(response -> System.out.printf(\"Copy identifier: %s%n\", response));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url"
  syntax:
    content: public Mono<Response<String>> copyFromUrlWithResponse(String copySource, Map<String,String> metadata, AccessTier tier, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions)
    parameters:
    - id: copySource
      type: java.lang.String
      description: The source URL to copy from. URLs outside of Azure may only be copied to block blobs.
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the destination blob.
    - id: tier
      type: com.azure.storage.blob.models.AccessTier
      description: <xref uid="com.azure.storage.blob.models.AccessTier" data-throw-if-not-resolved="false">AccessTier</xref> for the destination blob.
    - id: sourceModifiedRequestConditions
      type: com.azure.core.http.RequestConditions
      description: >-
        <xref uid="com.azure.core.http.RequestConditions" data-throw-if-not-resolved="false">RequestConditions</xref> against the source. Standard HTTP Access
         conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions
         related to when the blob was changed relative to the given request. The request will fail if the specified
         condition is not satisfied.
    - id: destRequestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref> against the destination.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.String>>
      description: A reactive response containing the copy ID for the long running operation.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.createSnapshot()
  id: createSnapshot()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: createSnapshot()
  nameWithType: BlobAsyncClientBase.createSnapshot()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.createSnapshot()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.createSnapshot*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Creates a read-only snapshot of the blob.


    **Code Samples**


    ```java

    client.createSnapshot()
         .subscribe(response -> System.out.printf("Identifier for the snapshot is %s%n",
             response.getSnapshotId()));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob
  syntax:
    content: public Mono<BlobAsyncClientBase> createSnapshot()
    return:
      type: reactor.core.publisher.Mono<com.azure.storage.blob.specialized.BlobAsyncClientBase>
      description: >-
        A response containing a <xref uid="com.azure.storage.blob.specialized.BlobAsyncClientBase" data-throw-if-not-resolved="false">BlobAsyncClientBase</xref> which is used to interact with the created snapshot,
         use <xref uid="com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotId()" data-throw-if-not-resolved="false">#getSnapshotId()</xref> to get the identifier for the snapshot.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions)
  id: createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: createSnapshotWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions)
  nameWithType: BlobAsyncClientBase.createSnapshotWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.createSnapshotWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.createSnapshotWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Creates a read-only snapshot of the blob.\n\n**Code Samples**\n\n```java\nMap<String, String> snapshotMetadata = Collections.singletonMap(\"metadata\", \"value\");\n BlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n client.createSnapshotWithResponse(snapshotMetadata, requestConditions)\n     .subscribe(response -> System.out.printf(\"Identifier for the snapshot is %s%n\", response.getValue()));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob"
  syntax:
    content: public Mono<Response<BlobAsyncClientBase>> createSnapshotWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions)
    parameters:
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the blob snapshot.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.storage.blob.specialized.BlobAsyncClientBase>>
      description: >-
        A response containing a <xref uid="com.azure.storage.blob.specialized.BlobAsyncClientBase" data-throw-if-not-resolved="false">BlobAsyncClientBase</xref> which is used to interact with the created snapshot,
         use <xref uid="com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotId()" data-throw-if-not-resolved="false">#getSnapshotId()</xref> to get the identifier for the snapshot.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.delete()
  id: delete()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: delete()
  nameWithType: BlobAsyncClientBase.delete()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.delete()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.delete*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Deletes the specified blob or snapshot. Note that deleting a blob also deletes all its snapshots.


    **Code Samples**


    ```java

    client.delete().doOnSuccess(response -> System.out.println("Completed delete"));

    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob
  syntax:
    content: public Mono<Void> delete()
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response signalling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions)
  id: deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: deleteWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions)
  nameWithType: BlobAsyncClientBase.deleteWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.deleteWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.deleteWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Deletes the specified blob or snapshot. Note that deleting a blob also deletes all its snapshots.


    **Code Samples**


    ```java

    client.deleteWithResponse(DeleteSnapshotsOptionType.INCLUDE, null)
         .subscribe(response -> System.out.printf("Delete completed with status %d%n", response.getStatusCode()));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob
  syntax:
    content: public Mono<Response<Void>> deleteWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions)
    parameters:
    - id: deleteBlobSnapshotOptions
      type: com.azure.storage.blob.models.DeleteSnapshotsOptionType
      description: >-
        Specifies the behavior for deleting the snapshots on this blob. <code>Include</code>
         will delete the base blob and all snapshots. <code>Only</code> will delete only the snapshots. If a snapshot is being
         deleted, you must pass null.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A reactive response signalling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.download()
  id: download()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: download()
  nameWithType: BlobAsyncClientBase.download()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.download()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.download*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Reads the entire blob. Uploading data must be done from the <xref uid="com.azure.storage.blob.specialized.BlockBlobClient" data-throw-if-not-resolved="false">BlockBlobClient</xref>, <xref uid="com.azure.storage.blob.specialized.PageBlobClient" data-throw-if-not-resolved="false">PageBlobClient</xref>, or <xref uid="com.azure.storage.blob.specialized.AppendBlobClient" data-throw-if-not-resolved="false">AppendBlobClient</xref>.


    **Code Samples**


    ```java

    ByteArrayOutputStream downloadData = new ByteArrayOutputStream();
     client.download().subscribe(piece -> {
         try {
             downloadData.write(piece.array());
         } catch (IOException ex) {
             throw new UncheckedIOException(ex);
         }
     });
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob
  syntax:
    content: public Flux<ByteBuffer> download()
    return:
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: A reactive response containing the blob data.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFile(java.lang.String)
  id: downloadToFile(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: downloadToFile(String filePath)
  nameWithType: BlobAsyncClientBase.downloadToFile(String filePath)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFile(String filePath)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFile*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Downloads the entire blob into a file specified by the path.


    The file will be created and must not exist, if the file already exists a <xref uid="" data-throw-if-not-resolved="false">FileAlreadyExistsException</xref> will be thrown.


    **Code Samples**


    ```java

    client.downloadToFile(file).subscribe(response -> System.out.println("Completed download to file"));

    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob
  syntax:
    content: public Mono<BlobProperties> downloadToFile(String filePath)
    parameters:
    - id: filePath
      type: java.lang.String
      description: A <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref> representing the filePath where the downloaded data will be written.
    return:
      type: reactor.core.publisher.Mono<com.azure.storage.blob.models.BlobProperties>
      description: A reactive response containing the blob properties and metadata.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFile(java.lang.String,boolean)
  id: downloadToFile(java.lang.String,boolean)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: downloadToFile(String filePath, boolean overwrite)
  nameWithType: BlobAsyncClientBase.downloadToFile(String filePath, boolean overwrite)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFile(String filePath, boolean overwrite)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFile*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Downloads the entire blob into a file specified by the path.


    If overwrite is set to false, the file will be created and must not exist, if the file already exists a <xref uid="" data-throw-if-not-resolved="false">FileAlreadyExistsException</xref> will be thrown.


    **Code Samples**


    ```java

    boolean overwrite = false; // Default value
     client.downloadToFile(file, overwrite).subscribe(response -> System.out.println("Completed download to file"));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob
  syntax:
    content: public Mono<BlobProperties> downloadToFile(String filePath, boolean overwrite)
    parameters:
    - id: filePath
      type: java.lang.String
      description: A <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref> representing the filePath where the downloaded data will be written.
    - id: overwrite
      type: boolean
      description: Whether or not to overwrite the file, should the file exist.
    return:
      type: reactor.core.publisher.Mono<com.azure.storage.blob.models.BlobProperties>
      description: A reactive response containing the blob properties and metadata.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean)
  id: downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean rangeGetContentMd5)
  nameWithType: BlobAsyncClientBase.downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean rangeGetContentMd5)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean rangeGetContentMd5)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFileWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Downloads the entire blob into a file specified by the path.\n\nThe file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\">FileAlreadyExistsException</xref> will be thrown.\n\n**Code Samples**\n\n```java\nBlobRange range = new BlobRange(1024, 2048L);\n DownloadRetryOptions options = new DownloadRetryOptions().setMaxRetryRequests(5);\n \n client.downloadToFileWithResponse(file, range, null, options, null, false)\n     .subscribe(response -> System.out.println(\"Completed download to file\"));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob"
  syntax:
    content: public Mono<Response<BlobProperties>> downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean rangeGetContentMd5)
    parameters:
    - id: filePath
      type: java.lang.String
      description: A <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref> representing the filePath where the downloaded data will be written.
    - id: range
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: parallelTransferOptions
      type: com.azure.storage.blob.models.ParallelTransferOptions
      description: >-
        <xref uid="com.azure.storage.blob.models.ParallelTransferOptions" data-throw-if-not-resolved="false">ParallelTransferOptions</xref> to use to download to file. Number of parallel
         transfers parameter is ignored.
    - id: options
      type: com.azure.storage.blob.models.DownloadRetryOptions
      description: <xref uid="com.azure.storage.blob.models.DownloadRetryOptions" data-throw-if-not-resolved="false">DownloadRetryOptions</xref>
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: rangeGetContentMd5
      type: boolean
      description: Whether the contentMD5 for the specified blob range should be returned.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.storage.blob.models.BlobProperties>>
      description: A reactive response containing the blob properties and metadata.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>)
  id: downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Set<OpenOption> openOptions)
  nameWithType: BlobAsyncClientBase.downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Set<OpenOption> openOptions)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Set<OpenOption> openOptions)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFileWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Downloads the entire blob into a file specified by the path.\n\nBy default the file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\">FileAlreadyExistsException</xref> will be thrown. To override this behavior, provide appropriate <xref uid=\"java.nio.file.OpenOption\" data-throw-if-not-resolved=\"false\">OpenOptions</xref>\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(1024, 2048L);\n DownloadRetryOptions downloadRetryOptions = new DownloadRetryOptions().setMaxRetryRequests(5);\n Set<OpenOption> openOptions = new HashSet<>(Arrays.asList(StandardOpenOption.CREATE_NEW,\n     StandardOpenOption.WRITE, StandardOpenOption.READ)); // Default options\n \n client.downloadToFileWithResponse(file, blobRange, null, downloadRetryOptions, null, false, openOptions)\n     .subscribe(response -> System.out.println(\"Completed download to file\"));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob"
  syntax:
    content: public Mono<Response<BlobProperties>> downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Set<OpenOption> openOptions)
    parameters:
    - id: filePath
      type: java.lang.String
      description: A <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref> representing the filePath where the downloaded data will be written.
    - id: range
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: parallelTransferOptions
      type: com.azure.storage.blob.models.ParallelTransferOptions
      description: >-
        <xref uid="com.azure.storage.blob.models.ParallelTransferOptions" data-throw-if-not-resolved="false">ParallelTransferOptions</xref> to use to download to file. Number of parallel
         transfers parameter is ignored.
    - id: options
      type: com.azure.storage.blob.models.DownloadRetryOptions
      description: <xref uid="com.azure.storage.blob.models.DownloadRetryOptions" data-throw-if-not-resolved="false">DownloadRetryOptions</xref>
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: rangeGetContentMd5
      type: boolean
      description: Whether the contentMD5 for the specified blob range should be returned.
    - id: openOptions
      type: java.util.Set<java.nio.file.OpenOption>
      description: <xref uid="java.nio.file.OpenOption" data-throw-if-not-resolved="false">OpenOptions</xref> to use to configure how to open or create the file.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.storage.blob.models.BlobProperties>>
      description: A reactive response containing the blob properties and metadata.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadWithResponse(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean)
  id: downloadWithResponse(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: downloadWithResponse(BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5)
  nameWithType: BlobAsyncClientBase.downloadWithResponse(BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadWithResponse(BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Reads a range of bytes from a blob. Uploading data must be done from the <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\">BlockBlobClient</xref>, <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\">PageBlobClient</xref>, or <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\">AppendBlobClient</xref>.\n\n**Code Samples**\n\n```java\nBlobRange range = new BlobRange(1024, (long) 2048);\n DownloadRetryOptions options = new DownloadRetryOptions().setMaxRetryRequests(5);\n \n client.downloadWithResponse(range, options, null, false).subscribe(response -> {\n     ByteArrayOutputStream downloadData = new ByteArrayOutputStream();\n     response.getValue().subscribe(piece -> {\n         try {\n             downloadData.write(piece.array());\n         } catch (IOException ex) {\n             throw new UncheckedIOException(ex);\n         }\n     });\n });\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob"
  syntax:
    content: public Mono<BlobDownloadAsyncResponse> downloadWithResponse(BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5)
    parameters:
    - id: range
      type: com.azure.storage.blob.models.BlobRange
      description: <xref uid="com.azure.storage.blob.models.BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    - id: options
      type: com.azure.storage.blob.models.DownloadRetryOptions
      description: <xref uid="com.azure.storage.blob.models.DownloadRetryOptions" data-throw-if-not-resolved="false">DownloadRetryOptions</xref>
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    - id: getRangeContentMd5
      type: boolean
      description: Whether the contentMD5 for the specified blob range should be returned.
    return:
      type: reactor.core.publisher.Mono<com.azure.storage.blob.models.BlobDownloadAsyncResponse>
      description: A reactive response containing the blob data.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.encryptionScope
  id: encryptionScope
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: encryptionScope
  nameWithType: BlobAsyncClientBase.encryptionScope
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.encryptionScope
  type: Field
  package: com.azure.storage.blob.specialized
  syntax:
    content: protected final EncryptionScope encryptionScope
    return:
      type: com.azure.storage.blob.implementation.models.EncryptionScope
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.exists()
  id: exists()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: exists()
  nameWithType: BlobAsyncClientBase.exists()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.exists()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.exists*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Determines if the blob this client represents exists in the cloud.


    **Code Samples**


    ```java

    client.exists().subscribe(response -> System.out.printf("Exists? %b%n", response));

    ```
  syntax:
    content: public Mono<Boolean> exists()
    return:
      type: reactor.core.publisher.Mono<java.lang.Boolean>
      description: true if the blob exists, false if it doesn't
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.existsWithResponse()
  id: existsWithResponse()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: existsWithResponse()
  nameWithType: BlobAsyncClientBase.existsWithResponse()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.existsWithResponse()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.existsWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Determines if the blob this client represents exists in the cloud.


    **Code Samples**


    ```java

    client.existsWithResponse().subscribe(response -> System.out.printf("Exists? %b%n", response.getValue()));

    ```
  syntax:
    content: public Mono<Response<Boolean>> existsWithResponse()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Boolean>>
      description: true if the blob exists, false if it doesn't
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)
  id: generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues)
  nameWithType: BlobAsyncClientBase.generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.generateSas*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Generates a service SAS for the blob using the specified <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">BlobServiceSasSignatureValues</xref> Note : The client must be authenticated via <xref uid=\"\" data-throw-if-not-resolved=\"false\">StorageSharedKeyCredential</xref>\n\nSee <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">BlobServiceSasSignatureValues</xref> for more information on how to construct a service SAS.\n\n**Code Samples**\n\n```java\nOffsetDateTime expiryTime = OffsetDateTime.now().plusDays(1);\n BlobSasPermission permission = new BlobSasPermission().setReadPermission(true);\n \n BlobServiceSasSignatureValues values = new BlobServiceSasSignatureValues(expiryTime, permission)\n     .setStartTime(OffsetDateTime.now());\n \n client.generateSas(values); // Client must be authenticated via StorageSharedKeyCredential\n```"
  syntax:
    content: public String generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues)
    parameters:
    - id: blobServiceSasSignatureValues
      type: com.azure.storage.blob.sas.BlobServiceSasSignatureValues
      description: <xref uid="com.azure.storage.blob.sas.BlobServiceSasSignatureValues" data-throw-if-not-resolved="false">BlobServiceSasSignatureValues</xref>
    return:
      type: java.lang.String
      description: A <code>String</code> representing all SAS query parameters.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)
  id: generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey)
  nameWithType: BlobAsyncClientBase.generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.generateUserDelegationSas*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Generates a user delegation SAS for the blob using the specified <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">BlobServiceSasSignatureValues</xref>.\n\nSee <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">BlobServiceSasSignatureValues</xref> for more information on how to construct a user delegation SAS.\n\n**Code Samples**\n\n```java\nOffsetDateTime myExpiryTime = OffsetDateTime.now().plusDays(1);\n BlobSasPermission myPermission = new BlobSasPermission().setReadPermission(true);\n \n BlobServiceSasSignatureValues myValues = new BlobServiceSasSignatureValues(expiryTime, permission)\n     .setStartTime(OffsetDateTime.now());\n \n client.generateUserDelegationSas(values, userDelegationKey);\n```"
  syntax:
    content: public String generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey)
    parameters:
    - id: blobServiceSasSignatureValues
      type: com.azure.storage.blob.sas.BlobServiceSasSignatureValues
      description: <xref uid="com.azure.storage.blob.sas.BlobServiceSasSignatureValues" data-throw-if-not-resolved="false">BlobServiceSasSignatureValues</xref>
    - id: userDelegationKey
      type: com.azure.storage.blob.models.UserDelegationKey
      description: A <xref uid="com.azure.storage.blob.models.UserDelegationKey" data-throw-if-not-resolved="false">UserDelegationKey</xref> object used to sign the SAS values.
    return:
      type: java.lang.String
      description: A <code>String</code> representing all SAS query parameters.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountInfo()
  id: getAccountInfo()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getAccountInfo()
  nameWithType: BlobAsyncClientBase.getAccountInfo()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountInfo()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountInfo*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Returns the sku name and account kind for the account.


    **Code Samples**


    ```java

    client.getAccountInfo().subscribe(response -> System.out.printf("Account Kind: %s, SKU: %s%n",
         response.getAccountKind(), response.getSkuName()));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information
  syntax:
    content: public Mono<StorageAccountInfo> getAccountInfo()
    return:
      type: reactor.core.publisher.Mono<com.azure.storage.blob.models.StorageAccountInfo>
      description: a reactor response containing the sku name and account kind.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountInfoWithResponse()
  id: getAccountInfoWithResponse()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getAccountInfoWithResponse()
  nameWithType: BlobAsyncClientBase.getAccountInfoWithResponse()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountInfoWithResponse()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountInfoWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Returns the sku name and account kind for the account.


    **Code Samples**


    ```java

    client.getAccountInfoWithResponse().subscribe(response -> System.out.printf("Account Kind: %s, SKU: %s%n",
         response.getValue().getAccountKind(), response.getValue().getSkuName()));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information
  syntax:
    content: public Mono<Response<StorageAccountInfo>> getAccountInfoWithResponse()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.storage.blob.models.StorageAccountInfo>>
      description: a reactor response containing the sku name and account kind.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountName()
  id: getAccountName()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getAccountName()
  nameWithType: BlobAsyncClientBase.getAccountName()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountName()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountName*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Get associated account name.
  syntax:
    content: public String getAccountName()
    return:
      type: java.lang.String
      description: account name associated with this storage resource.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getBlobName()
  id: getBlobName()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getBlobName()
  nameWithType: BlobAsyncClientBase.getBlobName()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getBlobName()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getBlobName*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Decodes and gets the blob name.


    **Code Samples**


    ```java

    String blobName = client.getBlobName();
     System.out.println("The name of the blob is " + blobName);
    ```
  syntax:
    content: public final String getBlobName()
    return:
      type: java.lang.String
      description: The decoded name of the blob.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getBlobUrl()
  id: getBlobUrl()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getBlobUrl()
  nameWithType: BlobAsyncClientBase.getBlobUrl()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getBlobUrl()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getBlobUrl*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the URL of the blob represented by this client.
  syntax:
    content: public String getBlobUrl()
    return:
      type: java.lang.String
      description: the URL.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getContainerName()
  id: getContainerName()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getContainerName()
  nameWithType: BlobAsyncClientBase.getContainerName()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getContainerName()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getContainerName*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Get the container name.


    **Code Samples**


    ```java

    String containerName = client.getContainerName();
     System.out.println("The name of the container is " + containerName);
    ```
  syntax:
    content: public final String getContainerName()
    return:
      type: java.lang.String
      description: The name of the container.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getCustomerProvidedKey()
  id: getCustomerProvidedKey()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getCustomerProvidedKey()
  nameWithType: BlobAsyncClientBase.getCustomerProvidedKey()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getCustomerProvidedKey()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getCustomerProvidedKey*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the <xref uid="com.azure.storage.blob.models.CpkInfo" data-throw-if-not-resolved="false">CpkInfo</xref> used to encrypt this blob's content on the server.
  syntax:
    content: public CpkInfo getCustomerProvidedKey()
    return:
      type: com.azure.storage.blob.models.CpkInfo
      description: the customer provided key used for encryption.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getEncryptionScope()
  id: getEncryptionScope()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getEncryptionScope()
  nameWithType: BlobAsyncClientBase.getEncryptionScope()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getEncryptionScope()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getEncryptionScope*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the `encryption scope` used to encrypt this blob's content on the server.
  syntax:
    content: protected String getEncryptionScope()
    return:
      type: java.lang.String
      description: the encryption scope used for encryption.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getHttpPipeline()
  id: getHttpPipeline()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getHttpPipeline()
  nameWithType: BlobAsyncClientBase.getHttpPipeline()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getHttpPipeline()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getHttpPipeline*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref> powering this client.
  syntax:
    content: public HttpPipeline getHttpPipeline()
    return:
      type: com.azure.core.http.HttpPipeline
      description: The pipeline.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getProperties()
  id: getProperties()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getProperties()
  nameWithType: BlobAsyncClientBase.getProperties()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getProperties()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getProperties*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Returns the blob's metadata and properties.


    **Code Samples**


    ```java

    client.getProperties().subscribe(response ->
         System.out.printf("Type: %s, Size: %d%n", response.getBlobType(), response.getBlobSize()));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties
  syntax:
    content: public Mono<BlobProperties> getProperties()
    return:
      type: reactor.core.publisher.Mono<com.azure.storage.blob.models.BlobProperties>
      description: A reactive response containing the blob properties and metadata.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions)
  id: getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getPropertiesWithResponse(BlobRequestConditions requestConditions)
  nameWithType: BlobAsyncClientBase.getPropertiesWithResponse(BlobRequestConditions requestConditions)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getPropertiesWithResponse(BlobRequestConditions requestConditions)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getPropertiesWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Returns the blob's metadata and properties.\n\n**Code Samples**\n\n```java\nBlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n client.getPropertiesWithResponse(requestConditions).subscribe(\n     response -> System.out.printf(\"Type: %s, Size: %d%n\", response.getValue().getBlobType(),\n         response.getValue().getBlobSize()));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties"
  syntax:
    content: public Mono<Response<BlobProperties>> getPropertiesWithResponse(BlobRequestConditions requestConditions)
    parameters:
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.storage.blob.models.BlobProperties>>
      description: A reactive response containing the blob properties and metadata.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getServiceVersion()
  id: getServiceVersion()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getServiceVersion()
  nameWithType: BlobAsyncClientBase.getServiceVersion()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getServiceVersion()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getServiceVersion*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the service version the client is using.
  syntax:
    content: public BlobServiceVersion getServiceVersion()
    return:
      type: com.azure.storage.blob.BlobServiceVersion
      description: the service version the client is using.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotClient(java.lang.String)
  id: getSnapshotClient(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getSnapshotClient(String snapshot)
  nameWithType: BlobAsyncClientBase.getSnapshotClient(String snapshot)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotClient(String snapshot)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotClient*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Creates a new <xref uid="com.azure.storage.blob.specialized.BlobAsyncClientBase" data-throw-if-not-resolved="false">BlobAsyncClientBase</xref> linked to the `snapshot` of this blob resource.
  syntax:
    content: public BlobAsyncClientBase getSnapshotClient(String snapshot)
    parameters:
    - id: snapshot
      type: java.lang.String
      description: the identifier for a specific snapshot of this blob
    return:
      type: com.azure.storage.blob.specialized.BlobAsyncClientBase
      description: a <xref uid="com.azure.storage.blob.specialized.BlobAsyncClientBase" data-throw-if-not-resolved="false">BlobAsyncClientBase</xref> used to interact with the specific snapshot.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotId()
  id: getSnapshotId()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getSnapshotId()
  nameWithType: BlobAsyncClientBase.getSnapshotId()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotId()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotId*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the snapshotId for a blob resource
  syntax:
    content: public String getSnapshotId()
    return:
      type: java.lang.String
      description: A string that represents the snapshotId of the snapshot blob
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getTags()
  id: getTags()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getTags()
  nameWithType: BlobAsyncClientBase.getTags()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getTags()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getTags*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Returns the blob's tags.


    **Code Samples**


    ```java

    client.getTags().subscribe(response ->
         System.out.printf("Num tags: %d%n", response.size()));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-tags
  syntax:
    content: public Mono<Map<String,String>> getTags()
    return:
      type: reactor.core.publisher.Mono<java.util.Map<java.lang.String,java.lang.String>>
      description: A reactive response containing the blob's tags.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getTagsWithResponse(com.azure.storage.blob.options.BlobGetTagsOptions)
  id: getTagsWithResponse(com.azure.storage.blob.options.BlobGetTagsOptions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getTagsWithResponse(BlobGetTagsOptions options)
  nameWithType: BlobAsyncClientBase.getTagsWithResponse(BlobGetTagsOptions options)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getTagsWithResponse(BlobGetTagsOptions options)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getTagsWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Returns the blob's tags.


    **Code Samples**


    ```java

    client.getTagsWithResponse(new BlobGetTagsOptions()).subscribe(response ->
         System.out.printf("Status code: %d. Num tags: %d%n", response.getStatusCode(), response.getValue().size()));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-tags
  syntax:
    content: public Mono<Response<Map<String,String>>> getTagsWithResponse(BlobGetTagsOptions options)
    parameters:
    - id: options
      type: com.azure.storage.blob.options.BlobGetTagsOptions
      description: <xref uid="com.azure.storage.blob.options.BlobGetTagsOptions" data-throw-if-not-resolved="false">BlobGetTagsOptions</xref>
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.Map<java.lang.String,java.lang.String>>>
      description: A reactive response containing the blob's tags.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getVersionClient(java.lang.String)
  id: getVersionClient(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getVersionClient(String versionId)
  nameWithType: BlobAsyncClientBase.getVersionClient(String versionId)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getVersionClient(String versionId)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getVersionClient*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Creates a new <xref uid="com.azure.storage.blob.specialized.BlobAsyncClientBase" data-throw-if-not-resolved="false">BlobAsyncClientBase</xref> linked to the `versionId` of this blob resource.
  syntax:
    content: public BlobAsyncClientBase getVersionClient(String versionId)
    parameters:
    - id: versionId
      type: java.lang.String
      description: >-
        the identifier for a specific version of this blob,
         pass <code>null</code> to interact with the latest blob version.
    return:
      type: com.azure.storage.blob.specialized.BlobAsyncClientBase
      description: a <xref uid="com.azure.storage.blob.specialized.BlobAsyncClientBase" data-throw-if-not-resolved="false">BlobAsyncClientBase</xref> used to interact with the specific version.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getVersionId()
  id: getVersionId()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: getVersionId()
  nameWithType: BlobAsyncClientBase.getVersionId()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getVersionId()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.getVersionId*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Gets the versionId for a blob resource
  syntax:
    content: public String getVersionId()
    return:
      type: java.lang.String
      description: A string that represents the versionId of the snapshot blob
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.isSnapshot()
  id: isSnapshot()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: isSnapshot()
  nameWithType: BlobAsyncClientBase.isSnapshot()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.isSnapshot()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.isSnapshot*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: Determines if a blob is a snapshot
  syntax:
    content: public boolean isSnapshot()
    return:
      type: boolean
      description: A boolean that indicates if a blob is a snapshot
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.query(java.lang.String)
  id: query(java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: query(String expression)
  nameWithType: BlobAsyncClientBase.query(String expression)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.query(String expression)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.query*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Queries the entire blob.


    For more information, see the [Azure Docs][]


    **Code Samples**


    ```java

    ByteArrayOutputStream queryData = new ByteArrayOutputStream();
     String expression = "SELECT * from BlobStorage";
     client.query(expression).subscribe(piece -> {
         try {
             queryData.write(piece.array());
         } catch (IOException ex) {
             throw new UncheckedIOException(ex);
         }
     });
    ```



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/query-blob-contents
  syntax:
    content: public Flux<ByteBuffer> query(String expression)
    parameters:
    - id: expression
      type: java.lang.String
      description: The query expression.
    return:
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: A reactive response containing the queried data.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.queryWithResponse(com.azure.storage.blob.options.BlobQueryOptions)
  id: queryWithResponse(com.azure.storage.blob.options.BlobQueryOptions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: queryWithResponse(BlobQueryOptions queryOptions)
  nameWithType: BlobAsyncClientBase.queryWithResponse(BlobQueryOptions queryOptions)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.queryWithResponse(BlobQueryOptions queryOptions)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.queryWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Queries the entire blob.\n\nFor more information, see the [Azure Docs][]\n\n**Code Samples**\n\n```java\nString expression = \"SELECT * from BlobStorage\";\n BlobQueryJsonSerialization input = new BlobQueryJsonSerialization()\n     .setRecordSeparator('\\n');\n BlobQueryDelimitedSerialization output = new BlobQueryDelimitedSerialization()\n     .setEscapeChar('\\0')\n     .setColumnSeparator(',')\n     .setRecordSeparator('\\n')\n     .setFieldQuote('\\'')\n     .setHeadersPresent(true);\n BlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n Consumer<BlobQueryError> errorConsumer = System.out::println;\n Consumer<BlobQueryProgress> progressConsumer = progress -> System.out.println(\"total blob bytes read: \"\n     + progress.getBytesScanned());\n BlobQueryOptions queryOptions = new BlobQueryOptions(expression)\n     .setInputSerialization(input)\n     .setOutputSerialization(output)\n     .setRequestConditions(requestConditions)\n     .setErrorConsumer(errorConsumer)\n     .setProgressConsumer(progressConsumer);\n \n client.queryWithResponse(queryOptions)\n     .subscribe(response -> {\n         ByteArrayOutputStream queryData = new ByteArrayOutputStream();\n         response.getValue().subscribe(piece -> {\n             try {\n                 queryData.write(piece.array());\n             } catch (IOException ex) {\n                 throw new UncheckedIOException(ex);\n             }\n         });\n     });\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/query-blob-contents"
  syntax:
    content: public Mono<BlobQueryAsyncResponse> queryWithResponse(BlobQueryOptions queryOptions)
    parameters:
    - id: queryOptions
      type: com.azure.storage.blob.options.BlobQueryOptions
      description: <xref uid="com.azure.storage.blob.options.BlobQueryOptions" data-throw-if-not-resolved="false">The query options</xref>.
    return:
      type: reactor.core.publisher.Mono<com.azure.storage.blob.models.BlobQueryAsyncResponse>
      description: A reactive response containing the queried data.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.serviceVersion
  id: serviceVersion
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: serviceVersion
  nameWithType: BlobAsyncClientBase.serviceVersion
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.serviceVersion
  type: Field
  package: com.azure.storage.blob.specialized
  syntax:
    content: protected final BlobServiceVersion serviceVersion
    return:
      type: com.azure.storage.blob.BlobServiceVersion
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)
  id: setAccessTier(com.azure.storage.blob.models.AccessTier)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: setAccessTier(AccessTier tier)
  nameWithType: BlobAsyncClientBase.setAccessTier(AccessTier tier)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTier(AccessTier tier)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTier*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag.


    **Code Samples**


    ```java

    client.setAccessTier(AccessTier.HOT);

    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier
  syntax:
    content: public Mono<Void> setAccessTier(AccessTier tier)
    parameters:
    - id: tier
      type: com.azure.storage.blob.models.AccessTier
      description: The new tier for the blob.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response signalling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String)
  id: setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId)
  nameWithType: BlobAsyncClientBase.setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag.


    **Code Samples**


    ```java

    client.setAccessTierWithResponse(AccessTier.HOT, RehydratePriority.STANDARD, leaseId)
         .subscribe(response -> System.out.printf("Set tier completed with status code %d%n",
             response.getStatusCode()));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier
  syntax:
    content: public Mono<Response<Void>> setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId)
    parameters:
    - id: tier
      type: com.azure.storage.blob.models.AccessTier
      description: The new tier for the blob.
    - id: priority
      type: com.azure.storage.blob.models.RehydratePriority
      description: Optional priority to set for re-hydrating blobs.
    - id: leaseId
      type: java.lang.String
      description: The lease ID the active lease on the blob must match.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A reactive response signalling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse(com.azure.storage.blob.options.BlobSetAccessTierOptions)
  id: setAccessTierWithResponse(com.azure.storage.blob.options.BlobSetAccessTierOptions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: setAccessTierWithResponse(BlobSetAccessTierOptions options)
  nameWithType: BlobAsyncClientBase.setAccessTierWithResponse(BlobSetAccessTierOptions options)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse(BlobSetAccessTierOptions options)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag.


    **Code Samples**


    ```java

    client.setAccessTierWithResponse(new BlobSetAccessTierOptions(AccessTier.HOT)
         .setPriority(RehydratePriority.STANDARD)
         .setLeaseId(leaseId)
         .setTagsConditions(tags))
         .subscribe(response -> System.out.printf("Set tier completed with status code %d%n",
             response.getStatusCode()));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier
  syntax:
    content: public Mono<Response<Void>> setAccessTierWithResponse(BlobSetAccessTierOptions options)
    parameters:
    - id: options
      type: com.azure.storage.blob.options.BlobSetAccessTierOptions
      description: <xref uid="com.azure.storage.blob.options.BlobSetAccessTierOptions" data-throw-if-not-resolved="false">BlobSetAccessTierOptions</xref>
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A reactive response signalling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  id: setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: setHttpHeaders(BlobHttpHeaders headers)
  nameWithType: BlobAsyncClientBase.setHttpHeaders(BlobHttpHeaders headers)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeaders(BlobHttpHeaders headers)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeaders*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Changes a blob's HTTP header properties. if only one HTTP header is updated, the others will all be erased. In order to preserve existing values, they must be passed alongside the header being changed.


    **Code Samples**


    ```java

    client.setHttpHeaders(new BlobHttpHeaders()
         .setContentLanguage("en-US")
         .setContentType("binary"));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties
  syntax:
    content: public Mono<Void> setHttpHeaders(BlobHttpHeaders headers)
    parameters:
    - id: headers
      type: com.azure.storage.blob.models.BlobHttpHeaders
      description: <xref uid="com.azure.storage.blob.models.BlobHttpHeaders" data-throw-if-not-resolved="false">BlobHttpHeaders</xref>
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response signalling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions)
  id: setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: setHttpHeadersWithResponse(BlobHttpHeaders headers, BlobRequestConditions requestConditions)
  nameWithType: BlobAsyncClientBase.setHttpHeadersWithResponse(BlobHttpHeaders headers, BlobRequestConditions requestConditions)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeadersWithResponse(BlobHttpHeaders headers, BlobRequestConditions requestConditions)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeadersWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Changes a blob's HTTP header properties. if only one HTTP header is updated, the others will all be erased. In order to preserve existing values, they must be passed alongside the header being changed.\n\n**Code Samples**\n\n```java\nBlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n client.setHttpHeadersWithResponse(new BlobHttpHeaders()\n     .setContentLanguage(\"en-US\")\n     .setContentType(\"binary\"), requestConditions).subscribe(\n         response ->\n             System.out.printf(\"Set HTTP headers completed with status %d%n\",\n                 response.getStatusCode()));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties"
  syntax:
    content: public Mono<Response<Void>> setHttpHeadersWithResponse(BlobHttpHeaders headers, BlobRequestConditions requestConditions)
    parameters:
    - id: headers
      type: com.azure.storage.blob.models.BlobHttpHeaders
      description: <xref uid="com.azure.storage.blob.models.BlobHttpHeaders" data-throw-if-not-resolved="false">BlobHttpHeaders</xref>
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A reactive response signalling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  id: setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: setMetadata(Map<String,String> metadata)
  nameWithType: BlobAsyncClientBase.setMetadata(Map<String,String> metadata)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadata(Map<String,String> metadata)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadata*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Changes a blob's metadata. The specified metadata in this method will replace existing metadata. If old values must be preserved, they must be downloaded and included in the call to this method.


    **Code Samples**


    ```java

    client.setMetadata(Collections.singletonMap("metadata", "value"));

    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata
  syntax:
    content: public Mono<Void> setMetadata(Map<String,String> metadata)
    parameters:
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the blob.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response signalling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions)
  id: setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: setMetadataWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions)
  nameWithType: BlobAsyncClientBase.setMetadataWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadataWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadataWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: "Changes a blob's metadata. The specified metadata in this method will replace existing metadata. If old values must be preserved, they must be downloaded and included in the call to this method.\n\n**Code Samples**\n\n```java\nBlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n \n client.setMetadataWithResponse(Collections.singletonMap(\"metadata\", \"value\"), requestConditions)\n     .subscribe(response -> System.out.printf(\"Set metadata completed with status %d%n\", response.getStatusCode()));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata"
  syntax:
    content: public Mono<Response<Void>> setMetadataWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions)
    parameters:
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Metadata to associate with the blob.
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A reactive response signalling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setTags(java.util.Map<java.lang.String,java.lang.String>)
  id: setTags(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: setTags(Map<String,String> tags)
  nameWithType: BlobAsyncClientBase.setTags(Map<String,String> tags)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setTags(Map<String,String> tags)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.setTags*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Sets user defined tags. The specified tags in this method will replace existing tags. If old values must be preserved, they must be downloaded and included in the call to this method.


    **Code Samples**


    ```java

    client.setTags(Collections.singletonMap("tag", "value"));

    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tags
  syntax:
    content: public Mono<Void> setTags(Map<String,String> tags)
    parameters:
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Tags to associate with the blob.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response signaling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setTagsWithResponse(com.azure.storage.blob.options.BlobSetTagsOptions)
  id: setTagsWithResponse(com.azure.storage.blob.options.BlobSetTagsOptions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: setTagsWithResponse(BlobSetTagsOptions options)
  nameWithType: BlobAsyncClientBase.setTagsWithResponse(BlobSetTagsOptions options)
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setTagsWithResponse(BlobSetTagsOptions options)
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.setTagsWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Sets user defined tags. The specified tags in this method will replace existing tags. If old values must be preserved, they must be downloaded and included in the call to this method.


    **Code Samples**


    ```java

    client.setTagsWithResponse(new BlobSetTagsOptions(Collections.singletonMap("tag", "value")))
         .subscribe(response -> System.out.printf("Set tags completed with stats %d%n", response.getStatusCode()));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tags
  syntax:
    content: public Mono<Response<Void>> setTagsWithResponse(BlobSetTagsOptions options)
    parameters:
    - id: options
      type: com.azure.storage.blob.options.BlobSetTagsOptions
      description: <xref uid="com.azure.storage.blob.options.BlobSetTagsOptions" data-throw-if-not-resolved="false">BlobSetTagsOptions</xref>
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A reactive response signaling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.undelete()
  id: undelete()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: undelete()
  nameWithType: BlobAsyncClientBase.undelete()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.undelete()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.undelete*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Undelete restores the content and metadata of a soft-deleted blob and/or any associated soft-deleted snapshots.


    **Code Samples**


    ```java

    client.undelete().doOnSuccess(response -> System.out.println("Completed undelete"));

    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob
  syntax:
    content: public Mono<Void> undelete()
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response signalling completion.
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.undeleteWithResponse()
  id: undeleteWithResponse()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.specialized.BlobAsyncClientBase
  langs:
  - java
  name: undeleteWithResponse()
  nameWithType: BlobAsyncClientBase.undeleteWithResponse()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.undeleteWithResponse()
  overload: com.azure.storage.blob.specialized.BlobAsyncClientBase.undeleteWithResponse*
  type: Method
  package: com.azure.storage.blob.specialized
  summary: >-
    Undelete restores the content and metadata of a soft-deleted blob and/or any associated soft-deleted snapshots.


    **Code Samples**


    ```java

    client.undeleteWithResponse()
         .subscribe(response -> System.out.printf("Undelete completed with status %d%n", response.getStatusCode()));
    ```


    For more information, see the [Azure Docs][]



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob
  syntax:
    content: public Mono<Response<Void>> undeleteWithResponse()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A reactive response signalling completion.
references:
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.blob.BlobServiceVersion
  name: BlobServiceVersion
  nameWithType: BlobServiceVersion
  fullName: com.azure.storage.blob.BlobServiceVersion
- uid: com.azure.storage.blob.models.CpkInfo
  name: CpkInfo
  nameWithType: CpkInfo
  fullName: com.azure.storage.blob.models.CpkInfo
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase*
  name: BlobAsyncClientBase
  nameWithType: BlobAsyncClientBase.BlobAsyncClientBase
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.BlobAsyncClientBase
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.implementation.models.EncryptionScope
  name: EncryptionScope
  nameWithType: EncryptionScope
  fullName: com.azure.storage.blob.implementation.models.EncryptionScope
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getEncryptionScope*
  name: getEncryptionScope
  nameWithType: BlobAsyncClientBase.getEncryptionScope
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getEncryptionScope
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotClient*
  name: getSnapshotClient
  nameWithType: BlobAsyncClientBase.getSnapshotClient
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotClient
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getVersionClient*
  name: getVersionClient
  nameWithType: BlobAsyncClientBase.getVersionClient
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getVersionClient
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getBlobUrl*
  name: getBlobUrl
  nameWithType: BlobAsyncClientBase.getBlobUrl
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getBlobUrl
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getContainerName*
  name: getContainerName
  nameWithType: BlobAsyncClientBase.getContainerName
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getContainerName
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getBlobName*
  name: getBlobName
  nameWithType: BlobAsyncClientBase.getBlobName
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getBlobName
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getHttpPipeline*
  name: getHttpPipeline
  nameWithType: BlobAsyncClientBase.getHttpPipeline
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getHttpPipeline
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getCustomerProvidedKey*
  name: getCustomerProvidedKey
  nameWithType: BlobAsyncClientBase.getCustomerProvidedKey
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getCustomerProvidedKey
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountName*
  name: getAccountName
  nameWithType: BlobAsyncClientBase.getAccountName
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountName
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getServiceVersion*
  name: getServiceVersion
  nameWithType: BlobAsyncClientBase.getServiceVersion
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getServiceVersion
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotId*
  name: getSnapshotId
  nameWithType: BlobAsyncClientBase.getSnapshotId
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getSnapshotId
  package: com.azure.storage.blob.specialized
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.isSnapshot*
  name: isSnapshot
  nameWithType: BlobAsyncClientBase.isSnapshot
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.isSnapshot
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getVersionId*
  name: getVersionId
  nameWithType: BlobAsyncClientBase.getVersionId
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getVersionId
  package: com.azure.storage.blob.specialized
- uid: reactor.core.publisher.Mono<java.lang.Boolean>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.exists*
  name: exists
  nameWithType: BlobAsyncClientBase.exists
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.exists
  package: com.azure.storage.blob.specialized
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Boolean>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.existsWithResponse*
  name: existsWithResponse
  nameWithType: BlobAsyncClientBase.existsWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.existsWithResponse
  package: com.azure.storage.blob.specialized
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.util.polling.PollerFlux<com.azure.storage.blob.models.BlobCopyInfo,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.BlobCopyInfo
    name: BlobCopyInfo
    fullName: com.azure.storage.blob.models.BlobCopyInfo
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy*
  name: beginCopy
  nameWithType: BlobAsyncClientBase.beginCopy
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.beginCopy
  package: com.azure.storage.blob.specialized
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.models.AccessTier
  name: AccessTier
  nameWithType: AccessTier
  fullName: com.azure.storage.blob.models.AccessTier
- uid: com.azure.storage.blob.models.RehydratePriority
  name: RehydratePriority
  nameWithType: RehydratePriority
  fullName: com.azure.storage.blob.models.RehydratePriority
- uid: com.azure.core.http.RequestConditions
  spec.java:
  - uid: com.azure.core.http.RequestConditions
    name: RequestConditions
    fullName: com.azure.core.http.RequestConditions
- uid: com.azure.storage.blob.models.BlobRequestConditions
  name: BlobRequestConditions
  nameWithType: BlobRequestConditions
  fullName: com.azure.storage.blob.models.BlobRequestConditions
- uid: com.azure.storage.blob.options.BlobBeginCopyOptions
  name: BlobBeginCopyOptions
  nameWithType: BlobBeginCopyOptions
  fullName: com.azure.storage.blob.options.BlobBeginCopyOptions
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.abortCopyFromUrl*
  name: abortCopyFromUrl
  nameWithType: BlobAsyncClientBase.abortCopyFromUrl
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.abortCopyFromUrl
  package: com.azure.storage.blob.specialized
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.abortCopyFromUrlWithResponse*
  name: abortCopyFromUrlWithResponse
  nameWithType: BlobAsyncClientBase.abortCopyFromUrlWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.abortCopyFromUrlWithResponse
  package: com.azure.storage.blob.specialized
- uid: reactor.core.publisher.Mono<java.lang.String>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrl*
  name: copyFromUrl
  nameWithType: BlobAsyncClientBase.copyFromUrl
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrl
  package: com.azure.storage.blob.specialized
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.String>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrlWithResponse*
  name: copyFromUrlWithResponse
  nameWithType: BlobAsyncClientBase.copyFromUrlWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.copyFromUrlWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.options.BlobCopyFromUrlOptions
  name: BlobCopyFromUrlOptions
  nameWithType: BlobCopyFromUrlOptions
  fullName: com.azure.storage.blob.options.BlobCopyFromUrlOptions
- uid: reactor.core.publisher.Flux<java.nio.ByteBuffer>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.download*
  name: download
  nameWithType: BlobAsyncClientBase.download
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.download
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.BlobRange
  name: BlobRange
  nameWithType: BlobRange
  fullName: com.azure.storage.blob.models.BlobRange
- uid: com.azure.storage.blob.models.DownloadRetryOptions
  name: DownloadRetryOptions
  nameWithType: DownloadRetryOptions
  fullName: com.azure.storage.blob.models.DownloadRetryOptions
- uid: reactor.core.publisher.Mono<com.azure.storage.blob.models.BlobDownloadAsyncResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.BlobDownloadAsyncResponse
    name: BlobDownloadAsyncResponse
    fullName: com.azure.storage.blob.models.BlobDownloadAsyncResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadWithResponse*
  name: downloadWithResponse
  nameWithType: BlobAsyncClientBase.downloadWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadWithResponse
  package: com.azure.storage.blob.specialized
- uid: reactor.core.publisher.Mono<com.azure.storage.blob.models.BlobProperties>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.BlobProperties
    name: BlobProperties
    fullName: com.azure.storage.blob.models.BlobProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFile*
  name: downloadToFile
  nameWithType: BlobAsyncClientBase.downloadToFile
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFile
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.ParallelTransferOptions
  name: ParallelTransferOptions
  nameWithType: ParallelTransferOptions
  fullName: com.azure.storage.blob.models.ParallelTransferOptions
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.storage.blob.models.BlobProperties>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.BlobProperties
    name: BlobProperties
    fullName: com.azure.storage.blob.models.BlobProperties
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFileWithResponse*
  name: downloadToFileWithResponse
  nameWithType: BlobAsyncClientBase.downloadToFileWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.downloadToFileWithResponse
  package: com.azure.storage.blob.specialized
- uid: java.util.Set<java.nio.file.OpenOption>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.nio.file.OpenOption
    name: OpenOption
    fullName: java.nio.file.OpenOption
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.delete*
  name: delete
  nameWithType: BlobAsyncClientBase.delete
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.delete
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.DeleteSnapshotsOptionType
  name: DeleteSnapshotsOptionType
  nameWithType: DeleteSnapshotsOptionType
  fullName: com.azure.storage.blob.models.DeleteSnapshotsOptionType
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: BlobAsyncClientBase.deleteWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.deleteWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getProperties*
  name: getProperties
  nameWithType: BlobAsyncClientBase.getProperties
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getProperties
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getPropertiesWithResponse*
  name: getPropertiesWithResponse
  nameWithType: BlobAsyncClientBase.getPropertiesWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getPropertiesWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.models.BlobHttpHeaders
  name: BlobHttpHeaders
  nameWithType: BlobHttpHeaders
  fullName: com.azure.storage.blob.models.BlobHttpHeaders
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeaders*
  name: setHttpHeaders
  nameWithType: BlobAsyncClientBase.setHttpHeaders
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeaders
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeadersWithResponse*
  name: setHttpHeadersWithResponse
  nameWithType: BlobAsyncClientBase.setHttpHeadersWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setHttpHeadersWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadata*
  name: setMetadata
  nameWithType: BlobAsyncClientBase.setMetadata
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadata
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadataWithResponse*
  name: setMetadataWithResponse
  nameWithType: BlobAsyncClientBase.setMetadataWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadataWithResponse
  package: com.azure.storage.blob.specialized
- uid: reactor.core.publisher.Mono<java.util.Map<java.lang.String,java.lang.String>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getTags*
  name: getTags
  nameWithType: BlobAsyncClientBase.getTags
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getTags
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.options.BlobGetTagsOptions
  name: BlobGetTagsOptions
  nameWithType: BlobGetTagsOptions
  fullName: com.azure.storage.blob.options.BlobGetTagsOptions
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.Map<java.lang.String,java.lang.String>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getTagsWithResponse*
  name: getTagsWithResponse
  nameWithType: BlobAsyncClientBase.getTagsWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getTagsWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setTags*
  name: setTags
  nameWithType: BlobAsyncClientBase.setTags
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setTags
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.options.BlobSetTagsOptions
  name: BlobSetTagsOptions
  nameWithType: BlobSetTagsOptions
  fullName: com.azure.storage.blob.options.BlobSetTagsOptions
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setTagsWithResponse*
  name: setTagsWithResponse
  nameWithType: BlobAsyncClientBase.setTagsWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setTagsWithResponse
  package: com.azure.storage.blob.specialized
- uid: reactor.core.publisher.Mono<com.azure.storage.blob.specialized.BlobAsyncClientBase>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.specialized.BlobAsyncClientBase
    name: BlobAsyncClientBase
    fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.createSnapshot*
  name: createSnapshot
  nameWithType: BlobAsyncClientBase.createSnapshot
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.createSnapshot
  package: com.azure.storage.blob.specialized
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.storage.blob.specialized.BlobAsyncClientBase>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.specialized.BlobAsyncClientBase
    name: BlobAsyncClientBase
    fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.createSnapshotWithResponse*
  name: createSnapshotWithResponse
  nameWithType: BlobAsyncClientBase.createSnapshotWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.createSnapshotWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTier*
  name: setAccessTier
  nameWithType: BlobAsyncClientBase.setAccessTier
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTier
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse*
  name: setAccessTierWithResponse
  nameWithType: BlobAsyncClientBase.setAccessTierWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.setAccessTierWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.options.BlobSetAccessTierOptions
  name: BlobSetAccessTierOptions
  nameWithType: BlobSetAccessTierOptions
  fullName: com.azure.storage.blob.options.BlobSetAccessTierOptions
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.undelete*
  name: undelete
  nameWithType: BlobAsyncClientBase.undelete
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.undelete
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.undeleteWithResponse*
  name: undeleteWithResponse
  nameWithType: BlobAsyncClientBase.undeleteWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.undeleteWithResponse
  package: com.azure.storage.blob.specialized
- uid: reactor.core.publisher.Mono<com.azure.storage.blob.models.StorageAccountInfo>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.StorageAccountInfo
    name: StorageAccountInfo
    fullName: com.azure.storage.blob.models.StorageAccountInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountInfo*
  name: getAccountInfo
  nameWithType: BlobAsyncClientBase.getAccountInfo
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountInfo
  package: com.azure.storage.blob.specialized
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.storage.blob.models.StorageAccountInfo>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.StorageAccountInfo
    name: StorageAccountInfo
    fullName: com.azure.storage.blob.models.StorageAccountInfo
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountInfoWithResponse*
  name: getAccountInfoWithResponse
  nameWithType: BlobAsyncClientBase.getAccountInfoWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.getAccountInfoWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.sas.BlobServiceSasSignatureValues
  name: BlobServiceSasSignatureValues
  nameWithType: BlobServiceSasSignatureValues
  fullName: com.azure.storage.blob.sas.BlobServiceSasSignatureValues
- uid: com.azure.storage.blob.models.UserDelegationKey
  name: UserDelegationKey
  nameWithType: UserDelegationKey
  fullName: com.azure.storage.blob.models.UserDelegationKey
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.generateUserDelegationSas*
  name: generateUserDelegationSas
  nameWithType: BlobAsyncClientBase.generateUserDelegationSas
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.generateUserDelegationSas
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.generateSas*
  name: generateSas
  nameWithType: BlobAsyncClientBase.generateSas
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.generateSas
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.query*
  name: query
  nameWithType: BlobAsyncClientBase.query
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.query
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.options.BlobQueryOptions
  name: BlobQueryOptions
  nameWithType: BlobQueryOptions
  fullName: com.azure.storage.blob.options.BlobQueryOptions
- uid: reactor.core.publisher.Mono<com.azure.storage.blob.models.BlobQueryAsyncResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.storage.blob.models.BlobQueryAsyncResponse
    name: BlobQueryAsyncResponse
    fullName: com.azure.storage.blob.models.BlobQueryAsyncResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.queryWithResponse*
  name: queryWithResponse
  nameWithType: BlobAsyncClientBase.queryWithResponse
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.queryWithResponse
  package: com.azure.storage.blob.specialized
- uid: com.azure.storage.blob.implementation.AzureBlobStorageImpl
  name: AzureBlobStorageImpl
  nameWithType: AzureBlobStorageImpl
  fullName: com.azure.storage.blob.implementation.AzureBlobStorageImpl
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: java.lang.Boolean
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.storage.blob.models.BlobCopyInfo,java.lang.Void
  name: BlobCopyInfo,Void
  nameWithType: BlobCopyInfo,Void
  fullName: com.azure.storage.blob.models.BlobCopyInfo,java.lang.Void
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.storage.blob.models.BlobDownloadAsyncResponse
  name: BlobDownloadAsyncResponse
  nameWithType: BlobDownloadAsyncResponse
  fullName: com.azure.storage.blob.models.BlobDownloadAsyncResponse
- uid: com.azure.storage.blob.models.BlobProperties
  name: BlobProperties
  nameWithType: BlobProperties
  fullName: com.azure.storage.blob.models.BlobProperties
- uid: java.nio.file.OpenOption
  name: OpenOption
  nameWithType: OpenOption
  fullName: java.nio.file.OpenOption
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: com.azure.storage.blob.models.StorageAccountInfo
  name: StorageAccountInfo
  nameWithType: StorageAccountInfo
  fullName: com.azure.storage.blob.models.StorageAccountInfo
- uid: com.azure.storage.blob.models.BlobQueryAsyncResponse
  name: BlobQueryAsyncResponse
  nameWithType: BlobQueryAsyncResponse
  fullName: com.azure.storage.blob.models.BlobQueryAsyncResponse
