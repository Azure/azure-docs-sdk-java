### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.datalake.implementation.models.StorageError"
  id: "StorageError"
  parent: "com.azure.storage.file.datalake.implementation.models"
  children:
  - "com.azure.storage.file.datalake.implementation.models.StorageError.StorageError()"
  - "com.azure.storage.file.datalake.implementation.models.StorageError.getError()"
  - "com.azure.storage.file.datalake.implementation.models.StorageError.setError(com.azure.storage.file.datalake.implementation.models.StorageErrorError)"
  langs:
  - "java"
  name: "StorageError"
  nameWithType: "StorageError"
  fullName: "com.azure.storage.file.datalake.implementation.models.StorageError"
  type: "Class"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "The StorageError model."
  syntax:
    content: "public final class StorageError"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.datalake.implementation.models.StorageError.StorageError()"
  id: "StorageError()"
  parent: "com.azure.storage.file.datalake.implementation.models.StorageError"
  langs:
  - "java"
  name: "StorageError()"
  nameWithType: "StorageError.StorageError()"
  fullName: "com.azure.storage.file.datalake.implementation.models.StorageError.StorageError()"
  overload: "com.azure.storage.file.datalake.implementation.models.StorageError.StorageError*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.implementation.models"
  syntax:
    content: "public StorageError()"
- uid: "com.azure.storage.file.datalake.implementation.models.StorageError.getError()"
  id: "getError()"
  parent: "com.azure.storage.file.datalake.implementation.models.StorageError"
  langs:
  - "java"
  name: "getError()"
  nameWithType: "StorageError.getError()"
  fullName: "com.azure.storage.file.datalake.implementation.models.StorageError.getError()"
  overload: "com.azure.storage.file.datalake.implementation.models.StorageError.getError*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Get the error property: The service error response object."
  syntax:
    content: "public StorageErrorError getError()"
    return:
      type: "com.azure.storage.file.datalake.implementation.models.StorageErrorError"
      description: "the error value."
- uid: "com.azure.storage.file.datalake.implementation.models.StorageError.setError(com.azure.storage.file.datalake.implementation.models.StorageErrorError)"
  id: "setError(com.azure.storage.file.datalake.implementation.models.StorageErrorError)"
  parent: "com.azure.storage.file.datalake.implementation.models.StorageError"
  langs:
  - "java"
  name: "setError(StorageErrorError error)"
  nameWithType: "StorageError.setError(StorageErrorError error)"
  fullName: "com.azure.storage.file.datalake.implementation.models.StorageError.setError(StorageErrorError error)"
  overload: "com.azure.storage.file.datalake.implementation.models.StorageError.setError*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.models"
  summary: "Set the error property: The service error response object."
  syntax:
    content: "public StorageError setError(StorageErrorError error)"
    parameters:
    - id: "error"
      type: "com.azure.storage.file.datalake.implementation.models.StorageErrorError"
      description: "the error value to set."
    return:
      type: "com.azure.storage.file.datalake.implementation.models.StorageError"
      description: "the StorageError object itself."
references:
- uid: "com.azure.storage.file.datalake.implementation.models.StorageError.StorageError*"
  name: "StorageError"
  nameWithType: "StorageError.StorageError"
  fullName: "com.azure.storage.file.datalake.implementation.models.StorageError.StorageError"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "com.azure.storage.file.datalake.implementation.models.StorageErrorError"
  name: "StorageErrorError"
  nameWithType: "StorageErrorError"
  fullName: "com.azure.storage.file.datalake.implementation.models.StorageErrorError"
- uid: "com.azure.storage.file.datalake.implementation.models.StorageError.getError*"
  name: "getError"
  nameWithType: "StorageError.getError"
  fullName: "com.azure.storage.file.datalake.implementation.models.StorageError.getError"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "com.azure.storage.file.datalake.implementation.models.StorageError.setError*"
  name: "setError"
  nameWithType: "StorageError.setError"
  fullName: "com.azure.storage.file.datalake.implementation.models.StorageError.setError"
  package: "com.azure.storage.file.datalake.implementation.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
