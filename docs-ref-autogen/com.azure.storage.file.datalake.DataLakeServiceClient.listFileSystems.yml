### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeServiceClient.listFileSystems*"
fullName: "com.azure.storage.file.datalake.DataLakeServiceClient.listFileSystems"
name: "listFileSystems"
nameWithType: "DataLakeServiceClient.listFileSystems"
members:
- uid: "com.azure.storage.file.datalake.DataLakeServiceClient.listFileSystems()"
  fullName: "com.azure.storage.file.datalake.DataLakeServiceClient.listFileSystems()"
  name: "listFileSystems()"
  nameWithType: "DataLakeServiceClient.listFileSystems()"
  summary: "Returns a lazy loaded list of file systems in this account. The returned <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> can be consumed while new items are automatically retrieved as needed. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nclient.listFileSystems().forEach(fileSystem -> System.out.printf(\"Name: %s%n\", fileSystem.getName()));\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/list-containers2"
  syntax: "public PagedIterable<FileSystemItem> listFileSystems()"
  returns:
    description: "The list of file systems."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.FileSystemItem?alt=com.azure.storage.file.datalake.models.FileSystemItem&text=FileSystemItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.datalake.DataLakeServiceClient.listFileSystems(com.azure.storage.file.datalake.models.ListFileSystemsOptions,java.time.Duration)"
  fullName: "com.azure.storage.file.datalake.DataLakeServiceClient.listFileSystems(ListFileSystemsOptions options, Duration timeout)"
  name: "listFileSystems(ListFileSystemsOptions options, Duration timeout)"
  nameWithType: "DataLakeServiceClient.listFileSystems(ListFileSystemsOptions options, Duration timeout)"
  summary: "Returns a lazy loaded list of file systems in this account. The returned <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> can be consumed while new items are automatically retrieved as needed. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nListFileSystemsOptions options = new ListFileSystemsOptions()\n     .setPrefix(\"filSystemNamePrefixToMatch\")\n     .setDetails(new FileSystemListDetails().setRetrieveMetadata(true));\n \n client.listFileSystems(options, timeout).forEach(fileSystem -> System.out.printf(\"Name: %s%n\",\n     fileSystem.getName()));\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/list-containers2"
  parameters:
  - description: "A <xref uid=\"com.azure.storage.file.datalake.models.ListFileSystemsOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ListFileSystemsOptions\"></xref> which specifies what data should be returned by the service."
    name: "options"
    type: "<xref href=\"com.azure.storage.file.datalake.models.ListFileSystemsOptions?alt=com.azure.storage.file.datalake.models.ListFileSystemsOptions&text=ListFileSystemsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<FileSystemItem> listFileSystems(ListFileSystemsOptions options, Duration timeout)"
  returns:
    description: "The list of file systems."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.FileSystemItem?alt=com.azure.storage.file.datalake.models.FileSystemItem&text=FileSystemItem\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.4.0
