### YamlMime:ManagedReference
items:
- uid: system.fabric._state_replicator
  id: _state_replicator
  parent: system.fabric
  children:
  - system.fabric._state_replicator.getCopyStream()
  - system.fabric._state_replicator.getReplicationStream()
  - system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)
  - system.fabric._state_replicator.updateReplicatorSettings(ReplicatorSettings)
  href: system.fabric._state_replicator.yml
  langs:
  - java
  name: StateReplicator
  nameWithType: StateReplicator
  fullName: system.fabric.StateReplicator
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator.java
    startLine: 11
  package: system.fabric
  syntax:
    content: public interface StateReplicator
- uid: system.fabric._state_replicator.getCopyStream()
  id: getCopyStream()
  parent: system.fabric._state_replicator
  href: system.fabric._state_replicator.yml
  langs:
  - java
  name: getCopyStream()
  nameWithType: StateReplicator.getCopyStream()
  fullName: OperationStream system.fabric.StateReplicator.getCopyStream()
  overload: system.fabric._state_replicator.getCopyStream*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator.java
    startLine: 18
  package: system.fabric
  syntax:
    content: public OperationStream getCopyStream()
    return:
      type: system.fabric._operation_stream
- uid: system.fabric._state_replicator.getReplicationStream()
  id: getReplicationStream()
  parent: system.fabric._state_replicator
  href: system.fabric._state_replicator.yml
  langs:
  - java
  name: getReplicationStream()
  nameWithType: StateReplicator.getReplicationStream()
  fullName: OperationStream system.fabric.StateReplicator.getReplicationStream()
  overload: system.fabric._state_replicator.getReplicationStream*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator.java
    startLine: 20
  package: system.fabric
  syntax:
    content: public OperationStream getReplicationStream()
    return:
      type: system.fabric._operation_stream
- uid: system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)
  id: replicateAsync(OperationData,SequenceNumber,CancellationToken)
  parent: system.fabric._state_replicator
  href: system.fabric._state_replicator.yml
  langs:
  - java
  name: replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)
  nameWithType: StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)
  fullName: CompletableFuture<SequenceNumber> system.fabric.StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)
  overload: system.fabric._state_replicator.replicateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator.java
    startLine: 13
  package: system.fabric
  syntax:
    content: public CompletableFuture<SequenceNumber> replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)
    parameters:
    - id: operationData
      type: system.fabric._operation_data
    - id: sequenceNumber
      type: system.fabric._sequence_number
    - id: cancellationToken
      type: system.fabric._cancellation_token
    return:
      type: 9cdf14d0system.fabric._sequence_numbera08ddfce
- uid: system.fabric._state_replicator.updateReplicatorSettings(ReplicatorSettings)
  id: updateReplicatorSettings(ReplicatorSettings)
  parent: system.fabric._state_replicator
  href: system.fabric._state_replicator.yml
  langs:
  - java
  name: updateReplicatorSettings(ReplicatorSettings settings)
  nameWithType: StateReplicator.updateReplicatorSettings(ReplicatorSettings settings)
  fullName: void system.fabric.StateReplicator.updateReplicatorSettings(ReplicatorSettings settings)
  overload: system.fabric._state_replicator.updateReplicatorSettings*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator.java
    startLine: 22
  package: system.fabric
  syntax:
    content: public void updateReplicatorSettings(ReplicatorSettings settings)
    parameters:
    - id: settings
      type: system.fabric._replicator_settings
references:
- uid: 9cdf14d0system.fabric._sequence_numbera08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: system.fabric._sequence_number
    name: SequenceNumber
    fullName: system.fabric.SequenceNumber
    href: system.fabric._sequence_number.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric._state_replicator.replicateAsync*
  name: replicateAsync
  nameWithType: StateReplicator.replicateAsync
  fullName: CompletableFuture<SequenceNumber> system.fabric.StateReplicator.replicateAsync
  package: system.fabric
- uid: system.fabric._state_replicator.getCopyStream*
  name: getCopyStream
  nameWithType: StateReplicator.getCopyStream
  fullName: OperationStream system.fabric.StateReplicator.getCopyStream
  package: system.fabric
- uid: system.fabric._state_replicator.getReplicationStream*
  name: getReplicationStream
  nameWithType: StateReplicator.getReplicationStream
  fullName: OperationStream system.fabric.StateReplicator.getReplicationStream
  package: system.fabric
- uid: system.fabric._state_replicator.updateReplicatorSettings*
  name: updateReplicatorSettings
  nameWithType: StateReplicator.updateReplicatorSettings
  fullName: void system.fabric.StateReplicator.updateReplicatorSettings
  package: system.fabric
- uid: system.fabric._state_replicator2
  parent: system.fabric
  href: system.fabric._state_replicator2.yml
  name: StateReplicator2
  nameWithType: StateReplicator2
  fullName: system.fabric.StateReplicator2
  type: Interface
  summary: <p>Exposes replication-related functions of the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref> class that are used by <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">system.fabric.StateProvider</xref> to replicate state to ensure high availability. </p>
  syntax:
    content: public interface StateReplicator2
- uid: system.fabric._sequence_number
  parent: system.fabric
  href: system.fabric._sequence_number.yml
  name: SequenceNumber
  nameWithType: SequenceNumber
  fullName: system.fabric.SequenceNumber
  type: Class
  syntax:
    content: public class SequenceNumber
- uid: system.fabric._operation_data
  parent: system.fabric
  href: system.fabric._operation_data.yml
  name: OperationData
  nameWithType: OperationData
  fullName: system.fabric.OperationData
  type: Class
  syntax:
    content: public class OperationData
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
- uid: system.fabric.exception._fabric_exception
  parent: system.fabric.exception
  href: system.fabric.exception._fabric_exception.yml
  name: FabricException
  nameWithType: FabricException
  fullName: system.fabric.exception.FabricException
  type: Class
  syntax:
    content: public class FabricException
- uid: system.fabric._operation_stream
  parent: system.fabric
  href: system.fabric._operation_stream.yml
  name: OperationStream
  nameWithType: OperationStream
  fullName: system.fabric.OperationStream
  type: Interface
  syntax:
    content: public interface OperationStream
- uid: system.fabric._replicator_settings
  parent: system.fabric
  href: system.fabric._replicator_settings.yml
  name: ReplicatorSettings
  nameWithType: ReplicatorSettings
  fullName: system.fabric.ReplicatorSettings
  type: Class
  syntax:
    content: public class ReplicatorSettings
