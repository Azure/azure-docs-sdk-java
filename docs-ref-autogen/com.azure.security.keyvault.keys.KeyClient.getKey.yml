### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyClient.getKey*"
fullName: "com.azure.security.keyvault.keys.KeyClient.getKey"
name: "getKey"
nameWithType: "KeyClient.getKey"
members:
- uid: "com.azure.security.keyvault.keys.KeyClient.getKey(java.lang.String)"
  fullName: "com.azure.security.keyvault.keys.KeyClient.getKey(String name)"
  name: "getKey(String name)"
  nameWithType: "KeyClient.getKey(String name)"
  summary: "Get the public part of the latest version of the specified key from the key vault. The get key operation is applicable to all key types and it requires the `keys/get` permission.\n\n**Code Samples**\n\nGets the latest version of the key in the key vault. Prints out the details of the returned key.\n\n```java\nKeyVaultKey keyWithVersionValue = keyClient.getKey(\"keyName\");\n System.out.printf(\"Key is returned with name %s and id %s %n\", keyWithVersionValue.getName(),\n     keyWithVersionValue.getId());\n```"
  parameters:
  - description: "The name of the key."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KeyVaultKey getKey(String name)"
  returns:
    description: "The requested <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>. The content of the key is null if <code>name</code> is null or empty."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.KeyClient.getKey(java.lang.String,java.lang.String)"
  fullName: "com.azure.security.keyvault.keys.KeyClient.getKey(String name, String version)"
  name: "getKey(String name, String version)"
  nameWithType: "KeyClient.getKey(String name, String version)"
  summary: "Gets the public part of the specified key and key version. The get key operation is applicable to all key types and it requires the `keys/get` permission.\n\n**Code Samples**\n\nGets a specific version of the key in the key vault. Prints out the details of the returned key.\n\n```java\nString keyVersion = \"6A385B124DEF4096AF1361A85B16C204\";\n KeyVaultKey keyWithVersion = keyClient.getKey(\"keyName\", keyVersion);\n System.out.printf(\"Key is returned with name %s and id %s %n\", keyWithVersion.getName(),\n     keyWithVersion.getId());\n```"
  parameters:
  - description: "The name of the key, cannot be null"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The version of the key to retrieve. If this is an empty String or null, this call is\n     equivalent to calling <xref uid=\"com.azure.security.keyvault.keys.KeyClient.getKey(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyClient#getKey(String)\"></xref>, with the latest version being retrieved."
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public KeyVaultKey getKey(String name, String version)"
  returns:
    description: "The requested <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>. The content of the key is null if\n both <code>name</code> and <code>version</code> are null or empty."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.2.3
