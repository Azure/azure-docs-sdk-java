### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluentcore.utils.PagedConverter.mapPage*"
fullName: "com.azure.resourcemanager.resources.fluentcore.utils.PagedConverter.<T,S>mapPage"
name: "<T,S>mapPage"
nameWithType: "PagedConverter.<T,S>mapPage"
members:
- uid: "com.azure.resourcemanager.resources.fluentcore.utils.PagedConverter.<T,S>mapPage(com.azure.core.http.rest.PagedFlux<T>,java.util.function.Function<T,S>)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.utils.PagedConverter.<T,S>mapPage(PagedFlux<T> pagedFlux, Function<T,S> mapper)"
  name: "<T,S>mapPage(PagedFlux<T> pagedFlux, Function<T,S> mapper)"
  nameWithType: "PagedConverter.<T,S>mapPage(PagedFlux<T> pagedFlux, Function<T,S> mapper)"
  summary: "Applies map transform to elements of PagedFlux."
  parameters:
  - description: "the input of PagedFlux."
    name: "pagedFlux"
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the map transform of element T to element S."
    name: "mapper"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static PagedFlux<S> <T,S>mapPage(PagedFlux<T> pagedFlux, Function<T,S> mapper)"
  returns:
    description: "the PagedFlux with elements in PagedResponse transformed."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.utils.PagedConverter.<T,S>mapPage(com.azure.core.http.rest.PagedIterable<T>,java.util.function.Function<T,S>)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.utils.PagedConverter.<T,S>mapPage(PagedIterable<T> pageIterable, Function<T,S> mapper)"
  name: "<T,S>mapPage(PagedIterable<T> pageIterable, Function<T,S> mapper)"
  nameWithType: "PagedConverter.<T,S>mapPage(PagedIterable<T> pageIterable, Function<T,S> mapper)"
  summary: "Applies map transform to elements of PagedIterable."
  parameters:
  - description: "the input of PagedIterable."
    name: "pageIterable"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the map transform of element T to element S."
    name: "mapper"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static PagedIterable<S> <T,S>mapPage(PagedIterable<T> pageIterable, Function<T,S> mapper)"
  returns:
    description: "the PagedFlux with elements in PagedResponse transformed."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.utils"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.3.0
