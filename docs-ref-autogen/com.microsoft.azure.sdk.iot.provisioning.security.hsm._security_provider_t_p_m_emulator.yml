### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator
  id: _security_provider_t_p_m_emulator
  parent: com.microsoft.azure.sdk.iot.provisioning.security.hsm
  children:
  - com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.activateIdentityKey(byte [])
  - com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.getEndorsementKey()
  - com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.getRegistrationId()
  - com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.getStorageRootKey()
  - com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.SecurityProviderTPMEmulator()
  - com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.SecurityProviderTPMEmulator(String)
  - com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.SecurityProviderTPMEmulator(String,String)
  - com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.shutDown()
  - com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.signWithIdentity(byte [])
  href: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.yml
  langs:
  - java
  name: SecurityProviderTPMEmulator
  nameWithType: SecurityProviderTPMEmulator
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator
  type: Class
  source:
    remote: &o0
      path: provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulator.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulator.java
    startLine: 19
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
  syntax:
    content: public class SecurityProviderTPMEmulator extends SecurityProviderTpm
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.sdk.iot.provisioning.security._security_provider
  - com.microsoft.azure.sdk.iot.provisioning.security._security_provider_tpm
  inheritedMembers:
  - com.microsoft.azure.sdk.iot.provisioning.security._security_provider_tpm.getSSLContext()
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.activateIdentityKey(byte [])
  id: activateIdentityKey(byte [])
  parent: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator
  href: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.yml
  langs:
  - java
  name: activateIdentityKey(byte[] key)
  nameWithType: SecurityProviderTPMEmulator.activateIdentityKey(byte[] key)
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.activateIdentityKey(byte[] key)
  overload: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.activateIdentityKey*
  type: Method
  source:
    remote: *o0
    path: provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulator.java
    startLine: 268
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
  summary: "<p>Activates the Identity with the nonce provided from the service </p>"
  syntax:
    content: public byte [] activateIdentityKey(byte[] key)
    parameters:
    - id: key
      type: ccd9418d
      description: <p>Key for activating the TPM </p>
    return:
      type: ccd9418d
      description: >-
        <p>

          <code>nullÂ 

            </code> value is returned. Place holder for eventual returns. </p>
  exceptions:
  - type: f44c259f
    description: <p>If activation was not successful. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.getEndorsementKey()
  id: getEndorsementKey()
  parent: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator
  href: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.yml
  langs:
  - java
  name: getEndorsementKey()
  nameWithType: SecurityProviderTPMEmulator.getEndorsementKey()
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.getEndorsementKey()
  overload: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.getEndorsementKey*
  type: Method
  source:
    remote: *o0
    path: provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulator.java
    startLine: 449
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
  summary: "<p>Getter for extracting EndorsementKey from TPM </p>"
  syntax:
    content: public byte [] getEndorsementKey()
    return:
      type: ccd9418d
      description: <p>The Endorsement Key from TPM </p>
  exceptions:
  - type: f44c259f
    description: <p>If endorsement key could not be extracted. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.getRegistrationId()
  id: getRegistrationId()
  parent: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator
  href: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.yml
  langs:
  - java
  name: getRegistrationId()
  nameWithType: SecurityProviderTPMEmulator.getRegistrationId()
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.getRegistrationId()
  overload: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.getRegistrationId*
  type: Method
  source:
    remote: *o0
    path: provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulator.java
    startLine: 169
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
  summary: "<p>Getter for the Registration ID if it was provided. Default is returned otherwise. </p>"
  syntax:
    content: public String getRegistrationId()
    return:
      type: "26831127"
      description: <p>The registration ID tied to this registration instance </p>
  exceptions:
  - type: f44c259f
    description: <p>If registration ID could not be extracted </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.getStorageRootKey()
  id: getStorageRootKey()
  parent: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator
  href: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.yml
  langs:
  - java
  name: getStorageRootKey()
  nameWithType: SecurityProviderTPMEmulator.getStorageRootKey()
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.getStorageRootKey()
  overload: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.getStorageRootKey*
  type: Method
  source:
    remote: *o0
    path: provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulator.java
    startLine: 461
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
  summary: "<p>Getter for extracting StorageRootKey from TPM </p>"
  syntax:
    content: public byte [] getStorageRootKey()
    return:
      type: ccd9418d
      description: <p>The StorageRootKey from TPM </p>
  exceptions:
  - type: f44c259f
    description: <p>If StorageRootKey could not be extracted. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.SecurityProviderTPMEmulator()
  id: SecurityProviderTPMEmulator()
  parent: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator
  href: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.yml
  langs:
  - java
  name: SecurityProviderTPMEmulator()
  nameWithType: SecurityProviderTPMEmulator.SecurityProviderTPMEmulator()
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.SecurityProviderTPMEmulator()
  overload: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.SecurityProviderTPMEmulator*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulator.java
    startLine: 60
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
  summary: "<p>Constructor for creating a Security Provider on TPM Simulator </p>"
  syntax:
    content: public SecurityProviderTPMEmulator()
  exceptions:
  - type: f44c259f
    description: <p>If the constructor could not start the TPM </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.SecurityProviderTPMEmulator(String)
  id: SecurityProviderTPMEmulator(String)
  parent: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator
  href: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.yml
  langs:
  - java
  name: SecurityProviderTPMEmulator(String registrationId)
  nameWithType: SecurityProviderTPMEmulator.SecurityProviderTPMEmulator(String registrationId)
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.SecurityProviderTPMEmulator(String registrationId)
  overload: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.SecurityProviderTPMEmulator*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulator.java
    startLine: 77
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
  summary: "<p>Constructor for creating a Security Provider on TPM Simulator with the supplied Registration ID </p>"
  syntax:
    content: public SecurityProviderTPMEmulator(String registrationId)
    parameters:
    - id: registrationId
      type: "26831127"
      description: >-
        <p>A non<code>nullÂ 

            </code> or empty value tied to this registration </p>
  exceptions:
  - type: f44c259f
    description: <p>If the constructor could not start the TPM </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.SecurityProviderTPMEmulator(String,String)
  id: SecurityProviderTPMEmulator(String,String)
  parent: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator
  href: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.yml
  langs:
  - java
  name: SecurityProviderTPMEmulator(String registrationId, String ipAddressSimulator)
  nameWithType: SecurityProviderTPMEmulator.SecurityProviderTPMEmulator(String registrationId, String ipAddressSimulator)
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.SecurityProviderTPMEmulator(String registrationId, String ipAddressSimulator)
  overload: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.SecurityProviderTPMEmulator*
  type: Constructor
  source:
    remote: *o0
    path: provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulator.java
    startLine: 107
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
  summary: "<p>Constructor for creating a Security Provider on TPM Simulator with the supplied Registration ID and ip address of the the remote where TPM simulator is running </p>"
  syntax:
    content: public SecurityProviderTPMEmulator(String registrationId, String ipAddressSimulator)
    parameters:
    - id: registrationId
      type: "26831127"
      description: >-
        <p>A non<code>nullÂ 

            </code> or empty value tied to this registration </p>
    - id: ipAddressSimulator
      type: "26831127"
      description: >-
        <p>A non<code>nullÂ 

            </code> or empty value of the ip address on which simulator is running. </p>
  exceptions:
  - type: f44c259f
    description: <p>If the constructor could not start the TPM </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.shutDown()
  id: shutDown()
  parent: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator
  href: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.yml
  langs:
  - java
  name: shutDown()
  nameWithType: SecurityProviderTPMEmulator.shutDown()
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.shutDown()
  overload: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.shutDown*
  type: Method
  source:
    remote: *o0
    path: provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulator.java
    startLine: 148
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
  summary: "<p>Closes the simulator if it were running already </p>"
  syntax:
    content: public void shutDown()
  exceptions:
  - type: f44c259f
    description: <p>if simulator could not be closed for any reason. </p>
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.signWithIdentity(byte [])
  id: signWithIdentity(byte [])
  parent: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator
  href: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.yml
  langs:
  - java
  name: signWithIdentity(byte[] deviceIdData)
  nameWithType: SecurityProviderTPMEmulator.signWithIdentity(byte[] deviceIdData)
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.signWithIdentity(byte[] deviceIdData)
  overload: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.signWithIdentity*
  type: Method
  source:
    remote: *o0
    path: provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulator.java
    startLine: 423
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
  summary: "<p>This method signs the TPM with the provided device ID </p>"
  syntax:
    content: public byte [] signWithIdentity(byte[] deviceIdData)
    parameters:
    - id: deviceIdData
      type: ccd9418d
      description: >-
        <p>A non<code>nullÂ 

            </code> or empty value for the device ID </p>
    return:
      type: ccd9418d
      description: <p>The signature after signing data. </p>
  exceptions:
  - type: f44c259f
    description: <p>If signing was not successful </p>
references:
- uid: f44c259f
  spec.java:
  - name: SecurityProviderException
    fullName: SecurityProviderException
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.SecurityProviderTPMEmulator*
  name: SecurityProviderTPMEmulator
  nameWithType: SecurityProviderTPMEmulator.SecurityProviderTPMEmulator
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.SecurityProviderTPMEmulator
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.shutDown*
  name: shutDown
  nameWithType: SecurityProviderTPMEmulator.shutDown
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.shutDown
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.getRegistrationId*
  name: getRegistrationId
  nameWithType: SecurityProviderTPMEmulator.getRegistrationId
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.getRegistrationId
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.activateIdentityKey*
  name: activateIdentityKey
  nameWithType: SecurityProviderTPMEmulator.activateIdentityKey
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.activateIdentityKey
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.signWithIdentity*
  name: signWithIdentity
  nameWithType: SecurityProviderTPMEmulator.signWithIdentity
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.signWithIdentity
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.getEndorsementKey*
  name: getEndorsementKey
  nameWithType: SecurityProviderTPMEmulator.getEndorsementKey
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.getEndorsementKey
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
- uid: com.microsoft.azure.sdk.iot.provisioning.security.hsm._security_provider_t_p_m_emulator.getStorageRootKey*
  name: getStorageRootKey
  nameWithType: SecurityProviderTPMEmulator.getStorageRootKey
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.getStorageRootKey
  package: com.microsoft.azure.sdk.iot.provisioning.security.hsm
- uid: com.microsoft.azure.sdk.iot.provisioning.security._security_provider_tpm.getSSLContext()
  parent: com.microsoft.azure.sdk.iot.provisioning.security._security_provider_tpm
  href: com.microsoft.azure.sdk.iot.provisioning.security._security_provider_tpm.yml
  name: getSSLContext()
  nameWithType: SecurityProviderTpm.getSSLContext()
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderTpm.getSSLContext()
  type: Method
  syntax:
    content: public SSLContext getSSLContext()
    return:
      type: 13e89c07
- uid: com.microsoft.azure.sdk.iot.provisioning.security._security_provider_tpm
  parent: com.microsoft.azure.sdk.iot.provisioning.security
  href: com.microsoft.azure.sdk.iot.provisioning.security._security_provider_tpm.yml
  name: SecurityProviderTpm
  nameWithType: SecurityProviderTpm
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderTpm
  type: Class
  syntax:
    content: public class SecurityProviderTpm extends SecurityProvider
- uid: com.microsoft.azure.sdk.iot.provisioning.security.exceptions._security_provider_exception
  parent: com.microsoft.azure.sdk.iot.provisioning.security.exceptions
  href: com.microsoft.azure.sdk.iot.provisioning.security.exceptions._security_provider_exception.yml
  name: SecurityProviderException
  nameWithType: SecurityProviderException
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.exceptions.SecurityProviderException
  type: Class
  syntax:
    content: public class SecurityProviderException
