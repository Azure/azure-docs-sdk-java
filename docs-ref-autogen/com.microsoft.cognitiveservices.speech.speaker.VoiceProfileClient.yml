### YamlMime:JavaType
constructors:
- fullName: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.VoiceProfileClient(SpeechConfig speechConfig)
  name: VoiceProfileClient(SpeechConfig speechConfig)
  nameWithType: VoiceProfileClient.VoiceProfileClient(SpeechConfig speechConfig)
  parameters:
  - description: <p>speech configuration. </p>
    name: speechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new instance of a voice profile client. </p>
  syntax: public VoiceProfileClient(SpeechConfig speechConfig)
  uid: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.VoiceProfileClient(SpeechConfig)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.close()
  name: close()
  nameWithType: VoiceProfileClient.close()
  summary: '<p>Dispose of associated resources. Note: close() must be called in order to release underlying resources held by the object. </p>'
  syntax: public void close()
  uid: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.close()
- fullName: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.createProfileAsync(final VoiceProfileType voiceProfileType, final String locale)
  name: createProfileAsync(final VoiceProfileType voiceProfileType, final String locale)
  nameWithType: VoiceProfileClient.createProfileAsync(final VoiceProfileType voiceProfileType, final String locale)
  parameters:
  - description: <p>A voice profile type. </p>
    name: voiceProfileType
    type: final <xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfileType?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfileType&text=VoiceProfileType" data-throw-if-not-resolved="False"/>
  - description: <p>a locale, e.g "en-us". </p>
    name: locale
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An asynchronous operation representing the result of creating a voice profile. </p>
    type: Future&lt;<xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfile?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfile&text=VoiceProfile" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Creates a voice profile as an asynchronous operation. </p>
  syntax: public Future<VoiceProfile> createProfileAsync(final VoiceProfileType voiceProfileType, final String locale)
  uid: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.createProfileAsync(final VoiceProfileType,final String)
- fullName: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.deleteProfileAsync(final VoiceProfile voiceProfile)
  name: deleteProfileAsync(final VoiceProfile voiceProfile)
  nameWithType: VoiceProfileClient.deleteProfileAsync(final VoiceProfile voiceProfile)
  parameters:
  - description: <p>A voice profile. </p>
    name: voiceProfile
    type: final <xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfile?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfile&text=VoiceProfile" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An asynchronous operation representing the result of deleting a voice profile. </p>
    type: Future&lt;<xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfileResult?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfileResult&text=VoiceProfileResult" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Delete a voice profile asynchronously. </p>
  syntax: public Future<VoiceProfileResult> deleteProfileAsync(final VoiceProfile voiceProfile)
  uid: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.deleteProfileAsync(final VoiceProfile)
- fullName: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.enrollProfileAsync(final VoiceProfile voiceProfile, final AudioConfig audioConfig)
  name: enrollProfileAsync(final VoiceProfile voiceProfile, final AudioConfig audioConfig)
  nameWithType: VoiceProfileClient.enrollProfileAsync(final VoiceProfile voiceProfile, final AudioConfig audioConfig)
  parameters:
  - description: <p>A voice profile. </p>
    name: voiceProfile
    type: final <xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfile?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfile&text=VoiceProfile" data-throw-if-not-resolved="False"/>
  - description: <p>An audio config. </p>
    name: audioConfig
    type: final <xref href="com.microsoft.cognitiveservices.speech.audio.AudioConfig?alt=com.microsoft.cognitiveservices.speech.audio.AudioConfig&text=AudioConfig" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An asynchronous operation representing the result of enrollment of a voice profile. </p>
    type: Future&lt;<xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfileEnrollmentResult?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfileEnrollmentResult&text=VoiceProfileEnrollmentResult" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Enroll a voice profile asynchronously. </p>
  syntax: public Future<VoiceProfileEnrollmentResult> enrollProfileAsync(final VoiceProfile voiceProfile, final AudioConfig audioConfig)
  uid: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.enrollProfileAsync(final VoiceProfile,final AudioConfig)
- fullName: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.getActivationPhrasesAsync(final VoiceProfileType voiceProfileType, final String locale)
  name: getActivationPhrasesAsync(final VoiceProfileType voiceProfileType, final String locale)
  nameWithType: VoiceProfileClient.getActivationPhrasesAsync(final VoiceProfileType voiceProfileType, final String locale)
  parameters:
  - description: <p>A voice profile type. </p>
    name: voiceProfileType
    type: final <xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfileType?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfileType&text=VoiceProfileType" data-throw-if-not-resolved="False"/>
  - description: <p>a locale, e.g "en-us". </p>
    name: locale
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An asynchronous operation representing the result of getting activation phrases. </p>
    type: Future&lt;<xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfilePhraseResult?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfilePhraseResult&text=VoiceProfilePhraseResult" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Get valid activation phrases for enrollment. </p>
  syntax: public Future<VoiceProfilePhraseResult> getActivationPhrasesAsync(final VoiceProfileType voiceProfileType, final String locale)
  uid: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.getActivationPhrasesAsync(final VoiceProfileType,final String)
- fullName: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.getAllProfilesAsync(final VoiceProfileType voiceProfileType)
  name: getAllProfilesAsync(final VoiceProfileType voiceProfileType)
  nameWithType: VoiceProfileClient.getAllProfilesAsync(final VoiceProfileType voiceProfileType)
  parameters:
  - description: <p>A voice profile type. </p>
    name: voiceProfileType
    type: final <xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfileType?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfileType&text=VoiceProfileType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An asynchronous operation representing the result of getting all voice profile. </p>
    type: Future&lt;List&lt;<xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfile?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfile&text=VoiceProfile" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: <p>Get all voice profiles as an asynchronous operation. </p>
  syntax: public Future<List<VoiceProfile>> getAllProfilesAsync(final VoiceProfileType voiceProfileType)
  uid: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.getAllProfilesAsync(final VoiceProfileType)
- fullName: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.getProperties()
  name: getProperties()
  nameWithType: VoiceProfileClient.getProperties()
  returns:
    description: <p>The collection of properties and their values defined for VoiceProfileClient. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.PropertyCollection?alt=com.microsoft.cognitiveservices.speech.PropertyCollection&text=PropertyCollection" data-throw-if-not-resolved="False"/>
  summary: <p>The collection of properties and their values defined for VoiceProfileClient. </p>
  syntax: public PropertyCollection getProperties()
  uid: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.getProperties()
- fullName: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.resetProfileAsync(final VoiceProfile voiceProfile)
  name: resetProfileAsync(final VoiceProfile voiceProfile)
  nameWithType: VoiceProfileClient.resetProfileAsync(final VoiceProfile voiceProfile)
  parameters:
  - description: <p>A voice profile. </p>
    name: voiceProfile
    type: final <xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfile?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfile&text=VoiceProfile" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An asynchronous operation representing the result of reset a voice profile. </p>
    type: Future&lt;<xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfileResult?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfileResult&text=VoiceProfileResult" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Reset a voice profile asynchronously. </p>
  syntax: public Future<VoiceProfileResult> resetProfileAsync(final VoiceProfile voiceProfile)
  uid: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.resetProfileAsync(final VoiceProfile)
- fullName: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.retrieveEnrollmentResultAsync(final VoiceProfile voiceProfile)
  name: retrieveEnrollmentResultAsync(final VoiceProfile voiceProfile)
  nameWithType: VoiceProfileClient.retrieveEnrollmentResultAsync(final VoiceProfile voiceProfile)
  parameters:
  - description: <p>A voice profile. </p>
    name: voiceProfile
    type: final <xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfile?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfile&text=VoiceProfile" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An asynchronous operation representing the result of enrollment of a voice profile. </p>
    type: Future&lt;<xref href="com.microsoft.cognitiveservices.speech.speaker.VoiceProfileEnrollmentResult?alt=com.microsoft.cognitiveservices.speech.speaker.VoiceProfileEnrollmentResult&text=VoiceProfileEnrollmentResult" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Retrieve an enrollment result given the Voice Profile. </p>
  syntax: public Future<VoiceProfileEnrollmentResult> retrieveEnrollmentResultAsync(final VoiceProfile voiceProfile)
  uid: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient.retrieveEnrollmentResultAsync(final VoiceProfile)
nameWithType: VoiceProfileClient
syntax: public class VoiceProfileClient
type: class
uid: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient
fullName: com.microsoft.cognitiveservices.speech.speaker.VoiceProfileClient
name: VoiceProfileClient
package: com.microsoft.cognitiveservices.speech.speaker
summary: '<p>A voice profile client performs voice profile management for speaker recognition. Note: close() must be called in order to release underlying resources held by the object. </p>'
metadata: {}
