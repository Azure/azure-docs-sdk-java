### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase
  id: CodeBuilderBase
  parent: microsoft.servicefabric.services.remoting.builder
  children:
  - microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildMethodBodyTypes(Class<?>)
  - microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildMethodDispatcher(Class<?>)
  - microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildProxyGenerator(Class<?>)
  - microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.CodeBuilderBase(CodeBuilderNamesBase)
  - microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getNames()
  - microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodBodyTypes(Class<?>)
  - microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodDispatcher(Class<?>)
  - microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildProxyGenerator(Class<?>)
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.yml
  langs:
  - java
  name: CodeBuilderBase
  nameWithType: CodeBuilderBase
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/CodeBuilderBase.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/CodeBuilderBase.java
    startLine: 8
  package: microsoft.servicefabric.services.remoting.builder
  summary: "<p>Base class from which Actor and Services Code Builder classes extend. </p>"
  syntax:
    content: public class CodeBuilderBase implements CodeBuilder
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.services.remoting.builder.CodeBuilder
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildMethodBodyTypes(Class<?>)
  id: buildMethodBodyTypes(Class<?>)
  parent: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.yml
  langs:
  - java
  name: buildMethodBodyTypes(Class<?> interfaceType)
  nameWithType: CodeBuilderBase.buildMethodBodyTypes(Class<?> interfaceType)
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildMethodBodyTypes(Class<?> interfaceType)
  overload: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildMethodBodyTypes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/CodeBuilderBase.java
    startLine: 74
  package: microsoft.servicefabric.services.remoting.builder
  summary: "<p>Method body types </p>"
  syntax:
    content: protected abstract MethodBodyTypesBuildResult buildMethodBodyTypes(Class<?> interfaceType)
    parameters:
    - id: interfaceType
      type: a19781f8
      description: <p>Interface type. </p>
    return:
      type: "3670e177"
      description: <p>Method body types build result. </p>
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildMethodDispatcher(Class<?>)
  id: buildMethodDispatcher(Class<?>)
  parent: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.yml
  langs:
  - java
  name: buildMethodDispatcher(Class<?> interfaceType)
  nameWithType: CodeBuilderBase.buildMethodDispatcher(Class<?> interfaceType)
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildMethodDispatcher(Class<?> interfaceType)
  overload: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildMethodDispatcher*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/CodeBuilderBase.java
    startLine: 65
  package: microsoft.servicefabric.services.remoting.builder
  summary: "<p>Method dispatcher </p>"
  syntax:
    content: protected abstract MethodDispatcherBuildResult buildMethodDispatcher(Class<?> interfaceType)
    parameters:
    - id: interfaceType
      type: a19781f8
      description: <p>interface type </p>
    return:
      type: 13c86962microsoft.servicefabric.services.remoting.builder.MethodDispatcherBuildResult
      description: <p>Method dispatcher build result. </p>
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildProxyGenerator(Class<?>)
  id: buildProxyGenerator(Class<?>)
  parent: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.yml
  langs:
  - java
  name: buildProxyGenerator(Class<?> interfaceType)
  nameWithType: CodeBuilderBase.buildProxyGenerator(Class<?> interfaceType)
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildProxyGenerator(Class<?> interfaceType)
  overload: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildProxyGenerator*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/CodeBuilderBase.java
    startLine: 83
  package: microsoft.servicefabric.services.remoting.builder
  summary: "<p>Proxy generator. </p>"
  syntax:
    content: protected abstract ProxyGeneratorBuildResult buildProxyGenerator(Class<?> interfaceType)
    parameters:
    - id: interfaceType
      type: a19781f8
      description: <p>Interface type. </p>
    return:
      type: 13c86962microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult
      description: <p>Proxy generator build result. </p>
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.CodeBuilderBase(CodeBuilderNamesBase)
  id: CodeBuilderBase(CodeBuilderNamesBase)
  parent: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.yml
  langs:
  - java
  name: CodeBuilderBase(CodeBuilderNamesBase codeBuilderNames)
  nameWithType: CodeBuilderBase.CodeBuilderBase(CodeBuilderNamesBase codeBuilderNames)
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.CodeBuilderBase(CodeBuilderNamesBase codeBuilderNames)
  overload: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.CodeBuilderBase*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/CodeBuilderBase.java
    startLine: 15
  package: microsoft.servicefabric.services.remoting.builder
  syntax:
    content: protected CodeBuilderBase(CodeBuilderNamesBase codeBuilderNames)
    parameters:
    - id: codeBuilderNames
      type: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getNames()
  id: getNames()
  parent: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.yml
  langs:
  - java
  name: getNames()
  nameWithType: CodeBuilderBase.getNames()
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getNames()
  overload: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getNames*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/CodeBuilderBase.java
    startLine: 24
  package: microsoft.servicefabric.services.remoting.builder
  summary: "<p>Get code builder names. </p>"
  syntax:
    content: public CodeBuilderNames getNames()
    return:
      type: 7a850a33
      description: <p>An object of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CodeBuilderNames"></xref></p>
  overridden: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getNames()
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodBodyTypes(Class<?>)
  id: getOrBuildMethodBodyTypes(Class<?>)
  parent: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.yml
  langs:
  - java
  name: getOrBuildMethodBodyTypes(Class<?> interfaceType)
  nameWithType: CodeBuilderBase.getOrBuildMethodBodyTypes(Class<?> interfaceType)
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodBodyTypes(Class<?> interfaceType)
  overload: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodBodyTypes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/CodeBuilderBase.java
    startLine: 39
  package: microsoft.servicefabric.services.remoting.builder
  summary: "<p>Get or Build method body type. </p>"
  syntax:
    content: public MethodBodyTypesBuildResult getOrBuildMethodBodyTypes(Class<?> interfaceType)
    parameters:
    - id: interfaceType
      type: a19781f8
      description: <p>Interface type. </p>
    return:
      type: f3ddb871
      description: <p>Method body types build result <xref uid="" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.builder.MethodBodyTypesBuildResult"></xref></p>
  overridden: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getOrBuildMethodBodyTypes(Class<?>)
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodDispatcher(Class<?>)
  id: getOrBuildMethodDispatcher(Class<?>)
  parent: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.yml
  langs:
  - java
  name: getOrBuildMethodDispatcher(Class<?> interfaceType)
  nameWithType: CodeBuilderBase.getOrBuildMethodDispatcher(Class<?> interfaceType)
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodDispatcher(Class<?> interfaceType)
  overload: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodDispatcher*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/CodeBuilderBase.java
    startLine: 29
  package: microsoft.servicefabric.services.remoting.builder
  summary: "<p>Get or Build Method Dispatcher. </p>"
  syntax:
    content: public MethodDispatcherBuildResult getOrBuildMethodDispatcher(Class<?> interfaceType)
    parameters:
    - id: interfaceType
      type: a19781f8
      description: <p>Type of the Interface. </p>
    return:
      type: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBuildResult
      description: <p>Method Dispatcher build result. </p>
  overridden: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getOrBuildMethodDispatcher(Class<?>)
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildProxyGenerator(Class<?>)
  id: getOrBuildProxyGenerator(Class<?>)
  parent: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.yml
  langs:
  - java
  name: getOrBuildProxyGenerator(Class<?> interfaceType)
  nameWithType: CodeBuilderBase.getOrBuildProxyGenerator(Class<?> interfaceType)
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildProxyGenerator(Class<?> interfaceType)
  overload: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildProxyGenerator*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/CodeBuilderBase.java
    startLine: 49
  package: microsoft.servicefabric.services.remoting.builder
  summary: "<p>Get or build the proxy generator. </p>"
  syntax:
    content: public ProxyGeneratorBuildResult getOrBuildProxyGenerator(Class<?> interfaceType)
    parameters:
    - id: interfaceType
      type: a19781f8
      description: <p>Interface type. </p>
    return:
      type: microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult
      description: <p>proxy generator build result <xref uid="microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult"></xref></p>
  overridden: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getOrBuildProxyGenerator(Class<?>)
references:
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.CodeBuilderBase*
  name: CodeBuilderBase
  nameWithType: CodeBuilderBase.CodeBuilderBase
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.CodeBuilderBase
  package: microsoft.servicefabric.services.remoting.builder
- uid: a19781f8
  spec.java:
  - name: Class<?>
    fullName: Class<?>
- uid: 13c86962microsoft.servicefabric.services.remoting.builder.MethodDispatcherBuildResult
  spec.java:
  - name: 'abstract '
    fullName: 'abstract '
  - uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBuildResult
    name: MethodDispatcherBuildResult
    fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBuildResult
    href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBuildResult.yml
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildMethodDispatcher*
  name: buildMethodDispatcher
  nameWithType: CodeBuilderBase.buildMethodDispatcher
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildMethodDispatcher
  package: microsoft.servicefabric.services.remoting.builder
- uid: "3670e177"
  spec.java:
  - name: abstract MethodBodyTypesBuildResult
    fullName: abstract MethodBodyTypesBuildResult
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildMethodBodyTypes*
  name: buildMethodBodyTypes
  nameWithType: CodeBuilderBase.buildMethodBodyTypes
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildMethodBodyTypes
  package: microsoft.servicefabric.services.remoting.builder
- uid: 13c86962microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult
  spec.java:
  - name: 'abstract '
    fullName: 'abstract '
  - uid: microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult
    name: ProxyGeneratorBuildResult
    fullName: microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult
    href: microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult.yml
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildProxyGenerator*
  name: buildProxyGenerator
  nameWithType: CodeBuilderBase.buildProxyGenerator
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.buildProxyGenerator
  package: microsoft.servicefabric.services.remoting.builder
- uid: 7a850a33
  spec.java:
  - name: CodeBuilderNames
    fullName: CodeBuilderNames
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getNames*
  name: getNames
  nameWithType: CodeBuilderBase.getNames
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getNames
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodDispatcher*
  name: getOrBuildMethodDispatcher
  nameWithType: CodeBuilderBase.getOrBuildMethodDispatcher
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodDispatcher
  package: microsoft.servicefabric.services.remoting.builder
- uid: f3ddb871
  spec.java:
  - name: MethodBodyTypesBuildResult
    fullName: MethodBodyTypesBuildResult
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodBodyTypes*
  name: getOrBuildMethodBodyTypes
  nameWithType: CodeBuilderBase.getOrBuildMethodBodyTypes
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodBodyTypes
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildProxyGenerator*
  name: getOrBuildProxyGenerator
  nameWithType: CodeBuilderBase.getOrBuildProxyGenerator
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildProxyGenerator
  package: microsoft.servicefabric.services.remoting.builder
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilder
  parent: microsoft.servicefabric.services.remoting.builder
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilder.yml
  name: CodeBuilder
  nameWithType: CodeBuilder
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilder
  type: Interface
  summary: "<p>Base interface for Actor and Services code builder singleton classes. </p>"
  syntax:
    content: public interface CodeBuilder
- uid: microsoft.servicefabric.services.remoting.builder.ServiceCodeBuilder
  parent: microsoft.servicefabric.services.remoting.builder
  href: microsoft.servicefabric.services.remoting.builder.ServiceCodeBuilder.yml
  name: ServiceCodeBuilder
  nameWithType: ServiceCodeBuilder
  fullName: microsoft.servicefabric.services.remoting.builder.ServiceCodeBuilder
  type: Class
  summary: "<p>Used to create service proxy object and method dispatcher object. For internal use only. </p>"
  syntax:
    content: public class ServiceCodeBuilder
- uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBuildResult
  parent: microsoft.servicefabric.services.remoting.builder
  href: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBuildResult.yml
  name: MethodDispatcherBuildResult
  nameWithType: MethodDispatcherBuildResult
  fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBuildResult
  type: Class
  summary: "<p>Method dispatcher build result to be used in Actors and Services. For internal use only. </p>"
  syntax:
    content: public class MethodDispatcherBuildResult
- uid: microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult
  parent: microsoft.servicefabric.services.remoting.builder
  href: microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult.yml
  name: ProxyGeneratorBuildResult
  nameWithType: ProxyGeneratorBuildResult
  fullName: microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult
  type: Class
  summary: "<p>Used in Actor and Services Code builder. For internal use only. </p>"
  syntax:
    content: public class ProxyGeneratorBuildResult
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase
  parent: microsoft.servicefabric.services.remoting.builder
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.yml
  name: CodeBuilderNamesBase
  nameWithType: CodeBuilderNamesBase
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase
  type: Class
  summary: "<p>Base class from which actor and service CodeBuildNames classes extend. For internal purpose only. </p>"
  syntax:
    content: public class CodeBuilderNamesBase
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getNames()
  parent: microsoft.servicefabric.services.remoting.builder.CodeBuilder
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilder.yml
  name: getNames()
  nameWithType: CodeBuilder.getNames()
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getNames()
  type: Method
  summary: "<p>Get code builder names. </p>"
  syntax:
    content: public CodeBuilderNames getNames()
    return:
      type: 7a850a33
      description: <p>An object of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CodeBuilderNames"></xref></p>
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getOrBuildMethodDispatcher(Class<?>)
  parent: microsoft.servicefabric.services.remoting.builder.CodeBuilder
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilder.yml
  name: getOrBuildMethodDispatcher(Class<?> interfaceType)
  nameWithType: CodeBuilder.getOrBuildMethodDispatcher(Class<?> interfaceType)
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getOrBuildMethodDispatcher(Class<?> interfaceType)
  type: Method
  summary: "<p>Get or Build Method Dispatcher. </p>"
  syntax:
    content: public MethodDispatcherBuildResult getOrBuildMethodDispatcher(Class<?> interfaceType)
    parameters:
    - id: interfaceType
      type: a19781f8
      description: <p>Type of the Interface. </p>
    return:
      type: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBuildResult
      description: <p>Method Dispatcher build result. </p>
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getOrBuildMethodBodyTypes(Class<?>)
  parent: microsoft.servicefabric.services.remoting.builder.CodeBuilder
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilder.yml
  name: getOrBuildMethodBodyTypes(Class<?> interfaceType)
  nameWithType: CodeBuilder.getOrBuildMethodBodyTypes(Class<?> interfaceType)
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getOrBuildMethodBodyTypes(Class<?> interfaceType)
  type: Method
  summary: "<p>Get or Build method body type. </p>"
  syntax:
    content: public MethodBodyTypesBuildResult getOrBuildMethodBodyTypes(Class<?> interfaceType)
    parameters:
    - id: interfaceType
      type: a19781f8
      description: <p>Interface type. </p>
    return:
      type: f3ddb871
      description: <p>Method body types build result <xref uid="" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.builder.MethodBodyTypesBuildResult"></xref></p>
- uid: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getOrBuildProxyGenerator(Class<?>)
  parent: microsoft.servicefabric.services.remoting.builder.CodeBuilder
  href: microsoft.servicefabric.services.remoting.builder.CodeBuilder.yml
  name: getOrBuildProxyGenerator(Class<?> interfaceType)
  nameWithType: CodeBuilder.getOrBuildProxyGenerator(Class<?> interfaceType)
  fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getOrBuildProxyGenerator(Class<?> interfaceType)
  type: Method
  summary: "<p>Get or build the proxy generator. </p>"
  syntax:
    content: public ProxyGeneratorBuildResult getOrBuildProxyGenerator(Class<?> interfaceType)
    parameters:
    - id: interfaceType
      type: a19781f8
      description: <p>Interface type. </p>
    return:
      type: microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult
      description: <p>proxy generator build result <xref uid="microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.builder.ProxyGeneratorBuildResult"></xref></p>
