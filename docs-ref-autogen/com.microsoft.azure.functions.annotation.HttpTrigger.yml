### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.functions.annotation.HttpTrigger
  id: HttpTrigger
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation
  children:
  - com.microsoft.azure.functions.annotation.HttpTrigger.authLevel()
  - com.microsoft.azure.functions.annotation.HttpTrigger.dataType()
  - com.microsoft.azure.functions.annotation.HttpTrigger.methods()
  - com.microsoft.azure.functions.annotation.HttpTrigger.name()
  - com.microsoft.azure.functions.annotation.HttpTrigger.route()
  langs:
  - java
  name: HttpTrigger
  nameWithType: HttpTrigger
  fullName: com.microsoft.azure.functions.annotation.HttpTrigger
  type: Interface
  package: com.microsoft.azure.functions.annotation
  summary: "The HttpTrigger annotation is applied to Azure functions that will be triggered by a call to the HTTP endpoint that the function is located at. The HttpTrigger annotation should be applied to a method parameter of one of the following types:\n\n *  <xref uid=\"com.microsoft.azure.functions.HttpRequestMessage\" data-throw-if-not-resolved=\"false\">HttpRequestMessage &lt; T &gt;</xref>\n *  Any native Java types such as int, String, byte\\[\\]\n *  Nullable values using Optional<T>\n *  Any POJO type\n\nFor example:\n\n```java\n@FunctionName(\"hello\")\n  public HttpResponseMessage<String> helloFunction(\n    @HttpTrigger(name = \"req\",\n                  methods = {HttpMethod.GET},\n                  authLevel = AuthorizationLevel.ANONYMOUS) HttpRequestMessage<Optional<String>> request\n  ) {\n     ....\n  }\n```\n\nIn this code snippet you will observe that we have a function annotated with `@FunctionName(\"hello\")`, which indicates that this function will be available at the endpoint /api/hello. The name of the method itself, in this case `helloFunction` is irrelevant for all intents and purposes related to Azure Functions. Note however that the method return type is <xref uid=\"com.microsoft.azure.functions.HttpResponseMessage\" data-throw-if-not-resolved=\"false\">com.microsoft.azure.functions.HttpResponseMessage</xref>, and that the first argument into the function is an <xref uid=\"com.microsoft.azure.functions.HttpRequestMessage\" data-throw-if-not-resolved=\"false\">com.microsoft.azure.functions.HttpRequestMessage</xref> with generic type `Optional`. This indicates that the body of the request will potentially contain a String value.\n\nMost important of all however is the `@HttpTrigger` annotation that has been applied to this argument. In this annotation you'll note that it has been given a name, as well as told what type of requests it supports (in this case, only HTTP GET requests), and that the <xref uid=\"com.microsoft.azure.functions.annotation.AuthorizationLevel\" data-throw-if-not-resolved=\"false\">AuthorizationLevel</xref> is anonymous, allowing access to anyone who can call the endpoint.\n\nThe `HttpTrigger` can be further customised by providing a custom <xref uid=\"com.microsoft.azure.functions.annotation.HttpTrigger.route()\" data-throw-if-not-resolved=\"false\">#route()</xref>, which allows for custom endpoints to be specified, and for these endpoints to be parameterized with arguments being bound to arguments provided to the function at runtime.\n\nThe following example shows a Java function that looks for a name parameter either in the query string (HTTP GET) or the body (HTTP POST) of the HTTP request. Notice that the return value is used for the output binding, but a return value attribute isn't required.\n\n```java\n@FunctionName(\"readHttpName\")\n  public String readName(\n    @HttpTrigger(name = \"req\", \n          methods = {HttpMethod.GET, HttpMethod.POST}, authLevel = AuthorizationLevel.ANONYMOUS)\n          final HttpRequestMessage<Optional<String>> request) {\n       String name = request.getBody().orElseGet(() -> request.getQueryParameters().get(\"name\"));\n       return name == null ?\n              \"Please pass a name on the query string or in the request body\" :\n              \"Hello \" + name;\n  }\n```"
  syntax:
    content: public interface HttpTrigger implements Annotation
  implements:
  - java.lang.annotation.Annotation
- uid: com.microsoft.azure.functions.annotation.HttpTrigger.authLevel()
  id: authLevel()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.HttpTrigger
  langs:
  - java
  name: authLevel()
  nameWithType: HttpTrigger.authLevel()
  fullName: com.microsoft.azure.functions.annotation.HttpTrigger.authLevel()
  overload: com.microsoft.azure.functions.annotation.HttpTrigger.authLevel*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: >-
    Determines what keys, if any, need to be present on the request in order to invoke the function. The authorization level can be one of the following values:

     *  **anonymous**: No API key is required.
     *  **function**: A function-specific API key is required. This is the default value if none is provided.
     *  **admin**: The master key is required.

    For more information, see the [documentation about authorization keys][].



    [documentation about authorization keys]: https://docs.microsoft.com/azure/azure-functions/functions-bindings-http-webhook#authorization-keys
  syntax:
    content: public abstract AuthorizationLevel authLevel()
    return:
      type: com.microsoft.azure.functions.annotation.AuthorizationLevel
      description: >-
        An <xref uid="com.microsoft.azure.functions.annotation.AuthorizationLevel" data-throw-if-not-resolved="false">AuthorizationLevel</xref> value representing the level required to access the
                 function.
- uid: com.microsoft.azure.functions.annotation.HttpTrigger.dataType()
  id: dataType()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.HttpTrigger
  langs:
  - java
  name: dataType()
  nameWithType: HttpTrigger.dataType()
  fullName: com.microsoft.azure.functions.annotation.HttpTrigger.dataType()
  overload: com.microsoft.azure.functions.annotation.HttpTrigger.dataType*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: >-
    Defines how Functions runtime should treat the parameter value. Possible values are:

     *  "": get the value as a string, and try to deserialize to actual parameter type like POJO
     *  string: always get the value as a string
     *  binary: get the value as a binary data, and try to deserialize to actual parameter type byte\[\]
  syntax:
    content: public abstract String dataType()
    return:
      type: java.lang.String
      description: The dataType which will be used by the Functions runtime.
- uid: com.microsoft.azure.functions.annotation.HttpTrigger.methods()
  id: methods()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.HttpTrigger
  langs:
  - java
  name: methods()
  nameWithType: HttpTrigger.methods()
  fullName: com.microsoft.azure.functions.annotation.HttpTrigger.methods()
  overload: com.microsoft.azure.functions.annotation.HttpTrigger.methods*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: An array of the HTTP methods to which the function responds. If not specified, the function responds to all HTTP methods.
  syntax:
    content: public abstract HttpMethod[] methods()
    return:
      type: com.microsoft.azure.functions.HttpMethod[]
      description: An array containing all valid HTTP methods.
- uid: com.microsoft.azure.functions.annotation.HttpTrigger.name()
  id: name()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.HttpTrigger
  langs:
  - java
  name: name()
  nameWithType: HttpTrigger.name()
  fullName: com.microsoft.azure.functions.annotation.HttpTrigger.name()
  overload: com.microsoft.azure.functions.annotation.HttpTrigger.name*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: The variable name used in function code for the request or request body.
  syntax:
    content: public abstract String name()
    return:
      type: java.lang.String
      description: The variable name used in function code for the request or request body.
- uid: com.microsoft.azure.functions.annotation.HttpTrigger.route()
  id: route()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.HttpTrigger
  langs:
  - java
  name: route()
  nameWithType: HttpTrigger.route()
  fullName: com.microsoft.azure.functions.annotation.HttpTrigger.route()
  overload: com.microsoft.azure.functions.annotation.HttpTrigger.route*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: "Defines the route template, controlling which request URLs your function will respond to. The default value if no route is provided is the function name specified in the <xref uid=\"com.microsoft.azure.functions.annotation.FunctionName\" data-throw-if-not-resolved=\"false\">FunctionName</xref> annotation, applied to each Azure Function.\n\nBy default when you create a function for an HTTP trigger, or WebHook, the function is addressable with a route of the form `http://<yourapp>.azurewebsites.net/api/<funcname>`. You can customize this route using this route property. For example, a route of `\"products/{category:alpha}/{id:int}\"` would mean that the function is now addressable with the following route instead of the original route: `http://<yourapp>.azurewebsites.net/api/products/electronics/357`, which allows the function code to support two parameters in the address: category and id. By specifying the route in this way, developers can then add the additional route arguments as arguments into the function by using the <xref uid=\"com.microsoft.azure.functions.annotation.BindingName\" data-throw-if-not-resolved=\"false\">BindingName</xref> annotation. For example:\n\n```java\n@FunctionName(\"routeTest\")\n  public HttpResponseMessage<String> routeTest(\n      @HttpTrigger(name = \"req\",\n                    methods = {HttpMethod.GET},\n                    authLevel = AuthorizationLevel.ANONYMOUS,\n                    route = \"products/{category:alpha}/{id:int}\") \n                    HttpRequestMessage<Optional<String>> request,\n      @BindingName(\"category\") String category,\n      @BindingName(\"id\") int id,\n       final ExecutionContext context\n  ) {\n           ....\n           context.getLogger().info(\"We have \" + category + \" with id \" + id);\n           ....\n  }\n```\n\nFor more details on the route syntax, refer to the [ online documentation][online documentation].\n\n\n[online documentation]: https://docs.microsoft.com/en-us/aspnet/web-api/overview/web-api-routing-and-actions"
  syntax:
    content: public abstract String route()
    return:
      type: java.lang.String
      description: The route template to use for the annotated function.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.functions.annotation.HttpTrigger.name*
  name: name
  nameWithType: HttpTrigger.name
  fullName: com.microsoft.azure.functions.annotation.HttpTrigger.name
  package: com.microsoft.azure.functions.annotation
- uid: com.microsoft.azure.functions.annotation.HttpTrigger.dataType*
  name: dataType
  nameWithType: HttpTrigger.dataType
  fullName: com.microsoft.azure.functions.annotation.HttpTrigger.dataType
  package: com.microsoft.azure.functions.annotation
- uid: com.microsoft.azure.functions.annotation.HttpTrigger.route*
  name: route
  nameWithType: HttpTrigger.route
  fullName: com.microsoft.azure.functions.annotation.HttpTrigger.route
  package: com.microsoft.azure.functions.annotation
- uid: com.microsoft.azure.functions.HttpMethod[]
  spec.java:
  - uid: com.microsoft.azure.functions.HttpMethod
    name: HttpMethod
    fullName: com.microsoft.azure.functions.HttpMethod
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.functions.annotation.HttpTrigger.methods*
  name: methods
  nameWithType: HttpTrigger.methods
  fullName: com.microsoft.azure.functions.annotation.HttpTrigger.methods
  package: com.microsoft.azure.functions.annotation
- uid: com.microsoft.azure.functions.annotation.AuthorizationLevel
  name: AuthorizationLevel
  nameWithType: AuthorizationLevel
  fullName: com.microsoft.azure.functions.annotation.AuthorizationLevel
- uid: com.microsoft.azure.functions.annotation.HttpTrigger.authLevel*
  name: authLevel
  nameWithType: HttpTrigger.authLevel
  fullName: com.microsoft.azure.functions.annotation.HttpTrigger.authLevel
  package: com.microsoft.azure.functions.annotation
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
