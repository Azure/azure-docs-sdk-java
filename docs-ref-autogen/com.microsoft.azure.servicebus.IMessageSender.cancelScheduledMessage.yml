### YamlMime:JavaMember
uid: "com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage*"
fullName: "com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage"
name: "cancelScheduledMessage"
nameWithType: "IMessageSender.cancelScheduledMessage"
members:
- uid: "com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage(long)"
  fullName: "com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage(long sequenceNumber)"
  name: "cancelScheduledMessage(long sequenceNumber)"
  nameWithType: "IMessageSender.cancelScheduledMessage(long sequenceNumber)"
  summary: "Cancels the enqueuing of an already sent scheduled message, if it was not already enqueued. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling `cancelScheduledMessageAsync(sequenceNumber).get()`. For better performance, use async methods."
  parameters:
  - description: "sequence number of the scheduled message"
    name: "sequenceNumber"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void cancelScheduledMessage(long sequenceNumber)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.servicebus"
artifact: com.microsoft.azure:azure-servicebus:3.6.0
