### YamlMime:JavaMember
uid: "com.microsoft.azure.management.batch.UserAccount.withElevationLevel*"
fullName: "com.microsoft.azure.management.batch.UserAccount.withElevationLevel"
name: "withElevationLevel"
nameWithType: "UserAccount.withElevationLevel"
members:
- uid: "com.microsoft.azure.management.batch.UserAccount.withElevationLevel(com.microsoft.azure.management.batch.ElevationLevel)"
  fullName: "com.microsoft.azure.management.batch.UserAccount.withElevationLevel(ElevationLevel elevationLevel)"
  name: "withElevationLevel(ElevationLevel elevationLevel)"
  nameWithType: "UserAccount.withElevationLevel(ElevationLevel elevationLevel)"
  summary: "Set nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin. Possible values include: 'NonAdmin', 'Admin'."
  parameters:
  - description: "the elevationLevel value to set"
    name: "elevationLevel"
    type: "<xref href=\"com.microsoft.azure.management.batch.ElevationLevel?alt=com.microsoft.azure.management.batch.ElevationLevel&text=ElevationLevel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UserAccount withElevationLevel(ElevationLevel elevationLevel)"
  returns:
    description: "the UserAccount object itself."
    type: "<xref href=\"com.microsoft.azure.management.batch.UserAccount?alt=com.microsoft.azure.management.batch.UserAccount&text=UserAccount\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.batch"
artifact: com.microsoft.azure:azure-mgmt-batch:1.38.1
