### YamlMime:JavaType
uid: "com.microsoft.azure.management.containerregistry.ImportSource"
fullName: "com.microsoft.azure.management.containerregistry.ImportSource"
name: "ImportSource"
nameWithType: "ImportSource"
summary: "The Import<wbr>Source model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ImportSource"
constructors:
- uid: "com.microsoft.azure.management.containerregistry.ImportSource.ImportSource()"
  fullName: "com.microsoft.azure.management.containerregistry.ImportSource.ImportSource()"
  name: "ImportSource()"
  nameWithType: "ImportSource.ImportSource()"
  syntax: "public ImportSource()"
methods:
- uid: "com.microsoft.azure.management.containerregistry.ImportSource.credentials()"
  fullName: "com.microsoft.azure.management.containerregistry.ImportSource.credentials()"
  name: "credentials()"
  nameWithType: "ImportSource.credentials()"
  summary: "Get credentials used when importing from a registry uri."
  syntax: "public ImportSourceCredentials credentials()"
  desc: "Get credentials used when importing from a registry uri."
  returns:
    description: "the credentials value"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportSourceCredentials?alt=com.microsoft.azure.management.containerregistry.ImportSourceCredentials&text=ImportSourceCredentials\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.ImportSource.registryUri()"
  fullName: "com.microsoft.azure.management.containerregistry.ImportSource.registryUri()"
  name: "registryUri()"
  nameWithType: "ImportSource.registryUri()"
  summary: "Get the address of the source registry (e.<wbr>g."
  syntax: "public String registryUri()"
  desc: "Get the address of the source registry (e.g. 'mcr.microsoft.com')."
  returns:
    description: "the registryUri value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.ImportSource.resourceId()"
  fullName: "com.microsoft.azure.management.containerregistry.ImportSource.resourceId()"
  name: "resourceId()"
  nameWithType: "ImportSource.resourceId()"
  summary: "Get the resource identifier of the source Azure Container Registry."
  syntax: "public String resourceId()"
  desc: "Get the resource identifier of the source Azure Container Registry."
  returns:
    description: "the resourceId value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.ImportSource.sourceImage()"
  fullName: "com.microsoft.azure.management.containerregistry.ImportSource.sourceImage()"
  name: "sourceImage()"
  nameWithType: "ImportSource.sourceImage()"
  summary: "Get repository name of the source image."
  syntax: "public String sourceImage()"
  desc: "Get repository name of the source image. Specify an image by repository ('hello-world'). This will use the 'latest' tag. Specify an image by tag ('hello-world:latest'). Specify an image by sha256-based manifest digest ('hello-world@sha256:abc123')."
  returns:
    description: "the sourceImage value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.ImportSource.withCredentials(com.microsoft.azure.management.containerregistry.ImportSourceCredentials)"
  fullName: "com.microsoft.azure.management.containerregistry.ImportSource.withCredentials(ImportSourceCredentials credentials)"
  name: "withCredentials(ImportSourceCredentials credentials)"
  nameWithType: "ImportSource.withCredentials(ImportSourceCredentials credentials)"
  summary: "Set credentials used when importing from a registry uri."
  parameters:
  - description: "the credentials value to set"
    name: "credentials"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportSourceCredentials?alt=com.microsoft.azure.management.containerregistry.ImportSourceCredentials&text=ImportSourceCredentials\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportSource withCredentials(ImportSourceCredentials credentials)"
  desc: "Set credentials used when importing from a registry uri."
  returns:
    description: "the ImportSource object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportSource?alt=com.microsoft.azure.management.containerregistry.ImportSource&text=ImportSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.ImportSource.withRegistryUri(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerregistry.ImportSource.withRegistryUri(String registryUri)"
  name: "withRegistryUri(String registryUri)"
  nameWithType: "ImportSource.withRegistryUri(String registryUri)"
  summary: "Set the address of the source registry (e.<wbr>g."
  parameters:
  - description: "the registryUri value to set"
    name: "registryUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportSource withRegistryUri(String registryUri)"
  desc: "Set the address of the source registry (e.g. 'mcr.microsoft.com')."
  returns:
    description: "the ImportSource object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportSource?alt=com.microsoft.azure.management.containerregistry.ImportSource&text=ImportSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.ImportSource.withResourceId(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerregistry.ImportSource.withResourceId(String resourceId)"
  name: "withResourceId(String resourceId)"
  nameWithType: "ImportSource.withResourceId(String resourceId)"
  summary: "Set the resource identifier of the source Azure Container Registry."
  parameters:
  - description: "the resourceId value to set"
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportSource withResourceId(String resourceId)"
  desc: "Set the resource identifier of the source Azure Container Registry."
  returns:
    description: "the ImportSource object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportSource?alt=com.microsoft.azure.management.containerregistry.ImportSource&text=ImportSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.ImportSource.withSourceImage(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerregistry.ImportSource.withSourceImage(String sourceImage)"
  name: "withSourceImage(String sourceImage)"
  nameWithType: "ImportSource.withSourceImage(String sourceImage)"
  summary: "Set repository name of the source image."
  parameters:
  - description: "the sourceImage value to set"
    name: "sourceImage"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportSource withSourceImage(String sourceImage)"
  desc: "Set repository name of the source image. Specify an image by repository ('hello-world'). This will use the 'latest' tag. Specify an image by tag ('hello-world:latest'). Specify an image by sha256-based manifest digest ('hello-world@sha256:abc123')."
  returns:
    description: "the ImportSource object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.ImportSource?alt=com.microsoft.azure.management.containerregistry.ImportSource&text=ImportSource\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The ImportSource model."
metadata: {}
package: "com.microsoft.azure.management.containerregistry"
artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.41.4
