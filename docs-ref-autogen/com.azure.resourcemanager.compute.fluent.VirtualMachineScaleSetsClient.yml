### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  id: VirtualMachineScaleSetsClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent
  children:
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocate(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocate(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocateAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDelete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstancesAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenance(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenance(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenanceAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOff(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOff(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOffAsync(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeploy(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeploy(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeployAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimage(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimage(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAll(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAll(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAllAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestart(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestart(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestartAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceStateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStart(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStart(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStartAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstancesAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstancesAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstancesWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalk(java.lang.String,java.lang.String,int)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkAsync(java.lang.String,java.lang.String,int)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponse(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponseAsync(java.lang.String,java.lang.String,int)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceView(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistory(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistory(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistoryAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.list()
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listAsync()
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkus(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkus(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkusAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffAsync(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffWithResponseAsync(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceState(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceState(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceStateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceStateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstancesAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstancesWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  langs:
  - java
  name: VirtualMachineScaleSetsClient
  nameWithType: VirtualMachineScaleSetsClient
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  type: Interface
  package: com.azure.resourcemanager.compute.fluent
  summary: An instance of this class provides access to all the operations defined in VirtualMachineScaleSetsClient.
  syntax:
    content: public interface VirtualMachineScaleSetsClient extends InnerSupportsGet<VirtualMachineScaleSetInner>, InnerSupportsListing<VirtualMachineScaleSetInner>, InnerSupportsDelete<Void>
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  nameWithType: VirtualMachineScaleSetsClient.beginCreateOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Create or update a VM scale set.
  syntax:
    content: public abstract SyncPoller<PollResult<VirtualMachineScaleSetInner>,VirtualMachineScaleSetInner> beginCreateOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
      description: Describes a Virtual Machine Scale Set.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginCreateOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Create or update a VM scale set.
  syntax:
    content: public abstract SyncPoller<PollResult<VirtualMachineScaleSetInner>,VirtualMachineScaleSetInner> beginCreateOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
      description: Describes a Virtual Machine Scale Set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  id: beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginCreateOrUpdateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  nameWithType: VirtualMachineScaleSetsClient.beginCreateOrUpdateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Create or update a VM scale set.
  syntax:
    content: public abstract PollerFlux<PollResult<VirtualMachineScaleSetInner>,VirtualMachineScaleSetInner> beginCreateOrUpdateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
      description: Describes a Virtual Machine Scale Set.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocate(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginDeallocate(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginDeallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginDeallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginDeallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocate(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: beginDeallocate(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginDeallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginDeallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginDeallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocateAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginDeallocateAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginDeallocateAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginDeallocateAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocateAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginDeallocateAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDelete(java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.beginDelete(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDelete(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a VM scale set.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String vmScaleSetName, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginDelete(String resourceGroupName, String vmScaleSetName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDelete(String resourceGroupName, String vmScaleSetName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a VM scale set.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String vmScaleSetName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteAsync(java.lang.String,java.lang.String)
  id: beginDeleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginDeleteAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.beginDeleteAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a VM scale set.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginDeleteInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginDeleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginDeleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstances*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes virtual machines in a VM scale set.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginDeleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: beginDeleteInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginDeleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginDeleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstances*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes virtual machines in a VM scale set.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginDeleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstancesAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginDeleteInstancesAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginDeleteInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginDeleteInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstancesAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes virtual machines in a VM scale set.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginDeleteInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenance(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginPerformMaintenance(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenance*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: 'Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications.'
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenance(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: beginPerformMaintenance(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenance*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: 'Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications.'
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginPerformMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenanceAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginPerformMaintenanceAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginPerformMaintenanceAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginPerformMaintenanceAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenanceAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenanceAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: 'Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications.'
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginPerformMaintenanceAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOff(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  id: beginPowerOff(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginPowerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginPowerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOff*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginPowerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOff(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: beginPowerOff(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginPowerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginPowerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOff*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginPowerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOffAsync(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  id: beginPowerOffAsync(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginPowerOffAsync(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginPowerOffAsync(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOffAsync(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOffAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginPowerOffAsync(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeploy(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginRedeploy(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginRedeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginRedeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeploy*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginRedeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeploy(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: beginRedeploy(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginRedeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginRedeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeploy*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginRedeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeployAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginRedeployAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginRedeployAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginRedeployAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeployAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeployAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginRedeployAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimage(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  id: beginReimage(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginReimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  nameWithType: VirtualMachineScaleSetsClient.beginReimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimage*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginReimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: vmScaleSetReimageInput
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters
      description: Describes a Virtual Machine Scale Set VM Reimage Parameters.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimage(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters,com.azure.core.util.Context)
  id: beginReimage(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginReimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginReimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimage*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginReimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: vmScaleSetReimageInput
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters
      description: Describes a Virtual Machine Scale Set VM Reimage Parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAll(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginReimageAll(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginReimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginReimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAll*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginReimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAll(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: beginReimageAll(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginReimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginReimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAll*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginReimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAllAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginReimageAllAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginReimageAllAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginReimageAllAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAllAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAllAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginReimageAllAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  id: beginReimageAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginReimageAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  nameWithType: VirtualMachineScaleSetsClient.beginReimageAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginReimageAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: vmScaleSetReimageInput
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters
      description: Describes a Virtual Machine Scale Set VM Reimage Parameters.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestart(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginRestart(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginRestart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginRestart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestart*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Restarts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginRestart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestart(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: beginRestart(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginRestart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginRestart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestart*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Restarts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginRestart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestartAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginRestartAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginRestartAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginRestartAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestartAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestartAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Restarts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginRestartAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  id: beginSetOrchestrationServiceState(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginSetOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  nameWithType: VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Changes ServiceState property for a given service.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginSetOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the virtual machine scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput
      description: The input for OrchestrationServiceState.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput,com.azure.core.util.Context)
  id: beginSetOrchestrationServiceState(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginSetOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Changes ServiceState property for a given service.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginSetOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the virtual machine scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput
      description: The input for OrchestrationServiceState.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceStateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  id: beginSetOrchestrationServiceStateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginSetOrchestrationServiceStateAsync(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  nameWithType: VirtualMachineScaleSetsClient.beginSetOrchestrationServiceStateAsync(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceStateAsync(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceStateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Changes ServiceState property for a given service.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginSetOrchestrationServiceStateAsync(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the virtual machine scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput
      description: The input for OrchestrationServiceState.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStart(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginStart(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginStart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginStart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStart*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Starts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginStart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStart(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: beginStart(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginStart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginStart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStart*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Starts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginStart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStartAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginStartAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginStartAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginStartAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStartAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStartAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Starts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginStartAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  nameWithType: VirtualMachineScaleSetsClient.beginUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Update a VM scale set.
  syntax:
    content: public abstract SyncPoller<PollResult<VirtualMachineScaleSetInner>,VirtualMachineScaleSetInner> beginUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate
      description: Describes a Virtual Machine Scale Set.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate,com.azure.core.util.Context)
  id: beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Update a VM scale set.
  syntax:
    content: public abstract SyncPoller<PollResult<VirtualMachineScaleSetInner>,VirtualMachineScaleSetInner> beginUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate
      description: Describes a Virtual Machine Scale Set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  id: beginUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginUpdateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  nameWithType: VirtualMachineScaleSetsClient.beginUpdateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Update a VM scale set.
  syntax:
    content: public abstract PollerFlux<PollResult<VirtualMachineScaleSetInner>,VirtualMachineScaleSetInner> beginUpdateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate
      description: Describes a Virtual Machine Scale Set.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginUpdateInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginUpdateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginUpdateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstances*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginUpdateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: beginUpdateInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginUpdateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.beginUpdateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstances*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
  syntax:
    content: public abstract SyncPoller<PollResult<Void>,Void> beginUpdateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstancesAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: beginUpdateInstancesAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: beginUpdateInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.beginUpdateInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstancesAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
  syntax:
    content: public abstract PollerFlux<PollResult<Void>,Void> beginUpdateInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroup(java.lang.String,java.lang.String)
  id: convertToSinglePlacementGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: convertToSinglePlacementGroup(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.convertToSinglePlacementGroup(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroup(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroup*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Converts SinglePlacementGroup property to false for a existing virtual machine scale set.
  syntax:
    content: public abstract void convertToSinglePlacementGroup(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the virtual machine scale set to create or update.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync(java.lang.String,java.lang.String)
  id: convertToSinglePlacementGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: convertToSinglePlacementGroupAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Converts SinglePlacementGroup property to false for a existing virtual machine scale set.
  syntax:
    content: public abstract Mono<Void> convertToSinglePlacementGroupAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the virtual machine scale set to create or update.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync(java.lang.String,java.lang.String,java.lang.String)
  id: convertToSinglePlacementGroupAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: convertToSinglePlacementGroupAsync(String resourceGroupName, String vmScaleSetName, String activePlacementGroupId)
  nameWithType: VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync(String resourceGroupName, String vmScaleSetName, String activePlacementGroupId)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync(String resourceGroupName, String vmScaleSetName, String activePlacementGroupId)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Converts SinglePlacementGroup property to false for a existing virtual machine scale set.
  syntax:
    content: public abstract Mono<Void> convertToSinglePlacementGroupAsync(String resourceGroupName, String vmScaleSetName, String activePlacementGroupId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the virtual machine scale set to create or update.
    - id: activePlacementGroupId
      type: java.lang.String
      description: >-
        Id of the placement group in which you want future virtual machine instances to be
             placed. To query placement group Id, please use Virtual Machine Scale Set VMs - Get API. If not provided, the
             platform will choose one with maximum number of virtual machine instances.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: convertToSinglePlacementGroupWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: convertToSinglePlacementGroupWithResponse(String resourceGroupName, String vmScaleSetName, String activePlacementGroupId, Context context)
  nameWithType: VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponse(String resourceGroupName, String vmScaleSetName, String activePlacementGroupId, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponse(String resourceGroupName, String vmScaleSetName, String activePlacementGroupId, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponse*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Converts SinglePlacementGroup property to false for a existing virtual machine scale set.
  syntax:
    content: public abstract Response<Void> convertToSinglePlacementGroupWithResponse(String resourceGroupName, String vmScaleSetName, String activePlacementGroupId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the virtual machine scale set to create or update.
    - id: activePlacementGroupId
      type: java.lang.String
      description: >-
        Id of the placement group in which you want future virtual machine instances to be
             placed. To query placement group Id, please use Virtual Machine Scale Set VMs - Get API. If not provided, the
             platform will choose one with maximum number of virtual machine instances.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: convertToSinglePlacementGroupWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: convertToSinglePlacementGroupWithResponseAsync(String resourceGroupName, String vmScaleSetName, String activePlacementGroupId)
  nameWithType: VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponseAsync(String resourceGroupName, String vmScaleSetName, String activePlacementGroupId)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponseAsync(String resourceGroupName, String vmScaleSetName, String activePlacementGroupId)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Converts SinglePlacementGroup property to false for a existing virtual machine scale set.
  syntax:
    content: public abstract Mono<Response<Void>> convertToSinglePlacementGroupWithResponseAsync(String resourceGroupName, String vmScaleSetName, String activePlacementGroupId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the virtual machine scale set to create or update.
    - id: activePlacementGroupId
      type: java.lang.String
      description: >-
        Id of the placement group in which you want future virtual machine instances to be
             placed. To query placement group Id, please use Virtual Machine Scale Set VMs - Get API. If not provided, the
             platform will choose one with maximum number of virtual machine instances.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  nameWithType: VirtualMachineScaleSetsClient.createOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Create or update a VM scale set.
  syntax:
    content: public abstract VirtualMachineScaleSetInner createOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
      description: Describes a Virtual Machine Scale Set.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters, Context context)
  nameWithType: VirtualMachineScaleSetsClient.createOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Create or update a VM scale set.
  syntax:
    content: public abstract VirtualMachineScaleSetInner createOrUpdate(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
      description: Describes a Virtual Machine Scale Set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  nameWithType: VirtualMachineScaleSetsClient.createOrUpdateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Create or update a VM scale set.
  syntax:
    content: public abstract Mono<VirtualMachineScaleSetInner> createOrUpdateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
      description: Describes a Virtual Machine Scale Set.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  nameWithType: VirtualMachineScaleSetsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Create or update a VM scale set.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
      description: Describes a Virtual Machine Scale Set.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate(java.lang.String,java.lang.String)
  id: deallocate(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: deallocate(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.deallocate(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
  syntax:
    content: public abstract void deallocate(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: deallocate(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: deallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.deallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
  syntax:
    content: public abstract void deallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: deallocate(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: deallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.deallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
  syntax:
    content: public abstract void deallocate(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateAsync(java.lang.String,java.lang.String)
  id: deallocateAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: deallocateAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.deallocateAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
  syntax:
    content: public abstract Mono<Void> deallocateAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: deallocateAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: deallocateAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.deallocateAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
  syntax:
    content: public abstract Mono<Void> deallocateAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: deallocateWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: deallocateWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.deallocateWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> deallocateWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: delete(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.delete(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.delete(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.delete*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a VM scale set.
  syntax:
    content: public abstract void delete(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: delete(String resourceGroupName, String vmScaleSetName, Context context)
  nameWithType: VirtualMachineScaleSetsClient.delete(String resourceGroupName, String vmScaleSetName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.delete(String resourceGroupName, String vmScaleSetName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.delete*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a VM scale set.
  syntax:
    content: public abstract void delete(String resourceGroupName, String vmScaleSetName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.deleteAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a VM scale set.
  syntax:
    content: public abstract Mono<Void> deleteAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: deleteInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: deleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.deleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstances*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes virtual machines in a VM scale set.
  syntax:
    content: public abstract void deleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: deleteInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: deleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.deleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstances*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes virtual machines in a VM scale set.
  syntax:
    content: public abstract void deleteInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstancesAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: deleteInstancesAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: deleteInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.deleteInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstancesAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes virtual machines in a VM scale set.
  syntax:
    content: public abstract Mono<Void> deleteInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstancesWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: deleteInstancesWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: deleteInstancesWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.deleteInstancesWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstancesWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstancesWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes virtual machines in a VM scale set.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> deleteInstancesWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.deleteWithResponseAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteWithResponseAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes a VM scale set.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalk(java.lang.String,java.lang.String,int)
  id: forceRecoveryServiceFabricPlatformUpdateDomainWalk(java.lang.String,java.lang.String,int)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: forceRecoveryServiceFabricPlatformUpdateDomainWalk(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain)
  nameWithType: VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalk(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalk(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalk*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Manual platform update domain walk to update virtual machines in a service fabric virtual machine scale set.
  syntax:
    content: public abstract RecoveryWalkResponseInner forceRecoveryServiceFabricPlatformUpdateDomainWalk(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: platformUpdateDomain
      type: int
      description: The platform update domain for which a manual recovery walk is requested.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner
      description: response after calling a manual recovery walk.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkAsync(java.lang.String,java.lang.String,int)
  id: forceRecoveryServiceFabricPlatformUpdateDomainWalkAsync(java.lang.String,java.lang.String,int)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: forceRecoveryServiceFabricPlatformUpdateDomainWalkAsync(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain)
  nameWithType: VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkAsync(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkAsync(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Manual platform update domain walk to update virtual machines in a service fabric virtual machine scale set.
  syntax:
    content: public abstract Mono<RecoveryWalkResponseInner> forceRecoveryServiceFabricPlatformUpdateDomainWalkAsync(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: platformUpdateDomain
      type: int
      description: The platform update domain for which a manual recovery walk is requested.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner>
      description: response after calling a manual recovery walk.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponse(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  id: forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponse(java.lang.String,java.lang.String,int,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponse(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain, Context context)
  nameWithType: VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponse(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponse(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponse*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Manual platform update domain walk to update virtual machines in a service fabric virtual machine scale set.
  syntax:
    content: public abstract Response<RecoveryWalkResponseInner> forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponse(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: platformUpdateDomain
      type: int
      description: The platform update domain for which a manual recovery walk is requested.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner>
      description: response after calling a manual recovery walk.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponseAsync(java.lang.String,java.lang.String,int)
  id: forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponseAsync(java.lang.String,java.lang.String,int)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponseAsync(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain)
  nameWithType: VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponseAsync(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponseAsync(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Manual platform update domain walk to update virtual machines in a service fabric virtual machine scale set.
  syntax:
    content: public abstract Mono<Response<RecoveryWalkResponseInner>> forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponseAsync(String resourceGroupName, String vmScaleSetName, int platformUpdateDomain)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: platformUpdateDomain
      type: int
      description: The platform update domain for which a manual recovery walk is requested.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner>>
      description: response after calling a manual recovery walk.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.getByResourceGroup(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroup(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Display information about a virtual machine scale set.
  syntax:
    content: public abstract VirtualMachineScaleSetInner getByResourceGroup(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.getByResourceGroupAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Display information about a virtual machine scale set.
  syntax:
    content: public abstract Mono<VirtualMachineScaleSetInner> getByResourceGroupAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: getByResourceGroupWithResponse(String resourceGroupName, String vmScaleSetName, Context context)
  nameWithType: VirtualMachineScaleSetsClient.getByResourceGroupWithResponse(String resourceGroupName, String vmScaleSetName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupWithResponse(String resourceGroupName, String vmScaleSetName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupWithResponse*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Display information about a virtual machine scale set.
  syntax:
    content: public abstract Response<VirtualMachineScaleSetInner> getByResourceGroupWithResponse(String resourceGroupName, String vmScaleSetName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Display information about a virtual machine scale set.
  syntax:
    content: public abstract Mono<Response<VirtualMachineScaleSetInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>>
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceView(java.lang.String,java.lang.String)
  id: getInstanceView(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: getInstanceView(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.getInstanceView(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceView(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceView*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets the status of a VM scale set instance.
  syntax:
    content: public abstract VirtualMachineScaleSetInstanceViewInner getInstanceView(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner
      description: the status of a VM scale set instance.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewAsync(java.lang.String,java.lang.String)
  id: getInstanceViewAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: getInstanceViewAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.getInstanceViewAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets the status of a VM scale set instance.
  syntax:
    content: public abstract Mono<VirtualMachineScaleSetInstanceViewInner> getInstanceViewAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner>
      description: the status of a VM scale set instance.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getInstanceViewWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: getInstanceViewWithResponse(String resourceGroupName, String vmScaleSetName, Context context)
  nameWithType: VirtualMachineScaleSetsClient.getInstanceViewWithResponse(String resourceGroupName, String vmScaleSetName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewWithResponse(String resourceGroupName, String vmScaleSetName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewWithResponse*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets the status of a VM scale set instance.
  syntax:
    content: public abstract Response<VirtualMachineScaleSetInstanceViewInner> getInstanceViewWithResponse(String resourceGroupName, String vmScaleSetName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner>
      description: the status of a VM scale set instance.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewWithResponseAsync(java.lang.String,java.lang.String)
  id: getInstanceViewWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: getInstanceViewWithResponseAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.getInstanceViewWithResponseAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewWithResponseAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets the status of a VM scale set instance.
  syntax:
    content: public abstract Mono<Response<VirtualMachineScaleSetInstanceViewInner>> getInstanceViewWithResponseAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner>>
      description: the status of a VM scale set instance.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistory(java.lang.String,java.lang.String)
  id: getOSUpgradeHistory(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: getOSUpgradeHistory(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.getOSUpgradeHistory(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistory(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistory*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets list of OS upgrades on a VM scale set instance.
  syntax:
    content: public abstract PagedIterable<UpgradeOperationHistoricalStatusInfoInner> getOSUpgradeHistory(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.UpgradeOperationHistoricalStatusInfoInner>
      description: list of OS upgrades on a VM scale set instance.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistory(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getOSUpgradeHistory(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: getOSUpgradeHistory(String resourceGroupName, String vmScaleSetName, Context context)
  nameWithType: VirtualMachineScaleSetsClient.getOSUpgradeHistory(String resourceGroupName, String vmScaleSetName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistory(String resourceGroupName, String vmScaleSetName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistory*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets list of OS upgrades on a VM scale set instance.
  syntax:
    content: public abstract PagedIterable<UpgradeOperationHistoricalStatusInfoInner> getOSUpgradeHistory(String resourceGroupName, String vmScaleSetName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.UpgradeOperationHistoricalStatusInfoInner>
      description: list of OS upgrades on a VM scale set instance.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistoryAsync(java.lang.String,java.lang.String)
  id: getOSUpgradeHistoryAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: getOSUpgradeHistoryAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.getOSUpgradeHistoryAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistoryAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistoryAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets list of OS upgrades on a VM scale set instance.
  syntax:
    content: public abstract PagedFlux<UpgradeOperationHistoricalStatusInfoInner> getOSUpgradeHistoryAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.UpgradeOperationHistoricalStatusInfoInner>
      description: list of OS upgrades on a VM scale set instance.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: list()
  nameWithType: VirtualMachineScaleSetsClient.list()
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.list()
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.list*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink is null to fetch all the VM Scale Sets.
  syntax:
    content: public abstract PagedIterable<VirtualMachineScaleSetInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: a list of all VM Scale Sets in the subscription, regardless of the associated resource group.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: list(Context context)
  nameWithType: VirtualMachineScaleSetsClient.list(Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.list(Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.list*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink is null to fetch all the VM Scale Sets.
  syntax:
    content: public abstract PagedIterable<VirtualMachineScaleSetInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: a list of all VM Scale Sets in the subscription, regardless of the associated resource group.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: listAsync()
  nameWithType: VirtualMachineScaleSetsClient.listAsync()
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listAsync()
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink is null to fetch all the VM Scale Sets.
  syntax:
    content: public abstract PagedFlux<VirtualMachineScaleSetInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: a list of all VM Scale Sets in the subscription, regardless of the associated resource group.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: VirtualMachineScaleSetsClient.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of all VM scale sets under a resource group.
  syntax:
    content: public abstract PagedIterable<VirtualMachineScaleSetInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: a list of all VM scale sets under a resource group.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: VirtualMachineScaleSetsClient.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of all VM scale sets under a resource group.
  syntax:
    content: public abstract PagedIterable<VirtualMachineScaleSetInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: a list of all VM scale sets under a resource group.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: VirtualMachineScaleSetsClient.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of all VM scale sets under a resource group.
  syntax:
    content: public abstract PagedFlux<VirtualMachineScaleSetInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: a list of all VM scale sets under a resource group.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkus(java.lang.String,java.lang.String)
  id: listSkus(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: listSkus(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.listSkus(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkus(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkus*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.
  syntax:
    content: public abstract PagedIterable<VirtualMachineScaleSetSkuInner> listSkus(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetSkuInner>
      description: >-
        a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed
             for each SKU.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkus(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSkus(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: listSkus(String resourceGroupName, String vmScaleSetName, Context context)
  nameWithType: VirtualMachineScaleSetsClient.listSkus(String resourceGroupName, String vmScaleSetName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkus(String resourceGroupName, String vmScaleSetName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkus*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.
  syntax:
    content: public abstract PagedIterable<VirtualMachineScaleSetSkuInner> listSkus(String resourceGroupName, String vmScaleSetName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetSkuInner>
      description: >-
        a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed
             for each SKU.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkusAsync(java.lang.String,java.lang.String)
  id: listSkusAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: listSkusAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.listSkusAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkusAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkusAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.
  syntax:
    content: public abstract PagedFlux<VirtualMachineScaleSetSkuInner> listSkusAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetSkuInner>
      description: >-
        a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed
             for each SKU.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance(java.lang.String,java.lang.String)
  id: performMaintenance(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: performMaintenance(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.performMaintenance(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: 'Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications.'
  syntax:
    content: public abstract void performMaintenance(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: performMaintenance(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: performMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.performMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: 'Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications.'
  syntax:
    content: public abstract void performMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: performMaintenance(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: performMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.performMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: 'Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications.'
  syntax:
    content: public abstract void performMaintenance(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceAsync(java.lang.String,java.lang.String)
  id: performMaintenanceAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: performMaintenanceAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.performMaintenanceAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: 'Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications.'
  syntax:
    content: public abstract Mono<Void> performMaintenanceAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: performMaintenanceAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: performMaintenanceAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.performMaintenanceAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: 'Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications.'
  syntax:
    content: public abstract Mono<Void> performMaintenanceAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: performMaintenanceWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: performMaintenanceWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.performMaintenanceWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: 'Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications.'
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> performMaintenanceWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff(java.lang.String,java.lang.String)
  id: powerOff(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: powerOff(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.powerOff(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public abstract void powerOff(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  id: powerOff(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: powerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.powerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public abstract void powerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: powerOff(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: powerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.powerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public abstract void powerOff(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffAsync(java.lang.String,java.lang.String)
  id: powerOffAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: powerOffAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.powerOffAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public abstract Mono<Void> powerOffAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffAsync(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  id: powerOffAsync(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: powerOffAsync(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.powerOffAsync(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffAsync(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public abstract Mono<Void> powerOffAsync(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffWithResponseAsync(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  id: powerOffWithResponseAsync(java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: powerOffWithResponseAsync(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.powerOffWithResponseAsync(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffWithResponseAsync(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> powerOffWithResponseAsync(String resourceGroupName, String vmScaleSetName, Boolean skipShutdown, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: skipShutdown
      type: java.lang.Boolean
      description: >-
        The parameter to request non-graceful VM shutdown. True value for this flag indicates
             non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
             specified.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy(java.lang.String,java.lang.String)
  id: redeploy(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: redeploy(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.redeploy(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
  syntax:
    content: public abstract void redeploy(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: redeploy(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: redeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.redeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
  syntax:
    content: public abstract void redeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: redeploy(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: redeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.redeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
  syntax:
    content: public abstract void redeploy(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployAsync(java.lang.String,java.lang.String)
  id: redeployAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: redeployAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.redeployAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
  syntax:
    content: public abstract Mono<Void> redeployAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: redeployAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: redeployAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.redeployAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
  syntax:
    content: public abstract Mono<Void> redeployAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: redeployWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: redeployWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.redeployWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> redeployWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage(java.lang.String,java.lang.String)
  id: reimage(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: reimage(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.reimage(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
  syntax:
    content: public abstract void reimage(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  id: reimage(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: reimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  nameWithType: VirtualMachineScaleSetsClient.reimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
  syntax:
    content: public abstract void reimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: vmScaleSetReimageInput
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters
      description: Describes a Virtual Machine Scale Set VM Reimage Parameters.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters,com.azure.core.util.Context)
  id: reimage(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: reimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput, Context context)
  nameWithType: VirtualMachineScaleSetsClient.reimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
  syntax:
    content: public abstract void reimage(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: vmScaleSetReimageInput
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters
      description: Describes a Virtual Machine Scale Set VM Reimage Parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll(java.lang.String,java.lang.String)
  id: reimageAll(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: reimageAll(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.reimageAll(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
  syntax:
    content: public abstract void reimageAll(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: reimageAll(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: reimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.reimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
  syntax:
    content: public abstract void reimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: reimageAll(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: reimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.reimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
  syntax:
    content: public abstract void reimageAll(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllAsync(java.lang.String,java.lang.String)
  id: reimageAllAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: reimageAllAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.reimageAllAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
  syntax:
    content: public abstract Mono<Void> reimageAllAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: reimageAllAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: reimageAllAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.reimageAllAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
  syntax:
    content: public abstract Mono<Void> reimageAllAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: reimageAllWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: reimageAllWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.reimageAllWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> reimageAllWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAsync(java.lang.String,java.lang.String)
  id: reimageAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: reimageAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.reimageAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
  syntax:
    content: public abstract Mono<Void> reimageAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  id: reimageAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: reimageAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  nameWithType: VirtualMachineScaleSetsClient.reimageAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
  syntax:
    content: public abstract Mono<Void> reimageAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: vmScaleSetReimageInput
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters
      description: Describes a Virtual Machine Scale Set VM Reimage Parameters.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  id: reimageWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: reimageWithResponseAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  nameWithType: VirtualMachineScaleSetsClient.reimageWithResponseAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageWithResponseAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> reimageWithResponseAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetReimageParameters vmScaleSetReimageInput)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: vmScaleSetReimageInput
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters
      description: Describes a Virtual Machine Scale Set VM Reimage Parameters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart(java.lang.String,java.lang.String)
  id: restart(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: restart(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.restart(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Restarts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract void restart(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: restart(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: restart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.restart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Restarts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract void restart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: restart(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: restart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.restart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Restarts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract void restart(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartAsync(java.lang.String,java.lang.String)
  id: restartAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: restartAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.restartAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Restarts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract Mono<Void> restartAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: restartAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: restartAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.restartAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Restarts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract Mono<Void> restartAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: restartWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: restartWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.restartWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Restarts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> restartWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceState(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  id: setOrchestrationServiceState(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: setOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  nameWithType: VirtualMachineScaleSetsClient.setOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceState*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Changes ServiceState property for a given service.
  syntax:
    content: public abstract void setOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the virtual machine scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput
      description: The input for OrchestrationServiceState.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceState(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput,com.azure.core.util.Context)
  id: setOrchestrationServiceState(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: setOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters, Context context)
  nameWithType: VirtualMachineScaleSetsClient.setOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceState*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Changes ServiceState property for a given service.
  syntax:
    content: public abstract void setOrchestrationServiceState(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the virtual machine scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput
      description: The input for OrchestrationServiceState.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceStateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  id: setOrchestrationServiceStateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: setOrchestrationServiceStateAsync(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  nameWithType: VirtualMachineScaleSetsClient.setOrchestrationServiceStateAsync(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceStateAsync(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceStateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Changes ServiceState property for a given service.
  syntax:
    content: public abstract Mono<Void> setOrchestrationServiceStateAsync(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the virtual machine scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput
      description: The input for OrchestrationServiceState.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceStateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  id: setOrchestrationServiceStateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: setOrchestrationServiceStateWithResponseAsync(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  nameWithType: VirtualMachineScaleSetsClient.setOrchestrationServiceStateWithResponseAsync(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceStateWithResponseAsync(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceStateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Changes ServiceState property for a given service.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> setOrchestrationServiceStateWithResponseAsync(String resourceGroupName, String vmScaleSetName, OrchestrationServiceStateInput parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the virtual machine scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput
      description: The input for OrchestrationServiceState.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start(java.lang.String,java.lang.String)
  id: start(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: start(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.start(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Starts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract void start(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: start(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: start(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.start(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Starts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract void start(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: start(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: start(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.start(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Starts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract void start(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startAsync(java.lang.String,java.lang.String)
  id: startAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: startAsync(String resourceGroupName, String vmScaleSetName)
  nameWithType: VirtualMachineScaleSetsClient.startAsync(String resourceGroupName, String vmScaleSetName)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startAsync(String resourceGroupName, String vmScaleSetName)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Starts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract Mono<Void> startAsync(String resourceGroupName, String vmScaleSetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: startAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: startAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.startAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Starts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract Mono<Void> startAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: startWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: startWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.startWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Starts one or more virtual machines in a VM scale set.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> startWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: >-
        The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
             ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: update(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  nameWithType: VirtualMachineScaleSetsClient.update(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.update(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.update*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Update a VM scale set.
  syntax:
    content: public abstract VirtualMachineScaleSetInner update(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate
      description: Describes a Virtual Machine Scale Set.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: update(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters, Context context)
  nameWithType: VirtualMachineScaleSetsClient.update(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.update(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.update*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Update a VM scale set.
  syntax:
    content: public abstract VirtualMachineScaleSetInner update(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate
      description: Describes a Virtual Machine Scale Set.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  nameWithType: VirtualMachineScaleSetsClient.updateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Update a VM scale set.
  syntax:
    content: public abstract Mono<VirtualMachineScaleSetInner> updateAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate
      description: Describes a Virtual Machine Scale Set.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
      description: describes a Virtual Machine Scale Set.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: updateInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: updateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.updateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstances*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
  syntax:
    content: public abstract void updateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  id: updateInstances(java.lang.String,java.lang.String,java.util.List<java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: updateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  nameWithType: VirtualMachineScaleSetsClient.updateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstances*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
  syntax:
    content: public abstract void updateInstances(String resourceGroupName, String vmScaleSetName, List<String> instanceIds, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstancesAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: updateInstancesAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: updateInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.updateInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstancesAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
  syntax:
    content: public abstract Mono<Void> updateInstancesAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstancesWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: updateInstancesWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: updateInstancesWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  nameWithType: VirtualMachineScaleSetsClient.updateInstancesWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstancesWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstancesWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> updateInstancesWithResponseAsync(String resourceGroupName, String vmScaleSetName, List<String> instanceIds)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set.
    - id: instanceIds
      type: java.util.List<java.lang.String>
      description: The virtual machine scale set instance ids.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0
  parent: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  nameWithType: VirtualMachineScaleSetsClient.updateWithResponseAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateWithResponseAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
  overload: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Update a VM scale set.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String vmScaleSetName, VirtualMachineScaleSetUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: vmScaleSetName
      type: java.lang.String
      description: The name of the VM scale set to create or update.
    - id: parameters
      type: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate
      description: Describes a Virtual Machine Scale Set.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: describes a Virtual Machine Scale Set.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
  name: VirtualMachineScaleSetInner
  nameWithType: VirtualMachineScaleSetInner
  fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
    name: VirtualMachineScaleSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
    name: VirtualMachineScaleSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdateAsync*
  name: beginCreateOrUpdateAsync
  nameWithType: VirtualMachineScaleSetsClient.beginCreateOrUpdateAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
    name: VirtualMachineScaleSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
    name: VirtualMachineScaleSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: VirtualMachineScaleSetsClient.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginCreateOrUpdate
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
    name: VirtualMachineScaleSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: VirtualMachineScaleSetsClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: VirtualMachineScaleSetsClient.createOrUpdate
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.createOrUpdate
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate
  name: VirtualMachineScaleSetUpdate
  nameWithType: VirtualMachineScaleSetUpdate
  fullName: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetUpdate
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.updateWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateAsync*
  name: beginUpdateAsync
  nameWithType: VirtualMachineScaleSetsClient.beginUpdateAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdate*
  name: beginUpdate
  nameWithType: VirtualMachineScaleSetsClient.beginUpdate
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdate
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateAsync*
  name: updateAsync
  nameWithType: VirtualMachineScaleSetsClient.updateAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.update*
  name: update
  nameWithType: VirtualMachineScaleSetsClient.update
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.update
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteAsync*
  name: beginDeleteAsync
  nameWithType: VirtualMachineScaleSetsClient.beginDeleteAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDelete*
  name: beginDelete
  nameWithType: VirtualMachineScaleSetsClient.beginDelete
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDelete
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteAsync*
  name: deleteAsync
  nameWithType: VirtualMachineScaleSetsClient.deleteAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.delete*
  name: delete
  nameWithType: VirtualMachineScaleSetsClient.delete
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.delete
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
    name: VirtualMachineScaleSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: VirtualMachineScaleSetsClient.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: VirtualMachineScaleSetsClient.getByResourceGroup
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroup
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
    name: VirtualMachineScaleSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupWithResponse*
  name: getByResourceGroupWithResponse
  nameWithType: VirtualMachineScaleSetsClient.getByResourceGroupWithResponse
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getByResourceGroupWithResponse
  package: com.azure.resourcemanager.compute.fluent
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateWithResponseAsync*
  name: deallocateWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.deallocateWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocateAsync*
  name: beginDeallocateAsync
  nameWithType: VirtualMachineScaleSetsClient.beginDeallocateAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocate*
  name: beginDeallocate
  nameWithType: VirtualMachineScaleSetsClient.beginDeallocate
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeallocate
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateAsync*
  name: deallocateAsync
  nameWithType: VirtualMachineScaleSetsClient.deallocateAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate*
  name: deallocate
  nameWithType: VirtualMachineScaleSetsClient.deallocate
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deallocate
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstancesWithResponseAsync*
  name: deleteInstancesWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.deleteInstancesWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstancesWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstancesAsync*
  name: beginDeleteInstancesAsync
  nameWithType: VirtualMachineScaleSetsClient.beginDeleteInstancesAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstancesAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstances*
  name: beginDeleteInstances
  nameWithType: VirtualMachineScaleSetsClient.beginDeleteInstances
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginDeleteInstances
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstancesAsync*
  name: deleteInstancesAsync
  nameWithType: VirtualMachineScaleSetsClient.deleteInstancesAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstancesAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstances*
  name: deleteInstances
  nameWithType: VirtualMachineScaleSetsClient.deleteInstances
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.deleteInstances
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner
    name: VirtualMachineScaleSetInstanceViewInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewWithResponseAsync*
  name: getInstanceViewWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.getInstanceViewWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner
    name: VirtualMachineScaleSetInstanceViewInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewAsync*
  name: getInstanceViewAsync
  nameWithType: VirtualMachineScaleSetsClient.getInstanceViewAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner
  name: VirtualMachineScaleSetInstanceViewInner
  nameWithType: VirtualMachineScaleSetInstanceViewInner
  fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceView*
  name: getInstanceView
  nameWithType: VirtualMachineScaleSetsClient.getInstanceView
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceView
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner
    name: VirtualMachineScaleSetInstanceViewInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInstanceViewInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewWithResponse*
  name: getInstanceViewWithResponse
  nameWithType: VirtualMachineScaleSetsClient.getInstanceViewWithResponse
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getInstanceViewWithResponse
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
    name: VirtualMachineScaleSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: VirtualMachineScaleSetsClient.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroupAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
    name: VirtualMachineScaleSetInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: VirtualMachineScaleSetsClient.listByResourceGroup
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listByResourceGroup
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listAsync*
  name: listAsync
  nameWithType: VirtualMachineScaleSetsClient.listAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.list*
  name: list
  nameWithType: VirtualMachineScaleSetsClient.list
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.list
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetSkuInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetSkuInner
    name: VirtualMachineScaleSetSkuInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetSkuInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkusAsync*
  name: listSkusAsync
  nameWithType: VirtualMachineScaleSetsClient.listSkusAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkusAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetSkuInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetSkuInner
    name: VirtualMachineScaleSetSkuInner
    fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetSkuInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkus*
  name: listSkus
  nameWithType: VirtualMachineScaleSetsClient.listSkus
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.listSkus
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.models.UpgradeOperationHistoricalStatusInfoInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.UpgradeOperationHistoricalStatusInfoInner
    name: UpgradeOperationHistoricalStatusInfoInner
    fullName: com.azure.resourcemanager.compute.fluent.models.UpgradeOperationHistoricalStatusInfoInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistoryAsync*
  name: getOSUpgradeHistoryAsync
  nameWithType: VirtualMachineScaleSetsClient.getOSUpgradeHistoryAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistoryAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.models.UpgradeOperationHistoricalStatusInfoInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.UpgradeOperationHistoricalStatusInfoInner
    name: UpgradeOperationHistoricalStatusInfoInner
    fullName: com.azure.resourcemanager.compute.fluent.models.UpgradeOperationHistoricalStatusInfoInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistory*
  name: getOSUpgradeHistory
  nameWithType: VirtualMachineScaleSetsClient.getOSUpgradeHistory
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.getOSUpgradeHistory
  package: com.azure.resourcemanager.compute.fluent
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffWithResponseAsync*
  name: powerOffWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.powerOffWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOffAsync*
  name: beginPowerOffAsync
  nameWithType: VirtualMachineScaleSetsClient.beginPowerOffAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOffAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOff*
  name: beginPowerOff
  nameWithType: VirtualMachineScaleSetsClient.beginPowerOff
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPowerOff
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffAsync*
  name: powerOffAsync
  nameWithType: VirtualMachineScaleSetsClient.powerOffAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOffAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff*
  name: powerOff
  nameWithType: VirtualMachineScaleSetsClient.powerOff
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.powerOff
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartWithResponseAsync*
  name: restartWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.restartWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestartAsync*
  name: beginRestartAsync
  nameWithType: VirtualMachineScaleSetsClient.beginRestartAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestartAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestart*
  name: beginRestart
  nameWithType: VirtualMachineScaleSetsClient.beginRestart
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRestart
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartAsync*
  name: restartAsync
  nameWithType: VirtualMachineScaleSetsClient.restartAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restartAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart*
  name: restart
  nameWithType: VirtualMachineScaleSetsClient.restart
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.restart
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startWithResponseAsync*
  name: startWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.startWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStartAsync*
  name: beginStartAsync
  nameWithType: VirtualMachineScaleSetsClient.beginStartAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStartAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStart*
  name: beginStart
  nameWithType: VirtualMachineScaleSetsClient.beginStart
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginStart
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startAsync*
  name: startAsync
  nameWithType: VirtualMachineScaleSetsClient.startAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.startAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start*
  name: start
  nameWithType: VirtualMachineScaleSetsClient.start
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.start
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployWithResponseAsync*
  name: redeployWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.redeployWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeployAsync*
  name: beginRedeployAsync
  nameWithType: VirtualMachineScaleSetsClient.beginRedeployAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeployAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeploy*
  name: beginRedeploy
  nameWithType: VirtualMachineScaleSetsClient.beginRedeploy
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginRedeploy
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployAsync*
  name: redeployAsync
  nameWithType: VirtualMachineScaleSetsClient.redeployAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeployAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy*
  name: redeploy
  nameWithType: VirtualMachineScaleSetsClient.redeploy
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.redeploy
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceWithResponseAsync*
  name: performMaintenanceWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.performMaintenanceWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenanceAsync*
  name: beginPerformMaintenanceAsync
  nameWithType: VirtualMachineScaleSetsClient.beginPerformMaintenanceAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenanceAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenance*
  name: beginPerformMaintenance
  nameWithType: VirtualMachineScaleSetsClient.beginPerformMaintenance
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginPerformMaintenance
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceAsync*
  name: performMaintenanceAsync
  nameWithType: VirtualMachineScaleSetsClient.performMaintenanceAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenanceAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance*
  name: performMaintenance
  nameWithType: VirtualMachineScaleSetsClient.performMaintenance
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.performMaintenance
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstancesWithResponseAsync*
  name: updateInstancesWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.updateInstancesWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstancesWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstancesAsync*
  name: beginUpdateInstancesAsync
  nameWithType: VirtualMachineScaleSetsClient.beginUpdateInstancesAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstancesAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstances*
  name: beginUpdateInstances
  nameWithType: VirtualMachineScaleSetsClient.beginUpdateInstances
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginUpdateInstances
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstancesAsync*
  name: updateInstancesAsync
  nameWithType: VirtualMachineScaleSetsClient.updateInstancesAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstancesAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstances*
  name: updateInstances
  nameWithType: VirtualMachineScaleSetsClient.updateInstances
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.updateInstances
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters
  name: VirtualMachineScaleSetReimageParameters
  nameWithType: VirtualMachineScaleSetReimageParameters
  fullName: com.azure.resourcemanager.compute.models.VirtualMachineScaleSetReimageParameters
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageWithResponseAsync*
  name: reimageWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.reimageWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAsync*
  name: beginReimageAsync
  nameWithType: VirtualMachineScaleSetsClient.beginReimageAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimage*
  name: beginReimage
  nameWithType: VirtualMachineScaleSetsClient.beginReimage
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimage
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAsync*
  name: reimageAsync
  nameWithType: VirtualMachineScaleSetsClient.reimageAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage*
  name: reimage
  nameWithType: VirtualMachineScaleSetsClient.reimage
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimage
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllWithResponseAsync*
  name: reimageAllWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.reimageAllWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAllAsync*
  name: beginReimageAllAsync
  nameWithType: VirtualMachineScaleSetsClient.beginReimageAllAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAllAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAll*
  name: beginReimageAll
  nameWithType: VirtualMachineScaleSetsClient.beginReimageAll
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginReimageAll
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllAsync*
  name: reimageAllAsync
  nameWithType: VirtualMachineScaleSetsClient.reimageAllAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAllAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll*
  name: reimageAll
  nameWithType: VirtualMachineScaleSetsClient.reimageAll
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.reimageAll
  package: com.azure.resourcemanager.compute.fluent
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner
    name: RecoveryWalkResponseInner
    fullName: com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponseAsync*
  name: forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner
    name: RecoveryWalkResponseInner
    fullName: com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkAsync*
  name: forceRecoveryServiceFabricPlatformUpdateDomainWalkAsync
  nameWithType: VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner
  name: RecoveryWalkResponseInner
  nameWithType: RecoveryWalkResponseInner
  fullName: com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalk*
  name: forceRecoveryServiceFabricPlatformUpdateDomainWalk
  nameWithType: VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalk
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalk
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner
    name: RecoveryWalkResponseInner
    fullName: com.azure.resourcemanager.compute.fluent.models.RecoveryWalkResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponse*
  name: forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponse
  nameWithType: VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponse
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithResponse
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponseAsync*
  name: convertToSinglePlacementGroupWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync*
  name: convertToSinglePlacementGroupAsync
  nameWithType: VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroup*
  name: convertToSinglePlacementGroup
  nameWithType: VirtualMachineScaleSetsClient.convertToSinglePlacementGroup
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroup
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponse*
  name: convertToSinglePlacementGroupWithResponse
  nameWithType: VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponse
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.convertToSinglePlacementGroupWithResponse
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput
  name: OrchestrationServiceStateInput
  nameWithType: OrchestrationServiceStateInput
  fullName: com.azure.resourcemanager.compute.models.OrchestrationServiceStateInput
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceStateWithResponseAsync*
  name: setOrchestrationServiceStateWithResponseAsync
  nameWithType: VirtualMachineScaleSetsClient.setOrchestrationServiceStateWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceStateWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceStateAsync*
  name: beginSetOrchestrationServiceStateAsync
  nameWithType: VirtualMachineScaleSetsClient.beginSetOrchestrationServiceStateAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceStateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState*
  name: beginSetOrchestrationServiceState
  nameWithType: VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.beginSetOrchestrationServiceState
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceStateAsync*
  name: setOrchestrationServiceStateAsync
  nameWithType: VirtualMachineScaleSetsClient.setOrchestrationServiceStateAsync
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceStateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceState*
  name: setOrchestrationServiceState
  nameWithType: VirtualMachineScaleSetsClient.setOrchestrationServiceState
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetsClient.setOrchestrationServiceState
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
  name: InnerSupportsGet<VirtualMachineScaleSetInner>
  nameWithType: InnerSupportsGet<VirtualMachineScaleSetInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
  name: InnerSupportsListing<VirtualMachineScaleSetInner>
  nameWithType: InnerSupportsListing<VirtualMachineScaleSetInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
  name: VirtualMachineScaleSetInner>,VirtualMachineScaleSetInner
  nameWithType: VirtualMachineScaleSetInner>,VirtualMachineScaleSetInner
  fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner>,com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetSkuInner
  name: VirtualMachineScaleSetSkuInner
  nameWithType: VirtualMachineScaleSetSkuInner
  fullName: com.azure.resourcemanager.compute.fluent.models.VirtualMachineScaleSetSkuInner
- uid: com.azure.resourcemanager.compute.fluent.models.UpgradeOperationHistoricalStatusInfoInner
  name: UpgradeOperationHistoricalStatusInfoInner
  nameWithType: UpgradeOperationHistoricalStatusInfoInner
  fullName: com.azure.resourcemanager.compute.fluent.models.UpgradeOperationHistoricalStatusInfoInner
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
