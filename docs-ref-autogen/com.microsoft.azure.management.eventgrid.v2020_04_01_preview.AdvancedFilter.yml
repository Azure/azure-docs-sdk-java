### YamlMime:JavaType
uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.AdvancedFilter"
fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.AdvancedFilter"
name: "AdvancedFilter"
nameWithType: "AdvancedFilter"
summary: "This is the base type that represents an advanced filter."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AdvancedFilter"
constructors:
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.AdvancedFilter.AdvancedFilter()"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.AdvancedFilter.AdvancedFilter()"
  name: "AdvancedFilter()"
  nameWithType: "AdvancedFilter.AdvancedFilter()"
  syntax: "public AdvancedFilter()"
methods:
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.AdvancedFilter.key()"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.AdvancedFilter.key()"
  name: "key()"
  nameWithType: "AdvancedFilter.key()"
  summary: "Get the field/property in the event based on which you want to filter."
  syntax: "public String key()"
  desc: "Get the field/property in the event based on which you want to filter."
  returns:
    description: "the key value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.AdvancedFilter.withKey(java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.AdvancedFilter.withKey(String key)"
  name: "withKey(String key)"
  nameWithType: "AdvancedFilter.withKey(String key)"
  summary: "Set the field/property in the event based on which you want to filter."
  parameters:
  - description: "the key value to set"
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AdvancedFilter withKey(String key)"
  desc: "Set the field/property in the event based on which you want to filter."
  returns:
    description: "the AdvancedFilter object itself."
    type: "<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.AdvancedFilter?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.AdvancedFilter&text=AdvancedFilter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter."
metadata: {}
package: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview"
artifact: com.microsoft.azure.eventgrid.v2020_04_01_preview:azure-mgmt-eventgrid:1.0.0-beta-3
