### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider
  id: AccessTokenProvider
  parent: com.microsoft.azure.datalake.store.oauth2
  children:
  - com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.getToken()
  - com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.refreshToken()
  - com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.token
  href: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.yml
  langs:
  - java
  name: AccessTokenProvider
  nameWithType: AccessTokenProvider
  fullName: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/datalake/store/oauth2/AccessTokenProvider.java
      branch: master
      repo: https://github.com/azure/azure-data-lake-store-java
    path: src/main/java/com/microsoft/azure/datalake/store/oauth2/AccessTokenProvider.java
    startLine: 21
  package: com.microsoft.azure.datalake.store.oauth2
  summary: "<p>Returns an Azure Active Directory token when requested. The provider can cache the token if it has already retrieved one. If it does, then the provider is responsible for checking expiry and refreshing as needed. </p>\r\n<p>In other words, this is is a token cache that fetches tokens when requested, if the cached token has expired. </p>"
  syntax:
    content: public class AccessTokenProvider
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.getToken()
  id: getToken()
  parent: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider
  href: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.yml
  langs:
  - java
  name: getToken()
  nameWithType: AccessTokenProvider.getToken()
  fullName: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.getToken()
  overload: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.getToken*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/oauth2/AccessTokenProvider.java
    startLine: 32
  package: com.microsoft.azure.datalake.store.oauth2
  summary: "<p>returns the <xref uid=\"com.microsoft.azure.datalake.store.oauth2.AzureADToken\" data-throw-if-not-resolved=\"false\">AzureADToken</xref> cached (or retrieved) by this instance.</p>\r\n<p></p>"
  syntax:
    content: public synchronized AzureADToken getToken()
    return:
      type: cffad4f2com.microsoft.azure.datalake.store.oauth2.AzureADToken
      description: >-
        <p>

          <xref uid="com.microsoft.azure.datalake.store.oauth2.AzureADToken" data-throw-if-not-resolved="false">AzureADToken</xref> containing the access token </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if there is an error fetching the token </p>
- uid: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.refreshToken()
  id: refreshToken()
  parent: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider
  href: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.yml
  langs:
  - java
  name: refreshToken()
  nameWithType: AccessTokenProvider.refreshToken()
  fullName: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.refreshToken()
  overload: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.refreshToken*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/oauth2/AccessTokenProvider.java
    startLine: 51
  package: com.microsoft.azure.datalake.store.oauth2
  summary: "<p>the method to fetch the access token. Derived classes should override this method to actually get the token from Azure Active Directory. </p>\r\n<p>This method will be called initially, and then once when the token is about to expire. </p>\r\n<p></p>"
  syntax:
    content: protected abstract AzureADToken refreshToken()
    return:
      type: 13c86962com.microsoft.azure.datalake.store.oauth2.AzureADToken
      description: >-
        <p>

          <xref uid="com.microsoft.azure.datalake.store.oauth2.AzureADToken" data-throw-if-not-resolved="false">AzureADToken</xref> containing the access token </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if there is an error fetching the token </p>
- uid: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.token
  id: token
  parent: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider
  href: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.yml
  langs:
  - java
  name: token
  nameWithType: AccessTokenProvider.token
  fullName: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.token
  type: Field
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/oauth2/AccessTokenProvider.java
    startLine: 23
  package: com.microsoft.azure.datalake.store.oauth2
  syntax:
    content: protected AzureADToken token
    return:
      type: com.microsoft.azure.datalake.store.oauth2.AzureADToken
references:
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: cffad4f2com.microsoft.azure.datalake.store.oauth2.AzureADToken
  spec.java:
  - name: 'synchronized '
    fullName: 'synchronized '
  - uid: com.microsoft.azure.datalake.store.oauth2.AzureADToken
    name: AzureADToken
    fullName: com.microsoft.azure.datalake.store.oauth2.AzureADToken
    href: com.microsoft.azure.datalake.store.oauth2.AzureADToken.yml
- uid: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.getToken*
  name: getToken
  nameWithType: AccessTokenProvider.getToken
  fullName: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.getToken
  package: com.microsoft.azure.datalake.store.oauth2
- uid: 13c86962com.microsoft.azure.datalake.store.oauth2.AzureADToken
  spec.java:
  - name: 'abstract '
    fullName: 'abstract '
  - uid: com.microsoft.azure.datalake.store.oauth2.AzureADToken
    name: AzureADToken
    fullName: com.microsoft.azure.datalake.store.oauth2.AzureADToken
    href: com.microsoft.azure.datalake.store.oauth2.AzureADToken.yml
- uid: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.refreshToken*
  name: refreshToken
  nameWithType: AccessTokenProvider.refreshToken
  fullName: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.refreshToken
  package: com.microsoft.azure.datalake.store.oauth2
- uid: com.microsoft.azure.datalake.store.oauth2.ClientCredsTokenProvider
  parent: com.microsoft.azure.datalake.store.oauth2
  href: com.microsoft.azure.datalake.store.oauth2.ClientCredsTokenProvider.yml
  name: ClientCredsTokenProvider
  nameWithType: ClientCredsTokenProvider
  fullName: com.microsoft.azure.datalake.store.oauth2.ClientCredsTokenProvider
  type: Class
  summary: "<p>Provides tokens based on client credentials </p>"
  syntax:
    content: public class ClientCredsTokenProvider
- uid: com.microsoft.azure.datalake.store.oauth2.DeviceCodeTokenProvider
  parent: com.microsoft.azure.datalake.store.oauth2
  href: com.microsoft.azure.datalake.store.oauth2.DeviceCodeTokenProvider.yml
  name: DeviceCodeTokenProvider
  nameWithType: DeviceCodeTokenProvider
  fullName: com.microsoft.azure.datalake.store.oauth2.DeviceCodeTokenProvider
  type: Class
  summary: "<p>Enables interactive login in non-browser based contexts. Displays a message asking the user to login using the browser, using the provided link and code. </p>"
  syntax:
    content: public class DeviceCodeTokenProvider
- uid: com.microsoft.azure.datalake.store.oauth2.MsiTokenProvider
  parent: com.microsoft.azure.datalake.store.oauth2
  href: com.microsoft.azure.datalake.store.oauth2.MsiTokenProvider.yml
  name: MsiTokenProvider
  nameWithType: MsiTokenProvider
  fullName: com.microsoft.azure.datalake.store.oauth2.MsiTokenProvider
  type: Class
  summary: "<p>Provides tokens based on Azure VM's Managed Service Identity </p>"
  syntax:
    content: public class MsiTokenProvider
- uid: com.microsoft.azure.datalake.store.oauth2.RefreshTokenBasedTokenProvider
  parent: com.microsoft.azure.datalake.store.oauth2
  href: com.microsoft.azure.datalake.store.oauth2.RefreshTokenBasedTokenProvider.yml
  name: RefreshTokenBasedTokenProvider
  nameWithType: RefreshTokenBasedTokenProvider
  fullName: com.microsoft.azure.datalake.store.oauth2.RefreshTokenBasedTokenProvider
  type: Class
  summary: "<p>Provides tokens based on refresh token </p>"
  syntax:
    content: public class RefreshTokenBasedTokenProvider
- uid: com.microsoft.azure.datalake.store.oauth2.UserPasswordTokenProvider
  parent: com.microsoft.azure.datalake.store.oauth2
  href: com.microsoft.azure.datalake.store.oauth2.UserPasswordTokenProvider.yml
  name: UserPasswordTokenProvider
  nameWithType: UserPasswordTokenProvider
  fullName: com.microsoft.azure.datalake.store.oauth2.UserPasswordTokenProvider
  type: Class
  summary: "<p>Provides tokens based on username and password </p>"
  syntax:
    content: public class UserPasswordTokenProvider
- uid: com.microsoft.azure.datalake.store.oauth2.AzureADToken
  parent: com.microsoft.azure.datalake.store.oauth2
  href: com.microsoft.azure.datalake.store.oauth2.AzureADToken.yml
  name: AzureADToken
  nameWithType: AzureADToken
  fullName: com.microsoft.azure.datalake.store.oauth2.AzureADToken
  type: Class
  summary: "<p>Object represnting the AAD access token to use when making HTTP requests to Azure Data Lake Storage. </p>"
  syntax:
    content: public class AzureADToken
