### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer"
  id: "EventHubPartitionAsyncConsumer"
  parent: "com.azure.messaging.eventhubs"
  children:
  - "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.EventHubPartitionAsyncConsumer(com.azure.messaging.eventhubs.implementation.AmqpReceiveLinkProcessor,com.azure.core.amqp.implementation.MessageSerializer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.concurrent.atomic.AtomicReference<java.util.function.Supplier<com.azure.messaging.eventhubs.models.EventPosition>>,boolean,reactor.core.scheduler.Scheduler)"
  - "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.close()"
  - "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.receive()"
  langs:
  - "java"
  name: "EventHubPartitionAsyncConsumer"
  nameWithType: "EventHubPartitionAsyncConsumer"
  fullName: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer"
  type: "Class"
  package: "com.azure.messaging.eventhubs"
  summary: "A package-private consumer responsible for reading <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> from a specific Event Hub partition in the context of a specific consumer group."
  syntax:
    content: " class EventHubPartitionAsyncConsumer implements AutoCloseable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.lang.AutoCloseable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.EventHubPartitionAsyncConsumer(com.azure.messaging.eventhubs.implementation.AmqpReceiveLinkProcessor,com.azure.core.amqp.implementation.MessageSerializer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.concurrent.atomic.AtomicReference<java.util.function.Supplier<com.azure.messaging.eventhubs.models.EventPosition>>,boolean,reactor.core.scheduler.Scheduler)"
  id: "EventHubPartitionAsyncConsumer(com.azure.messaging.eventhubs.implementation.AmqpReceiveLinkProcessor,com.azure.core.amqp.implementation.MessageSerializer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.concurrent.atomic.AtomicReference<java.util.function.Supplier<com.azure.messaging.eventhubs.models.EventPosition>>,boolean,reactor.core.scheduler.Scheduler)"
  parent: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer"
  langs:
  - "java"
  name: "EventHubPartitionAsyncConsumer(AmqpReceiveLinkProcessor amqpReceiveLinkProcessor, MessageSerializer messageSerializer, String fullyQualifiedNamespace, String eventHubName, String consumerGroup, String partitionId, AtomicReference<Supplier<EventPosition>> currentEventPosition, boolean trackLastEnqueuedEventProperties, Scheduler scheduler)"
  nameWithType: "EventHubPartitionAsyncConsumer.EventHubPartitionAsyncConsumer(AmqpReceiveLinkProcessor amqpReceiveLinkProcessor, MessageSerializer messageSerializer, String fullyQualifiedNamespace, String eventHubName, String consumerGroup, String partitionId, AtomicReference<Supplier<EventPosition>> currentEventPosition, boolean trackLastEnqueuedEventProperties, Scheduler scheduler)"
  fullName: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.EventHubPartitionAsyncConsumer(AmqpReceiveLinkProcessor amqpReceiveLinkProcessor, MessageSerializer messageSerializer, String fullyQualifiedNamespace, String eventHubName, String consumerGroup, String partitionId, AtomicReference<Supplier<EventPosition>> currentEventPosition, boolean trackLastEnqueuedEventProperties, Scheduler scheduler)"
  overload: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.EventHubPartitionAsyncConsumer*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: " EventHubPartitionAsyncConsumer(AmqpReceiveLinkProcessor amqpReceiveLinkProcessor, MessageSerializer messageSerializer, String fullyQualifiedNamespace, String eventHubName, String consumerGroup, String partitionId, AtomicReference<Supplier<EventPosition>> currentEventPosition, boolean trackLastEnqueuedEventProperties, Scheduler scheduler)"
    parameters:
    - id: "amqpReceiveLinkProcessor"
      type: "com.azure.messaging.eventhubs.implementation.AmqpReceiveLinkProcessor"
    - id: "messageSerializer"
      type: "com.azure.core.amqp.implementation.MessageSerializer"
    - id: "fullyQualifiedNamespace"
      type: "java.lang.String"
    - id: "eventHubName"
      type: "java.lang.String"
    - id: "consumerGroup"
      type: "java.lang.String"
    - id: "partitionId"
      type: "java.lang.String"
    - id: "currentEventPosition"
      type: "java.util.concurrent.atomic.AtomicReference<java.util.function.Supplier<com.azure.messaging.eventhubs.models.EventPosition>>"
    - id: "trackLastEnqueuedEventProperties"
      type: "boolean"
    - id: "scheduler"
      type: "reactor.core.scheduler.Scheduler"
- uid: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.close()"
  id: "close()"
  parent: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer"
  langs:
  - "java"
  name: "close()"
  nameWithType: "EventHubPartitionAsyncConsumer.close()"
  fullName: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.close()"
  overload: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.close*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Disposes of the consumer by closing the underlying connection to the service."
  syntax:
    content: "public void close()"
- uid: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.receive()"
  id: "receive()"
  parent: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer"
  langs:
  - "java"
  name: "receive()"
  nameWithType: "EventHubPartitionAsyncConsumer.receive()"
  fullName: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.receive()"
  overload: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.receive*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Begin consuming events until there are no longer any subscribers."
  syntax:
    content: " Flux<PartitionEvent> receive()"
    return:
      type: "reactor.core.publisher.Flux<com.azure.messaging.eventhubs.models.PartitionEvent>"
      description: "A stream of events received from the partition."
references:
- uid: "com.azure.messaging.eventhubs.implementation.AmqpReceiveLinkProcessor"
  name: "AmqpReceiveLinkProcessor"
  nameWithType: "AmqpReceiveLinkProcessor"
  fullName: "com.azure.messaging.eventhubs.implementation.AmqpReceiveLinkProcessor"
- uid: "com.azure.core.amqp.implementation.MessageSerializer"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.MessageSerializer"
    name: "MessageSerializer"
    fullName: "com.azure.core.amqp.implementation.MessageSerializer"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.concurrent.atomic.AtomicReference<java.util.function.Supplier<com.azure.messaging.eventhubs.models.EventPosition>>"
  spec.java:
  - uid: "java.util.concurrent.atomic.AtomicReference"
    name: "AtomicReference"
    fullName: "java.util.concurrent.atomic.AtomicReference"
  - name: "<"
    fullName: "<"
  - uid: "java.util.function.Supplier"
    name: "Supplier"
    fullName: "java.util.function.Supplier"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.eventhubs.models.EventPosition"
    name: "EventPosition"
    fullName: "com.azure.messaging.eventhubs.models.EventPosition"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "reactor.core.scheduler.Scheduler"
  spec.java:
  - uid: "reactor.core.scheduler.Scheduler"
    name: "Scheduler"
    fullName: "reactor.core.scheduler.Scheduler"
- uid: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.EventHubPartitionAsyncConsumer*"
  name: "EventHubPartitionAsyncConsumer"
  nameWithType: "EventHubPartitionAsyncConsumer.EventHubPartitionAsyncConsumer"
  fullName: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.EventHubPartitionAsyncConsumer"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.close*"
  name: "close"
  nameWithType: "EventHubPartitionAsyncConsumer.close"
  fullName: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.close"
  package: "com.azure.messaging.eventhubs"
- uid: "reactor.core.publisher.Flux<com.azure.messaging.eventhubs.models.PartitionEvent>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.eventhubs.models.PartitionEvent"
    name: "PartitionEvent"
    fullName: "com.azure.messaging.eventhubs.models.PartitionEvent"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.receive*"
  name: "receive"
  nameWithType: "EventHubPartitionAsyncConsumer.receive"
  fullName: "com.azure.messaging.eventhubs.EventHubPartitionAsyncConsumer.receive"
  package: "com.azure.messaging.eventhubs"
- uid: "java.lang.AutoCloseable"
  name: "AutoCloseable"
  nameWithType: "AutoCloseable"
  fullName: "java.lang.AutoCloseable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.concurrent.atomic.AtomicReference"
  name: "AtomicReference"
  nameWithType: "AtomicReference"
  fullName: "java.util.concurrent.atomic.AtomicReference"
- uid: "java.util.function.Supplier"
  name: "Supplier"
  nameWithType: "Supplier"
  fullName: "java.util.function.Supplier"
- uid: "com.azure.messaging.eventhubs.models.EventPosition"
  name: "EventPosition"
  nameWithType: "EventPosition"
  fullName: "com.azure.messaging.eventhubs.models.EventPosition"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.messaging.eventhubs.models.PartitionEvent"
  name: "PartitionEvent"
  nameWithType: "PartitionEvent"
  fullName: "com.azure.messaging.eventhubs.models.PartitionEvent"
