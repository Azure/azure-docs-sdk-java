### YamlMime:JavaType
uid: "com.microsoft.azure.management.batch.AutoUserSpecification"
fullName: "com.microsoft.azure.management.batch.AutoUserSpecification"
name: "AutoUserSpecification"
nameWithType: "AutoUserSpecification"
summary: "Specifies the parameters for the auto user that runs a task on the Batch service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AutoUserSpecification"
constructors:
- uid: "com.microsoft.azure.management.batch.AutoUserSpecification.AutoUserSpecification()"
  fullName: "com.microsoft.azure.management.batch.AutoUserSpecification.AutoUserSpecification()"
  name: "AutoUserSpecification()"
  nameWithType: "AutoUserSpecification.AutoUserSpecification()"
  syntax: "public AutoUserSpecification()"
methods:
- uid: "com.microsoft.azure.management.batch.AutoUserSpecification.elevationLevel()"
  fullName: "com.microsoft.azure.management.batch.AutoUserSpecification.elevationLevel()"
  name: "elevationLevel()"
  nameWithType: "AutoUserSpecification.elevationLevel()"
  summary: "Get the default value is non<wbr>Admin."
  syntax: "public ElevationLevel elevationLevel()"
  desc: "Get the default value is nonAdmin. Possible values include: 'NonAdmin', 'Admin'."
  returns:
    description: "the elevationLevel value"
    type: "<xref href=\"com.microsoft.azure.management.batch.ElevationLevel?alt=com.microsoft.azure.management.batch.ElevationLevel&text=ElevationLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.AutoUserSpecification.scope()"
  fullName: "com.microsoft.azure.management.batch.AutoUserSpecification.scope()"
  name: "scope()"
  nameWithType: "AutoUserSpecification.scope()"
  summary: "Get the default value is Pool."
  syntax: "public AutoUserScope scope()"
  desc: "Get the default value is Pool. If the pool is running Windows a value of Task should be specified if stricter isolation between tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates have been specified on the pool which should not be accessible by normal tasks but should be accessible by start tasks. Possible values include: 'Task', 'Pool'."
  returns:
    description: "the scope value"
    type: "<xref href=\"com.microsoft.azure.management.batch.AutoUserScope?alt=com.microsoft.azure.management.batch.AutoUserScope&text=AutoUserScope\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.AutoUserSpecification.withElevationLevel(com.microsoft.azure.management.batch.ElevationLevel)"
  fullName: "com.microsoft.azure.management.batch.AutoUserSpecification.withElevationLevel(ElevationLevel elevationLevel)"
  name: "withElevationLevel(ElevationLevel elevationLevel)"
  nameWithType: "AutoUserSpecification.withElevationLevel(ElevationLevel elevationLevel)"
  summary: "Set the default value is non<wbr>Admin."
  parameters:
  - description: "the elevationLevel value to set"
    name: "elevationLevel"
    type: "<xref href=\"com.microsoft.azure.management.batch.ElevationLevel?alt=com.microsoft.azure.management.batch.ElevationLevel&text=ElevationLevel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutoUserSpecification withElevationLevel(ElevationLevel elevationLevel)"
  desc: "Set the default value is nonAdmin. Possible values include: 'NonAdmin', 'Admin'."
  returns:
    description: "the AutoUserSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.management.batch.AutoUserSpecification?alt=com.microsoft.azure.management.batch.AutoUserSpecification&text=AutoUserSpecification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.AutoUserSpecification.withScope(com.microsoft.azure.management.batch.AutoUserScope)"
  fullName: "com.microsoft.azure.management.batch.AutoUserSpecification.withScope(AutoUserScope scope)"
  name: "withScope(AutoUserScope scope)"
  nameWithType: "AutoUserSpecification.withScope(AutoUserScope scope)"
  summary: "Set the default value is Pool."
  parameters:
  - description: "the scope value to set"
    name: "scope"
    type: "<xref href=\"com.microsoft.azure.management.batch.AutoUserScope?alt=com.microsoft.azure.management.batch.AutoUserScope&text=AutoUserScope\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutoUserSpecification withScope(AutoUserScope scope)"
  desc: "Set the default value is Pool. If the pool is running Windows a value of Task should be specified if stricter isolation between tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates have been specified on the pool which should not be accessible by normal tasks but should be accessible by start tasks. Possible values include: 'Task', 'Pool'."
  returns:
    description: "the AutoUserSpecification object itself."
    type: "<xref href=\"com.microsoft.azure.management.batch.AutoUserSpecification?alt=com.microsoft.azure.management.batch.AutoUserSpecification&text=AutoUserSpecification\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Specifies the parameters for the auto user that runs a task on the Batch service."
metadata: {}
package: "com.microsoft.azure.management.batch"
artifact: com.microsoft.azure:azure-mgmt-batch:1.41.4
