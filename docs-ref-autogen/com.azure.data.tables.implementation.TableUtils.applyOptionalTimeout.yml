### YamlMime:JavaMember
uid: "com.azure.data.tables.implementation.TableUtils.applyOptionalTimeout*"
fullName: "com.azure.data.tables.implementation.TableUtils.<T>applyOptionalTimeout"
name: "<T>applyOptionalTimeout"
nameWithType: "TableUtils.<T>applyOptionalTimeout"
members:
- uid: "com.azure.data.tables.implementation.TableUtils.<T>applyOptionalTimeout(reactor.core.publisher.Flux<T>,java.time.Duration)"
  fullName: "com.azure.data.tables.implementation.TableUtils.<T>applyOptionalTimeout(Flux<T> publisher, Duration timeout)"
  name: "<T>applyOptionalTimeout(Flux<T> publisher, Duration timeout)"
  nameWithType: "TableUtils.<T>applyOptionalTimeout(Flux<T> publisher, Duration timeout)"
  summary: "Applies a timeout to a <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"publisher\"></xref> if the given timeout is not null."
  parameters:
  - description: "<xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> to apply optional timeout to."
    name: "publisher"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Optional timeout."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Flux<T> <T>applyOptionalTimeout(Flux<T> publisher, Duration timeout)"
  returns:
    description: "<xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> with an applied timeout, if any."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.data.tables.implementation.TableUtils.<T>applyOptionalTimeout(reactor.core.publisher.Mono<T>,java.time.Duration)"
  fullName: "com.azure.data.tables.implementation.TableUtils.<T>applyOptionalTimeout(Mono<T> publisher, Duration timeout)"
  name: "<T>applyOptionalTimeout(Mono<T> publisher, Duration timeout)"
  nameWithType: "TableUtils.<T>applyOptionalTimeout(Mono<T> publisher, Duration timeout)"
  summary: "Applies a timeout to a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"publisher\"></xref> if the given timeout is not null."
  parameters:
  - description: "<xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> to apply optional timeout to."
    name: "publisher"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Optional timeout."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Mono<T> <T>applyOptionalTimeout(Mono<T> publisher, Duration timeout)"
  returns:
    description: "<xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> with an applied timeout, if any."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.data.tables.implementation"
artifact: com.azure:azure-data-tables:12.1.4
