### YamlMime:JavaMember
uid: "com.azure.resourcemanager.sql.models.RecommendedElasticPool.getDatabaseAsync*"
fullName: "com.azure.resourcemanager.sql.models.RecommendedElasticPool.getDatabaseAsync"
name: "getDatabaseAsync"
nameWithType: "RecommendedElasticPool.getDatabaseAsync"
members:
- uid: "com.azure.resourcemanager.sql.models.RecommendedElasticPool.getDatabaseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.sql.models.RecommendedElasticPool.getDatabaseAsync(String databaseName)"
  name: "getDatabaseAsync(String databaseName)"
  nameWithType: "RecommendedElasticPool.getDatabaseAsync(String databaseName)"
  summary: "Get a specific database in the recommended database."
  parameters:
  - description: "name of the database to be fetched"
    name: "databaseName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<SqlDatabase> getDatabaseAsync(String databaseName)"
  returns:
    description: "a representation of the deferred computation to get the database in the recommended elastic pool"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabase?alt=com.azure.resourcemanager.sql.models.SqlDatabase&text=SqlDatabase\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.sql.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.1.0
