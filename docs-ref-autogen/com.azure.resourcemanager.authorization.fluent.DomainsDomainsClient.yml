### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient"
fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient"
name: "DomainsDomainsClient"
nameWithType: "DomainsDomainsClient"
summary: "An instance of this class provides access to all the operations defined in DomainsDomainsClient."
syntax: "public interface DomainsDomainsClient"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.createDomain(com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.createDomain(MicrosoftGraphDomainInner body)"
  name: "createDomain(MicrosoftGraphDomainInner body)"
  nameWithType: "DomainsDomainsClient.createDomain(MicrosoftGraphDomainInner body)"
  summary: "Add new entity to domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "New entity."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphDomainInner createDomain(MicrosoftGraphDomainInner body)"
  returns:
    description: "domain."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.createDomainAsync(com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.createDomainAsync(MicrosoftGraphDomainInner body)"
  name: "createDomainAsync(MicrosoftGraphDomainInner body)"
  nameWithType: "DomainsDomainsClient.createDomainAsync(MicrosoftGraphDomainInner body)"
  summary: "Add new entity to domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "New entity."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphDomainInner> createDomainAsync(MicrosoftGraphDomainInner body)"
  returns:
    description: "domain."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.createDomainWithResponse(com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.createDomainWithResponse(MicrosoftGraphDomainInner body, Context context)"
  name: "createDomainWithResponse(MicrosoftGraphDomainInner body, Context context)"
  nameWithType: "DomainsDomainsClient.createDomainWithResponse(MicrosoftGraphDomainInner body, Context context)"
  summary: "Add new entity to domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "New entity."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphDomainInner> createDomainWithResponse(MicrosoftGraphDomainInner body, Context context)"
  returns:
    description: "domain."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.createDomainWithResponseAsync(com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.createDomainWithResponseAsync(MicrosoftGraphDomainInner body)"
  name: "createDomainWithResponseAsync(MicrosoftGraphDomainInner body)"
  nameWithType: "DomainsDomainsClient.createDomainWithResponseAsync(MicrosoftGraphDomainInner body)"
  summary: "Add new entity to domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "New entity."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphDomainInner>> createDomainWithResponseAsync(MicrosoftGraphDomainInner body)"
  returns:
    description: "domain."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.deleteDomain(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.deleteDomain(String domainId)"
  name: "deleteDomain(String domainId)"
  nameWithType: "DomainsDomainsClient.deleteDomain(String domainId)"
  summary: "Delete entity from domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteDomain(String domainId)"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.deleteDomainAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.deleteDomainAsync(String domainId)"
  name: "deleteDomainAsync(String domainId)"
  nameWithType: "DomainsDomainsClient.deleteDomainAsync(String domainId)"
  summary: "Delete entity from domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteDomainAsync(String domainId)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.deleteDomainAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.deleteDomainAsync(String domainId, String ifMatch)"
  name: "deleteDomainAsync(String domainId, String ifMatch)"
  nameWithType: "DomainsDomainsClient.deleteDomainAsync(String domainId, String ifMatch)"
  summary: "Delete entity from domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteDomainAsync(String domainId, String ifMatch)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.deleteDomainWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.deleteDomainWithResponse(String domainId, String ifMatch, Context context)"
  name: "deleteDomainWithResponse(String domainId, String ifMatch, Context context)"
  nameWithType: "DomainsDomainsClient.deleteDomainWithResponse(String domainId, String ifMatch, Context context)"
  summary: "Delete entity from domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteDomainWithResponse(String domainId, String ifMatch, Context context)"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.deleteDomainWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.deleteDomainWithResponseAsync(String domainId, String ifMatch)"
  name: "deleteDomainWithResponseAsync(String domainId, String ifMatch)"
  nameWithType: "DomainsDomainsClient.deleteDomainWithResponseAsync(String domainId, String ifMatch)"
  summary: "Delete entity from domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteDomainWithResponseAsync(String domainId, String ifMatch)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.getDomain(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.getDomain(String domainId)"
  name: "getDomain(String domainId)"
  nameWithType: "DomainsDomainsClient.getDomain(String domainId)"
  summary: "Get entity from domains by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphDomainInner getDomain(String domainId)"
  returns:
    description: "entity from domains by key."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.getDomainAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.getDomainAsync(String domainId)"
  name: "getDomainAsync(String domainId)"
  nameWithType: "DomainsDomainsClient.getDomainAsync(String domainId)"
  summary: "Get entity from domains by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphDomainInner> getDomainAsync(String domainId)"
  returns:
    description: "entity from domains by key."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.getDomainAsync(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.getDomainAsync(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  name: "getDomainAsync(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  nameWithType: "DomainsDomainsClient.getDomainAsync(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  summary: "Get entity from domains by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect&text=DomainsDomainSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand&text=DomainsDomainExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphDomainInner> getDomainAsync(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  returns:
    description: "entity from domains by key."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.getDomainWithResponse(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.getDomainWithResponse(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand, Context context)"
  name: "getDomainWithResponse(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand, Context context)"
  nameWithType: "DomainsDomainsClient.getDomainWithResponse(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand, Context context)"
  summary: "Get entity from domains by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect&text=DomainsDomainSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand&text=DomainsDomainExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphDomainInner> getDomainWithResponse(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand, Context context)"
  returns:
    description: "entity from domains by key."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.getDomainWithResponseAsync(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.getDomainWithResponseAsync(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  name: "getDomainWithResponseAsync(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  nameWithType: "DomainsDomainsClient.getDomainWithResponseAsync(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  summary: "Get entity from domains by key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect&text=DomainsDomainSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand&text=DomainsDomainExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphDomainInner>> getDomainWithResponseAsync(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  returns:
    description: "entity from domains by key."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.listDomain()"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.listDomain()"
  name: "listDomain()"
  nameWithType: "DomainsDomainsClient.listDomain()"
  summary: "Get entities from domains."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<MicrosoftGraphDomainInner> listDomain()"
  returns:
    description: "entities from domains."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.listDomain(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.listDomain(Integer top, Integer skip, String search, String filter, Boolean count, List<DomainsDomainOrderby> orderby, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand, Context context)"
  name: "listDomain(Integer top, Integer skip, String search, String filter, Boolean count, List<DomainsDomainOrderby> orderby, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand, Context context)"
  nameWithType: "DomainsDomainsClient.listDomain(Integer top, Integer skip, String search, String filter, Boolean count, List<DomainsDomainOrderby> orderby, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand, Context context)"
  summary: "Get entities from domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainOrderby&text=DomainsDomainOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect&text=DomainsDomainSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand&text=DomainsDomainExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDomainInner> listDomain(Integer top, Integer skip, String search, String filter, Boolean count, List<DomainsDomainOrderby> orderby, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand, Context context)"
  returns:
    description: "entities from domains."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.listDomainAsync()"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.listDomainAsync()"
  name: "listDomainAsync()"
  nameWithType: "DomainsDomainsClient.listDomainAsync()"
  summary: "Get entities from domains."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<MicrosoftGraphDomainInner> listDomainAsync()"
  returns:
    description: "entities from domains."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.listDomainAsync(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.listDomainAsync(Integer top, Integer skip, String search, String filter, Boolean count, List<DomainsDomainOrderby> orderby, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  name: "listDomainAsync(Integer top, Integer skip, String search, String filter, Boolean count, List<DomainsDomainOrderby> orderby, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  nameWithType: "DomainsDomainsClient.listDomainAsync(Integer top, Integer skip, String search, String filter, Boolean count, List<DomainsDomainOrderby> orderby, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  summary: "Get entities from domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainOrderby&text=DomainsDomainOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect&text=DomainsDomainSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand&text=DomainsDomainExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDomainInner> listDomainAsync(Integer top, Integer skip, String search, String filter, Boolean count, List<DomainsDomainOrderby> orderby, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  returns:
    description: "entities from domains."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.updateDomain(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.updateDomain(String domainId, MicrosoftGraphDomainInner body)"
  name: "updateDomain(String domainId, MicrosoftGraphDomainInner body)"
  nameWithType: "DomainsDomainsClient.updateDomain(String domainId, MicrosoftGraphDomainInner body)"
  summary: "Update entity in domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateDomain(String domainId, MicrosoftGraphDomainInner body)"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.updateDomainAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.updateDomainAsync(String domainId, MicrosoftGraphDomainInner body)"
  name: "updateDomainAsync(String domainId, MicrosoftGraphDomainInner body)"
  nameWithType: "DomainsDomainsClient.updateDomainAsync(String domainId, MicrosoftGraphDomainInner body)"
  summary: "Update entity in domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updateDomainAsync(String domainId, MicrosoftGraphDomainInner body)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.updateDomainWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.updateDomainWithResponse(String domainId, MicrosoftGraphDomainInner body, Context context)"
  name: "updateDomainWithResponse(String domainId, MicrosoftGraphDomainInner body, Context context)"
  nameWithType: "DomainsDomainsClient.updateDomainWithResponse(String domainId, MicrosoftGraphDomainInner body, Context context)"
  summary: "Update entity in domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updateDomainWithResponse(String domainId, MicrosoftGraphDomainInner body, Context context)"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.updateDomainWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.DomainsDomainsClient.updateDomainWithResponseAsync(String domainId, MicrosoftGraphDomainInner body)"
  name: "updateDomainWithResponseAsync(String domainId, MicrosoftGraphDomainInner body)"
  nameWithType: "DomainsDomainsClient.updateDomainWithResponseAsync(String domainId, MicrosoftGraphDomainInner body)"
  summary: "Update entity in domains."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updateDomainWithResponseAsync(String domainId, MicrosoftGraphDomainInner body)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.14.0
