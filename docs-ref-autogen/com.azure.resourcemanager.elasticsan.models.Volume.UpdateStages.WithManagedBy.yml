### YamlMime:JavaType
uid: "com.azure.resourcemanager.elasticsan.models.Volume.UpdateStages.WithManagedBy"
fullName: "com.azure.resourcemanager.elasticsan.models.Volume.UpdateStages.WithManagedBy"
name: "Volume.UpdateStages.WithManagedBy"
nameWithType: "Volume.UpdateStages.WithManagedBy"
summary: "The stage of the Volume update allowing to specify managed<wbr>By."
syntax: "public static interface **Volume.UpdateStages.WithManagedBy**"
methods:
- uid: "com.azure.resourcemanager.elasticsan.models.Volume.UpdateStages.WithManagedBy.withManagedBy(com.azure.resourcemanager.elasticsan.models.ManagedByInfo)"
  fullName: "com.azure.resourcemanager.elasticsan.models.Volume.UpdateStages.WithManagedBy.withManagedBy(ManagedByInfo managedBy)"
  name: "withManagedBy(ManagedByInfo managedBy)"
  nameWithType: "Volume.UpdateStages.WithManagedBy.withManagedBy(ManagedByInfo managedBy)"
  summary: "Specifies the managed<wbr>By property: Parent resource information.."
  modifiers:
  - "abstract"
  parameters:
  - description: "Parent resource information."
    name: "managedBy"
    type: "<xref href=\"com.azure.resourcemanager.elasticsan.models.ManagedByInfo?alt=com.azure.resourcemanager.elasticsan.models.ManagedByInfo&text=ManagedByInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Volume.Update withManagedBy(ManagedByInfo managedBy)"
  desc: "Specifies the managedBy property: Parent resource information.."
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.elasticsan.models.Volume.Update?alt=com.azure.resourcemanager.elasticsan.models.Volume.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the Volume update allowing to specify managedBy."
metadata: {}
package: "com.azure.resourcemanager.elasticsan.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-elasticsan:1.1.0
