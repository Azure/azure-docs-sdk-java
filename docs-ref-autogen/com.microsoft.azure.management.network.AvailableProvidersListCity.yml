### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.network.AvailableProvidersListCity
  id: AvailableProvidersListCity
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network
  children:
  - com.microsoft.azure.management.network.AvailableProvidersListCity.AvailableProvidersListCity()
  - com.microsoft.azure.management.network.AvailableProvidersListCity.cityName()
  - com.microsoft.azure.management.network.AvailableProvidersListCity.providers()
  - com.microsoft.azure.management.network.AvailableProvidersListCity.withCityName(java.lang.String)
  - com.microsoft.azure.management.network.AvailableProvidersListCity.withProviders(java.util.List<java.lang.String>)
  langs:
  - java
  name: AvailableProvidersListCity
  nameWithType: AvailableProvidersListCity
  fullName: com.microsoft.azure.management.network.AvailableProvidersListCity
  type: Class
  package: com.microsoft.azure.management.network
  summary: City or town details.
  syntax:
    content: public class AvailableProvidersListCity
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.network.AvailableProvidersListCity.AvailableProvidersListCity()
  id: AvailableProvidersListCity()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.AvailableProvidersListCity
  langs:
  - java
  name: AvailableProvidersListCity()
  nameWithType: AvailableProvidersListCity.AvailableProvidersListCity()
  fullName: com.microsoft.azure.management.network.AvailableProvidersListCity.AvailableProvidersListCity()
  overload: com.microsoft.azure.management.network.AvailableProvidersListCity.AvailableProvidersListCity*
  type: Constructor
  package: com.microsoft.azure.management.network
  syntax:
    content: public AvailableProvidersListCity()
- uid: com.microsoft.azure.management.network.AvailableProvidersListCity.cityName()
  id: cityName()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.AvailableProvidersListCity
  langs:
  - java
  name: cityName()
  nameWithType: AvailableProvidersListCity.cityName()
  fullName: com.microsoft.azure.management.network.AvailableProvidersListCity.cityName()
  overload: com.microsoft.azure.management.network.AvailableProvidersListCity.cityName*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Get the city or town name.
  syntax:
    content: public String cityName()
    return:
      type: java.lang.String
      description: the cityName value
- uid: com.microsoft.azure.management.network.AvailableProvidersListCity.providers()
  id: providers()
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.AvailableProvidersListCity
  langs:
  - java
  name: providers()
  nameWithType: AvailableProvidersListCity.providers()
  fullName: com.microsoft.azure.management.network.AvailableProvidersListCity.providers()
  overload: com.microsoft.azure.management.network.AvailableProvidersListCity.providers*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Get a list of Internet service providers.
  syntax:
    content: public List<String> providers()
    return:
      type: java.util.List<java.lang.String>
      description: the providers value
- uid: com.microsoft.azure.management.network.AvailableProvidersListCity.withCityName(java.lang.String)
  id: withCityName(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.AvailableProvidersListCity
  langs:
  - java
  name: withCityName(String cityName)
  nameWithType: AvailableProvidersListCity.withCityName(String cityName)
  fullName: com.microsoft.azure.management.network.AvailableProvidersListCity.withCityName(String cityName)
  overload: com.microsoft.azure.management.network.AvailableProvidersListCity.withCityName*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Set the city or town name.
  syntax:
    content: public AvailableProvidersListCity withCityName(String cityName)
    parameters:
    - id: cityName
      type: java.lang.String
      description: the cityName value to set
    return:
      type: com.microsoft.azure.management.network.AvailableProvidersListCity
      description: the AvailableProvidersListCity object itself.
- uid: com.microsoft.azure.management.network.AvailableProvidersListCity.withProviders(java.util.List<java.lang.String>)
  id: withProviders(java.util.List<java.lang.String>)
  artifact: com.microsoft.azure:azure-mgmt-network:1.36.1
  parent: com.microsoft.azure.management.network.AvailableProvidersListCity
  langs:
  - java
  name: withProviders(List<String> providers)
  nameWithType: AvailableProvidersListCity.withProviders(List<String> providers)
  fullName: com.microsoft.azure.management.network.AvailableProvidersListCity.withProviders(List<String> providers)
  overload: com.microsoft.azure.management.network.AvailableProvidersListCity.withProviders*
  type: Method
  package: com.microsoft.azure.management.network
  summary: Set a list of Internet service providers.
  syntax:
    content: public AvailableProvidersListCity withProviders(List<String> providers)
    parameters:
    - id: providers
      type: java.util.List<java.lang.String>
      description: the providers value to set
    return:
      type: com.microsoft.azure.management.network.AvailableProvidersListCity
      description: the AvailableProvidersListCity object itself.
references:
- uid: com.microsoft.azure.management.network.AvailableProvidersListCity.AvailableProvidersListCity*
  name: AvailableProvidersListCity
  nameWithType: AvailableProvidersListCity.AvailableProvidersListCity
  fullName: com.microsoft.azure.management.network.AvailableProvidersListCity.AvailableProvidersListCity
  package: com.microsoft.azure.management.network
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.network.AvailableProvidersListCity.cityName*
  name: cityName
  nameWithType: AvailableProvidersListCity.cityName
  fullName: com.microsoft.azure.management.network.AvailableProvidersListCity.cityName
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.AvailableProvidersListCity.withCityName*
  name: withCityName
  nameWithType: AvailableProvidersListCity.withCityName
  fullName: com.microsoft.azure.management.network.AvailableProvidersListCity.withCityName
  package: com.microsoft.azure.management.network
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.network.AvailableProvidersListCity.providers*
  name: providers
  nameWithType: AvailableProvidersListCity.providers
  fullName: com.microsoft.azure.management.network.AvailableProvidersListCity.providers
  package: com.microsoft.azure.management.network
- uid: com.microsoft.azure.management.network.AvailableProvidersListCity.withProviders*
  name: withProviders
  nameWithType: AvailableProvidersListCity.withProviders
  fullName: com.microsoft.azure.management.network.AvailableProvidersListCity.withProviders
  package: com.microsoft.azure.management.network
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
