### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithRepositoriesScope
  id: WithRepositoriesScope
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry
  children:
  - com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithRepositoriesScope.withRepositoriesScope(java.lang.String)
  langs:
  - java
  name: Webhook.DefinitionStages.WithRepositoriesScope<ParentT>
  nameWithType: Webhook.DefinitionStages.WithRepositoriesScope<ParentT>
  fullName: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithRepositoriesScope<ParentT>
  type: Interface
  package: com.microsoft.azure.management.containerregistry
  summary: The stage of the webhook definition allowing to specify the scope of repositories where the event can be triggered.
  syntax:
    content: public static interface Webhook.DefinitionStages.WithRepositoriesScope<ParentT>
    typeParameters:
    - id: ParentT
- uid: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithRepositoriesScope.withRepositoriesScope(java.lang.String)
  id: withRepositoriesScope(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithRepositoriesScope
  langs:
  - java
  name: withRepositoriesScope(String repositoriesScope)
  nameWithType: Webhook.DefinitionStages.WithRepositoriesScope<ParentT>.withRepositoriesScope(String repositoriesScope)
  fullName: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithRepositoriesScope<ParentT>.withRepositoriesScope(String repositoriesScope)
  overload: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithRepositoriesScope.withRepositoriesScope*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: >-
    Specifies the scope of repositories where the event can be triggered.


    For example, 'foo:\*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest', empty means all events.
  syntax:
    content: public abstract Webhook.DefinitionStages.WithAttach<ParentT> withRepositoriesScope(String repositoriesScope)
    parameters:
    - id: repositoriesScope
      type: java.lang.String
      description: the scope of repositories where the event can be triggered; empty means all events
    return:
      type: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithAttach<ParentT>
      description: the next stage of the definition
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithAttach<ParentT>
  spec.java:
  - uid: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithAttach
    name: WithAttach
    fullName: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithAttach
  - name: <
    fullName: <
  - uid: ParentT
    name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithRepositoriesScope.withRepositoriesScope*
  name: withRepositoriesScope
  nameWithType: Webhook.DefinitionStages.WithRepositoriesScope<ParentT>.withRepositoriesScope
  fullName: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithRepositoriesScope<ParentT>.withRepositoriesScope
  package: com.microsoft.azure.management.containerregistry
- uid: ParentT
  name: ParentT
  nameWithType: ParentT
  fullName: ParentT
- uid: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithAttach
  name: Webhook.DefinitionStages.WithAttach
  nameWithType: Webhook.DefinitionStages.WithAttach
  fullName: com.microsoft.azure.management.containerregistry.Webhook.DefinitionStages.WithAttach
