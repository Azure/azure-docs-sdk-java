### YamlMime:JavaMember
uid: "com.microsoft.azure.eventhubs.PartitionReceiver.receive*"
fullName: "com.microsoft.azure.eventhubs.PartitionReceiver.receive"
name: "receive"
nameWithType: "PartitionReceiver.receive"
members:
- uid: "com.microsoft.azure.eventhubs.PartitionReceiver.receive(int)"
  fullName: "com.microsoft.azure.eventhubs.PartitionReceiver.receive(int maxEventCount)"
  name: "receive(int maxEventCount)"
  nameWithType: "PartitionReceiver.receive(int maxEventCount)"
  summary: "Receive a batch of <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref>'s from an EventHub partition\n\nSample code (sample uses sync version of the api but concept are identical):\n\n```java\nEventHubClient client = EventHubClient.createSync(\"__connection__\");\n PartitionReceiver receiver = client.createPartitionReceiverSync(\"ConsumerGroup1\", \"1\");\n Iterable receivedEvents = receiver.receiveSync();\n\n while (true)\n {\n     int batchSize = 0;\n     if (receivedEvents != null)\n     {\n         for(EventData receivedEvent: receivedEvents)\n         {\n             System.out.println(String.format(\"Message Payload: %s\", new String(receivedEvent.getBytes(), Charset.defaultCharset())));\n             System.out.println(String.format(\"Offset: %s, SeqNo: %s, EnqueueTime: %s\",\n                 receivedEvent.getSystemProperties().getOffset(),\n                 receivedEvent.getSystemProperties().getSequenceNumber(),\n                 receivedEvent.getSystemProperties().getEnqueuedTime()));\n             batchSize++;\n         }\n     }\n\n     System.out.println(String.format(\"ReceivedBatch Size: %s\", batchSize));\n     receivedEvents = receiver.receiveSync();\n }\n```"
  parameters:
  - description: "maximum number of <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref>'s that this call should return"
    name: "maxEventCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Iterable<EventData>> receive(int maxEventCount)"
  returns:
    description: "A completableFuture that will yield a batch of <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref>'s from the partition on which this receiver is created. Returns 'null' if no <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> is present."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.eventhubs.EventData?alt=com.microsoft.azure.eventhubs.EventData&text=EventData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.eventhubs"
artifact: com.microsoft.azure:azure-eventhubs:3.2.2
