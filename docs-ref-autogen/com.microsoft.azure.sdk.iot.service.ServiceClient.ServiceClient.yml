### YamlMime:JavaMember
nameWithType: ServiceClient.ServiceClient
type: constructor
members:
- fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  name: ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: ServiceClient.ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  parameters:
  - description: <p>The ConnectionString object for the IotHub </p>
    name: iotHubConnectionString
    type: <xref href="com.microsoft.azure.sdk.iot.service.IotHubConnectionString?alt=com.microsoft.azure.sdk.iot.service.IotHubConnectionString&text=IotHubConnectionString" data-throw-if-not-resolved="False"/>
  - description: <p>protocol to use </p>
    name: iotHubServiceClientProtocol
    type: <xref href="com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initialize AMQP sender using given connection string</p>

    <p></p>
  syntax: protected ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  uid: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(IotHubConnectionString,IotHubServiceClientProtocol)
- fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  name: ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  nameWithType: ServiceClient.ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  parameters:
  - description: <p>The ConnectionString object for the IotHub </p>
    name: iotHubConnectionString
    type: <xref href="com.microsoft.azure.sdk.iot.service.IotHubConnectionString?alt=com.microsoft.azure.sdk.iot.service.IotHubConnectionString&text=IotHubConnectionString" data-throw-if-not-resolved="False"/>
  - description: <p>protocol to use </p>
    name: iotHubServiceClientProtocol
    type: <xref href="com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol" data-throw-if-not-resolved="False"/>
  - description: <p>options for proxy </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.ServiceClientOptions?alt=com.microsoft.azure.sdk.iot.service.ServiceClientOptions&text=ServiceClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initialize AMQP sender using given connection string</p>

    <p></p>
  syntax: protected ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(IotHubConnectionString,IotHubServiceClientProtocol,ServiceClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  name: ServiceClient(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: ServiceClient.ServiceClient(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  parameters:
  - description: <p>The connection string for the IotHub </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>protocol to use </p>
    name: iotHubServiceClientProtocol
    type: <xref href="com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol" data-throw-if-not-resolved="False"/>
  summary: <p>Create ServiceClient from the specified connection string </p>
  syntax: public ServiceClient(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  uid: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(String,IotHubServiceClientProtocol)
- fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  name: ServiceClient(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  nameWithType: ServiceClient.ServiceClient(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  parameters:
  - description: <p>The connection string for the IotHub </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>protocol to use </p>
    name: iotHubServiceClientProtocol
    type: <xref href="com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol" data-throw-if-not-resolved="False"/>
  - description: <p>The connection options to use when connecting to the service. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.ServiceClientOptions?alt=com.microsoft.azure.sdk.iot.service.ServiceClientOptions&text=ServiceClientOptions" data-throw-if-not-resolved="False"/>
  summary: <p>Create ServiceClient from the specified connection string </p>
  syntax: public ServiceClient(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(String,IotHubServiceClientProtocol,ServiceClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(String hostName, AzureSasCredential azureSasCredential, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  name: ServiceClient(String hostName, AzureSasCredential azureSasCredential, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: ServiceClient.ServiceClient(String hostName, AzureSasCredential azureSasCredential, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SAS token provider that will be used for authentication. </p>
    name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The protocol to open the connection with. </p>
    name: iotHubServiceClientProtocol
    type: <xref href="com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a <xref uid="com.microsoft.azure.sdk.iot.service.ServiceClient" data-throw-if-not-resolved="false" data-raw-source="ServiceClient"></xref> instance with an instance of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="AzureSasCredential"></xref>.</p>

    <p></p>
  syntax: public ServiceClient(String hostName, AzureSasCredential azureSasCredential, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  uid: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(String,AzureSasCredential,IotHubServiceClientProtocol)
- fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(String hostName, AzureSasCredential azureSasCredential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  name: ServiceClient(String hostName, AzureSasCredential azureSasCredential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  nameWithType: ServiceClient.ServiceClient(String hostName, AzureSasCredential azureSasCredential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SAS token provider that will be used for authentication. </p>
    name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The protocol to open the connection with. </p>
    name: iotHubServiceClientProtocol
    type: <xref href="com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol" data-throw-if-not-resolved="False"/>
  - description: <p>The connection options to use when connecting to the service. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.ServiceClientOptions?alt=com.microsoft.azure.sdk.iot.service.ServiceClientOptions&text=ServiceClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a <xref uid="com.microsoft.azure.sdk.iot.service.ServiceClient" data-throw-if-not-resolved="false" data-raw-source="ServiceClient"></xref> instance with an instance of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="AzureSasCredential"></xref>.</p>

    <p></p>
  syntax: public ServiceClient(String hostName, AzureSasCredential azureSasCredential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(String,AzureSasCredential,IotHubServiceClientProtocol,ServiceClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  name: ServiceClient(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: ServiceClient.ServiceClient(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> that will provide authentication tokens to this library when they are needed. The provided tokens must be Json Web Tokens. </p>
    name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The protocol to open the connection with. </p>
    name: iotHubServiceClientProtocol
    type: <xref href="com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a <xref uid="com.microsoft.azure.sdk.iot.service.ServiceClient" data-throw-if-not-resolved="false" data-raw-source="ServiceClient"></xref> instance with a custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> to allow for finer grain control of authentication tokens used in the underlying connection.</p>

    <p></p>
  syntax: public ServiceClient(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  uid: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(String,TokenCredential,IotHubServiceClientProtocol)
- fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  name: ServiceClient(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  nameWithType: ServiceClient.ServiceClient(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> that will provide authentication tokens to this library when they are needed. The provided tokens must be Json Web Tokens. </p>
    name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The protocol to open the connection with. </p>
    name: iotHubServiceClientProtocol
    type: <xref href="com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol" data-throw-if-not-resolved="False"/>
  - description: <p>The connection options to use when connecting to the service. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.ServiceClientOptions?alt=com.microsoft.azure.sdk.iot.service.ServiceClientOptions&text=ServiceClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a <xref uid="com.microsoft.azure.sdk.iot.service.ServiceClient" data-throw-if-not-resolved="false" data-raw-source="ServiceClient"></xref> instance with a custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> to allow for finer grain control of authentication tokens used in the underlying connection.</p>

    <p></p>
  syntax: public ServiceClient(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(String,TokenCredential,IotHubServiceClientProtocol,ServiceClientOptions)
uid: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient*
fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient
name: ServiceClient
package: com.microsoft.azure.sdk.iot.service
metadata: {}
