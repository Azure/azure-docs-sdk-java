### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer"
fullName: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer"
name: "PathHierarchyTokenizer"
nameWithType: "PathHierarchyTokenizer"
summary: "Tokenizer for path-like hierarchies."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.search.documents.indexes.models.LexicalTokenizer.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PathHierarchyTokenizer extends LexicalTokenizer"
constructors:
- uid: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.PathHierarchyTokenizer(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.PathHierarchyTokenizer(String name)"
  name: "PathHierarchyTokenizer(String name)"
  nameWithType: "PathHierarchyTokenizer.PathHierarchyTokenizer(String name)"
  summary: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.PathHierarchyTokenizer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathHierarchyTokenizer\"></xref>."
  parameters:
  - description: "The name of the tokenizer. It must only contain letters, digits, spaces,\n dashes or underscores, can only start and end with alphanumeric\n characters, and is limited to 128 characters."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathHierarchyTokenizer(String name)"
  desc: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.PathHierarchyTokenizer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PathHierarchyTokenizer\"></xref>."
methods:
- uid: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getDelimiter()"
  fullName: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getDelimiter()"
  name: "getDelimiter()"
  nameWithType: "PathHierarchyTokenizer.getDelimiter()"
  summary: "Get the delimiter property: The delimiter character to use."
  syntax: "public Character getDelimiter()"
  desc: "Get the delimiter property: The delimiter character to use. Default is \"/\"."
  returns:
    description: "the delimiter value."
    type: "<xref href=\"java.lang.Character?alt=java.lang.Character&text=Character\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getMaxTokenLength()"
  fullName: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getMaxTokenLength()"
  name: "getMaxTokenLength()"
  nameWithType: "PathHierarchyTokenizer.getMaxTokenLength()"
  summary: "Get the max<wbr>Token<wbr>Length property: The maximum token length."
  syntax: "public Integer getMaxTokenLength()"
  desc: "Get the maxTokenLength property: The maximum token length. Default and maximum is 300."
  returns:
    description: "the maxTokenLength value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getNumberOfTokensToSkip()"
  fullName: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getNumberOfTokensToSkip()"
  name: "getNumberOfTokensToSkip()"
  nameWithType: "PathHierarchyTokenizer.getNumberOfTokensToSkip()"
  summary: "Get the number<wbr>OfTokens<wbr>ToSkip property: The number of initial tokens to skip."
  syntax: "public Integer getNumberOfTokensToSkip()"
  desc: "Get the numberOfTokensToSkip property: The number of initial tokens to skip. Default is 0."
  returns:
    description: "the numberOfTokensToSkip value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getReplacement()"
  fullName: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getReplacement()"
  name: "getReplacement()"
  nameWithType: "PathHierarchyTokenizer.getReplacement()"
  summary: "Get the replacement property: A value that, if set, replaces the delimiter character."
  syntax: "public Character getReplacement()"
  desc: "Get the replacement property: A value that, if set, replaces the delimiter character. Default is \"/\"."
  returns:
    description: "the replacement value."
    type: "<xref href=\"java.lang.Character?alt=java.lang.Character&text=Character\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.isTokenOrderReversed()"
  fullName: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.isTokenOrderReversed()"
  name: "isTokenOrderReversed()"
  nameWithType: "PathHierarchyTokenizer.isTokenOrderReversed()"
  summary: "Get the reverse<wbr>Token<wbr>Order property: A value indicating whether to generate tokens in reverse order."
  syntax: "public Boolean isTokenOrderReversed()"
  desc: "Get the reverseTokenOrder property: A value indicating whether to generate tokens in reverse order. Default is false."
  returns:
    description: "the reverseTokenOrder value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setDelimiter(java.lang.Character)"
  fullName: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setDelimiter(Character delimiter)"
  name: "setDelimiter(Character delimiter)"
  nameWithType: "PathHierarchyTokenizer.setDelimiter(Character delimiter)"
  summary: "Set the delimiter property: The delimiter character to use."
  parameters:
  - description: "the delimiter value to set."
    name: "delimiter"
    type: "<xref href=\"java.lang.Character?alt=java.lang.Character&text=Character\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathHierarchyTokenizer setDelimiter(Character delimiter)"
  desc: "Set the delimiter property: The delimiter character to use. Default is \"/\"."
  returns:
    description: "the PathHierarchyTokenizerV2 object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.PathHierarchyTokenizer?alt=com.azure.search.documents.indexes.models.PathHierarchyTokenizer&text=PathHierarchyTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setMaxTokenLength(java.lang.Integer)"
  fullName: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setMaxTokenLength(Integer maxTokenLength)"
  name: "setMaxTokenLength(Integer maxTokenLength)"
  nameWithType: "PathHierarchyTokenizer.setMaxTokenLength(Integer maxTokenLength)"
  summary: "Set the max<wbr>Token<wbr>Length property: The maximum token length."
  parameters:
  - description: "the maxTokenLength value to set."
    name: "maxTokenLength"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathHierarchyTokenizer setMaxTokenLength(Integer maxTokenLength)"
  desc: "Set the maxTokenLength property: The maximum token length. Default and maximum is 300."
  returns:
    description: "the PathHierarchyTokenizerV2 object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.PathHierarchyTokenizer?alt=com.azure.search.documents.indexes.models.PathHierarchyTokenizer&text=PathHierarchyTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setNumberOfTokensToSkip(java.lang.Integer)"
  fullName: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setNumberOfTokensToSkip(Integer numberOfTokensToSkip)"
  name: "setNumberOfTokensToSkip(Integer numberOfTokensToSkip)"
  nameWithType: "PathHierarchyTokenizer.setNumberOfTokensToSkip(Integer numberOfTokensToSkip)"
  summary: "Set the number<wbr>OfTokens<wbr>ToSkip property: The number of initial tokens to skip."
  parameters:
  - description: "the numberOfTokensToSkip value to set."
    name: "numberOfTokensToSkip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathHierarchyTokenizer setNumberOfTokensToSkip(Integer numberOfTokensToSkip)"
  desc: "Set the numberOfTokensToSkip property: The number of initial tokens to skip. Default is 0."
  returns:
    description: "the PathHierarchyTokenizerV2 object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.PathHierarchyTokenizer?alt=com.azure.search.documents.indexes.models.PathHierarchyTokenizer&text=PathHierarchyTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setReplacement(java.lang.Character)"
  fullName: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setReplacement(Character replacement)"
  name: "setReplacement(Character replacement)"
  nameWithType: "PathHierarchyTokenizer.setReplacement(Character replacement)"
  summary: "Set the replacement property: A value that, if set, replaces the delimiter character."
  parameters:
  - description: "the replacement value to set."
    name: "replacement"
    type: "<xref href=\"java.lang.Character?alt=java.lang.Character&text=Character\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathHierarchyTokenizer setReplacement(Character replacement)"
  desc: "Set the replacement property: A value that, if set, replaces the delimiter character. Default is \"/\"."
  returns:
    description: "the PathHierarchyTokenizerV2 object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.PathHierarchyTokenizer?alt=com.azure.search.documents.indexes.models.PathHierarchyTokenizer&text=PathHierarchyTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setTokenOrderReversed(java.lang.Boolean)"
  fullName: "com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setTokenOrderReversed(Boolean tokenOrderReversed)"
  name: "setTokenOrderReversed(Boolean tokenOrderReversed)"
  nameWithType: "PathHierarchyTokenizer.setTokenOrderReversed(Boolean tokenOrderReversed)"
  summary: "Set the reverse<wbr>Token<wbr>Order property: A value indicating whether to generate tokens in reverse order."
  parameters:
  - description: "the reverseTokenOrder value to set."
    name: "tokenOrderReversed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathHierarchyTokenizer setTokenOrderReversed(Boolean tokenOrderReversed)"
  desc: "Set the reverseTokenOrder property: A value indicating whether to generate tokens in reverse order. Default is false."
  returns:
    description: "the PathHierarchyTokenizerV2 object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.PathHierarchyTokenizer?alt=com.azure.search.documents.indexes.models.PathHierarchyTokenizer&text=PathHierarchyTokenizer\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Tokenizer for path-like hierarchies. This tokenizer is implemented using Apache Lucene."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.4.13
