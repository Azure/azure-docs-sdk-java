### YamlMime:JavaType
uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties"
fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties"
name: "PoolProperties"
nameWithType: "PoolProperties"
summary: "Pool properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PoolProperties"
constructors:
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.PoolProperties()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.PoolProperties()"
  name: "PoolProperties()"
  nameWithType: "PoolProperties.PoolProperties()"
  syntax: "public PoolProperties()"
methods:
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.allocationState()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.allocationState()"
  name: "allocationState()"
  nameWithType: "PoolProperties.allocationState()"
  summary: "Get the allocation<wbr>State property: Whether the pool is resizing."
  syntax: "public AllocationState allocationState()"
  desc: "Get the allocationState property: Whether the pool is resizing."
  returns:
    description: "the allocationState value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.AllocationState?alt=com.azure.resourcemanager.batch.models.AllocationState&text=AllocationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.allocationStateTransitionTime()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.allocationStateTransitionTime()"
  name: "allocationStateTransitionTime()"
  nameWithType: "PoolProperties.allocationStateTransitionTime()"
  summary: "Get the allocation<wbr>State<wbr>Transition<wbr>Time property: The time at which the pool entered its current allocation state."
  syntax: "public OffsetDateTime allocationStateTransitionTime()"
  desc: "Get the allocationStateTransitionTime property: The time at which the pool entered its current allocation state."
  returns:
    description: "the allocationStateTransitionTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.applicationLicenses()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.applicationLicenses()"
  name: "applicationLicenses()"
  nameWithType: "PoolProperties.applicationLicenses()"
  summary: "Get the application<wbr>Licenses property: The list of application licenses the Batch service will make available on each compute node in the pool."
  syntax: "public List<String> applicationLicenses()"
  desc: "Get the applicationLicenses property: The list of application licenses the Batch service will make available on each compute node in the pool. The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail."
  returns:
    description: "the applicationLicenses value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.applicationPackages()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.applicationPackages()"
  name: "applicationPackages()"
  nameWithType: "PoolProperties.applicationPackages()"
  summary: "Get the application<wbr>Packages property: The list of application packages to be installed on each compute node in the pool."
  syntax: "public List<ApplicationPackageReference> applicationPackages()"
  desc: "Get the applicationPackages property: The list of application packages to be installed on each compute node in the pool. Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool."
  returns:
    description: "the applicationPackages value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.ApplicationPackageReference?alt=com.azure.resourcemanager.batch.models.ApplicationPackageReference&text=ApplicationPackageReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.autoScaleRun()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.autoScaleRun()"
  name: "autoScaleRun()"
  nameWithType: "PoolProperties.autoScaleRun()"
  summary: "Get the auto<wbr>Scale<wbr>Run property: The results and errors from an execution of a pool autoscale formula."
  syntax: "public AutoScaleRun autoScaleRun()"
  desc: "Get the autoScaleRun property: The results and errors from an execution of a pool autoscale formula. This property is set only if the pool automatically scales, i.e. autoScaleSettings are used."
  returns:
    description: "the autoScaleRun value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.AutoScaleRun?alt=com.azure.resourcemanager.batch.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.certificates()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.certificates()"
  name: "certificates()"
  nameWithType: "PoolProperties.certificates()"
  summary: "Get the certificates property: The list of certificates to be installed on each compute node in the pool."
  syntax: "public List<CertificateReference> certificates()"
  desc: "Get the certificates property: The list of certificates to be installed on each compute node in the pool. For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ\\_BATCH\\_CERTIFICATES\\_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\\{user-name\\}/certs) and certificates are placed in that directory."
  returns:
    description: "the certificates value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.CertificateReference?alt=com.azure.resourcemanager.batch.models.CertificateReference&text=CertificateReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.creationTime()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.creationTime()"
  name: "creationTime()"
  nameWithType: "PoolProperties.creationTime()"
  summary: "Get the creation<wbr>Time property: The creation time of the pool."
  syntax: "public OffsetDateTime creationTime()"
  desc: "Get the creationTime property: The creation time of the pool."
  returns:
    description: "the creationTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.currentDedicatedNodes()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.currentDedicatedNodes()"
  name: "currentDedicatedNodes()"
  nameWithType: "PoolProperties.currentDedicatedNodes()"
  summary: "Get the current<wbr>Dedicated<wbr>Nodes property: The number of compute nodes currently in the pool."
  syntax: "public Integer currentDedicatedNodes()"
  desc: "Get the currentDedicatedNodes property: The number of compute nodes currently in the pool."
  returns:
    description: "the currentDedicatedNodes value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.currentLowPriorityNodes()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.currentLowPriorityNodes()"
  name: "currentLowPriorityNodes()"
  nameWithType: "PoolProperties.currentLowPriorityNodes()"
  summary: "Get the current<wbr>Low<wbr>Priority<wbr>Nodes property: The number of Spot/low-priority compute nodes currently in the pool."
  syntax: "public Integer currentLowPriorityNodes()"
  desc: "Get the currentLowPriorityNodes property: The number of Spot/low-priority compute nodes currently in the pool."
  returns:
    description: "the currentLowPriorityNodes value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.deploymentConfiguration()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.deploymentConfiguration()"
  name: "deploymentConfiguration()"
  nameWithType: "PoolProperties.deploymentConfiguration()"
  summary: "Get the deployment<wbr>Configuration property: Deployment configuration properties."
  syntax: "public DeploymentConfiguration deploymentConfiguration()"
  desc: "Get the deploymentConfiguration property: Deployment configuration properties. Using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS)."
  returns:
    description: "the deploymentConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DeploymentConfiguration?alt=com.azure.resourcemanager.batch.models.DeploymentConfiguration&text=DeploymentConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.displayName()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.displayName()"
  name: "displayName()"
  nameWithType: "PoolProperties.displayName()"
  summary: "Get the display<wbr>Name property: The display name for the pool."
  syntax: "public String displayName()"
  desc: "Get the displayName property: The display name for the pool. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the displayName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.interNodeCommunication()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.interNodeCommunication()"
  name: "interNodeCommunication()"
  nameWithType: "PoolProperties.interNodeCommunication()"
  summary: "Get the inter<wbr>Node<wbr>Communication property: Whether the pool permits direct communication between nodes."
  syntax: "public InterNodeCommunicationState interNodeCommunication()"
  desc: "Get the interNodeCommunication property: Whether the pool permits direct communication between nodes. This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'."
  returns:
    description: "the interNodeCommunication value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.InterNodeCommunicationState?alt=com.azure.resourcemanager.batch.models.InterNodeCommunicationState&text=InterNodeCommunicationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.lastModified()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.lastModified()"
  name: "lastModified()"
  nameWithType: "PoolProperties.lastModified()"
  summary: "Get the last<wbr>Modified property: The last modified time of the pool."
  syntax: "public OffsetDateTime lastModified()"
  desc: "Get the lastModified property: The last modified time of the pool. This is the last time at which the pool level data, such as the targetDedicatedNodes or autoScaleSettings, changed. It does not factor in node-level changes such as a compute node changing state."
  returns:
    description: "the lastModified value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.metadata()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.metadata()"
  name: "metadata()"
  nameWithType: "PoolProperties.metadata()"
  summary: "Get the metadata property: A list of name-value pairs associated with the pool as metadata."
  syntax: "public List<MetadataItem> metadata()"
  desc: "Get the metadata property: A list of name-value pairs associated with the pool as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  returns:
    description: "the metadata value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.MetadataItem?alt=com.azure.resourcemanager.batch.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.mountConfiguration()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.mountConfiguration()"
  name: "mountConfiguration()"
  nameWithType: "PoolProperties.mountConfiguration()"
  summary: "Get the mount<wbr>Configuration property: A list of file systems to mount on each node in the pool."
  syntax: "public List<MountConfiguration> mountConfiguration()"
  desc: "Get the mountConfiguration property: A list of file systems to mount on each node in the pool. This supports Azure Files, NFS, CIFS/SMB, and Blobfuse."
  returns:
    description: "the mountConfiguration value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.MountConfiguration?alt=com.azure.resourcemanager.batch.models.MountConfiguration&text=MountConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.networkConfiguration()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.networkConfiguration()"
  name: "networkConfiguration()"
  nameWithType: "PoolProperties.networkConfiguration()"
  summary: "Get the network<wbr>Configuration property: The network configuration for a pool."
  syntax: "public NetworkConfiguration networkConfiguration()"
  desc: "Get the networkConfiguration property: The network configuration for a pool."
  returns:
    description: "the networkConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NetworkConfiguration?alt=com.azure.resourcemanager.batch.models.NetworkConfiguration&text=NetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PoolProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The current state of the pool."
  syntax: "public PoolProvisioningState provisioningState()"
  desc: "Get the provisioningState property: The current state of the pool."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.PoolProvisioningState?alt=com.azure.resourcemanager.batch.models.PoolProvisioningState&text=PoolProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.provisioningStateTransitionTime()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.provisioningStateTransitionTime()"
  name: "provisioningStateTransitionTime()"
  nameWithType: "PoolProperties.provisioningStateTransitionTime()"
  summary: "Get the provisioning<wbr>State<wbr>Transition<wbr>Time property: The time at which the pool entered its current state."
  syntax: "public OffsetDateTime provisioningStateTransitionTime()"
  desc: "Get the provisioningStateTransitionTime property: The time at which the pool entered its current state."
  returns:
    description: "the provisioningStateTransitionTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.resizeOperationStatus()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.resizeOperationStatus()"
  name: "resizeOperationStatus()"
  nameWithType: "PoolProperties.resizeOperationStatus()"
  summary: "Get the resize<wbr>Operation<wbr>Status property: Details about the current or last completed resize operation."
  syntax: "public ResizeOperationStatus resizeOperationStatus()"
  desc: "Get the resizeOperationStatus property: Details about the current or last completed resize operation. Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady)."
  returns:
    description: "the resizeOperationStatus value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ResizeOperationStatus?alt=com.azure.resourcemanager.batch.models.ResizeOperationStatus&text=ResizeOperationStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.scaleSettings()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.scaleSettings()"
  name: "scaleSettings()"
  nameWithType: "PoolProperties.scaleSettings()"
  summary: "Get the scale<wbr>Settings property: Scale settings for the pool Defines the desired size of the pool."
  syntax: "public ScaleSettings scaleSettings()"
  desc: "Get the scaleSettings property: Scale settings for the pool Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes."
  returns:
    description: "the scaleSettings value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ScaleSettings?alt=com.azure.resourcemanager.batch.models.ScaleSettings&text=ScaleSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.startTask()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.startTask()"
  name: "startTask()"
  nameWithType: "PoolProperties.startTask()"
  summary: "Get the start<wbr>Task property: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged."
  syntax: "public StartTask startTask()"
  desc: "Get the startTask property: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged. In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool."
  returns:
    description: "the startTask value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.StartTask?alt=com.azure.resourcemanager.batch.models.StartTask&text=StartTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.taskSchedulingPolicy()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.taskSchedulingPolicy()"
  name: "taskSchedulingPolicy()"
  nameWithType: "PoolProperties.taskSchedulingPolicy()"
  summary: "Get the task<wbr>Scheduling<wbr>Policy property: Specifies how tasks should be distributed across compute nodes."
  syntax: "public TaskSchedulingPolicy taskSchedulingPolicy()"
  desc: "Get the taskSchedulingPolicy property: Specifies how tasks should be distributed across compute nodes. If not specified, the default is spread."
  returns:
    description: "the taskSchedulingPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.TaskSchedulingPolicy?alt=com.azure.resourcemanager.batch.models.TaskSchedulingPolicy&text=TaskSchedulingPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.taskSlotsPerNode()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.taskSlotsPerNode()"
  name: "taskSlotsPerNode()"
  nameWithType: "PoolProperties.taskSlotsPerNode()"
  summary: "Get the task<wbr>Slots<wbr>Per<wbr>Node property: The number of task slots that can be used to run concurrent tasks on a single compute node in the pool."
  syntax: "public Integer taskSlotsPerNode()"
  desc: "Get the taskSlotsPerNode property: The number of task slots that can be used to run concurrent tasks on a single compute node in the pool. The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256."
  returns:
    description: "the taskSlotsPerNode value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.userAccounts()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.userAccounts()"
  name: "userAccounts()"
  nameWithType: "PoolProperties.userAccounts()"
  summary: "Get the user<wbr>Accounts property: The list of user accounts to be created on each node in the pool."
  syntax: "public List<UserAccount> userAccounts()"
  desc: "Get the userAccounts property: The list of user accounts to be created on each node in the pool."
  returns:
    description: "the userAccounts value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.UserAccount?alt=com.azure.resourcemanager.batch.models.UserAccount&text=UserAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.validate()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.validate()"
  name: "validate()"
  nameWithType: "PoolProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.vmSize()"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.vmSize()"
  name: "vmSize()"
  nameWithType: "PoolProperties.vmSize()"
  summary: "Get the vm<wbr>Size property: The size of virtual machines in the pool."
  syntax: "public String vmSize()"
  desc: "Get the vmSize property: The size of virtual machines in the pool. All VMs in a pool are the same size. For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD\\_A0 and those with premium storage (STANDARD\\_GS, STANDARD\\_DS, and STANDARD\\_DSV2 series)."
  returns:
    description: "the vmSize value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withApplicationLicenses(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withApplicationLicenses(List<String> applicationLicenses)"
  name: "withApplicationLicenses(List<String> applicationLicenses)"
  nameWithType: "PoolProperties.withApplicationLicenses(List<String> applicationLicenses)"
  summary: "Set the application<wbr>Licenses property: The list of application licenses the Batch service will make available on each compute node in the pool."
  parameters:
  - description: "the applicationLicenses value to set."
    name: "applicationLicenses"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolProperties withApplicationLicenses(List<String> applicationLicenses)"
  desc: "Set the applicationLicenses property: The list of application licenses the Batch service will make available on each compute node in the pool. The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withApplicationPackages(java.util.List<com.azure.resourcemanager.batch.models.ApplicationPackageReference>)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withApplicationPackages(List<ApplicationPackageReference> applicationPackages)"
  name: "withApplicationPackages(List<ApplicationPackageReference> applicationPackages)"
  nameWithType: "PoolProperties.withApplicationPackages(List<ApplicationPackageReference> applicationPackages)"
  summary: "Set the application<wbr>Packages property: The list of application packages to be installed on each compute node in the pool."
  parameters:
  - description: "the applicationPackages value to set."
    name: "applicationPackages"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.ApplicationPackageReference?alt=com.azure.resourcemanager.batch.models.ApplicationPackageReference&text=ApplicationPackageReference\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolProperties withApplicationPackages(List<ApplicationPackageReference> applicationPackages)"
  desc: "Set the applicationPackages property: The list of application packages to be installed on each compute node in the pool. Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withCertificates(java.util.List<com.azure.resourcemanager.batch.models.CertificateReference>)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withCertificates(List<CertificateReference> certificates)"
  name: "withCertificates(List<CertificateReference> certificates)"
  nameWithType: "PoolProperties.withCertificates(List<CertificateReference> certificates)"
  summary: "Set the certificates property: The list of certificates to be installed on each compute node in the pool."
  parameters:
  - description: "the certificates value to set."
    name: "certificates"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.CertificateReference?alt=com.azure.resourcemanager.batch.models.CertificateReference&text=CertificateReference\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolProperties withCertificates(List<CertificateReference> certificates)"
  desc: "Set the certificates property: The list of certificates to be installed on each compute node in the pool. For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ\\_BATCH\\_CERTIFICATES\\_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\\{user-name\\}/certs) and certificates are placed in that directory."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withDeploymentConfiguration(com.azure.resourcemanager.batch.models.DeploymentConfiguration)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)"
  name: "withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)"
  nameWithType: "PoolProperties.withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)"
  summary: "Set the deployment<wbr>Configuration property: Deployment configuration properties."
  parameters:
  - description: "the deploymentConfiguration value to set."
    name: "deploymentConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DeploymentConfiguration?alt=com.azure.resourcemanager.batch.models.DeploymentConfiguration&text=DeploymentConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)"
  desc: "Set the deploymentConfiguration property: Deployment configuration properties. Using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS)."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withDisplayName(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withDisplayName(String displayName)"
  name: "withDisplayName(String displayName)"
  nameWithType: "PoolProperties.withDisplayName(String displayName)"
  summary: "Set the display<wbr>Name property: The display name for the pool."
  parameters:
  - description: "the displayName value to set."
    name: "displayName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withDisplayName(String displayName)"
  desc: "Set the displayName property: The display name for the pool. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withInterNodeCommunication(com.azure.resourcemanager.batch.models.InterNodeCommunicationState)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)"
  name: "withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)"
  nameWithType: "PoolProperties.withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)"
  summary: "Set the inter<wbr>Node<wbr>Communication property: Whether the pool permits direct communication between nodes."
  parameters:
  - description: "the interNodeCommunication value to set."
    name: "interNodeCommunication"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.InterNodeCommunicationState?alt=com.azure.resourcemanager.batch.models.InterNodeCommunicationState&text=InterNodeCommunicationState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)"
  desc: "Set the interNodeCommunication property: Whether the pool permits direct communication between nodes. This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withMetadata(java.util.List<com.azure.resourcemanager.batch.models.MetadataItem>)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withMetadata(List<MetadataItem> metadata)"
  name: "withMetadata(List<MetadataItem> metadata)"
  nameWithType: "PoolProperties.withMetadata(List<MetadataItem> metadata)"
  summary: "Set the metadata property: A list of name-value pairs associated with the pool as metadata."
  parameters:
  - description: "the metadata value to set."
    name: "metadata"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.MetadataItem?alt=com.azure.resourcemanager.batch.models.MetadataItem&text=MetadataItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolProperties withMetadata(List<MetadataItem> metadata)"
  desc: "Set the metadata property: A list of name-value pairs associated with the pool as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withMountConfiguration(java.util.List<com.azure.resourcemanager.batch.models.MountConfiguration>)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withMountConfiguration(List<MountConfiguration> mountConfiguration)"
  name: "withMountConfiguration(List<MountConfiguration> mountConfiguration)"
  nameWithType: "PoolProperties.withMountConfiguration(List<MountConfiguration> mountConfiguration)"
  summary: "Set the mount<wbr>Configuration property: A list of file systems to mount on each node in the pool."
  parameters:
  - description: "the mountConfiguration value to set."
    name: "mountConfiguration"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.MountConfiguration?alt=com.azure.resourcemanager.batch.models.MountConfiguration&text=MountConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolProperties withMountConfiguration(List<MountConfiguration> mountConfiguration)"
  desc: "Set the mountConfiguration property: A list of file systems to mount on each node in the pool. This supports Azure Files, NFS, CIFS/SMB, and Blobfuse."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withNetworkConfiguration(com.azure.resourcemanager.batch.models.NetworkConfiguration)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withNetworkConfiguration(NetworkConfiguration networkConfiguration)"
  name: "withNetworkConfiguration(NetworkConfiguration networkConfiguration)"
  nameWithType: "PoolProperties.withNetworkConfiguration(NetworkConfiguration networkConfiguration)"
  summary: "Set the network<wbr>Configuration property: The network configuration for a pool."
  parameters:
  - description: "the networkConfiguration value to set."
    name: "networkConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NetworkConfiguration?alt=com.azure.resourcemanager.batch.models.NetworkConfiguration&text=NetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withNetworkConfiguration(NetworkConfiguration networkConfiguration)"
  desc: "Set the networkConfiguration property: The network configuration for a pool."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withScaleSettings(com.azure.resourcemanager.batch.models.ScaleSettings)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withScaleSettings(ScaleSettings scaleSettings)"
  name: "withScaleSettings(ScaleSettings scaleSettings)"
  nameWithType: "PoolProperties.withScaleSettings(ScaleSettings scaleSettings)"
  summary: "Set the scale<wbr>Settings property: Scale settings for the pool Defines the desired size of the pool."
  parameters:
  - description: "the scaleSettings value to set."
    name: "scaleSettings"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ScaleSettings?alt=com.azure.resourcemanager.batch.models.ScaleSettings&text=ScaleSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withScaleSettings(ScaleSettings scaleSettings)"
  desc: "Set the scaleSettings property: Scale settings for the pool Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withStartTask(com.azure.resourcemanager.batch.models.StartTask)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withStartTask(StartTask startTask)"
  name: "withStartTask(StartTask startTask)"
  nameWithType: "PoolProperties.withStartTask(StartTask startTask)"
  summary: "Set the start<wbr>Task property: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged."
  parameters:
  - description: "the startTask value to set."
    name: "startTask"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.StartTask?alt=com.azure.resourcemanager.batch.models.StartTask&text=StartTask\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withStartTask(StartTask startTask)"
  desc: "Set the startTask property: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged. In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withTaskSchedulingPolicy(com.azure.resourcemanager.batch.models.TaskSchedulingPolicy)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)"
  name: "withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)"
  nameWithType: "PoolProperties.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)"
  summary: "Set the task<wbr>Scheduling<wbr>Policy property: Specifies how tasks should be distributed across compute nodes."
  parameters:
  - description: "the taskSchedulingPolicy value to set."
    name: "taskSchedulingPolicy"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.TaskSchedulingPolicy?alt=com.azure.resourcemanager.batch.models.TaskSchedulingPolicy&text=TaskSchedulingPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)"
  desc: "Set the taskSchedulingPolicy property: Specifies how tasks should be distributed across compute nodes. If not specified, the default is spread."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withTaskSlotsPerNode(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withTaskSlotsPerNode(Integer taskSlotsPerNode)"
  name: "withTaskSlotsPerNode(Integer taskSlotsPerNode)"
  nameWithType: "PoolProperties.withTaskSlotsPerNode(Integer taskSlotsPerNode)"
  summary: "Set the task<wbr>Slots<wbr>Per<wbr>Node property: The number of task slots that can be used to run concurrent tasks on a single compute node in the pool."
  parameters:
  - description: "the taskSlotsPerNode value to set."
    name: "taskSlotsPerNode"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withTaskSlotsPerNode(Integer taskSlotsPerNode)"
  desc: "Set the taskSlotsPerNode property: The number of task slots that can be used to run concurrent tasks on a single compute node in the pool. The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withUserAccounts(java.util.List<com.azure.resourcemanager.batch.models.UserAccount>)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withUserAccounts(List<UserAccount> userAccounts)"
  name: "withUserAccounts(List<UserAccount> userAccounts)"
  nameWithType: "PoolProperties.withUserAccounts(List<UserAccount> userAccounts)"
  summary: "Set the user<wbr>Accounts property: The list of user accounts to be created on each node in the pool."
  parameters:
  - description: "the userAccounts value to set."
    name: "userAccounts"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.UserAccount?alt=com.azure.resourcemanager.batch.models.UserAccount&text=UserAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolProperties withUserAccounts(List<UserAccount> userAccounts)"
  desc: "Set the userAccounts property: The list of user accounts to be created on each node in the pool."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withVmSize(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.fluent.models.PoolProperties.withVmSize(String vmSize)"
  name: "withVmSize(String vmSize)"
  nameWithType: "PoolProperties.withVmSize(String vmSize)"
  summary: "Set the vm<wbr>Size property: The size of virtual machines in the pool."
  parameters:
  - description: "the vmSize value to set."
    name: "vmSize"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withVmSize(String vmSize)"
  desc: "Set the vmSize property: The size of virtual machines in the pool. All VMs in a pool are the same size. For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD\\_A0 and those with premium storage (STANDARD\\_GS, STANDARD\\_DS, and STANDARD\\_DSV2 series)."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.fluent.models.PoolProperties?alt=com.azure.resourcemanager.batch.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Pool properties."
metadata: {}
package: "com.azure.resourcemanager.batch.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batch:1.0.0
