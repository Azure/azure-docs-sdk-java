### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory
  id: HttpProxySocketFactory
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport
  children:
  - com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.HttpProxySocketFactory()
  - com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.createSocket()
  langs:
  - java
  name: HttpProxySocketFactory
  nameWithType: HttpProxySocketFactory
  fullName: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory
  type: Class
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public class HttpProxySocketFactory extends SSLSocketFactory
  inheritance:
  - java.lang.Object
  - javax.net.SocketFactory
  - javax.net.ssl.SSLSocketFactory
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - javax.net.SocketFactory.createSocket()
  - javax.net.SocketFactory.createSocket(java.lang.String,int)
  - javax.net.SocketFactory.createSocket(java.lang.String,int,java.net.InetAddress,int)
  - javax.net.SocketFactory.createSocket(java.net.InetAddress,int)
  - javax.net.SocketFactory.createSocket(java.net.InetAddress,int,java.net.InetAddress,int)
  - javax.net.ssl.SSLSocketFactory.createSocket(java.net.Socket,java.io.InputStream,boolean)
  - javax.net.ssl.SSLSocketFactory.createSocket(java.net.Socket,java.lang.String,int,boolean)
  - javax.net.ssl.SSLSocketFactory.getDefault()
  - javax.net.ssl.SSLSocketFactory.getDefaultCipherSuites()
  - javax.net.ssl.SSLSocketFactory.getSupportedCipherSuites()
- uid: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.HttpProxySocketFactory()
  id: HttpProxySocketFactory()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory
  langs:
  - java
  name: HttpProxySocketFactory()
  nameWithType: HttpProxySocketFactory.HttpProxySocketFactory()
  fullName: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.HttpProxySocketFactory()
  overload: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.HttpProxySocketFactory*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public HttpProxySocketFactory()
- uid: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.createSocket()
  id: createSocket()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory
  langs:
  - java
  name: createSocket()
  nameWithType: HttpProxySocketFactory.createSocket()
  fullName: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.createSocket()
  overload: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.createSocket*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport
  syntax:
    content: public Socket createSocket()
    return:
      type: java.net.Socket
  exceptions:
  - type: java.io.IOException
references:
- uid: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.HttpProxySocketFactory*
  name: HttpProxySocketFactory
  nameWithType: HttpProxySocketFactory.HttpProxySocketFactory
  fullName: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.HttpProxySocketFactory
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.net.Socket
  spec.java:
  - uid: java.net.Socket
    name: Socket
    fullName: java.net.Socket
- uid: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.createSocket*
  name: createSocket
  nameWithType: HttpProxySocketFactory.createSocket
  fullName: com.microsoft.azure.sdk.iot.device.transport.HttpProxySocketFactory.createSocket
  package: com.microsoft.azure.sdk.iot.device.transport
- uid: javax.net.ssl.SSLSocketFactory
  name: SSLSocketFactory
  nameWithType: SSLSocketFactory
  fullName: javax.net.ssl.SSLSocketFactory
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: javax.net.SocketFactory.createSocket()
  name: SocketFactory.createSocket()
  nameWithType: SocketFactory.createSocket()
  fullName: javax.net.SocketFactory.createSocket()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: javax.net.SocketFactory.createSocket(java.lang.String,int)
  name: SocketFactory.createSocket(String,int)
  nameWithType: SocketFactory.createSocket(String,int)
  fullName: javax.net.SocketFactory.createSocket(java.lang.String,int)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: javax.net.SocketFactory.createSocket(java.lang.String,int,java.net.InetAddress,int)
  name: SocketFactory.createSocket(String,int,InetAddress,int)
  nameWithType: SocketFactory.createSocket(String,int,InetAddress,int)
  fullName: javax.net.SocketFactory.createSocket(java.lang.String,int,java.net.InetAddress,int)
- uid: javax.net.ssl.SSLSocketFactory.getSupportedCipherSuites()
  name: SSLSocketFactory.getSupportedCipherSuites()
  nameWithType: SSLSocketFactory.getSupportedCipherSuites()
  fullName: javax.net.ssl.SSLSocketFactory.getSupportedCipherSuites()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: javax.net.ssl.SSLSocketFactory.getDefault()
  name: SSLSocketFactory.getDefault()
  nameWithType: SSLSocketFactory.getDefault()
  fullName: javax.net.ssl.SSLSocketFactory.getDefault()
- uid: javax.net.ssl.SSLSocketFactory.createSocket(java.net.Socket,java.lang.String,int,boolean)
  name: SSLSocketFactory.createSocket(Socket,String,int,boolean)
  nameWithType: SSLSocketFactory.createSocket(Socket,String,int,boolean)
  fullName: javax.net.ssl.SSLSocketFactory.createSocket(java.net.Socket,java.lang.String,int,boolean)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: javax.net.SocketFactory.createSocket(java.net.InetAddress,int,java.net.InetAddress,int)
  name: SocketFactory.createSocket(InetAddress,int,InetAddress,int)
  nameWithType: SocketFactory.createSocket(InetAddress,int,InetAddress,int)
  fullName: javax.net.SocketFactory.createSocket(java.net.InetAddress,int,java.net.InetAddress,int)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: javax.net.ssl.SSLSocketFactory.getDefaultCipherSuites()
  name: SSLSocketFactory.getDefaultCipherSuites()
  nameWithType: SSLSocketFactory.getDefaultCipherSuites()
  fullName: javax.net.ssl.SSLSocketFactory.getDefaultCipherSuites()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: javax.net.ssl.SSLSocketFactory.createSocket(java.net.Socket,java.io.InputStream,boolean)
  name: SSLSocketFactory.createSocket(Socket,InputStream,boolean)
  nameWithType: SSLSocketFactory.createSocket(Socket,InputStream,boolean)
  fullName: javax.net.ssl.SSLSocketFactory.createSocket(java.net.Socket,java.io.InputStream,boolean)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: javax.net.SocketFactory.createSocket(java.net.InetAddress,int)
  name: SocketFactory.createSocket(InetAddress,int)
  nameWithType: SocketFactory.createSocket(InetAddress,int)
  fullName: javax.net.SocketFactory.createSocket(java.net.InetAddress,int)
