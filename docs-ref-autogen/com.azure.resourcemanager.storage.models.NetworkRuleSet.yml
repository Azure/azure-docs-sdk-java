### YamlMime:JavaType
uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet"
fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet"
name: "NetworkRuleSet"
nameWithType: "NetworkRuleSet"
summary: "Network rule set."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class NetworkRuleSet"
constructors:
- uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet.NetworkRuleSet()"
  fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet.NetworkRuleSet()"
  name: "NetworkRuleSet()"
  nameWithType: "NetworkRuleSet.NetworkRuleSet()"
  syntax: "public NetworkRuleSet()"
methods:
- uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet.bypass()"
  fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet.bypass()"
  name: "bypass()"
  nameWithType: "NetworkRuleSet.bypass()"
  summary: "Get the bypass property: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics."
  syntax: "public Bypass bypass()"
  returns:
    description: "the bypass value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.Bypass?alt=com.azure.resourcemanager.storage.models.Bypass&text=Bypass\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet.defaultAction()"
  fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet.defaultAction()"
  name: "defaultAction()"
  nameWithType: "NetworkRuleSet.defaultAction()"
  summary: "Get the defaultAction property: Specifies the default action of allow or deny when no other rules match."
  syntax: "public DefaultAction defaultAction()"
  returns:
    description: "the defaultAction value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.DefaultAction?alt=com.azure.resourcemanager.storage.models.DefaultAction&text=DefaultAction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet.ipRules()"
  fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet.ipRules()"
  name: "ipRules()"
  nameWithType: "NetworkRuleSet.ipRules()"
  summary: "Get the ipRules property: Sets the IP ACL rules."
  syntax: "public List<IpRule> ipRules()"
  returns:
    description: "the ipRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storage.models.IpRule?alt=com.azure.resourcemanager.storage.models.IpRule&text=IpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet.resourceAccessRules()"
  fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet.resourceAccessRules()"
  name: "resourceAccessRules()"
  nameWithType: "NetworkRuleSet.resourceAccessRules()"
  summary: "Get the resourceAccessRules property: Sets the resource access rules."
  syntax: "public List<ResourceAccessRule> resourceAccessRules()"
  returns:
    description: "the resourceAccessRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storage.models.ResourceAccessRule?alt=com.azure.resourcemanager.storage.models.ResourceAccessRule&text=ResourceAccessRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet.validate()"
  fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet.validate()"
  name: "validate()"
  nameWithType: "NetworkRuleSet.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet.virtualNetworkRules()"
  fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet.virtualNetworkRules()"
  name: "virtualNetworkRules()"
  nameWithType: "NetworkRuleSet.virtualNetworkRules()"
  summary: "Get the virtualNetworkRules property: Sets the virtual network rules."
  syntax: "public List<VirtualNetworkRule> virtualNetworkRules()"
  returns:
    description: "the virtualNetworkRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storage.models.VirtualNetworkRule?alt=com.azure.resourcemanager.storage.models.VirtualNetworkRule&text=VirtualNetworkRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet.withBypass(com.azure.resourcemanager.storage.models.Bypass)"
  fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet.withBypass(Bypass bypass)"
  name: "withBypass(Bypass bypass)"
  nameWithType: "NetworkRuleSet.withBypass(Bypass bypass)"
  summary: "Set the bypass property: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics."
  parameters:
  - description: "the bypass value to set."
    name: "bypass"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.Bypass?alt=com.azure.resourcemanager.storage.models.Bypass&text=Bypass\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkRuleSet withBypass(Bypass bypass)"
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.NetworkRuleSet?alt=com.azure.resourcemanager.storage.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet.withDefaultAction(com.azure.resourcemanager.storage.models.DefaultAction)"
  fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet.withDefaultAction(DefaultAction defaultAction)"
  name: "withDefaultAction(DefaultAction defaultAction)"
  nameWithType: "NetworkRuleSet.withDefaultAction(DefaultAction defaultAction)"
  summary: "Set the defaultAction property: Specifies the default action of allow or deny when no other rules match."
  parameters:
  - description: "the defaultAction value to set."
    name: "defaultAction"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.DefaultAction?alt=com.azure.resourcemanager.storage.models.DefaultAction&text=DefaultAction\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkRuleSet withDefaultAction(DefaultAction defaultAction)"
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.NetworkRuleSet?alt=com.azure.resourcemanager.storage.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet.withIpRules(java.util.List<com.azure.resourcemanager.storage.models.IpRule>)"
  fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet.withIpRules(List<IpRule> ipRules)"
  name: "withIpRules(List<IpRule> ipRules)"
  nameWithType: "NetworkRuleSet.withIpRules(List<IpRule> ipRules)"
  summary: "Set the ipRules property: Sets the IP ACL rules."
  parameters:
  - description: "the ipRules value to set."
    name: "ipRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storage.models.IpRule?alt=com.azure.resourcemanager.storage.models.IpRule&text=IpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkRuleSet withIpRules(List<IpRule> ipRules)"
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.NetworkRuleSet?alt=com.azure.resourcemanager.storage.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet.withResourceAccessRules(java.util.List<com.azure.resourcemanager.storage.models.ResourceAccessRule>)"
  fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet.withResourceAccessRules(List<ResourceAccessRule> resourceAccessRules)"
  name: "withResourceAccessRules(List<ResourceAccessRule> resourceAccessRules)"
  nameWithType: "NetworkRuleSet.withResourceAccessRules(List<ResourceAccessRule> resourceAccessRules)"
  summary: "Set the resourceAccessRules property: Sets the resource access rules."
  parameters:
  - description: "the resourceAccessRules value to set."
    name: "resourceAccessRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storage.models.ResourceAccessRule?alt=com.azure.resourcemanager.storage.models.ResourceAccessRule&text=ResourceAccessRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkRuleSet withResourceAccessRules(List<ResourceAccessRule> resourceAccessRules)"
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.NetworkRuleSet?alt=com.azure.resourcemanager.storage.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.NetworkRuleSet.withVirtualNetworkRules(java.util.List<com.azure.resourcemanager.storage.models.VirtualNetworkRule>)"
  fullName: "com.azure.resourcemanager.storage.models.NetworkRuleSet.withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules)"
  name: "withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules)"
  nameWithType: "NetworkRuleSet.withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules)"
  summary: "Set the virtualNetworkRules property: Sets the virtual network rules."
  parameters:
  - description: "the virtualNetworkRules value to set."
    name: "virtualNetworkRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storage.models.VirtualNetworkRule?alt=com.azure.resourcemanager.storage.models.VirtualNetworkRule&text=VirtualNetworkRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkRuleSet withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules)"
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.NetworkRuleSet?alt=com.azure.resourcemanager.storage.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.storage.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.14.0
