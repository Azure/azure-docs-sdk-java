### YamlMime:JavaMember
uid: "com.azure.data.schemaregistry.SchemaRegistryAsyncClient.registerSchemaWithResponse*"
fullName: "com.azure.data.schemaregistry.SchemaRegistryAsyncClient.registerSchemaWithResponse"
name: "registerSchemaWithResponse"
nameWithType: "SchemaRegistryAsyncClient.registerSchemaWithResponse"
members:
- uid: "com.azure.data.schemaregistry.SchemaRegistryAsyncClient.registerSchemaWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SchemaFormat)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryAsyncClient.registerSchemaWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  name: "registerSchemaWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  nameWithType: "SchemaRegistryAsyncClient.registerSchemaWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  summary: "Registers a new schema in the specified schema group with the given schema name. If a schema **does not exist**does not exist with the same `groupName`, `name`, `format`, and `schemaDefinition`, it is added to the Schema Registry Instance and assigned a schema id. If a schema exists with a matching `groupName`, `name`, `format`, and `schemaDefinition`, the id of that schema is returned. If the Schema Registry instance contains an existing `groupName`, `name`, and `format` but the `schemaDefinition` is different, it is considered a new version, and schema id is assigned to it."
  parameters:
  - description: "The schema group."
    name: "groupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The schema name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The string representation of the schema."
    name: "schemaDefinition"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The serialization type of this schema."
    name: "format"
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaFormat?alt=com.azure.data.schemaregistry.models.SchemaFormat&text=SchemaFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SchemaProperties>> registerSchemaWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  returns:
    description: "The schema properties on successful registration of the schema."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.models.SchemaProperties?alt=com.azure.data.schemaregistry.models.SchemaProperties&text=SchemaProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.data.schemaregistry"
artifact: com.azure:azure-data-schemaregistry:1.1.0
