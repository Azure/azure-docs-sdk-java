### YamlMime:JavaMember
uid: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.createOrUpdateIndexer*"
fullName: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.createOrUpdateIndexer"
name: "createOrUpdateIndexer"
nameWithType: "SearchIndexerAsyncClient.createOrUpdateIndexer"
members:
- uid: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.createOrUpdateIndexer(com.azure.search.documents.indexes.models.SearchIndexer)"
  fullName: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.createOrUpdateIndexer(SearchIndexer indexer)"
  name: "createOrUpdateIndexer(SearchIndexer indexer)"
  nameWithType: "SearchIndexerAsyncClient.createOrUpdateIndexer(SearchIndexer indexer)"
  summary: "Creates a new Azure Cognitive Search indexer or updates an indexer if it already exists.\n\n**Code Sample**\n\nCreate or update search indexer named \"searchIndexer\".\n\n```java\nsearchIndexerAsyncClient.getIndexer(\"searchIndexer\")\n     .flatMap(searchIndexerFromService -> {\n         searchIndexerFromService.setFieldMappings(Collections.singletonList(\n             new FieldMapping(\"hotelName\").setTargetFieldName(\"HotelName\")));\n         return searchIndexerAsyncClient.createOrUpdateIndexer(searchIndexerFromService);\n     })\n     .subscribe(updatedIndexer ->\n         System.out.printf(\"The indexer name is %s. The target field name of indexer is %s.%n\",\n         updatedIndexer.getName(), updatedIndexer.getFieldMappings().get(0).getTargetFieldName()));\n```"
  parameters:
  - description: "The definition of the indexer to create or update."
    name: "indexer"
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndexer?alt=com.azure.search.documents.indexes.models.SearchIndexer&text=SearchIndexer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SearchIndexer> createOrUpdateIndexer(SearchIndexer indexer)"
  returns:
    description: "a response containing the created Indexer."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchIndexer?alt=com.azure.search.documents.indexes.models.SearchIndexer&text=SearchIndexer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.search.documents.indexes"
artifact: com.azure:azure-search-documents:11.1.3
