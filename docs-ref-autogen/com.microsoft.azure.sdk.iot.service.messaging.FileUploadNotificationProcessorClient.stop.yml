### YamlMime:JavaMember
nameWithType: FileUploadNotificationProcessorClient.stop
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotificationProcessorClient.stop()
  name: stop()
  nameWithType: FileUploadNotificationProcessorClient.stop()
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if this function is interrupted while waiting for the connection to close down all network resources. </p>
  returns:
    type: <xref href="synchronized+void?alt=synchronized+void&text=synchronized+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Stops this client from processing any more file upload notifications and releases all network resources tied to it. Once stopped, this client can be restarted by calling <xref uid="com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotificationProcessorClient.start()" data-throw-if-not-resolved="false" data-raw-source="start()"></xref>. If this client has already been stopped, this function will do nothing.</p>

    <p></p>
  syntax: public synchronized void stop()
  uid: com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotificationProcessorClient.stop()
- fullName: com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotificationProcessorClient.stop(int timeoutMilliseconds)
  name: stop(int timeoutMilliseconds)
  nameWithType: FileUploadNotificationProcessorClient.stop(int timeoutMilliseconds)
  parameters:
  - description: <p>the maximum number of milliseconds to wait for the underlying amqp connection to close. If this value is 0, it will have an infinite timeout. If the provided timeout has passed and the connection has not closed gracefully, then the connection will be forcefully closed and no exception will be thrown. </p>
    name: timeoutMilliseconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if this function is interrupted while waiting for the connection to close down all network resources. </p>
  returns:
    type: <xref href="synchronized+void?alt=synchronized+void&text=synchronized+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Stops this client from processing any more file upload notifications and releases all network resources tied to it. Once stopped, this client can be restarted by calling <xref uid="com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotificationProcessorClient.start()" data-throw-if-not-resolved="false" data-raw-source="start()"></xref>. If this client has already been stopped, this function will do nothing.</p>

    <p></p>
  syntax: public synchronized void stop(int timeoutMilliseconds)
  uid: com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotificationProcessorClient.stop(int)
uid: com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotificationProcessorClient.stop*
fullName: com.microsoft.azure.sdk.iot.service.messaging.FileUploadNotificationProcessorClient.stop
name: stop()
package: com.microsoft.azure.sdk.iot.service.messaging
metadata: {}
