### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.fluent.models.VnetInfo"
fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetInfo"
name: "VnetInfo"
nameWithType: "VnetInfo"
summary: "Virtual Network information contract."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VnetInfo"
constructors:
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.VnetInfo()"
methods:
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.certBlob()"
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.certThumbprint()"
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.dnsServers()"
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.isSwift()"
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.resyncRequired()"
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.routes()"
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.validate()"
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.vnetResourceId()"
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.withCertBlob(java.lang.String)"
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.withDnsServers(java.lang.String)"
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.withIsSwift(java.lang.Boolean)"
- "com.azure.resourcemanager.appservice.fluent.models.VnetInfo.withVnetResourceId(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.appservice.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.13.0
