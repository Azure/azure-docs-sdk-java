### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper"
  id: "ProxyTaskGroupWrapper"
  parent: "com.microsoft.azure.management.resources.fluentcore.dag"
  children:
  - "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.ProxyTaskGroupWrapper(com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup)"
  - "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.addDependentTaskGroup(com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup)"
  - "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.addPostRunTaskGroupForActualTaskGroup(com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup)"
  - "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.isActive()"
  - "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.taskGroup()"
  langs:
  - "java"
  name: "TaskGroup.ProxyTaskGroupWrapper"
  nameWithType: "TaskGroup.ProxyTaskGroupWrapper"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper"
  type: "Class"
  package: "com.microsoft.azure.management.resources.fluentcore.dag"
  summary: "Wrapper type to simplify operations on proxy TaskGroup.\n\nA proxy TaskGroup will be activated for a TaskGroup as soon as a \"post-run\" dependent added to the actual TaskGroup via <xref uid=\"com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup(com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup)\" data-throw-if-not-resolved=\"false\">TaskGroup#addPostRunDependentTaskGroup(TaskGroup)</xref>. \"post run\" dependents are those TaskGroup which need to be invoked as part of invocation of actual TaskGroup."
  syntax:
    content: "static final class TaskGroup.ProxyTaskGroupWrapper"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.ProxyTaskGroupWrapper(com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup)"
  id: "ProxyTaskGroupWrapper(com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup)"
  parent: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper"
  langs:
  - "java"
  name: "ProxyTaskGroupWrapper(TaskGroup actualTaskGroup)"
  nameWithType: "TaskGroup.ProxyTaskGroupWrapper.ProxyTaskGroupWrapper(TaskGroup actualTaskGroup)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.ProxyTaskGroupWrapper(TaskGroup actualTaskGroup)"
  overload: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.ProxyTaskGroupWrapper*"
  type: "Constructor"
  package: "com.microsoft.azure.management.resources.fluentcore.dag"
  summary: "Creates ProxyTaskGroupWrapper."
  syntax:
    content: " ProxyTaskGroupWrapper(TaskGroup actualTaskGroup)"
    parameters:
    - id: "actualTaskGroup"
      type: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup"
      description: "the actual TaskGroup for which proxy TaskGroup will be enabled"
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.addDependentTaskGroup(com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup)"
  id: "addDependentTaskGroup(com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup)"
  parent: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper"
  langs:
  - "java"
  name: "addDependentTaskGroup(TaskGroup dependentTaskGroup)"
  nameWithType: "TaskGroup.ProxyTaskGroupWrapper.addDependentTaskGroup(TaskGroup dependentTaskGroup)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.addDependentTaskGroup(TaskGroup dependentTaskGroup)"
  overload: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.addDependentTaskGroup*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.dag"
  summary: "Add a dependent for the proxy TaskGroup."
  syntax:
    content: " void addDependentTaskGroup(TaskGroup dependentTaskGroup)"
    parameters:
    - id: "dependentTaskGroup"
      type: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup"
      description: "the dependent TaskGroup"
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.addPostRunTaskGroupForActualTaskGroup(com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup)"
  id: "addPostRunTaskGroupForActualTaskGroup(com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup)"
  parent: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper"
  langs:
  - "java"
  name: "addPostRunTaskGroupForActualTaskGroup(TaskGroup postRunTaskGroup)"
  nameWithType: "TaskGroup.ProxyTaskGroupWrapper.addPostRunTaskGroupForActualTaskGroup(TaskGroup postRunTaskGroup)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.addPostRunTaskGroupForActualTaskGroup(TaskGroup postRunTaskGroup)"
  overload: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.addPostRunTaskGroupForActualTaskGroup*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.dag"
  summary: "Add \"post-run TaskGroup\" for the \"actual TaskGroup\"."
  syntax:
    content: " void addPostRunTaskGroupForActualTaskGroup(TaskGroup postRunTaskGroup)"
    parameters:
    - id: "postRunTaskGroup"
      type: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup"
      description: "the dependency TaskGroup."
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.isActive()"
  id: "isActive()"
  parent: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper"
  langs:
  - "java"
  name: "isActive()"
  nameWithType: "TaskGroup.ProxyTaskGroupWrapper.isActive()"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.isActive()"
  overload: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.isActive*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.dag"
  syntax:
    content: " boolean isActive()"
    return:
      type: "boolean"
      description: "true if the proxy TaskGroup is enabled for original TaskGroup."
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.taskGroup()"
  id: "taskGroup()"
  parent: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper"
  langs:
  - "java"
  name: "taskGroup()"
  nameWithType: "TaskGroup.ProxyTaskGroupWrapper.taskGroup()"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.taskGroup()"
  overload: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.taskGroup*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.fluentcore.dag"
  syntax:
    content: " TaskGroup taskGroup()"
    return:
      type: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup"
      description: "the wrapped proxy task group."
references:
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup"
  name: "TaskGroup"
  nameWithType: "TaskGroup"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup"
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.ProxyTaskGroupWrapper*"
  name: "ProxyTaskGroupWrapper"
  nameWithType: "TaskGroup.ProxyTaskGroupWrapper.ProxyTaskGroupWrapper"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.ProxyTaskGroupWrapper"
  package: "com.microsoft.azure.management.resources.fluentcore.dag"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.isActive*"
  name: "isActive"
  nameWithType: "TaskGroup.ProxyTaskGroupWrapper.isActive"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.isActive"
  package: "com.microsoft.azure.management.resources.fluentcore.dag"
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.taskGroup*"
  name: "taskGroup"
  nameWithType: "TaskGroup.ProxyTaskGroupWrapper.taskGroup"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.taskGroup"
  package: "com.microsoft.azure.management.resources.fluentcore.dag"
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.addPostRunTaskGroupForActualTaskGroup*"
  name: "addPostRunTaskGroupForActualTaskGroup"
  nameWithType: "TaskGroup.ProxyTaskGroupWrapper.addPostRunTaskGroupForActualTaskGroup"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.addPostRunTaskGroupForActualTaskGroup"
  package: "com.microsoft.azure.management.resources.fluentcore.dag"
- uid: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.addDependentTaskGroup*"
  name: "addDependentTaskGroup"
  nameWithType: "TaskGroup.ProxyTaskGroupWrapper.addDependentTaskGroup"
  fullName: "com.microsoft.azure.management.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper.addDependentTaskGroup"
  package: "com.microsoft.azure.management.resources.fluentcore.dag"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
