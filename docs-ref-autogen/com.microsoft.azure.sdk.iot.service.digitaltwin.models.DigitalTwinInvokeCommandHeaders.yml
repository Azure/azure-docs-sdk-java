### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders"
fullName: "com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders"
name: "DigitalTwinInvokeCommandHeaders"
nameWithType: "DigitalTwinInvokeCommandHeaders"
summary: "Represents the headers for Invoke<wbr>Command<wbr>Async and Invoke<wbr>Component<wbr>Command<wbr>Async operation."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **DigitalTwinInvokeCommandHeaders**"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders.DigitalTwinInvokeCommandHeaders()"
  fullName: "com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders.DigitalTwinInvokeCommandHeaders()"
  name: "DigitalTwinInvokeCommandHeaders()"
  nameWithType: "DigitalTwinInvokeCommandHeaders.DigitalTwinInvokeCommandHeaders()"
  syntax: "public DigitalTwinInvokeCommandHeaders()"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders.getRequestId()"
  fullName: "com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders.getRequestId()"
  name: "getRequestId()"
  nameWithType: "DigitalTwinInvokeCommandHeaders.getRequestId()"
  syntax: "public String getRequestId()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders.setRequestId(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders.setRequestId(String requestId)"
  name: "setRequestId(String requestId)"
  nameWithType: "DigitalTwinInvokeCommandHeaders.setRequestId(String requestId)"
  parameters:
  - name: "requestId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setRequestId(String requestId)"
type: "class"
desc: "Represents the headers for InvokeCommandAsync and InvokeComponentCommandAsync operation."
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.digitaltwin.models"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.30.0
