### YamlMime:JavaMember
nameWithType: Trainings.getImagesByIds
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds()
  name: getImagesByIds()
  nameWithType: Trainings.getImagesByIds()
  returns:
    description: <p>the first stage of the getImagesByIds call </p>
    type: <xref href="TrainingsGetImagesByIdsDefinitionStages.WithProjectId?alt=TrainingsGetImagesByIdsDefinitionStages.WithProjectId&text=TrainingsGetImagesByIdsDefinitionStages.WithProjectId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used.</p>

    <p></p>
  syntax: public TrainingsGetImagesByIdsDefinitionStages.WithProjectId getImagesByIds()
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds()
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  name: getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  nameWithType: Trainings.getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  parameters:
  - description: <p>The project id. </p>
    name: projectId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: getImagesByIdsOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter&text=GetImagesByIdsOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CustomVisionErrorException?alt=CustomVisionErrorException&text=CustomVisionErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the List&lt;Image&gt; object if successful. </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image&text=Image" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used.</p>

    <p></p>
  syntax: public List<Image> getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds(UUID,GetImagesByIdsOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds*
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds()
name: getImagesByIds()
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
metadata: {}
