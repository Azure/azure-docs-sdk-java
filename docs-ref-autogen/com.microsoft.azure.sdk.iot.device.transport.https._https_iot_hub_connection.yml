### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
  id: _https_iot_hub_connection
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  children:
  - com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.close(boolean)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.getConnectionId()
  - com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.HttpsIotHubConnection(DeviceClientConfig)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.open(Queue<DeviceClientConfig>)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.receiveMessage()
  - com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.sendHttpsMessage(HttpsMessage,HttpsMethod,String,Map<String, String>)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.sendMessage(Message)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.sendMessageResult(Message,IotHubMessageResult)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.setListener(IotHubListener)
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
  langs:
  - java
  name: HttpsIotHubConnection
  nameWithType: HttpsIotHubConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java
    startLine: 25
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>An HTTPS connection between a device and an IoT Hub. Contains functionality for synchronously connecting to the different IoT Hub resource URIs. </p>"
  syntax:
    content: public class HttpsIotHubConnection implements IotHubTransportConnection
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.close(boolean)
  id: close(boolean)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
  langs:
  - java
  name: close(boolean isReconnecting)
  nameWithType: HttpsIotHubConnection.close(boolean isReconnecting)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.close(boolean isReconnecting)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.close*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java
    startLine: 294
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Closes the transport connection. </p>"
  syntax:
    content: public void close(boolean isReconnecting)
    parameters:
    - id: isReconnecting
      type: 4fc6e284
      description: <p>if the caller is in the process of reconnecting or not </p>
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.close(boolean)
  exceptions:
  - type: 848a9648
    description: <p>If any exceptions are encountered while closing. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.getConnectionId()
  id: getConnectionId()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
  langs:
  - java
  name: getConnectionId()
  nameWithType: HttpsIotHubConnection.getConnectionId()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.getConnectionId()
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.getConnectionId*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java
    startLine: 410
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Gives the UUID associated with this connection instance. This string is used in conjunction with the callbacks with connection status updates to ensure that all connection status updates are relevant to this connection object</p>\r\n<p></p>"
  syntax:
    content: public String getConnectionId()
    return:
      type: "26831127"
      description: <p>the UUID associated with this connection instance </p>
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.getConnectionId()
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.HttpsIotHubConnection(DeviceClientConfig)
  id: HttpsIotHubConnection(DeviceClientConfig)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
  langs:
  - java
  name: HttpsIotHubConnection(DeviceClientConfig config)
  nameWithType: HttpsIotHubConnection.HttpsIotHubConnection(DeviceClientConfig config)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.HttpsIotHubConnection(DeviceClientConfig config)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.HttpsIotHubConnection*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java
    startLine: 56
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Constructs an instance from the given <xref uid=\"com.microsoft.azure.sdk.iot.device._device_client_config\" data-throw-if-not-resolved=\"false\">DeviceClientConfig</xref> object.</p>\r\n<p></p>"
  syntax:
    content: public HttpsIotHubConnection(DeviceClientConfig config)
    parameters:
    - id: config
      type: com.microsoft.azure.sdk.iot.device._device_client_config
      description: <p>the client configuration. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.open(Queue<DeviceClientConfig>)
  id: open(Queue<DeviceClientConfig>)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
  langs:
  - java
  name: open(Queue<DeviceClientConfig> deviceClientConfigs)
  nameWithType: HttpsIotHubConnection.open(Queue<DeviceClientConfig> deviceClientConfigs)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.open(Queue<DeviceClientConfig> deviceClientConfigs)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.open*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java
    startLine: 275
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Opens the transport connection object </p>"
  syntax:
    content: public void open(Queue<DeviceClientConfig> deviceClientConfigs)
    parameters:
    - id: deviceClientConfigs
      type: 20d61ca6com.microsoft.azure.sdk.iot.device._device_client_configa08ddfce
      description: <p>The list of configs to use. If more than 1 configs are in this list, multiplexing will be used </p>
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.open(Queue<DeviceClientConfig>)
  exceptions:
  - type: 848a9648
    description: <p>If any exceptions are encountered while opening the connection </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.receiveMessage()
  id: receiveMessage()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
  langs:
  - java
  name: receiveMessage()
  nameWithType: HttpsIotHubConnection.receiveMessage()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.receiveMessage()
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.receiveMessage*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java
    startLine: 211
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Receives an IotHubTransportMessage, if one exists.</p>\r\n<p></p>"
  syntax: &o1
    content: public IotHubTransportMessage receiveMessage()
    return:
      type: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message
      description: <p>an IotHubTransportMessage, or null if none exists.</p>
  exceptions:
  - type: 848a9648
    description: <p>if the IoT Hub could not be reached. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.sendHttpsMessage(HttpsMessage,HttpsMethod,String,Map<String, String>)
  id: sendHttpsMessage(HttpsMessage,HttpsMethod,String,Map<String, String>)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
  langs:
  - java
  name: sendHttpsMessage(HttpsMessage httpsMessage, HttpsMethod httpsMethod, String httpsPath, Map<String, String> additionalHeaders)
  nameWithType: HttpsIotHubConnection.sendHttpsMessage(HttpsMessage httpsMessage, HttpsMethod httpsMethod, String httpsPath, Map<String, String> additionalHeaders)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.sendHttpsMessage(HttpsMessage httpsMessage, HttpsMethod httpsMethod, String httpsPath, Map<String, String> additionalHeaders)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.sendHttpsMessage*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java
    startLine: 158
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Sends an generic https message.</p>\r\n<p></p>"
  syntax:
    content: public ResponseMessage sendHttpsMessage(HttpsMessage httpsMessage, HttpsMethod httpsMethod, String httpsPath, Map<String, String> additionalHeaders)
    parameters:
    - id: httpsMessage
      type: com.microsoft.azure.sdk.iot.device.transport.https._https_message
      description: <p>the message to send. </p>
    - id: httpsMethod
      type: com.microsoft.azure.sdk.iot.device.transport.https._https_method
      description: <p>the https method (GET, POST, PUT, DELETE). </p>
    - id: httpsPath
      type: "26831127"
      description: <p>the path that will be added at the end of the URI with `/`. </p>
    - id: additionalHeaders
      type: 689c8cb5
      description: <p>any extra headers to be included in the http request </p>
    return:
      type: com.microsoft.azure.sdk.iot.device._response_message
      description: <p>the ResponseMessage including status code and payload from sending message.</p>
  exceptions:
  - type: 848a9648
    description: <p>if the IoT Hub could not be reached. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.sendMessage(Message)
  id: sendMessage(Message)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
  langs:
  - java
  name: sendMessage(Message message)
  nameWithType: HttpsIotHubConnection.sendMessage(Message message)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.sendMessage(Message message)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.sendMessage*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java
    startLine: 74
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Sends an event message.</p>\r\n<p></p>"
  syntax:
    content: public IotHubStatusCode sendMessage(Message message)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the event message.</p>
    return:
      type: com.microsoft.azure.sdk.iot.device._iot_hub_status_code
      description: <p>the IotHubStatusCode from sending the event message.</p>
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.sendMessage(Message)
  exceptions:
  - type: 848a9648
    description: <p>if the IoT Hub could not be reached. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.sendMessageResult(Message,IotHubMessageResult)
  id: sendMessageResult(Message,IotHubMessageResult)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
  langs:
  - java
  name: sendMessageResult(Message message, IotHubMessageResult result)
  nameWithType: HttpsIotHubConnection.sendMessageResult(Message message, IotHubMessageResult result)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.sendMessageResult(Message message, IotHubMessageResult result)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.sendMessageResult*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java
    startLine: 313
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Sends the message result for the previously received message.</p>\r\n<p></p>"
  syntax:
    content: public boolean sendMessageResult(Message message, IotHubMessageResult result)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message that was received from the service to send the result of </p>
    - id: result
      type: com.microsoft.azure.sdk.iot.device._iot_hub_message_result
      description: <p>the message result (one of <xref uid="" data-throw-if-not-resolved="false">IotHubMessageResult#COMPLETE</xref>, <xref uid="" data-throw-if-not-resolved="false">IotHubMessageResult#ABANDON</xref>, or <xref uid="" data-throw-if-not-resolved="false">IotHubMessageResult#REJECT</xref>).</p>
    return:
      type: 4fc6e284
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.sendMessageResult(Message,IotHubMessageResult)
  exceptions:
  - type: 848a9648
    description: >-
      <p>if<code>sendMessageResult 

          </code> is called before <xref uid="com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.receiveMessage()" data-throw-if-not-resolved="false">receiveMessage()</xref> is called. </p>
  - type: 848a9648
    description: <p>if the IoT Hub could not be reached. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.setListener(IotHubListener)
  id: setListener(IotHubListener)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
  langs:
  - java
  name: setListener(IotHubListener listener)
  nameWithType: HttpsIotHubConnection.setListener(IotHubListener listener)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.setListener(IotHubListener listener)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.setListener*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java
    startLine: 281
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: "<p>Sets a listener into the Transport Connection object. This listener updates the Transport layer of connection status updates, message arrivals, and message acknowledgements </p>"
  syntax:
    content: public void setListener(IotHubListener listener)
    parameters:
    - id: listener
      type: com.microsoft.azure.sdk.iot.device.transport._iot_hub_listener
      description: <p>the listener for connection status updates, message arrivals, and message acknowledgements </p>
  overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.setListener(IotHubListener)
  exceptions:
  - type: 848a9648
    description: <p>If the provided listener is null </p>
references:
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.HttpsIotHubConnection*
  name: HttpsIotHubConnection
  nameWithType: HttpsIotHubConnection.HttpsIotHubConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.HttpsIotHubConnection
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: 848a9648
  spec.java:
  - name: TransportException
    fullName: TransportException
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.sendMessage*
  name: sendMessage
  nameWithType: HttpsIotHubConnection.sendMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.sendMessage
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 689c8cb5
  spec.java:
  - name: Map<String, String>
    fullName: Map<String, String>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.sendHttpsMessage*
  name: sendHttpsMessage
  nameWithType: HttpsIotHubConnection.sendHttpsMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.sendHttpsMessage
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.receiveMessage*
  name: receiveMessage
  nameWithType: HttpsIotHubConnection.receiveMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.receiveMessage
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: 20d61ca6com.microsoft.azure.sdk.iot.device._device_client_configa08ddfce
  spec.java:
  - name: Queue<
    fullName: Queue<
  - uid: com.microsoft.azure.sdk.iot.device._device_client_config
    name: DeviceClientConfig
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
    href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.open*
  name: open
  nameWithType: HttpsIotHubConnection.open
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.open
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.setListener*
  name: setListener
  nameWithType: HttpsIotHubConnection.setListener
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.setListener
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.close*
  name: close
  nameWithType: HttpsIotHubConnection.close
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.close
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.sendMessageResult*
  name: sendMessageResult
  nameWithType: HttpsIotHubConnection.sendMessageResult
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.sendMessageResult
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.getConnectionId*
  name: getConnectionId
  nameWithType: HttpsIotHubConnection.getConnectionId
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.getConnectionId
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: IotHubTransportConnection
  nameWithType: IotHubTransportConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection
  type: Interface
  summary: <p>Interface of what all a Transport Connection object must do. Serves to decouple the Message Queueing of the Transport layer from the protocol specific details of the Connection layer. </p>
  syntax:
    content: public interface IotHubTransportConnection
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_listener
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_listener.yml
  name: IotHubListener
  nameWithType: IotHubListener
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
  type: Interface
  summary: <p>Callback interface for communicating connection and message status updates from individual protocol clients (mqtt, https, amqps) to the Tranpsort layer that handles queueing of messages and connecting/reconnecting/disconnecting </p>
  syntax:
    content: public interface IotHubListener
- uid: com.microsoft.azure.sdk.iot.device._device_client_config
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
  name: DeviceClientConfig
  nameWithType: DeviceClientConfig
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
  type: Class
  summary: <p>Configuration settings for an IoT Hub client. Validates all user-defined settings. </p>
  syntax:
    content: public class DeviceClientConfig
- uid: com.microsoft.azure.sdk.iot.device._message
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.device.Message
  type: Class
  syntax:
    content: public class Message
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_status_code
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_status_code.yml
  name: IotHubStatusCode
  nameWithType: IotHubStatusCode
  fullName: com.microsoft.azure.sdk.iot.device.IotHubStatusCode
  type: Enum
  summary: <p>An IoT Hub status code. Included in a message from an IoT Hub to a device. </p>
  syntax:
    content: public enum IotHubStatusCode
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.sendMessage(Message)
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: sendMessage(Message message)
  nameWithType: IotHubTransportConnection.sendMessage(Message message)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.sendMessage(Message message)
  type: Method
  summary: <p>Send a single message to the IotHub over the Transport Connection </p>
  syntax:
    content: public IotHubStatusCode sendMessage(Message message)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to send </p>
    return:
      type: com.microsoft.azure.sdk.iot.device._iot_hub_status_code
      description: <p>the status code from the service </p>
- uid: com.microsoft.azure.sdk.iot.device.exceptions._transport_exception
  parent: com.microsoft.azure.sdk.iot.device.exceptions
  href: com.microsoft.azure.sdk.iot.device.exceptions._transport_exception.yml
  name: TransportException
  nameWithType: TransportException
  fullName: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
  type: Class
  syntax:
    content: public class TransportException
- uid: com.microsoft.azure.sdk.iot.device._response_message
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._response_message.yml
  name: ResponseMessage
  nameWithType: ResponseMessage
  fullName: com.microsoft.azure.sdk.iot.device.ResponseMessage
  type: Class
  summary: <p>Extend Message to support status response </p>
  syntax:
    content: public class ResponseMessage
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_message
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_message.yml
  name: HttpsMessage
  nameWithType: HttpsMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMessage
  type: Interface
  summary: <p>An HTTPS message. An HTTPS message is distinguished from a plain IoT Hub message by its property names, which are prefixed with 'iothub-app-'; and by the explicit specification of a content-type. </p>
  syntax:
    content: public interface HttpsMessage
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_method
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_method.yml
  name: HttpsMethod
  nameWithType: HttpsMethod
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
  type: Enum
  summary: <p>The HTTPS request method (i.e. GET). </p>
  syntax:
    content: public enum HttpsMethod
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message
  parent: com.microsoft.azure.sdk.iot.device.transport
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_message.yml
  name: IotHubTransportMessage
  nameWithType: IotHubTransportMessage
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage
  type: Class
  summary: <p>Extends Message, adding transport artifacts. </p>
  syntax:
    content: public class IotHubTransportMessage
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.open(Queue<DeviceClientConfig>)
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: open(Queue<DeviceClientConfig> deviceClientConfigs)
  nameWithType: IotHubTransportConnection.open(Queue<DeviceClientConfig> deviceClientConfigs)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.open(Queue<DeviceClientConfig> deviceClientConfigs)
  type: Method
  summary: <p>Opens the transport connection object </p>
  syntax:
    content: public void open(Queue<DeviceClientConfig> deviceClientConfigs)
    parameters:
    - id: deviceClientConfigs
      type: 20d61ca6com.microsoft.azure.sdk.iot.device._device_client_configa08ddfce
      description: <p>The list of configs to use. If more than 1 configs are in this list, multiplexing will be used </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.setListener(IotHubListener)
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: setListener(IotHubListener listener)
  nameWithType: IotHubTransportConnection.setListener(IotHubListener listener)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.setListener(IotHubListener listener)
  type: Method
  summary: <p>Sets a listener into the Transport Connection object. This listener updates the Transport layer of connection status updates, message arrivals, and message acknowledgements </p>
  syntax:
    content: public void setListener(IotHubListener listener)
    parameters:
    - id: listener
      type: com.microsoft.azure.sdk.iot.device.transport._iot_hub_listener
      description: <p>the listener for connection status updates, message arrivals, and message acknowledgements </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.close(boolean)
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: close(boolean isReconnecting)
  nameWithType: IotHubTransportConnection.close(boolean isReconnecting)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.close(boolean isReconnecting)
  type: Method
  summary: <p>Closes the transport connection. </p>
  syntax:
    content: public void close(boolean isReconnecting)
    parameters:
    - id: isReconnecting
      type: 4fc6e284
      description: <p>if the caller is in the process of reconnecting or not </p>
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.sendMessageResult(Message,IotHubMessageResult)
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: sendMessageResult(Message message, IotHubMessageResult result)
  nameWithType: IotHubTransportConnection.sendMessageResult(Message message, IotHubMessageResult result)
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.sendMessageResult(Message message, IotHubMessageResult result)
  type: Method
  summary: <p>Send an acknowledgement to the IotHub for a message that the Transport layer received </p>
  syntax:
    content: public boolean sendMessageResult(Message message, IotHubMessageResult result)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to acknowledge </p>
    - id: result
      type: com.microsoft.azure.sdk.iot.device._iot_hub_message_result
      description: <p>the acknowledgement value to notify the service of </p>
    return:
      type: 4fc6e284
      description: <p>true if the acknowledgement was sent successfully, and false otherwise </p>
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_message_result
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_message_result.yml
  name: IotHubMessageResult
  nameWithType: IotHubMessageResult
  fullName: com.microsoft.azure.sdk.iot.device.IotHubMessageResult
  type: Enum
  summary: <p>A return value from a message callback that instructs an IoT Hub to complete, abandon, or reject the message. </p>
  syntax:
    content: public enum IotHubMessageResult
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.receiveMessage()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
  name: receiveMessage()
  nameWithType: HttpsIotHubConnection.receiveMessage()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.receiveMessage()
  type: Method
  summary: >-
    <p>Receives an IotHubTransportMessage, if one exists.</p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.getConnectionId()
  parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection
  href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport_connection.yml
  name: getConnectionId()
  nameWithType: IotHubTransportConnection.getConnectionId()
  fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.getConnectionId()
  type: Method
  summary: >-
    <p>Gives the UUID associated with this connection instance. This string is used in conjunction with the callbacks with connection status updates to ensure that all connection status updates are relevant to this connection object</p>

    <p></p>
  syntax:
    content: public String getConnectionId()
    return:
      type: "26831127"
      description: <p>the UUID associated with this connection instance </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_response
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_response.yml
  name: HttpsResponse
  nameWithType: HttpsResponse
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse
  type: Class
  summary: <p>An HTTPS response. Contains the status code, body, header fields, and error reason (if any). </p>
  syntax:
    content: public class HttpsResponse
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
  name: HttpsRequest
  nameWithType: HttpsRequest
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  type: Class
  summary: <p>An HTTPS request. </p>
  syntax:
    content: public class HttpsRequest
