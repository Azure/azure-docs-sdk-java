### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleProperties.withCondition*"
fullName: "com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleProperties.withCondition"
name: "withCondition"
nameWithType: "RoleEligibilityScheduleProperties.withCondition"
members:
- uid: "com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleProperties.withCondition(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleProperties.withCondition(String condition)"
  name: "withCondition(String condition)"
  nameWithType: "RoleEligibilityScheduleProperties.withCondition(String condition)"
  summary: "Set the condition property: The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource\\[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName\\] StringEqualsIgnoreCase 'foo\\_storage\\_container'."
  parameters:
  - description: "the condition value to set."
    name: "condition"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RoleEligibilityScheduleProperties withCondition(String condition)"
  returns:
    description: "the RoleEligibilityScheduleProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleProperties?alt=com.azure.resourcemanager.authorization.fluent.models.RoleEligibilityScheduleProperties&text=RoleEligibilityScheduleProperties\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.16.0
