### YamlMime:ManagedReference
items:
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  id: ShareLeaseAsyncClient
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized
  children:
  - com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.acquireLease()
  - com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.acquireLeaseWithResponse()
  - com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.breakLease()
  - com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.breakLeaseWithResponse()
  - com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.changeLease(java.lang.String)
  - com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.changeLeaseWithResponse(java.lang.String)
  - com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getAccountName()
  - com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getFileUrl()
  - com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getLeaseId()
  - com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.releaseLease()
  - com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.releaseLeaseWithResponse()
  langs:
  - java
  name: ShareLeaseAsyncClient
  nameWithType: ShareLeaseAsyncClient
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  type: Class
  package: com.azure.storage.file.share.specialized
  summary: >-
    This class provides a client that contains all the leasing operations for <xref uid="com.azure.storage.file.share.ShareFileAsyncClient" data-throw-if-not-resolved="false">files</xref>. This client acts as a supplement to that client and only handles leasing operations.


    **Instantiating a ShareLeaseAsyncClient**


    ```java

    ShareLeaseAsyncClient fileLeaseAsyncClient = new ShareLeaseClientBuilder()
         .fileAsyncClient(shareFileAsyncClient)
         .buildAsyncClient();
    ```


    View <xref uid="com.azure.storage.file.share.specialized.ShareLeaseClientBuilder" data-throw-if-not-resolved="false">this</xref> for additional ways to construct the client.


    For more information about leasing see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/lease-file
  syntax:
    content: public final class ShareLeaseAsyncClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.ShareLeaseAsyncClient(com.azure.core.http.HttpPipeline,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: ShareLeaseAsyncClient(com.azure.core.http.HttpPipeline,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  langs:
  - java
  name: ShareLeaseAsyncClient(HttpPipeline pipeline, String url, String leaseId, String accountName, String serviceVersion)
  nameWithType: ShareLeaseAsyncClient.ShareLeaseAsyncClient(HttpPipeline pipeline, String url, String leaseId, String accountName, String serviceVersion)
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.ShareLeaseAsyncClient(HttpPipeline pipeline, String url, String leaseId, String accountName, String serviceVersion)
  overload: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.ShareLeaseAsyncClient*
  type: Constructor
  package: com.azure.storage.file.share.specialized
  syntax:
    content: " ShareLeaseAsyncClient(HttpPipeline pipeline, String url, String leaseId, String accountName, String serviceVersion)"
    parameters:
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
    - id: url
      type: java.lang.String
    - id: leaseId
      type: java.lang.String
    - id: accountName
      type: java.lang.String
    - id: serviceVersion
      type: java.lang.String
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.acquireLease()
  id: acquireLease()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  langs:
  - java
  name: acquireLease()
  nameWithType: ShareLeaseAsyncClient.acquireLease()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.acquireLease()
  overload: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.acquireLease*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Acquires a lease for write and delete operations. All leases are infinite.


    **Code Samples**


    ```java

    client.acquireLease().subscribe(response -> System.out.printf("Lease ID is %s%n", response));

    ```
  syntax:
    content: public Mono<String> acquireLease()
    return:
      type: reactor.core.publisher.Mono<java.lang.String>
      description: A reactive response containing the lease ID.
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.acquireLeaseWithResponse()
  id: acquireLeaseWithResponse()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  langs:
  - java
  name: acquireLeaseWithResponse()
  nameWithType: ShareLeaseAsyncClient.acquireLeaseWithResponse()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.acquireLeaseWithResponse()
  overload: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.acquireLeaseWithResponse*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Acquires a lease for write and delete operations. All leases are infinite.


    **Code Samples**


    ```java

    client.acquireLeaseWithResponse().subscribe(response ->
         System.out.printf("Lease ID is %s%n", response.getValue()));
    ```
  syntax:
    content: public Mono<Response<String>> acquireLeaseWithResponse()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.String>>
      description: A reactive response containing the lease ID.
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.breakLease()
  id: breakLease()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  langs:
  - java
  name: breakLease()
  nameWithType: ShareLeaseAsyncClient.breakLease()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.breakLease()
  overload: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.breakLease*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Breaks the previously acquired lease, if it exists. Leases will break immediately.


    **Code Samples**


    ```java

    client.breakLease().subscribe(response ->
         System.out.println("The lease has been successfully broken"));
    ```
  syntax:
    content: public Mono<Void> breakLease()
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response signalling completion.
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.breakLeaseWithResponse()
  id: breakLeaseWithResponse()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  langs:
  - java
  name: breakLeaseWithResponse()
  nameWithType: ShareLeaseAsyncClient.breakLeaseWithResponse()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.breakLeaseWithResponse()
  overload: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.breakLeaseWithResponse*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Breaks the previously acquired lease, if it exists. Leases will break immediately.


    **Code Samples**


    ```java

    client.breakLeaseWithResponse().subscribe(response ->
         System.out.println("The lease has been successfully broken"));
    ```
  syntax:
    content: public Mono<Response<Void>> breakLeaseWithResponse()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A reactive response signalling completion.
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.changeLease(java.lang.String)
  id: changeLease(java.lang.String)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  langs:
  - java
  name: changeLease(String proposedId)
  nameWithType: ShareLeaseAsyncClient.changeLease(String proposedId)
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.changeLease(String proposedId)
  overload: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.changeLease*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Changes the lease ID.


    **Code Samples**


    ```java

    client.changeLease("proposedId").subscribe(response -> System.out.printf("Changed lease ID is %s%n", response));

    ```
  syntax:
    content: public Mono<String> changeLease(String proposedId)
    parameters:
    - id: proposedId
      type: java.lang.String
      description: A new lease ID in a valid GUID format.
    return:
      type: reactor.core.publisher.Mono<java.lang.String>
      description: A reactive response containing the new lease ID.
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.changeLeaseWithResponse(java.lang.String)
  id: changeLeaseWithResponse(java.lang.String)
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  langs:
  - java
  name: changeLeaseWithResponse(String proposedId)
  nameWithType: ShareLeaseAsyncClient.changeLeaseWithResponse(String proposedId)
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.changeLeaseWithResponse(String proposedId)
  overload: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.changeLeaseWithResponse*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Changes the lease ID.


    **Code Samples**


    ```java

    client.changeLeaseWithResponse("proposedId").subscribe(response ->
         System.out.printf("Changed lease ID is %s%n", response.getValue()));
    ```
  syntax:
    content: public Mono<Response<String>> changeLeaseWithResponse(String proposedId)
    parameters:
    - id: proposedId
      type: java.lang.String
      description: A new lease ID in a valid GUID format.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.String>>
      description: A reactive response containing the new lease ID.
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getAccountName()
  id: getAccountName()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  langs:
  - java
  name: getAccountName()
  nameWithType: ShareLeaseAsyncClient.getAccountName()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getAccountName()
  overload: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getAccountName*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: Get associated account name.
  syntax:
    content: public String getAccountName()
    return:
      type: java.lang.String
      description: account name associated with this storage resource.
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getFileUrl()
  id: getFileUrl()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  langs:
  - java
  name: getFileUrl()
  nameWithType: ShareLeaseAsyncClient.getFileUrl()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getFileUrl()
  overload: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getFileUrl*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: Gets the <xref uid="" data-throw-if-not-resolved="false">URL</xref> of the lease client.
  syntax:
    content: public String getFileUrl()
    return:
      type: java.lang.String
      description: URL of the lease client.
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getLeaseId()
  id: getLeaseId()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  langs:
  - java
  name: getLeaseId()
  nameWithType: ShareLeaseAsyncClient.getLeaseId()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getLeaseId()
  overload: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getLeaseId*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: Get the lease ID for this lease.
  syntax:
    content: public String getLeaseId()
    return:
      type: java.lang.String
      description: the lease ID.
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.releaseLease()
  id: releaseLease()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  langs:
  - java
  name: releaseLease()
  nameWithType: ShareLeaseAsyncClient.releaseLease()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.releaseLease()
  overload: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.releaseLease*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Releases the previously acquired lease.


    **Code Samples**


    ```java

    client.releaseLease().subscribe(response -> System.out.println("Completed release lease"));

    ```
  syntax:
    content: public Mono<Void> releaseLease()
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A reactive response signalling completion.
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.releaseLeaseWithResponse()
  id: releaseLeaseWithResponse()
  artifact: com.azure:azure-storage-file-share:12.6.0
  parent: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  langs:
  - java
  name: releaseLeaseWithResponse()
  nameWithType: ShareLeaseAsyncClient.releaseLeaseWithResponse()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.releaseLeaseWithResponse()
  overload: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.releaseLeaseWithResponse*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Releases the previously acquired lease.


    **Code Samples**


    ```java

    client.releaseLeaseWithResponse().subscribe(response ->
         System.out.printf("Release lease completed with status %d%n", response.getStatusCode()));
    ```
  syntax:
    content: public Mono<Response<Void>> releaseLeaseWithResponse()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A reactive response signalling completion.
references:
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.ShareLeaseAsyncClient*
  name: ShareLeaseAsyncClient
  nameWithType: ShareLeaseAsyncClient.ShareLeaseAsyncClient
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.ShareLeaseAsyncClient
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getFileUrl*
  name: getFileUrl
  nameWithType: ShareLeaseAsyncClient.getFileUrl
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getFileUrl
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getLeaseId*
  name: getLeaseId
  nameWithType: ShareLeaseAsyncClient.getLeaseId
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getLeaseId
  package: com.azure.storage.file.share.specialized
- uid: reactor.core.publisher.Mono<java.lang.String>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.acquireLease*
  name: acquireLease
  nameWithType: ShareLeaseAsyncClient.acquireLease
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.acquireLease
  package: com.azure.storage.file.share.specialized
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.String>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.acquireLeaseWithResponse*
  name: acquireLeaseWithResponse
  nameWithType: ShareLeaseAsyncClient.acquireLeaseWithResponse
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.acquireLeaseWithResponse
  package: com.azure.storage.file.share.specialized
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.releaseLease*
  name: releaseLease
  nameWithType: ShareLeaseAsyncClient.releaseLease
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.releaseLease
  package: com.azure.storage.file.share.specialized
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.releaseLeaseWithResponse*
  name: releaseLeaseWithResponse
  nameWithType: ShareLeaseAsyncClient.releaseLeaseWithResponse
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.releaseLeaseWithResponse
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.breakLease*
  name: breakLease
  nameWithType: ShareLeaseAsyncClient.breakLease
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.breakLease
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.breakLeaseWithResponse*
  name: breakLeaseWithResponse
  nameWithType: ShareLeaseAsyncClient.breakLeaseWithResponse
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.breakLeaseWithResponse
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.changeLease*
  name: changeLease
  nameWithType: ShareLeaseAsyncClient.changeLease
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.changeLease
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.changeLeaseWithResponse*
  name: changeLeaseWithResponse
  nameWithType: ShareLeaseAsyncClient.changeLeaseWithResponse
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.changeLeaseWithResponse
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getAccountName*
  name: getAccountName
  nameWithType: ShareLeaseAsyncClient.getAccountName
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient.getAccountName
  package: com.azure.storage.file.share.specialized
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
