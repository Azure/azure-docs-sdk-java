### YamlMime:JavaType
uid: "com.azure.core.util.io.IOUtils"
fullName: "com.azure.core.util.io.IOUtils"
name: "IOUtils"
nameWithType: "IOUtils"
summary: "Utilities related to IO operations that involve channels, streams, byte transfers."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class IOUtils"
methods:
- uid: "com.azure.core.util.io.IOUtils.toAsynchronousByteChannel(java.nio.channels.AsynchronousFileChannel,long)"
  fullName: "com.azure.core.util.io.IOUtils.toAsynchronousByteChannel(AsynchronousFileChannel fileChannel, long position)"
  name: "toAsynchronousByteChannel(AsynchronousFileChannel fileChannel, long position)"
  nameWithType: "IOUtils.toAsynchronousByteChannel(AsynchronousFileChannel fileChannel, long position)"
  summary: "Adapts <xref uid=\"java.nio.channels.AsynchronousFileChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousFileChannel\"></xref> to <xref uid=\"java.nio.channels.AsynchronousByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousByteChannel\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"java.nio.channels.AsynchronousFileChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousFileChannel\"></xref>."
    name: "fileChannel"
    type: "<xref href=\"java.nio.channels.AsynchronousFileChannel?alt=java.nio.channels.AsynchronousFileChannel&text=AsynchronousFileChannel\" data-throw-if-not-resolved=\"False\" />"
  - description: "The position in the file to begin writing or reading the <code>content</code>."
    name: "position"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static AsynchronousByteChannel toAsynchronousByteChannel(AsynchronousFileChannel fileChannel, long position)"
  desc: "Adapts <xref uid=\"java.nio.channels.AsynchronousFileChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousFileChannel\"></xref> to <xref uid=\"java.nio.channels.AsynchronousByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousByteChannel\"></xref>."
  returns:
    description: "A <xref uid=\"java.nio.channels.AsynchronousByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousByteChannel\"></xref> that delegates to <code>fileChannel</code>."
    type: "<xref href=\"java.nio.channels.AsynchronousByteChannel?alt=java.nio.channels.AsynchronousByteChannel&text=AsynchronousByteChannel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.io.IOUtils.transfer(java.nio.channels.ReadableByteChannel,java.nio.channels.WritableByteChannel)"
  fullName: "com.azure.core.util.io.IOUtils.transfer(ReadableByteChannel source, WritableByteChannel destination)"
  name: "transfer(ReadableByteChannel source, WritableByteChannel destination)"
  nameWithType: "IOUtils.transfer(ReadableByteChannel source, WritableByteChannel destination)"
  summary: "Transfers bytes from <xref uid=\"java.nio.channels.ReadableByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReadableByteChannel\"></xref> to <xref uid=\"java.nio.channels.WritableByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WritableByteChannel\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "A source <xref uid=\"java.nio.channels.ReadableByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReadableByteChannel\"></xref>."
    name: "source"
    type: "<xref href=\"java.nio.channels.ReadableByteChannel?alt=java.nio.channels.ReadableByteChannel&text=ReadableByteChannel\" data-throw-if-not-resolved=\"False\" />"
  - description: "A destination <xref uid=\"java.nio.channels.WritableByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WritableByteChannel\"></xref>."
    name: "destination"
    type: "<xref href=\"java.nio.channels.WritableByteChannel?alt=java.nio.channels.WritableByteChannel&text=WritableByteChannel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void transfer(ReadableByteChannel source, WritableByteChannel destination)"
  exceptions:
  - description: "When I/O operation fails."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Transfers bytes from <xref uid=\"java.nio.channels.ReadableByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReadableByteChannel\"></xref> to <xref uid=\"java.nio.channels.WritableByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WritableByteChannel\"></xref>."
- uid: "com.azure.core.util.io.IOUtils.transferAsync(java.nio.channels.ReadableByteChannel,java.nio.channels.AsynchronousByteChannel)"
  fullName: "com.azure.core.util.io.IOUtils.transferAsync(ReadableByteChannel source, AsynchronousByteChannel destination)"
  name: "transferAsync(ReadableByteChannel source, AsynchronousByteChannel destination)"
  nameWithType: "IOUtils.transferAsync(ReadableByteChannel source, AsynchronousByteChannel destination)"
  summary: "Transfers bytes from <xref uid=\"java.nio.channels.ReadableByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReadableByteChannel\"></xref> to <xref uid=\"java.nio.channels.AsynchronousByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousByteChannel\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "A source <xref uid=\"java.nio.channels.ReadableByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReadableByteChannel\"></xref>."
    name: "source"
    type: "<xref href=\"java.nio.channels.ReadableByteChannel?alt=java.nio.channels.ReadableByteChannel&text=ReadableByteChannel\" data-throw-if-not-resolved=\"False\" />"
  - description: "A destination <xref uid=\"java.nio.channels.AsynchronousByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousByteChannel\"></xref>."
    name: "destination"
    type: "<xref href=\"java.nio.channels.AsynchronousByteChannel?alt=java.nio.channels.AsynchronousByteChannel&text=AsynchronousByteChannel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Mono<Void> transferAsync(ReadableByteChannel source, AsynchronousByteChannel destination)"
  desc: "Transfers bytes from <xref uid=\"java.nio.channels.ReadableByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReadableByteChannel\"></xref> to <xref uid=\"java.nio.channels.AsynchronousByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousByteChannel\"></xref>."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when transfer is finished."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.io.IOUtils.transferStreamResponseToAsynchronousByteChannel(java.nio.channels.AsynchronousByteChannel,com.azure.core.http.rest.StreamResponse,java.util.function.BiFunction<java.lang.Throwable,java.lang.Long,reactor.core.publisher.Mono<com.azure.core.http.rest.StreamResponse>>,com.azure.core.util.ProgressReporter,int)"
  fullName: "com.azure.core.util.io.IOUtils.transferStreamResponseToAsynchronousByteChannel(AsynchronousByteChannel targetChannel, StreamResponse sourceResponse, BiFunction<Throwable,Long,Mono<StreamResponse>> onErrorResume, ProgressReporter progressReporter, int maxRetries)"
  name: "transferStreamResponseToAsynchronousByteChannel(AsynchronousByteChannel targetChannel, StreamResponse sourceResponse, BiFunction<Throwable,Long,Mono<StreamResponse>> onErrorResume, ProgressReporter progressReporter, int maxRetries)"
  nameWithType: "IOUtils.transferStreamResponseToAsynchronousByteChannel(AsynchronousByteChannel targetChannel, StreamResponse sourceResponse, BiFunction<Throwable,Long,Mono<StreamResponse>> onErrorResume, ProgressReporter progressReporter, int maxRetries)"
  summary: "Transfers the <xref uid=\"com.azure.core.http.rest.StreamResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StreamResponse\"></xref> content to <xref uid=\"java.nio.channels.AsynchronousByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousByteChannel\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The destination <xref uid=\"java.nio.channels.AsynchronousByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousByteChannel\"></xref>."
    name: "targetChannel"
    type: "<xref href=\"java.nio.channels.AsynchronousByteChannel?alt=java.nio.channels.AsynchronousByteChannel&text=AsynchronousByteChannel\" data-throw-if-not-resolved=\"False\" />"
  - description: "The initial <xref uid=\"com.azure.core.http.rest.StreamResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StreamResponse\"></xref>."
    name: "sourceResponse"
    type: "<xref href=\"com.azure.core.http.rest.StreamResponse?alt=com.azure.core.http.rest.StreamResponse&text=StreamResponse\" data-throw-if-not-resolved=\"False\" />"
  - description: "A <xref uid=\"java.util.function.BiFunction\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BiFunction\"></xref> of <xref uid=\"java.lang.Throwable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Throwable\"></xref> and <xref uid=\"java.lang.Long\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Long\"></xref> which is used to resume\n downloading when an error occurs. The function accepts a <xref uid=\"java.lang.Throwable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Throwable\"></xref> and offset at the destination\n from beginning of writing at which the error occurred."
    name: "onErrorResume"
    type: "<xref href=\"java.util.function.BiFunction?alt=java.util.function.BiFunction&text=BiFunction\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />,<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.StreamResponse?alt=com.azure.core.http.rest.StreamResponse&text=StreamResponse\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "The <xref uid=\"com.azure.core.util.ProgressReporter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProgressReporter\"></xref>."
    name: "progressReporter"
    type: "<xref href=\"com.azure.core.util.ProgressReporter?alt=com.azure.core.util.ProgressReporter&text=ProgressReporter\" data-throw-if-not-resolved=\"False\" />"
  - description: "The maximum number of times a download can be resumed when an error occurs."
    name: "maxRetries"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Mono<Void> transferStreamResponseToAsynchronousByteChannel(AsynchronousByteChannel targetChannel, StreamResponse sourceResponse, BiFunction<Throwable,Long,Mono<StreamResponse>> onErrorResume, ProgressReporter progressReporter, int maxRetries)"
  desc: "Transfers the <xref uid=\"com.azure.core.http.rest.StreamResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StreamResponse\"></xref> content to <xref uid=\"java.nio.channels.AsynchronousByteChannel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsynchronousByteChannel\"></xref>. Resumes the transfer in case of errors."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> which completion indicates successful transfer."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Utilities related to IO operations that involve channels, streams, byte transfers."
metadata: {}
package: "com.azure.core.util.io"
artifact: com.azure:azure-core:1.31.0
