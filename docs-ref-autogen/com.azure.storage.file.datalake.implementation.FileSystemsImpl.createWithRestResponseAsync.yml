### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync*"
fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync"
name: "createWithRestResponseAsync"
nameWithType: "FileSystemsImpl.createWithRestResponseAsync"
members:
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync(com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync(Context context)"
  name: "createWithRestResponseAsync(Context context)"
  nameWithType: "FileSystemsImpl.createWithRestResponseAsync(Context context)"
  summary: "Create FileSystem Create a FileSystem rooted at the specified location. If the FileSystem already exists, the operation fails. This operation does not support conditional HTTP requests."
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<FileSystemsCreateResponse> createWithRestResponseAsync(Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.implementation.models.FileSystemsCreateResponse?alt=com.azure.storage.file.datalake.implementation.models.FileSystemsCreateResponse&text=FileSystemsCreateResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.datalake.implementation.FileSystemsImpl.createWithRestResponseAsync(String properties, String requestId, Integer timeout, Context context)"
  name: "createWithRestResponseAsync(String properties, String requestId, Integer timeout, Context context)"
  nameWithType: "FileSystemsImpl.createWithRestResponseAsync(String properties, String requestId, Integer timeout, Context context)"
  summary: "Create FileSystem Create a FileSystem rooted at the specified location. If the FileSystem already exists, the operation fails. This operation does not support conditional HTTP requests."
  parameters:
  - description: "Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties."
    name: "properties"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    name: "requestId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    name: "timeout"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<FileSystemsCreateResponse> createWithRestResponseAsync(String properties, String requestId, Integer timeout, Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.implementation.models.FileSystemsCreateResponse?alt=com.azure.storage.file.datalake.implementation.models.FileSystemsCreateResponse&text=FileSystemsCreateResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.implementation"
artifact: com.azure:azure-storage-file-datalake:12.4.1
