### YamlMime:JavaType
fields:
- field:
    type: final <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness&text=Freshness" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness.DAY
  name: DAY
  nameWithType: Freshness.DAY
  summary: <p>Static value Day for Freshness. </p>
  syntax: public static final Freshness DAY= fromString("Day")
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness.DAY
- field:
    type: final <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness&text=Freshness" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness.MONTH
  name: MONTH
  nameWithType: Freshness.MONTH
  summary: <p>Static value Month for Freshness. </p>
  syntax: public static final Freshness MONTH= fromString("Month")
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness.MONTH
- field:
    type: final <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness&text=Freshness" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness.WEEK
  name: WEEK
  nameWithType: Freshness.WEEK
  summary: <p>Static value Week for Freshness. </p>
  syntax: public static final Freshness WEEK= fromString("Week")
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness.WEEK
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.rest.ExpandableStringEnum&lt;Freshness&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness.fromString(String name)
  name: fromString(String name)
  nameWithType: Freshness.fromString(String name)
  parameters:
  - description: <p>a name to look for </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the corresponding Freshness </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness&text=Freshness" data-throw-if-not-resolved="False"/>
  summary: <p>Creates or finds a Freshness from its string representation. </p>
  syntax: public static Freshness fromString(String name)
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness.fromString(String)
- fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness.values()
  name: values()
  nameWithType: Freshness.values()
  returns:
    description: <p>known Freshness values </p>
    type: Collection&lt;<xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness&text=Freshness" data-throw-if-not-resolved="False"/>&gt;
  syntax: public static Collection<Freshness> values()
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness.values()
nameWithType: Freshness
syntax: public class Freshness
type: class
uid: com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness
fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.models.Freshness
name: Freshness
package: com.microsoft.azure.cognitiveservices.search.imagesearch.models
summary: <p>Defines values for Freshness. </p>
metadata: {}
