### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner"
fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner"
name: "PolicyAssignmentInner"
nameWithType: "PolicyAssignmentInner"
summary: "The policy assignment."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PolicyAssignmentInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.PolicyAssignmentInner()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.PolicyAssignmentInner()"
  name: "PolicyAssignmentInner()"
  nameWithType: "PolicyAssignmentInner.PolicyAssignmentInner()"
  syntax: "public PolicyAssignmentInner()"
methods:
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.description()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.description()"
  name: "description()"
  nameWithType: "PolicyAssignmentInner.description()"
  summary: "Get the description property: This message will be part of response in case of policy violation."
  syntax: "public String description()"
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.displayName()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.displayName()"
  name: "displayName()"
  nameWithType: "PolicyAssignmentInner.displayName()"
  summary: "Get the displayName property: The display name of the policy assignment."
  syntax: "public String displayName()"
  returns:
    description: "the displayName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.enforcementMode()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.enforcementMode()"
  name: "enforcementMode()"
  nameWithType: "PolicyAssignmentInner.enforcementMode()"
  summary: "Get the enforcementMode property: The policy assignment enforcement mode. Possible values are Default and DoNotEnforce."
  syntax: "public EnforcementMode enforcementMode()"
  returns:
    description: "the enforcementMode value."
    type: "<xref href=\"com.azure.resourcemanager.resources.models.EnforcementMode?alt=com.azure.resourcemanager.resources.models.EnforcementMode&text=EnforcementMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.identity()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.identity()"
  name: "identity()"
  nameWithType: "PolicyAssignmentInner.identity()"
  summary: "Get the identity property: The managed identity associated with the policy assignment."
  syntax: "public Identity identity()"
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.resources.models.Identity?alt=com.azure.resourcemanager.resources.models.Identity&text=Identity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.location()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.location()"
  name: "location()"
  nameWithType: "PolicyAssignmentInner.location()"
  summary: "Get the location property: The location of the policy assignment. Only required when utilizing managed identity."
  syntax: "public String location()"
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.metadata()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.metadata()"
  name: "metadata()"
  nameWithType: "PolicyAssignmentInner.metadata()"
  summary: "Get the metadata property: The policy assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs."
  syntax: "public Object metadata()"
  returns:
    description: "the metadata value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.nonComplianceMessages()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.nonComplianceMessages()"
  name: "nonComplianceMessages()"
  nameWithType: "PolicyAssignmentInner.nonComplianceMessages()"
  summary: "Get the nonComplianceMessages property: The messages that describe why a resource is non-compliant with the policy."
  syntax: "public List<NonComplianceMessage> nonComplianceMessages()"
  returns:
    description: "the nonComplianceMessages value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.models.NonComplianceMessage?alt=com.azure.resourcemanager.resources.models.NonComplianceMessage&text=NonComplianceMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.notScopes()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.notScopes()"
  name: "notScopes()"
  nameWithType: "PolicyAssignmentInner.notScopes()"
  summary: "Get the notScopes property: The policy's excluded scopes."
  syntax: "public List<String> notScopes()"
  returns:
    description: "the notScopes value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.parameters()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.parameters()"
  name: "parameters()"
  nameWithType: "PolicyAssignmentInner.parameters()"
  summary: "Get the parameters property: The parameter values for the assigned policy rule. The keys are the parameter names."
  syntax: "public Map<String,ParameterValuesValue> parameters()"
  returns:
    description: "the parameters value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.resources.models.ParameterValuesValue?alt=com.azure.resourcemanager.resources.models.ParameterValuesValue&text=ParameterValuesValue\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.policyDefinitionId()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.policyDefinitionId()"
  name: "policyDefinitionId()"
  nameWithType: "PolicyAssignmentInner.policyDefinitionId()"
  summary: "Get the policyDefinitionId property: The ID of the policy definition or policy set definition being assigned."
  syntax: "public String policyDefinitionId()"
  returns:
    description: "the policyDefinitionId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.scope()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.scope()"
  name: "scope()"
  nameWithType: "PolicyAssignmentInner.scope()"
  summary: "Get the scope property: The scope for the policy assignment."
  syntax: "public String scope()"
  returns:
    description: "the scope value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.systemData()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.systemData()"
  name: "systemData()"
  nameWithType: "PolicyAssignmentInner.systemData()"
  summary: "Get the systemData property: The system metadata relating to this resource."
  syntax: "public SystemData systemData()"
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.validate()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.validate()"
  name: "validate()"
  nameWithType: "PolicyAssignmentInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "PolicyAssignmentInner.withDescription(String description)"
  summary: "Set the description property: This message will be part of response in case of policy violation."
  parameters:
  - description: "the description value to set."
    name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PolicyAssignmentInner withDescription(String description)"
  returns:
    description: "the PolicyAssignmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withDisplayName(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withDisplayName(String displayName)"
  name: "withDisplayName(String displayName)"
  nameWithType: "PolicyAssignmentInner.withDisplayName(String displayName)"
  summary: "Set the displayName property: The display name of the policy assignment."
  parameters:
  - description: "the displayName value to set."
    name: "displayName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PolicyAssignmentInner withDisplayName(String displayName)"
  returns:
    description: "the PolicyAssignmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withEnforcementMode(com.azure.resourcemanager.resources.models.EnforcementMode)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withEnforcementMode(EnforcementMode enforcementMode)"
  name: "withEnforcementMode(EnforcementMode enforcementMode)"
  nameWithType: "PolicyAssignmentInner.withEnforcementMode(EnforcementMode enforcementMode)"
  summary: "Set the enforcementMode property: The policy assignment enforcement mode. Possible values are Default and DoNotEnforce."
  parameters:
  - description: "the enforcementMode value to set."
    name: "enforcementMode"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.EnforcementMode?alt=com.azure.resourcemanager.resources.models.EnforcementMode&text=EnforcementMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PolicyAssignmentInner withEnforcementMode(EnforcementMode enforcementMode)"
  returns:
    description: "the PolicyAssignmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withIdentity(com.azure.resourcemanager.resources.models.Identity)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withIdentity(Identity identity)"
  name: "withIdentity(Identity identity)"
  nameWithType: "PolicyAssignmentInner.withIdentity(Identity identity)"
  summary: "Set the identity property: The managed identity associated with the policy assignment."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.Identity?alt=com.azure.resourcemanager.resources.models.Identity&text=Identity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PolicyAssignmentInner withIdentity(Identity identity)"
  returns:
    description: "the PolicyAssignmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "PolicyAssignmentInner.withLocation(String location)"
  summary: "Set the location property: The location of the policy assignment. Only required when utilizing managed identity."
  parameters:
  - description: "the location value to set."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PolicyAssignmentInner withLocation(String location)"
  returns:
    description: "the PolicyAssignmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withMetadata(java.lang.Object)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withMetadata(Object metadata)"
  name: "withMetadata(Object metadata)"
  nameWithType: "PolicyAssignmentInner.withMetadata(Object metadata)"
  summary: "Set the metadata property: The policy assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs."
  parameters:
  - description: "the metadata value to set."
    name: "metadata"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PolicyAssignmentInner withMetadata(Object metadata)"
  returns:
    description: "the PolicyAssignmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withNonComplianceMessages(java.util.List<com.azure.resourcemanager.resources.models.NonComplianceMessage>)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withNonComplianceMessages(List<NonComplianceMessage> nonComplianceMessages)"
  name: "withNonComplianceMessages(List<NonComplianceMessage> nonComplianceMessages)"
  nameWithType: "PolicyAssignmentInner.withNonComplianceMessages(List<NonComplianceMessage> nonComplianceMessages)"
  summary: "Set the nonComplianceMessages property: The messages that describe why a resource is non-compliant with the policy."
  parameters:
  - description: "the nonComplianceMessages value to set."
    name: "nonComplianceMessages"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.models.NonComplianceMessage?alt=com.azure.resourcemanager.resources.models.NonComplianceMessage&text=NonComplianceMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PolicyAssignmentInner withNonComplianceMessages(List<NonComplianceMessage> nonComplianceMessages)"
  returns:
    description: "the PolicyAssignmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withNotScopes(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withNotScopes(List<String> notScopes)"
  name: "withNotScopes(List<String> notScopes)"
  nameWithType: "PolicyAssignmentInner.withNotScopes(List<String> notScopes)"
  summary: "Set the notScopes property: The policy's excluded scopes."
  parameters:
  - description: "the notScopes value to set."
    name: "notScopes"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PolicyAssignmentInner withNotScopes(List<String> notScopes)"
  returns:
    description: "the PolicyAssignmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.resources.models.ParameterValuesValue>)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withParameters(Map<String,ParameterValuesValue> parameters)"
  name: "withParameters(Map<String,ParameterValuesValue> parameters)"
  nameWithType: "PolicyAssignmentInner.withParameters(Map<String,ParameterValuesValue> parameters)"
  summary: "Set the parameters property: The parameter values for the assigned policy rule. The keys are the parameter names."
  parameters:
  - description: "the parameters value to set."
    name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.resources.models.ParameterValuesValue?alt=com.azure.resourcemanager.resources.models.ParameterValuesValue&text=ParameterValuesValue\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PolicyAssignmentInner withParameters(Map<String,ParameterValuesValue> parameters)"
  returns:
    description: "the PolicyAssignmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withPolicyDefinitionId(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner.withPolicyDefinitionId(String policyDefinitionId)"
  name: "withPolicyDefinitionId(String policyDefinitionId)"
  nameWithType: "PolicyAssignmentInner.withPolicyDefinitionId(String policyDefinitionId)"
  summary: "Set the policyDefinitionId property: The ID of the policy definition or policy set definition being assigned."
  parameters:
  - description: "the policyDefinitionId value to set."
    name: "policyDefinitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PolicyAssignmentInner withPolicyDefinitionId(String policyDefinitionId)"
  returns:
    description: "the PolicyAssignmentInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner&text=PolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.13.0
