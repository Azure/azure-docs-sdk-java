### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.IpsecPolicy"
fullName: "com.microsoft.azure.management.network.IpsecPolicy"
name: "IpsecPolicy"
nameWithType: "IpsecPolicy"
summary: "An IPSec Policy configuration for a virtual network gateway connection."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class IpsecPolicy"
constructors:
- uid: "com.microsoft.azure.management.network.IpsecPolicy.IpsecPolicy()"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.IpsecPolicy()"
  name: "IpsecPolicy()"
  nameWithType: "IpsecPolicy.IpsecPolicy()"
  syntax: "public IpsecPolicy()"
methods:
- uid: "com.microsoft.azure.management.network.IpsecPolicy.dhGroup()"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.dhGroup()"
  name: "dhGroup()"
  nameWithType: "IpsecPolicy.dhGroup()"
  summary: "Get the DH Group used in IKE Phase 1 for initial SA."
  syntax: "public DhGroup dhGroup()"
  desc: "Get the DH Group used in IKE Phase 1 for initial SA. Possible values include: 'None', 'DHGroup1', 'DHGroup2', 'DHGroup14', 'DHGroup2048', 'ECP256', 'ECP384', 'DHGroup24'."
  returns:
    description: "the dhGroup value"
    type: "<xref href=\"com.microsoft.azure.management.network.DhGroup?alt=com.microsoft.azure.management.network.DhGroup&text=DhGroup\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.ikeEncryption()"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.ikeEncryption()"
  name: "ikeEncryption()"
  nameWithType: "IpsecPolicy.ikeEncryption()"
  summary: "Get the IKE encryption algorithm (IKE phase 2)."
  syntax: "public IkeEncryption ikeEncryption()"
  desc: "Get the IKE encryption algorithm (IKE phase 2). Possible values include: 'DES', 'DES3', 'AES128', 'AES192', 'AES256', 'GCMAES256', 'GCMAES128'."
  returns:
    description: "the ikeEncryption value"
    type: "<xref href=\"com.microsoft.azure.management.network.IkeEncryption?alt=com.microsoft.azure.management.network.IkeEncryption&text=IkeEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.ikeIntegrity()"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.ikeIntegrity()"
  name: "ikeIntegrity()"
  nameWithType: "IpsecPolicy.ikeIntegrity()"
  summary: "Get the IKE integrity algorithm (IKE phase 2)."
  syntax: "public IkeIntegrity ikeIntegrity()"
  desc: "Get the IKE integrity algorithm (IKE phase 2). Possible values include: 'MD5', 'SHA1', 'SHA256', 'SHA384', 'GCMAES256', 'GCMAES128'."
  returns:
    description: "the ikeIntegrity value"
    type: "<xref href=\"com.microsoft.azure.management.network.IkeIntegrity?alt=com.microsoft.azure.management.network.IkeIntegrity&text=IkeIntegrity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.ipsecEncryption()"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.ipsecEncryption()"
  name: "ipsecEncryption()"
  nameWithType: "IpsecPolicy.ipsecEncryption()"
  summary: "Get the IPSec encryption algorithm (IKE phase 1)."
  syntax: "public IpsecEncryption ipsecEncryption()"
  desc: "Get the IPSec encryption algorithm (IKE phase 1). Possible values include: 'None', 'DES', 'DES3', 'AES128', 'AES192', 'AES256', 'GCMAES128', 'GCMAES192', 'GCMAES256'."
  returns:
    description: "the ipsecEncryption value"
    type: "<xref href=\"com.microsoft.azure.management.network.IpsecEncryption?alt=com.microsoft.azure.management.network.IpsecEncryption&text=IpsecEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.ipsecIntegrity()"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.ipsecIntegrity()"
  name: "ipsecIntegrity()"
  nameWithType: "IpsecPolicy.ipsecIntegrity()"
  summary: "Get the IPSec integrity algorithm (IKE phase 1)."
  syntax: "public IpsecIntegrity ipsecIntegrity()"
  desc: "Get the IPSec integrity algorithm (IKE phase 1). Possible values include: 'MD5', 'SHA1', 'SHA256', 'GCMAES128', 'GCMAES192', 'GCMAES256'."
  returns:
    description: "the ipsecIntegrity value"
    type: "<xref href=\"com.microsoft.azure.management.network.IpsecIntegrity?alt=com.microsoft.azure.management.network.IpsecIntegrity&text=IpsecIntegrity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.pfsGroup()"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.pfsGroup()"
  name: "pfsGroup()"
  nameWithType: "IpsecPolicy.pfsGroup()"
  summary: "Get the Pfs Group used in IKE Phase 2 for new child SA."
  syntax: "public PfsGroup pfsGroup()"
  desc: "Get the Pfs Group used in IKE Phase 2 for new child SA. Possible values include: 'None', 'PFS1', 'PFS2', 'PFS2048', 'ECP256', 'ECP384', 'PFS24', 'PFS14', 'PFSMM'."
  returns:
    description: "the pfsGroup value"
    type: "<xref href=\"com.microsoft.azure.management.network.PfsGroup?alt=com.microsoft.azure.management.network.PfsGroup&text=PfsGroup\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.saDataSizeKilobytes()"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.saDataSizeKilobytes()"
  name: "saDataSizeKilobytes()"
  nameWithType: "IpsecPolicy.saDataSizeKilobytes()"
  summary: "Get the IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel."
  syntax: "public int saDataSizeKilobytes()"
  desc: "Get the IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel."
  returns:
    description: "the saDataSizeKilobytes value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.saLifeTimeSeconds()"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.saLifeTimeSeconds()"
  name: "saLifeTimeSeconds()"
  nameWithType: "IpsecPolicy.saLifeTimeSeconds()"
  summary: "Get the IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel."
  syntax: "public int saLifeTimeSeconds()"
  desc: "Get the IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel."
  returns:
    description: "the saLifeTimeSeconds value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.withDhGroup(com.microsoft.azure.management.network.DhGroup)"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.withDhGroup(DhGroup dhGroup)"
  name: "withDhGroup(DhGroup dhGroup)"
  nameWithType: "IpsecPolicy.withDhGroup(DhGroup dhGroup)"
  summary: "Set the DH Group used in IKE Phase 1 for initial SA."
  parameters:
  - description: "the dhGroup value to set"
    name: "dhGroup"
    type: "<xref href=\"com.microsoft.azure.management.network.DhGroup?alt=com.microsoft.azure.management.network.DhGroup&text=DhGroup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IpsecPolicy withDhGroup(DhGroup dhGroup)"
  desc: "Set the DH Group used in IKE Phase 1 for initial SA. Possible values include: 'None', 'DHGroup1', 'DHGroup2', 'DHGroup14', 'DHGroup2048', 'ECP256', 'ECP384', 'DHGroup24'."
  returns:
    description: "the IpsecPolicy object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.withIkeEncryption(com.microsoft.azure.management.network.IkeEncryption)"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.withIkeEncryption(IkeEncryption ikeEncryption)"
  name: "withIkeEncryption(IkeEncryption ikeEncryption)"
  nameWithType: "IpsecPolicy.withIkeEncryption(IkeEncryption ikeEncryption)"
  summary: "Set the IKE encryption algorithm (IKE phase 2)."
  parameters:
  - description: "the ikeEncryption value to set"
    name: "ikeEncryption"
    type: "<xref href=\"com.microsoft.azure.management.network.IkeEncryption?alt=com.microsoft.azure.management.network.IkeEncryption&text=IkeEncryption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IpsecPolicy withIkeEncryption(IkeEncryption ikeEncryption)"
  desc: "Set the IKE encryption algorithm (IKE phase 2). Possible values include: 'DES', 'DES3', 'AES128', 'AES192', 'AES256', 'GCMAES256', 'GCMAES128'."
  returns:
    description: "the IpsecPolicy object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.withIkeIntegrity(com.microsoft.azure.management.network.IkeIntegrity)"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.withIkeIntegrity(IkeIntegrity ikeIntegrity)"
  name: "withIkeIntegrity(IkeIntegrity ikeIntegrity)"
  nameWithType: "IpsecPolicy.withIkeIntegrity(IkeIntegrity ikeIntegrity)"
  summary: "Set the IKE integrity algorithm (IKE phase 2)."
  parameters:
  - description: "the ikeIntegrity value to set"
    name: "ikeIntegrity"
    type: "<xref href=\"com.microsoft.azure.management.network.IkeIntegrity?alt=com.microsoft.azure.management.network.IkeIntegrity&text=IkeIntegrity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IpsecPolicy withIkeIntegrity(IkeIntegrity ikeIntegrity)"
  desc: "Set the IKE integrity algorithm (IKE phase 2). Possible values include: 'MD5', 'SHA1', 'SHA256', 'SHA384', 'GCMAES256', 'GCMAES128'."
  returns:
    description: "the IpsecPolicy object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.withIpsecEncryption(com.microsoft.azure.management.network.IpsecEncryption)"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.withIpsecEncryption(IpsecEncryption ipsecEncryption)"
  name: "withIpsecEncryption(IpsecEncryption ipsecEncryption)"
  nameWithType: "IpsecPolicy.withIpsecEncryption(IpsecEncryption ipsecEncryption)"
  summary: "Set the IPSec encryption algorithm (IKE phase 1)."
  parameters:
  - description: "the ipsecEncryption value to set"
    name: "ipsecEncryption"
    type: "<xref href=\"com.microsoft.azure.management.network.IpsecEncryption?alt=com.microsoft.azure.management.network.IpsecEncryption&text=IpsecEncryption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IpsecPolicy withIpsecEncryption(IpsecEncryption ipsecEncryption)"
  desc: "Set the IPSec encryption algorithm (IKE phase 1). Possible values include: 'None', 'DES', 'DES3', 'AES128', 'AES192', 'AES256', 'GCMAES128', 'GCMAES192', 'GCMAES256'."
  returns:
    description: "the IpsecPolicy object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.withIpsecIntegrity(com.microsoft.azure.management.network.IpsecIntegrity)"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.withIpsecIntegrity(IpsecIntegrity ipsecIntegrity)"
  name: "withIpsecIntegrity(IpsecIntegrity ipsecIntegrity)"
  nameWithType: "IpsecPolicy.withIpsecIntegrity(IpsecIntegrity ipsecIntegrity)"
  summary: "Set the IPSec integrity algorithm (IKE phase 1)."
  parameters:
  - description: "the ipsecIntegrity value to set"
    name: "ipsecIntegrity"
    type: "<xref href=\"com.microsoft.azure.management.network.IpsecIntegrity?alt=com.microsoft.azure.management.network.IpsecIntegrity&text=IpsecIntegrity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IpsecPolicy withIpsecIntegrity(IpsecIntegrity ipsecIntegrity)"
  desc: "Set the IPSec integrity algorithm (IKE phase 1). Possible values include: 'MD5', 'SHA1', 'SHA256', 'GCMAES128', 'GCMAES192', 'GCMAES256'."
  returns:
    description: "the IpsecPolicy object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.withPfsGroup(com.microsoft.azure.management.network.PfsGroup)"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.withPfsGroup(PfsGroup pfsGroup)"
  name: "withPfsGroup(PfsGroup pfsGroup)"
  nameWithType: "IpsecPolicy.withPfsGroup(PfsGroup pfsGroup)"
  summary: "Set the Pfs Group used in IKE Phase 2 for new child SA."
  parameters:
  - description: "the pfsGroup value to set"
    name: "pfsGroup"
    type: "<xref href=\"com.microsoft.azure.management.network.PfsGroup?alt=com.microsoft.azure.management.network.PfsGroup&text=PfsGroup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IpsecPolicy withPfsGroup(PfsGroup pfsGroup)"
  desc: "Set the Pfs Group used in IKE Phase 2 for new child SA. Possible values include: 'None', 'PFS1', 'PFS2', 'PFS2048', 'ECP256', 'ECP384', 'PFS24', 'PFS14', 'PFSMM'."
  returns:
    description: "the IpsecPolicy object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.withSaDataSizeKilobytes(int)"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.withSaDataSizeKilobytes(int saDataSizeKilobytes)"
  name: "withSaDataSizeKilobytes(int saDataSizeKilobytes)"
  nameWithType: "IpsecPolicy.withSaDataSizeKilobytes(int saDataSizeKilobytes)"
  summary: "Set the IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel."
  parameters:
  - description: "the saDataSizeKilobytes value to set"
    name: "saDataSizeKilobytes"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IpsecPolicy withSaDataSizeKilobytes(int saDataSizeKilobytes)"
  desc: "Set the IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel."
  returns:
    description: "the IpsecPolicy object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.IpsecPolicy.withSaLifeTimeSeconds(int)"
  fullName: "com.microsoft.azure.management.network.IpsecPolicy.withSaLifeTimeSeconds(int saLifeTimeSeconds)"
  name: "withSaLifeTimeSeconds(int saLifeTimeSeconds)"
  nameWithType: "IpsecPolicy.withSaLifeTimeSeconds(int saLifeTimeSeconds)"
  summary: "Set the IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel."
  parameters:
  - description: "the saLifeTimeSeconds value to set"
    name: "saLifeTimeSeconds"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IpsecPolicy withSaLifeTimeSeconds(int saLifeTimeSeconds)"
  desc: "Set the IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel."
  returns:
    description: "the IpsecPolicy object itself."
    type: "<xref href=\"com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "An IPSec Policy configuration for a virtual network gateway connection."
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
