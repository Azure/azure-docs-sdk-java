### YamlMime:JavaType
uid: "com.azure.core.util.implementation.BinaryDataContent"
fullName: "com.azure.core.util.implementation.BinaryDataContent"
name: "BinaryDataContent"
nameWithType: "BinaryDataContent"
summary: "An abstract internal representation of the content stored in <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class BinaryDataContent"
constructors:
- "com.azure.core.util.implementation.BinaryDataContent.BinaryDataContent()"
fields:
- "com.azure.core.util.implementation.BinaryDataContent.STREAM_READ_SIZE"
methods:
- "com.azure.core.util.implementation.BinaryDataContent.<T>toObject(com.azure.core.util.serializer.TypeReference<T>,com.azure.core.util.serializer.ObjectSerializer)"
- "com.azure.core.util.implementation.BinaryDataContent.getLength()"
- "com.azure.core.util.implementation.BinaryDataContent.toByteBuffer()"
- "com.azure.core.util.implementation.BinaryDataContent.toBytes()"
- "com.azure.core.util.implementation.BinaryDataContent.toFluxByteBuffer()"
- "com.azure.core.util.implementation.BinaryDataContent.toStream()"
- "com.azure.core.util.implementation.BinaryDataContent.toString()"
type: "class"
metadata: {}
package: "com.azure.core.util.implementation"
artifact: com.azure:azure-core:1.20.0
