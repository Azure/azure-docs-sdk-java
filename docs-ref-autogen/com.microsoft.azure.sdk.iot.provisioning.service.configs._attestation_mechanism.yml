### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation_mechanism
  id: _attestation_mechanism
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation_mechanism.yml
  langs:
  - java
  name: AttestationMechanism
  nameWithType: AttestationMechanism
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  type: Class
  source:
    remote:
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/AttestationMechanism.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/AttestationMechanism.java
    startLine: 17
  package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: "<p>Representation of a single Device Provisioning Service Attestation mechanism in the IndividualEnrollment and EnrollmentGroup.</p>\r\n<p>It is an internal class that converts one of the attestations into JSON format. To configure the attestation mechanism, see the external API <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation\" data-throw-if-not-resolved=\"false\">Attestation</xref>.</p>\r\n<p></p>"
  syntax:
    content: public class AttestationMechanism
  inheritance:
  - java.lang.Object
references:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation.yml
  name: TpmAttestation
  nameWithType: TpmAttestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TpmAttestation
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service TPM Attestation.</p>

    <p>The provisioning service supports Trusted Platform Module, or TPM, as the device attestation mechanism. User must provide the Endorsement Key, and can, optionally, provide the Storage Root Key.</p>

    <p></p>
  syntax:
    content: public class TpmAttestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
  name: X509Attestation
  nameWithType: X509Attestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
  type: Class
  summary: >-
    <p>Representation of a single Device Provisioning Service X509 Attestation.</p>

    <p>The provisioning service supports Device Identifier Composition Engine, or DICE, as the device attestation mechanism. To use DICE, user must provide the X509 certificate. This class provide the means to create a new attestation for a X509 certificate and return it as an abstract interface <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation" data-throw-if-not-resolved="false">Attestation</xref>.</p>

    <p>An X509 attestation can contains one of the 3 types of certificate:</p>

    <p>

      <variablelist>

        <varlistentry>

          <b>Client or Alias certificate:</b>

        </varlistentry>

        <li>

          <p>Called on this class as clientCertificates, this certificate can authenticate a single device. </p>

        </li>

        <varlistentry>

          <b>Signing or Root certificate:</b>

        </varlistentry>

        <li>

          <p>Called on this class as rootCertificates, this certificate can create multiple Client certificates to authenticate multiple devices. </p>

        </li>

        <varlistentry>

          <b>CA Reference:</b>

        </varlistentry>

        <li>

          <p>Called on this class as X509CAReferences, this is a CA reference for a rootCertificate that can create multiple Client certificates to authenticate multiple devices. </p>

        </li>

      </variablelist>

    </p>

    <p>The provisioning service allows user to create <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment" data-throw-if-not-resolved="false">IndividualEnrollment</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>. For all operations over <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment" data-throw-if-not-resolved="false">IndividualEnrollment</xref> with <b>DICE</b>, user must provide a <b>clientCertificates</b>, and for operations over <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>, user must provide a <b>rootCertificates</b> or a <b>X509CAReferences</b>.</p>

    <p>For each of this types of certificates, user can provide 2 Certificates, a primary and a secondary. Only the primary is mandatory, the secondary is optional.</p>

    <p>The provisioning service will process the provided certificates, but will never return it back. Instead of it, <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getPrimaryX509CertificateInfo()" data-throw-if-not-resolved="false">getPrimaryX509CertificateInfo()</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getSecondaryX509CertificateInfo()" data-throw-if-not-resolved="false">getSecondaryX509CertificateInfo()</xref> will return the certificate information for the certificates.</p>

    <p></p>
  syntax:
    content: public class X509Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation.yml
  name: Attestation
  nameWithType: Attestation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation
  type: Class
  summary: >-
    <p>This is the abstract class that unifies all possible types of attestation that Device Provisioning Service supports.</p>

    <p>For now, the provisioning service supports <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation" data-throw-if-not-resolved="false">TpmAttestation</xref> or <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>.</p>

    <p></p>
  syntax:
    content: public class Attestation
- uid: com.microsoft.azure.sdk.iot.provisioning.service.exceptions._provisioning_service_client_exception
  parent: com.microsoft.azure.sdk.iot.provisioning.service.exceptions
  href: com.microsoft.azure.sdk.iot.provisioning.service.exceptions._provisioning_service_client_exception.yml
  name: ProvisioningServiceClientException
  nameWithType: ProvisioningServiceClientException
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
  type: Class
  summary: >-
    <p>Super class for the Device Provisioning Service exceptions on the Service Client.</p>

    <p>

      <pre>

        <code>ProvisioningServiceClientException

            |

            +--&gt;ProvisioningServiceClientTransportException [any transport layer exception]

            |

            +--&gt;ProvisioningServiceClientServiceException [any exception reported in the http response]

                    |

                    |

                    +--&gt;ProvisioningServiceClientBadUsageException [any http response 4xx]

                    |        |

                    |        +--&gt;ProvisioningServiceClientBadFormatException [400]

                    |        +--&gt;ProvisioningServiceClientUnathorizedException [401]

                    |        +--&gt;ProvisioningServiceClientNotFoundException [404]

                    |        +--&gt;ProvisioningServiceClientPreconditionFailedException [412]

                    |        +--&gt;ProvisioningServiceClientTooManyRequestsException [429]

                    |

                    +--&gt;ProvisioningServiceClientTransientException [any http response 5xx]

                    |        |

                    |        +--&gt;ProvisioningServiceClientInternalServerErrorException [500]

                    |

                    +--&gt;ProvisioningServiceClientUnknownException [any other http response &gt;300, but not 4xx or 5xx]

        </code>

      </pre>

    </p>
  syntax:
    content: public class ProvisioningServiceClientException
