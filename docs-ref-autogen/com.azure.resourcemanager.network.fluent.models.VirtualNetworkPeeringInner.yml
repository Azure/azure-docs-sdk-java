### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner"
fullName: "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner"
name: "VirtualNetworkPeeringInner"
nameWithType: "VirtualNetworkPeeringInner"
summary: "Peerings in a virtual network resource."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.SubResource\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.SubResource.id()"
- "com.azure.core.management.SubResource.withId(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class VirtualNetworkPeeringInner extends SubResource"
constructors:
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.VirtualNetworkPeeringInner()"
methods:
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.allowForwardedTraffic()"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.allowGatewayTransit()"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.allowVirtualNetworkAccess()"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.etag()"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.name()"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.peeringState()"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.provisioningState()"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.remoteAddressSpace()"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.remoteVirtualNetwork()"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.useRemoteGateways()"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.validate()"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.withAllowForwardedTraffic(java.lang.Boolean)"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.withAllowGatewayTransit(java.lang.Boolean)"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.withAllowVirtualNetworkAccess(java.lang.Boolean)"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.withName(java.lang.String)"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.withPeeringState(com.azure.resourcemanager.network.models.VirtualNetworkPeeringState)"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.withRemoteAddressSpace(com.azure.resourcemanager.network.models.AddressSpace)"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.withRemoteVirtualNetwork(com.azure.core.management.SubResource)"
- "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringInner.withUseRemoteGateways(java.lang.Boolean)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
