### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.models.StartTask.waitForSuccess*"
fullName: "com.microsoft.azure.batch.protocol.models.StartTask.waitForSuccess"
name: "waitForSuccess"
nameWithType: "StartTask.waitForSuccess"
members:
- uid: "com.microsoft.azure.batch.protocol.models.StartTask.waitForSuccess()"
  fullName: "com.microsoft.azure.batch.protocol.models.StartTask.waitForSuccess()"
  name: "waitForSuccess()"
  nameWithType: "StartTask.waitForSuccess()"
  summary: "Get if true and the StartTask fails on a Node, the Batch service retries the StartTask up to its maximum retry count (maxTaskRetryCount). If the Task has still not completed successfully after all retries, then the Batch service marks the Node unusable, and will not schedule Tasks to it. This condition can be detected via the Compute Node state and failure info details. If false, the Batch service will not wait for the StartTask to complete. In this case, other Tasks can start executing on the Compute Node while the StartTask is still running; and even if the StartTask fails, new Tasks will continue to be scheduled on the Compute Node. The default is true."
  syntax: "public Boolean waitForSuccess()"
  returns:
    description: "the waitForSuccess value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:8.0.0
