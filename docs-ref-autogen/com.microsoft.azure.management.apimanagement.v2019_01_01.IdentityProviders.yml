### YamlMime:JavaType
uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviders"
fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviders"
name: "IdentityProviders"
nameWithType: "IdentityProviders"
summary: "Type representing Identity<wbr>Providers."
syntax: "public interface IdentityProviders extends SupportsCreating<IdentityProviderContract.DefinitionStages.Blank>, HasInner<IdentityProvidersInner>"
methods:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviders.deleteAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderType,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviders.deleteAsync(String resourceGroupName, String serviceName, IdentityProviderType identityProviderName, String ifMatch)"
  name: "deleteAsync(String resourceGroupName, String serviceName, IdentityProviderType identityProviderName, String ifMatch)"
  nameWithType: "IdentityProviders.deleteAsync(String resourceGroupName, String serviceName, IdentityProviderType identityProviderName, String ifMatch)"
  summary: "Deletes the specified identity provider configuration."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identity Provider Type identifier. Possible values include: 'facebook', 'google', 'microsoft', 'twitter', 'aad', 'aadB2C'"
    name: "identityProviderName"
    type: "<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderType?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderType&text=IdentityProviderType\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable deleteAsync(String resourceGroupName, String serviceName, IdentityProviderType identityProviderName, String ifMatch)"
  desc: "Deletes the specified identity provider configuration."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviders.getAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderType)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviders.getAsync(String resourceGroupName, String serviceName, IdentityProviderType identityProviderName)"
  name: "getAsync(String resourceGroupName, String serviceName, IdentityProviderType identityProviderName)"
  nameWithType: "IdentityProviders.getAsync(String resourceGroupName, String serviceName, IdentityProviderType identityProviderName)"
  summary: "Gets the configuration details of the identity Provider configured in specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identity Provider Type identifier. Possible values include: 'facebook', 'google', 'microsoft', 'twitter', 'aad', 'aadB2C'"
    name: "identityProviderName"
    type: "<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderType?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderType&text=IdentityProviderType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<IdentityProviderContract> getAsync(String resourceGroupName, String serviceName, IdentityProviderType identityProviderName)"
  desc: "Gets the configuration details of the identity Provider configured in specified service instance."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderContract?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderContract&text=IdentityProviderContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviders.getEntityTagAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderType)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviders.getEntityTagAsync(String resourceGroupName, String serviceName, IdentityProviderType identityProviderName)"
  name: "getEntityTagAsync(String resourceGroupName, String serviceName, IdentityProviderType identityProviderName)"
  nameWithType: "IdentityProviders.getEntityTagAsync(String resourceGroupName, String serviceName, IdentityProviderType identityProviderName)"
  summary: "Gets the entity state (Etag) version of the identity<wbr>Provider specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Identity Provider Type identifier. Possible values include: 'facebook', 'google', 'microsoft', 'twitter', 'aad', 'aadB2C'"
    name: "identityProviderName"
    type: "<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderType?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderType&text=IdentityProviderType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable getEntityTagAsync(String resourceGroupName, String serviceName, IdentityProviderType identityProviderName)"
  desc: "Gets the entity state (Etag) version of the identityProvider specified by its identifier."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviders.listByServiceAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviders.listByServiceAsync(String resourceGroupName, String serviceName)"
  name: "listByServiceAsync(String resourceGroupName, String serviceName)"
  nameWithType: "IdentityProviders.listByServiceAsync(String resourceGroupName, String serviceName)"
  summary: "Lists a collection of Identity Provider configured in the specified service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<IdentityProviderContract> listByServiceAsync(String resourceGroupName, String serviceName)"
  desc: "Lists a collection of Identity Provider configured in the specified service instance."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderContract?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderContract&text=IdentityProviderContract\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Type representing IdentityProviders."
implements:
- "<xref href=\"com.microsoft.azure.arm.collection.SupportsCreating?alt=com.microsoft.azure.arm.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderContract.DefinitionStages.Blank?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.IdentityProviderContract.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.IdentityProvidersInner?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.IdentityProvidersInner&text=IdentityProvidersInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.apimanagement.v2019_01_01"
artifact: com.microsoft.azure.apimanagement.v2019_01_01:azure-mgmt-apimanagement:1.0.0-beta-1
