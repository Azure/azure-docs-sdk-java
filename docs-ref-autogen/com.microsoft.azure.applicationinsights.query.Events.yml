### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.applicationinsights.query.Events
  id: Events
  parent: com.microsoft.azure.applicationinsights.query
  children:
  - com.microsoft.azure.applicationinsights.query.Events.get(String,EventType,String)
  - com.microsoft.azure.applicationinsights.query.Events.get(String,EventType,String,String)
  - com.microsoft.azure.applicationinsights.query.Events.getAsync(String,EventType,String)
  - com.microsoft.azure.applicationinsights.query.Events.getAsync(String,EventType,String,final ServiceCallback<EventsResults>)
  - com.microsoft.azure.applicationinsights.query.Events.getAsync(String,EventType,String,String)
  - com.microsoft.azure.applicationinsights.query.Events.getAsync(String,EventType,String,String,final ServiceCallback<EventsResults>)
  - com.microsoft.azure.applicationinsights.query.Events.getByType(String,EventType)
  - com.microsoft.azure.applicationinsights.query.Events.getByType(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String)
  - com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync(String,EventType)
  - com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync(String,EventType,final ServiceCallback<EventsResults>)
  - com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String)
  - com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String,final ServiceCallback<EventsResults>)
  - com.microsoft.azure.applicationinsights.query.Events.getByTypeWithServiceResponseAsync(String,EventType)
  - com.microsoft.azure.applicationinsights.query.Events.getByTypeWithServiceResponseAsync(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String)
  - com.microsoft.azure.applicationinsights.query.Events.getWithServiceResponseAsync(String,EventType,String)
  - com.microsoft.azure.applicationinsights.query.Events.getWithServiceResponseAsync(String,EventType,String,String)
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: Events
  nameWithType: Events
  fullName: com.microsoft.azure.applicationinsights.query.Events
  type: Interface
  source:
    remote: &o0
      path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 23
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>An instance of this class provides access to all the operations defined in Events. </p>"
  syntax:
    content: public interface Events
- uid: com.microsoft.azure.applicationinsights.query.Events.get(String,EventType,String)
  id: get(String,EventType,String)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: get(String appId, EventType eventType, String eventId)
  nameWithType: Events.get(String appId, EventType eventType, String eventId)
  fullName: com.microsoft.azure.applicationinsights.query.Events.get(String appId, EventType eventType, String eventId)
  overload: com.microsoft.azure.applicationinsights.query.Events.get*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 169
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public EventsResults get(String appId, EventType eventType, String eventId)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    return:
      type: com.microsoft.azure.applicationinsights.query.models.EventsResults
      description: <p>the EventsResults object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 00ad4777
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.get(String,EventType,String,String)
  id: get(String,EventType,String,String)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: get(String appId, EventType eventType, String eventId, String timespan)
  nameWithType: Events.get(String appId, EventType eventType, String eventId, String timespan)
  fullName: com.microsoft.azure.applicationinsights.query.Events.get(String appId, EventType eventType, String eventId, String timespan)
  overload: com.microsoft.azure.applicationinsights.query.Events.get*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 220
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public EventsResults get(String appId, EventType eventType, String eventId, String timespan)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    return:
      type: com.microsoft.azure.applicationinsights.query.models.EventsResults
      description: <p>the EventsResults object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 00ad4777
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getAsync(String,EventType,String)
  id: getAsync(String,EventType,String)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getAsync(String appId, EventType eventType, String eventId)
  nameWithType: Events.getAsync(String appId, EventType eventType, String eventId)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getAsync(String appId, EventType eventType, String eventId)
  overload: com.microsoft.azure.applicationinsights.query.Events.getAsync*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 194
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public Observable<EventsResults> getAsync(String appId, EventType eventType, String eventId)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the observable to the EventsResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getAsync(String,EventType,String,final ServiceCallback<EventsResults>)
  id: getAsync(String,EventType,String,final ServiceCallback<EventsResults>)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getAsync(String appId, EventType eventType, String eventId, final ServiceCallback<EventsResults> serviceCallback)
  nameWithType: Events.getAsync(String appId, EventType eventType, String eventId, final ServiceCallback<EventsResults> serviceCallback)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getAsync(String appId, EventType eventType, String eventId, final ServiceCallback<EventsResults> serviceCallback)
  overload: com.microsoft.azure.applicationinsights.query.Events.getAsync*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 182
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<EventsResults> getAsync(String appId, EventType eventType, String eventId, final ServiceCallback<EventsResults> serviceCallback)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getAsync(String,EventType,String,String)
  id: getAsync(String,EventType,String,String)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getAsync(String appId, EventType eventType, String eventId, String timespan)
  nameWithType: Events.getAsync(String appId, EventType eventType, String eventId, String timespan)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getAsync(String appId, EventType eventType, String eventId, String timespan)
  overload: com.microsoft.azure.applicationinsights.query.Events.getAsync*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 247
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public Observable<EventsResults> getAsync(String appId, EventType eventType, String eventId, String timespan)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the observable to the EventsResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getAsync(String,EventType,String,String,final ServiceCallback<EventsResults>)
  id: getAsync(String,EventType,String,String,final ServiceCallback<EventsResults>)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getAsync(String appId, EventType eventType, String eventId, String timespan, final ServiceCallback<EventsResults> serviceCallback)
  nameWithType: Events.getAsync(String appId, EventType eventType, String eventId, String timespan, final ServiceCallback<EventsResults> serviceCallback)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getAsync(String appId, EventType eventType, String eventId, String timespan, final ServiceCallback<EventsResults> serviceCallback)
  overload: com.microsoft.azure.applicationinsights.query.Events.getAsync*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 234
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<EventsResults> getAsync(String appId, EventType eventType, String eventId, String timespan, final ServiceCallback<EventsResults> serviceCallback)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getByType(String,EventType)
  id: getByType(String,EventType)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getByType(String appId, EventType eventType)
  nameWithType: Events.getByType(String appId, EventType eventType)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getByType(String appId, EventType eventType)
  overload: com.microsoft.azure.applicationinsights.query.Events.getByType*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 35
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public EventsResults getByType(String appId, EventType eventType)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    return:
      type: com.microsoft.azure.applicationinsights.query.models.EventsResults
      description: <p>the EventsResults object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 00ad4777
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getByType(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String)
  id: getByType(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getByType(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  nameWithType: Events.getByType(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getByType(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  overload: com.microsoft.azure.applicationinsights.query.Events.getByType*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 91
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public EventsResults getByType(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    - id: filter
      type: "26831127"
      description: <p>An expression used to filter the returned events </p>
    - id: search
      type: "26831127"
      description: <p>A free-text search expression to match for whether a particular event should be returned </p>
    - id: orderby
      type: "26831127"
      description: <p>A comma-separated list of properties with "asc" (the default) or "desc" to control the order of returned events </p>
    - id: select
      type: "26831127"
      description: <p>Limits the properties to just those requested on each returned event </p>
    - id: skip
      type: 08effaa0
      description: <p>The number of items to skip over before returning events </p>
    - id: top
      type: 08effaa0
      description: <p>The number of events to return </p>
    - id: format
      type: "26831127"
      description: <p>Format for the returned events </p>
    - id: count
      type: 866c2227
      description: <p>Request a count of matching items included with the returned events </p>
    - id: apply
      type: "26831127"
      description: <p>An expression used for aggregation over returned events </p>
    return:
      type: com.microsoft.azure.applicationinsights.query.models.EventsResults
      description: <p>the EventsResults object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 00ad4777
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync(String,EventType)
  id: getByTypeAsync(String,EventType)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getByTypeAsync(String appId, EventType eventType)
  nameWithType: Events.getByTypeAsync(String appId, EventType eventType)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync(String appId, EventType eventType)
  overload: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 58
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public Observable<EventsResults> getByTypeAsync(String appId, EventType eventType)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    return:
      type: c2d0e8c6com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the observable to the EventsResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync(String,EventType,final ServiceCallback<EventsResults>)
  id: getByTypeAsync(String,EventType,final ServiceCallback<EventsResults>)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getByTypeAsync(String appId, EventType eventType, final ServiceCallback<EventsResults> serviceCallback)
  nameWithType: Events.getByTypeAsync(String appId, EventType eventType, final ServiceCallback<EventsResults> serviceCallback)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync(String appId, EventType eventType, final ServiceCallback<EventsResults> serviceCallback)
  overload: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 47
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<EventsResults> getByTypeAsync(String appId, EventType eventType, final ServiceCallback<EventsResults> serviceCallback)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String)
  id: getByTypeAsync(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  nameWithType: Events.getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  overload: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 134
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public Observable<EventsResults> getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    - id: filter
      type: "26831127"
      description: <p>An expression used to filter the returned events </p>
    - id: search
      type: "26831127"
      description: <p>A free-text search expression to match for whether a particular event should be returned </p>
    - id: orderby
      type: "26831127"
      description: <p>A comma-separated list of properties with "asc" (the default) or "desc" to control the order of returned events </p>
    - id: select
      type: "26831127"
      description: <p>Limits the properties to just those requested on each returned event </p>
    - id: skip
      type: 08effaa0
      description: <p>The number of items to skip over before returning events </p>
    - id: top
      type: 08effaa0
      description: <p>The number of events to return </p>
    - id: format
      type: "26831127"
      description: <p>Format for the returned events </p>
    - id: count
      type: 866c2227
      description: <p>Request a count of matching items included with the returned events </p>
    - id: apply
      type: "26831127"
      description: <p>An expression used for aggregation over returned events </p>
    return:
      type: c2d0e8c6com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the observable to the EventsResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String,final ServiceCallback<EventsResults>)
  id: getByTypeAsync(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String,final ServiceCallback<EventsResults>)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply, final ServiceCallback<EventsResults> serviceCallback)
  nameWithType: Events.getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply, final ServiceCallback<EventsResults> serviceCallback)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply, final ServiceCallback<EventsResults> serviceCallback)
  overload: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 113
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<EventsResults> getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply, final ServiceCallback<EventsResults> serviceCallback)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    - id: filter
      type: "26831127"
      description: <p>An expression used to filter the returned events </p>
    - id: search
      type: "26831127"
      description: <p>A free-text search expression to match for whether a particular event should be returned </p>
    - id: orderby
      type: "26831127"
      description: <p>A comma-separated list of properties with "asc" (the default) or "desc" to control the order of returned events </p>
    - id: select
      type: "26831127"
      description: <p>Limits the properties to just those requested on each returned event </p>
    - id: skip
      type: 08effaa0
      description: <p>The number of items to skip over before returning events </p>
    - id: top
      type: 08effaa0
      description: <p>The number of events to return </p>
    - id: format
      type: "26831127"
      description: <p>Format for the returned events </p>
    - id: count
      type: 866c2227
      description: <p>Request a count of matching items included with the returned events </p>
    - id: apply
      type: "26831127"
      description: <p>An expression used for aggregation over returned events </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getByTypeWithServiceResponseAsync(String,EventType)
  id: getByTypeWithServiceResponseAsync(String,EventType)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getByTypeWithServiceResponseAsync(String appId, EventType eventType)
  nameWithType: Events.getByTypeWithServiceResponseAsync(String appId, EventType eventType)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getByTypeWithServiceResponseAsync(String appId, EventType eventType)
  overload: com.microsoft.azure.applicationinsights.query.Events.getByTypeWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 69
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<EventsResults>> getByTypeWithServiceResponseAsync(String appId, EventType eventType)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    return:
      type: fc480ba2com.microsoft.azure.applicationinsights.query.models.EventsResultse7daa122
      description: <p>the observable to the EventsResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getByTypeWithServiceResponseAsync(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String)
  id: getByTypeWithServiceResponseAsync(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getByTypeWithServiceResponseAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  nameWithType: Events.getByTypeWithServiceResponseAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getByTypeWithServiceResponseAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  overload: com.microsoft.azure.applicationinsights.query.Events.getByTypeWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 155
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<EventsResults>> getByTypeWithServiceResponseAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    - id: filter
      type: "26831127"
      description: <p>An expression used to filter the returned events </p>
    - id: search
      type: "26831127"
      description: <p>A free-text search expression to match for whether a particular event should be returned </p>
    - id: orderby
      type: "26831127"
      description: <p>A comma-separated list of properties with "asc" (the default) or "desc" to control the order of returned events </p>
    - id: select
      type: "26831127"
      description: <p>Limits the properties to just those requested on each returned event </p>
    - id: skip
      type: 08effaa0
      description: <p>The number of items to skip over before returning events </p>
    - id: top
      type: 08effaa0
      description: <p>The number of events to return </p>
    - id: format
      type: "26831127"
      description: <p>Format for the returned events </p>
    - id: count
      type: 866c2227
      description: <p>Request a count of matching items included with the returned events </p>
    - id: apply
      type: "26831127"
      description: <p>An expression used for aggregation over returned events </p>
    return:
      type: fc480ba2com.microsoft.azure.applicationinsights.query.models.EventsResultse7daa122
      description: <p>the observable to the EventsResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getWithServiceResponseAsync(String,EventType,String)
  id: getWithServiceResponseAsync(String,EventType,String)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String appId, EventType eventType, String eventId)
  nameWithType: Events.getWithServiceResponseAsync(String appId, EventType eventType, String eventId)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getWithServiceResponseAsync(String appId, EventType eventType, String eventId)
  overload: com.microsoft.azure.applicationinsights.query.Events.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 206
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<EventsResults>> getWithServiceResponseAsync(String appId, EventType eventType, String eventId)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    return:
      type: fc480ba2com.microsoft.azure.applicationinsights.query.models.EventsResultse7daa122
      description: <p>the observable to the EventsResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.applicationinsights.query.Events.getWithServiceResponseAsync(String,EventType,String,String)
  id: getWithServiceResponseAsync(String,EventType,String,String)
  parent: com.microsoft.azure.applicationinsights.query.Events
  href: com.microsoft.azure.applicationinsights.query.Events.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String appId, EventType eventType, String eventId, String timespan)
  nameWithType: Events.getWithServiceResponseAsync(String appId, EventType eventType, String eventId, String timespan)
  fullName: com.microsoft.azure.applicationinsights.query.Events.getWithServiceResponseAsync(String appId, EventType eventType, String eventId, String timespan)
  overload: com.microsoft.azure.applicationinsights.query.Events.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: applicationinsights/data-plane/src/main/java/com/microsoft/azure/applicationinsights/query/Events.java
    startLine: 260
  package: com.microsoft.azure.applicationinsights.query
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<EventsResults>> getWithServiceResponseAsync(String appId, EventType eventType, String eventId, String timespan)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    return:
      type: fc480ba2com.microsoft.azure.applicationinsights.query.models.EventsResultse7daa122
      description: <p>the observable to the EventsResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 00ad4777
  spec.java:
  - name: ErrorResponseException
    fullName: ErrorResponseException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.applicationinsights.query.Events.getByType*
  name: getByType
  nameWithType: Events.getByType
  fullName: com.microsoft.azure.applicationinsights.query.Events.getByType
  package: com.microsoft.azure.applicationinsights.query
- uid: 897eb10acom.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.applicationinsights.query.models.EventsResults
    name: EventsResults
    fullName: com.microsoft.azure.applicationinsights.query.models.EventsResults
    href: com.microsoft.azure.applicationinsights.query.models.EventsResults.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.applicationinsights.query.models.EventsResults
    name: EventsResults
    fullName: com.microsoft.azure.applicationinsights.query.models.EventsResults
    href: com.microsoft.azure.applicationinsights.query.models.EventsResults.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync*
  name: getByTypeAsync
  nameWithType: Events.getByTypeAsync
  fullName: com.microsoft.azure.applicationinsights.query.Events.getByTypeAsync
  package: com.microsoft.azure.applicationinsights.query
- uid: c2d0e8c6com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.applicationinsights.query.models.EventsResults
    name: EventsResults
    fullName: com.microsoft.azure.applicationinsights.query.models.EventsResults
    href: com.microsoft.azure.applicationinsights.query.models.EventsResults.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.applicationinsights.query.models.EventsResultse7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.applicationinsights.query.models.EventsResults
    name: EventsResults
    fullName: com.microsoft.azure.applicationinsights.query.models.EventsResults
    href: com.microsoft.azure.applicationinsights.query.models.EventsResults.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.applicationinsights.query.Events.getByTypeWithServiceResponseAsync*
  name: getByTypeWithServiceResponseAsync
  nameWithType: Events.getByTypeWithServiceResponseAsync
  fullName: com.microsoft.azure.applicationinsights.query.Events.getByTypeWithServiceResponseAsync
  package: com.microsoft.azure.applicationinsights.query
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.applicationinsights.query.Events.get*
  name: get
  nameWithType: Events.get
  fullName: com.microsoft.azure.applicationinsights.query.Events.get
  package: com.microsoft.azure.applicationinsights.query
- uid: com.microsoft.azure.applicationinsights.query.Events.getAsync*
  name: getAsync
  nameWithType: Events.getAsync
  fullName: com.microsoft.azure.applicationinsights.query.Events.getAsync
  package: com.microsoft.azure.applicationinsights.query
- uid: com.microsoft.azure.applicationinsights.query.Events.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: Events.getWithServiceResponseAsync
  fullName: com.microsoft.azure.applicationinsights.query.Events.getWithServiceResponseAsync
  package: com.microsoft.azure.applicationinsights.query
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  parent: com.microsoft.azure.applicationinsights.query.implementation
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: EventsImpl
  nameWithType: EventsImpl
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  type: Class
  summary: "<p>An instance of this class provides access to all the operations defined in Events. </p>"
  syntax:
    content: public class EventsImpl
- uid: com.microsoft.azure.applicationinsights.query.models.EventsResults
  parent: com.microsoft.azure.applicationinsights.query.models
  href: com.microsoft.azure.applicationinsights.query.models.EventsResults.yml
  name: EventsResults
  nameWithType: EventsResults
  fullName: com.microsoft.azure.applicationinsights.query.models.EventsResults
  type: Class
  summary: "<p>An events query result. </p>"
  syntax:
    content: public class EventsResults
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByType(String,EventType)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getByType(String appId, EventType eventType)
  nameWithType: EventsImpl.getByType(String appId, EventType eventType)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByType(String appId, EventType eventType)
  type: Method
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public EventsResults getByType(String appId, EventType eventType)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    return:
      type: com.microsoft.azure.applicationinsights.query.models.EventsResults
      description: <p>the EventsResults object if successful. </p>
- uid: com.microsoft.azure.applicationinsights.query.models.EventType
  parent: com.microsoft.azure.applicationinsights.query.models
  href: com.microsoft.azure.applicationinsights.query.models.EventType.yml
  name: EventType
  nameWithType: EventType
  fullName: com.microsoft.azure.applicationinsights.query.models.EventType
  type: Class
  summary: "<p>Defines values for EventType. </p>"
  syntax:
    content: public class EventType
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByTypeAsync(String,EventType,final ServiceCallback<EventsResults>)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getByTypeAsync(String appId, EventType eventType, final ServiceCallback<EventsResults> serviceCallback)
  nameWithType: EventsImpl.getByTypeAsync(String appId, EventType eventType, final ServiceCallback<EventsResults> serviceCallback)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByTypeAsync(String appId, EventType eventType, final ServiceCallback<EventsResults> serviceCallback)
  type: Method
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<EventsResults> getByTypeAsync(String appId, EventType eventType, final ServiceCallback<EventsResults> serviceCallback)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByTypeAsync(String,EventType)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getByTypeAsync(String appId, EventType eventType)
  nameWithType: EventsImpl.getByTypeAsync(String appId, EventType eventType)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByTypeAsync(String appId, EventType eventType)
  type: Method
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public Observable<EventsResults> getByTypeAsync(String appId, EventType eventType)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    return:
      type: c2d0e8c6com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the observable to the EventsResults object </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByTypeWithServiceResponseAsync(String,EventType)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getByTypeWithServiceResponseAsync(String appId, EventType eventType)
  nameWithType: EventsImpl.getByTypeWithServiceResponseAsync(String appId, EventType eventType)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByTypeWithServiceResponseAsync(String appId, EventType eventType)
  type: Method
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<EventsResults>> getByTypeWithServiceResponseAsync(String appId, EventType eventType)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    return:
      type: fc480ba2com.microsoft.azure.applicationinsights.query.models.EventsResultse7daa122
      description: <p>the observable to the EventsResults object </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByType(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getByType(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  nameWithType: EventsImpl.getByType(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByType(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  type: Method
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public EventsResults getByType(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    - id: filter
      type: "26831127"
      description: <p>An expression used to filter the returned events </p>
    - id: search
      type: "26831127"
      description: <p>A free-text search expression to match for whether a particular event should be returned </p>
    - id: orderby
      type: "26831127"
      description: <p>A comma-separated list of properties with "asc" (the default) or "desc" to control the order of returned events </p>
    - id: select
      type: "26831127"
      description: <p>Limits the properties to just those requested on each returned event </p>
    - id: skip
      type: 08effaa0
      description: <p>The number of items to skip over before returning events </p>
    - id: top
      type: 08effaa0
      description: <p>The number of events to return </p>
    - id: format
      type: "26831127"
      description: <p>Format for the returned events </p>
    - id: count
      type: 866c2227
      description: <p>Request a count of matching items included with the returned events </p>
    - id: apply
      type: "26831127"
      description: <p>An expression used for aggregation over returned events </p>
    return:
      type: com.microsoft.azure.applicationinsights.query.models.EventsResults
      description: <p>the EventsResults object if successful. </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByTypeAsync(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String,final ServiceCallback<EventsResults>)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply, final ServiceCallback<EventsResults> serviceCallback)
  nameWithType: EventsImpl.getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply, final ServiceCallback<EventsResults> serviceCallback)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply, final ServiceCallback<EventsResults> serviceCallback)
  type: Method
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<EventsResults> getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply, final ServiceCallback<EventsResults> serviceCallback)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    - id: filter
      type: "26831127"
      description: <p>An expression used to filter the returned events </p>
    - id: search
      type: "26831127"
      description: <p>A free-text search expression to match for whether a particular event should be returned </p>
    - id: orderby
      type: "26831127"
      description: <p>A comma-separated list of properties with "asc" (the default) or "desc" to control the order of returned events </p>
    - id: select
      type: "26831127"
      description: <p>Limits the properties to just those requested on each returned event </p>
    - id: skip
      type: 08effaa0
      description: <p>The number of items to skip over before returning events </p>
    - id: top
      type: 08effaa0
      description: <p>The number of events to return </p>
    - id: format
      type: "26831127"
      description: <p>Format for the returned events </p>
    - id: count
      type: 866c2227
      description: <p>Request a count of matching items included with the returned events </p>
    - id: apply
      type: "26831127"
      description: <p>An expression used for aggregation over returned events </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByTypeAsync(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  nameWithType: EventsImpl.getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  type: Method
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public Observable<EventsResults> getByTypeAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    - id: filter
      type: "26831127"
      description: <p>An expression used to filter the returned events </p>
    - id: search
      type: "26831127"
      description: <p>A free-text search expression to match for whether a particular event should be returned </p>
    - id: orderby
      type: "26831127"
      description: <p>A comma-separated list of properties with "asc" (the default) or "desc" to control the order of returned events </p>
    - id: select
      type: "26831127"
      description: <p>Limits the properties to just those requested on each returned event </p>
    - id: skip
      type: 08effaa0
      description: <p>The number of items to skip over before returning events </p>
    - id: top
      type: 08effaa0
      description: <p>The number of events to return </p>
    - id: format
      type: "26831127"
      description: <p>Format for the returned events </p>
    - id: count
      type: 866c2227
      description: <p>Request a count of matching items included with the returned events </p>
    - id: apply
      type: "26831127"
      description: <p>An expression used for aggregation over returned events </p>
    return:
      type: c2d0e8c6com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the observable to the EventsResults object </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByTypeWithServiceResponseAsync(String,EventType,String,String,String,String,String,Integer,Integer,String,Boolean,String)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getByTypeWithServiceResponseAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  nameWithType: EventsImpl.getByTypeWithServiceResponseAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getByTypeWithServiceResponseAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
  type: Method
  summary: "<p>Execute OData query. Executes an OData query for events.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<EventsResults>> getByTypeWithServiceResponseAsync(String appId, EventType eventType, String timespan, String filter, String search, String orderby, String select, Integer skip, Integer top, String format, Boolean count, String apply)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    - id: filter
      type: "26831127"
      description: <p>An expression used to filter the returned events </p>
    - id: search
      type: "26831127"
      description: <p>A free-text search expression to match for whether a particular event should be returned </p>
    - id: orderby
      type: "26831127"
      description: <p>A comma-separated list of properties with "asc" (the default) or "desc" to control the order of returned events </p>
    - id: select
      type: "26831127"
      description: <p>Limits the properties to just those requested on each returned event </p>
    - id: skip
      type: 08effaa0
      description: <p>The number of items to skip over before returning events </p>
    - id: top
      type: 08effaa0
      description: <p>The number of events to return </p>
    - id: format
      type: "26831127"
      description: <p>Format for the returned events </p>
    - id: count
      type: 866c2227
      description: <p>Request a count of matching items included with the returned events </p>
    - id: apply
      type: "26831127"
      description: <p>An expression used for aggregation over returned events </p>
    return:
      type: fc480ba2com.microsoft.azure.applicationinsights.query.models.EventsResultse7daa122
      description: <p>the observable to the EventsResults object </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.get(String,EventType,String)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: get(String appId, EventType eventType, String eventId)
  nameWithType: EventsImpl.get(String appId, EventType eventType, String eventId)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.get(String appId, EventType eventType, String eventId)
  type: Method
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public EventsResults get(String appId, EventType eventType, String eventId)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    return:
      type: com.microsoft.azure.applicationinsights.query.models.EventsResults
      description: <p>the EventsResults object if successful. </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getAsync(String,EventType,String,final ServiceCallback<EventsResults>)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getAsync(String appId, EventType eventType, String eventId, final ServiceCallback<EventsResults> serviceCallback)
  nameWithType: EventsImpl.getAsync(String appId, EventType eventType, String eventId, final ServiceCallback<EventsResults> serviceCallback)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getAsync(String appId, EventType eventType, String eventId, final ServiceCallback<EventsResults> serviceCallback)
  type: Method
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<EventsResults> getAsync(String appId, EventType eventType, String eventId, final ServiceCallback<EventsResults> serviceCallback)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getAsync(String,EventType,String)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getAsync(String appId, EventType eventType, String eventId)
  nameWithType: EventsImpl.getAsync(String appId, EventType eventType, String eventId)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getAsync(String appId, EventType eventType, String eventId)
  type: Method
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public Observable<EventsResults> getAsync(String appId, EventType eventType, String eventId)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the observable to the EventsResults object </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getWithServiceResponseAsync(String,EventType,String)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getWithServiceResponseAsync(String appId, EventType eventType, String eventId)
  nameWithType: EventsImpl.getWithServiceResponseAsync(String appId, EventType eventType, String eventId)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getWithServiceResponseAsync(String appId, EventType eventType, String eventId)
  type: Method
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<EventsResults>> getWithServiceResponseAsync(String appId, EventType eventType, String eventId)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    return:
      type: fc480ba2com.microsoft.azure.applicationinsights.query.models.EventsResultse7daa122
      description: <p>the observable to the EventsResults object </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.get(String,EventType,String,String)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: get(String appId, EventType eventType, String eventId, String timespan)
  nameWithType: EventsImpl.get(String appId, EventType eventType, String eventId, String timespan)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.get(String appId, EventType eventType, String eventId, String timespan)
  type: Method
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public EventsResults get(String appId, EventType eventType, String eventId, String timespan)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    return:
      type: com.microsoft.azure.applicationinsights.query.models.EventsResults
      description: <p>the EventsResults object if successful. </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getAsync(String,EventType,String,String,final ServiceCallback<EventsResults>)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getAsync(String appId, EventType eventType, String eventId, String timespan, final ServiceCallback<EventsResults> serviceCallback)
  nameWithType: EventsImpl.getAsync(String appId, EventType eventType, String eventId, String timespan, final ServiceCallback<EventsResults> serviceCallback)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getAsync(String appId, EventType eventType, String eventId, String timespan, final ServiceCallback<EventsResults> serviceCallback)
  type: Method
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<EventsResults> getAsync(String appId, EventType eventType, String eventId, String timespan, final ServiceCallback<EventsResults> serviceCallback)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getAsync(String,EventType,String,String)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getAsync(String appId, EventType eventType, String eventId, String timespan)
  nameWithType: EventsImpl.getAsync(String appId, EventType eventType, String eventId, String timespan)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getAsync(String appId, EventType eventType, String eventId, String timespan)
  type: Method
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public Observable<EventsResults> getAsync(String appId, EventType eventType, String eventId, String timespan)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.applicationinsights.query.models.EventsResultsa08ddfce
      description: <p>the observable to the EventsResults object </p>
- uid: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getWithServiceResponseAsync(String,EventType,String,String)
  parent: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl
  href: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.yml
  name: getWithServiceResponseAsync(String appId, EventType eventType, String eventId, String timespan)
  nameWithType: EventsImpl.getWithServiceResponseAsync(String appId, EventType eventType, String eventId, String timespan)
  fullName: com.microsoft.azure.applicationinsights.query.implementation.EventsImpl.getWithServiceResponseAsync(String appId, EventType eventType, String eventId, String timespan)
  type: Method
  summary: "<p>Get an event. Gets the data for a single event.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<EventsResults>> getWithServiceResponseAsync(String appId, EventType eventType, String eventId, String timespan)
    parameters:
    - id: appId
      type: "26831127"
      description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    - id: eventType
      type: com.microsoft.azure.applicationinsights.query.models.EventType
      description: "<p>The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types. Possible values include: '$all', 'traces', 'customEvents', 'pageViews', 'browserTimings', 'requests', 'dependencies', 'exceptions', 'availabilityResults', 'performanceCounters', 'customMetrics' </p>"
    - id: eventId
      type: "26831127"
      description: <p>ID of event. </p>
    - id: timespan
      type: "26831127"
      description: <p>Optional. The timespan over which to retrieve events. This is an ISO8601 time period value. This timespan is applied in addition to any that are specified in the Odata expression. </p>
    return:
      type: fc480ba2com.microsoft.azure.applicationinsights.query.models.EventsResultse7daa122
      description: <p>the observable to the EventsResults object </p>
