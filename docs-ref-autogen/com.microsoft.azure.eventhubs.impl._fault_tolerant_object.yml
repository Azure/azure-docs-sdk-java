### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.impl._fault_tolerant_object
  id: _fault_tolerant_object
  parent: com.microsoft.azure.eventhubs.impl
  children:
  - com.microsoft.azure.eventhubs.impl._fault_tolerant_object.close(final ReactorDispatcher,final OperationResult<Void, Exception>)
  - com.microsoft.azure.eventhubs.impl._fault_tolerant_object.FaultTolerantObject(final Operation<T>,final Operation<Void>)
  - com.microsoft.azure.eventhubs.impl._fault_tolerant_object.runOnOpenedObject(final ReactorDispatcher,final OperationResult<T, Exception>)
  - com.microsoft.azure.eventhubs.impl._fault_tolerant_object.unsafeGetIfOpened()
  href: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.yml
  langs:
  - java
  name: FaultTolerantObject<T>
  nameWithType: FaultTolerantObject<T>
  fullName: com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T>
  type: Class
  source:
    remote: &o0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/FaultTolerantObject.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/FaultTolerantObject.java
    startLine: 10
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public class FaultTolerantObject<T extends IOObject>
    typeParameters:
    - type: 8ce1ecb9
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.close(final ReactorDispatcher,final OperationResult<Void, Exception>)
  id: close(final ReactorDispatcher,final OperationResult<Void, Exception>)
  parent: com.microsoft.azure.eventhubs.impl._fault_tolerant_object
  href: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.yml
  langs:
  - java
  name: close(final ReactorDispatcher dispatcher, final OperationResult<Void, Exception> closeCallback)
  nameWithType: FaultTolerantObject<T>.close(final ReactorDispatcher dispatcher, final OperationResult<Void, Exception> closeCallback)
  fullName: void com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.close(final ReactorDispatcher dispatcher, final OperationResult<Void, Exception> closeCallback)
  overload: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.close*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/FaultTolerantObject.java
    startLine: 84
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public void close(final ReactorDispatcher dispatcher, final OperationResult<Void, Exception> closeCallback)
    parameters:
    - id: dispatcher
      type: 93de0ef9com.microsoft.azure.eventhubs.impl._reactor_dispatcher
    - id: closeCallback
      type: 93de0ef9com.microsoft.azure.eventhubs.impl._operation_result372b00f0
- uid: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.FaultTolerantObject(final Operation<T>,final Operation<Void>)
  id: FaultTolerantObject(final Operation<T>,final Operation<Void>)
  parent: com.microsoft.azure.eventhubs.impl._fault_tolerant_object
  href: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.yml
  langs:
  - java
  name: FaultTolerantObject(final Operation<T> openAsync, final Operation<Void> closeAsync)
  nameWithType: FaultTolerantObject<T>.FaultTolerantObject(final Operation<T> openAsync, final Operation<Void> closeAsync)
  fullName: com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.FaultTolerantObject(final Operation<T> openAsync, final Operation<Void> closeAsync)
  overload: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.FaultTolerantObject*
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/FaultTolerantObject.java
    startLine: 21
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public FaultTolerantObject(final Operation<T> openAsync, final Operation<Void> closeAsync)
    parameters:
    - id: openAsync
      type: 93de0ef9com.microsoft.azure.eventhubs.impl._operation669339f7
    - id: closeAsync
      type: 93de0ef9com.microsoft.azure.eventhubs.impl._operation88a69386
- uid: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.runOnOpenedObject(final ReactorDispatcher,final OperationResult<T, Exception>)
  id: runOnOpenedObject(final ReactorDispatcher,final OperationResult<T, Exception>)
  parent: com.microsoft.azure.eventhubs.impl._fault_tolerant_object
  href: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.yml
  langs:
  - java
  name: runOnOpenedObject(final ReactorDispatcher dispatcher, final OperationResult<T, Exception> openCallback)
  nameWithType: FaultTolerantObject<T>.runOnOpenedObject(final ReactorDispatcher dispatcher, final OperationResult<T, Exception> openCallback)
  fullName: void com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.runOnOpenedObject(final ReactorDispatcher dispatcher, final OperationResult<T, Exception> openCallback)
  overload: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.runOnOpenedObject*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/FaultTolerantObject.java
    startLine: 40
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public void runOnOpenedObject(final ReactorDispatcher dispatcher, final OperationResult<T, Exception> openCallback)
    parameters:
    - id: dispatcher
      type: 93de0ef9com.microsoft.azure.eventhubs.impl._reactor_dispatcher
    - id: openCallback
      type: 93de0ef9com.microsoft.azure.eventhubs.impl._operation_result4ee51867
- uid: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.unsafeGetIfOpened()
  id: unsafeGetIfOpened()
  parent: com.microsoft.azure.eventhubs.impl._fault_tolerant_object
  href: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.yml
  langs:
  - java
  name: unsafeGetIfOpened()
  nameWithType: FaultTolerantObject<T>.unsafeGetIfOpened()
  fullName: T com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.unsafeGetIfOpened()
  overload: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.unsafeGetIfOpened*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/FaultTolerantObject.java
    startLine: 32
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public T unsafeGetIfOpened()
    return:
      type: 8ce1ecb9
references:
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: 93de0ef9com.microsoft.azure.eventhubs.impl._operation669339f7
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs.impl._operation
    name: Operation
    fullName: com.microsoft.azure.eventhubs.impl.Operation
    href: com.microsoft.azure.eventhubs.impl._operation.yml
  - name: <T>
    fullName: <T>
- uid: 93de0ef9com.microsoft.azure.eventhubs.impl._operation88a69386
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs.impl._operation
    name: Operation
    fullName: com.microsoft.azure.eventhubs.impl.Operation
    href: com.microsoft.azure.eventhubs.impl._operation.yml
  - name: <Void>
    fullName: <Void>
- uid: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.FaultTolerantObject*
  name: FaultTolerantObject
  nameWithType: FaultTolerantObject<T>.FaultTolerantObject
  fullName: com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.FaultTolerantObject
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.unsafeGetIfOpened*
  name: unsafeGetIfOpened
  nameWithType: FaultTolerantObject<T>.unsafeGetIfOpened
  fullName: T com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.unsafeGetIfOpened
  package: com.microsoft.azure.eventhubs.impl
- uid: 93de0ef9com.microsoft.azure.eventhubs.impl._reactor_dispatcher
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs.impl._reactor_dispatcher
    name: ReactorDispatcher
    fullName: com.microsoft.azure.eventhubs.impl.ReactorDispatcher
    href: com.microsoft.azure.eventhubs.impl._reactor_dispatcher.yml
- uid: 93de0ef9com.microsoft.azure.eventhubs.impl._operation_result4ee51867
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs.impl._operation_result
    name: OperationResult
    fullName: com.microsoft.azure.eventhubs.impl.OperationResult
    href: com.microsoft.azure.eventhubs.impl._operation_result.yml
  - name: <T, Exception>
    fullName: <T, Exception>
- uid: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.runOnOpenedObject*
  name: runOnOpenedObject
  nameWithType: FaultTolerantObject<T>.runOnOpenedObject
  fullName: void com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.runOnOpenedObject
  package: com.microsoft.azure.eventhubs.impl
- uid: 93de0ef9com.microsoft.azure.eventhubs.impl._operation_result372b00f0
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.eventhubs.impl._operation_result
    name: OperationResult
    fullName: com.microsoft.azure.eventhubs.impl.OperationResult
    href: com.microsoft.azure.eventhubs.impl._operation_result.yml
  - name: <Void, Exception>
    fullName: <Void, Exception>
- uid: com.microsoft.azure.eventhubs.impl._fault_tolerant_object.close*
  name: close
  nameWithType: FaultTolerantObject<T>.close
  fullName: void com.microsoft.azure.eventhubs.impl.FaultTolerantObject<T extends IOObject>.close
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl._i_o_object
  parent: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl._i_o_object.yml
  name: IOObject
  nameWithType: IOObject
  fullName: com.microsoft.azure.eventhubs.impl.IOObject
  type: Interface
  syntax:
    content: public interface IOObject
- uid: com.microsoft.azure.eventhubs.impl._operation
  parent: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl._operation.yml
  name: Operation<T>
  nameWithType: Operation<T>
  fullName: com.microsoft.azure.eventhubs.impl.Operation<T>
  type: Interface
  syntax:
    content: public interface Operation<T>
    typeParameters:
    - type: 8ce1ecb9
- uid: com.microsoft.azure.eventhubs.impl._operation_result
  parent: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl._operation_result.yml
  name: OperationResult<T,E>
  nameWithType: OperationResult<T,E>
  fullName: com.microsoft.azure.eventhubs.impl.OperationResult<T,E>
  type: Interface
  syntax:
    content: public interface OperationResult<T,E extends Throwable>
    typeParameters:
    - type: 8ce1ecb9
    - type: 0ca03e3a
- uid: com.microsoft.azure.eventhubs.impl._reactor_dispatcher
  parent: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl._reactor_dispatcher.yml
  name: ReactorDispatcher
  nameWithType: ReactorDispatcher
  fullName: com.microsoft.azure.eventhubs.impl.ReactorDispatcher
  type: Class
  summary: >-
    <p>

      <xref uid="" data-throw-if-not-resolved="false">Reactor</xref> is not thread-safe - all calls to <xref uid="" data-throw-if-not-resolved="false">Proton</xref> API's should be - on the Reactor Thread. <xref uid="" data-throw-if-not-resolved="false">Reactor</xref> works out-of-box for all event driven API - ex: onReceive - which could raise upon onSocketRead. <xref uid="" data-throw-if-not-resolved="false">Reactor</xref> didn't support API's like Send() out-of-box - which could potentially run on different thread to that of Reactor. So, the following utility class is used to generate an Event to hook into <xref uid="" data-throw-if-not-resolved="false">Reactor</xref>'s event delegation pattern. It uses a <xref uid="" data-throw-if-not-resolved="false">Pipe</xref> as the IO on which Reactor Listens to. Cardinality: multiple <xref uid="com.microsoft.azure.eventhubs.impl._reactor_dispatcher" data-throw-if-not-resolved="false">ReactorDispatcher</xref>'s could be attached to 1 <xref uid="" data-throw-if-not-resolved="false">Reactor</xref>. Each <xref uid="com.microsoft.azure.eventhubs.impl._reactor_dispatcher" data-throw-if-not-resolved="false">ReactorDispatcher</xref> should be initialized Synchronously - as it calls API in <xref uid="" data-throw-if-not-resolved="false">Reactor</xref> which is not thread-safe. </p>
  syntax:
    content: public class ReactorDispatcher
