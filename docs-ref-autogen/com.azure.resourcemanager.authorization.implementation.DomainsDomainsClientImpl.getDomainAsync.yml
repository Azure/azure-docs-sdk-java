### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.implementation.DomainsDomainsClientImpl.getDomainAsync*"
fullName: "com.azure.resourcemanager.authorization.implementation.DomainsDomainsClientImpl.getDomainAsync"
name: "getDomainAsync"
nameWithType: "DomainsDomainsClientImpl.getDomainAsync"
members:
- uid: "com.azure.resourcemanager.authorization.implementation.DomainsDomainsClientImpl.getDomainAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.implementation.DomainsDomainsClientImpl.getDomainAsync(String domainId)"
  name: "getDomainAsync(String domainId)"
  nameWithType: "DomainsDomainsClientImpl.getDomainAsync(String domainId)"
  summary: "Get entity from domains by key."
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<MicrosoftGraphDomainInner> getDomainAsync(String domainId)"
  returns:
    description: "entity from domains by key."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.implementation.DomainsDomainsClientImpl.getDomainAsync(java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand>)"
  fullName: "com.azure.resourcemanager.authorization.implementation.DomainsDomainsClientImpl.getDomainAsync(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  name: "getDomainAsync(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  nameWithType: "DomainsDomainsClientImpl.getDomainAsync(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  summary: "Get entity from domains by key."
  parameters:
  - description: "key: id of domain."
    name: "domainId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainSelect&text=DomainsDomainSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand?alt=com.azure.resourcemanager.authorization.fluent.models.DomainsDomainExpand&text=DomainsDomainExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<MicrosoftGraphDomainInner> getDomainAsync(String domainId, List<DomainsDomainSelect> select, List<DomainsDomainExpand> expand)"
  returns:
    description: "entity from domains by key."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDomainInner&text=MicrosoftGraphDomainInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.3.0
