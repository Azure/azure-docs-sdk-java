### YamlMime:JavaMember
uid: "com.azure.core.credential.AzureSasCredential.AzureSasCredential*"
fullName: "com.azure.core.credential.AzureSasCredential.AzureSasCredential"
name: "AzureSasCredential"
nameWithType: "AzureSasCredential.AzureSasCredential"
members:
- uid: "com.azure.core.credential.AzureSasCredential.AzureSasCredential(java.lang.String)"
  fullName: "com.azure.core.credential.AzureSasCredential.AzureSasCredential(String signature)"
  name: "AzureSasCredential(String signature)"
  nameWithType: "AzureSasCredential.AzureSasCredential(String signature)"
  summary: "Creates a credential that authorizes request with the given shared access signature.\n\nThe `signature` passed is assumed to be encoded. This constructor is effectively the same as calling <xref uid=\"com.azure.core.credential.AzureSasCredential.AzureSasCredential(java.lang.String,java.util.function.Function&lt;java.lang.String,java.lang.String&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"new AzureSasCredential(signature, null))\"></xref>."
  parameters:
  - description: "The shared access signature used to authorize requests."
    name: "signature"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureSasCredential(String signature)"
- uid: "com.azure.core.credential.AzureSasCredential.AzureSasCredential(java.lang.String,java.util.function.Function<java.lang.String,java.lang.String>)"
  fullName: "com.azure.core.credential.AzureSasCredential.AzureSasCredential(String signature, Function<String,String> signatureEncoder)"
  name: "AzureSasCredential(String signature, Function<String,String> signatureEncoder)"
  nameWithType: "AzureSasCredential.AzureSasCredential(String signature, Function<String,String> signatureEncoder)"
  summary: "Creates a credential that authorizes request within the given shared access signature.\n\nIf `signatureEncoder` is non-null the `signature`, and all <xref uid=\"#update(String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"updated\n signatures\"></xref>, will be encoded using the function. `signatureEncoder` should be as idempotent as possible to reduce the chance of double encoding errors."
  parameters:
  - description: "The shared access signature used to authorize requests."
    name: "signature"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional function which encodes the <code>signature</code>."
    name: "signatureEncoder"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureSasCredential(String signature, Function<String,String> signatureEncoder)"
type: "constructor"
metadata: {}
package: "com.azure.core.credential"
artifact: com.azure:azure-core:1.23.0
