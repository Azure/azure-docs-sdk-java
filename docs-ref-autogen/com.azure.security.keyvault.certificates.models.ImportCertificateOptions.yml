### YamlMime:JavaType
uid: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions"
fullName: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions"
name: "ImportCertificateOptions"
nameWithType: "ImportCertificateOptions"
summary: "Represents the configuration used to import a certificate in the key vault."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ImportCertificateOptions**"
constructors:
- uid: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.ImportCertificateOptions(java.lang.String,byte[])"
  fullName: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.ImportCertificateOptions(String name, byte[] certificate)"
  name: "ImportCertificateOptions(String name, byte[] certificate)"
  nameWithType: "ImportCertificateOptions.ImportCertificateOptions(String name, byte[] certificate)"
  summary: "Creates instance of Certificate<wbr>Import<wbr>Options."
  parameters:
  - description: "The name of the key."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The PFX or PEM formatted value of the certificate containing both the x509 certificates and the private key."
    name: "certificate"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public ImportCertificateOptions(String name, byte[] certificate)"
  desc: "Creates instance of CertificateImportOptions."
methods:
- uid: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.getCertificate()"
  fullName: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.getCertificate()"
  name: "getCertificate()"
  nameWithType: "ImportCertificateOptions.getCertificate()"
  summary: "Get the value of the certificate."
  syntax: "public byte[] getCertificate()"
  desc: "Get the value of the certificate."
  returns:
    description: "the value of the certificate."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.getName()"
  fullName: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.getName()"
  name: "getName()"
  nameWithType: "ImportCertificateOptions.getName()"
  summary: "Get the name of the certificate."
  syntax: "public String getName()"
  desc: "Get the name of the certificate."
  returns:
    description: "the name of the certificate."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.getPassword()"
  fullName: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.getPassword()"
  name: "getPassword()"
  nameWithType: "ImportCertificateOptions.getPassword()"
  summary: "Get the password for encrypting the certificate, if its encrypted."
  syntax: "public String getPassword()"
  desc: "Get the password for encrypting the certificate, if its encrypted."
  returns:
    description: "the password"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.getPolicy()"
  fullName: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.getPolicy()"
  name: "getPolicy()"
  nameWithType: "ImportCertificateOptions.getPolicy()"
  summary: "Get the management policy for the certificate."
  syntax: "public CertificatePolicy getPolicy()"
  desc: "Get the management policy for the certificate."
  returns:
    description: "the management policy"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.getTags()"
  fullName: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.getTags()"
  name: "getTags()"
  nameWithType: "ImportCertificateOptions.getTags()"
  summary: "Get the tags associated with the secret."
  syntax: "public Map<String,String> getTags()"
  desc: "Get the tags associated with the secret."
  returns:
    description: "the value of the tags."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.isEnabled()"
  fullName: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.isEnabled()"
  name: "isEnabled()"
  nameWithType: "ImportCertificateOptions.isEnabled()"
  summary: "Get the enabled status."
  syntax: "public Boolean isEnabled()"
  desc: "Get the enabled status."
  returns:
    description: "the enabled status"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.setEnabled(java.lang.Boolean)"
  fullName: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.setEnabled(Boolean enabled)"
  name: "setEnabled(Boolean enabled)"
  nameWithType: "ImportCertificateOptions.setEnabled(Boolean enabled)"
  summary: "Set the enabled status."
  parameters:
  - description: "The enabled status to set."
    name: "enabled"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public ImportCertificateOptions setEnabled(Boolean enabled)"
  desc: "Set the enabled status."
  returns:
    description: "the CertificateImportOptions itself"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.ImportCertificateOptions?alt=com.azure.security.keyvault.certificates.models.ImportCertificateOptions&text=ImportCertificateOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.setPassword(java.lang.String)"
  fullName: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.setPassword(String password)"
  name: "setPassword(String password)"
  nameWithType: "ImportCertificateOptions.setPassword(String password)"
  summary: "Set the password for encrypting the certificate, if its encrypted."
  parameters:
  - description: "The password used to encrypt the certificate."
    name: "password"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ImportCertificateOptions setPassword(String password)"
  desc: "Set the password for encrypting the certificate, if its encrypted."
  returns:
    description: "the updated CertificateImportOptions itself"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.ImportCertificateOptions?alt=com.azure.security.keyvault.certificates.models.ImportCertificateOptions&text=ImportCertificateOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.setPolicy(com.azure.security.keyvault.certificates.models.CertificatePolicy)"
  fullName: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.setPolicy(CertificatePolicy policy)"
  name: "setPolicy(CertificatePolicy policy)"
  nameWithType: "ImportCertificateOptions.setPolicy(CertificatePolicy policy)"
  summary: "Set the management policy for the certificate."
  parameters:
  - description: "the management policy for the certificate"
    name: "policy"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImportCertificateOptions setPolicy(CertificatePolicy policy)"
  desc: "Set the management policy for the certificate."
  returns:
    description: "the updated CertificateImportOptions itself"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.ImportCertificateOptions?alt=com.azure.security.keyvault.certificates.models.ImportCertificateOptions&text=ImportCertificateOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.security.keyvault.certificates.models.ImportCertificateOptions.setTags(Map<String,String> tags)"
  name: "setTags(Map<String,String> tags)"
  nameWithType: "ImportCertificateOptions.setTags(Map<String,String> tags)"
  summary: "Set the application specific maetadata."
  parameters:
  - description: "The metadata to set."
    name: "tags"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public ImportCertificateOptions setTags(Map<String,String> tags)"
  desc: "Set the application specific maetadata."
  returns:
    description: "the updated CertificateImportOptions itself"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.ImportCertificateOptions?alt=com.azure.security.keyvault.certificates.models.ImportCertificateOptions&text=ImportCertificateOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents the configuration used to import a certificate in the key vault."
metadata: {}
package: "com.azure.security.keyvault.certificates.models"
artifact: com.azure:azure-security-keyvault-certificates:4.4.2
