### YamlMime:JavaMember
uid: "com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner.withExpressRouteCircuitPeering*"
fullName: "com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner.withExpressRouteCircuitPeering"
name: "withExpressRouteCircuitPeering"
nameWithType: "PeerExpressRouteCircuitConnectionInner.withExpressRouteCircuitPeering"
members:
- uid: "com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner.withExpressRouteCircuitPeering(com.azure.core.management.SubResource)"
  fullName: "com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner.withExpressRouteCircuitPeering(SubResource expressRouteCircuitPeering)"
  name: "withExpressRouteCircuitPeering(SubResource expressRouteCircuitPeering)"
  nameWithType: "PeerExpressRouteCircuitConnectionInner.withExpressRouteCircuitPeering(SubResource expressRouteCircuitPeering)"
  summary: "Set the expressRouteCircuitPeering property: Reference to Express Route Circuit Private Peering Resource of the circuit."
  parameters:
  - description: "the expressRouteCircuitPeering value to set."
    name: "expressRouteCircuitPeering"
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeerExpressRouteCircuitConnectionInner withExpressRouteCircuitPeering(SubResource expressRouteCircuitPeering)"
  returns:
    description: "the PeerExpressRouteCircuitConnectionInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner?alt=com.azure.resourcemanager.network.fluent.models.PeerExpressRouteCircuitConnectionInner&text=PeerExpressRouteCircuitConnectionInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.1.0
