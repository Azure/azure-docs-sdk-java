### YamlMime:JavaType
uid: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
fullName: "com.azure.data.appconfiguration.ConfigurationClientBuilder"
name: "ConfigurationClientBuilder"
nameWithType: "ConfigurationClientBuilder"
summary: "This class provides a fluent builder API to help aid the configuration and instantiation of <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationClients\"></xref> and <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationAsyncClients\"></xref>, call <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildClient\"></xref> and <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildAsyncClient\"></xref> respectively to construct an instance of the desired client.\n\nThe client needs the service endpoint of the Azure App Configuration store and access credential. <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"connectionString(String)\"></xref> gives the builder the service endpoint and access credential.\n\n**Instantiating an asynchronous Configuration Client**\n\n```java\nConfigurationAsyncClient configurationAsyncClient = new ConfigurationClientBuilder()\n     .connectionString(connectionString)\n     .buildAsyncClient();\n```\n\n**Instantiating a synchronous Configuration Client**\n\n```java\nConfigurationClient configurationClient = new ConfigurationClientBuilder()\n     .connectionString(connectionString)\n     .buildClient();\n```\n\nAnother way to construct the client is using a <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref>. The pipeline gives the client an authenticated way to communicate with the service but it doesn't contain the service endpoint. Set the pipeline with <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"this\"></xref> and set the service endpoint with <xref uid=\"com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"this\"></xref>. Using a pipeline requires additional setup but allows for finer control on how the <xref uid=\"com.azure.data.appconfiguration.ConfigurationClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationClient\"></xref> and <xref uid=\"com.azure.data.appconfiguration.ConfigurationAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationAsyncClient\"></xref> is built.\n\n```java\nHttpPipeline pipeline = new HttpPipelineBuilder()\n     .policies(/* add policies */)\n     .build();\n \n ConfigurationClient configurationClient = new ConfigurationClientBuilder()\n     .pipeline(pipeline)\n     .endpoint(\"https://myconfig.azure.net/\")\n     .connectionString(connectionString)\n     .buildClient();\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ConfigurationClientBuilder"
constructors:
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.ConfigurationClientBuilder()"
methods:
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildAsyncClient()"
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.buildClient()"
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.configuration(com.azure.core.util.Configuration)"
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.connectionString(java.lang.String)"
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.credential(com.azure.core.credential.TokenCredential)"
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.endpoint(java.lang.String)"
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpClient(com.azure.core.http.HttpClient)"
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.retryPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
- "com.azure.data.appconfiguration.ConfigurationClientBuilder.serviceVersion(com.azure.data.appconfiguration.ConfigurationServiceVersion)"
type: "class"
metadata: {}
package: "com.azure.data.appconfiguration"
artifact: com.azure:azure-data-appconfiguration:1.1.8
