### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.LoadBalancer"
fullName: "com.microsoft.azure.management.network.LoadBalancer"
name: "LoadBalancer"
nameWithType: "LoadBalancer"
summary: "Entry point for load balancer management API in Azure."
syntax: "public interface LoadBalancer extends GroupableResource<NetworkManager,LoadBalancerInner>, Refreshable<LoadBalancer>, Updatable<LoadBalancer.Update>, UpdatableWithTags<LoadBalancer>, HasLoadBalancingRules"
methods:
- uid: "com.microsoft.azure.management.network.LoadBalancer.backends()"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.backends()"
  name: "backends()"
  nameWithType: "LoadBalancer.backends()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,LoadBalancerBackend> backends()"
  returns:
    description: "backends for this load balancer to load balance the incoming traffic among, indexed by name"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.LoadBalancerBackend?alt=com.microsoft.azure.management.network.LoadBalancerBackend&text=LoadBalancerBackend\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.LoadBalancer.findFrontendByPublicIPAddress(com.microsoft.azure.management.network.PublicIPAddress)"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.findFrontendByPublicIPAddress(PublicIPAddress publicIPAddress)"
  name: "findFrontendByPublicIPAddress(PublicIPAddress publicIPAddress)"
  nameWithType: "LoadBalancer.findFrontendByPublicIPAddress(PublicIPAddress publicIPAddress)"
  summary: "Searches for the public frontend that is associated with the provided public IP address, if one exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "a public IP address to search by"
    name: "publicIPAddress"
    type: "<xref href=\"com.microsoft.azure.management.network.PublicIPAddress?alt=com.microsoft.azure.management.network.PublicIPAddress&text=PublicIPAddress\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract LoadBalancerPublicFrontend findFrontendByPublicIPAddress(PublicIPAddress publicIPAddress)"
  desc: "Searches for the public frontend that is associated with the provided public IP address, if one exists."
  returns:
    description: "a public frontend associated with the provided public IP address"
    type: "<xref href=\"com.microsoft.azure.management.network.LoadBalancerPublicFrontend?alt=com.microsoft.azure.management.network.LoadBalancerPublicFrontend&text=LoadBalancerPublicFrontend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.LoadBalancer.findFrontendByPublicIPAddress(java.lang.String)"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.findFrontendByPublicIPAddress(String publicIPAddressId)"
  name: "findFrontendByPublicIPAddress(String publicIPAddressId)"
  nameWithType: "LoadBalancer.findFrontendByPublicIPAddress(String publicIPAddressId)"
  summary: "Searches for the public frontend that is associated with the provided public IP address, if one exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID of a public IP address to search by"
    name: "publicIPAddressId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract LoadBalancerPublicFrontend findFrontendByPublicIPAddress(String publicIPAddressId)"
  desc: "Searches for the public frontend that is associated with the provided public IP address, if one exists."
  returns:
    description: "a public frontend associated with the provided public IP address"
    type: "<xref href=\"com.microsoft.azure.management.network.LoadBalancerPublicFrontend?alt=com.microsoft.azure.management.network.LoadBalancerPublicFrontend&text=LoadBalancerPublicFrontend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.LoadBalancer.frontends()"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.frontends()"
  name: "frontends()"
  nameWithType: "LoadBalancer.frontends()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,LoadBalancerFrontend> frontends()"
  returns:
    description: "frontends for this load balancer, for the incoming traffic to come from."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.LoadBalancerFrontend?alt=com.microsoft.azure.management.network.LoadBalancerFrontend&text=LoadBalancerFrontend\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.LoadBalancer.httpProbes()"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.httpProbes()"
  name: "httpProbes()"
  nameWithType: "LoadBalancer.httpProbes()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,LoadBalancerHttpProbe> httpProbes()"
  returns:
    description: "HTTP probes of this load balancer, indexed by the name"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.LoadBalancerHttpProbe?alt=com.microsoft.azure.management.network.LoadBalancerHttpProbe&text=LoadBalancerHttpProbe\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.LoadBalancer.httpsProbes()"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.httpsProbes()"
  name: "httpsProbes()"
  nameWithType: "LoadBalancer.httpsProbes()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,LoadBalancerHttpProbe> httpsProbes()"
  returns:
    description: "HTTPS probes of this load balancer, indexed by the name"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.LoadBalancerHttpProbe?alt=com.microsoft.azure.management.network.LoadBalancerHttpProbe&text=LoadBalancerHttpProbe\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.LoadBalancer.inboundNatPools()"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.inboundNatPools()"
  name: "inboundNatPools()"
  nameWithType: "LoadBalancer.inboundNatPools()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,LoadBalancerInboundNatPool> inboundNatPools()"
  returns:
    description: "inbound NAT pools, indexed by name"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.LoadBalancerInboundNatPool?alt=com.microsoft.azure.management.network.LoadBalancerInboundNatPool&text=LoadBalancerInboundNatPool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.LoadBalancer.inboundNatRules()"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.inboundNatRules()"
  name: "inboundNatRules()"
  nameWithType: "LoadBalancer.inboundNatRules()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,LoadBalancerInboundNatRule> inboundNatRules()"
  returns:
    description: "inbound NAT rules for this balancer"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.LoadBalancerInboundNatRule?alt=com.microsoft.azure.management.network.LoadBalancerInboundNatRule&text=LoadBalancerInboundNatRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.LoadBalancer.privateFrontends()"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.privateFrontends()"
  name: "privateFrontends()"
  nameWithType: "LoadBalancer.privateFrontends()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,LoadBalancerPrivateFrontend> privateFrontends()"
  returns:
    description: "private (internal) frontends"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.LoadBalancerPrivateFrontend?alt=com.microsoft.azure.management.network.LoadBalancerPrivateFrontend&text=LoadBalancerPrivateFrontend\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.LoadBalancer.publicFrontends()"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.publicFrontends()"
  name: "publicFrontends()"
  nameWithType: "LoadBalancer.publicFrontends()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,LoadBalancerPublicFrontend> publicFrontends()"
  returns:
    description: "public (Internet-facing) frontends"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.LoadBalancerPublicFrontend?alt=com.microsoft.azure.management.network.LoadBalancerPublicFrontend&text=LoadBalancerPublicFrontend\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.LoadBalancer.publicIPAddressIds()"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.publicIPAddressIds()"
  name: "publicIPAddressIds()"
  nameWithType: "LoadBalancer.publicIPAddressIds()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<String> publicIPAddressIds()"
  returns:
    description: "resource IDs of the public IP addresses assigned to the frontends of this load balancer"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.LoadBalancer.sku()"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.sku()"
  name: "sku()"
  nameWithType: "LoadBalancer.sku()"
  modifiers:
  - "abstract"
  syntax: "public abstract LoadBalancerSkuType sku()"
  returns:
    description: "load balancer sku."
    type: "<xref href=\"com.microsoft.azure.management.network.LoadBalancerSkuType?alt=com.microsoft.azure.management.network.LoadBalancerSkuType&text=LoadBalancerSkuType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.LoadBalancer.tcpProbes()"
  fullName: "com.microsoft.azure.management.network.LoadBalancer.tcpProbes()"
  name: "tcpProbes()"
  nameWithType: "LoadBalancer.tcpProbes()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,LoadBalancerTcpProbe> tcpProbes()"
  returns:
    description: "TCP probes of this load balancer, indexed by the name"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.LoadBalancerTcpProbe?alt=com.microsoft.azure.management.network.LoadBalancerTcpProbe&text=LoadBalancerTcpProbe\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Entry point for load balancer management API in Azure."
implements:
- "<xref href=\"com.microsoft.azure.management.network.model.HasLoadBalancingRules?alt=com.microsoft.azure.management.network.model.HasLoadBalancingRules&text=HasLoadBalancingRules\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.network.model.UpdatableWithTags?alt=com.microsoft.azure.management.network.model.UpdatableWithTags&text=UpdatableWithTags\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.LoadBalancer?alt=com.microsoft.azure.management.network.LoadBalancer&text=LoadBalancer\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource&text=GroupableResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.implementation.NetworkManager?alt=com.microsoft.azure.management.network.implementation.NetworkManager&text=NetworkManager\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.implementation.LoadBalancerInner?alt=com.microsoft.azure.management.network.implementation.LoadBalancerInner&text=LoadBalancerInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Refreshable?alt=com.microsoft.azure.management.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.LoadBalancer?alt=com.microsoft.azure.management.network.LoadBalancer&text=LoadBalancer\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Updatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.LoadBalancer.Update?alt=com.microsoft.azure.management.network.LoadBalancer.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
