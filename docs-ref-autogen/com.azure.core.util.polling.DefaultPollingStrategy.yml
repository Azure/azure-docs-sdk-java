### YamlMime:JavaType
uid: "com.azure.core.util.polling.DefaultPollingStrategy"
fullName: "com.azure.core.util.polling.DefaultPollingStrategy<T,U>"
name: "DefaultPollingStrategy<T,U>"
nameWithType: "DefaultPollingStrategy<T,U>"
summary: "The default polling strategy to use with Azure data plane services."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DefaultPollingStrategy<T,U>**</br> implements <xref href=\"com.azure.core.util.polling.PollingStrategy?alt=com.azure.core.util.polling.PollingStrategy&text=PollingStrategy\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.core.util.polling.DefaultPollingStrategy.DefaultPollingStrategy(com.azure.core.http.HttpPipeline)"
  fullName: "com.azure.core.util.polling.DefaultPollingStrategy<T,U>.DefaultPollingStrategy(HttpPipeline httpPipeline)"
  name: "DefaultPollingStrategy(HttpPipeline httpPipeline)"
  nameWithType: "DefaultPollingStrategy<T,U>.DefaultPollingStrategy(HttpPipeline httpPipeline)"
  summary: "Creates a chained polling strategy with 3 known polling strategies, <xref uid=\"com.azure.core.util.polling.OperationResourcePollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationResourcePollingStrategy\"></xref>, <xref uid=\"com.azure.core.util.polling.LocationPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationPollingStrategy\"></xref>, and <xref uid=\"com.azure.core.util.polling.StatusCheckPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StatusCheckPollingStrategy\"></xref>, in this order, with a JSON serializer."
  parameters:
  - description: "an instance of <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to send requests with"
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DefaultPollingStrategy(HttpPipeline httpPipeline)"
  desc: "Creates a chained polling strategy with 3 known polling strategies, <xref uid=\"com.azure.core.util.polling.OperationResourcePollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationResourcePollingStrategy\"></xref>, <xref uid=\"com.azure.core.util.polling.LocationPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationPollingStrategy\"></xref>, and <xref uid=\"com.azure.core.util.polling.StatusCheckPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StatusCheckPollingStrategy\"></xref>, in this order, with a JSON serializer."
- uid: "com.azure.core.util.polling.DefaultPollingStrategy.DefaultPollingStrategy(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.JsonSerializer)"
  fullName: "com.azure.core.util.polling.DefaultPollingStrategy<T,U>.DefaultPollingStrategy(HttpPipeline httpPipeline, JsonSerializer serializer)"
  name: "DefaultPollingStrategy(HttpPipeline httpPipeline, JsonSerializer serializer)"
  nameWithType: "DefaultPollingStrategy<T,U>.DefaultPollingStrategy(HttpPipeline httpPipeline, JsonSerializer serializer)"
  summary: "Creates a chained polling strategy with 3 known polling strategies, <xref uid=\"com.azure.core.util.polling.OperationResourcePollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationResourcePollingStrategy\"></xref>, <xref uid=\"com.azure.core.util.polling.LocationPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationPollingStrategy\"></xref>, and <xref uid=\"com.azure.core.util.polling.StatusCheckPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StatusCheckPollingStrategy\"></xref>, in this order, with a custom serializer."
  parameters:
  - description: "an instance of <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to send requests with"
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "a custom serializer for serializing and deserializing polling responses"
    name: "serializer"
    type: "<xref href=\"com.azure.core.util.serializer.JsonSerializer?alt=com.azure.core.util.serializer.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DefaultPollingStrategy(HttpPipeline httpPipeline, JsonSerializer serializer)"
  desc: "Creates a chained polling strategy with 3 known polling strategies, <xref uid=\"com.azure.core.util.polling.OperationResourcePollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationResourcePollingStrategy\"></xref>, <xref uid=\"com.azure.core.util.polling.LocationPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationPollingStrategy\"></xref>, and <xref uid=\"com.azure.core.util.polling.StatusCheckPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StatusCheckPollingStrategy\"></xref>, in this order, with a custom serializer."
- uid: "com.azure.core.util.polling.DefaultPollingStrategy.DefaultPollingStrategy(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.JsonSerializer,com.azure.core.util.Context)"
  fullName: "com.azure.core.util.polling.DefaultPollingStrategy<T,U>.DefaultPollingStrategy(HttpPipeline httpPipeline, JsonSerializer serializer, Context context)"
  name: "DefaultPollingStrategy(HttpPipeline httpPipeline, JsonSerializer serializer, Context context)"
  nameWithType: "DefaultPollingStrategy<T,U>.DefaultPollingStrategy(HttpPipeline httpPipeline, JsonSerializer serializer, Context context)"
  summary: "Creates a chained polling strategy with 3 known polling strategies, <xref uid=\"com.azure.core.util.polling.OperationResourcePollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationResourcePollingStrategy\"></xref>, <xref uid=\"com.azure.core.util.polling.LocationPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationPollingStrategy\"></xref>, and <xref uid=\"com.azure.core.util.polling.StatusCheckPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StatusCheckPollingStrategy\"></xref>, in this order, with a custom serializer."
  parameters:
  - description: "an instance of <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to send requests with"
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "a custom serializer for serializing and deserializing polling responses"
    name: "serializer"
    type: "<xref href=\"com.azure.core.util.serializer.JsonSerializer?alt=com.azure.core.util.serializer.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />"
  - description: "an instance of <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref>"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DefaultPollingStrategy(HttpPipeline httpPipeline, JsonSerializer serializer, Context context)"
  desc: "Creates a chained polling strategy with 3 known polling strategies, <xref uid=\"com.azure.core.util.polling.OperationResourcePollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationResourcePollingStrategy\"></xref>, <xref uid=\"com.azure.core.util.polling.LocationPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationPollingStrategy\"></xref>, and <xref uid=\"com.azure.core.util.polling.StatusCheckPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StatusCheckPollingStrategy\"></xref>, in this order, with a custom serializer."
- uid: "com.azure.core.util.polling.DefaultPollingStrategy.DefaultPollingStrategy(com.azure.core.http.HttpPipeline,java.lang.String,com.azure.core.util.serializer.JsonSerializer,com.azure.core.util.Context)"
  fullName: "com.azure.core.util.polling.DefaultPollingStrategy<T,U>.DefaultPollingStrategy(HttpPipeline httpPipeline, String endpoint, JsonSerializer serializer, Context context)"
  name: "DefaultPollingStrategy(HttpPipeline httpPipeline, String endpoint, JsonSerializer serializer, Context context)"
  nameWithType: "DefaultPollingStrategy<T,U>.DefaultPollingStrategy(HttpPipeline httpPipeline, String endpoint, JsonSerializer serializer, Context context)"
  summary: "Creates a chained polling strategy with 3 known polling strategies, <xref uid=\"com.azure.core.util.polling.OperationResourcePollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationResourcePollingStrategy\"></xref>, <xref uid=\"com.azure.core.util.polling.LocationPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationPollingStrategy\"></xref>, and <xref uid=\"com.azure.core.util.polling.StatusCheckPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StatusCheckPollingStrategy\"></xref>, in this order, with a custom serializer."
  parameters:
  - description: "an instance of <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> to send requests with."
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "an endpoint for creating an absolute path when the path itself is relative."
    name: "endpoint"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "a custom serializer for serializing and deserializing polling responses."
    name: "serializer"
    type: "<xref href=\"com.azure.core.util.serializer.JsonSerializer?alt=com.azure.core.util.serializer.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />"
  - description: "an instance of <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref>."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DefaultPollingStrategy(HttpPipeline httpPipeline, String endpoint, JsonSerializer serializer, Context context)"
  desc: "Creates a chained polling strategy with 3 known polling strategies, <xref uid=\"com.azure.core.util.polling.OperationResourcePollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationResourcePollingStrategy\"></xref>, <xref uid=\"com.azure.core.util.polling.LocationPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationPollingStrategy\"></xref>, and <xref uid=\"com.azure.core.util.polling.StatusCheckPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StatusCheckPollingStrategy\"></xref>, in this order, with a custom serializer."
methods:
- uid: "com.azure.core.util.polling.DefaultPollingStrategy.canPoll(com.azure.core.http.rest.Response<?>)"
  fullName: "com.azure.core.util.polling.DefaultPollingStrategy<T,U>.canPoll(Response<?> initialResponse)"
  name: "canPoll(Response<?> initialResponse)"
  nameWithType: "DefaultPollingStrategy<T,U>.canPoll(Response<?> initialResponse)"
  summary: "Checks if this strategy is able to handle polling for this long-running operation based on the information in the initial response."
  parameters:
  - name: "initialResponse"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public Mono<Boolean> canPoll(Response<?> initialResponse)"
  desc: "Checks if this strategy is able to handle polling for this long-running operation based on the information in the initial response."
  returns:
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.core.util.polling.DefaultPollingStrategy.getResult(com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.serializer.TypeReference<U>)"
  fullName: "com.azure.core.util.polling.DefaultPollingStrategy<T,U>.getResult(PollingContext<T> context, TypeReference<U> resultType)"
  name: "getResult(PollingContext<T> context, TypeReference<U> resultType)"
  nameWithType: "DefaultPollingStrategy<T,U>.getResult(PollingContext<T> context, TypeReference<U> resultType)"
  summary: "Parses the response from the final GET call into the result type of the long-running operation."
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.core.util.polling.PollingContext?alt=com.azure.core.util.polling.PollingContext&text=PollingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "resultType"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<U> getResult(PollingContext<T> context, TypeReference<U> resultType)"
  desc: "Parses the response from the final GET call into the result type of the long-running operation."
  returns:
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.polling.DefaultPollingStrategy.onInitialResponse(com.azure.core.http.rest.Response<?>,com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.util.polling.DefaultPollingStrategy<T,U>.onInitialResponse(Response<?> response, PollingContext<T> pollingContext, TypeReference<T> pollResponseType)"
  name: "onInitialResponse(Response<?> response, PollingContext<T> pollingContext, TypeReference<T> pollResponseType)"
  nameWithType: "DefaultPollingStrategy<T,U>.onInitialResponse(Response<?> response, PollingContext<T> pollingContext, TypeReference<T> pollResponseType)"
  summary: "Parses the initial response into a <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref>, and stores information useful for polling in the <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollingContext\"></xref>."
  parameters:
  - name: "response"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "pollingContext"
    type: "<xref href=\"com.azure.core.util.polling.PollingContext?alt=com.azure.core.util.polling.PollingContext&text=PollingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "pollResponseType"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<PollResponse<T>> onInitialResponse(Response<?> response, PollingContext<T> pollingContext, TypeReference<T> pollResponseType)"
  desc: "Parses the initial response into a <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref>, and stores information useful for polling in the <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollingContext\"></xref>. If the result is anything other than <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus.IN_PROGRESS\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus#IN_PROGRESS\"></xref>, the long-running operation will be terminated and none of the other methods will be invoked."
  returns:
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.core.util.polling.DefaultPollingStrategy.poll(com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.util.polling.DefaultPollingStrategy<T,U>.poll(PollingContext<T> context, TypeReference<T> pollResponseType)"
  name: "poll(PollingContext<T> context, TypeReference<T> pollResponseType)"
  nameWithType: "DefaultPollingStrategy<T,U>.poll(PollingContext<T> context, TypeReference<T> pollResponseType)"
  summary: "Parses the response from the polling URL into a <xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollResponse\"></xref>, and stores information useful for further polling and final response in the <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollingContext\"></xref>."
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.core.util.polling.PollingContext?alt=com.azure.core.util.polling.PollingContext&text=PollingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "pollResponseType"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<PollResponse<T>> poll(PollingContext<T> context, TypeReference<T> pollResponseType)"
  desc: "Parses the response from the polling URL into a <xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollResponse\"></xref>, and stores information useful for further polling and final response in the <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollingContext\"></xref>. The result must have the <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref> specified, and the entire polling response content as a <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref>."
  returns:
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
typeParameters:
- description: "the type of the response type from a polling call, or BinaryData if raw response body should be kept"
  name: "T"
- description: "the type of the final result object to deserialize into, or BinaryData if raw response body should be\n           kept"
  name: "U"
desc: "The default polling strategy to use with Azure data plane services. The default polling strategy will attempt 3 known strategies, <xref uid=\"com.azure.core.util.polling.OperationResourcePollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationResourcePollingStrategy\"></xref>, <xref uid=\"com.azure.core.util.polling.LocationPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationPollingStrategy\"></xref>, and <xref uid=\"com.azure.core.util.polling.StatusCheckPollingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StatusCheckPollingStrategy\"></xref>, in this order. The first strategy that can poll on the initial response will be used. The created chained polling strategy is capable of handling most of the polling scenarios in Azure."
implements:
- "<xref href=\"com.azure.core.util.polling.PollingStrategy?alt=com.azure.core.util.polling.PollingStrategy&text=PollingStrategy\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.core.util.polling"
artifact: com.azure:azure-core:1.34.0
