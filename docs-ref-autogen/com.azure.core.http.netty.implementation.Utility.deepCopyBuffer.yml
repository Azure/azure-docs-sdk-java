### YamlMime:JavaMember
uid: "com.azure.core.http.netty.implementation.Utility.deepCopyBuffer*"
fullName: "com.azure.core.http.netty.implementation.Utility.deepCopyBuffer"
name: "deepCopyBuffer"
nameWithType: "Utility.deepCopyBuffer"
members:
- uid: "com.azure.core.http.netty.implementation.Utility.deepCopyBuffer(io.netty.buffer.ByteBuf)"
  fullName: "com.azure.core.http.netty.implementation.Utility.deepCopyBuffer(ByteBuf byteBuf)"
  name: "deepCopyBuffer(ByteBuf byteBuf)"
  nameWithType: "Utility.deepCopyBuffer(ByteBuf byteBuf)"
  summary: "Deep copies the passed <xref uid=\"io.netty.buffer.ByteBuf\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuf\"></xref> into a <xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer\"></xref>.\n\nUsing this method ensures that data returned by the network is resilient against Reactor Netty releasing the passed <xref uid=\"io.netty.buffer.ByteBuf\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuf\"></xref> once the `doOnNext` operator fires."
  parameters:
  - description: "The Netty <xref uid=\"io.netty.buffer.ByteBuf\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuf\"></xref> to deep copy."
    name: "byteBuf"
    type: "<xref href=\"io.netty.buffer.ByteBuf?alt=io.netty.buffer.ByteBuf&text=ByteBuf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ByteBuffer deepCopyBuffer(ByteBuf byteBuf)"
  returns:
    description: "A newly allocated <xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer\"></xref> containing the copied bytes."
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.http.netty.implementation"
artifact: com.azure:azure-core-http-netty:1.9.1
