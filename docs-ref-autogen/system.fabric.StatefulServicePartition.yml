### YamlMime:JavaType
inheritedMembers:
- system.fabric.ServicePartition.getPartitionInfo()
- system.fabric.ServicePartition.reportFault(FaultType)
- system.fabric.ServicePartition.reportLoad(Collection<LoadMetric>)
- system.fabric.ServicePartition.reportMoveCost(MoveCost)
- system.fabric.ServicePartition.reportPartitionHealth(HealthInformation)
methods:
- fullName: system.fabric.StatefulServicePartition.createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)
  name: createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)
  nameWithType: StatefulServicePartition.createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)
  parameters:
  - description: <p>The <xref uid="system.fabric.StateProvider" data-throw-if-not-resolved="false" data-raw-source="system.fabric.StateProvider"></xref> with which the returned <xref uid="system.fabric.FabricReplicator" data-throw-if-not-resolved="false" data-raw-source="system.fabric.FabricReplicator"></xref> should be associated. This is often the same object that implements <xref uid="system.fabric.StatefulServiceReplica" data-throw-if-not-resolved="false" data-raw-source="system.fabric.StatefulServiceReplica"></xref>, but certain services might be factored differently. </p>
    name: stateProvider
    type: <xref href="system.fabric.StateProvider?alt=system.fabric.StateProvider&text=StateProvider" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="system.fabric.ReplicatorSettings" data-throw-if-not-resolved="false" data-raw-source="system.fabric.ReplicatorSettings"></xref> with which the returned <xref uid="system.fabric.FabricReplicator" data-throw-if-not-resolved="false" data-raw-source="system.fabric.FabricReplicator"></xref> should be configured. </p>
    name: replicatorSettings
    type: <xref href="system.fabric.ReplicatorSettings?alt=system.fabric.ReplicatorSettings&text=ReplicatorSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Returns <xref uid="system.fabric.FabricReplicator" data-throw-if-not-resolved="false" data-raw-source="FabricReplicator"></xref>. </p>
    type: <xref href="system.fabric.FabricReplicator?alt=system.fabric.FabricReplicator&text=FabricReplicator" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a <xref uid="system.fabric.FabricReplicator" data-throw-if-not-resolved="false" data-raw-source="system.fabric.FabricReplicator"></xref> with the specified settings and returns it to the replica.</p>

    <p>

      <b>Remarks:</b>This method should be used to create a <xref uid="system.fabric.FabricReplicator" data-throw-if-not-resolved="false" data-raw-source="system.fabric.FabricReplicator"></xref> to service as the <xref uid="system.fabric.StateReplicator" data-throw-if-not-resolved="false" data-raw-source="system.fabric.StateReplicator"></xref> for a stateful service that implements <xref uid="system.fabric.StateProvider" data-throw-if-not-resolved="false" data-raw-source="system.fabric.StateProvider"></xref>. </p>
  syntax: public FabricReplicator createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)
  uid: system.fabric.StatefulServicePartition.createReplicator(StateProvider,ReplicatorSettings)
- fullName: system.fabric.StatefulServicePartition.getReadStatus()
  name: getReadStatus()
  nameWithType: StatefulServicePartition.getReadStatus()
  exceptions:
  - type: <xref href="system.fabric.exception.FabricObjectClosedException?alt=system.fabric.exception.FabricObjectClosedException&text=system.fabric.exception.FabricObjectClosedException" data-throw-if-not-resolved="False"/>
    description: <p>This indicates that the partition object is closed. The replica/replicator/instance has either been closed or is about to be closed. </p>
  returns:
    description: >-
      <p>

        <xref uid="system.fabric.PartitionAccessStatus" data-throw-if-not-resolved="false" data-raw-source="system.fabric.PartitionAccessStatus"></xref>. </p>
    type: <xref href="system.fabric.PartitionAccessStatus?alt=system.fabric.PartitionAccessStatus&text=PartitionAccessStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Used to check the readiness of the replica in regard to read operations.</p>

    <p>

      <b>Remarks:</b>The readStatus should be checked before the replica is servicing a customer request that is a read operation. </p>
  syntax: public PartitionAccessStatus getReadStatus()
  uid: system.fabric.StatefulServicePartition.getReadStatus()
- fullName: system.fabric.StatefulServicePartition.getwriteStatus()
  name: getwriteStatus()
  nameWithType: StatefulServicePartition.getwriteStatus()
  exceptions:
  - type: <xref href="system.fabric.exception.FabricObjectClosedException?alt=system.fabric.exception.FabricObjectClosedException&text=system.fabric.exception.FabricObjectClosedException" data-throw-if-not-resolved="False"/>
    description: <p>This indicates that the partition object is closed. The replica/replicator/instance has either been closed or is about to be closed. </p>
  returns:
    description: >-
      <p>

        <xref uid="system.fabric.PartitionAccessStatus" data-throw-if-not-resolved="false" data-raw-source="system.fabric.PartitionAccessStatus"></xref>. </p>
    type: <xref href="system.fabric.PartitionAccessStatus?alt=system.fabric.PartitionAccessStatus&text=PartitionAccessStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Used to check the readiness of the partition in regard to write operations.</p>

    <p>

      <b>Remarks:</b>The WriteStatus should be checked before the replica services a customer request that is a write operation. </p>
  syntax: public PartitionAccessStatus getwriteStatus()
  uid: system.fabric.StatefulServicePartition.getwriteStatus()
- fullName: system.fabric.StatefulServicePartition.reportReplicaHealth(HealthInformation healthInfo)
  name: reportReplicaHealth(HealthInformation healthInfo)
  nameWithType: StatefulServicePartition.reportReplicaHealth(HealthInformation healthInfo)
  parameters:
  - description: <p>Health information that is to be reported. </p>
    name: healthInfo
    type: <xref href="system.fabric.health.HealthInformation?alt=system.fabric.health.HealthInformation&text=HealthInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reports health of the current replica associated with this partition.</p>

    <p></p>
  syntax: public void reportReplicaHealth(HealthInformation healthInfo)
  uid: system.fabric.StatefulServicePartition.reportReplicaHealth(HealthInformation)
nameWithType: StatefulServicePartition
syntax: public interface StatefulServicePartition extends ServicePartition
type: interface
uid: system.fabric.StatefulServicePartition
fullName: system.fabric.StatefulServicePartition
name: StatefulServicePartition
package: system.fabric
metadata: {}
