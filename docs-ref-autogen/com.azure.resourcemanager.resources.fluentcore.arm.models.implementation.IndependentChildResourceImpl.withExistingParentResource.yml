### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluentcore.arm.models.implementation.IndependentChildResourceImpl.withExistingParentResource*"
fullName: "com.azure.resourcemanager.resources.fluentcore.arm.models.implementation.IndependentChildResourceImpl<FluentModelT,FluentParentModelT,InnerModelT,FluentModelImplT,ManagerT>.withExistingParentResource"
name: "withExistingParentResource"
nameWithType: "IndependentChildResourceImpl<FluentModelT,FluentParentModelT,InnerModelT,FluentModelImplT,ManagerT>.withExistingParentResource"
members:
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.models.implementation.IndependentChildResourceImpl.withExistingParentResource(FluentParentModelT)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.models.implementation.IndependentChildResourceImpl<FluentModelT,FluentParentModelT,InnerModelT,FluentModelImplT,ManagerT>.withExistingParentResource(FluentParentModelT existingParentResource)"
  name: "withExistingParentResource(FluentParentModelT existingParentResource)"
  nameWithType: "IndependentChildResourceImpl<FluentModelT,FluentParentModelT,InnerModelT,FluentModelImplT,ManagerT>.withExistingParentResource(FluentParentModelT existingParentResource)"
  overridden: "com.azure.resourcemanager.resources.fluentcore.arm.models.implementation.IndependentChildImpl.withExistingParentResource(FluentParentModelT)"
  parameters:
  - name: "existingParentResource"
    type: "<xref href=\"FluentParentModelT?alt=FluentParentModelT&text=FluentParentModelT\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FluentModelImplT withExistingParentResource(FluentParentModelT existingParentResource)"
  returns:
    type: "<xref href=\"FluentModelImplT?alt=FluentModelImplT&text=FluentModelImplT\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.arm.models.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
