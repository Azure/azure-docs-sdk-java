### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.query.Paginator.getChangeFeedQueryResultAsObservable*"
fullName: "com.azure.cosmos.implementation.query.Paginator.<T>getChangeFeedQueryResultAsObservable"
name: "<T>getChangeFeedQueryResultAsObservable"
nameWithType: "Paginator.<T>getChangeFeedQueryResultAsObservable"
members:
- uid: "com.azure.cosmos.implementation.query.Paginator.<T>getChangeFeedQueryResultAsObservable(com.azure.cosmos.implementation.RxDocumentClientImpl,com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedState,java.util.function.Supplier<com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.Class<T>,int,int,int,boolean)"
  fullName: "com.azure.cosmos.implementation.query.Paginator.<T>getChangeFeedQueryResultAsObservable(RxDocumentClientImpl client, ChangeFeedState changeFeedState, Supplier<RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int top, int maxPageSize, int preFetchCount, boolean isSplitHandlingDisabled)"
  name: "<T>getChangeFeedQueryResultAsObservable(RxDocumentClientImpl client, ChangeFeedState changeFeedState, Supplier<RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int top, int maxPageSize, int preFetchCount, boolean isSplitHandlingDisabled)"
  nameWithType: "Paginator.<T>getChangeFeedQueryResultAsObservable(RxDocumentClientImpl client, ChangeFeedState changeFeedState, Supplier<RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int top, int maxPageSize, int preFetchCount, boolean isSplitHandlingDisabled)"
  parameters:
  - name: "client"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentClientImpl?alt=com.azure.cosmos.implementation.RxDocumentClientImpl&text=RxDocumentClientImpl\" data-throw-if-not-resolved=\"False\" />"
  - name: "changeFeedState"
    type: "<xref href=\"com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedState?alt=com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedState&text=ChangeFeedState\" data-throw-if-not-resolved=\"False\" />"
  - name: "createRequestFunc"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "executeFunc"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />,<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
  - name: "resourceType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "top"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "maxPageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "preFetchCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "isSplitHandlingDisabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Flux<FeedResponse<T>> <T>getChangeFeedQueryResultAsObservable(RxDocumentClientImpl client, ChangeFeedState changeFeedState, Supplier<RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int top, int maxPageSize, int preFetchCount, boolean isSplitHandlingDisabled)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.14.0
