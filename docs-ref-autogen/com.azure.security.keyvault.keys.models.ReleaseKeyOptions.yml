### YamlMime:JavaType
uid: "com.azure.security.keyvault.keys.models.ReleaseKeyOptions"
fullName: "com.azure.security.keyvault.keys.models.ReleaseKeyOptions"
name: "ReleaseKeyOptions"
nameWithType: "ReleaseKeyOptions"
summary: "Represents the configurable options to release a key."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ReleaseKeyOptions"
constructors:
- uid: "com.azure.security.keyvault.keys.models.ReleaseKeyOptions.ReleaseKeyOptions()"
  fullName: "com.azure.security.keyvault.keys.models.ReleaseKeyOptions.ReleaseKeyOptions()"
  name: "ReleaseKeyOptions()"
  nameWithType: "ReleaseKeyOptions.ReleaseKeyOptions()"
  syntax: "public ReleaseKeyOptions()"
methods:
- uid: "com.azure.security.keyvault.keys.models.ReleaseKeyOptions.getAlgorithm()"
  fullName: "com.azure.security.keyvault.keys.models.ReleaseKeyOptions.getAlgorithm()"
  name: "getAlgorithm()"
  nameWithType: "ReleaseKeyOptions.getAlgorithm()"
  summary: "Get the encryption algorithm to use to protected the exported key material."
  syntax: "public KeyExportEncryptionAlgorithm getAlgorithm()"
  desc: "Get the encryption algorithm to use to protected the exported key material."
  returns:
    description: "The encryption algorithm to use to protected the exported key material."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyExportEncryptionAlgorithm?alt=com.azure.security.keyvault.keys.models.KeyExportEncryptionAlgorithm&text=KeyExportEncryptionAlgorithm\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.ReleaseKeyOptions.getNonce()"
  fullName: "com.azure.security.keyvault.keys.models.ReleaseKeyOptions.getNonce()"
  name: "getNonce()"
  nameWithType: "ReleaseKeyOptions.getNonce()"
  summary: "Get a client provided nonce for freshness."
  syntax: "public String getNonce()"
  desc: "Get a client provided nonce for freshness."
  returns:
    description: "A client provided nonce for freshness."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.ReleaseKeyOptions.setAlgorithm(com.azure.security.keyvault.keys.models.KeyExportEncryptionAlgorithm)"
  fullName: "com.azure.security.keyvault.keys.models.ReleaseKeyOptions.setAlgorithm(KeyExportEncryptionAlgorithm algorithm)"
  name: "setAlgorithm(KeyExportEncryptionAlgorithm algorithm)"
  nameWithType: "ReleaseKeyOptions.setAlgorithm(KeyExportEncryptionAlgorithm algorithm)"
  summary: "Set the encryption algorithm to use to protected the exported key material."
  parameters:
  - description: "The encryption algorithm to use to protected the exported key material."
    name: "algorithm"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyExportEncryptionAlgorithm?alt=com.azure.security.keyvault.keys.models.KeyExportEncryptionAlgorithm&text=KeyExportEncryptionAlgorithm\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReleaseKeyOptions setAlgorithm(KeyExportEncryptionAlgorithm algorithm)"
  desc: "Set the encryption algorithm to use to protected the exported key material."
  returns:
    description: "The updated <xref uid=\"com.azure.security.keyvault.keys.models.ReleaseKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReleaseKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.ReleaseKeyOptions?alt=com.azure.security.keyvault.keys.models.ReleaseKeyOptions&text=ReleaseKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.ReleaseKeyOptions.setNonce(java.lang.String)"
  fullName: "com.azure.security.keyvault.keys.models.ReleaseKeyOptions.setNonce(String nonce)"
  name: "setNonce(String nonce)"
  nameWithType: "ReleaseKeyOptions.setNonce(String nonce)"
  summary: "Set a client provided nonce for freshness."
  parameters:
  - description: "A client provided nonce for freshness."
    name: "nonce"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReleaseKeyOptions setNonce(String nonce)"
  desc: "Set a client provided nonce for freshness."
  returns:
    description: "The updated <xref uid=\"com.azure.security.keyvault.keys.models.ReleaseKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReleaseKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.ReleaseKeyOptions?alt=com.azure.security.keyvault.keys.models.ReleaseKeyOptions&text=ReleaseKeyOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents the configurable options to release a key."
metadata: {}
package: "com.azure.security.keyvault.keys.models"
artifact: com.azure:azure-security-keyvault-keys:4.4.6
