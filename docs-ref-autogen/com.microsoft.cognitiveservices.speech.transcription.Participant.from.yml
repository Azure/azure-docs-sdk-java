### YamlMime:JavaMember
nameWithType: Participant.from
type: method
members:
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String userId)
  name: from(String userId)
  nameWithType: Participant.from(String userId)
  parameters:
  - description: <p>user's Id. </p>
    name: userId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Participant object. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.transcription.Participant?alt=com.microsoft.cognitiveservices.speech.transcription.Participant&text=Participant" data-throw-if-not-resolved="False"/>
  summary: <p>Create a Participant using user id. </p>
  syntax: public static Participant from(String userId)
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String)
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String userId, String preferredLanguage)
  name: from(String userId, String preferredLanguage)
  nameWithType: Participant.from(String userId, String preferredLanguage)
  parameters:
  - description: <p>user's Id. </p>
    name: userId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>users' preferred language. </p>
    name: preferredLanguage
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Participant object. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.transcription.Participant?alt=com.microsoft.cognitiveservices.speech.transcription.Participant&text=Participant" data-throw-if-not-resolved="False"/>
  summary: <p>Create a Participant using user id and her/his preferred language. </p>
  syntax: public static Participant from(String userId, String preferredLanguage)
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String,String)
- fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String userId, String preferredLanguage, String voiceSignature)
  name: from(String userId, String preferredLanguage, String voiceSignature)
  nameWithType: Participant.from(String userId, String preferredLanguage, String voiceSignature)
  parameters:
  - description: <p>user's Id. </p>
    name: userId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>users' preferred language. </p>
    name: preferredLanguage
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>user's voice signature. </p>
    name: voiceSignature
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Participant object. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.transcription.Participant?alt=com.microsoft.cognitiveservices.speech.transcription.Participant&text=Participant" data-throw-if-not-resolved="False"/>
  summary: <p>Create a Participant using user id, her/his preferred language and her/his voice signature. If voice signature is empty then user will not be identified. </p>
  syntax: public static Participant from(String userId, String preferredLanguage, String voiceSignature)
  uid: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String,String,String)
uid: com.microsoft.cognitiveservices.speech.transcription.Participant.from*
fullName: com.microsoft.cognitiveservices.speech.transcription.Participant.from(String userId)
name: from(String userId)
package: com.microsoft.cognitiveservices.speech.transcription
metadata: {}
