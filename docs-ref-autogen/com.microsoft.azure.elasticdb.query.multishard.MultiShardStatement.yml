### YamlMime:JavaType
fields:
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionBegan
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionCanceled
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionFaulted
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionReaderReturned
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionSucceeded
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.cancel()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.close()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.create(MultiShardConnection,String)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.create(MultiShardConnection,String,int)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.dispose(boolean)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery(CommandBehavior)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery(CommandBehavior,RetryPolicy,MultiShardExecutionPolicy)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync(CommandBehavior)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync(CommandBehavior,RetryPolicy,MultiShardExecutionPolicy)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandText()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeout()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeoutPerShard()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getConnection()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionOptions()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionPolicy()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryBehavior()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryPolicy()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeout()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeoutPerShard()
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandText(String)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeout(int)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeoutPerShard(int)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionOptions(MultiShardExecutionOptions)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionPolicy(MultiShardExecutionPolicy)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setParameters(int,int,Object...)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryBehavior(RetryBehavior)
- com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryPolicy(RetryPolicy)
nameWithType: MultiShardStatement
syntax: public class MultiShardStatement
type: class
uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
name: MultiShardStatement
package: com.microsoft.azure.elasticdb.query.multishard
summary: '<p>Complements the <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection" data-throw-if-not-resolved="false">MultiShardConnection</xref> with a command object similar to the triad of Connection, Statement, and ResultSet. The <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement" data-throw-if-not-resolved="false">MultiShardStatement</xref> takes a T-SQL command statement as its input and executes the command across its collection of shards specified by its corresponding <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection" data-throw-if-not-resolved="false">MultiShardConnection</xref>. The results from processing the <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement" data-throw-if-not-resolved="false">MultiShardStatement</xref> are made available through the execute methods and the <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false">MultiShardResultSet</xref>. Purpose: Complements the MultiShardConnection and abstracts away the work of running a given command against multiple shards Notes: This class is NOT thread-safe. Since the Sync API internally invokes the async API, connections to shards with connection string property "context connection = true" are not supported. Transaction semantics are not supported. </p>'
metadata: {}
