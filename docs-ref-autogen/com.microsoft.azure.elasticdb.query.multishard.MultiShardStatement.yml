### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  id: MultiShardStatement
  parent: com.microsoft.azure.elasticdb.query.multishard
  children:
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.cancel()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.close()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.create(MultiShardConnection,String)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.create(MultiShardConnection,String,int)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.dispose(boolean)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery(CommandBehavior)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery(CommandBehavior,RetryPolicy,MultiShardExecutionPolicy)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync(CommandBehavior)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync(CommandBehavior,RetryPolicy,MultiShardExecutionPolicy)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandText()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeout()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeoutPerShard()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getConnection()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionOptions()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionPolicy()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryBehavior()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryPolicy()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeout()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeoutPerShard()
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandText(String)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeout(int)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeoutPerShard(int)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionOptions(MultiShardExecutionOptions)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionPolicy(MultiShardExecutionPolicy)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setParameters(int,int,Object...)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryBehavior(RetryBehavior)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryPolicy(RetryPolicy)
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionBegan
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionCanceled
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionFaulted
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionReaderReturned
  - com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionSucceeded
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: MultiShardStatement
  nameWithType: MultiShardStatement
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  type: Class
  source:
    remote: &o0
      path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
      branch: master
      repo: https://github.com/Microsoft/elastic-db-tools-for-java
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 74
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Complements the <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardConnection\"></xref> with a command object similar to the triad of Connection, Statement, and ResultSet. The <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardStatement\"></xref> takes a T-SQL command statement as its input and executes the command across its collection of shards specified by its corresponding <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardConnection\"></xref>. The results from processing the <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardStatement\"></xref> are made available through the execute methods and the <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardResultSet\"></xref>. Purpose: Complements the MultiShardConnection and abstracts away the work of running a given command against multiple shards Notes: This class is NOT thread-safe. Since the Sync API internally invokes the async API, connections to shards with connection string property \"context connection = true\" are not supported. Transaction semantics are not supported. </p>"
  syntax: &o1
    content: public class MultiShardStatement
  inheritance:
  - java.lang.Object
  - AutoCloseable
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.cancel()
  id: cancel()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: cancel()
  nameWithType: MultiShardStatement.cancel()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.cancel()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.cancel*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 808
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Attempts to cancel an in progress <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardStatement\"></xref> and any ongoing work that is performed at the shards on behalf of the command. We don't want cancel throwing any exceptions. Just cancel. </p>"
  syntax:
    content: public void cancel()
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.close()
  id: close()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: close()
  nameWithType: MultiShardStatement.close()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.close()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.close*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 866
  package: com.microsoft.azure.elasticdb.query.multishard
  syntax:
    content: public void close()
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.create(MultiShardConnection,String)
  id: create(MultiShardConnection,String)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: create(MultiShardConnection connection, String commandText)
  nameWithType: MultiShardStatement.create(MultiShardConnection connection, String commandText)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.create(MultiShardConnection connection, String commandText)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.create*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 220
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Instance constructor of this class. Default command timeout of 300 seconds is used.</p>\r\n<p></p>"
  syntax:
    content: public static MultiShardStatement create(MultiShardConnection connection, String commandText)
    parameters:
    - id: connection
      type: com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection
      description: <p>The connection to shards </p>
    - id: commandText
      type: "26831127"
      description: <p>The command text to execute against shards </p>
    return:
      type: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
      description: <p>An Instance of this class. </p>
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.create(MultiShardConnection,String,int)
  id: create(MultiShardConnection,String,int)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: create(MultiShardConnection connection, String commandText, int commandTimeout)
  nameWithType: MultiShardStatement.create(MultiShardConnection connection, String commandText, int commandTimeout)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.create(MultiShardConnection connection, String commandText, int commandTimeout)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.create*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 236
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Instance constructor of this class. Default command type is text.</p>\r\n<p></p>"
  syntax:
    content: public static MultiShardStatement create(MultiShardConnection connection, String commandText, int commandTimeout)
    parameters:
    - id: connection
      type: com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection
      description: <p>The connection to shards </p>
    - id: commandText
      type: "26831127"
      description: <p>The command text to execute against shards </p>
    - id: commandTimeout
      type: f75371fa
      description: <p>Command timeout for given commandText to be run against ALL shards </p>
    return:
      type: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
      description: <p>An Instance of this class. </p>
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.dispose(boolean)
  id: dispose(boolean)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: dispose(boolean disposing)
  nameWithType: MultiShardStatement.dispose(boolean disposing)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.dispose(boolean disposing)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.dispose*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 843
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Dispose off any unmanaged/managed resources held. We purposely want to ignore exceptions. </p>"
  syntax:
    content: protected void dispose(boolean disposing)
    parameters:
    - id: disposing
      type: 4fc6e284
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery()
  id: executeQuery()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: executeQuery()
  nameWithType: MultiShardStatement.executeQuery()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 376
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>The ExecuteReader methods of the MultiShardStatement execute the given command statement on each shard and return the concatenation (i.e. UNION ALL) of the individual results from the shards in a <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardResultSet\"></xref>. The execution policy regarding result completeness can be controlled by setting the MultiShardExecutionPolicy. The default execution policy is to return complete results.</p>\r\n<p></p>"
  syntax:
    content: public MultiShardResultSet executeQuery()
    return:
      type: com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet
      description: <p>the <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false" data-raw-source="MultiShardResultSet"></xref> instance with the overall concatenated result set. </p>
  exceptions:
  - type: 12fe80de
    description: <p>thrown if the commandText is null or empty </p>
  - type: a19dd706
    description: <p>thrown if the CommandTimeout elapsed prior to completion </p>
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery(CommandBehavior)
  id: executeQuery(CommandBehavior)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: executeQuery(CommandBehavior behavior)
  nameWithType: MultiShardStatement.executeQuery(CommandBehavior behavior)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery(CommandBehavior behavior)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 397
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>The ExecuteReader methods of the MultiShardStatement execute the given command statement on each shard and return the concatenation (i.e. UNION ALL) of the individual results from the shards in a <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardResultSet\"></xref>. The execution policy regarding result completeness can be controlled by setting the MultiShardExecutionPolicy. The default execution policy is to return complete results.</p>\r\n<p></p>"
  syntax:
    content: public MultiShardResultSet executeQuery(CommandBehavior behavior)
    parameters:
    - id: behavior
      type: com.microsoft.azure.elasticdb.query.logging.CommandBehavior
      description: <p>specifies the CommandBehavior to use. </p>
    return:
      type: com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet
      description: <p>the <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false" data-raw-source="MultiShardResultSet"></xref> instance with the overall concatenated ResultSet. </p>
  exceptions:
  - type: 12fe80de
    description: <p>thrown if the commandText is null or empty </p>
  - type: a19dd706
    description: <p>thrown if the CommandTimeout elapsed prior to completion </p>
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery(CommandBehavior,RetryPolicy,MultiShardExecutionPolicy)
  id: executeQuery(CommandBehavior,RetryPolicy,MultiShardExecutionPolicy)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: executeQuery(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  nameWithType: MultiShardStatement.executeQuery(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 419
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Runs the given query against all shards and returns a reader that encompasses results from them. Design Principles - Commands are executed in a parallel, non-blocking manner. - Only the calling thread is blocked until the command is complete against all shards.</p>\r\n<p></p>"
  syntax:
    content: public MultiShardResultSet executeQuery(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
    parameters:
    - id: behavior
      type: com.microsoft.azure.elasticdb.query.logging.CommandBehavior
      description: <p>Command behavior to use </p>
    - id: commandRetryPolicy
      type: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy
      description: <p>The retry policy to use when executing commands against the shards </p>
    - id: executionPolicy
      type: com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionPolicy
      description: <p>The execution policy to use </p>
    return:
      type: com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet
      description: <p>MultiShardResultSet instance that encompasses results from all shards </p>
  exceptions:
  - type: 12fe80de
    description: <p>If the commandText is null or empty </p>
  - type: a19dd706
    description: <p>If the commandTimeout elapsed prior to completion </p>
  - type: 0a3e89da
    description: <p>If one or more errors occurred while executing the query </p>
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync()
  id: executeQueryAsync()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: executeQueryAsync()
  nameWithType: MultiShardStatement.executeQueryAsync()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 444
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>The ExecuteReader methods of the MultiShardStatement execute the given command statement on each shard and return the concatenation (i.e. UNION ALL) of the individual results from the shards in a <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardResultSet\"></xref>. The execution policy regarding result completeness can be controlled by setting the MultiShardExecutionPolicy. The default execution policy is to return complete results.</p>\r\n<p></p>"
  syntax:
    content: public Callable<MultiShardResultSet> executeQueryAsync()
    return:
      type: 7d892192com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSeta08ddfce
      description: <p>a task wrapping the <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false" data-raw-source="MultiShardResultSet"></xref> instance with the overall concatenated result set. </p>
  exceptions:
  - type: 12fe80de
    description: <p>thrown if the commandText is null or empty, or if the specified command behavior is not supported such as CloseConnection or SingleRow. </p>
  - type: a19dd706
    description: <p>thrown if the commandTimeout elapsed prior to completion. </p>
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync(CommandBehavior)
  id: executeQueryAsync(CommandBehavior)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: executeQueryAsync(CommandBehavior behavior)
  nameWithType: MultiShardStatement.executeQueryAsync(CommandBehavior behavior)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync(CommandBehavior behavior)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 462
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>The ExecuteReader methods of the MultiShardStatement execute the given command statement on each shard and return the concatenation (i.e. UNION ALL) of the individual results from the shards in a <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardResultSet\"></xref>. The execution policy regarding result completeness can be controlled by setting the MultiShardExecutionPolicy. The default execution policy is to return complete results.</p>\r\n<p></p>"
  syntax:
    content: public Callable<MultiShardResultSet> executeQueryAsync(CommandBehavior behavior)
    parameters:
    - id: behavior
      type: com.microsoft.azure.elasticdb.query.logging.CommandBehavior
      description: <p>Command behavior to use </p>
    return:
      type: 7d892192com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSeta08ddfce
      description: <p>a task wrapping the <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false" data-raw-source="MultiShardResultSet"></xref> instance with the overall concatenated result set. </p>
  exceptions:
  - type: 12fe80de
    description: <p>thrown if the commandText is null or empty, or if the specified command behavior is not supported such as CloseConnection or SingleRow. </p>
  - type: a19dd706
    description: <p>thrown if the commandTimeout elapsed prior to completion. </p>
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync(CommandBehavior,RetryPolicy,MultiShardExecutionPolicy)
  id: executeQueryAsync(CommandBehavior,RetryPolicy,MultiShardExecutionPolicy)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: executeQueryAsync(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  nameWithType: MultiShardStatement.executeQueryAsync(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 481
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Executes the given query against all shards asynchronously.</p>\r\n<p></p>"
  syntax:
    content: public Callable<MultiShardResultSet> executeQueryAsync(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
    parameters:
    - id: behavior
      type: com.microsoft.azure.elasticdb.query.logging.CommandBehavior
      description: <p>Command behavior to use </p>
    - id: commandRetryPolicy
      type: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy
      description: <p>The retry policy to use when executing commands against the shards </p>
    - id: executionPolicy
      type: com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionPolicy
      description: <p>The execution policy to use </p>
    return:
      type: 7d892192com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSeta08ddfce
      description: <p>A task with a ResultT that encompasses results from all shards Any exceptions during command execution are conveyed via the returned Task </p>
  exceptions:
  - type: 12fe80de
    description: <p>If the commandText is null or empty </p>
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandText()
  id: getCommandText()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: getCommandText()
  nameWithType: MultiShardStatement.getCommandText()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandText()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandText*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 245
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Gets the command text to execute against the set of shards. </p>"
  syntax:
    content: public String getCommandText()
    return:
      type: "26831127"
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeout()
  id: getCommandTimeout()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: getCommandTimeout()
  nameWithType: MultiShardStatement.getCommandTimeout()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeout()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeout*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 259
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Time in seconds to wait for the command to be executed on ALL shards. A value of 0 indicates no wait time limit. The default is 300 seconds. </p>"
  syntax:
    content: public int getCommandTimeout()
    return:
      type: f75371fa
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeoutPerShard()
  id: getCommandTimeoutPerShard()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: getCommandTimeoutPerShard()
  nameWithType: MultiShardStatement.getCommandTimeoutPerShard()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeoutPerShard()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeoutPerShard*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 270
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>This property controls the timeout for running a command against individual shards. </p>"
  syntax:
    content: public int getCommandTimeoutPerShard()
    return:
      type: f75371fa
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getConnection()
  id: getConnection()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: getConnection()
  nameWithType: MultiShardStatement.getConnection()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getConnection()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getConnection*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 297
  package: com.microsoft.azure.elasticdb.query.multishard
  syntax:
    content: public MultiShardConnection getConnection()
    return:
      type: com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionOptions()
  id: getExecutionOptions()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: getExecutionOptions()
  nameWithType: MultiShardStatement.getExecutionOptions()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionOptions()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionOptions*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 315
  package: com.microsoft.azure.elasticdb.query.multishard
  syntax:
    content: public MultiShardExecutionOptions getExecutionOptions()
    return:
      type: com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionOptions
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionPolicy()
  id: getExecutionPolicy()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: getExecutionPolicy()
  nameWithType: MultiShardStatement.getExecutionPolicy()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionPolicy()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionPolicy*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 289
  package: com.microsoft.azure.elasticdb.query.multishard
  syntax:
    content: public MultiShardExecutionPolicy getExecutionPolicy()
    return:
      type: com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionPolicy
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryBehavior()
  id: getRetryBehavior()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: getRetryBehavior()
  nameWithType: MultiShardStatement.getRetryBehavior()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryBehavior()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryBehavior*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 281
  package: com.microsoft.azure.elasticdb.query.multishard
  syntax:
    content: public RetryBehavior getRetryBehavior()
    return:
      type: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryBehavior
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryPolicy()
  id: getRetryPolicy()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: getRetryPolicy()
  nameWithType: MultiShardStatement.getRetryPolicy()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryPolicy()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryPolicy*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 323
  package: com.microsoft.azure.elasticdb.query.multishard
  syntax:
    content: public RetryPolicy getRetryPolicy()
    return:
      type: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeout()
  id: resetCommandTimeout()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: resetCommandTimeout()
  nameWithType: MultiShardStatement.resetCommandTimeout()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeout()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeout*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 354
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Resets the commandTimeout property to its default value. </p>"
  syntax:
    content: public void resetCommandTimeout()
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeoutPerShard()
  id: resetCommandTimeoutPerShard()
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: resetCommandTimeoutPerShard()
  nameWithType: MultiShardStatement.resetCommandTimeoutPerShard()
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeoutPerShard()
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeoutPerShard*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 361
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Resets the CommandTimeoutPerShard property to its default value. </p>"
  syntax:
    content: public void resetCommandTimeoutPerShard()
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandText(String)
  id: setCommandText(String)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: setCommandText(String value)
  nameWithType: MultiShardStatement.setCommandText(String value)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandText(String value)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandText*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 252
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Sets the command text to execute against the set of shards. </p>"
  syntax:
    content: public void setCommandText(String value)
    parameters:
    - id: value
      type: "26831127"
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeout(int)
  id: setCommandTimeout(int)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: setCommandTimeout(int commandTimeout)
  nameWithType: MultiShardStatement.setCommandTimeout(int commandTimeout)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeout(int commandTimeout)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeout*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 263
  package: com.microsoft.azure.elasticdb.query.multishard
  syntax:
    content: public void setCommandTimeout(int commandTimeout)
    parameters:
    - id: commandTimeout
      type: f75371fa
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeoutPerShard(int)
  id: setCommandTimeoutPerShard(int)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: setCommandTimeoutPerShard(int value)
  nameWithType: MultiShardStatement.setCommandTimeoutPerShard(int value)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeoutPerShard(int value)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeoutPerShard*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 277
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>This property controls the timeout for running a command against individual shards. </p>"
  syntax:
    content: public void setCommandTimeoutPerShard(int value)
    parameters:
    - id: value
      type: f75371fa
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionOptions(MultiShardExecutionOptions)
  id: setExecutionOptions(MultiShardExecutionOptions)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: setExecutionOptions(MultiShardExecutionOptions value)
  nameWithType: MultiShardStatement.setExecutionOptions(MultiShardExecutionOptions value)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionOptions(MultiShardExecutionOptions value)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionOptions*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 319
  package: com.microsoft.azure.elasticdb.query.multishard
  syntax:
    content: public void setExecutionOptions(MultiShardExecutionOptions value)
    parameters:
    - id: value
      type: com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionOptions
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionPolicy(MultiShardExecutionPolicy)
  id: setExecutionPolicy(MultiShardExecutionPolicy)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: setExecutionPolicy(MultiShardExecutionPolicy value)
  nameWithType: MultiShardStatement.setExecutionPolicy(MultiShardExecutionPolicy value)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionPolicy(MultiShardExecutionPolicy value)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionPolicy*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 293
  package: com.microsoft.azure.elasticdb.query.multishard
  syntax:
    content: public void setExecutionPolicy(MultiShardExecutionPolicy value)
    parameters:
    - id: value
      type: com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionPolicy
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setParameters(int,int,Object...)
  id: )
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: setParameters(int index, int type, Object... objects)
  nameWithType: MultiShardStatement.setParameters(int index, int type, Object... objects)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setParameters(int index, int type, Object... objects)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setParameters*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 341
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>Set query parameters. Currently only Table type parameter is supported.</p>\r\n<p></p>"
  syntax:
    content: public void setParameters(int index, int type, Object... objects)
    parameters:
    - id: index
      type: f75371fa
      description: <p>Index of the parameter </p>
    - id: type
      type: f75371fa
      description: <p>SQL Type of the parameter </p>
    - id: objects
      type: 1355eaf1
      description: <p>An array of objects to add as parameter </p>
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryBehavior(RetryBehavior)
  id: setRetryBehavior(RetryBehavior)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: setRetryBehavior(RetryBehavior value)
  nameWithType: MultiShardStatement.setRetryBehavior(RetryBehavior value)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryBehavior(RetryBehavior value)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryBehavior*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 285
  package: com.microsoft.azure.elasticdb.query.multishard
  syntax:
    content: public void setRetryBehavior(RetryBehavior value)
    parameters:
    - id: value
      type: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryBehavior
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryPolicy(RetryPolicy)
  id: setRetryPolicy(RetryPolicy)
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: setRetryPolicy(RetryPolicy value)
  nameWithType: MultiShardStatement.setRetryPolicy(RetryPolicy value)
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryPolicy(RetryPolicy value)
  overload: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryPolicy*
  type: Method
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 327
  package: com.microsoft.azure.elasticdb.query.multishard
  syntax:
    content: public void setRetryPolicy(RetryPolicy value)
    parameters:
    - id: value
      type: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionBegan
  id: shardExecutionBegan
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: shardExecutionBegan
  nameWithType: MultiShardStatement.shardExecutionBegan
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionBegan
  type: Field
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 99
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>The event handler invoked when execution has begun on a given shard. </p>"
  syntax:
    content: public Event<EventHandler<ShardExecutionEventArgs>> shardExecutionBegan= new Event<>()
    return:
      type: 70d811d7com.microsoft.azure.elasticdb.query.multishard.ShardExecutionEventArgse7daa122
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionCanceled
  id: shardExecutionCanceled
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: shardExecutionCanceled
  nameWithType: MultiShardStatement.shardExecutionCanceled
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionCanceled
  type: Field
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 116
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>The event handler invoked when execution on a given shard is canceled, either explicitly via the provided CancellationToken or implicitly as a result of the chosen MultiShardExecutionPolicy. </p>"
  syntax:
    content: public Event<EventHandler<ShardExecutionEventArgs>> shardExecutionCanceled= new Event<>()
    return:
      type: 70d811d7com.microsoft.azure.elasticdb.query.multishard.ShardExecutionEventArgse7daa122
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionFaulted
  id: shardExecutionFaulted
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: shardExecutionFaulted
  nameWithType: MultiShardStatement.shardExecutionFaulted
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionFaulted
  type: Field
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 110
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>The event handler invoked when execution on a given shard has faulted. This handler is only invoked on exceptions for which execution could not be retried further as a result of the exception's non-transience or as a result of the chosen RetryBehavior. </p>"
  syntax:
    content: public Event<EventHandler<ShardExecutionEventArgs>> shardExecutionFaulted= new Event<>()
    return:
      type: 70d811d7com.microsoft.azure.elasticdb.query.multishard.ShardExecutionEventArgse7daa122
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionReaderReturned
  id: shardExecutionReaderReturned
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: shardExecutionReaderReturned
  nameWithType: MultiShardStatement.shardExecutionReaderReturned
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionReaderReturned
  type: Field
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 123
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>The event handler invoked when executeQuery on a certain shard has successfully returned a reader. This is an internal-only method, and differs from shardExecutionSucceeded in that it is invoked BEFORE the reader is added to the MultiShardResultSet; this adding is rife with side effects that are difficult to isolate. </p>"
  syntax:
    content: public Event<EventHandler<ShardExecutionEventArgs>> shardExecutionReaderReturned= new Event<>()
    return:
      type: 70d811d7com.microsoft.azure.elasticdb.query.multishard.ShardExecutionEventArgse7daa122
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionSucceeded
  id: shardExecutionSucceeded
  parent: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  langs:
  - java
  name: shardExecutionSucceeded
  nameWithType: MultiShardStatement.shardExecutionSucceeded
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.shardExecutionSucceeded
  type: Field
  source:
    remote: *o0
    path: elastic-db-tools/src/main/java/com/microsoft/azure/elasticdb/query/multishard/MultiShardStatement.java
    startLine: 104
  package: com.microsoft.azure.elasticdb.query.multishard
  summary: "<p>The event handler invoked when execution has successfully completed on a given shard or its shard-specific ResultSet has been returned. </p>"
  syntax:
    content: public Event<EventHandler<ShardExecutionEventArgs>> shardExecutionSucceeded= new Event<>()
    return:
      type: 70d811d7com.microsoft.azure.elasticdb.query.multishard.ShardExecutionEventArgse7daa122
references:
- uid: 70d811d7com.microsoft.azure.elasticdb.query.multishard.ShardExecutionEventArgse7daa122
  spec.java:
  - name: Event<EventHandler<
    fullName: Event<EventHandler<
  - uid: com.microsoft.azure.elasticdb.query.multishard.ShardExecutionEventArgs
    name: ShardExecutionEventArgs
    fullName: com.microsoft.azure.elasticdb.query.multishard.ShardExecutionEventArgs
    href: com.microsoft.azure.elasticdb.query.multishard.ShardExecutionEventArgs.yml
  - name: '>>'
    fullName: '>>'
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.create*
  name: create
  nameWithType: MultiShardStatement.create
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.create
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandText*
  name: getCommandText
  nameWithType: MultiShardStatement.getCommandText
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandText
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandText*
  name: setCommandText
  nameWithType: MultiShardStatement.setCommandText
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandText
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeout*
  name: getCommandTimeout
  nameWithType: MultiShardStatement.getCommandTimeout
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeout
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeout*
  name: setCommandTimeout
  nameWithType: MultiShardStatement.setCommandTimeout
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeout
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeoutPerShard*
  name: getCommandTimeoutPerShard
  nameWithType: MultiShardStatement.getCommandTimeoutPerShard
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getCommandTimeoutPerShard
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeoutPerShard*
  name: setCommandTimeoutPerShard
  nameWithType: MultiShardStatement.setCommandTimeoutPerShard
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setCommandTimeoutPerShard
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryBehavior*
  name: getRetryBehavior
  nameWithType: MultiShardStatement.getRetryBehavior
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryBehavior
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryBehavior*
  name: setRetryBehavior
  nameWithType: MultiShardStatement.setRetryBehavior
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryBehavior
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionPolicy*
  name: getExecutionPolicy
  nameWithType: MultiShardStatement.getExecutionPolicy
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionPolicy
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionPolicy*
  name: setExecutionPolicy
  nameWithType: MultiShardStatement.setExecutionPolicy
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionPolicy
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getConnection*
  name: getConnection
  nameWithType: MultiShardStatement.getConnection
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getConnection
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionOptions*
  name: getExecutionOptions
  nameWithType: MultiShardStatement.getExecutionOptions
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getExecutionOptions
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionOptions*
  name: setExecutionOptions
  nameWithType: MultiShardStatement.setExecutionOptions
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setExecutionOptions
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryPolicy*
  name: getRetryPolicy
  nameWithType: MultiShardStatement.getRetryPolicy
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.getRetryPolicy
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryPolicy*
  name: setRetryPolicy
  nameWithType: MultiShardStatement.setRetryPolicy
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setRetryPolicy
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: 1355eaf1
  spec.java:
  - name: Object...
    fullName: Object...
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setParameters*
  name: setParameters
  nameWithType: MultiShardStatement.setParameters
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.setParameters
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeout*
  name: resetCommandTimeout
  nameWithType: MultiShardStatement.resetCommandTimeout
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeout
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeoutPerShard*
  name: resetCommandTimeoutPerShard
  nameWithType: MultiShardStatement.resetCommandTimeoutPerShard
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.resetCommandTimeoutPerShard
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: 12fe80de
  spec.java:
  - name: IllegalStateException
    fullName: IllegalStateException
- uid: a19dd706
  spec.java:
  - name: TimeoutException
    fullName: TimeoutException
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery*
  name: executeQuery
  nameWithType: MultiShardStatement.executeQuery
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: 0a3e89da
  spec.java:
  - name: MultiShardAggregateException
    fullName: MultiShardAggregateException
- uid: 7d892192com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSeta08ddfce
  spec.java:
  - name: Callable<
    fullName: Callable<
  - uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet
    name: MultiShardResultSet
    fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet
    href: com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync*
  name: executeQueryAsync
  nameWithType: MultiShardStatement.executeQueryAsync
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQueryAsync
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.cancel*
  name: cancel
  nameWithType: MultiShardStatement.cancel
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.cancel
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.close*
  name: close
  nameWithType: MultiShardStatement.close
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.close
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.dispose*
  name: dispose
  nameWithType: MultiShardStatement.dispose
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.dispose
  package: com.microsoft.azure.elasticdb.query.multishard
- uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet
  parent: com.microsoft.azure.elasticdb.query.multishard
  href: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.yml
  name: LabeledResultSet
  nameWithType: LabeledResultSet
  fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet
  type: Class
  summary: "<p>Simple, immutable class for affiliating a ResultSet with additional information related to the reader (e.g. Statement, shard, exceptions encountered etc) Useful when grabbing ResultSets asynchronously. Purpose: Convenience class that holds a ResultSet along with a string label for the shard that the data underlying the ResultSet came from. Notes: This is useful for keeping the ResultSet and the label together when executing asynchronously. </p>"
  syntax:
    content: public class LabeledResultSet
- uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryBehavior
  parent: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling
  href: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryBehavior.yml
  name: RetryBehavior
  nameWithType: RetryBehavior
  fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryBehavior
  type: Class
  summary: "<p>Defines the retry behavior to use for detecting transient errors. </p>"
  syntax:
    content: public class RetryBehavior
- uid: com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionPolicy
  parent: com.microsoft.azure.elasticdb.query.logging
  href: com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionPolicy.yml
  name: MultiShardExecutionPolicy
  nameWithType: MultiShardExecutionPolicy
  fullName: com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionPolicy
  type: Enum
  summary: "<p>Defines the possible query execution policies. Purpose: Defines the possible query execution policies Suppression rationale: \"Multi\" is the spelling we want here. </p>"
  syntax:
    content: public enum MultiShardExecutionPolicy
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection
  parent: com.microsoft.azure.elasticdb.query.multishard
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection.yml
  name: MultiShardConnection
  nameWithType: MultiShardConnection
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection
  type: Class
  summary: "<p>Represents a connection to a set of shards and provides the ability to process queries across the shard set. Purpose: Creates connections to the given set of shards and governs their lifetime Notes: This class is NOT thread-safe. </p>"
  syntax:
    content: public class MultiShardConnection
- uid: com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionOptions
  parent: com.microsoft.azure.elasticdb.query.logging
  href: com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionOptions.yml
  name: MultiShardExecutionOptions
  nameWithType: MultiShardExecutionOptions
  fullName: com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionOptions
  type: Enum
  summary: "<p>Defines the available options when executing commands against multiple shards. This enumeration has a flags attribute. </p>"
  syntax:
    content: public enum MultiShardExecutionOptions
- uid: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy
  parent: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling
  href: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy.yml
  name: RetryPolicy
  nameWithType: RetryPolicy
  fullName: com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy
  type: Class
  summary: "<p>Provides the base implementation of the retry mechanism for unreliable actions and transient conditions. </p>"
  syntax:
    content: public class RetryPolicy
- uid: com.microsoft.azure.elasticdb.query.multishard.ShardExecutionEventArgs
  parent: com.microsoft.azure.elasticdb.query.multishard
  href: com.microsoft.azure.elasticdb.query.multishard.ShardExecutionEventArgs.yml
  name: ShardExecutionEventArgs
  nameWithType: ShardExecutionEventArgs
  fullName: com.microsoft.azure.elasticdb.query.multishard.ShardExecutionEventArgs
  type: Class
  summary: "<p>Input to be passed to per-shard event handlers. </p>"
  syntax:
    content: public class ShardExecutionEventArgs
- uid: com.microsoft.azure.elasticdb.query.logging.CommandBehavior
  parent: com.microsoft.azure.elasticdb.query.logging
  href: com.microsoft.azure.elasticdb.query.logging.CommandBehavior.yml
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: com.microsoft.azure.elasticdb.query.logging.CommandBehavior
  type: Enum
  summary: "<p>Summary: Provides a description of the results of the query and its effect on the database. </p>"
  syntax:
    content: public enum CommandBehavior
- uid: com.microsoft.azure.elasticdb.shard.base.ShardLocation
  parent: com.microsoft.azure.elasticdb.shard.base
  href: com.microsoft.azure.elasticdb.shard.base.ShardLocation.yml
  name: ShardLocation
  nameWithType: ShardLocation
  fullName: com.microsoft.azure.elasticdb.shard.base.ShardLocation
  type: Class
  summary: "<p>Represents the location of a shard in terms of its server name and database name. This is used to manage connections to the shard and to support other operations on shards. As opposed to a <xref uid=\"com.microsoft.azure.elasticdb.shard.base.Shard\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shard\"></xref>, a shard location is not registered with the shard map. </p>"
  syntax:
    content: public class ShardLocation
- uid: com.microsoft.azure.elasticdb.query.exception.MultiShardException
  parent: com.microsoft.azure.elasticdb.query.exception
  href: com.microsoft.azure.elasticdb.query.exception.MultiShardException.yml
  name: MultiShardException
  nameWithType: MultiShardException
  fullName: com.microsoft.azure.elasticdb.query.exception.MultiShardException
  type: Class
  summary: "<p>DEVNOTE: Encapsulate SMM ShardLocation type for now since Shard isn't Serializable Support for serialization of ShardLocation is in the works. A MultiShardException represents an exception that occurred when performing operations against a shard. It provides information about both the identity of the shard and the exception that occurred. Depending on the nature of the exception, one can try re-running the multi-shard query, execute a separate query targeted directly at the shard(s) on that yielded the exception, or lastly execute the query manually against the shard using a common tool such as SSMS. </p>"
  syntax:
    content: public class MultiShardException
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  parent: com.microsoft.azure.elasticdb.query.multishard
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.yml
  name: MultiShardStatement
  nameWithType: MultiShardStatement
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement
  type: Class
  summary: "<p>Complements the <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardConnection\"></xref> with a command object similar to the triad of Connection, Statement, and ResultSet. The <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardStatement\"></xref> takes a T-SQL command statement as its input and executes the command across its collection of shards specified by its corresponding <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardConnection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardConnection\"></xref>. The results from processing the <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardStatement\"></xref> are made available through the execute methods and the <xref uid=\"com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MultiShardResultSet\"></xref>. Purpose: Complements the MultiShardConnection and abstracts away the work of running a given command against multiple shards Notes: This class is NOT thread-safe. Since the Sync API internally invokes the async API, connections to shards with connection string property \"context connection = true\" are not supported. Transaction semantics are not supported. </p>"
  syntax: *o1
- uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet
  parent: com.microsoft.azure.elasticdb.query.multishard
  href: com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet.yml
  name: MultiShardResultSet
  nameWithType: MultiShardResultSet
  fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet
  type: Class
  syntax:
    content: public class MultiShardResultSet
- uid: com.microsoft.azure.elasticdb.query.exception.MultiShardAggregateException
  parent: com.microsoft.azure.elasticdb.query.exception
  href: com.microsoft.azure.elasticdb.query.exception.MultiShardAggregateException.yml
  name: MultiShardAggregateException
  nameWithType: MultiShardAggregateException
  fullName: com.microsoft.azure.elasticdb.query.exception.MultiShardAggregateException
  type: Class
  summary: "<p>Represents one or more Exception errors that occurred when executing a query across a shard set. The InnerExceptions field collects these exceptions and one can iterate through the InnerExceptions for further inspection or processing. Purpose: Public type that communicates errors that occurred across multiple shards </p>"
  syntax:
    content: public class MultiShardAggregateException
