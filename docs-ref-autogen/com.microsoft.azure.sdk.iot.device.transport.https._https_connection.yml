items:
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  id: _https_connection
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  children:
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.body()
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect()
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connection()
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseHeaders()
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseStatus()
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection()
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection(URL,HttpsMethod)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readError()
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readInput()
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readInputStream(InputStream)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setReadTimeoutMillis(int)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestHeader(String,String)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestMethod(HttpsMethod)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setSSLContext(SSLContext)
  - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.writeOutput(byte [])
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: HttpsConnection
  nameWithType: HttpsConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 31
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>A wrapper for the Java SE class <ref refid="" kindref="compound">HttpsURLConnection</ref>. Used to avoid compatibility issues when testing with the mocking framework JMockit, as well as to avoid some undocumented side effects when using HttpsURLConnection. </p>

    <p>The underlying <ref refid="" kindref="compound">HttpsURLConnection</ref> is transparently managed by Java. To reuse connections, for each time <xref href="com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect()" data-throw-if-not-resolved="false"></xref> is called, the input streams (input stream or error stream, if input stream is not accessible) must be completely read. Otherwise, the data remains in the stream and the connection will not be reusable. </p>
  syntax:
    content: public class HttpsConnection
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.body()
  id: body()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: body
  nameWithType: HttpsConnection.body
  fullName: byte [] com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.body
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 41
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: <p>The body. <ref refid="" kindref="compound">HttpsURLConnection</ref> silently calls <xref href="com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect()" data-throw-if-not-resolved="false"></xref> when the output stream is written to. We buffer the body and defer writing to the output stream until <xref href="com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect()" data-throw-if-not-resolved="false"></xref> is called. </p>
  syntax:
    content: protected byte [] body
    return:
      type: ccd9418d
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect()
  id: connect()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: connect()
  nameWithType: HttpsConnection.connect()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 78
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Sends the request to the URL given in the constructor.</p>

    <p></p>
  syntax: &o1
    content: public void connect()
  exceptions:
  - type: cbf33bbe
    description: <p>if the connection could not be established, or the server responded with a bad status code. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connection()
  id: connection()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: connection
  nameWithType: HttpsConnection.connection
  fullName: final HttpsURLConnection com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connection
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 34
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: <p>The underlying HTTPS connection. </p>
  syntax:
    content: protected final HttpsURLConnection connection
    return:
      type: 9d854a40
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseHeaders()
  id: getResponseHeaders()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: getResponseHeaders()
  nameWithType: HttpsConnection.getResponseHeaders()
  fullName: Map<String, List<String>> com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders()
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseHeaders*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 250
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Returns the response headers as a <ref refid="" kindref="compound">Map</ref>, where the key is the header field name and the values are the values associated with the header field name.</p>

    <p></p>
  syntax:
    content: public Map<String, List<String>> getResponseHeaders()
    return:
      type: b2319095
      description: <p>the response headers.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>if no response was received. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseStatus()
  id: getResponseStatus()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: getResponseStatus()
  nameWithType: HttpsConnection.getResponseStatus()
  fullName: int com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus()
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseStatus*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 234
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Returns the response status code.</p>

    <p></p>
  syntax:
    content: public int getResponseStatus()
    return:
      type: f75371fa
      description: <p>the response status code.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>if no response was received. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection()
  id: HttpsConnection()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: HttpsConnection()
  nameWithType: HttpsConnection.HttpsConnection()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection()
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 299
  package: com.microsoft.azure.sdk.iot.device.transport.https
  syntax:
    content: protected HttpsConnection()
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection(URL,HttpsMethod)
  id: HttpsConnection(URL,HttpsMethod)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: HttpsConnection(URL url, HttpsMethod method)
  nameWithType: HttpsConnection.HttpsConnection(URL url, HttpsMethod method)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL url, HttpsMethod method)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 51
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Constructor. Opens a connection to the given URL.</p>

    <p></p>
  syntax:
    content: public HttpsConnection(URL url, HttpsMethod method)
    parameters:
    - id: url
      type: a891b3e6
      description: <p>the URL for the HTTPS connection. </p>
    - id: method
      type: com.microsoft.azure.sdk.iot.device.transport.https._https_method
      description: <p>the HTTPS method (i.e. GET).</p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the connection could not be opened. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readError()
  id: readError()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: readError()
  nameWithType: HttpsConnection.readError()
  fullName: byte [] com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError()
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readError*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 209
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Reads from the error stream and returns the error reason.</p>

    <p></p>
  syntax:
    content: public byte [] readError()
    return:
      type: ccd9418d
      description: <p>the error reason.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the input stream could not be accessed, for example if the server could not be reached. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readInput()
  id: readInput()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: readInput()
  nameWithType: HttpsConnection.readInput()
  fullName: byte [] com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput()
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readInput*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 189
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Reads from the input stream (response stream) and returns the response.</p>

    <p></p>
  syntax:
    content: public byte [] readInput()
    return:
      type: ccd9418d
      description: <p>the response body.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the input stream could not be accessed, for example if the server could not be reached. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readInputStream(InputStream)
  id: readInputStream(InputStream)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: readInputStream(InputStream stream)
  nameWithType: HttpsConnection.readInputStream(InputStream stream)
  fullName: static byte [] com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInputStream(InputStream stream)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readInputStream*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 266
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Reads the input stream until the stream is empty.</p>

    <p></p>
  syntax:
    content: protected static byte [] readInputStream(InputStream stream)
    parameters:
    - id: stream
      type: 76fcb9b7
      description: <p>the input stream.</p>
    return:
      type: ccd9418d
      description: <p>the content of the input stream.</p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the input stream could not be read from. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setReadTimeoutMillis(int)
  id: setReadTimeoutMillis(int)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: setReadTimeoutMillis(int timeout)
  nameWithType: HttpsConnection.setReadTimeoutMillis(int timeout)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeoutMillis(int timeout)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setReadTimeoutMillis*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 144
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Sets the read timeout in milliseconds. The read timeout is the number of milliseconds after the server receives a request and before the server sends data back.</p>

    <p></p>
  syntax:
    content: public void setReadTimeoutMillis(int timeout)
    parameters:
    - id: timeout
      type: f75371fa
      description: <p>the read timeout. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestHeader(String,String)
  id: setRequestHeader(String,String)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: setRequestHeader(String field, String value)
  nameWithType: HttpsConnection.setRequestHeader(String field, String value)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader(String field, String value)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestHeader*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 131
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Sets the request header field to the given value.</p>

    <p></p>
  syntax:
    content: public void setRequestHeader(String field, String value)
    parameters:
    - id: field
      type: "26831127"
      description: <p>the header field name. </p>
    - id: value
      type: "26831127"
      description: <p>the header field value. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestMethod(HttpsMethod)
  id: setRequestMethod(HttpsMethod)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: setRequestMethod(HttpsMethod method)
  nameWithType: HttpsConnection.setRequestMethod(HttpsMethod method)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod(HttpsMethod method)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestMethod*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 101
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Sets the request method (i.e. POST).</p>

    <p></p>
  syntax:
    content: public void setRequestMethod(HttpsMethod method)
    parameters:
    - id: method
      type: com.microsoft.azure.sdk.iot.device.transport.https._https_method
      description: <p>the request method.</p>
  exceptions:
  - type: 3c87bd19
    description: <p>if the request currently has a non-empty body and the new method is not a POST or a PUT. This is because Java's <ref refid="" kindref="compound">HttpsURLConnection</ref> silently converts the HTTPS method to POST or PUT if a body is written to the request. </p>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setSSLContext(SSLContext)
  id: setSSLContext(SSLContext)
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: setSSLContext(SSLContext sslContext)
  nameWithType: HttpsConnection.setSSLContext(SSLContext sslContext)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setSSLContext(SSLContext sslContext)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setSSLContext*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 288
  package: com.microsoft.azure.sdk.iot.device.transport.https
  syntax:
    content: protected void setSSLContext(SSLContext sslContext)
    parameters:
    - id: sslContext
      type: 13e89c07
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.writeOutput(byte [])
  id: writeOutput(byte [])
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  langs:
  - java
  name: writeOutput(byte[] body)
  nameWithType: HttpsConnection.writeOutput(byte[] body)
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput(byte[] body)
  overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.writeOutput*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
    startLine: 160
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: >-
    <p>Saves the body to be sent with the request.</p>

    <p></p>
  syntax:
    content: public void writeOutput(byte[] body)
    parameters:
    - id: body
      type: ccd9418d
      description: <p>the request body.</p>
  exceptions:
  - type: 3c87bd19
    description: <p>if the request does not currently use method POST or PUT and the body is non-empty. This is because Java's <ref refid="" kindref="compound">HttpsURLConnection</ref> silently converts the HTTPS method to POST or PUT if a body is written to the request. </p>
references:
- uid: 9d854a40
  spec.java:
  - name: final HttpsURLConnection
    fullName: final HttpsURLConnection
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: a891b3e6
  spec.java:
  - name: URL
    fullName: URL
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection*
  name: HttpsConnection
  nameWithType: HttpsConnection.HttpsConnection
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect*
  name: connect
  nameWithType: HttpsConnection.connect
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestMethod*
  name: setRequestMethod
  nameWithType: HttpsConnection.setRequestMethod
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestHeader*
  name: setRequestHeader
  nameWithType: HttpsConnection.setRequestHeader
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setReadTimeoutMillis*
  name: setReadTimeoutMillis
  nameWithType: HttpsConnection.setReadTimeoutMillis
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeoutMillis
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.writeOutput*
  name: writeOutput
  nameWithType: HttpsConnection.writeOutput
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readInput*
  name: readInput
  nameWithType: HttpsConnection.readInput
  fullName: byte [] com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readError*
  name: readError
  nameWithType: HttpsConnection.readError
  fullName: byte [] com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseStatus*
  name: getResponseStatus
  nameWithType: HttpsConnection.getResponseStatus
  fullName: int com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: b2319095
  spec.java:
  - name: Map<String, List<String>>
    fullName: Map<String, List<String>>
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseHeaders*
  name: getResponseHeaders
  nameWithType: HttpsConnection.getResponseHeaders
  fullName: Map<String, List<String>> com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: 76fcb9b7
  spec.java:
  - name: InputStream
    fullName: InputStream
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readInputStream*
  name: readInputStream
  nameWithType: HttpsConnection.readInputStream
  fullName: static byte [] com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInputStream
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: 13e89c07
  spec.java:
  - name: SSLContext
    fullName: SSLContext
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setSSLContext*
  name: setSSLContext
  nameWithType: HttpsConnection.setSSLContext
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setSSLContext
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect()
  parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
  name: connect()
  nameWithType: HttpsConnection.connect()
  fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
  type: Method
  summary: >-
    <p>Sends the request to the URL given in the constructor.</p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.device.transport.https._https_method
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  href: com.microsoft.azure.sdk.iot.device.transport.https._https_method.yml
  name: HttpsMethod
  nameWithType: HttpsMethod
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
  type: Enum
  summary: <p>The HTTPS request method (i.e. GET). </p>
  syntax:
    content: public enum HttpsMethod
