### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration"
fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration"
name: "ContentKeyPolicyFairPlayConfiguration"
nameWithType: "ContentKeyPolicyFairPlayConfiguration"
summary: "Specifies a configuration for FairPlay licenses."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyConfiguration?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyConfiguration.validate()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ContentKeyPolicyFairPlayConfiguration extends ContentKeyPolicyConfiguration"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.ContentKeyPolicyFairPlayConfiguration()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.ContentKeyPolicyFairPlayConfiguration()"
  name: "ContentKeyPolicyFairPlayConfiguration()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.ContentKeyPolicyFairPlayConfiguration()"
  syntax: "public ContentKeyPolicyFairPlayConfiguration()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.ask()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.ask()"
  name: "ask()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.ask()"
  summary: "Get the ask property: The key that must be used as FairPlay Application Secret key."
  syntax: "public byte[] ask()"
  returns:
    description: "the ask value."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.fairPlayPfx()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.fairPlayPfx()"
  name: "fairPlayPfx()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.fairPlayPfx()"
  summary: "Get the fairPlayPfx property: The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
  syntax: "public String fairPlayPfx()"
  returns:
    description: "the fairPlayPfx value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.fairPlayPfxPassword()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.fairPlayPfxPassword()"
  name: "fairPlayPfxPassword()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.fairPlayPfxPassword()"
  summary: "Get the fairPlayPfxPassword property: The password encrypting FairPlay certificate in PKCS 12 (pfx) format."
  syntax: "public String fairPlayPfxPassword()"
  returns:
    description: "the fairPlayPfxPassword value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.offlineRentalConfiguration()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.offlineRentalConfiguration()"
  name: "offlineRentalConfiguration()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.offlineRentalConfiguration()"
  summary: "Get the offlineRentalConfiguration property: Offline rental policy."
  syntax: "public ContentKeyPolicyFairPlayOfflineRentalConfiguration offlineRentalConfiguration()"
  returns:
    description: "the offlineRentalConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayOfflineRentalConfiguration?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayOfflineRentalConfiguration&text=ContentKeyPolicyFairPlayOfflineRentalConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.rentalAndLeaseKeyType()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.rentalAndLeaseKeyType()"
  name: "rentalAndLeaseKeyType()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.rentalAndLeaseKeyType()"
  summary: "Get the rentalAndLeaseKeyType property: The rental and lease key type."
  syntax: "public ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType()"
  returns:
    description: "the rentalAndLeaseKeyType value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType&text=ContentKeyPolicyFairPlayRentalAndLeaseKeyType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.rentalDuration()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.rentalDuration()"
  name: "rentalDuration()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.rentalDuration()"
  summary: "Get the rentalDuration property: The rental duration. Must be greater than or equal to 0."
  syntax: "public long rentalDuration()"
  returns:
    description: "the rentalDuration value."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.validate()"
  name: "validate()"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyConfiguration.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.withAsk(byte[])"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.withAsk(byte[] ask)"
  name: "withAsk(byte[] ask)"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.withAsk(byte[] ask)"
  summary: "Set the ask property: The key that must be used as FairPlay Application Secret key."
  parameters:
  - description: "the ask value to set."
    name: "ask"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public ContentKeyPolicyFairPlayConfiguration withAsk(byte[] ask)"
  returns:
    description: "the ContentKeyPolicyFairPlayConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration&text=ContentKeyPolicyFairPlayConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.withFairPlayPfx(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.withFairPlayPfx(String fairPlayPfx)"
  name: "withFairPlayPfx(String fairPlayPfx)"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.withFairPlayPfx(String fairPlayPfx)"
  summary: "Set the fairPlayPfx property: The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
  parameters:
  - description: "the fairPlayPfx value to set."
    name: "fairPlayPfx"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyFairPlayConfiguration withFairPlayPfx(String fairPlayPfx)"
  returns:
    description: "the ContentKeyPolicyFairPlayConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration&text=ContentKeyPolicyFairPlayConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.withFairPlayPfxPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.withFairPlayPfxPassword(String fairPlayPfxPassword)"
  name: "withFairPlayPfxPassword(String fairPlayPfxPassword)"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.withFairPlayPfxPassword(String fairPlayPfxPassword)"
  summary: "Set the fairPlayPfxPassword property: The password encrypting FairPlay certificate in PKCS 12 (pfx) format."
  parameters:
  - description: "the fairPlayPfxPassword value to set."
    name: "fairPlayPfxPassword"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyFairPlayConfiguration withFairPlayPfxPassword(String fairPlayPfxPassword)"
  returns:
    description: "the ContentKeyPolicyFairPlayConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration&text=ContentKeyPolicyFairPlayConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.withOfflineRentalConfiguration(com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayOfflineRentalConfiguration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.withOfflineRentalConfiguration(ContentKeyPolicyFairPlayOfflineRentalConfiguration offlineRentalConfiguration)"
  name: "withOfflineRentalConfiguration(ContentKeyPolicyFairPlayOfflineRentalConfiguration offlineRentalConfiguration)"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.withOfflineRentalConfiguration(ContentKeyPolicyFairPlayOfflineRentalConfiguration offlineRentalConfiguration)"
  summary: "Set the offlineRentalConfiguration property: Offline rental policy."
  parameters:
  - description: "the offlineRentalConfiguration value to set."
    name: "offlineRentalConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayOfflineRentalConfiguration?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayOfflineRentalConfiguration&text=ContentKeyPolicyFairPlayOfflineRentalConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyFairPlayConfiguration withOfflineRentalConfiguration(ContentKeyPolicyFairPlayOfflineRentalConfiguration offlineRentalConfiguration)"
  returns:
    description: "the ContentKeyPolicyFairPlayConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration&text=ContentKeyPolicyFairPlayConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.withRentalAndLeaseKeyType(com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.withRentalAndLeaseKeyType(ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType)"
  name: "withRentalAndLeaseKeyType(ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType)"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.withRentalAndLeaseKeyType(ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType)"
  summary: "Set the rentalAndLeaseKeyType property: The rental and lease key type."
  parameters:
  - description: "the rentalAndLeaseKeyType value to set."
    name: "rentalAndLeaseKeyType"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType&text=ContentKeyPolicyFairPlayRentalAndLeaseKeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyFairPlayConfiguration withRentalAndLeaseKeyType(ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType)"
  returns:
    description: "the ContentKeyPolicyFairPlayConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration&text=ContentKeyPolicyFairPlayConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.withRentalDuration(long)"
  fullName: "com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration.withRentalDuration(long rentalDuration)"
  name: "withRentalDuration(long rentalDuration)"
  nameWithType: "ContentKeyPolicyFairPlayConfiguration.withRentalDuration(long rentalDuration)"
  summary: "Set the rentalDuration property: The rental duration. Must be greater than or equal to 0."
  parameters:
  - description: "the rentalDuration value to set."
    name: "rentalDuration"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContentKeyPolicyFairPlayConfiguration withRentalDuration(long rentalDuration)"
  returns:
    description: "the ContentKeyPolicyFairPlayConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration?alt=com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration&text=ContentKeyPolicyFairPlayConfiguration\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.0.0
