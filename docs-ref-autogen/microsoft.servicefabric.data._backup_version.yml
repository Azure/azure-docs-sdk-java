items:
- uid: microsoft.servicefabric.data._backup_version
  id: _backup_version
  parent: microsoft.servicefabric.data
  children:
  - microsoft.servicefabric.data._backup_version.epoch()
  - microsoft.servicefabric.data._backup_version.invalidBackupVersion()
  - microsoft.servicefabric.data._backup_version.lsn()
  href: microsoft.servicefabric.data._backup_version.yml
  langs:
  - java
  name: BackupVersion
  nameWithType: BackupVersion
  fullName: microsoft.servicefabric.data.BackupVersion
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/BackupVersion.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/BackupVersion.java
    startLine: 4
  package: microsoft.servicefabric.data
  syntax: &o1
    content: public class BackupVersion
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - microsoft.servicefabric.data._backup_version.BackupVersion(Epoch,long)
- uid: microsoft.servicefabric.data._backup_version.epoch()
  id: epoch()
  parent: microsoft.servicefabric.data._backup_version
  href: microsoft.servicefabric.data._backup_version.yml
  langs:
  - java
  name: epoch()
  nameWithType: BackupVersion.epoch()
  fullName: Epoch microsoft.servicefabric.data.BackupVersion.epoch()
  overload: microsoft.servicefabric.data._backup_version.epoch*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/BackupVersion.java
    startLine: 22
  package: microsoft.servicefabric.data
  summary: >-
    <p>Epoch at which the backup was taken.</p>

    <p></p>
  syntax:
    content: public Epoch epoch()
    return:
      type: system.fabric._epoch
      description: <p>The epoch. </p>
- uid: microsoft.servicefabric.data._backup_version.invalidBackupVersion()
  id: invalidBackupVersion()
  parent: microsoft.servicefabric.data._backup_version
  href: microsoft.servicefabric.data._backup_version.yml
  langs:
  - java
  name: invalidBackupVersion
  nameWithType: BackupVersion.invalidBackupVersion
  fullName: final BackupVersion microsoft.servicefabric.data.BackupVersion.invalidBackupVersion
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/BackupVersion.java
    startLine: 8
  package: microsoft.servicefabric.data
  summary: <p>Invalid Backup Version. </p>
  syntax:
    content: public static final BackupVersion invalidBackupVersion= new BackupVersion(new Epoch(-1, -1), -1)
    return:
      type: 93de0ef9microsoft.servicefabric.data._backup_version
- uid: microsoft.servicefabric.data._backup_version.lsn()
  id: lsn()
  parent: microsoft.servicefabric.data._backup_version
  href: microsoft.servicefabric.data._backup_version.yml
  langs:
  - java
  name: lsn()
  nameWithType: BackupVersion.lsn()
  fullName: long microsoft.servicefabric.data.BackupVersion.lsn()
  overload: microsoft.servicefabric.data._backup_version.lsn*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/BackupVersion.java
    startLine: 33
  package: microsoft.servicefabric.data
  summary: >-
    <p>Last committed logical sequence number included in the backup.</p>

    <p></p>
  syntax:
    content: public long lsn()
    return:
      type: 0364520f
      description: <p>The lsn. </p>
references:
- uid: 93de0ef9microsoft.servicefabric.data._backup_version
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: microsoft.servicefabric.data._backup_version
    name: BackupVersion
    fullName: microsoft.servicefabric.data.BackupVersion
    href: microsoft.servicefabric.data._backup_version.yml
- uid: microsoft.servicefabric.data._backup_version.epoch*
  name: epoch
  nameWithType: BackupVersion.epoch
  fullName: Epoch microsoft.servicefabric.data.BackupVersion.epoch
  package: microsoft.servicefabric.data
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: microsoft.servicefabric.data._backup_version.lsn*
  name: lsn
  nameWithType: BackupVersion.lsn
  fullName: long microsoft.servicefabric.data.BackupVersion.lsn
  package: microsoft.servicefabric.data
- uid: microsoft.servicefabric.data._backup_version.BackupVersion(Epoch,long)
- uid: microsoft.servicefabric.data._backup_version
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._backup_version.yml
  name: BackupVersion
  nameWithType: BackupVersion
  fullName: microsoft.servicefabric.data.BackupVersion
  type: Class
  syntax: *o1
- uid: system.fabric._epoch
  parent: system.fabric
  href: system.fabric._epoch.yml
  name: Epoch
  nameWithType: Epoch
  fullName: system.fabric.Epoch
  type: Class
  summary: >-
    <p>Represents the current version of the partition in Service Fabric. </p>

    <p>

      <bold>Remarks:</bold>An <xref href="system.fabric._epoch" data-throw-if-not-resolved="false"></xref> is a configuration number for the partition as a whole. When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new <xref href="system.fabric._epoch" data-throw-if-not-resolved="false"></xref> from the ones which were sent by the old Primary replica. The fact that the Primary has changed is not directly visible to Secondary replicas, which are usually unaffected by the failure that affected the original Primary replica. To track that the Primary replica has changed has to be communicated to the Secondary replica. This communication occurs via the <xref href="system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false"></xref> method. Most services can ignore the details of the inner fields of the <xref href="system.fabric._epoch" data-throw-if-not-resolved="false"></xref> as it is usually sufficient to know that the <xref href="system.fabric._epoch" data-throw-if-not-resolved="false"></xref> has changed and to compare Epochs to determine relative ordering of operations and events in the system. Comparison operations are provided for this purpose. </p>
  syntax:
    content: public class Epoch
