### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.documentdb.internal.Strings"
  id: "Strings"
  parent: "com.microsoft.azure.documentdb.internal"
  children:
  - "com.microsoft.azure.documentdb.internal.Strings.Strings()"
  - "com.microsoft.azure.documentdb.internal.Strings.areEqual(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.documentdb.internal.Strings.compare(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.documentdb.internal.Strings.isNullOrEmpty(java.lang.String)"
  - "com.microsoft.azure.documentdb.internal.Strings.toCamelCase(java.lang.String)"
  - "com.microsoft.azure.documentdb.internal.Strings.toString(boolean)"
  - "com.microsoft.azure.documentdb.internal.Strings.toString(int)"
  langs:
  - "java"
  name: "Strings"
  nameWithType: "Strings"
  fullName: "com.microsoft.azure.documentdb.internal.Strings"
  type: "Class"
  package: "com.microsoft.azure.documentdb.internal"
  summary: "While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk."
  syntax:
    content: "public class Strings"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.documentdb.internal.Strings.Strings()"
  id: "Strings()"
  parent: "com.microsoft.azure.documentdb.internal.Strings"
  langs:
  - "java"
  name: "Strings()"
  nameWithType: "Strings.Strings()"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.Strings()"
  overload: "com.microsoft.azure.documentdb.internal.Strings.Strings*"
  type: "Constructor"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public Strings()"
- uid: "com.microsoft.azure.documentdb.internal.Strings.areEqual(java.lang.String,java.lang.String)"
  id: "areEqual(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.documentdb.internal.Strings"
  langs:
  - "java"
  name: "areEqual(String str1, String str2)"
  nameWithType: "Strings.areEqual(String str1, String str2)"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.areEqual(String str1, String str2)"
  overload: "com.microsoft.azure.documentdb.internal.Strings.areEqual*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public static boolean areEqual(String str1, String str2)"
    parameters:
    - id: "str1"
      type: "java.lang.String"
    - id: "str2"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.documentdb.internal.Strings.compare(java.lang.String,java.lang.String)"
  id: "compare(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.documentdb.internal.Strings"
  langs:
  - "java"
  name: "compare(String str1, String str2)"
  nameWithType: "Strings.compare(String str1, String str2)"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.compare(String str1, String str2)"
  overload: "com.microsoft.azure.documentdb.internal.Strings.compare*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public static int compare(String str1, String str2)"
    parameters:
    - id: "str1"
      type: "java.lang.String"
    - id: "str2"
      type: "java.lang.String"
    return:
      type: "int"
- uid: "com.microsoft.azure.documentdb.internal.Strings.isNullOrEmpty(java.lang.String)"
  id: "isNullOrEmpty(java.lang.String)"
  parent: "com.microsoft.azure.documentdb.internal.Strings"
  langs:
  - "java"
  name: "isNullOrEmpty(String str)"
  nameWithType: "Strings.isNullOrEmpty(String str)"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.isNullOrEmpty(String str)"
  overload: "com.microsoft.azure.documentdb.internal.Strings.isNullOrEmpty*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public static boolean isNullOrEmpty(String str)"
    parameters:
    - id: "str"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.documentdb.internal.Strings.toCamelCase(java.lang.String)"
  id: "toCamelCase(java.lang.String)"
  parent: "com.microsoft.azure.documentdb.internal.Strings"
  langs:
  - "java"
  name: "toCamelCase(String str)"
  nameWithType: "Strings.toCamelCase(String str)"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.toCamelCase(String str)"
  overload: "com.microsoft.azure.documentdb.internal.Strings.toCamelCase*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public static String toCamelCase(String str)"
    parameters:
    - id: "str"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.documentdb.internal.Strings.toString(boolean)"
  id: "toString(boolean)"
  parent: "com.microsoft.azure.documentdb.internal.Strings"
  langs:
  - "java"
  name: "toString(boolean value)"
  nameWithType: "Strings.toString(boolean value)"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.toString(boolean value)"
  overload: "com.microsoft.azure.documentdb.internal.Strings.toString*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public static String toString(boolean value)"
    parameters:
    - id: "value"
      type: "boolean"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.documentdb.internal.Strings.toString(int)"
  id: "toString(int)"
  parent: "com.microsoft.azure.documentdb.internal.Strings"
  langs:
  - "java"
  name: "toString(int value)"
  nameWithType: "Strings.toString(int value)"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.toString(int value)"
  overload: "com.microsoft.azure.documentdb.internal.Strings.toString*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public static String toString(int value)"
    parameters:
    - id: "value"
      type: "int"
    return:
      type: "java.lang.String"
references:
- uid: "com.microsoft.azure.documentdb.internal.Strings.Strings*"
  name: "Strings"
  nameWithType: "Strings.Strings"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.Strings"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.documentdb.internal.Strings.isNullOrEmpty*"
  name: "isNullOrEmpty"
  nameWithType: "Strings.isNullOrEmpty"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.isNullOrEmpty"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "com.microsoft.azure.documentdb.internal.Strings.toString*"
  name: "toString"
  nameWithType: "Strings.toString"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.toString"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.documentdb.internal.Strings.areEqual*"
  name: "areEqual"
  nameWithType: "Strings.areEqual"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.areEqual"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "com.microsoft.azure.documentdb.internal.Strings.compare*"
  name: "compare"
  nameWithType: "Strings.compare"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.compare"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "com.microsoft.azure.documentdb.internal.Strings.toCamelCase*"
  name: "toCamelCase"
  nameWithType: "Strings.toCamelCase"
  fullName: "com.microsoft.azure.documentdb.internal.Strings.toCamelCase"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
