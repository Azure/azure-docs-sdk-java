### YamlMime:JavaMember
nameWithType: Models.getRegexEntityEntityInfo
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Models.getRegexEntityEntityInfo(UUID appId, String versionId, UUID regexEntityId)
  name: getRegexEntityEntityInfo(UUID appId, String versionId, UUID regexEntityId)
  nameWithType: Models.getRegexEntityEntityInfo(UUID appId, String versionId, UUID regexEntityId)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The regex entity model ID. </p>
    name: regexEntityId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the RegexEntityExtractor object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.RegexEntityExtractor?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.RegexEntityExtractor&text=RegexEntityExtractor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information of a regex entity model.</p>

    <p></p>
  syntax: public RegexEntityExtractor getRegexEntityEntityInfo(UUID appId, String versionId, UUID regexEntityId)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Models.getRegexEntityEntityInfo(UUID,String,UUID)
uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Models.getRegexEntityEntityInfo*
fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Models.getRegexEntityEntityInfo(UUID appId, String versionId, UUID regexEntityId)
name: getRegexEntityEntityInfo(UUID appId, String versionId, UUID regexEntityId)
package: com.microsoft.azure.cognitiveservices.language.luis.authoring
metadata: {}
