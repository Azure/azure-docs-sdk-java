### YamlMime:JavaMember
nameWithType: ExitOptions.withDependencyAction
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction(DependencyAction dependencyAction)
  name: withDependencyAction(DependencyAction dependencyAction)
  nameWithType: ExitOptions.withDependencyAction(DependencyAction dependencyAction)
  parameters:
  - description: <p>the dependencyAction value to set </p>
    name: dependencyAction
    type: <xref href="com.microsoft.azure.batch.protocol.models.DependencyAction?alt=com.microsoft.azure.batch.protocol.models.DependencyAction&text=DependencyAction" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExitOptions object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the default is 'satisfy' for exit code 0, and 'block' for all other exit conditions. If the job's usesTaskDependencies property is set to false, then specifying the dependencyAction property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Possible values include: 'satisfy', 'block'.</p>

    <p></p>
  syntax: public ExitOptions withDependencyAction(DependencyAction dependencyAction)
  uid: com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction(DependencyAction)
uid: com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction*
fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction(DependencyAction dependencyAction)
name: withDependencyAction(DependencyAction dependencyAction)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
