### YamlMime:JavaType
uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient"
fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient"
name: "ServiceBusAdministrationClient"
nameWithType: "ServiceBusAdministrationClient"
summary: "A **synchronous** client for managing a Service Bus namespace."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServiceBusAdministrationClient"
methods:
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue(String queueName)"
  name: "createQueue(String queueName)"
  nameWithType: "ServiceBusAdministrationClient.createQueue(String queueName)"
  summary: "Creates a queue with the given name."
  parameters:
  - description: "Name of the queue to create."
    name: "queueName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueProperties createQueue(String queueName)"
  desc: "Creates a queue with the given name."
  returns:
    description: "The created queue."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateQueueOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue(String queueName, CreateQueueOptions queueOptions)"
  name: "createQueue(String queueName, CreateQueueOptions queueOptions)"
  nameWithType: "ServiceBusAdministrationClient.createQueue(String queueName, CreateQueueOptions queueOptions)"
  summary: "Creates a queue with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateQueueOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateQueueOptions\"></xref>."
  parameters:
  - description: "Name of the queue to create."
    name: "queueName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Information about the queue to create."
    name: "queueOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateQueueOptions?alt=com.azure.messaging.servicebus.administration.models.CreateQueueOptions&text=CreateQueueOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueProperties createQueue(String queueName, CreateQueueOptions queueOptions)"
  desc: "Creates a queue with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateQueueOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateQueueOptions\"></xref>."
  returns:
    description: "The created queue."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueueWithResponse(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateQueueOptions,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueueWithResponse(String queueName, CreateQueueOptions queueOptions, Context context)"
  name: "createQueueWithResponse(String queueName, CreateQueueOptions queueOptions, Context context)"
  nameWithType: "ServiceBusAdministrationClient.createQueueWithResponse(String queueName, CreateQueueOptions queueOptions, Context context)"
  summary: "Creates a queue and returns the created queue in addition to the HTTP response."
  parameters:
  - description: "Name of the queue to create."
    name: "queueName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Information about the queue to create."
    name: "queueOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateQueueOptions?alt=com.azure.messaging.servicebus.administration.models.CreateQueueOptions&text=CreateQueueOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<QueueProperties> createQueueWithResponse(String queueName, CreateQueueOptions queueOptions, Context context)"
  desc: "Creates a queue and returns the created queue in addition to the HTTP response."
  returns:
    description: "The created queue in addition to the HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule(String topicName, String subscriptionName, String ruleName)"
  name: "createRule(String topicName, String subscriptionName, String ruleName)"
  nameWithType: "ServiceBusAdministrationClient.createRule(String topicName, String subscriptionName, String ruleName)"
  summary: "Creates a rule under the given topic and subscription"
  parameters:
  - description: "Name of the topic associated with rule."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the subscription associated with the rule."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the rule."
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RuleProperties createRule(String topicName, String subscriptionName, String ruleName)"
  desc: "Creates a rule under the given topic and subscription"
  returns:
    description: "Information about the created rule."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateRuleOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule(String topicName, String ruleName, String subscriptionName, CreateRuleOptions ruleOptions)"
  name: "createRule(String topicName, String ruleName, String subscriptionName, CreateRuleOptions ruleOptions)"
  nameWithType: "ServiceBusAdministrationClient.createRule(String topicName, String ruleName, String subscriptionName, CreateRuleOptions ruleOptions)"
  summary: "Creates a rule with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateRuleOptions\"></xref>."
  parameters:
  - description: "Name of the topic associated with rule."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the rule."
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the subscription associated with the rule."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Information about the rule to create."
    name: "ruleOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions?alt=com.azure.messaging.servicebus.administration.models.CreateRuleOptions&text=CreateRuleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RuleProperties createRule(String topicName, String ruleName, String subscriptionName, CreateRuleOptions ruleOptions)"
  desc: "Creates a rule with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateRuleOptions\"></xref>."
  returns:
    description: "Information about the created rule."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateRuleOptions,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRuleWithResponse(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions, Context context)"
  name: "createRuleWithResponse(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions, Context context)"
  nameWithType: "ServiceBusAdministrationClient.createRuleWithResponse(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions, Context context)"
  summary: "Creates a rule and returns the created rule in addition to the HTTP response."
  parameters:
  - description: "Name of the topic associated with rule."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the subscription associated with the rule."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the rule."
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Information about the rule to create."
    name: "ruleOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions?alt=com.azure.messaging.servicebus.administration.models.CreateRuleOptions&text=CreateRuleOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<RuleProperties> createRuleWithResponse(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions, Context context)"
  desc: "Creates a rule and returns the created rule in addition to the HTTP response."
  returns:
    description: "The created rule in addition to the HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription(String topicName, String subscriptionName)"
  name: "createSubscription(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationClient.createSubscription(String topicName, String subscriptionName)"
  summary: "Creates a subscription with the given topic and subscription names."
  parameters:
  - description: "Name of the topic associated with subscription."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionProperties createSubscription(String topicName, String subscriptionName)"
  desc: "Creates a subscription with the given topic and subscription names."
  returns:
    description: "Information about the created subscription."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)"
  name: "createSubscription(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)"
  nameWithType: "ServiceBusAdministrationClient.createSubscription(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)"
  summary: "Creates a subscription with the <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref>."
  parameters:
  - description: "Name of the topic associated with subscription."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Information about the subscription to create."
    name: "subscriptionOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions?alt=com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions&text=CreateSubscriptionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionProperties createSubscription(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)"
  desc: "Creates a subscription with the <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref>."
  returns:
    description: "Information about the created subscription."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscriptionWithResponse(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions, Context context)"
  name: "createSubscriptionWithResponse(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions, Context context)"
  nameWithType: "ServiceBusAdministrationClient.createSubscriptionWithResponse(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions, Context context)"
  summary: "Creates a queue and returns the created queue in addition to the HTTP response."
  parameters:
  - description: "Name of the topic associated with subscription."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Information about the subscription to create."
    name: "subscriptionOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions?alt=com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions&text=CreateSubscriptionOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SubscriptionProperties> createSubscriptionWithResponse(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions, Context context)"
  desc: "Creates a queue and returns the created queue in addition to the HTTP response."
  returns:
    description: "The created subscription in addition to the HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic(String topicName)"
  name: "createTopic(String topicName)"
  nameWithType: "ServiceBusAdministrationClient.createTopic(String topicName)"
  summary: "Creates a topic with the given name."
  parameters:
  - description: "Name of the topic to create."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicProperties createTopic(String topicName)"
  desc: "Creates a topic with the given name."
  returns:
    description: "Information about the created topic."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateTopicOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic(String topicName, CreateTopicOptions topicOptions)"
  name: "createTopic(String topicName, CreateTopicOptions topicOptions)"
  nameWithType: "ServiceBusAdministrationClient.createTopic(String topicName, CreateTopicOptions topicOptions)"
  summary: "Creates a topic with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateTopicOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateTopicOptions\"></xref>."
  parameters:
  - description: "Name of the topic to create."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Information about the topic to create."
    name: "topicOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateTopicOptions?alt=com.azure.messaging.servicebus.administration.models.CreateTopicOptions&text=CreateTopicOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicProperties createTopic(String topicName, CreateTopicOptions topicOptions)"
  desc: "Creates a topic with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateTopicOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateTopicOptions\"></xref>."
  returns:
    description: "Information about the created topic."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopicWithResponse(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateTopicOptions,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopicWithResponse(String topicName, CreateTopicOptions topicOptions, Context context)"
  name: "createTopicWithResponse(String topicName, CreateTopicOptions topicOptions, Context context)"
  nameWithType: "ServiceBusAdministrationClient.createTopicWithResponse(String topicName, CreateTopicOptions topicOptions, Context context)"
  summary: "Creates a topic and returns the created topic in addition to the HTTP response."
  parameters:
  - description: "Name of the topic to create."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Information about the topic to create."
    name: "topicOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateTopicOptions?alt=com.azure.messaging.servicebus.administration.models.CreateTopicOptions&text=CreateTopicOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<TopicProperties> createTopicWithResponse(String topicName, CreateTopicOptions topicOptions, Context context)"
  desc: "Creates a topic and returns the created topic in addition to the HTTP response."
  returns:
    description: "The created topic in addition to the HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueue(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueue(String queueName)"
  name: "deleteQueue(String queueName)"
  nameWithType: "ServiceBusAdministrationClient.deleteQueue(String queueName)"
  summary: "Deletes a queue the matching `queueName`."
  parameters:
  - description: "Name of queue to delete."
    name: "queueName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteQueue(String queueName)"
  desc: "Deletes a queue the matching `queueName`."
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueueWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueueWithResponse(String queueName, Context context)"
  name: "deleteQueueWithResponse(String queueName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.deleteQueueWithResponse(String queueName, Context context)"
  summary: "Deletes a queue the matching `queueName` and returns the HTTP response."
  parameters:
  - description: "Name of queue to delete."
    name: "queueName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteQueueWithResponse(String queueName, Context context)"
  desc: "Deletes a queue the matching `queueName` and returns the HTTP response."
  returns:
    description: "The HTTP response when the queue is successfully deleted."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRule(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRule(String topicName, String subscriptionName, String ruleName)"
  name: "deleteRule(String topicName, String subscriptionName, String ruleName)"
  nameWithType: "ServiceBusAdministrationClient.deleteRule(String topicName, String subscriptionName, String ruleName)"
  summary: "Deletes a rule the matching `ruleName`."
  parameters:
  - description: "Name of topic associated with rule to delete."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the subscription associated with the rule to delete."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of rule to delete."
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteRule(String topicName, String subscriptionName, String ruleName)"
  desc: "Deletes a rule the matching `ruleName`."
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)"
  name: "deleteRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.deleteRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)"
  summary: "Deletes a rule the matching `ruleName` and returns the HTTP response."
  parameters:
  - description: "Name of topic associated with rule to delete."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the subscription associated with the rule to delete."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of rule to delete."
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)"
  desc: "Deletes a rule the matching `ruleName` and returns the HTTP response."
  returns:
    description: "The HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscription(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscription(String topicName, String subscriptionName)"
  name: "deleteSubscription(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationClient.deleteSubscription(String topicName, String subscriptionName)"
  summary: "Deletes a subscription matching the `subscriptionName` in topic `topicName`."
  parameters:
  - description: "Name of topic associated with subscription to delete."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of subscription to delete."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteSubscription(String topicName, String subscriptionName)"
  desc: "Deletes a subscription matching the `subscriptionName` in topic `topicName`."
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscriptionWithResponse(String topicName, String subscriptionName, Context context)"
  name: "deleteSubscriptionWithResponse(String topicName, String subscriptionName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.deleteSubscriptionWithResponse(String topicName, String subscriptionName, Context context)"
  summary: "Deletes a subscription the matching `subscriptionName` and returns the HTTP response."
  parameters:
  - description: "Name of topic associated with subscription to delete."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of subscription to delete."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteSubscriptionWithResponse(String topicName, String subscriptionName, Context context)"
  desc: "Deletes a subscription the matching `subscriptionName` and returns the HTTP response."
  returns:
    description: "The HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopic(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopic(String topicName)"
  name: "deleteTopic(String topicName)"
  nameWithType: "ServiceBusAdministrationClient.deleteTopic(String topicName)"
  summary: "Deletes a topic the matching `topicName`."
  parameters:
  - description: "Name of topic to delete."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void deleteTopic(String topicName)"
  desc: "Deletes a topic the matching `topicName`."
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopicWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopicWithResponse(String topicName, Context context)"
  name: "deleteTopicWithResponse(String topicName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.deleteTopicWithResponse(String topicName, Context context)"
  summary: "Deletes a topic the matching `topicName` and returns the HTTP response."
  parameters:
  - description: "Name of topic to delete."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteTopicWithResponse(String topicName, Context context)"
  desc: "Deletes a topic the matching `topicName` and returns the HTTP response."
  returns:
    description: "The HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespaceProperties()"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespaceProperties()"
  name: "getNamespaceProperties()"
  nameWithType: "ServiceBusAdministrationClient.getNamespaceProperties()"
  summary: "Gets information about the Service Bus namespace."
  syntax: "public NamespaceProperties getNamespaceProperties()"
  desc: "Gets information about the Service Bus namespace."
  returns:
    description: "Information about the Service Bus namespace."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.NamespaceProperties?alt=com.azure.messaging.servicebus.administration.models.NamespaceProperties&text=NamespaceProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespacePropertiesWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespacePropertiesWithResponse(Context context)"
  name: "getNamespacePropertiesWithResponse(Context context)"
  nameWithType: "ServiceBusAdministrationClient.getNamespacePropertiesWithResponse(Context context)"
  summary: "Gets information about the Service Bus namespace along with its HTTP response."
  parameters:
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<NamespaceProperties> getNamespacePropertiesWithResponse(Context context)"
  desc: "Gets information about the Service Bus namespace along with its HTTP response."
  returns:
    description: "Information about the namespace and the associated HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.NamespaceProperties?alt=com.azure.messaging.servicebus.administration.models.NamespaceProperties&text=NamespaceProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueue(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueue(String queueName)"
  name: "getQueue(String queueName)"
  nameWithType: "ServiceBusAdministrationClient.getQueue(String queueName)"
  summary: "Gets information about the queue."
  parameters:
  - description: "Name of queue to get information about."
    name: "queueName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueProperties getQueue(String queueName)"
  desc: "Gets information about the queue."
  returns:
    description: "Information about the queue."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExists(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExists(String queueName)"
  name: "getQueueExists(String queueName)"
  nameWithType: "ServiceBusAdministrationClient.getQueueExists(String queueName)"
  summary: "Gets whether or not a queue with `queueName` exists in the Service Bus namespace."
  parameters:
  - description: "Name of the queue."
    name: "queueName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean getQueueExists(String queueName)"
  desc: "Gets whether or not a queue with `queueName` exists in the Service Bus namespace."
  returns:
    description: "<code>true</code> if the queue exists; otherwise <code>false</code>."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExistsWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExistsWithResponse(String queueName, Context context)"
  name: "getQueueExistsWithResponse(String queueName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.getQueueExistsWithResponse(String queueName, Context context)"
  summary: "Gets whether or not a queue with `queueName` exists in the Service Bus namespace."
  parameters:
  - description: "Name of the queue."
    name: "queueName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Boolean> getQueueExistsWithResponse(String queueName, Context context)"
  desc: "Gets whether or not a queue with `queueName` exists in the Service Bus namespace."
  returns:
    description: "The HTTP response and <code>true</code> if the queue exists; otherwise <code>false</code>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimeProperties(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimeProperties(String queueName)"
  name: "getQueueRuntimeProperties(String queueName)"
  nameWithType: "ServiceBusAdministrationClient.getQueueRuntimeProperties(String queueName)"
  summary: "Gets runtime properties about the queue."
  parameters:
  - description: "Name of queue to get information about."
    name: "queueName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueRuntimeProperties getQueueRuntimeProperties(String queueName)"
  desc: "Gets runtime properties about the queue."
  returns:
    description: "Runtime properties about the queue."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties?alt=com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties&text=QueueRuntimeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimePropertiesWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimePropertiesWithResponse(String queueName, Context context)"
  name: "getQueueRuntimePropertiesWithResponse(String queueName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.getQueueRuntimePropertiesWithResponse(String queueName, Context context)"
  summary: "Gets runtime properties about the queue along with its HTTP response."
  parameters:
  - description: "Name of queue to get information about."
    name: "queueName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<QueueRuntimeProperties> getQueueRuntimePropertiesWithResponse(String queueName, Context context)"
  desc: "Gets runtime properties about the queue along with its HTTP response."
  returns:
    description: "Runtime properties about the queue and the associated HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties?alt=com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties&text=QueueRuntimeProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueWithResponse(String queueName, Context context)"
  name: "getQueueWithResponse(String queueName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.getQueueWithResponse(String queueName, Context context)"
  summary: "Gets information about the queue along with its HTTP response."
  parameters:
  - description: "Name of queue to get information about."
    name: "queueName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<QueueProperties> getQueueWithResponse(String queueName, Context context)"
  desc: "Gets information about the queue along with its HTTP response."
  returns:
    description: "Information about the queue and the associated HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRule(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRule(String topicName, String subscriptionName, String ruleName)"
  name: "getRule(String topicName, String subscriptionName, String ruleName)"
  nameWithType: "ServiceBusAdministrationClient.getRule(String topicName, String subscriptionName, String ruleName)"
  summary: "Gets a rule from the service namespace."
  parameters:
  - description: "The name of the topic relative to service bus namespace."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The subscription name the rule belongs to."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the rule to retrieve."
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RuleProperties getRule(String topicName, String subscriptionName, String ruleName)"
  desc: "Gets a rule from the service namespace. Only following data types are deserialized in Filters and Action parameters - string, int, long, boolean, double, and OffsetDateTime. Other data types would return its string value."
  returns:
    description: "The associated rule."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)"
  name: "getRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.getRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)"
  summary: "Gets a rule from the service namespace."
  parameters:
  - description: "The name of the topic relative to service bus namespace."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The subscription name the rule belongs to."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the rule to retrieve."
    name: "ruleName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<RuleProperties> getRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)"
  desc: "Gets a rule from the service namespace. Only following data types are deserialized in Filters and Action parameters - string, int, long, bool, double, and OffsetDateTime. Other data types would return its string value."
  returns:
    description: "The associated rule with the corresponding HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscription(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscription(String topicName, String subscriptionName)"
  name: "getSubscription(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationClient.getSubscription(String topicName, String subscriptionName)"
  summary: "Gets information about the queue."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of subscription to get information about."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionProperties getSubscription(String topicName, String subscriptionName)"
  desc: "Gets information about the queue."
  returns:
    description: "Information about the subscription."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExists(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExists(String topicName, String subscriptionName)"
  name: "getSubscriptionExists(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationClient.getSubscriptionExists(String topicName, String subscriptionName)"
  summary: "Gets whether or not a subscription within a topic exists."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean getSubscriptionExists(String topicName, String subscriptionName)"
  desc: "Gets whether or not a subscription within a topic exists."
  returns:
    description: "<code>true</code> if the subscription exists."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExistsWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExistsWithResponse(String topicName, String subscriptionName, Context context)"
  name: "getSubscriptionExistsWithResponse(String topicName, String subscriptionName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.getSubscriptionExistsWithResponse(String topicName, String subscriptionName, Context context)"
  summary: "Gets whether or not a subscription within a topic exists."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Boolean> getSubscriptionExistsWithResponse(String topicName, String subscriptionName, Context context)"
  desc: "Gets whether or not a subscription within a topic exists."
  returns:
    description: "The HTTP response and <code>true</code> if the subscription exists; otherwise <code>false</code>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimeProperties(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimeProperties(String topicName, String subscriptionName)"
  name: "getSubscriptionRuntimeProperties(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationClient.getSubscriptionRuntimeProperties(String topicName, String subscriptionName)"
  summary: "Gets runtime properties about the subscription."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of subscription to get information about."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionRuntimeProperties getSubscriptionRuntimeProperties(String topicName, String subscriptionName)"
  desc: "Gets runtime properties about the subscription."
  returns:
    description: "Runtime properties about the subscription."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties&text=SubscriptionRuntimeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimePropertiesWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimePropertiesWithResponse(String topicName, String subscriptionName, Context context)"
  name: "getSubscriptionRuntimePropertiesWithResponse(String topicName, String subscriptionName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.getSubscriptionRuntimePropertiesWithResponse(String topicName, String subscriptionName, Context context)"
  summary: "Gets runtime properties about the subscription."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of subscription to get information about."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SubscriptionRuntimeProperties> getSubscriptionRuntimePropertiesWithResponse(String topicName, String subscriptionName, Context context)"
  desc: "Gets runtime properties about the subscription."
  returns:
    description: "Runtime properties about the subscription."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties&text=SubscriptionRuntimeProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionWithResponse(String topicName, String subscriptionName, Context context)"
  name: "getSubscriptionWithResponse(String topicName, String subscriptionName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.getSubscriptionWithResponse(String topicName, String subscriptionName, Context context)"
  summary: "Gets information about the subscription along with its HTTP response."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of subscription to get information about."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SubscriptionProperties> getSubscriptionWithResponse(String topicName, String subscriptionName, Context context)"
  desc: "Gets information about the subscription along with its HTTP response."
  returns:
    description: "Information about the subscription and the associated HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopic(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopic(String topicName)"
  name: "getTopic(String topicName)"
  nameWithType: "ServiceBusAdministrationClient.getTopic(String topicName)"
  summary: "Gets information about the topic."
  parameters:
  - description: "Name of topic to get information about."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicProperties getTopic(String topicName)"
  desc: "Gets information about the topic."
  returns:
    description: "Information about the topic."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExists(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExists(String topicName)"
  name: "getTopicExists(String topicName)"
  nameWithType: "ServiceBusAdministrationClient.getTopicExists(String topicName)"
  summary: "Gets whether or not a topic with `topicName` exists in the Service Bus namespace."
  parameters:
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean getTopicExists(String topicName)"
  desc: "Gets whether or not a topic with `topicName` exists in the Service Bus namespace."
  returns:
    description: "<code>true</code> if the topic exists."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExistsWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExistsWithResponse(String topicName, Context context)"
  name: "getTopicExistsWithResponse(String topicName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.getTopicExistsWithResponse(String topicName, Context context)"
  summary: "Gets whether or not a topic with `topicName` exists in the Service Bus namespace."
  parameters:
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Boolean> getTopicExistsWithResponse(String topicName, Context context)"
  desc: "Gets whether or not a topic with `topicName` exists in the Service Bus namespace."
  returns:
    description: "The HTTP response and <code>true</code> if the topic exists; otherwise <code>false</code>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimeProperties(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimeProperties(String topicName)"
  name: "getTopicRuntimeProperties(String topicName)"
  nameWithType: "ServiceBusAdministrationClient.getTopicRuntimeProperties(String topicName)"
  summary: "Gets runtime properties about the topic."
  parameters:
  - description: "Name of topic to get information about."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicRuntimeProperties getTopicRuntimeProperties(String topicName)"
  desc: "Gets runtime properties about the topic."
  returns:
    description: "Runtime properties about the topic."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties?alt=com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties&text=TopicRuntimeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimePropertiesWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimePropertiesWithResponse(String topicName, Context context)"
  name: "getTopicRuntimePropertiesWithResponse(String topicName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.getTopicRuntimePropertiesWithResponse(String topicName, Context context)"
  summary: "Gets runtime properties about the topic with its HTTP response."
  parameters:
  - description: "Name of topic to get information about."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<TopicRuntimeProperties> getTopicRuntimePropertiesWithResponse(String topicName, Context context)"
  desc: "Gets runtime properties about the topic with its HTTP response."
  returns:
    description: "Runtime properties about the topic and the associated HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties?alt=com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties&text=TopicRuntimeProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicWithResponse(String topicName, Context context)"
  name: "getTopicWithResponse(String topicName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.getTopicWithResponse(String topicName, Context context)"
  summary: "Gets information about the topic along with its HTTP response."
  parameters:
  - description: "Name of topic to get information about."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<TopicProperties> getTopicWithResponse(String topicName, Context context)"
  desc: "Gets information about the topic along with its HTTP response."
  returns:
    description: "Information about the topic and the associated HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues()"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues()"
  name: "listQueues()"
  nameWithType: "ServiceBusAdministrationClient.listQueues()"
  summary: "Fetches all the queues in the Service Bus namespace."
  syntax: "public PagedIterable<QueueProperties> listQueues()"
  desc: "Fetches all the queues in the Service Bus namespace."
  returns:
    description: "A PagedIterable of <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"queues\"></xref> in the Service Bus namespace."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues(com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues(Context context)"
  name: "listQueues(Context context)"
  nameWithType: "ServiceBusAdministrationClient.listQueues(Context context)"
  summary: "Fetches all the queues in the Service Bus namespace."
  parameters:
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<QueueProperties> listQueues(Context context)"
  desc: "Fetches all the queues in the Service Bus namespace."
  returns:
    description: "A PagedIterable of <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"queues\"></xref> in the Service Bus namespace."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listRules(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listRules(String topicName, String subscriptionName)"
  name: "listRules(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationClient.listRules(String topicName, String subscriptionName)"
  summary: "Fetches all the rules for a topic and subscription."
  parameters:
  - description: "The topic name under which all the rules need to be retrieved."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the subscription for which all rules need to be retrieved."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<RuleProperties> listRules(String topicName, String subscriptionName)"
  desc: "Fetches all the rules for a topic and subscription."
  returns:
    description: "An iterable of <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"rules\"></xref> for the <code>topicName</code> and <code>subscriptionName</code>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions(String topicName)"
  name: "listSubscriptions(String topicName)"
  nameWithType: "ServiceBusAdministrationClient.listSubscriptions(String topicName)"
  summary: "Fetches all the subscriptions for a topic."
  parameters:
  - description: "The topic name under which all the subscriptions need to be retrieved."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<SubscriptionProperties> listSubscriptions(String topicName)"
  desc: "Fetches all the subscriptions for a topic."
  returns:
    description: "A paged iterable of <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"subscriptions\"></xref> for the <code>topicName</code>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions(String topicName, Context context)"
  name: "listSubscriptions(String topicName, Context context)"
  nameWithType: "ServiceBusAdministrationClient.listSubscriptions(String topicName, Context context)"
  summary: "Fetches all the subscriptions for a topic."
  parameters:
  - description: "The topic name under which all the subscriptions need to be retrieved."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<SubscriptionProperties> listSubscriptions(String topicName, Context context)"
  desc: "Fetches all the subscriptions for a topic."
  returns:
    description: "A paged iterable of <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"subscriptions\"></xref> for the <code>topicName</code>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics()"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics()"
  name: "listTopics()"
  nameWithType: "ServiceBusAdministrationClient.listTopics()"
  summary: "Fetches all the topics in the Service Bus namespace."
  syntax: "public PagedIterable<TopicProperties> listTopics()"
  desc: "Fetches all the topics in the Service Bus namespace."
  returns:
    description: "A paged iterable of <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"topics\"></xref> in the Service Bus namespace."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics(com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics(Context context)"
  name: "listTopics(Context context)"
  nameWithType: "ServiceBusAdministrationClient.listTopics(Context context)"
  summary: "Fetches all the topics in the Service Bus namespace."
  parameters:
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<TopicProperties> listTopics(Context context)"
  desc: "Fetches all the topics in the Service Bus namespace."
  returns:
    description: "A paged iterable of <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"topics\"></xref> in the Service Bus namespace."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueue(com.azure.messaging.servicebus.administration.models.QueueProperties)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueue(QueueProperties queue)"
  name: "updateQueue(QueueProperties queue)"
  nameWithType: "ServiceBusAdministrationClient.updateQueue(QueueProperties queue)"
  summary: "Updates a queue with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueProperties\"></xref>."
  parameters:
  - description: "Information about the queue to update. You must provide all the property values that are desired\n     on the updated entity. Any values not provided are set to the service default values."
    name: "queue"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueProperties updateQueue(QueueProperties queue)"
  desc: "Updates a queue with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueue(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get queue description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method.\n\nThere are a subset of properties that can be updated. More information can be found in the links below. They are:\n\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setDefaultMessageTimeToLive(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultMessageTimeToLive\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setLockDuration(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LockDuration\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DuplicateDetectionHistoryTimeWindow\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setMaxDeliveryCount(java.lang.Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MaxDeliveryCount\"></xref>"
  returns:
    description: "The updated queue."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueueWithResponse(com.azure.messaging.servicebus.administration.models.QueueProperties,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueueWithResponse(QueueProperties queue, Context context)"
  name: "updateQueueWithResponse(QueueProperties queue, Context context)"
  nameWithType: "ServiceBusAdministrationClient.updateQueueWithResponse(QueueProperties queue, Context context)"
  summary: "Updates a queue with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueProperties\"></xref>."
  parameters:
  - description: "Information about the queue to update. You must provide all the property values that are desired\n     on the updated entity. Any values not provided are set to the service default values."
    name: "queue"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<QueueProperties> updateQueueWithResponse(QueueProperties queue, Context context)"
  desc: "Updates a queue with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueue(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get queue description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method.\n\nThere are a subset of properties that can be updated. More information can be found in the links below. They are:\n\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setDefaultMessageTimeToLive(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultMessageTimeToLive\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setLockDuration(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LockDuration\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DuplicateDetectionHistoryTimeWindow\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setMaxDeliveryCount(java.lang.Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MaxDeliveryCount\"></xref>"
  returns:
    description: "The updated queue with its HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRule(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.RuleProperties)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRule(String topicName, String subscriptionName, RuleProperties rule)"
  name: "updateRule(String topicName, String subscriptionName, RuleProperties rule)"
  nameWithType: "ServiceBusAdministrationClient.updateRule(String topicName, String subscriptionName, RuleProperties rule)"
  summary: "Updates a rule with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleProperties\"></xref>."
  parameters:
  - description: "The topic name under which the rule is updated."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the subscription for which the rule is updated."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Information about the rule to update. You must provide all the property values that are desired\n     on the updated entity. Any values not provided are set to the service default values."
    name: "rule"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RuleProperties updateRule(String topicName, String subscriptionName, RuleProperties rule)"
  desc: "Updates a rule with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRule(java.lang.String,java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get rule description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method."
  returns:
    description: "The updated rule."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRuleWithResponse(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.RuleProperties,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRuleWithResponse(String topicName, String subscriptionName, RuleProperties rule, Context context)"
  name: "updateRuleWithResponse(String topicName, String subscriptionName, RuleProperties rule, Context context)"
  nameWithType: "ServiceBusAdministrationClient.updateRuleWithResponse(String topicName, String subscriptionName, RuleProperties rule, Context context)"
  summary: "Updates a rule with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleProperties\"></xref>."
  parameters:
  - description: "The topic name under which the rule is updated."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the subscription for which the rule is updated."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Information about the rule to update. You must provide all the property values that are desired\n     on the updated entity. Any values not provided are set to the service default values."
    name: "rule"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<RuleProperties> updateRuleWithResponse(String topicName, String subscriptionName, RuleProperties rule, Context context)"
  desc: "Updates a rule with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRule(java.lang.String,java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get rule description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method."
  returns:
    description: "A Mono that returns the updated rule in addition to the HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscription(com.azure.messaging.servicebus.administration.models.SubscriptionProperties)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscription(SubscriptionProperties subscription)"
  name: "updateSubscription(SubscriptionProperties subscription)"
  nameWithType: "ServiceBusAdministrationClient.updateSubscription(SubscriptionProperties subscription)"
  summary: "Updates a subscription with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref>."
  parameters:
  - description: "Information about the subscription to update. You must provide all the property values\n     that are desired on the updated entity. Any values not provided are set to the service default values."
    name: "subscription"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubscriptionProperties updateSubscription(SubscriptionProperties subscription)"
  desc: "Updates a subscription with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscription(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get subscription description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method.\n\nThere are a subset of properties that can be updated. More information can be found in the links below. They are:\n\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setDefaultMessageTimeToLive(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultMessageTimeToLive\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setLockDuration(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LockDuration\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setMaxDeliveryCount(int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MaxDeliveryCount\"></xref>"
  returns:
    description: "Updated subscription in addition to the HTTP response."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscriptionWithResponse(com.azure.messaging.servicebus.administration.models.SubscriptionProperties,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscriptionWithResponse(SubscriptionProperties subscription, Context context)"
  name: "updateSubscriptionWithResponse(SubscriptionProperties subscription, Context context)"
  nameWithType: "ServiceBusAdministrationClient.updateSubscriptionWithResponse(SubscriptionProperties subscription, Context context)"
  summary: "Updates a subscription with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref>."
  parameters:
  - description: "Information about the subscription to update. You must provide all the property values\n     that are desired on the updated entity. Any values not provided are set to the service default values."
    name: "subscription"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SubscriptionProperties> updateSubscriptionWithResponse(SubscriptionProperties subscription, Context context)"
  desc: "Updates a subscription with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscription(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get subscription description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method.\n\nThere are a subset of properties that can be updated. More information can be found in the links below. They are:\n\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setDefaultMessageTimeToLive(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultMessageTimeToLive\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setLockDuration(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LockDuration\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setMaxDeliveryCount(int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MaxDeliveryCount\"></xref>"
  returns:
    description: "Updated subscription in addition to the HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopic(com.azure.messaging.servicebus.administration.models.TopicProperties)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopic(TopicProperties topic)"
  name: "updateTopic(TopicProperties topic)"
  nameWithType: "ServiceBusAdministrationClient.updateTopic(TopicProperties topic)"
  summary: "Updates a topic with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicProperties\"></xref>."
  parameters:
  - description: "Information about the topic to update. You must provide all the property values that are desired\n     on the updated entity. Any values not provided are set to the service default values."
    name: "topic"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicProperties updateTopic(TopicProperties topic)"
  desc: "Updates a topic with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopic(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get topic description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method.\n\nThere are a subset of properties that can be updated. More information can be found in the links below. They are:\n\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties.setDefaultMessageTimeToLive(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultMessageTimeToLive\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DuplicateDetectionHistoryTimeWindow\"></xref>"
  returns:
    description: "The updated topic."
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopicWithResponse(com.azure.messaging.servicebus.administration.models.TopicProperties,com.azure.core.util.Context)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopicWithResponse(TopicProperties topic, Context context)"
  name: "updateTopicWithResponse(TopicProperties topic, Context context)"
  nameWithType: "ServiceBusAdministrationClient.updateTopicWithResponse(TopicProperties topic, Context context)"
  summary: "Updates a topic with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicProperties\"></xref>."
  parameters:
  - description: "Information about the topic to update. You must provide all the property values that are desired\n     on the updated entity. Any values not provided are set to the service default values."
    name: "topic"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<TopicProperties> updateTopicWithResponse(TopicProperties topic, Context context)"
  desc: "Updates a topic with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopic(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get topic description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method.\n\nThere are a subset of properties that can be updated. More information can be found in the links below. They are:\n\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties.setDefaultMessageTimeToLive(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultMessageTimeToLive\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DuplicateDetectionHistoryTimeWindow\"></xref>"
  returns:
    description: "The updated topic with its HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "A **synchronous** client for managing a Service Bus namespace.\n\n**Create a queue**\n\n```java\nQueueProperties queue = client.createQueue(\"my-new-queue\");\n System.out.printf(\"Queue created. Name: %s. Lock Duration: %s.%n\",\n     queue.getName(), queue.getLockDuration());\n```\n\n**Edit an existing subscription**\n\n```java\n// To update the subscription we have to:\n // 1. Get the subscription info from the service.\n // 2. Update the SubscriptionProperties we want to change.\n // 3. Call the updateSubscription() with the updated object.\n SubscriptionProperties subscription = client.getSubscription(\"my-topic\", \"my-subscription\");\n\n System.out.println(\"Original delivery count: \" + subscription.getMaxDeliveryCount());\n\n // Updating it to a new value.\n subscription.setMaxDeliveryCount(5);\n\n // Persisting the updates to the subscription object.\n SubscriptionProperties updated = client.updateSubscription(subscription);\n\n System.out.printf(\"Subscription updated. Name: %s. Delivery count: %s.%n\",\n     updated.getSubscriptionName(), updated.getMaxDeliveryCount());\n```\n\n**List all queues**\n\n```java\nclient.listQueues().forEach(queue -> {\n     System.out.printf(\"Queue [%s]. Lock Duration: %s.%n\",\n         queue.getName(), queue.getLockDuration());\n });\n```"
metadata: {}
package: "com.azure.messaging.servicebus.administration"
artifact: com.azure:azure-messaging-servicebus:7.10.1
