### YamlMime:JavaMember
uid: "com.azure.data.tables.TableClient.getAccessPoliciesWithResponse*"
fullName: "com.azure.data.tables.TableClient.getAccessPoliciesWithResponse"
name: "getAccessPoliciesWithResponse"
nameWithType: "TableClient.getAccessPoliciesWithResponse"
members:
- uid: "com.azure.data.tables.TableClient.getAccessPoliciesWithResponse(java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.data.tables.TableClient.getAccessPoliciesWithResponse(Duration timeout, Context context)"
  name: "getAccessPoliciesWithResponse(Duration timeout, Context context)"
  nameWithType: "TableClient.getAccessPoliciesWithResponse(Duration timeout, Context context)"
  summary: "Retrieves details about any stored <xref uid=\"com.azure.data.tables.models.TableAccessPolicies\" data-throw-if-not-resolved=\"false\" data-raw-source=\"access policies\"></xref> specified on the table that may be used with Shared Access Signatures.\n\nThis operation is only supported on Azure Storage endpoints.\n\n**Code Samples**\n\nGets a table's <xref uid=\"com.azure.data.tables.models.TableAccessPolicies\" data-throw-if-not-resolved=\"false\" data-raw-source=\"access policies\"></xref>. Prints out the details of the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref> and the retrieved <xref uid=\"com.azure.data.tables.models.TableAccessPolicies\" data-throw-if-not-resolved=\"false\" data-raw-source=\"access policies\"></xref>.\n\n```java\nList<String> propertiesToSelect = new ArrayList<>();\n propertiesToSelect.add(\"name\");\n propertiesToSelect.add(\"lastname\");\n propertiesToSelect.add(\"age\");\n\n Response<TableAccessPolicies> response = tableClient.getAccessPoliciesWithResponse(Duration.ofSeconds(5),\n     new Context(\"key1\", \"value1\"));\n\n System.out.printf(\"Response successful with status code: %d. Retrieved table access policies with the following\"\n     + \" IDs:\", response.getStatusCode());\n\n response.getValue().getIdentifiers().forEach(signedIdentifier ->\n     System.out.printf(\"%n%s\", signedIdentifier.getId()));\n```"
  parameters:
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> that is passed through the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP pipeline\"></xref> during\n the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<TableAccessPolicies> getAccessPoliciesWithResponse(Duration timeout, Context context)"
  returns:
    description: "An <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref> containing the table's <xref uid=\"com.azure.data.tables.models.TableAccessPolicies\" data-throw-if-not-resolved=\"false\" data-raw-source=\"access policies\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.models.TableAccessPolicies?alt=com.azure.data.tables.models.TableAccessPolicies&text=TableAccessPolicies\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.data.tables"
artifact: com.azure:azure-data-tables:12.2.1
