### YamlMime:JavaMember
nameWithType: RegistryManager.createFromConnectionString
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String connectionString)
  name: createFromConnectionString(String connectionString)
  nameWithType: RegistryManager.createFromConnectionString(String connectionString)
  parameters:
  - description: <p>The iot hub connection string </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is never thrown. </p>
  returns:
    description: <p>The instance of RegistryManager </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.RegistryManager?alt=com.microsoft.azure.sdk.iot.service.RegistryManager&text=RegistryManager" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Static constructor to create instance from connection string</p>

    <p>

      <xrefsect id="deprecated_1_deprecated000104">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>because this method declares a thrown IOException even though it never throws an IOException. Users are recommended to use <xref uid="com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(String)" data-throw-if-not-resolved="false" data-raw-source="RegistryManager(String)"></xref> instead since it does not declare this exception even though it constructs the same RegistryManager. </p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax: public static RegistryManager createFromConnectionString(String connectionString)
  uid: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String)
- fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String connectionString, RegistryManagerOptions options)
  name: createFromConnectionString(String connectionString, RegistryManagerOptions options)
  nameWithType: RegistryManager.createFromConnectionString(String connectionString, RegistryManagerOptions options)
  parameters:
  - description: <p>The iot hub connection string </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The connection options to use when connecting to the service. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.RegistryManagerOptions?alt=com.microsoft.azure.sdk.iot.service.RegistryManagerOptions&text=RegistryManagerOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is never thrown. </p>
  returns:
    description: <p>The instance of RegistryManager </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.RegistryManager?alt=com.microsoft.azure.sdk.iot.service.RegistryManager&text=RegistryManager" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Static constructor to create instance from connection string</p>

    <p>

      <xrefsect id="deprecated_1_deprecated000105">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>because this method declares a thrown IOException even though it never throws an IOException. Users are recommended to use <xref uid="com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager(String,RegistryManagerOptions)" data-throw-if-not-resolved="false" data-raw-source="RegistryManager(String, RegistryManagerOptions)"></xref> instead since it does not declare this exception even though it constructs the same RegistryManager. </p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax: public static RegistryManager createFromConnectionString(String connectionString, RegistryManagerOptions options)
  uid: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String,RegistryManagerOptions)
uid: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString*
fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString
name: createFromConnectionString(String connectionString)
package: com.microsoft.azure.sdk.iot.service
metadata: {}
