### YamlMime:ManagedReference
items:
- uid: system.fabric._application_metric_description
  id: _application_metric_description
  parent: system.fabric
  children:
  - system.fabric._application_metric_description.ApplicationMetricDescription()
  - system.fabric._application_metric_description.getMaximumNodeCapacity()
  - system.fabric._application_metric_description.getName()
  - system.fabric._application_metric_description.getNodeReservationCapacity()
  - system.fabric._application_metric_description.getTotalApplicationCapacity()
  - system.fabric._application_metric_description.setMaximumNodeCapacity(long)
  - system.fabric._application_metric_description.setName(String)
  - system.fabric._application_metric_description.setNodeReservationCapacity(long)
  - system.fabric._application_metric_description.setTotalApplicationCapacity(long)
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: ApplicationMetricDescription
  nameWithType: ApplicationMetricDescription
  fullName: system.fabric.ApplicationMetricDescription
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 8
  package: system.fabric
  summary: <p>Specifies the application capacity for one metric. <xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref><xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref></p>
  syntax: &o1
    content: public class ApplicationMetricDescription
  inheritance:
  - java.lang.Object
- uid: system.fabric._application_metric_description.ApplicationMetricDescription()
  id: ApplicationMetricDescription()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: ApplicationMetricDescription()
  nameWithType: ApplicationMetricDescription.ApplicationMetricDescription()
  fullName: system.fabric.ApplicationMetricDescription.ApplicationMetricDescription()
  overload: system.fabric._application_metric_description.ApplicationMetricDescription*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 18
  package: system.fabric
  syntax:
    content: public ApplicationMetricDescription()
- uid: system.fabric._application_metric_description.getMaximumNodeCapacity()
  id: getMaximumNodeCapacity()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: getMaximumNodeCapacity()
  nameWithType: ApplicationMetricDescription.getMaximumNodeCapacity()
  fullName: long system.fabric.ApplicationMetricDescription.getMaximumNodeCapacity()
  overload: system.fabric._application_metric_description.getMaximumNodeCapacity*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 116
  package: system.fabric
  summary: >-
    <p>Gets the maximum node capacity for Service Fabric application.</p>

    <p>

    When creating a new application with application capacity defined, the product of <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> and this value must always be smaller than or equal to <xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>. </p>

    <p>When updating existing application with application capacity, the product of <xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref> and this value must always be smaller than or equal to <xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>. </p>
  syntax: &o2
    content: public long getMaximumNodeCapacity()
    return:
      type: 0364520f
      description: <p>Specifies the Maximum Load for an instance of this Application on a single Node. Even if Capacity of the node is greater than this value, Service Fabric will limit the total load of services within the Application on each node to this value. If set to zero, capacity for this metric is unlimited on each node. </p>
- uid: system.fabric._application_metric_description.getName()
  id: getName()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: getName()
  nameWithType: ApplicationMetricDescription.getName()
  fullName: String system.fabric.ApplicationMetricDescription.getName()
  overload: system.fabric._application_metric_description.getName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 41
  package: system.fabric
  summary: >-
    <p>Gets the name of the metric.</p>

    <p></p>
  syntax:
    content: public String getName()
    return:
      type: "26831127"
      description: <p>The name of the metric. </p>
- uid: system.fabric._application_metric_description.getNodeReservationCapacity()
  id: getNodeReservationCapacity()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: getNodeReservationCapacity()
  nameWithType: ApplicationMetricDescription.getNodeReservationCapacity()
  fullName: long system.fabric.ApplicationMetricDescription.getNodeReservationCapacity()
  overload: system.fabric._application_metric_description.getNodeReservationCapacity*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 72
  package: system.fabric
  summary: >-
    <p>Gets the node reservation capacity for Service Fabric application.</p>

    <p>

    When setting application capacity (<xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref>) or when updating application capacity (( <xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref>) this value must be smaller than or equal to <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref> for each metric. </p>
  syntax:
    content: public long getNodeReservationCapacity()
    return:
      type: 0364520f
      description: <p>Specifies the amount of Metric Load which is reserved on nodes which have instances of this Application. If <xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> is specified, then the product of these values will be the Capacity reserved in the cluster for the Application. If set to zero, no capacity is reserved for this metric. </p>
- uid: system.fabric._application_metric_description.getTotalApplicationCapacity()
  id: getTotalApplicationCapacity()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: getTotalApplicationCapacity()
  nameWithType: ApplicationMetricDescription.getTotalApplicationCapacity()
  fullName: long system.fabric.ApplicationMetricDescription.getTotalApplicationCapacity()
  overload: system.fabric._application_metric_description.getTotalApplicationCapacity*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 164
  package: system.fabric
  summary: >-
    <p>Gets the total metric capacity for Service Fabric application.</p>

    <p>

    When creating a new application with application capacity defined, the product of <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> and <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref> must always be smaller than or equal to this value. </p>

    <p>When creating a new application with application capacity defined, the product of <xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref> and <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref> must always be smaller than or equal to this value. </p>
  syntax: &o3
    content: public long getTotalApplicationCapacity()
    return:
      type: 0364520f
      description: <p>Specifies the total metric capacity for this Application in the Cluster. Service Fabric will try to limit the sum of loads of services within the Application to this value. </p>
- uid: system.fabric._application_metric_description.setMaximumNodeCapacity(long)
  id: setMaximumNodeCapacity(long)
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: setMaximumNodeCapacity(long maximumNodeCapacity)
  nameWithType: ApplicationMetricDescription.setMaximumNodeCapacity(long maximumNodeCapacity)
  fullName: void system.fabric.ApplicationMetricDescription.setMaximumNodeCapacity(long maximumNodeCapacity)
  overload: system.fabric._application_metric_description.setMaximumNodeCapacity*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 141
  package: system.fabric
  summary: >-
    <p>Sets the maximum node capacity for Service Fabric application.</p>

    <p>

    When creating a new application with application capacity defined, the product of <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> and this value must always be smaller than or equal to <xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>. </p>

    <p>When updating existing application with application capacity, the product of <xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref> and this value must always be smaller than or equal to <xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>. </p>
  syntax:
    content: public void setMaximumNodeCapacity(long maximumNodeCapacity)
    parameters:
    - id: maximumNodeCapacity
      type: 0364520f
      description: <p>Specifies the Maximum Load for an instance of this Application on a single Node. Even if Capacity of the node is greater than this value, Service Fabric will limit the total load of services within the Application on each node to this value. If set to zero, capacity for this metric is unlimited on each node. </p>
- uid: system.fabric._application_metric_description.setName(String)
  id: setName(String)
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: setName(String name)
  nameWithType: ApplicationMetricDescription.setName(String name)
  fullName: void system.fabric.ApplicationMetricDescription.setName(String name)
  overload: system.fabric._application_metric_description.setName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 51
  package: system.fabric
  summary: >-
    <p>Sets the name of the metric.</p>

    <p></p>
  syntax:
    content: public void setName(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>The name of the metric. </p>
- uid: system.fabric._application_metric_description.setNodeReservationCapacity(long)
  id: setNodeReservationCapacity(long)
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: setNodeReservationCapacity(long nodeReservationCapacity)
  nameWithType: ApplicationMetricDescription.setNodeReservationCapacity(long nodeReservationCapacity)
  fullName: void system.fabric.ApplicationMetricDescription.setNodeReservationCapacity(long nodeReservationCapacity)
  overload: system.fabric._application_metric_description.setNodeReservationCapacity*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 92
  package: system.fabric
  summary: >-
    <p>Gets the node reservation capacity for Service Fabric application.</p>

    <p>

    When setting application capacity (<xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref>) or when updating application capacity (( <xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref>) this value must be smaller than or equal to <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref> for each metric. </p>
  syntax:
    content: public void setNodeReservationCapacity(long nodeReservationCapacity)
    parameters:
    - id: nodeReservationCapacity
      type: 0364520f
      description: <p>Specifies the amount of Metric Load which is reserved on nodes which have instances of this Application. If <xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> is specified, then the product of these values will be the Capacity reserved in the cluster for the Application. If set to zero, no capacity is reserved for this metric. </p>
- uid: system.fabric._application_metric_description.setTotalApplicationCapacity(long)
  id: setTotalApplicationCapacity(long)
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: setTotalApplicationCapacity(long totalApplicationCapacity)
  nameWithType: ApplicationMetricDescription.setTotalApplicationCapacity(long totalApplicationCapacity)
  fullName: void system.fabric.ApplicationMetricDescription.setTotalApplicationCapacity(long totalApplicationCapacity)
  overload: system.fabric._application_metric_description.setTotalApplicationCapacity*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 188
  package: system.fabric
  summary: >-
    <p>Sets the total metric capacity for Service Fabric application.</p>

    <p>

    When creating a new application with application capacity defined, the product of <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> and <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref> must always be smaller than or equal to this value. </p>

    <p>When creating a new application with application capacity defined, the product of <xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref> and <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref> must always be smaller than or equal to this value. </p>
  syntax:
    content: public void setTotalApplicationCapacity(long totalApplicationCapacity)
    parameters:
    - id: totalApplicationCapacity
      type: 0364520f
      description: <p>Specifies the total metric capacity for this Application in the Cluster. Service Fabric will try to limit the sum of loads of services within the Application to this value. </p>
references:
- uid: system.fabric._application_metric_description.ApplicationMetricDescription*
  name: ApplicationMetricDescription
  nameWithType: ApplicationMetricDescription.ApplicationMetricDescription
  fullName: system.fabric.ApplicationMetricDescription.ApplicationMetricDescription
  package: system.fabric
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: system.fabric._application_metric_description.getName*
  name: getName
  nameWithType: ApplicationMetricDescription.getName
  fullName: String system.fabric.ApplicationMetricDescription.getName
  package: system.fabric
- uid: system.fabric._application_metric_description.setName*
  name: setName
  nameWithType: ApplicationMetricDescription.setName
  fullName: void system.fabric.ApplicationMetricDescription.setName
  package: system.fabric
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric._application_metric_description.getNodeReservationCapacity*
  name: getNodeReservationCapacity
  nameWithType: ApplicationMetricDescription.getNodeReservationCapacity
  fullName: long system.fabric.ApplicationMetricDescription.getNodeReservationCapacity
  package: system.fabric
- uid: system.fabric._application_metric_description.setNodeReservationCapacity*
  name: setNodeReservationCapacity
  nameWithType: ApplicationMetricDescription.setNodeReservationCapacity
  fullName: void system.fabric.ApplicationMetricDescription.setNodeReservationCapacity
  package: system.fabric
- uid: system.fabric._application_metric_description.getMaximumNodeCapacity*
  name: getMaximumNodeCapacity
  nameWithType: ApplicationMetricDescription.getMaximumNodeCapacity
  fullName: long system.fabric.ApplicationMetricDescription.getMaximumNodeCapacity
  package: system.fabric
- uid: system.fabric._application_metric_description.setMaximumNodeCapacity*
  name: setMaximumNodeCapacity
  nameWithType: ApplicationMetricDescription.setMaximumNodeCapacity
  fullName: void system.fabric.ApplicationMetricDescription.setMaximumNodeCapacity
  package: system.fabric
- uid: system.fabric._application_metric_description.getTotalApplicationCapacity*
  name: getTotalApplicationCapacity
  nameWithType: ApplicationMetricDescription.getTotalApplicationCapacity
  fullName: long system.fabric.ApplicationMetricDescription.getTotalApplicationCapacity
  package: system.fabric
- uid: system.fabric._application_metric_description.setTotalApplicationCapacity*
  name: setTotalApplicationCapacity
  nameWithType: ApplicationMetricDescription.setTotalApplicationCapacity
  fullName: void system.fabric.ApplicationMetricDescription.setTotalApplicationCapacity
  package: system.fabric
- uid: system.fabric._application_metric_description
  parent: system.fabric
  href: system.fabric._application_metric_description.yml
  name: ApplicationMetricDescription
  nameWithType: ApplicationMetricDescription
  fullName: system.fabric.ApplicationMetricDescription
  type: Class
  summary: <p>Specifies the application capacity for one metric. <xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref><xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref></p>
  syntax: *o1
- uid: system.fabric._application_description.getMinimumNodes()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  name: getMinimumNodes()
  nameWithType: ApplicationDescription.getMinimumNodes()
  fullName: long system.fabric.ApplicationDescription.getMinimumNodes()
  type: Method
  summary: >-
    <p>Gets the minimum number of nodes where Service Fabric will reserve capacity for this application.</p>

    <p></p>
  syntax:
    content: public long getMinimumNodes()
    return:
      type: 0364520f
      description: <p>Number of nodes where Service Fabric will reserve Capacity in the cluster for this Application to be placed. Note that this does not mean that the Application is guaranteed to have replicas on all those nodes. If this parameter is set to zero, no capacity will be reserved. If this parameters is greater than <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> an <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> will be thrown when <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref> is called. </p>
- uid: system.fabric._application_description
  parent: system.fabric
  href: system.fabric._application_description.yml
  name: ApplicationDescription
  nameWithType: ApplicationDescription
  fullName: system.fabric.ApplicationDescription
  type: Class
  summary: <p>Describes an application to be created by using <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(system.fabric.ApplicationDescription)</xref></p>
  syntax:
    content: public class ApplicationDescription
- uid: system.fabric._application_update_description
  parent: system.fabric
  href: system.fabric._application_update_description.yml
  name: ApplicationUpdateDescription
  nameWithType: ApplicationUpdateDescription
  fullName: system.fabric.ApplicationUpdateDescription
  type: Class
  summary: <p>Describes an update of application capacity that will be updated using <xref uid="system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#updateApplicationAsync(ApplicationUpdateDescription)</xref></p>
  syntax:
    content: public class ApplicationUpdateDescription
- uid: system.fabric._application_metric_description.getMaximumNodeCapacity()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  name: getMaximumNodeCapacity()
  nameWithType: ApplicationMetricDescription.getMaximumNodeCapacity()
  fullName: long system.fabric.ApplicationMetricDescription.getMaximumNodeCapacity()
  type: Method
  summary: >-
    <p>Gets the maximum node capacity for Service Fabric application.</p>

    <p>

    When creating a new application with application capacity defined, the product of <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> and this value must always be smaller than or equal to <xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>. </p>

    <p>When updating existing application with application capacity, the product of <xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref> and this value must always be smaller than or equal to <xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>. </p>
  syntax: *o2
- uid: system.fabric._application_description.getMaximumNodes()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  name: getMaximumNodes()
  nameWithType: ApplicationDescription.getMaximumNodes()
  fullName: long system.fabric.ApplicationDescription.getMaximumNodes()
  type: Method
  summary: >-
    <p>Gets the maximum number of nodes where this application can be instantiated.</p>

    <p></p>
  syntax:
    content: public long getMaximumNodes()
    return:
      type: 0364520f
      description: <p>Number of nodes this application is allowed to span. Default value is zero. If it is zero, Application can span any number of nodes in the cluster. If this parameter is smaller than <xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> an <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> will be thrown when <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref> is called. </p>
- uid: system.fabric._application_metric_description.getTotalApplicationCapacity()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  name: getTotalApplicationCapacity()
  nameWithType: ApplicationMetricDescription.getTotalApplicationCapacity()
  fullName: long system.fabric.ApplicationMetricDescription.getTotalApplicationCapacity()
  type: Method
  summary: >-
    <p>Gets the total metric capacity for Service Fabric application.</p>

    <p>

    When creating a new application with application capacity defined, the product of <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> and <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref> must always be smaller than or equal to this value. </p>

    <p>When creating a new application with application capacity defined, the product of <xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref> and <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref> must always be smaller than or equal to this value. </p>
  syntax: *o3
- uid: system.fabric._application_update_description.getMaximumNodes()
  parent: system.fabric._application_update_description
  href: system.fabric._application_update_description.yml
  name: getMaximumNodes()
  nameWithType: ApplicationUpdateDescription.getMaximumNodes()
  fullName: Long system.fabric.ApplicationUpdateDescription.getMaximumNodes()
  type: Method
  summary: >-
    <p>Gets the maximum number of nodes where this application can be instantiated.</p>

    <p>

    If it is zero, Application can be placed on any number of nodes in the cluster. </p>

    <p>If this parameter is not specified when updating an application, then the maximum number of nodes remains unchanged. </p>

    <p>If this parameter is smaller than <xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> an <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> will be thrown when <xref uid="system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#updateApplicationAsync(ApplicationUpdateDescription)</xref> is called. </p>
  syntax:
    content: public Long getMaximumNodes()
    return:
      type: 34f09483
      description: <p>Number of nodes this application is allowed to span. Default value is zero. </p>
- uid: system.fabric._pin_collection
  parent: system.fabric
  href: system.fabric._pin_collection.yml
  name: PinCollection
  nameWithType: PinCollection
  fullName: system.fabric.PinCollection
  type: Class
  syntax:
    content: public class PinCollection
