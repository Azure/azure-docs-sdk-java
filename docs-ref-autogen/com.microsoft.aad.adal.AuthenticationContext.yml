### YamlMime:ManagedReference
items:
- uid: com.microsoft.aad.adal.AuthenticationContext
  id: AuthenticationContext
  parent: com.microsoft.aad.adal
  children:
  - com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity,String,String,@Nullable String,@Nullable PromptBehavior,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity,String,String,@Nullable String,@Nullable PromptBehavior,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity,String,String,@Nullable String,@Nullable String,@Nullable PromptBehavior,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity,String,String,@Nullable String,@Nullable String,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity,String,String,@Nullable String,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireToken(final Activity,final String,final String,@Nullable String,@Nullable final String,@Nullable final PromptBehavior,@Nullable String,@Nullable final String,final AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireToken(final IWindowComponent,final String,final String,@Nullable String,@Nullable final String,@Nullable final PromptBehavior,@Nullable String,@Nullable final String,final AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireToken(final String,final String,@Nullable String,@Nullable final String,@Nullable final PromptBehavior,@Nullable String,@Nullable final String,final AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireToken(IWindowComponent,String,String,@Nullable String,@Nullable String,@Nullable PromptBehavior,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireToken(String,String,@Nullable String,@Nullable String,@Nullable PromptBehavior,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireTokenByRefreshToken(String,String,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireTokenByRefreshToken(String,String,String,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilent(String,String,String,final AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String,String,String,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String,String,String,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String,String,String,boolean,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsyncWithAssertion(@NonNull final String,@NonNull final String,final String,final String,final String,AuthenticationCallback<AuthenticationResult>)
  - com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync(String,String,String)
  - com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync(String,String,String,@Nullable String)
  - com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync(String,String,String,boolean)
  - com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSyncWithAssertion(@NonNull final String,@NonNull final String,@NonNull final String,@NonNull final String,@NonNull final String)
  - com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context,@NonNull final String,@Nullable final ITokenCacheStore)
  - com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context,@NonNull final String,final boolean)
  - com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context,@NonNull final String,final boolean,@Nullable final ITokenCacheStore)
  - com.microsoft.aad.adal.AuthenticationContext.cancelAuthenticationActivity(final int)
  - com.microsoft.aad.adal.AuthenticationContext.getAuthority()
  - com.microsoft.aad.adal.AuthenticationContext.getBrokerUser()
  - com.microsoft.aad.adal.AuthenticationContext.getBrokerUsers()
  - com.microsoft.aad.adal.AuthenticationContext.getCache()
  - com.microsoft.aad.adal.AuthenticationContext.getClientCapabilites()
  - com.microsoft.aad.adal.AuthenticationContext.getExtendedLifetimeEnabled()
  - com.microsoft.aad.adal.AuthenticationContext.getRedirectUriForBroker()
  - com.microsoft.aad.adal.AuthenticationContext.getRequestCorrelationId()
  - com.microsoft.aad.adal.AuthenticationContext.getValidateAuthority()
  - com.microsoft.aad.adal.AuthenticationContext.getVersionName()
  - com.microsoft.aad.adal.AuthenticationContext.mergeClaimsWithClientCapabilities(final String,final List<String>)
  - com.microsoft.aad.adal.AuthenticationContext.onActivityResult(final int,final int,final Intent)
  - com.microsoft.aad.adal.AuthenticationContext.setClientCapabilites(List<String>)
  - com.microsoft.aad.adal.AuthenticationContext.setExtendedLifetimeEnabled(final boolean)
  - com.microsoft.aad.adal.AuthenticationContext.setRequestCorrelationId(final UUID)
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: AuthenticationContext
  nameWithType: AuthenticationContext
  fullName: com.microsoft.aad.adal.AuthenticationContext
  type: Class
  source:
    remote: &o0
      path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-android
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 68
  package: com.microsoft.aad.adal
  summary: "<p>ADAL context to get access token, refresh token, and lookup from cache. </p>"
  syntax:
    content: public class AuthenticationContext
  inheritance:
  - java.lang.Object
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity,String,String,@Nullable String,@Nullable PromptBehavior,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  id: acquireToken(Activity,String,String,@Nullable String,@Nullable PromptBehavior,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireToken*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 409
  package: com.microsoft.aad.adal
  summary: "<p>acquireToken will start interactive flow if needed. It checks the cache to return existing result if not expired. It tries to use refresh token if available. If it fails to get token with refresh token, behavior will depend on options. If promptbehavior is AUTO, it will remove this refresh token from cache and fall back on the UI if activitycontext is not null. Default is AUTO.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: activity
      type: ff2dfcec
      description: <p>Calling activity </p>
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier. </p>
    - id: redirectUri
      type: 8766ae01
      description: <p>Optional. It will use packagename and provided suffix for this. </p>
    - id: prompt
      type: fef954a7com.microsoft.aad.adal.PromptBehavior
      description: <p>Optional. added as query parameter to authorization url </p>
    - id: extraQueryParameters
      type: 8766ae01
      description: <p>Optional. added to authorization url </p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity,String,String,@Nullable String,@Nullable PromptBehavior,AuthenticationCallback<AuthenticationResult>)
  id: acquireToken(Activity,String,String,@Nullable String,@Nullable PromptBehavior,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable PromptBehavior prompt, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable PromptBehavior prompt, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable PromptBehavior prompt, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireToken*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 383
  package: com.microsoft.aad.adal
  summary: "<p>acquireToken will start interactive flow if needed. It checks the cache to return existing result if not expired. It tries to use refresh token if available. If it fails to get token with refresh token, behavior will depend on options. If <xref uid=\"com.microsoft.aad.adal.PromptBehavior\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PromptBehavior\"></xref> is AUTO, it will remove this refresh token from cache and fall back on the UI. Default is AUTO. if <xref uid=\"com.microsoft.aad.adal.PromptBehavior\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PromptBehavior\"></xref> is Always, it will display prompt screen.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable PromptBehavior prompt, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: activity
      type: ff2dfcec
      description: <p>Calling activity </p>
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier. </p>
    - id: redirectUri
      type: 8766ae01
      description: <p>Optional. It will use packagename and provided suffix for this. </p>
    - id: prompt
      type: fef954a7com.microsoft.aad.adal.PromptBehavior
      description: <p>Optional. <xref uid="com.microsoft.aad.adal.PromptBehavior" data-throw-if-not-resolved="false" data-raw-source="PromptBehavior"></xref> added as query parameter to authorization url </p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity,String,String,@Nullable String,@Nullable String,@Nullable PromptBehavior,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  id: acquireToken(Activity,String,String,@Nullable String,@Nullable String,@Nullable PromptBehavior,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireToken*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 436
  package: com.microsoft.aad.adal
  summary: "<p>acquireToken will start interactive flow if needed. It checks the cache to return existing result if not expired. It tries to use refresh token if available. If it fails to get token with refresh token, behavior will depend on options. If promptbehavior is AUTO, it will remove this refresh token from cache and fall back on the UI if activitycontext is not null. Default is AUTO.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: activity
      type: ff2dfcec
      description: <p>Calling activity </p>
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier. </p>
    - id: redirectUri
      type: 8766ae01
      description: <p>Optional. It will use packagename and provided suffix for this. </p>
    - id: loginHint
      type: 8766ae01
      description: <p>Optional if validateAuthority == null. It is used for cache and as a loginhint at authentication. </p>
    - id: prompt
      type: fef954a7com.microsoft.aad.adal.PromptBehavior
      description: <p>Optional. added as query parameter to authorization url </p>
    - id: extraQueryParameters
      type: 8766ae01
      description: <p>Optional. added to authorization url </p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity,String,String,@Nullable String,@Nullable String,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  id: acquireToken(Activity,String,String,@Nullable String,@Nullable String,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireToken*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 357
  package: com.microsoft.aad.adal
  summary: "<p>acquireToken will start interactive flow if needed. It checks the cache to return existing result if not expired. It tries to use the refresh token if available. If it fails to get token with refresh token, it will remove this refresh token from cache and fall back on the UI.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: activity
      type: ff2dfcec
      description: <p>Calling activity </p>
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier </p>
    - id: redirectUri
      type: 8766ae01
      description: <p>Optional. It will use packagename and provided suffix for this. </p>
    - id: loginHint
      type: 8766ae01
      description: <p>Optional if validateAuthority == null. This parameter will be used to pre-populate the username field in the authentication form. Please note that the end user can still edit the username field and authenticate as a different user. </p>
    - id: extraQueryParameters
      type: 8766ae01
      description: <p>Optional. This parameter will be appended as is to the query string in the HTTP authentication request to the authority. The parameter can be null. </p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity,String,String,@Nullable String,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  id: acquireToken(Activity,String,String,@Nullable String,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireToken*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 328
  package: com.microsoft.aad.adal
  summary: "<p>acquireToken will start interactive flow if needed. It checks the cache to return existing result if not expired. It tries to use refresh token if available. If it fails to get token with refresh token, it will remove this refresh token from cache and start authentication.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(Activity activity, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: activity
      type: ff2dfcec
      description: <p>required to launch authentication activity. </p>
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier </p>
    - id: redirectUri
      type: 8766ae01
      description: <p>Optional. It will use package name info if not provided. </p>
    - id: loginHint
      type: 8766ae01
      description: <p>login hint (optional if validateAuthority == false) </p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireToken(final Activity,final String,final String,@Nullable String,@Nullable final String,@Nullable final PromptBehavior,@Nullable String,@Nullable final String,final AuthenticationCallback<AuthenticationResult>)
  id: acquireToken(final Activity,final String,final String,@Nullable String,@Nullable final String,@Nullable final PromptBehavior,@Nullable String,@Nullable final String,final AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireToken(final Activity activity, final String resource, final String clientId, @Nullable String redirectUri, @Nullable final String loginHint, @Nullable final PromptBehavior prompt, @Nullable String extraQueryParameters, @Nullable final String claims, final AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireToken(final Activity activity, final String resource, final String clientId, @Nullable String redirectUri, @Nullable final String loginHint, @Nullable final PromptBehavior prompt, @Nullable String extraQueryParameters, @Nullable final String claims, final AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireToken(final Activity activity, final String resource, final String clientId, @Nullable String redirectUri, @Nullable final String loginHint, @Nullable final PromptBehavior prompt, @Nullable String extraQueryParameters, @Nullable final String claims, final AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireToken*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 462
  package: com.microsoft.aad.adal
  summary: "<p>acquireToken will start an interactive auth flow to acquire new tokens with the requested claims. Bypasses token cache if promptbehavior is not AUTO or claims are passed.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(final Activity activity, final String resource, final String clientId, @Nullable String redirectUri, @Nullable final String loginHint, @Nullable final PromptBehavior prompt, @Nullable String extraQueryParameters, @Nullable final String claims, final AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: activity
      type: 09c91e7a
      description: <p>Calling activity </p>
    - id: resource
      type: 3d93591e
      description: <p>required resource identifier. </p>
    - id: clientId
      type: 3d93591e
      description: <p>required client identifier. </p>
    - id: redirectUri
      type: 8766ae01
      description: <p>Optional. It will use packagename and provided suffix for this. </p>
    - id: loginHint
      type: b868e8dd
      description: <p>Optional if validateAuthority == null. It is used for cache and as a loginhint at authentication. </p>
    - id: prompt
      type: 9a7d2fbdcom.microsoft.aad.adal.PromptBehavior
      description: <p>Optional. added as query parameter to authorization url </p>
    - id: extraQueryParameters
      type: 8766ae01
      description: <p>Optional. added to authorization url </p>
    - id: claims
      type: b868e8dd
      description: <p>Optional. The claims challenge returned from middle tier service, will be added as query string to authorize endpoint. </p>
    - id: callback
      type: 93de0ef9com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireToken(final IWindowComponent,final String,final String,@Nullable String,@Nullable final String,@Nullable final PromptBehavior,@Nullable String,@Nullable final String,final AuthenticationCallback<AuthenticationResult>)
  id: acquireToken(final IWindowComponent,final String,final String,@Nullable String,@Nullable final String,@Nullable final PromptBehavior,@Nullable String,@Nullable final String,final AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireToken(final IWindowComponent fragment, final String resource, final String clientId, @Nullable String redirectUri, @Nullable final String loginHint, @Nullable final PromptBehavior prompt, @Nullable String extraQueryParameters, @Nullable final String claims, final AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireToken(final IWindowComponent fragment, final String resource, final String clientId, @Nullable String redirectUri, @Nullable final String loginHint, @Nullable final PromptBehavior prompt, @Nullable String extraQueryParameters, @Nullable final String claims, final AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireToken(final IWindowComponent fragment, final String resource, final String clientId, @Nullable String redirectUri, @Nullable final String loginHint, @Nullable final PromptBehavior prompt, @Nullable String extraQueryParameters, @Nullable final String claims, final AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireToken*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 516
  package: com.microsoft.aad.adal
  summary: "<p>acquireToken will start an interactive auth flow to acquire new tokens with the requested claims. Bypasses token cache if promptbehavior is not AUTO or claims are passed.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(final IWindowComponent fragment, final String resource, final String clientId, @Nullable String redirectUri, @Nullable final String loginHint, @Nullable final PromptBehavior prompt, @Nullable String extraQueryParameters, @Nullable final String claims, final AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: fragment
      type: 93de0ef9com.microsoft.aad.adal.IWindowComponent
      description: <p>It accepts both type of fragments. </p>
    - id: resource
      type: 3d93591e
      description: <p>required resource identifier. </p>
    - id: clientId
      type: 3d93591e
      description: <p>required client identifier. </p>
    - id: redirectUri
      type: 8766ae01
      description: <p>Optional. It will use packagename and provided suffix for this. </p>
    - id: loginHint
      type: b868e8dd
      description: <p>Optional if validateAuthority == null. It is used for cache and as a loginhint at authentication. </p>
    - id: prompt
      type: 9a7d2fbdcom.microsoft.aad.adal.PromptBehavior
      description: <p>Optional. added as query parameter to authorization url </p>
    - id: extraQueryParameters
      type: 8766ae01
      description: <p>Optional. added to authorization url </p>
    - id: claims
      type: b868e8dd
      description: <p>Optional. The claims challenge returned from middle tier service, will be added as query string to authorize endpoint. </p>
    - id: callback
      type: 93de0ef9com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireToken(final String,final String,@Nullable String,@Nullable final String,@Nullable final PromptBehavior,@Nullable String,@Nullable final String,final AuthenticationCallback<AuthenticationResult>)
  id: acquireToken(final String,final String,@Nullable String,@Nullable final String,@Nullable final PromptBehavior,@Nullable String,@Nullable final String,final AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireToken(final String resource, final String clientId, @Nullable String redirectUri, @Nullable final String loginHint, @Nullable final PromptBehavior prompt, @Nullable String extraQueryParameters, @Nullable final String claims, final AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireToken(final String resource, final String clientId, @Nullable String redirectUri, @Nullable final String loginHint, @Nullable final PromptBehavior prompt, @Nullable String extraQueryParameters, @Nullable final String claims, final AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireToken(final String resource, final String clientId, @Nullable String redirectUri, @Nullable final String loginHint, @Nullable final PromptBehavior prompt, @Nullable String extraQueryParameters, @Nullable final String claims, final AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireToken*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 579
  package: com.microsoft.aad.adal
  summary: "<p>acquireToken will authorize an end user to call the specified resource. The access token returned from the STS will be sent to the <xref uid=\"com.microsoft.aad.adal.AuthenticationCallback\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthenticationCallback\"></xref> and can be used to call the specified protected resource. Bypasses token cache if </p>"
  syntax:
    content: public void acquireToken(final String resource, final String clientId, @Nullable String redirectUri, @Nullable final String loginHint, @Nullable final PromptBehavior prompt, @Nullable String extraQueryParameters, @Nullable final String claims, final AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: resource
      type: 3d93591e
      description: <p>required resource identifier. </p>
    - id: clientId
      type: 3d93591e
      description: <p>required client identifier. </p>
    - id: redirectUri
      type: 8766ae01
      description: <p>Optional. It will use packagename and provided suffix for this. </p>
    - id: loginHint
      type: b868e8dd
      description: <p>Optional if validateAuthority == null. It is used for cache and as a loginhint at authentication. </p>
    - id: prompt
      type: 9a7d2fbdcom.microsoft.aad.adal.PromptBehavior
      description: <p>is not AUTO or claims are passed. This overload uses an [AlertDialog](<a href="https://developer.android.com/guide/topics/ui/dialogs">https://developer.android.com/guide/topics/ui/dialogs</a>) when user interaction is required. This overload does not support any flow requiring a [token broker](<a href="https://github.com/AzureAD/azure-activedirectory-library-for-android/wiki/Broker">https://github.com/AzureAD/azure-activedirectory-library-for-android/wiki/Broker</a>).</p>
    - id: extraQueryParameters
      type: 8766ae01
      description: <p>Optional. added to authorization url </p>
    - id: claims
      type: b868e8dd
      description: <p>Optional. The claims challenge returned from middle tier service, will be added as query string to authorize endpoint. </p>
    - id: callback
      type: 93de0ef9com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireToken(IWindowComponent,String,String,@Nullable String,@Nullable String,@Nullable PromptBehavior,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  id: acquireToken(IWindowComponent,String,String,@Nullable String,@Nullable String,@Nullable PromptBehavior,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireToken(IWindowComponent fragment, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireToken(IWindowComponent fragment, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireToken(IWindowComponent fragment, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireToken*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 489
  package: com.microsoft.aad.adal
  summary: "<p>It will start interactive flow if needed. It checks the cache to return existing result if not expired. It tries to use refresh token if available. If it fails to get token with refresh token, behavior will depend on options. If promptbehavior is AUTO, it will remove this refresh token from cache and fall back on the UI. Default is AUTO.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(IWindowComponent fragment, String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: fragment
      type: com.microsoft.aad.adal.IWindowComponent
      description: <p>It accepts both type of fragments. </p>
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier. </p>
    - id: redirectUri
      type: 8766ae01
      description: <p>Optional. It will use packagename and provided suffix for this. </p>
    - id: loginHint
      type: 8766ae01
      description: <p>Optional if validateAuthority == null. It is used for cache and as a loginhint at authentication. </p>
    - id: prompt
      type: fef954a7com.microsoft.aad.adal.PromptBehavior
      description: <p>Optional. added as query parameter to authorization url </p>
    - id: extraQueryParameters
      type: 8766ae01
      description: <p>Optional. added to authorization url </p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireToken(String,String,@Nullable String,@Nullable String,@Nullable PromptBehavior,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  id: acquireToken(String,String,@Nullable String,@Nullable String,@Nullable PromptBehavior,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireToken(String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireToken(String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireToken(String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireToken*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 547
  package: com.microsoft.aad.adal
  summary: "<p>acquireToken will authorize an end user to call the specified resource. The access token returned from the STS will be sent to the <xref uid=\"com.microsoft.aad.adal.AuthenticationCallback\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthenticationCallback\"></xref> and can be used to call the specified protected resource. By default, acquireToken will attempt to fulfill the request silently, and perform an interactive login if needed or explicitly specified in the request. This overload uses an [AlertDialog](<a href=\"https://developer.android.com/guide/topics/ui/dialogs\">https://developer.android.com/guide/topics/ui/dialogs</a>) when user interaction is required. This overload does not support any flow requiring a [token broker](<a href=\"https://github.com/AzureAD/azure-activedirectory-library-for-android/wiki/Broker\">https://github.com/AzureAD/azure-activedirectory-library-for-android/wiki/Broker</a>).</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(String resource, String clientId, @Nullable String redirectUri, @Nullable String loginHint, @Nullable PromptBehavior prompt, @Nullable String extraQueryParameters, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier. </p>
    - id: redirectUri
      type: 8766ae01
      description: <p>Optional. It will use packagename and provided suffix for this. </p>
    - id: loginHint
      type: 8766ae01
      description: <p>Optional if validateAuthority == null. It is used for cache and as a loginhint at authentication. </p>
    - id: prompt
      type: fef954a7com.microsoft.aad.adal.PromptBehavior
      description: <p>Optional. added as query parameter to authorization url </p>
    - id: extraQueryParameters
      type: 8766ae01
      description: <p>Optional. added to authorization url </p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenByRefreshToken(String,String,AuthenticationCallback<AuthenticationResult>)
  id: acquireTokenByRefreshToken(String,String,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireTokenByRefreshToken(String refreshToken, String clientId, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireTokenByRefreshToken(String refreshToken, String clientId, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenByRefreshToken(String refreshToken, String clientId, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireTokenByRefreshToken*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 1056
  package: com.microsoft.aad.adal
  summary: "<p>acquire token using refresh token if cache is not used. Otherwise, use acquireToken to let the ADAL handle the cache lookup and refresh token request.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000002\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthenticationContext#acquireTokenByRefreshToken(String, String, AuthenticationCallback)\"></xref> will be removed from the next major release. We don't recommend developers taking dependency on refresh token, ADAL will handle the cache lookup, and refresh the RT if necessary. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public void acquireTokenByRefreshToken(String refreshToken, String clientId, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: refreshToken
      type: "26831127"
      description: <p>Required. </p>
    - id: clientId
      type: "26831127"
      description: <p>Required. </p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>Required </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenByRefreshToken(String,String,String,AuthenticationCallback<AuthenticationResult>)
  id: acquireTokenByRefreshToken(String,String,String,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireTokenByRefreshToken(String refreshToken, String clientId, String resource, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireTokenByRefreshToken(String refreshToken, String clientId, String resource, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenByRefreshToken(String refreshToken, String clientId, String resource, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireTokenByRefreshToken*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 1109
  package: com.microsoft.aad.adal
  summary: "<p>acquire token using refresh token if cache is not used. Otherwise, use acquireToken to let the ADAL handle the cache lookup and refresh token request.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000003\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>\r\n        <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthenticationContext#acquireTokenByRefreshToken(String, String, AuthenticationCallback)\"></xref> will be removed from the next major release. We don't recommend developers taking dependency on refresh token, ADAL will handle the cache lookup, and refresh the RT if necessary. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public void acquireTokenByRefreshToken(String refreshToken, String clientId, String resource, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: refreshToken
      type: "26831127"
      description: <p>Required. </p>
    - id: clientId
      type: "26831127"
      description: <p>Required. </p>
    - id: resource
      type: "26831127"
      description: <p>Required resource identifier. </p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>Required </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilent(String,String,String,final AuthenticationCallback<AuthenticationResult>)
  id: acquireTokenSilent(String,String,String,final AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireTokenSilent(String resource, String clientId, String userId, final AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireTokenSilent(String resource, String clientId, String userId, final AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilent(String resource, String clientId, String userId, final AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilent*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 841
  package: com.microsoft.aad.adal
  summary: "<p>The function will first look at the cache and automatically checks for the token expiration. Additionally, if no suitable access token is found in the cache, but refresh token is available, the function will use the refresh token automatically. This method will not show UI for the user. If prompt is needed, the method will return an exception</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000001\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Use the <xref uid=\"com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String,String,String,AuthenticationCallback&lt;AuthenticationResult&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"acquireTokenSilentAsync\"></xref> method. </p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public Future<AuthenticationResult> acquireTokenSilent(String resource, String clientId, String userId, final AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier. </p>
    - id: userId
      type: "26831127"
      description: <p>UserId obtained from <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref> inside <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref></p>
    - id: callback
      type: 93de0ef9com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
    return:
      type: 9b3030f6com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token,the Access Token's expiration time, Refresh token, and <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref>. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String,String,String,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  id: acquireTokenSilentAsync(String,String,String,@Nullable String,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireTokenSilentAsync(String resource, String clientId, String userId, @Nullable String claims, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireTokenSilentAsync(String resource, String clientId, String userId, @Nullable String claims, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String resource, String clientId, String userId, @Nullable String claims, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 964
  package: com.microsoft.aad.adal
  summary: "<p>The function will first look at the cache and automatically checks for the token expiration. Additionally, if no suitable access token is found in the cache, but refresh token is available, the function will use the refresh token automatically. This method will not show UI for the user. If prompt is needed, the method will return an exception</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(String resource, String clientId, String userId, @Nullable String claims, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier. </p>
    - id: userId
      type: "26831127"
      description: <p>UserId obtained from <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref> inside <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref></p>
    - id: claims
      type: 8766ae01
      description: <p>Optional. The claims challenge returned from middle tier service, will be added as query string to authorize endpoint. </p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String,String,String,AuthenticationCallback<AuthenticationResult>)
  id: acquireTokenSilentAsync(String,String,String,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireTokenSilentAsync(String resource, String clientId, String userId, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireTokenSilentAsync(String resource, String clientId, String userId, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String resource, String clientId, String userId, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 916
  package: com.microsoft.aad.adal
  summary: "<p>The function will first look at the cache and automatically checks for the token expiration. Additionally, if no suitable access token is found in the cache, but refresh token is available, the function will use the refresh token automatically. This method will not show UI for the user. If prompt is needed, the method will return an exception</p>\r\n<p></p>"
  syntax: &o1
    content: public void acquireTokenSilentAsync(String resource, String clientId, String userId, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier. </p>
    - id: userId
      type: "26831127"
      description: <p>UserId obtained from <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref> inside <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref></p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String,String,String,boolean,AuthenticationCallback<AuthenticationResult>)
  id: acquireTokenSilentAsync(String,String,String,boolean,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireTokenSilentAsync(String resource, String clientId, String userId, boolean forceRefresh, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireTokenSilentAsync(String resource, String clientId, String userId, boolean forceRefresh, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String resource, String clientId, String userId, boolean forceRefresh, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 939
  package: com.microsoft.aad.adal
  summary: "<p>The function will first look at the cache and automatically checks for the token expiration. Additionally, if no suitable access token is found in the cache, but refresh token is available, the function will use the refresh token automatically. This method will not show UI for the user. If prompt is needed, the method will return an exception</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(String resource, String clientId, String userId, boolean forceRefresh, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier. </p>
    - id: userId
      type: "26831127"
      description: <p>UserId obtained from <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref> inside <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref></p>
    - id: forceRefresh
      type: 4fc6e284
      description: <p>when true, access token is renewed using broker if available; otherwise, uses local refresh token </p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsyncWithAssertion(@NonNull final String,@NonNull final String,final String,final String,final String,AuthenticationCallback<AuthenticationResult>)
  id: acquireTokenSilentAsyncWithAssertion(@NonNull final String,@NonNull final String,final String,final String,final String,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireTokenSilentAsyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, final String resource, final String clientId, final String userId, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireTokenSilentAsyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, final String resource, final String clientId, final String userId, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, final String resource, final String clientId, final String userId, AuthenticationCallback<AuthenticationResult> callback)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsyncWithAssertion*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 991
  package: com.microsoft.aad.adal
  summary: "<p>This function tries to acquire token silently. It will first look at the cache and automatically checks for the token expiration. Additionally, if no suitable access token is found in the cache, but refresh token is available, the function will use the refresh token automatically. If both RT and AT are not present, then it will use the provided assertion and its type to acquire the same. This method will not show UI for the user. If prompt is needed, the method will return an exception</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, final String resource, final String clientId, final String userId, AuthenticationCallback<AuthenticationResult> callback)
    parameters:
    - id: assertion
      type: 8789feb4
      description: <p>the actual saml assertion </p>
    - id: assertionType
      type: 8789feb4
      description: <p>version of saml assertion being used </p>
    - id: resource
      type: 3d93591e
      description: <p>required resource identifier. </p>
    - id: clientId
      type: 3d93591e
      description: <p>required client identifier. </p>
    - id: userId
      type: 3d93591e
      description: <p>UserID obtained from <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="#getUserInfo()"></xref></p>
    - id: callback
      type: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
      description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationCallback"></xref> object for async call. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync(String,String,String)
  id: acquireTokenSilentSync(String,String,String)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireTokenSilentSync(String resource, String clientId, String userId)
  nameWithType: AuthenticationContext.acquireTokenSilentSync(String resource, String clientId, String userId)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync(String resource, String clientId, String userId)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 644
  package: com.microsoft.aad.adal
  summary: "<p>This is sync function. It will first look at the cache and automatically checks for the token expiration. Additionally, if no suitable access token is found in the cache, but refresh token is available, the function will use the refresh token automatically. This method will not show UI for the user. If prompt is needed, the method will return an exception</p>\r\n<p></p>"
  syntax:
    content: public AuthenticationResult acquireTokenSilentSync(String resource, String clientId, String userId)
    parameters:
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier. </p>
    - id: userId
      type: "26831127"
      description: <p>UserID obtained from <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="#getUserInfo()"></xref></p>
    return:
      type: com.microsoft.aad.adal.AuthenticationResult
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token,the Access Token's expiration time, Refresh token, and <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref>. </p>
  exceptions:
  - type: 405643ff
    description: <p>If silent request fails to get the token back. </p>
  - type: 8256ba40
    description: <p>If the main thread is interrupted before or during the activity. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync(String,String,String,@Nullable String)
  id: acquireTokenSilentSync(String,String,String,@Nullable String)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireTokenSilentSync(String resource, String clientId, String userId, @Nullable String claims)
  nameWithType: AuthenticationContext.acquireTokenSilentSync(String resource, String clientId, String userId, @Nullable String claims)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync(String resource, String clientId, String userId, @Nullable String claims)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 669
  package: com.microsoft.aad.adal
  summary: "<p>This is sync function. It will first look at the cache and automatically checks for the token expiration. Additionally, if no suitable access token is found in the cache, but refresh token is available, the function will use the refresh token automatically. This method will not show UI for the user. If prompt is needed, the method will return an exception</p>\r\n<p></p>"
  syntax:
    content: public AuthenticationResult acquireTokenSilentSync(String resource, String clientId, String userId, @Nullable String claims)
    parameters:
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier. </p>
    - id: userId
      type: "26831127"
      description: <p>UserID obtained from <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="#getUserInfo()"></xref></p>
    - id: claims
      type: 8766ae01
      description: <p>Optional. The claims challenge returned from middle tier service, will be added as query string to authorize endpoint. </p>
    return:
      type: com.microsoft.aad.adal.AuthenticationResult
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token,the Access Token's expiration time, Refresh token, and <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref>. </p>
  exceptions:
  - type: 405643ff
    description: <p>If silent request fails to get the token back. </p>
  - type: 8256ba40
    description: <p>If the main thread is interrupted before or during the activity. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync(String,String,String,boolean)
  id: acquireTokenSilentSync(String,String,String,boolean)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireTokenSilentSync(String resource, String clientId, String userId, boolean forceRefresh)
  nameWithType: AuthenticationContext.acquireTokenSilentSync(String resource, String clientId, String userId, boolean forceRefresh)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync(String resource, String clientId, String userId, boolean forceRefresh)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 693
  package: com.microsoft.aad.adal
  summary: "<p>This is sync function. It will first look at the cache and automatically checks for the token expiration. Additionally, if no suitable access token is found in the cache, but refresh token is available, the function will use the refresh token automatically. This method will not show UI for the user. If prompt is needed, the method will return an exception</p>\r\n<p></p>"
  syntax:
    content: public AuthenticationResult acquireTokenSilentSync(String resource, String clientId, String userId, boolean forceRefresh)
    parameters:
    - id: resource
      type: "26831127"
      description: <p>required resource identifier. </p>
    - id: clientId
      type: "26831127"
      description: <p>required client identifier. </p>
    - id: userId
      type: "26831127"
      description: <p>UserID obtained from <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="#getUserInfo()"></xref></p>
    - id: forceRefresh
      type: 4fc6e284
      description: <p>when true, access token is renewed using broker if available; otherwise, uses local refresh token </p>
    return:
      type: com.microsoft.aad.adal.AuthenticationResult
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token,the Access Token's expiration time, Refresh token, and <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref>. </p>
  exceptions:
  - type: 405643ff
    description: <p>If silent request fails to get the token back. </p>
  - type: 8256ba40
    description: <p>If the main thread is interrupted before or during the activity. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSyncWithAssertion(@NonNull final String,@NonNull final String,@NonNull final String,@NonNull final String,@NonNull final String)
  id: acquireTokenSilentSyncWithAssertion(@NonNull final String,@NonNull final String,@NonNull final String,@NonNull final String,@NonNull final String)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: acquireTokenSilentSyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, @NonNull final String resource, @NonNull final String clientId, @NonNull final String userId)
  nameWithType: AuthenticationContext.acquireTokenSilentSyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, @NonNull final String resource, @NonNull final String clientId, @NonNull final String userId)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, @NonNull final String resource, @NonNull final String clientId, @NonNull final String userId)
  overload: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSyncWithAssertion*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 731
  package: com.microsoft.aad.adal
  summary: "<p>This function tries to acquire token silently. It will first look at the cache and automatically checks for the token expiration. Additionally, if no suitable access token is found in the cache, but refresh token is available, the function will use the refresh token automatically. If both RT and AT are not present, then it will use the provided assertion and its type to acquire the same. This method will not show UI for the user. If prompt is needed, the method will return an exception</p>\r\n<p></p>"
  syntax:
    content: public AuthenticationResult acquireTokenSilentSyncWithAssertion(@NonNull final String assertion, @NonNull final String assertionType, @NonNull final String resource, @NonNull final String clientId, @NonNull final String userId)
    parameters:
    - id: assertion
      type: 8789feb4
      description: <p>the actual saml assertion </p>
    - id: assertionType
      type: 8789feb4
      description: <p>version of saml assertion being used </p>
    - id: resource
      type: 8789feb4
      description: <p>required resource identifier. </p>
    - id: clientId
      type: 8789feb4
      description: <p>required client identifier. </p>
    - id: userId
      type: 8789feb4
      description: <p>UserID obtained from <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="#getUserInfo()"></xref></p>
    return:
      type: com.microsoft.aad.adal.AuthenticationResult
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token,the Access Token's expiration time, Refresh token, and <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref>. </p>
  exceptions:
  - type: 405643ff
    description: <p>If silent request fails to get the token back. </p>
  - type: 8256ba40
    description: <p>If the main thread is interrupted before or during the activity. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context,@NonNull final String,@Nullable final ITokenCacheStore)
  id: AuthenticationContext(@NonNull final Context,@NonNull final String,@Nullable final ITokenCacheStore)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, @Nullable final ITokenCacheStore tokenCacheStore)
  nameWithType: AuthenticationContext.AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, @Nullable final ITokenCacheStore tokenCacheStore)
  fullName: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, @Nullable final ITokenCacheStore tokenCacheStore)
  overload: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext*
  type: Constructor
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 147
  package: com.microsoft.aad.adal
  summary: "<p>It will verify the authority and use the given cache. If cache is null, it will not use cache.</p>\r\n<p></p>"
  syntax:
    content: public AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, @Nullable final ITokenCacheStore tokenCacheStore)
    parameters:
    - id: appContext
      type: 3c9b8ebf
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>

        </p>
    - id: authority
      type: 8789feb4
      description: <p>Authority Url </p>
    - id: tokenCacheStore
      type: 9a7d2fbdcom.microsoft.aad.adal.ITokenCacheStore
      description: <p>Cache <xref uid="com.microsoft.aad.adal.ITokenCacheStore" data-throw-if-not-resolved="false" data-raw-source="ITokenCacheStore"></xref> used to store tokens. Set to null if you don't want cache. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context,@NonNull final String,final boolean)
  id: AuthenticationContext(@NonNull final Context,@NonNull final String,final boolean)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority)
  nameWithType: AuthenticationContext.AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority)
  fullName: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority)
  overload: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext*
  type: Constructor
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 112
  package: com.microsoft.aad.adal
  summary: "<p>Constructs context to use with known authority to get the token. It uses default cache that stores encrypted tokens.</p>\r\n<p></p>"
  syntax:
    content: public AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority)
    parameters:
    - id: appContext
      type: 3c9b8ebf
      description: <p>It needs to have handle to the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref> to use the SharedPreferencesFileManager as a Default cache storage. It does not need to be activity. </p>
    - id: authority
      type: 8789feb4
      description: <p>Authority url to send code and token requests </p>
    - id: validateAuthority
      type: 4dda0764
      description: <p>validate authority before sending token request </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context,@NonNull final String,final boolean,@Nullable final ITokenCacheStore)
  id: AuthenticationContext(@NonNull final Context,@NonNull final String,final boolean,@Nullable final ITokenCacheStore)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority, @Nullable final ITokenCacheStore tokenCacheStore)
  nameWithType: AuthenticationContext.AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority, @Nullable final ITokenCacheStore tokenCacheStore)
  fullName: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority, @Nullable final ITokenCacheStore tokenCacheStore)
  overload: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext*
  type: Constructor
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 131
  package: com.microsoft.aad.adal
  summary: "<p>Constructs context to use with known authority to get the token. It uses provided cache.</p>\r\n<p></p>"
  syntax:
    content: public AuthenticationContext(@NonNull final Context appContext, @NonNull final String authority, final boolean validateAuthority, @Nullable final ITokenCacheStore tokenCacheStore)
    parameters:
    - id: appContext
      type: 3c9b8ebf
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>

        </p>
    - id: authority
      type: 8789feb4
      description: <p>Authority Url </p>
    - id: validateAuthority
      type: 4dda0764
      description: <p>true/false for validation </p>
    - id: tokenCacheStore
      type: 9a7d2fbdcom.microsoft.aad.adal.ITokenCacheStore
      description: <p>Set to null if you don't want cache. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.cancelAuthenticationActivity(final int)
  id: cancelAuthenticationActivity(final int)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: cancelAuthenticationActivity(final int requestId)
  nameWithType: AuthenticationContext.cancelAuthenticationActivity(final int requestId)
  fullName: com.microsoft.aad.adal.AuthenticationContext.cancelAuthenticationActivity(final int requestId)
  overload: com.microsoft.aad.adal.AuthenticationContext.cancelAuthenticationActivity*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 1200
  package: com.microsoft.aad.adal
  summary: "<p>Active authentication activity can be cancelled if it exists. It may not be cancelled if activity is not launched yet. RequestId is the hashcode of your AuthenticationCallback.</p>\r\n<p></p>"
  syntax:
    content: public boolean cancelAuthenticationActivity(final int requestId)
    parameters:
    - id: requestId
      type: cd225469
      description: <p>Hash code value of your callback to cancel activity launch </p>
    return:
      type: 4fc6e284
      description: '<p>true: if there is a valid waiting request and cancel message sent successfully or if no waiting request exists. false: If the request could not be cancelled </p>'
  exceptions:
  - type: 405643ff
    description: <p>if failed to get the waiting request </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.getAuthority()
  id: getAuthority()
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: getAuthority()
  nameWithType: AuthenticationContext.getAuthority()
  fullName: com.microsoft.aad.adal.AuthenticationContext.getAuthority()
  overload: com.microsoft.aad.adal.AuthenticationContext.getAuthority*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 255
  package: com.microsoft.aad.adal
  summary: "<p>Gets authority that is used for this object of AuthenticationContext.</p>\r\n<p></p>"
  syntax:
    content: public String getAuthority()
    return:
      type: "26831127"
      description: <p>Authority </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.getBrokerUser()
  id: getBrokerUser()
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: getBrokerUser()
  nameWithType: AuthenticationContext.getBrokerUser()
  fullName: com.microsoft.aad.adal.AuthenticationContext.getBrokerUser()
  overload: com.microsoft.aad.adal.AuthenticationContext.getBrokerUser*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 271
  package: com.microsoft.aad.adal
  summary: "<p>Gets username for current broker user.</p>\r\n<p></p>"
  syntax:
    content: public String getBrokerUser()
    return:
      type: "26831127"
      description: <p>Username </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.getBrokerUsers()
  id: getBrokerUsers()
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: getBrokerUsers()
  nameWithType: AuthenticationContext.getBrokerUsers()
  fullName: com.microsoft.aad.adal.AuthenticationContext.getBrokerUsers()
  overload: com.microsoft.aad.adal.AuthenticationContext.getBrokerUsers*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 289
  package: com.microsoft.aad.adal
  summary: "<p>Gets user info from broker. This should not be called on main thread.</p>\r\n<p></p>"
  syntax:
    content: public UserInfo [] getBrokerUsers()
    return:
      type: com.microsoft.aad.adal.UserInfoe5b41c5f
      description: <p>An array of <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref> that haven been authenticated via broker(can be null). </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the broker returned an error response that indicates that it encountered an IOException while communicating with the authentication server. </p>
  - type: 8524c09c
    description: <p>if there was an error communicating with the authenticator or if the authenticator returned an invalid response. </p>
  - type: 74a92782
    description: <p>if the request was canceled for any reason. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.getCache()
  id: getCache()
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: getCache()
  nameWithType: AuthenticationContext.getCache()
  fullName: com.microsoft.aad.adal.AuthenticationContext.getCache()
  overload: com.microsoft.aad.adal.AuthenticationContext.getCache*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 226
  package: com.microsoft.aad.adal
  summary: "<p>Returns referenced cache. You can use default cache, which uses SharedPreferencesFileManager and handles synchronization by itself.</p>\r\n<p></p>"
  syntax:
    content: public ITokenCacheStore getCache()
    return:
      type: com.microsoft.aad.adal.ITokenCacheStore
      description: <p>ITokenCacheStore Current cache used </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.getClientCapabilites()
  id: getClientCapabilites()
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: getClientCapabilites()
  nameWithType: AuthenticationContext.getClientCapabilites()
  fullName: com.microsoft.aad.adal.AuthenticationContext.getClientCapabilites()
  overload: com.microsoft.aad.adal.AuthenticationContext.getClientCapabilites*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 1658
  package: com.microsoft.aad.adal
  syntax:
    content: public List<String> getClientCapabilites()
    return:
      type: 7d60c20e
- uid: com.microsoft.aad.adal.AuthenticationContext.getExtendedLifetimeEnabled()
  id: getExtendedLifetimeEnabled()
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: getExtendedLifetimeEnabled()
  nameWithType: AuthenticationContext.getExtendedLifetimeEnabled()
  fullName: com.microsoft.aad.adal.AuthenticationContext.getExtendedLifetimeEnabled()
  overload: com.microsoft.aad.adal.AuthenticationContext.getExtendedLifetimeEnabled*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 235
  package: com.microsoft.aad.adal
  summary: "<p>Gets if the ExtendedLifetime mode is enabled.</p>\r\n<p></p>"
  syntax:
    content: public boolean getExtendedLifetimeEnabled()
    return:
      type: 4fc6e284
      description: <p>True when ExtendedLifetime mode is enabled </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.getRedirectUriForBroker()
  id: getRedirectUriForBroker()
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: getRedirectUriForBroker()
  nameWithType: AuthenticationContext.getRedirectUriForBroker()
  fullName: com.microsoft.aad.adal.AuthenticationContext.getRedirectUriForBroker()
  overload: com.microsoft.aad.adal.AuthenticationContext.getRedirectUriForBroker*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 300
  package: com.microsoft.aad.adal
  summary: "<p>Get expected redirect Uri for your app to use in broker. You need to register this redirectUri in order to get token from Broker.</p>\r\n<p></p>"
  syntax:
    content: public String getRedirectUriForBroker()
    return:
      type: "26831127"
      description: <p>RedirectUri string to use for broker requests. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.getRequestCorrelationId()
  id: getRequestCorrelationId()
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: getRequestCorrelationId()
  nameWithType: AuthenticationContext.getRequestCorrelationId()
  fullName: com.microsoft.aad.adal.AuthenticationContext.getRequestCorrelationId()
  overload: com.microsoft.aad.adal.AuthenticationContext.getRequestCorrelationId*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 1250
  package: com.microsoft.aad.adal
  summary: "<p>Get the CorrelationId set by user.</p>\r\n<p></p>"
  syntax:
    content: public UUID getRequestCorrelationId()
    return:
      type: add9545a
      description: <p>UUID </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.getValidateAuthority()
  id: getValidateAuthority()
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: getValidateAuthority()
  nameWithType: AuthenticationContext.getValidateAuthority()
  fullName: com.microsoft.aad.adal.AuthenticationContext.getValidateAuthority()
  overload: com.microsoft.aad.adal.AuthenticationContext.getValidateAuthority*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 262
  package: com.microsoft.aad.adal
  syntax:
    content: public boolean getValidateAuthority()
    return:
      type: 4fc6e284
      description: <p>True If developer turn on the authority validation, false otherwise. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.getVersionName()
  id: getVersionName()
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: getVersionName()
  nameWithType: AuthenticationContext.getVersionName()
  fullName: com.microsoft.aad.adal.AuthenticationContext.getVersionName()
  overload: com.microsoft.aad.adal.AuthenticationContext.getVersionName*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 1651
  package: com.microsoft.aad.adal
  summary: "<p>Version name for ADAL not for the app itself.</p>\r\n<p></p>"
  syntax:
    content: public static String getVersionName()
    return:
      type: "26831127"
      description: <p>The current SDK version. </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.mergeClaimsWithClientCapabilities(final String,final List<String>)
  id: mergeClaimsWithClientCapabilities(final String,final List<String>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: mergeClaimsWithClientCapabilities(final String claims, final List<String> clientCapabilities)
  nameWithType: AuthenticationContext.mergeClaimsWithClientCapabilities(final String claims, final List<String> clientCapabilities)
  fullName: com.microsoft.aad.adal.AuthenticationContext.mergeClaimsWithClientCapabilities(final String claims, final List<String> clientCapabilities)
  overload: com.microsoft.aad.adal.AuthenticationContext.mergeClaimsWithClientCapabilities*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 1340
  package: com.microsoft.aad.adal
  summary: "<p>Util method to merge <pre>\r\nSample input claim :\r\n  {\r\n      \"userinfo\": {\r\n          \"given_name\": {\"essential\": true},\r\n          \"email\": {\"essential\": true},\r\n      },\r\n      \"id_token\": {\r\n          \"auth_time\": {\"essential\": true},\r\n      }\r\n  }</pre></p>\r\n<p>\r\n  <pre>Sample capabilities list : [CP1, CP2 CP3]</pre>\r\n</p>\r\n<p>\r\n  <pre>Output merged claims :\r\n  {\r\n      \"userinfo\": {\r\n          \"given_name\": {\r\n              \"essential\": true\r\n          },\r\n          \"email\": {\r\n              \"essential\": true\r\n          }\r\n      },\r\n      \"id_token\": {\r\n          \"auth_time\": {\r\n              \"essential\": true\r\n          }\r\n      },\r\n      \"access_token\": {\r\n          \"xms_cc\": {\r\n              \"values\": [\"CP1\", \"CP2\"]\r\n          }\r\n      }\r\n  }\r\n</pre> * </p>"
  syntax:
    content: public static String mergeClaimsWithClientCapabilities(final String claims, final List<String> clientCapabilities)
    parameters:
    - id: claims
      type: 3d93591e
      description: <p>input claims passed on acquireToken call * </p>
    - id: clientCapabilities
      type: f8579c5b
    return:
      type: "26831127"
      description: <p>merged claims with capabilities * </p>
  exceptions:
  - type: 6c829039
    description: <p>if input claims is an invalid JSON </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.onActivityResult(final int,final int,final Intent)
  id: onActivityResult(final int,final int,final Intent)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: onActivityResult(final int requestCode, final int resultCode, final Intent data)
  nameWithType: AuthenticationContext.onActivityResult(final int requestCode, final int resultCode, final Intent data)
  fullName: com.microsoft.aad.adal.AuthenticationContext.onActivityResult(final int requestCode, final int resultCode, final Intent data)
  overload: com.microsoft.aad.adal.AuthenticationContext.onActivityResult*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 1155
  package: com.microsoft.aad.adal
  summary: "<p>This method wraps the implementation for onActivityResult at the related Activity class. This method is called at UI thread.</p>\r\n<p></p>"
  syntax:
    content: public void onActivityResult(final int requestCode, final int resultCode, final Intent data)
    parameters:
    - id: requestCode
      type: cd225469
      description: <p>Request code provided at the start of the activity. </p>
    - id: resultCode
      type: cd225469
      description: <p>Result code set from the activity. </p>
    - id: data
      type: afc0a73e
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Intent"></xref>

        </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.setClientCapabilites(List<String>)
  id: setClientCapabilites(List<String>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: setClientCapabilites(List<String> clientCapabilites)
  nameWithType: AuthenticationContext.setClientCapabilites(List<String> clientCapabilites)
  fullName: com.microsoft.aad.adal.AuthenticationContext.setClientCapabilites(List<String> clientCapabilites)
  overload: com.microsoft.aad.adal.AuthenticationContext.setClientCapabilites*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 1662
  package: com.microsoft.aad.adal
  syntax:
    content: public void setClientCapabilites(List<String> clientCapabilites)
    parameters:
    - id: clientCapabilites
      type: 7d60c20e
- uid: com.microsoft.aad.adal.AuthenticationContext.setExtendedLifetimeEnabled(final boolean)
  id: setExtendedLifetimeEnabled(final boolean)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: setExtendedLifetimeEnabled(final boolean extendedLifetimeEnabled)
  nameWithType: AuthenticationContext.setExtendedLifetimeEnabled(final boolean extendedLifetimeEnabled)
  fullName: com.microsoft.aad.adal.AuthenticationContext.setExtendedLifetimeEnabled(final boolean extendedLifetimeEnabled)
  overload: com.microsoft.aad.adal.AuthenticationContext.setExtendedLifetimeEnabled*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 246
  package: com.microsoft.aad.adal
  summary: "<p>The client need to set the flag to true explicitly to enable the ExtendedLifetime mode The default value of flag is false. ADAL will return the stale token when ExtendedLifetime mode is enabled and the server is down</p>\r\n<p></p>"
  syntax:
    content: public void setExtendedLifetimeEnabled(final boolean extendedLifetimeEnabled)
    parameters:
    - id: extendedLifetimeEnabled
      type: 4dda0764
      description: <p>true if the ExtendedLifetime mode is on, false otherwise </p>
- uid: com.microsoft.aad.adal.AuthenticationContext.setRequestCorrelationId(final UUID)
  id: setRequestCorrelationId(final UUID)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  langs:
  - java
  name: setRequestCorrelationId(final UUID requestCorrelationId)
  nameWithType: AuthenticationContext.setRequestCorrelationId(final UUID requestCorrelationId)
  fullName: com.microsoft.aad.adal.AuthenticationContext.setRequestCorrelationId(final UUID requestCorrelationId)
  overload: com.microsoft.aad.adal.AuthenticationContext.setRequestCorrelationId*
  type: Method
  source:
    remote: *o0
    path: adal/src/main/java/com/microsoft/aad/adal/AuthenticationContext.java
    startLine: 1263
  package: com.microsoft.aad.adal
  summary: "<p>Set CorrelationId to requests.</p>\r\n<p></p>"
  syntax:
    content: public void setRequestCorrelationId(final UUID requestCorrelationId)
    parameters:
    - id: requestCorrelationId
      type: 5668214f
      description: <p>The correlation id <xref uid="" data-throw-if-not-resolved="false" data-raw-source="UUID"></xref> to be set in the request. </p>
references:
- uid: 3c9b8ebf
  spec.java:
  - name: '@NonNull final Context'
    fullName: '@NonNull final Context'
- uid: 8789feb4
  spec.java:
  - name: '@NonNull final String'
    fullName: '@NonNull final String'
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext*
  name: AuthenticationContext
  nameWithType: AuthenticationContext.AuthenticationContext
  fullName: com.microsoft.aad.adal.AuthenticationContext.AuthenticationContext
  package: com.microsoft.aad.adal
- uid: 9a7d2fbdcom.microsoft.aad.adal.ITokenCacheStore
  spec.java:
  - name: '@Nullable final '
    fullName: '@Nullable final '
  - uid: com.microsoft.aad.adal.ITokenCacheStore
    name: ITokenCacheStore
    fullName: com.microsoft.aad.adal.ITokenCacheStore
    href: com.microsoft.aad.adal.ITokenCacheStore.yml
- uid: com.microsoft.aad.adal.AuthenticationContext.getCache*
  name: getCache
  nameWithType: AuthenticationContext.getCache
  fullName: com.microsoft.aad.adal.AuthenticationContext.getCache
  package: com.microsoft.aad.adal
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.aad.adal.AuthenticationContext.getExtendedLifetimeEnabled*
  name: getExtendedLifetimeEnabled
  nameWithType: AuthenticationContext.getExtendedLifetimeEnabled
  fullName: com.microsoft.aad.adal.AuthenticationContext.getExtendedLifetimeEnabled
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.AuthenticationContext.setExtendedLifetimeEnabled*
  name: setExtendedLifetimeEnabled
  nameWithType: AuthenticationContext.setExtendedLifetimeEnabled
  fullName: com.microsoft.aad.adal.AuthenticationContext.setExtendedLifetimeEnabled
  package: com.microsoft.aad.adal
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.aad.adal.AuthenticationContext.getAuthority*
  name: getAuthority
  nameWithType: AuthenticationContext.getAuthority
  fullName: com.microsoft.aad.adal.AuthenticationContext.getAuthority
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.AuthenticationContext.getValidateAuthority*
  name: getValidateAuthority
  nameWithType: AuthenticationContext.getValidateAuthority
  fullName: com.microsoft.aad.adal.AuthenticationContext.getValidateAuthority
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.AuthenticationContext.getBrokerUser*
  name: getBrokerUser
  nameWithType: AuthenticationContext.getBrokerUser
  fullName: com.microsoft.aad.adal.AuthenticationContext.getBrokerUser
  package: com.microsoft.aad.adal
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 8524c09c
  spec.java:
  - name: AuthenticatorException
    fullName: AuthenticatorException
- uid: 74a92782
  spec.java:
  - name: OperationCanceledException
    fullName: OperationCanceledException
- uid: com.microsoft.aad.adal.UserInfoe5b41c5f
  spec.java:
  - uid: com.microsoft.aad.adal.UserInfo
    name: UserInfo
    fullName: com.microsoft.aad.adal.UserInfo
    href: com.microsoft.aad.adal.UserInfo.yml
  - name: " []"
    fullName: " []"
- uid: com.microsoft.aad.adal.AuthenticationContext.getBrokerUsers*
  name: getBrokerUsers
  nameWithType: AuthenticationContext.getBrokerUsers
  fullName: com.microsoft.aad.adal.AuthenticationContext.getBrokerUsers
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.AuthenticationContext.getRedirectUriForBroker*
  name: getRedirectUriForBroker
  nameWithType: AuthenticationContext.getRedirectUriForBroker
  fullName: com.microsoft.aad.adal.AuthenticationContext.getRedirectUriForBroker
  package: com.microsoft.aad.adal
- uid: ff2dfcec
  spec.java:
  - name: Activity
    fullName: Activity
- uid: 8766ae01
  spec.java:
  - name: '@Nullable String'
    fullName: '@Nullable String'
- uid: com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
  spec.java:
  - uid: com.microsoft.aad.adal.AuthenticationCallback
    name: AuthenticationCallback
    fullName: com.microsoft.aad.adal.AuthenticationCallback
    href: com.microsoft.aad.adal.AuthenticationCallback.yml
  - name: <
    fullName: <
  - uid: com.microsoft.aad.adal.AuthenticationResult
    name: AuthenticationResult
    fullName: com.microsoft.aad.adal.AuthenticationResult
    href: com.microsoft.aad.adal.AuthenticationResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireToken*
  name: acquireToken
  nameWithType: AuthenticationContext.acquireToken
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireToken
  package: com.microsoft.aad.adal
- uid: fef954a7com.microsoft.aad.adal.PromptBehavior
  spec.java:
  - name: '@Nullable '
    fullName: '@Nullable '
  - uid: com.microsoft.aad.adal.PromptBehavior
    name: PromptBehavior
    fullName: com.microsoft.aad.adal.PromptBehavior
    href: com.microsoft.aad.adal.PromptBehavior.yml
- uid: 09c91e7a
  spec.java:
  - name: final Activity
    fullName: final Activity
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: b868e8dd
  spec.java:
  - name: '@Nullable final String'
    fullName: '@Nullable final String'
- uid: 9a7d2fbdcom.microsoft.aad.adal.PromptBehavior
  spec.java:
  - name: '@Nullable final '
    fullName: '@Nullable final '
  - uid: com.microsoft.aad.adal.PromptBehavior
    name: PromptBehavior
    fullName: com.microsoft.aad.adal.PromptBehavior
    href: com.microsoft.aad.adal.PromptBehavior.yml
- uid: 93de0ef9com.microsoft.aad.adal.AuthenticationCallback78504a52com.microsoft.aad.adal.AuthenticationResulta08ddfce
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.aad.adal.AuthenticationCallback
    name: AuthenticationCallback
    fullName: com.microsoft.aad.adal.AuthenticationCallback
    href: com.microsoft.aad.adal.AuthenticationCallback.yml
  - name: <
    fullName: <
  - uid: com.microsoft.aad.adal.AuthenticationResult
    name: AuthenticationResult
    fullName: com.microsoft.aad.adal.AuthenticationResult
    href: com.microsoft.aad.adal.AuthenticationResult.yml
  - name: '>'
    fullName: '>'
- uid: 93de0ef9com.microsoft.aad.adal.IWindowComponent
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.aad.adal.IWindowComponent
    name: IWindowComponent
    fullName: com.microsoft.aad.adal.IWindowComponent
    href: com.microsoft.aad.adal.IWindowComponent.yml
- uid: 405643ff
  spec.java:
  - name: AuthenticationException
    fullName: AuthenticationException
- uid: 8256ba40
  spec.java:
  - name: InterruptedException
    fullName: InterruptedException
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync*
  name: acquireTokenSilentSync
  nameWithType: AuthenticationContext.acquireTokenSilentSync
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSync
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSyncWithAssertion*
  name: acquireTokenSilentSyncWithAssertion
  nameWithType: AuthenticationContext.acquireTokenSilentSyncWithAssertion
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentSyncWithAssertion
  package: com.microsoft.aad.adal
- uid: 9b3030f6com.microsoft.aad.adal.AuthenticationResulta08ddfce
  spec.java:
  - name: Future<
    fullName: Future<
  - uid: com.microsoft.aad.adal.AuthenticationResult
    name: AuthenticationResult
    fullName: com.microsoft.aad.adal.AuthenticationResult
    href: com.microsoft.aad.adal.AuthenticationResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilent*
  name: acquireTokenSilent
  nameWithType: AuthenticationContext.acquireTokenSilent
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilent
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync*
  name: acquireTokenSilentAsync
  nameWithType: AuthenticationContext.acquireTokenSilentAsync
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsyncWithAssertion*
  name: acquireTokenSilentAsyncWithAssertion
  nameWithType: AuthenticationContext.acquireTokenSilentAsyncWithAssertion
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsyncWithAssertion
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenByRefreshToken*
  name: acquireTokenByRefreshToken
  nameWithType: AuthenticationContext.acquireTokenByRefreshToken
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenByRefreshToken
  package: com.microsoft.aad.adal
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: afc0a73e
  spec.java:
  - name: final Intent
    fullName: final Intent
- uid: com.microsoft.aad.adal.AuthenticationContext.onActivityResult*
  name: onActivityResult
  nameWithType: AuthenticationContext.onActivityResult
  fullName: com.microsoft.aad.adal.AuthenticationContext.onActivityResult
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.AuthenticationContext.cancelAuthenticationActivity*
  name: cancelAuthenticationActivity
  nameWithType: AuthenticationContext.cancelAuthenticationActivity
  fullName: com.microsoft.aad.adal.AuthenticationContext.cancelAuthenticationActivity
  package: com.microsoft.aad.adal
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: com.microsoft.aad.adal.AuthenticationContext.getRequestCorrelationId*
  name: getRequestCorrelationId
  nameWithType: AuthenticationContext.getRequestCorrelationId
  fullName: com.microsoft.aad.adal.AuthenticationContext.getRequestCorrelationId
  package: com.microsoft.aad.adal
- uid: 5668214f
  spec.java:
  - name: final UUID
    fullName: final UUID
- uid: com.microsoft.aad.adal.AuthenticationContext.setRequestCorrelationId*
  name: setRequestCorrelationId
  nameWithType: AuthenticationContext.setRequestCorrelationId
  fullName: com.microsoft.aad.adal.AuthenticationContext.setRequestCorrelationId
  package: com.microsoft.aad.adal
- uid: 7d60c20e
  spec.java:
  - name: List<String>
    fullName: List<String>
- uid: com.microsoft.aad.adal.AuthenticationContext.getClientCapabilites*
  name: getClientCapabilites
  nameWithType: AuthenticationContext.getClientCapabilites
  fullName: com.microsoft.aad.adal.AuthenticationContext.getClientCapabilites
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.AuthenticationContext.setClientCapabilites*
  name: setClientCapabilites
  nameWithType: AuthenticationContext.setClientCapabilites
  fullName: com.microsoft.aad.adal.AuthenticationContext.setClientCapabilites
  package: com.microsoft.aad.adal
- uid: 6c829039
  spec.java:
  - name: JSONException
    fullName: JSONException
- uid: f8579c5b
  spec.java:
  - name: final List<String>
    fullName: final List<String>
- uid: com.microsoft.aad.adal.AuthenticationContext.mergeClaimsWithClientCapabilities*
  name: mergeClaimsWithClientCapabilities
  nameWithType: AuthenticationContext.mergeClaimsWithClientCapabilities
  fullName: com.microsoft.aad.adal.AuthenticationContext.mergeClaimsWithClientCapabilities
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.AuthenticationContext.getVersionName*
  name: getVersionName
  nameWithType: AuthenticationContext.getVersionName
  fullName: com.microsoft.aad.adal.AuthenticationContext.getVersionName
  package: com.microsoft.aad.adal
- uid: com.microsoft.aad.adal.ITokenCacheStore
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal.ITokenCacheStore.yml
  name: ITokenCacheStore
  nameWithType: ITokenCacheStore
  fullName: com.microsoft.aad.adal.ITokenCacheStore
  type: Interface
  summary: "<p>Minimal interface needed by ADAL for cache. </p>"
  syntax:
    content: public interface ITokenCacheStore
- uid: com.microsoft.aad.adal.UserInfo
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal.UserInfo.yml
  name: UserInfo
  nameWithType: UserInfo
  fullName: com.microsoft.aad.adal.UserInfo
  type: Class
  summary: "<p>Contains information of a single user. </p>"
  syntax:
    content: public class UserInfo
- uid: com.microsoft.aad.adal.AuthenticationCallback
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal.AuthenticationCallback.yml
  name: AuthenticationCallback<T>
  nameWithType: AuthenticationCallback<T>
  fullName: com.microsoft.aad.adal.AuthenticationCallback<T>
  type: Interface
  summary: "<p>Callback to use with token request. User implements this callback to use result in their context.</p>\r\n<p></p>"
  syntax:
    content: public interface AuthenticationCallback<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
- uid: com.microsoft.aad.adal.AuthenticationResult
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal.AuthenticationResult.yml
  name: AuthenticationResult
  nameWithType: AuthenticationResult
  fullName: com.microsoft.aad.adal.AuthenticationResult
  type: Class
  summary: "<p>Result class to keep code, token and other info Serializable properties Mark temp properties as Transient if you dont want to keep them in serialization. </p>"
  syntax:
    content: public class AuthenticationResult
- uid: com.microsoft.aad.adal.PromptBehavior
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal.PromptBehavior.yml
  name: PromptBehavior
  nameWithType: PromptBehavior
  fullName: com.microsoft.aad.adal.PromptBehavior
  type: Enum
  summary: "<p>Prompt Behaviors that sets the behavior for authentication activity launch. </p>"
  syntax:
    content: public enum PromptBehavior
- uid: com.microsoft.aad.adal.IWindowComponent
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal.IWindowComponent.yml
  name: IWindowComponent
  nameWithType: IWindowComponent
  fullName: com.microsoft.aad.adal.IWindowComponent
  type: Interface
  summary: "<p>Implement this interface to pass fragment. </p>"
  syntax:
    content: public interface IWindowComponent
- uid: com.microsoft.aad.adal.AuthenticationException
  parent: com.microsoft.aad.adal
  href: com.microsoft.aad.adal.AuthenticationException.yml
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: com.microsoft.aad.adal.AuthenticationException
  type: Class
  summary: "<p>ADAL exception. </p>"
  syntax:
    content: public class AuthenticationException
- uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String,String,String,AuthenticationCallback<AuthenticationResult>)
  parent: com.microsoft.aad.adal.AuthenticationContext
  href: com.microsoft.aad.adal.AuthenticationContext.yml
  name: acquireTokenSilentAsync(String resource, String clientId, String userId, AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireTokenSilentAsync(String resource, String clientId, String userId, AuthenticationCallback<AuthenticationResult> callback)
  fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String resource, String clientId, String userId, AuthenticationCallback<AuthenticationResult> callback)
  type: Method
  summary: "<p>The function will first look at the cache and automatically checks for the token expiration. Additionally, if no suitable access token is found in the cache, but refresh token is available, the function will use the refresh token automatically. This method will not show UI for the user. If prompt is needed, the method will return an exception</p>\r\n<p></p>"
  syntax: *o1
