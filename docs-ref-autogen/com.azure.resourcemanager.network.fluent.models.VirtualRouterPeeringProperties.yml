### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties"
fullName: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties"
name: "VirtualRouterPeeringProperties"
nameWithType: "VirtualRouterPeeringProperties"
summary: "Properties of the rule group."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VirtualRouterPeeringProperties"
constructors:
- uid: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.VirtualRouterPeeringProperties()"
  fullName: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.VirtualRouterPeeringProperties()"
  name: "VirtualRouterPeeringProperties()"
  nameWithType: "VirtualRouterPeeringProperties.VirtualRouterPeeringProperties()"
  syntax: "public VirtualRouterPeeringProperties()"
methods:
- uid: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.peerAsn()"
  fullName: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.peerAsn()"
  name: "peerAsn()"
  nameWithType: "VirtualRouterPeeringProperties.peerAsn()"
  summary: "Get the peer<wbr>Asn property: Peer ASN."
  syntax: "public Long peerAsn()"
  desc: "Get the peerAsn property: Peer ASN."
  returns:
    description: "the peerAsn value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.peerIp()"
  fullName: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.peerIp()"
  name: "peerIp()"
  nameWithType: "VirtualRouterPeeringProperties.peerIp()"
  summary: "Get the peer<wbr>Ip property: Peer IP."
  syntax: "public String peerIp()"
  desc: "Get the peerIp property: Peer IP."
  returns:
    description: "the peerIp value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "VirtualRouterPeeringProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning state of the resource."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: The provisioning state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.network.models.ProvisioningState?alt=com.azure.resourcemanager.network.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.validate()"
  fullName: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.validate()"
  name: "validate()"
  nameWithType: "VirtualRouterPeeringProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.withPeerAsn(java.lang.Long)"
  fullName: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.withPeerAsn(Long peerAsn)"
  name: "withPeerAsn(Long peerAsn)"
  nameWithType: "VirtualRouterPeeringProperties.withPeerAsn(Long peerAsn)"
  summary: "Set the peer<wbr>Asn property: Peer ASN."
  parameters:
  - description: "the peerAsn value to set."
    name: "peerAsn"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualRouterPeeringProperties withPeerAsn(Long peerAsn)"
  desc: "Set the peerAsn property: Peer ASN."
  returns:
    description: "the VirtualRouterPeeringProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties?alt=com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties&text=VirtualRouterPeeringProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.withPeerIp(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties.withPeerIp(String peerIp)"
  name: "withPeerIp(String peerIp)"
  nameWithType: "VirtualRouterPeeringProperties.withPeerIp(String peerIp)"
  summary: "Set the peer<wbr>Ip property: Peer IP."
  parameters:
  - description: "the peerIp value to set."
    name: "peerIp"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualRouterPeeringProperties withPeerIp(String peerIp)"
  desc: "Set the peerIp property: Peer IP."
  returns:
    description: "the VirtualRouterPeeringProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties?alt=com.azure.resourcemanager.network.fluent.models.VirtualRouterPeeringProperties&text=VirtualRouterPeeringProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties of the rule group."
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.16.0
