### YamlMime:JavaMember
nameWithType: MultiplexingClient.unregisterDeviceClients
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.device.MultiplexingClient.unregisterDeviceClients(Iterable<DeviceClient> deviceClients)
  name: unregisterDeviceClients(Iterable<DeviceClient> deviceClients)
  nameWithType: MultiplexingClient.unregisterDeviceClients(Iterable<DeviceClient> deviceClients)
  parameters:
  - description: <p>The device clients to unregister from this multiplexing client. </p>
    name: deviceClients
    type: Iterable&lt;<xref href="com.microsoft.azure.sdk.iot.device.DeviceClient?alt=com.microsoft.azure.sdk.iot.device.DeviceClient&text=DeviceClient" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>If the thread gets interrupted while waiting for the unregistration to succeed. </p>
  - type: <xref href="com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientDeviceRegistrationTimeoutException?alt=com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientDeviceRegistrationTimeoutException&text=com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientDeviceRegistrationTimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>If the unregistration takes longer than the default timeout allows. </p>
  - type: <xref href="MultiplexingClientException?alt=MultiplexingClientException&text=MultiplexingClientException" data-throw-if-not-resolved="False"/>
    description: <p>If any other Exception is thrown, it will be nested into this exception. </p>
  summary: >-
    <p>Unregister multiple device clients from this multiplexing client. This method may be called before or after opening the multiplexed connection. </p>

    <p>If the multiplexed connection is already open, then this call will close the AMQP device session associated with this device, but it will not close any other registered device sessions or the multiplexing client itself. </p>

    <p>If the multiplexed connection is already open, and this call would unregister the last device clients, the multiplexed connection will remain open. The multiplexed connection can only be closed by calling <xref uid="com.microsoft.azure.sdk.iot.device.MultiplexingClient.close()" data-throw-if-not-resolved="false" data-raw-source="close()"></xref></p>

    <p>Once a device client is unregistered, it may be re-registered to this or any other multiplexing client. It cannot be used in non-multiplexing scenarios. </p>

    <p>Any subscriptions set on these device clients for twin/methods/cloud to device messages will need to be set again after these devices are re-registered. </p>

    <p></p>
  syntax: public void unregisterDeviceClients(Iterable<DeviceClient> deviceClients)
  uid: com.microsoft.azure.sdk.iot.device.MultiplexingClient.unregisterDeviceClients(Iterable<DeviceClient>)
- fullName: com.microsoft.azure.sdk.iot.device.MultiplexingClient.unregisterDeviceClients(Iterable<DeviceClient> deviceClients, long timeoutMilliseconds)
  name: unregisterDeviceClients(Iterable<DeviceClient> deviceClients, long timeoutMilliseconds)
  nameWithType: MultiplexingClient.unregisterDeviceClients(Iterable<DeviceClient> deviceClients, long timeoutMilliseconds)
  parameters:
  - description: <p>The device clients to unregister from this multiplexing client. </p>
    name: deviceClients
    type: Iterable&lt;<xref href="com.microsoft.azure.sdk.iot.device.DeviceClient?alt=com.microsoft.azure.sdk.iot.device.DeviceClient&text=DeviceClient" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>How long (in milliseconds) to let this operation wait for all unregistrations to complete. If this threshold is passed, a <xref uid="com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientDeviceRegistrationTimeoutException" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientDeviceRegistrationTimeoutException"></xref> is thrown. </p>
    name: timeoutMilliseconds
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>If the thread gets interrupted while waiting for the unregistration to succeed. </p>
  - type: <xref href="com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientDeviceRegistrationTimeoutException?alt=com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientDeviceRegistrationTimeoutException&text=com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientDeviceRegistrationTimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>If the unregistration takes longer than the provided timeout allows. </p>
  - type: <xref href="MultiplexingClientException?alt=MultiplexingClientException&text=MultiplexingClientException" data-throw-if-not-resolved="False"/>
    description: <p>If any other Exception is thrown, it will be nested into this exception. </p>
  summary: >-
    <p>Unregister multiple device clients from this multiplexing client. This method may be called before or after opening the multiplexed connection. </p>

    <p>If the multiplexed connection is already open, then this call will close the AMQP device session associated with this device, but it will not close any other registered device sessions or the multiplexing client itself. </p>

    <p>If the multiplexed connection is already open, and this call would unregister the last device clients, the multiplexed connection will remain open. The multiplexed connection can only be closed by calling <xref uid="com.microsoft.azure.sdk.iot.device.MultiplexingClient.close()" data-throw-if-not-resolved="false" data-raw-source="close()"></xref></p>

    <p>Once a device client is unregistered, it may be re-registered to this or any other multiplexing client. It cannot be used in non-multiplexing scenarios. </p>

    <p>Any subscriptions set on these device clients for twin/methods/cloud to device messages will need to be set again after these devices are re-registered. </p>

    <p></p>
  syntax: public void unregisterDeviceClients(Iterable<DeviceClient> deviceClients, long timeoutMilliseconds)
  uid: com.microsoft.azure.sdk.iot.device.MultiplexingClient.unregisterDeviceClients(Iterable<DeviceClient>,long)
uid: com.microsoft.azure.sdk.iot.device.MultiplexingClient.unregisterDeviceClients*
fullName: com.microsoft.azure.sdk.iot.device.MultiplexingClient.unregisterDeviceClients
name: unregisterDeviceClients(Iterable<DeviceClient> deviceClients)
package: com.microsoft.azure.sdk.iot.device
metadata: {}
