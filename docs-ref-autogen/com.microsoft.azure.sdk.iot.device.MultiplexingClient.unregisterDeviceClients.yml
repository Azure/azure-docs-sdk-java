### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.device.MultiplexingClient.unregisterDeviceClients*"
fullName: "com.microsoft.azure.sdk.iot.device.MultiplexingClient.unregisterDeviceClients"
name: "unregisterDeviceClients"
nameWithType: "MultiplexingClient.unregisterDeviceClients"
members:
- uid: "com.microsoft.azure.sdk.iot.device.MultiplexingClient.unregisterDeviceClients(java.lang.Iterable<com.microsoft.azure.sdk.iot.device.DeviceClient>)"
  fullName: "com.microsoft.azure.sdk.iot.device.MultiplexingClient.unregisterDeviceClients(Iterable<DeviceClient> deviceClients)"
  name: "unregisterDeviceClients(Iterable<DeviceClient> deviceClients)"
  nameWithType: "MultiplexingClient.unregisterDeviceClients(Iterable<DeviceClient> deviceClients)"
  summary: "Unregister multiple device clients from this multiplexing client."
  parameters:
  - description: "The device clients to unregister from this multiplexing client."
    name: "deviceClients"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.device.DeviceClient?alt=com.microsoft.azure.sdk.iot.device.DeviceClient&text=DeviceClient\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void unregisterDeviceClients(Iterable<DeviceClient> deviceClients)"
  exceptions:
  - description: "If the thread gets interrupted while waiting for the unregistration to succeed."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the thread gets interrupted while waiting for the unregistration to succeed."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientException?alt=com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientException&text=MultiplexingClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Unregister multiple device clients from this multiplexing client. This method may be called before or after opening the multiplexed connection.\n\nIf the multiplexed connection is already open, then this call will close the AMQP device session associated with this device, but it will not close any other registered device sessions or the multiplexing client itself.\n\nIf the multiplexed connection is already open, and this call would unregister the last device clients, the multiplexed connection will remain open. The multiplexed connection can only be closed by calling <xref uid=\"com.microsoft.azure.sdk.iot.device.MultiplexingClient.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#close()\"></xref>\n\nOnce a device client is unregistered, it may be re-registered to this or any other multiplexing client. It cannot be used in non-multiplexing scenarios or used by the deprecated <xref uid=\"com.microsoft.azure.sdk.iot.device.TransportClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransportClient\"></xref>.\n\nAny subscriptions set on these device clients for twin/methods/cloud to device messages will need to be set again after these devices are re-registered."
- uid: "com.microsoft.azure.sdk.iot.device.MultiplexingClient.unregisterDeviceClients(java.lang.Iterable<com.microsoft.azure.sdk.iot.device.DeviceClient>,long)"
  fullName: "com.microsoft.azure.sdk.iot.device.MultiplexingClient.unregisterDeviceClients(Iterable<DeviceClient> deviceClients, long timeoutMilliseconds)"
  name: "unregisterDeviceClients(Iterable<DeviceClient> deviceClients, long timeoutMilliseconds)"
  nameWithType: "MultiplexingClient.unregisterDeviceClients(Iterable<DeviceClient> deviceClients, long timeoutMilliseconds)"
  summary: "Unregister multiple device clients from this multiplexing client."
  parameters:
  - description: "The device clients to unregister from this multiplexing client."
    name: "deviceClients"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.sdk.iot.device.DeviceClient?alt=com.microsoft.azure.sdk.iot.device.DeviceClient&text=DeviceClient\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "How long (in milliseconds) to let this operation wait for all unregistrations to complete. If this threshold is passed, a <xref uid=\"com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientDeviceRegistrationTimeoutException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientDeviceRegistrationTimeoutException\"></xref> is thrown."
    name: "timeoutMilliseconds"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void unregisterDeviceClients(Iterable<DeviceClient> deviceClients, long timeoutMilliseconds)"
  exceptions:
  - description: "If the thread gets interrupted while waiting for the unregistration to succeed."
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the thread gets interrupted while waiting for the unregistration to succeed."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientException?alt=com.microsoft.azure.sdk.iot.device.exceptions.MultiplexingClientException&text=MultiplexingClientException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Unregister multiple device clients from this multiplexing client. This method may be called before or after opening the multiplexed connection.\n\nIf the multiplexed connection is already open, then this call will close the AMQP device session associated with this device, but it will not close any other registered device sessions or the multiplexing client itself.\n\nIf the multiplexed connection is already open, and this call would unregister the last device clients, the multiplexed connection will remain open. The multiplexed connection can only be closed by calling <xref uid=\"com.microsoft.azure.sdk.iot.device.MultiplexingClient.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#close()\"></xref>\n\nOnce a device client is unregistered, it may be re-registered to this or any other multiplexing client. It cannot be used in non-multiplexing scenarios or used by the deprecated <xref uid=\"com.microsoft.azure.sdk.iot.device.TransportClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TransportClient\"></xref>.\n\nAny subscriptions set on these device clients for twin/methods/cloud to device messages will need to be set again after these devices are re-registered."
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device"
artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.30.1
