### YamlMime:JavaType
uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment"
fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment"
name: "SpringAppDeployment"
nameWithType: "SpringAppDeployment"
summary: "An immutable client-side representation of an Azure Spring App Deployment."
syntax: "public interface SpringAppDeployment extends ExternalChildResource<SpringAppDeployment,SpringApp>, HasInnerModel<DeploymentResourceInner>, Updatable<SpringAppDeployment.Update>"
methods:
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.appName()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.appName()"
  name: "appName()"
  nameWithType: "SpringAppDeployment.appName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String appName()"
  returns:
    description: "the app name of the deployment"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.createdTime()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.createdTime()"
  name: "createdTime()"
  nameWithType: "SpringAppDeployment.createdTime()"
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime createdTime()"
  returns:
    description: "the creation time of the deployment"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.getLogFileUrl()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.getLogFileUrl()"
  name: "getLogFileUrl()"
  nameWithType: "SpringAppDeployment.getLogFileUrl()"
  modifiers:
  - "abstract"
  syntax: "public abstract String getLogFileUrl()"
  returns:
    description: "the log file url of the deployment"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.getLogFileUrlAsync()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.getLogFileUrlAsync()"
  name: "getLogFileUrlAsync()"
  nameWithType: "SpringAppDeployment.getLogFileUrlAsync()"
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<String> getLogFileUrlAsync()"
  returns:
    description: "the log file url of the deployment"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.instances()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.instances()"
  name: "instances()"
  nameWithType: "SpringAppDeployment.instances()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<DeploymentInstance> instances()"
  returns:
    description: "all the instances of the deployment"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.DeploymentInstance?alt=com.azure.resourcemanager.appplatform.models.DeploymentInstance&text=DeploymentInstance\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.isActive()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.isActive()"
  name: "isActive()"
  nameWithType: "SpringAppDeployment.isActive()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isActive()"
  returns:
    description: "whether the deployment is active"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.restart()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.restart()"
  name: "restart()"
  nameWithType: "SpringAppDeployment.restart()"
  summary: "Restarts the deployment."
  modifiers:
  - "abstract"
  syntax: "public abstract void restart()"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.restartAsync()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.restartAsync()"
  name: "restartAsync()"
  nameWithType: "SpringAppDeployment.restartAsync()"
  summary: "Restarts the deployment."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<Void> restartAsync()"
  returns:
    description: "null"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.settings()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.settings()"
  name: "settings()"
  nameWithType: "SpringAppDeployment.settings()"
  modifiers:
  - "abstract"
  syntax: "public abstract DeploymentSettings settings()"
  returns:
    description: "the deploy settings of the deployment"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.DeploymentSettings?alt=com.azure.resourcemanager.appplatform.models.DeploymentSettings&text=DeploymentSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.start()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.start()"
  name: "start()"
  nameWithType: "SpringAppDeployment.start()"
  summary: "Starts the deployment."
  modifiers:
  - "abstract"
  syntax: "public abstract void start()"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.startAsync()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.startAsync()"
  name: "startAsync()"
  nameWithType: "SpringAppDeployment.startAsync()"
  summary: "Starts the deployment."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<Void> startAsync()"
  returns:
    description: "null"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.status()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.status()"
  name: "status()"
  nameWithType: "SpringAppDeployment.status()"
  modifiers:
  - "abstract"
  syntax: "public abstract DeploymentResourceStatus status()"
  returns:
    description: "the status of the deployment"
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.DeploymentResourceStatus?alt=com.azure.resourcemanager.appplatform.models.DeploymentResourceStatus&text=DeploymentResourceStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.stop()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.stop()"
  name: "stop()"
  nameWithType: "SpringAppDeployment.stop()"
  summary: "Stops the deployment."
  modifiers:
  - "abstract"
  syntax: "public abstract void stop()"
- uid: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.stopAsync()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringAppDeployment.stopAsync()"
  name: "stopAsync()"
  nameWithType: "SpringAppDeployment.stopAsync()"
  summary: "Stops the deployment."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<Void> stopAsync()"
  returns:
    description: "null"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.ExternalChildResource?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.ExternalChildResource&text=ExternalChildResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.SpringAppDeployment?alt=com.azure.resourcemanager.appplatform.models.SpringAppDeployment&text=SpringAppDeployment\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.appplatform.models.SpringApp?alt=com.azure.resourcemanager.appplatform.models.SpringApp&text=SpringApp\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel?alt=com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel&text=HasInnerModel\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.fluent.models.DeploymentResourceInner?alt=com.azure.resourcemanager.appplatform.fluent.models.DeploymentResourceInner&text=DeploymentResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Updatable?alt=com.azure.resourcemanager.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.SpringAppDeployment.Update?alt=com.azure.resourcemanager.appplatform.models.SpringAppDeployment.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.appplatform.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.14.0
