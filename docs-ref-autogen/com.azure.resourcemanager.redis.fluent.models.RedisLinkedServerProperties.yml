### YamlMime:JavaType
uid: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties"
fullName: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties"
name: "RedisLinkedServerProperties"
nameWithType: "RedisLinkedServerProperties"
summary: "Properties of a linked server to be returned in get/put response."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerCreateProperties?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerCreateProperties.linkedRedisCacheId()"
- "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerCreateProperties.linkedRedisCacheLocation()"
- "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerCreateProperties.serverRole()"
- "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerCreateProperties.validate()"
- "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerCreateProperties.withLinkedRedisCacheId(java.lang.String)"
- "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerCreateProperties.withLinkedRedisCacheLocation(java.lang.String)"
- "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerCreateProperties.withServerRole(com.azure.resourcemanager.redis.models.ReplicationRole)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RedisLinkedServerProperties extends RedisLinkedServerCreateProperties"
constructors:
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties.RedisLinkedServerProperties()"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties.RedisLinkedServerProperties()"
  name: "RedisLinkedServerProperties()"
  nameWithType: "RedisLinkedServerProperties.RedisLinkedServerProperties()"
  syntax: "public RedisLinkedServerProperties()"
methods:
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "RedisLinkedServerProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Terminal state of the link between primary and secondary redis cache."
  syntax: "public String provisioningState()"
  desc: "Get the provisioningState property: Terminal state of the link between primary and secondary redis cache."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties.validate()"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties.validate()"
  name: "validate()"
  nameWithType: "RedisLinkedServerProperties.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerCreateProperties.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties.withLinkedRedisCacheId(java.lang.String)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties.withLinkedRedisCacheId(String linkedRedisCacheId)"
  name: "withLinkedRedisCacheId(String linkedRedisCacheId)"
  nameWithType: "RedisLinkedServerProperties.withLinkedRedisCacheId(String linkedRedisCacheId)"
  summary: "Set the linked<wbr>Redis<wbr>Cache<wbr>Id property: Fully qualified resource<wbr>Id of the linked redis cache."
  overridden: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerCreateProperties.withLinkedRedisCacheId(java.lang.String)"
  parameters:
  - name: "linkedRedisCacheId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisLinkedServerProperties withLinkedRedisCacheId(String linkedRedisCacheId)"
  desc: "Set the linkedRedisCacheId property: Fully qualified resourceId of the linked redis cache."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties&text=RedisLinkedServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties.withLinkedRedisCacheLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties.withLinkedRedisCacheLocation(String linkedRedisCacheLocation)"
  name: "withLinkedRedisCacheLocation(String linkedRedisCacheLocation)"
  nameWithType: "RedisLinkedServerProperties.withLinkedRedisCacheLocation(String linkedRedisCacheLocation)"
  summary: "Set the linked<wbr>Redis<wbr>Cache<wbr>Location property: Location of the linked redis cache."
  overridden: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerCreateProperties.withLinkedRedisCacheLocation(java.lang.String)"
  parameters:
  - name: "linkedRedisCacheLocation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisLinkedServerProperties withLinkedRedisCacheLocation(String linkedRedisCacheLocation)"
  desc: "Set the linkedRedisCacheLocation property: Location of the linked redis cache."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties&text=RedisLinkedServerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties.withServerRole(com.azure.resourcemanager.redis.models.ReplicationRole)"
  fullName: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties.withServerRole(ReplicationRole serverRole)"
  name: "withServerRole(ReplicationRole serverRole)"
  nameWithType: "RedisLinkedServerProperties.withServerRole(ReplicationRole serverRole)"
  summary: "Set the server<wbr>Role property: Role of the linked server."
  overridden: "com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerCreateProperties.withServerRole(com.azure.resourcemanager.redis.models.ReplicationRole)"
  parameters:
  - name: "serverRole"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.ReplicationRole?alt=com.azure.resourcemanager.redis.models.ReplicationRole&text=ReplicationRole\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RedisLinkedServerProperties withServerRole(ReplicationRole serverRole)"
  desc: "Set the serverRole property: Role of the linked server."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties?alt=com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerProperties&text=RedisLinkedServerProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties of a linked server to be returned in get/put response."
metadata: {}
package: "com.azure.resourcemanager.redis.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.16.0
