### YamlMime:JavaMember
uid: "com.azure.core.implementation.TypeUtil.createParameterizedType*"
fullName: "com.azure.core.implementation.TypeUtil.createParameterizedType"
name: "createParameterizedType"
nameWithType: "TypeUtil.createParameterizedType"
members:
- uid: "com.azure.core.implementation.TypeUtil.createParameterizedType(java.lang.reflect.Type,java.lang.reflect.Type...)"
  fullName: "com.azure.core.implementation.TypeUtil.createParameterizedType(Type rawClass, Type[] genericTypes)"
  name: "createParameterizedType(Type rawClass, Type[] genericTypes)"
  nameWithType: "TypeUtil.createParameterizedType(Type rawClass, Type[] genericTypes)"
  summary: "Create a parameterized type from a raw class and its type arguments."
  parameters:
  - description: "the raw class to construct the parameterized type"
    name: "rawClass"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "the generic arguments"
    name: "genericTypes"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static ParameterizedType createParameterizedType(Type rawClass, Type[] genericTypes)"
  returns:
    description: "the parameterized type"
    type: "<xref href=\"java.lang.reflect.ParameterizedType?alt=java.lang.reflect.ParameterizedType&text=ParameterizedType\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.implementation"
artifact: com.azure:azure-core:1.15.0
