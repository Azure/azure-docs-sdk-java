### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner"
  id: "OriginInner"
  parent: "com.microsoft.azure.management.cdn.implementation"
  children:
  - "com.microsoft.azure.management.cdn.implementation.OriginInner.OriginInner()"
  - "com.microsoft.azure.management.cdn.implementation.OriginInner.hostName()"
  - "com.microsoft.azure.management.cdn.implementation.OriginInner.httpPort()"
  - "com.microsoft.azure.management.cdn.implementation.OriginInner.httpsPort()"
  - "com.microsoft.azure.management.cdn.implementation.OriginInner.provisioningState()"
  - "com.microsoft.azure.management.cdn.implementation.OriginInner.resourceState()"
  - "com.microsoft.azure.management.cdn.implementation.OriginInner.withHostName(java.lang.String)"
  - "com.microsoft.azure.management.cdn.implementation.OriginInner.withHttpPort(java.lang.Integer)"
  - "com.microsoft.azure.management.cdn.implementation.OriginInner.withHttpsPort(java.lang.Integer)"
  langs:
  - "java"
  name: "OriginInner"
  nameWithType: "OriginInner"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner"
  type: "Class"
  package: "com.microsoft.azure.management.cdn.implementation"
  summary: "CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins."
  syntax:
    content: "public class OriginInner extends TrackedResourceInner"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.ProxyResource"
  - "com.microsoft.azure.Resource"
  - "com.microsoft.azure.management.cdn.implementation.TrackedResourceInner"
  inheritedMembers:
  - "com.microsoft.azure.ProxyResource.id()"
  - "com.microsoft.azure.ProxyResource.name()"
  - "com.microsoft.azure.ProxyResource.type()"
  - "com.microsoft.azure.Resource.getTags()"
  - "com.microsoft.azure.Resource.location()"
  - "com.microsoft.azure.Resource.withLocation(java.lang.String)"
  - "com.microsoft.azure.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.OriginInner()"
  id: "OriginInner()"
  parent: "com.microsoft.azure.management.cdn.implementation.OriginInner"
  langs:
  - "java"
  name: "OriginInner()"
  nameWithType: "OriginInner.OriginInner()"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.OriginInner()"
  overload: "com.microsoft.azure.management.cdn.implementation.OriginInner.OriginInner*"
  type: "Constructor"
  package: "com.microsoft.azure.management.cdn.implementation"
  syntax:
    content: "public OriginInner()"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.hostName()"
  id: "hostName()"
  parent: "com.microsoft.azure.management.cdn.implementation.OriginInner"
  langs:
  - "java"
  name: "hostName()"
  nameWithType: "OriginInner.hostName()"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.hostName()"
  overload: "com.microsoft.azure.management.cdn.implementation.OriginInner.hostName*"
  type: "Method"
  package: "com.microsoft.azure.management.cdn.implementation"
  summary: "Get the hostName value."
  syntax:
    content: "public String hostName()"
    return:
      type: "java.lang.String"
      description: "the hostName value"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.httpPort()"
  id: "httpPort()"
  parent: "com.microsoft.azure.management.cdn.implementation.OriginInner"
  langs:
  - "java"
  name: "httpPort()"
  nameWithType: "OriginInner.httpPort()"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.httpPort()"
  overload: "com.microsoft.azure.management.cdn.implementation.OriginInner.httpPort*"
  type: "Method"
  package: "com.microsoft.azure.management.cdn.implementation"
  summary: "Get the httpPort value."
  syntax:
    content: "public Integer httpPort()"
    return:
      type: "java.lang.Integer"
      description: "the httpPort value"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.httpsPort()"
  id: "httpsPort()"
  parent: "com.microsoft.azure.management.cdn.implementation.OriginInner"
  langs:
  - "java"
  name: "httpsPort()"
  nameWithType: "OriginInner.httpsPort()"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.httpsPort()"
  overload: "com.microsoft.azure.management.cdn.implementation.OriginInner.httpsPort*"
  type: "Method"
  package: "com.microsoft.azure.management.cdn.implementation"
  summary: "Get the httpsPort value."
  syntax:
    content: "public Integer httpsPort()"
    return:
      type: "java.lang.Integer"
      description: "the httpsPort value"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.provisioningState()"
  id: "provisioningState()"
  parent: "com.microsoft.azure.management.cdn.implementation.OriginInner"
  langs:
  - "java"
  name: "provisioningState()"
  nameWithType: "OriginInner.provisioningState()"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.provisioningState()"
  overload: "com.microsoft.azure.management.cdn.implementation.OriginInner.provisioningState*"
  type: "Method"
  package: "com.microsoft.azure.management.cdn.implementation"
  summary: "Get the provisioningState value."
  syntax:
    content: "public String provisioningState()"
    return:
      type: "java.lang.String"
      description: "the provisioningState value"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.resourceState()"
  id: "resourceState()"
  parent: "com.microsoft.azure.management.cdn.implementation.OriginInner"
  langs:
  - "java"
  name: "resourceState()"
  nameWithType: "OriginInner.resourceState()"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.resourceState()"
  overload: "com.microsoft.azure.management.cdn.implementation.OriginInner.resourceState*"
  type: "Method"
  package: "com.microsoft.azure.management.cdn.implementation"
  summary: "Get the resourceState value."
  syntax:
    content: "public OriginResourceState resourceState()"
    return:
      type: "com.microsoft.azure.management.cdn.OriginResourceState"
      description: "the resourceState value"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHostName(java.lang.String)"
  id: "withHostName(java.lang.String)"
  parent: "com.microsoft.azure.management.cdn.implementation.OriginInner"
  langs:
  - "java"
  name: "withHostName(String hostName)"
  nameWithType: "OriginInner.withHostName(String hostName)"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHostName(String hostName)"
  overload: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHostName*"
  type: "Method"
  package: "com.microsoft.azure.management.cdn.implementation"
  summary: "Set the hostName value."
  syntax:
    content: "public OriginInner withHostName(String hostName)"
    parameters:
    - id: "hostName"
      type: "java.lang.String"
      description: "the hostName value to set"
    return:
      type: "com.microsoft.azure.management.cdn.implementation.OriginInner"
      description: "the OriginInner object itself."
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHttpPort(java.lang.Integer)"
  id: "withHttpPort(java.lang.Integer)"
  parent: "com.microsoft.azure.management.cdn.implementation.OriginInner"
  langs:
  - "java"
  name: "withHttpPort(Integer httpPort)"
  nameWithType: "OriginInner.withHttpPort(Integer httpPort)"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHttpPort(Integer httpPort)"
  overload: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHttpPort*"
  type: "Method"
  package: "com.microsoft.azure.management.cdn.implementation"
  summary: "Set the httpPort value."
  syntax:
    content: "public OriginInner withHttpPort(Integer httpPort)"
    parameters:
    - id: "httpPort"
      type: "java.lang.Integer"
      description: "the httpPort value to set"
    return:
      type: "com.microsoft.azure.management.cdn.implementation.OriginInner"
      description: "the OriginInner object itself."
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHttpsPort(java.lang.Integer)"
  id: "withHttpsPort(java.lang.Integer)"
  parent: "com.microsoft.azure.management.cdn.implementation.OriginInner"
  langs:
  - "java"
  name: "withHttpsPort(Integer httpsPort)"
  nameWithType: "OriginInner.withHttpsPort(Integer httpsPort)"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHttpsPort(Integer httpsPort)"
  overload: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHttpsPort*"
  type: "Method"
  package: "com.microsoft.azure.management.cdn.implementation"
  summary: "Set the httpsPort value."
  syntax:
    content: "public OriginInner withHttpsPort(Integer httpsPort)"
    parameters:
    - id: "httpsPort"
      type: "java.lang.Integer"
      description: "the httpsPort value to set"
    return:
      type: "com.microsoft.azure.management.cdn.implementation.OriginInner"
      description: "the OriginInner object itself."
references:
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.OriginInner*"
  name: "OriginInner"
  nameWithType: "OriginInner.OriginInner"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.OriginInner"
  package: "com.microsoft.azure.management.cdn.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.hostName*"
  name: "hostName"
  nameWithType: "OriginInner.hostName"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.hostName"
  package: "com.microsoft.azure.management.cdn.implementation"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHostName*"
  name: "withHostName"
  nameWithType: "OriginInner.withHostName"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHostName"
  package: "com.microsoft.azure.management.cdn.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.httpPort*"
  name: "httpPort"
  nameWithType: "OriginInner.httpPort"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.httpPort"
  package: "com.microsoft.azure.management.cdn.implementation"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHttpPort*"
  name: "withHttpPort"
  nameWithType: "OriginInner.withHttpPort"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHttpPort"
  package: "com.microsoft.azure.management.cdn.implementation"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.httpsPort*"
  name: "httpsPort"
  nameWithType: "OriginInner.httpsPort"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.httpsPort"
  package: "com.microsoft.azure.management.cdn.implementation"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHttpsPort*"
  name: "withHttpsPort"
  nameWithType: "OriginInner.withHttpsPort"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.withHttpsPort"
  package: "com.microsoft.azure.management.cdn.implementation"
- uid: "com.microsoft.azure.management.cdn.OriginResourceState"
  name: "OriginResourceState"
  nameWithType: "OriginResourceState"
  fullName: "com.microsoft.azure.management.cdn.OriginResourceState"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.resourceState*"
  name: "resourceState"
  nameWithType: "OriginInner.resourceState"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.resourceState"
  package: "com.microsoft.azure.management.cdn.implementation"
- uid: "com.microsoft.azure.management.cdn.implementation.OriginInner.provisioningState*"
  name: "provisioningState"
  nameWithType: "OriginInner.provisioningState"
  fullName: "com.microsoft.azure.management.cdn.implementation.OriginInner.provisioningState"
  package: "com.microsoft.azure.management.cdn.implementation"
- uid: "com.microsoft.azure.management.cdn.implementation.TrackedResourceInner"
  name: "TrackedResourceInner"
  nameWithType: "TrackedResourceInner"
  fullName: "com.microsoft.azure.management.cdn.implementation.TrackedResourceInner"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.microsoft.azure.Resource.getTags()"
  name: "Resource.getTags()"
  nameWithType: "Resource.getTags()"
  fullName: "com.microsoft.azure.Resource.getTags()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.microsoft.azure.Resource.withLocation(java.lang.String)"
  name: "Resource.withLocation(String)"
  nameWithType: "Resource.withLocation(String)"
  fullName: "com.microsoft.azure.Resource.withLocation(java.lang.String)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.ProxyResource.type()"
  name: "ProxyResource.type()"
  nameWithType: "ProxyResource.type()"
  fullName: "com.microsoft.azure.ProxyResource.type()"
- uid: "com.microsoft.azure.ProxyResource.name()"
  name: "ProxyResource.name()"
  nameWithType: "ProxyResource.name()"
  fullName: "com.microsoft.azure.ProxyResource.name()"
- uid: "com.microsoft.azure.Resource.location()"
  name: "Resource.location()"
  nameWithType: "Resource.location()"
  fullName: "com.microsoft.azure.Resource.location()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.microsoft.azure.ProxyResource.id()"
  name: "ProxyResource.id()"
  nameWithType: "ProxyResource.id()"
  fullName: "com.microsoft.azure.ProxyResource.id()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  name: "Resource.withTags(Map<String,String>)"
  nameWithType: "Resource.withTags(Map<String,String>)"
  fullName: "com.microsoft.azure.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- uid: "java.lang.String,java.lang.String>)"
  name: "String,String>)"
  nameWithType: "String,String>)"
  fullName: "java.lang.String,java.lang.String>)"
- uid: "com.microsoft.azure.Resource.withTags(java.util.Map"
  name: "Resource.withTags(Map"
  nameWithType: "Resource.withTags(Map"
  fullName: "com.microsoft.azure.Resource.withTags(java.util.Map"
