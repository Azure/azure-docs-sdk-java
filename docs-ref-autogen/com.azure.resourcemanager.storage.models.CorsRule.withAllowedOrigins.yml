### YamlMime:JavaMember
uid: "com.azure.resourcemanager.storage.models.CorsRule.withAllowedOrigins*"
fullName: "com.azure.resourcemanager.storage.models.CorsRule.withAllowedOrigins"
name: "withAllowedOrigins"
nameWithType: "CorsRule.withAllowedOrigins"
members:
- uid: "com.azure.resourcemanager.storage.models.CorsRule.withAllowedOrigins(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.storage.models.CorsRule.withAllowedOrigins(List<String> allowedOrigins)"
  name: "withAllowedOrigins(List<String> allowedOrigins)"
  nameWithType: "CorsRule.withAllowedOrigins(List<String> allowedOrigins)"
  summary: "Set the allowedOrigins property: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"\\*\" to allow all domains."
  parameters:
  - description: "the allowedOrigins value to set."
    name: "allowedOrigins"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CorsRule withAllowedOrigins(List<String> allowedOrigins)"
  returns:
    description: "the CorsRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.CorsRule?alt=com.azure.resourcemanager.storage.models.CorsRule&text=CorsRule\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.storage.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
