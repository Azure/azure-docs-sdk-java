### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner"
fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner"
name: "AppServicePlanInner"
nameWithType: "AppServicePlanInner"
summary: "App Service plan."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AppServicePlanInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.AppServicePlanInner()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.AppServicePlanInner()"
  name: "AppServicePlanInner()"
  nameWithType: "AppServicePlanInner.AppServicePlanInner()"
  syntax: "public AppServicePlanInner()"
methods:
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.elasticScaleEnabled()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.elasticScaleEnabled()"
  name: "elasticScaleEnabled()"
  nameWithType: "AppServicePlanInner.elasticScaleEnabled()"
  summary: "Get the elastic<wbr>Scale<wbr>Enabled property: Server<wbr>Farm supports Elastic<wbr>Scale."
  syntax: "public Boolean elasticScaleEnabled()"
  desc: "Get the elasticScaleEnabled property: ServerFarm supports ElasticScale. Apps in this plan will scale as if the ServerFarm was ElasticPremium sku."
  returns:
    description: "the elasticScaleEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.extendedLocation()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.extendedLocation()"
  name: "extendedLocation()"
  nameWithType: "AppServicePlanInner.extendedLocation()"
  summary: "Get the extended<wbr>Location property: Extended Location."
  syntax: "public ExtendedLocation extendedLocation()"
  desc: "Get the extendedLocation property: Extended Location."
  returns:
    description: "the extendedLocation value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ExtendedLocation?alt=com.azure.resourcemanager.appservice.models.ExtendedLocation&text=ExtendedLocation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.freeOfferExpirationTime()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.freeOfferExpirationTime()"
  name: "freeOfferExpirationTime()"
  nameWithType: "AppServicePlanInner.freeOfferExpirationTime()"
  summary: "Get the free<wbr>Offer<wbr>Expiration<wbr>Time property: The time when the server farm free offer expires."
  syntax: "public OffsetDateTime freeOfferExpirationTime()"
  desc: "Get the freeOfferExpirationTime property: The time when the server farm free offer expires."
  returns:
    description: "the freeOfferExpirationTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.geoRegion()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.geoRegion()"
  name: "geoRegion()"
  nameWithType: "AppServicePlanInner.geoRegion()"
  summary: "Get the geo<wbr>Region property: Geographical location for the App Service plan."
  syntax: "public String geoRegion()"
  desc: "Get the geoRegion property: Geographical location for the App Service plan."
  returns:
    description: "the geoRegion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.hostingEnvironmentProfile()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.hostingEnvironmentProfile()"
  name: "hostingEnvironmentProfile()"
  nameWithType: "AppServicePlanInner.hostingEnvironmentProfile()"
  summary: "Get the hosting<wbr>Environment<wbr>Profile property: Specification for the App Service Environment to use for the App Service plan."
  syntax: "public HostingEnvironmentProfile hostingEnvironmentProfile()"
  desc: "Get the hostingEnvironmentProfile property: Specification for the App Service Environment to use for the App Service plan."
  returns:
    description: "the hostingEnvironmentProfile value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.HostingEnvironmentProfile?alt=com.azure.resourcemanager.appservice.models.HostingEnvironmentProfile&text=HostingEnvironmentProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.hyperV()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.hyperV()"
  name: "hyperV()"
  nameWithType: "AppServicePlanInner.hyperV()"
  summary: "Get the hyperV property: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise."
  syntax: "public Boolean hyperV()"
  desc: "Get the hyperV property: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise."
  returns:
    description: "the hyperV value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.isSpot()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.isSpot()"
  name: "isSpot()"
  nameWithType: "AppServicePlanInner.isSpot()"
  summary: "Get the is<wbr>Spot property: If <code>true</code>, this App Service Plan owns spot instances."
  syntax: "public Boolean isSpot()"
  desc: "Get the isSpot property: If <code>true</code>, this App Service Plan owns spot instances."
  returns:
    description: "the isSpot value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.isXenon()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.isXenon()"
  name: "isXenon()"
  nameWithType: "AppServicePlanInner.isXenon()"
  summary: "Get the is<wbr>Xenon property: Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise."
  syntax: "public Boolean isXenon()"
  desc: "Get the isXenon property: Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise."
  returns:
    description: "the isXenon value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.kind()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.kind()"
  name: "kind()"
  nameWithType: "AppServicePlanInner.kind()"
  summary: "Get the kind property: Kind of resource."
  syntax: "public String kind()"
  desc: "Get the kind property: Kind of resource."
  returns:
    description: "the kind value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.kubeEnvironmentProfile()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.kubeEnvironmentProfile()"
  name: "kubeEnvironmentProfile()"
  nameWithType: "AppServicePlanInner.kubeEnvironmentProfile()"
  summary: "Get the kube<wbr>Environment<wbr>Profile property: Specification for the Kubernetes Environment to use for the App Service plan."
  syntax: "public KubeEnvironmentProfile kubeEnvironmentProfile()"
  desc: "Get the kubeEnvironmentProfile property: Specification for the Kubernetes Environment to use for the App Service plan."
  returns:
    description: "the kubeEnvironmentProfile value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.KubeEnvironmentProfile?alt=com.azure.resourcemanager.appservice.models.KubeEnvironmentProfile&text=KubeEnvironmentProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.maximumElasticWorkerCount()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.maximumElasticWorkerCount()"
  name: "maximumElasticWorkerCount()"
  nameWithType: "AppServicePlanInner.maximumElasticWorkerCount()"
  summary: "Get the maximum<wbr>Elastic<wbr>Worker<wbr>Count property: Maximum number of total workers allowed for this Elastic<wbr>Scale<wbr>Enabled App Service Plan."
  syntax: "public Integer maximumElasticWorkerCount()"
  desc: "Get the maximumElasticWorkerCount property: Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan."
  returns:
    description: "the maximumElasticWorkerCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.maximumNumberOfWorkers()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.maximumNumberOfWorkers()"
  name: "maximumNumberOfWorkers()"
  nameWithType: "AppServicePlanInner.maximumNumberOfWorkers()"
  summary: "Get the maximum<wbr>Number<wbr>OfWorkers property: Maximum number of instances that can be assigned to this App Service plan."
  syntax: "public Integer maximumNumberOfWorkers()"
  desc: "Get the maximumNumberOfWorkers property: Maximum number of instances that can be assigned to this App Service plan."
  returns:
    description: "the maximumNumberOfWorkers value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.numberOfSites()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.numberOfSites()"
  name: "numberOfSites()"
  nameWithType: "AppServicePlanInner.numberOfSites()"
  summary: "Get the number<wbr>OfSites property: Number of apps assigned to this App Service plan."
  syntax: "public Integer numberOfSites()"
  desc: "Get the numberOfSites property: Number of apps assigned to this App Service plan."
  returns:
    description: "the numberOfSites value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.perSiteScaling()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.perSiteScaling()"
  name: "perSiteScaling()"
  nameWithType: "AppServicePlanInner.perSiteScaling()"
  summary: "Get the per<wbr>Site<wbr>Scaling property: If <code>true</code>, apps assigned to this App Service plan can be scaled independently."
  syntax: "public Boolean perSiteScaling()"
  desc: "Get the perSiteScaling property: If <code>true</code>, apps assigned to this App Service plan can be scaled independently. If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan."
  returns:
    description: "the perSiteScaling value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.provisioningState()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "AppServicePlanInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning state of the App Service Plan."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning state of the App Service Plan."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProvisioningState?alt=com.azure.resourcemanager.appservice.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.reserved()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.reserved()"
  name: "reserved()"
  nameWithType: "AppServicePlanInner.reserved()"
  summary: "Get the reserved property: If Linux app service plan <code>true</code>, <code>false</code> otherwise."
  syntax: "public Boolean reserved()"
  desc: "Get the reserved property: If Linux app service plan <code>true</code>, <code>false</code> otherwise."
  returns:
    description: "the reserved value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.resourceGroup()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.resourceGroup()"
  name: "resourceGroup()"
  nameWithType: "AppServicePlanInner.resourceGroup()"
  summary: "Get the resource<wbr>Group property: Resource group of the App Service plan."
  syntax: "public String resourceGroup()"
  desc: "Get the resourceGroup property: Resource group of the App Service plan."
  returns:
    description: "the resourceGroup value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.sku()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.sku()"
  name: "sku()"
  nameWithType: "AppServicePlanInner.sku()"
  summary: "Get the sku property: Description of a SKU for a scalable resource."
  syntax: "public SkuDescription sku()"
  desc: "Get the sku property: Description of a SKU for a scalable resource."
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.SkuDescription?alt=com.azure.resourcemanager.appservice.models.SkuDescription&text=SkuDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.spotExpirationTime()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.spotExpirationTime()"
  name: "spotExpirationTime()"
  nameWithType: "AppServicePlanInner.spotExpirationTime()"
  summary: "Get the spot<wbr>Expiration<wbr>Time property: The time when the server farm expires."
  syntax: "public OffsetDateTime spotExpirationTime()"
  desc: "Get the spotExpirationTime property: The time when the server farm expires. Valid only if it is a spot server farm."
  returns:
    description: "the spotExpirationTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.status()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.status()"
  name: "status()"
  nameWithType: "AppServicePlanInner.status()"
  summary: "Get the status property: App Service plan status."
  syntax: "public StatusOptions status()"
  desc: "Get the status property: App Service plan status."
  returns:
    description: "the status value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.StatusOptions?alt=com.azure.resourcemanager.appservice.models.StatusOptions&text=StatusOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.subscription()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.subscription()"
  name: "subscription()"
  nameWithType: "AppServicePlanInner.subscription()"
  summary: "Get the subscription property: App Service plan subscription."
  syntax: "public String subscription()"
  desc: "Get the subscription property: App Service plan subscription."
  returns:
    description: "the subscription value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.targetWorkerCount()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.targetWorkerCount()"
  name: "targetWorkerCount()"
  nameWithType: "AppServicePlanInner.targetWorkerCount()"
  summary: "Get the target<wbr>Worker<wbr>Count property: Scaling worker count."
  syntax: "public Integer targetWorkerCount()"
  desc: "Get the targetWorkerCount property: Scaling worker count."
  returns:
    description: "the targetWorkerCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.targetWorkerSizeId()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.targetWorkerSizeId()"
  name: "targetWorkerSizeId()"
  nameWithType: "AppServicePlanInner.targetWorkerSizeId()"
  summary: "Get the target<wbr>Worker<wbr>Size<wbr>Id property: Scaling worker size ID."
  syntax: "public Integer targetWorkerSizeId()"
  desc: "Get the targetWorkerSizeId property: Scaling worker size ID."
  returns:
    description: "the targetWorkerSizeId value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.validate()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.validate()"
  name: "validate()"
  nameWithType: "AppServicePlanInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withElasticScaleEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withElasticScaleEnabled(Boolean elasticScaleEnabled)"
  name: "withElasticScaleEnabled(Boolean elasticScaleEnabled)"
  nameWithType: "AppServicePlanInner.withElasticScaleEnabled(Boolean elasticScaleEnabled)"
  summary: "Set the elastic<wbr>Scale<wbr>Enabled property: Server<wbr>Farm supports Elastic<wbr>Scale."
  parameters:
  - description: "the elasticScaleEnabled value to set."
    name: "elasticScaleEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withElasticScaleEnabled(Boolean elasticScaleEnabled)"
  desc: "Set the elasticScaleEnabled property: ServerFarm supports ElasticScale. Apps in this plan will scale as if the ServerFarm was ElasticPremium sku."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withExtendedLocation(com.azure.resourcemanager.appservice.models.ExtendedLocation)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withExtendedLocation(ExtendedLocation extendedLocation)"
  name: "withExtendedLocation(ExtendedLocation extendedLocation)"
  nameWithType: "AppServicePlanInner.withExtendedLocation(ExtendedLocation extendedLocation)"
  summary: "Set the extended<wbr>Location property: Extended Location."
  parameters:
  - description: "the extendedLocation value to set."
    name: "extendedLocation"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ExtendedLocation?alt=com.azure.resourcemanager.appservice.models.ExtendedLocation&text=ExtendedLocation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withExtendedLocation(ExtendedLocation extendedLocation)"
  desc: "Set the extendedLocation property: Extended Location."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withFreeOfferExpirationTime(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withFreeOfferExpirationTime(OffsetDateTime freeOfferExpirationTime)"
  name: "withFreeOfferExpirationTime(OffsetDateTime freeOfferExpirationTime)"
  nameWithType: "AppServicePlanInner.withFreeOfferExpirationTime(OffsetDateTime freeOfferExpirationTime)"
  summary: "Set the free<wbr>Offer<wbr>Expiration<wbr>Time property: The time when the server farm free offer expires."
  parameters:
  - description: "the freeOfferExpirationTime value to set."
    name: "freeOfferExpirationTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withFreeOfferExpirationTime(OffsetDateTime freeOfferExpirationTime)"
  desc: "Set the freeOfferExpirationTime property: The time when the server farm free offer expires."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withHostingEnvironmentProfile(com.azure.resourcemanager.appservice.models.HostingEnvironmentProfile)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withHostingEnvironmentProfile(HostingEnvironmentProfile hostingEnvironmentProfile)"
  name: "withHostingEnvironmentProfile(HostingEnvironmentProfile hostingEnvironmentProfile)"
  nameWithType: "AppServicePlanInner.withHostingEnvironmentProfile(HostingEnvironmentProfile hostingEnvironmentProfile)"
  summary: "Set the hosting<wbr>Environment<wbr>Profile property: Specification for the App Service Environment to use for the App Service plan."
  parameters:
  - description: "the hostingEnvironmentProfile value to set."
    name: "hostingEnvironmentProfile"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.HostingEnvironmentProfile?alt=com.azure.resourcemanager.appservice.models.HostingEnvironmentProfile&text=HostingEnvironmentProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withHostingEnvironmentProfile(HostingEnvironmentProfile hostingEnvironmentProfile)"
  desc: "Set the hostingEnvironmentProfile property: Specification for the App Service Environment to use for the App Service plan."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withHyperV(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withHyperV(Boolean hyperV)"
  name: "withHyperV(Boolean hyperV)"
  nameWithType: "AppServicePlanInner.withHyperV(Boolean hyperV)"
  summary: "Set the hyperV property: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise."
  parameters:
  - description: "the hyperV value to set."
    name: "hyperV"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withHyperV(Boolean hyperV)"
  desc: "Set the hyperV property: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withIsSpot(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withIsSpot(Boolean isSpot)"
  name: "withIsSpot(Boolean isSpot)"
  nameWithType: "AppServicePlanInner.withIsSpot(Boolean isSpot)"
  summary: "Set the is<wbr>Spot property: If <code>true</code>, this App Service Plan owns spot instances."
  parameters:
  - description: "the isSpot value to set."
    name: "isSpot"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withIsSpot(Boolean isSpot)"
  desc: "Set the isSpot property: If <code>true</code>, this App Service Plan owns spot instances."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withIsXenon(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withIsXenon(Boolean isXenon)"
  name: "withIsXenon(Boolean isXenon)"
  nameWithType: "AppServicePlanInner.withIsXenon(Boolean isXenon)"
  summary: "Set the is<wbr>Xenon property: Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise."
  parameters:
  - description: "the isXenon value to set."
    name: "isXenon"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withIsXenon(Boolean isXenon)"
  desc: "Set the isXenon property: Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withKind(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withKind(String kind)"
  name: "withKind(String kind)"
  nameWithType: "AppServicePlanInner.withKind(String kind)"
  summary: "Set the kind property: Kind of resource."
  parameters:
  - description: "the kind value to set."
    name: "kind"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withKind(String kind)"
  desc: "Set the kind property: Kind of resource."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withKubeEnvironmentProfile(com.azure.resourcemanager.appservice.models.KubeEnvironmentProfile)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withKubeEnvironmentProfile(KubeEnvironmentProfile kubeEnvironmentProfile)"
  name: "withKubeEnvironmentProfile(KubeEnvironmentProfile kubeEnvironmentProfile)"
  nameWithType: "AppServicePlanInner.withKubeEnvironmentProfile(KubeEnvironmentProfile kubeEnvironmentProfile)"
  summary: "Set the kube<wbr>Environment<wbr>Profile property: Specification for the Kubernetes Environment to use for the App Service plan."
  parameters:
  - description: "the kubeEnvironmentProfile value to set."
    name: "kubeEnvironmentProfile"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.KubeEnvironmentProfile?alt=com.azure.resourcemanager.appservice.models.KubeEnvironmentProfile&text=KubeEnvironmentProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withKubeEnvironmentProfile(KubeEnvironmentProfile kubeEnvironmentProfile)"
  desc: "Set the kubeEnvironmentProfile property: Specification for the Kubernetes Environment to use for the App Service plan."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "AppServicePlanInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withMaximumElasticWorkerCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withMaximumElasticWorkerCount(Integer maximumElasticWorkerCount)"
  name: "withMaximumElasticWorkerCount(Integer maximumElasticWorkerCount)"
  nameWithType: "AppServicePlanInner.withMaximumElasticWorkerCount(Integer maximumElasticWorkerCount)"
  summary: "Set the maximum<wbr>Elastic<wbr>Worker<wbr>Count property: Maximum number of total workers allowed for this Elastic<wbr>Scale<wbr>Enabled App Service Plan."
  parameters:
  - description: "the maximumElasticWorkerCount value to set."
    name: "maximumElasticWorkerCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withMaximumElasticWorkerCount(Integer maximumElasticWorkerCount)"
  desc: "Set the maximumElasticWorkerCount property: Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withPerSiteScaling(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withPerSiteScaling(Boolean perSiteScaling)"
  name: "withPerSiteScaling(Boolean perSiteScaling)"
  nameWithType: "AppServicePlanInner.withPerSiteScaling(Boolean perSiteScaling)"
  summary: "Set the per<wbr>Site<wbr>Scaling property: If <code>true</code>, apps assigned to this App Service plan can be scaled independently."
  parameters:
  - description: "the perSiteScaling value to set."
    name: "perSiteScaling"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withPerSiteScaling(Boolean perSiteScaling)"
  desc: "Set the perSiteScaling property: If <code>true</code>, apps assigned to this App Service plan can be scaled independently. If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withReserved(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withReserved(Boolean reserved)"
  name: "withReserved(Boolean reserved)"
  nameWithType: "AppServicePlanInner.withReserved(Boolean reserved)"
  summary: "Set the reserved property: If Linux app service plan <code>true</code>, <code>false</code> otherwise."
  parameters:
  - description: "the reserved value to set."
    name: "reserved"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withReserved(Boolean reserved)"
  desc: "Set the reserved property: If Linux app service plan <code>true</code>, <code>false</code> otherwise."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withSku(com.azure.resourcemanager.appservice.models.SkuDescription)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withSku(SkuDescription sku)"
  name: "withSku(SkuDescription sku)"
  nameWithType: "AppServicePlanInner.withSku(SkuDescription sku)"
  summary: "Set the sku property: Description of a SKU for a scalable resource."
  parameters:
  - description: "the sku value to set."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.SkuDescription?alt=com.azure.resourcemanager.appservice.models.SkuDescription&text=SkuDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withSku(SkuDescription sku)"
  desc: "Set the sku property: Description of a SKU for a scalable resource."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withSpotExpirationTime(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withSpotExpirationTime(OffsetDateTime spotExpirationTime)"
  name: "withSpotExpirationTime(OffsetDateTime spotExpirationTime)"
  nameWithType: "AppServicePlanInner.withSpotExpirationTime(OffsetDateTime spotExpirationTime)"
  summary: "Set the spot<wbr>Expiration<wbr>Time property: The time when the server farm expires."
  parameters:
  - description: "the spotExpirationTime value to set."
    name: "spotExpirationTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withSpotExpirationTime(OffsetDateTime spotExpirationTime)"
  desc: "Set the spotExpirationTime property: The time when the server farm expires. Valid only if it is a spot server farm."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "AppServicePlanInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AppServicePlanInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withTargetWorkerCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withTargetWorkerCount(Integer targetWorkerCount)"
  name: "withTargetWorkerCount(Integer targetWorkerCount)"
  nameWithType: "AppServicePlanInner.withTargetWorkerCount(Integer targetWorkerCount)"
  summary: "Set the target<wbr>Worker<wbr>Count property: Scaling worker count."
  parameters:
  - description: "the targetWorkerCount value to set."
    name: "targetWorkerCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withTargetWorkerCount(Integer targetWorkerCount)"
  desc: "Set the targetWorkerCount property: Scaling worker count."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withTargetWorkerSizeId(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withTargetWorkerSizeId(Integer targetWorkerSizeId)"
  name: "withTargetWorkerSizeId(Integer targetWorkerSizeId)"
  nameWithType: "AppServicePlanInner.withTargetWorkerSizeId(Integer targetWorkerSizeId)"
  summary: "Set the target<wbr>Worker<wbr>Size<wbr>Id property: Scaling worker size ID."
  parameters:
  - description: "the targetWorkerSizeId value to set."
    name: "targetWorkerSizeId"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withTargetWorkerSizeId(Integer targetWorkerSizeId)"
  desc: "Set the targetWorkerSizeId property: Scaling worker size ID."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withWorkerTierName(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withWorkerTierName(String workerTierName)"
  name: "withWorkerTierName(String workerTierName)"
  nameWithType: "AppServicePlanInner.withWorkerTierName(String workerTierName)"
  summary: "Set the worker<wbr>Tier<wbr>Name property: Target worker tier assigned to the App Service plan."
  parameters:
  - description: "the workerTierName value to set."
    name: "workerTierName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withWorkerTierName(String workerTierName)"
  desc: "Set the workerTierName property: Target worker tier assigned to the App Service plan."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withZoneRedundant(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.withZoneRedundant(Boolean zoneRedundant)"
  name: "withZoneRedundant(Boolean zoneRedundant)"
  nameWithType: "AppServicePlanInner.withZoneRedundant(Boolean zoneRedundant)"
  summary: "Set the zone<wbr>Redundant property: If <code>true</code>, this App Service Plan will perform availability zone balancing."
  parameters:
  - description: "the zoneRedundant value to set."
    name: "zoneRedundant"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AppServicePlanInner withZoneRedundant(Boolean zoneRedundant)"
  desc: "Set the zoneRedundant property: If <code>true</code>, this App Service Plan will perform availability zone balancing. If <code>false</code>, this App Service Plan will not perform availability zone balancing."
  returns:
    description: "the AppServicePlanInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner?alt=com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner&text=AppServicePlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.workerTierName()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.workerTierName()"
  name: "workerTierName()"
  nameWithType: "AppServicePlanInner.workerTierName()"
  summary: "Get the worker<wbr>Tier<wbr>Name property: Target worker tier assigned to the App Service plan."
  syntax: "public String workerTierName()"
  desc: "Get the workerTierName property: Target worker tier assigned to the App Service plan."
  returns:
    description: "the workerTierName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.zoneRedundant()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner.zoneRedundant()"
  name: "zoneRedundant()"
  nameWithType: "AppServicePlanInner.zoneRedundant()"
  summary: "Get the zone<wbr>Redundant property: If <code>true</code>, this App Service Plan will perform availability zone balancing."
  syntax: "public Boolean zoneRedundant()"
  desc: "Get the zoneRedundant property: If <code>true</code>, this App Service Plan will perform availability zone balancing. If <code>false</code>, this App Service Plan will not perform availability zone balancing."
  returns:
    description: "the zoneRedundant value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "App Service plan."
metadata: {}
package: "com.azure.resourcemanager.appservice.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.16.0
