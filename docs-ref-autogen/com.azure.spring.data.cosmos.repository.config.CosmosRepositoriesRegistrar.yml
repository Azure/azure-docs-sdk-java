### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar
  id: CosmosRepositoriesRegistrar
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.config
  children:
  - com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.CosmosRepositoriesRegistrar()
  - com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.getAnnotation()
  - com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.getExtension()
  langs:
  - java
  name: CosmosRepositoriesRegistrar
  nameWithType: CosmosRepositoriesRegistrar
  fullName: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar
  type: Class
  package: com.azure.spring.data.cosmos.repository.config
  summary: Inherit <xref uid="org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport" data-throw-if-not-resolved="false">RepositoryBeanDefinitionRegistrarSupport</xref> class to enable repository and get extension
  syntax:
    content: public class CosmosRepositoriesRegistrar extends RepositoryBeanDefinitionRegistrarSupport
  inheritance:
  - java.lang.Object
  - org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.getAnnotation()
  - org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.getExtension()
  - org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry)
  - org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.BeanNameGenerator)
  - org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.setEnvironment(org.springframework.core.env.Environment)
  - org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.setResourceLoader(org.springframework.core.io.ResourceLoader)
- uid: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.CosmosRepositoriesRegistrar()
  id: CosmosRepositoriesRegistrar()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar
  langs:
  - java
  name: CosmosRepositoriesRegistrar()
  nameWithType: CosmosRepositoriesRegistrar.CosmosRepositoriesRegistrar()
  fullName: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.CosmosRepositoriesRegistrar()
  overload: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.CosmosRepositoriesRegistrar*
  type: Constructor
  package: com.azure.spring.data.cosmos.repository.config
  syntax:
    content: public CosmosRepositoriesRegistrar()
- uid: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.getAnnotation()
  id: getAnnotation()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar
  langs:
  - java
  name: getAnnotation()
  nameWithType: CosmosRepositoriesRegistrar.getAnnotation()
  fullName: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.getAnnotation()
  overload: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.getAnnotation*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  syntax:
    content: protected Class<? extends Annotation> getAnnotation()
    return:
      type: java.lang.Class<? extends java.lang.annotation.Annotation>
- uid: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.getExtension()
  id: getExtension()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0
  parent: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar
  langs:
  - java
  name: getExtension()
  nameWithType: CosmosRepositoriesRegistrar.getExtension()
  fullName: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.getExtension()
  overload: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.getExtension*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  syntax:
    content: protected RepositoryConfigurationExtension getExtension()
    return:
      type: org.springframework.data.repository.config.RepositoryConfigurationExtension
references:
- uid: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.CosmosRepositoriesRegistrar*
  name: CosmosRepositoriesRegistrar
  nameWithType: CosmosRepositoriesRegistrar.CosmosRepositoriesRegistrar
  fullName: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.CosmosRepositoriesRegistrar
  package: com.azure.spring.data.cosmos.repository.config
- uid: java.lang.Class<? extends java.lang.annotation.Annotation>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends java.lang.annotation.Annotation'
    name: Annotation
    fullName: '? extends java.lang.annotation.Annotation'
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.getAnnotation*
  name: getAnnotation
  nameWithType: CosmosRepositoriesRegistrar.getAnnotation
  fullName: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.getAnnotation
  package: com.azure.spring.data.cosmos.repository.config
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtension
  spec.java:
  - uid: org.springframework.data.repository.config.RepositoryConfigurationExtension
    name: RepositoryConfigurationExtension
    fullName: org.springframework.data.repository.config.RepositoryConfigurationExtension
- uid: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.getExtension*
  name: getExtension
  nameWithType: CosmosRepositoriesRegistrar.getExtension
  fullName: com.azure.spring.data.cosmos.repository.config.CosmosRepositoriesRegistrar.getExtension
  package: com.azure.spring.data.cosmos.repository.config
- uid: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport
  name: RepositoryBeanDefinitionRegistrarSupport
  nameWithType: RepositoryBeanDefinitionRegistrarSupport
  fullName: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.BeanNameGenerator)
  name: RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(AnnotationMetadata,BeanDefinitionRegistry,BeanNameGenerator)
  nameWithType: RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(AnnotationMetadata,BeanDefinitionRegistry,BeanNameGenerator)
  fullName: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.BeanNameGenerator)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry)
  name: RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(AnnotationMetadata,BeanDefinitionRegistry)
  nameWithType: RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(AnnotationMetadata,BeanDefinitionRegistry)
  fullName: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry)
- uid: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.setResourceLoader(org.springframework.core.io.ResourceLoader)
  name: RepositoryBeanDefinitionRegistrarSupport.setResourceLoader(ResourceLoader)
  nameWithType: RepositoryBeanDefinitionRegistrarSupport.setResourceLoader(ResourceLoader)
  fullName: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.setResourceLoader(org.springframework.core.io.ResourceLoader)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.setEnvironment(org.springframework.core.env.Environment)
  name: RepositoryBeanDefinitionRegistrarSupport.setEnvironment(Environment)
  nameWithType: RepositoryBeanDefinitionRegistrarSupport.setEnvironment(Environment)
  fullName: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.setEnvironment(org.springframework.core.env.Environment)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.getAnnotation()
  name: RepositoryBeanDefinitionRegistrarSupport.getAnnotation()
  nameWithType: RepositoryBeanDefinitionRegistrarSupport.getAnnotation()
  fullName: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.getAnnotation()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.getExtension()
  name: RepositoryBeanDefinitionRegistrarSupport.getExtension()
  nameWithType: RepositoryBeanDefinitionRegistrarSupport.getExtension()
  fullName: org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.getExtension()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '? extends java.lang.annotation.Annotation'
  name: '? extends Annotation'
  nameWithType: '? extends Annotation'
  fullName: '? extends java.lang.annotation.Annotation'
