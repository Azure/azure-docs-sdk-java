### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters"
  id: "DataLakeHeadersAndQueryParameters"
  parent: "com.azure.storage.file.datalake.implementation.util"
  children:
  - "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.DataLakeHeadersAndQueryParameters()"
  - "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.getDataLakeHeaders()"
  - "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.getDataLakeQueryParameters()"
  langs:
  - "java"
  name: "DataLakeHeadersAndQueryParameters"
  nameWithType: "DataLakeHeadersAndQueryParameters"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters"
  type: "Class"
  package: "com.azure.storage.file.datalake.implementation.util"
  summary: "Storage Data Lake whitelist headers and parameters for log options."
  syntax:
    content: "public class DataLakeHeadersAndQueryParameters"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.DataLakeHeadersAndQueryParameters()"
  id: "DataLakeHeadersAndQueryParameters()"
  parent: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters"
  langs:
  - "java"
  name: "DataLakeHeadersAndQueryParameters()"
  nameWithType: "DataLakeHeadersAndQueryParameters.DataLakeHeadersAndQueryParameters()"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.DataLakeHeadersAndQueryParameters()"
  overload: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.DataLakeHeadersAndQueryParameters*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.implementation.util"
  syntax:
    content: "public DataLakeHeadersAndQueryParameters()"
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.getDataLakeHeaders()"
  id: "getDataLakeHeaders()"
  parent: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters"
  langs:
  - "java"
  name: "getDataLakeHeaders()"
  nameWithType: "DataLakeHeadersAndQueryParameters.getDataLakeHeaders()"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.getDataLakeHeaders()"
  overload: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.getDataLakeHeaders*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.util"
  summary: "Gets the Storage Data Lake whitelist headers for log."
  syntax:
    content: "public static Set<String> getDataLakeHeaders()"
    return:
      type: "java.util.Set<java.lang.String>"
      description: "the list of Storage Data Lake whitelist headers."
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.getDataLakeQueryParameters()"
  id: "getDataLakeQueryParameters()"
  parent: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters"
  langs:
  - "java"
  name: "getDataLakeQueryParameters()"
  nameWithType: "DataLakeHeadersAndQueryParameters.getDataLakeQueryParameters()"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.getDataLakeQueryParameters()"
  overload: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.getDataLakeQueryParameters*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation.util"
  summary: "Gets the Storage Data Lake whitelist query parameters for log."
  syntax:
    content: "public static Set<String> getDataLakeQueryParameters()"
    return:
      type: "java.util.Set<java.lang.String>"
      description: "the list of Storage Data Lake whitelist query parameters."
references:
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.DataLakeHeadersAndQueryParameters*"
  name: "DataLakeHeadersAndQueryParameters"
  nameWithType: "DataLakeHeadersAndQueryParameters.DataLakeHeadersAndQueryParameters"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.DataLakeHeadersAndQueryParameters"
  package: "com.azure.storage.file.datalake.implementation.util"
- uid: "java.util.Set<java.lang.String>"
  spec.java:
  - uid: "java.util.Set"
    name: "Set"
    fullName: "java.util.Set"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.getDataLakeHeaders*"
  name: "getDataLakeHeaders"
  nameWithType: "DataLakeHeadersAndQueryParameters.getDataLakeHeaders"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.getDataLakeHeaders"
  package: "com.azure.storage.file.datalake.implementation.util"
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.getDataLakeQueryParameters*"
  name: "getDataLakeQueryParameters"
  nameWithType: "DataLakeHeadersAndQueryParameters.getDataLakeQueryParameters"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeHeadersAndQueryParameters.getDataLakeQueryParameters"
  package: "com.azure.storage.file.datalake.implementation.util"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Set"
  name: "Set"
  nameWithType: "Set"
  fullName: "java.util.Set"
- uid: "java.lang.String"
  name: "String"
  nameWithType: "String"
  fullName: "java.lang.String"
