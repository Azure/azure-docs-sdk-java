### YamlMime:JavaMember
nameWithType: MultiShardStatement.executeQuery
type: method
members:
- fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery()
  name: executeQuery()
  nameWithType: MultiShardStatement.executeQuery()
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the commandText is null or empty </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the CommandTimeout elapsed prior to completion </p>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false">MultiShardResultSet</xref> instance with the overall concatenated result set. </p>
    type: <xref href="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet?alt=com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet&text=MultiShardResultSet" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The ExecuteReader methods of the MultiShardStatement execute the given command statement on each shard and return the concatenation (i.e. UNION ALL) of the individual results from the shards in a <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false">MultiShardResultSet</xref>. The execution policy regarding result completeness can be controlled by setting the MultiShardExecutionPolicy. The default execution policy is to return complete results.</p>

    <p></p>
  syntax: public MultiShardResultSet executeQuery()
  uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery()
- fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery(CommandBehavior behavior)
  name: executeQuery(CommandBehavior behavior)
  nameWithType: MultiShardStatement.executeQuery(CommandBehavior behavior)
  parameters:
  - description: <p>specifies the CommandBehavior to use. </p>
    name: behavior
    type: <xref href="com.microsoft.azure.elasticdb.query.logging.CommandBehavior?alt=com.microsoft.azure.elasticdb.query.logging.CommandBehavior&text=CommandBehavior" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the commandText is null or empty </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the CommandTimeout elapsed prior to completion </p>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false">MultiShardResultSet</xref> instance with the overall concatenated ResultSet. </p>
    type: <xref href="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet?alt=com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet&text=MultiShardResultSet" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The ExecuteReader methods of the MultiShardStatement execute the given command statement on each shard and return the concatenation (i.e. UNION ALL) of the individual results from the shards in a <xref uid="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet" data-throw-if-not-resolved="false">MultiShardResultSet</xref>. The execution policy regarding result completeness can be controlled by setting the MultiShardExecutionPolicy. The default execution policy is to return complete results.</p>

    <p></p>
  syntax: public MultiShardResultSet executeQuery(CommandBehavior behavior)
  uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery(CommandBehavior)
- fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  name: executeQuery(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  nameWithType: MultiShardStatement.executeQuery(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  parameters:
  - description: <p>Command behavior to use </p>
    name: behavior
    type: <xref href="com.microsoft.azure.elasticdb.query.logging.CommandBehavior?alt=com.microsoft.azure.elasticdb.query.logging.CommandBehavior&text=CommandBehavior" data-throw-if-not-resolved="False"/>
  - description: <p>The retry policy to use when executing commands against the shards </p>
    name: commandRetryPolicy
    type: <xref href="com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy?alt=com.microsoft.azure.elasticdb.core.commons.transientfaulthandling.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
  - description: <p>The execution policy to use </p>
    name: executionPolicy
    type: <xref href="com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionPolicy?alt=com.microsoft.azure.elasticdb.query.logging.MultiShardExecutionPolicy&text=MultiShardExecutionPolicy" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>If the commandText is null or empty </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>If the commandTimeout elapsed prior to completion </p>
  - type: <xref href="MultiShardAggregateException?alt=MultiShardAggregateException&text=MultiShardAggregateException" data-throw-if-not-resolved="False"/>
    description: <p>If one or more errors occurred while executing the query </p>
  returns:
    description: <p>MultiShardResultSet instance that encompasses results from all shards </p>
    type: <xref href="com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet?alt=com.microsoft.azure.elasticdb.query.multishard.MultiShardResultSet&text=MultiShardResultSet" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Runs the given query against all shards and returns a reader that encompasses results from them. Design Principles - Commands are executed in a parallel, non-blocking manner. - Only the calling thread is blocked until the command is complete against all shards.</p>

    <p></p>
  syntax: public MultiShardResultSet executeQuery(CommandBehavior behavior, RetryPolicy commandRetryPolicy, MultiShardExecutionPolicy executionPolicy)
  uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery(CommandBehavior,RetryPolicy,MultiShardExecutionPolicy)
uid: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery*
fullName: com.microsoft.azure.elasticdb.query.multishard.MultiShardStatement.executeQuery()
name: executeQuery()
package: com.microsoft.azure.elasticdb.query.multishard
metadata: {}
