### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.models.PoolInformation.withPoolId*"
fullName: "com.microsoft.azure.batch.protocol.models.PoolInformation.withPoolId"
name: "withPoolId"
nameWithType: "PoolInformation.withPoolId"
members:
- uid: "com.microsoft.azure.batch.protocol.models.PoolInformation.withPoolId(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.PoolInformation.withPoolId(String poolId)"
  name: "withPoolId(String poolId)"
  nameWithType: "PoolInformation.withPoolId(String poolId)"
  summary: "Set you must ensure that the Pool referenced by this property exists. If the Pool does not exist at the time the Batch service tries to schedule a Job, no Tasks for the Job will run until you create a Pool with that id. Note that the Batch service will not reject the Job request; it will simply not run Tasks until the Pool exists. You must specify either the Pool ID or the auto Pool specification, but not both."
  parameters:
  - description: "the poolId value to set"
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolInformation withPoolId(String poolId)"
  returns:
    description: "the PoolInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:8.0.0
