### YamlMime:JavaMember
nameWithType: ServiceRemotingListenerFactory.create
type: method
members:
- fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListenerFactory.create(T serviceImplementation, ServiceContext serviceContext)
  name: create(T serviceImplementation, ServiceContext serviceContext)
  nameWithType: ServiceRemotingListenerFactory.create(T serviceImplementation, ServiceContext serviceContext)
  parameters:
  - description: <p>A stateful service implementation. </p>
    name: serviceImplementation
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  - description: <p>The context under which the service is operating. </p>
    name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  returns:
    description: >-
      <p>A <xref uid="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener</xref> communication listener that remotes the interfaces deriving from <xref uid="microsoft.servicefabric.services.remoting.Service" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.Service</xref> interface.<code>&lt;T&gt;Â 

          </code> Type constraint on the service implementation. The service implementation must derive from <xref uid="microsoft.servicefabric.services.runtime.StatefulServiceBase" data-throw-if-not-resolved="false">microsoft.servicefabric.services.runtime.StatefulServiceBase</xref> and implement one or more interfaces that derive from <xref uid="microsoft.servicefabric.services.remoting.Service" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.Service</xref> interface. </p>
    type: static&lt;T extends <xref href="microsoft.servicefabric.services.remoting.Service?alt=microsoft.servicefabric.services.remoting.Service&text=Service" data-throw-if-not-resolved="False"/>&gt; <xref href="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener?alt=microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener&text=ServiceRemotingListener" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>An static method that creates a <xref uid="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener</xref> for a stateful service implementation.</p>

    <p></p>
  syntax: public static static<T extends Service> ServiceRemotingListener create(T serviceImplementation, ServiceContext serviceContext)
  uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListenerFactory.create(T,ServiceContext)
uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListenerFactory.create*
fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListenerFactory.create(T serviceImplementation, ServiceContext serviceContext)
name: create(T serviceImplementation, ServiceContext serviceContext)
package: microsoft.servicefabric.services.remoting.runtime
metadata: {}
