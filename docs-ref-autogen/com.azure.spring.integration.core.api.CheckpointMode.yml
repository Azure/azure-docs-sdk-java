### YamlMime:JavaEnum
uid: "com.azure.spring.integration.core.api.CheckpointMode"
fullName: "com.azure.spring.integration.core.api.CheckpointMode"
name: "CheckpointMode"
nameWithType: "CheckpointMode"
summary: "The Checkpoint mode."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum CheckpointMode extends Enum<CheckpointMode>"
fields:
- uid: "com.azure.spring.integration.core.api.CheckpointMode.BATCH"
  fullName: "com.azure.spring.integration.core.api.CheckpointMode.BATCH"
  name: "BATCH"
  nameWithType: "CheckpointMode.BATCH"
  summary: "Checkpoint after each processed batch of records."
- uid: "com.azure.spring.integration.core.api.CheckpointMode.MANUAL"
  fullName: "com.azure.spring.integration.core.api.CheckpointMode.MANUAL"
  name: "MANUAL"
  nameWithType: "CheckpointMode.MANUAL"
  summary: "User decide when to checkpoint manually"
- uid: "com.azure.spring.integration.core.api.CheckpointMode.PARTITION_COUNT"
  fullName: "com.azure.spring.integration.core.api.CheckpointMode.PARTITION_COUNT"
  name: "PARTITION_COUNT"
  nameWithType: "CheckpointMode.PARTITION_COUNT"
  summary: "Checkpoint once for number of message specified by <xref uid=\"com.azure.spring.integration.core.api.CheckpointConfig.getCheckpointCount()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointConfig#getCheckpointCount()\"></xref> in each partition"
- uid: "com.azure.spring.integration.core.api.CheckpointMode.RECORD"
  fullName: "com.azure.spring.integration.core.api.CheckpointMode.RECORD"
  name: "RECORD"
  nameWithType: "CheckpointMode.RECORD"
  summary: "Checkpoint after each processed record. Makes sense only if <xref uid=\"com.azure.spring.integration.core.api.ListenerMode.RECORD\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ListenerMode#RECORD\"></xref> is used."
- uid: "com.azure.spring.integration.core.api.CheckpointMode.TIME"
  fullName: "com.azure.spring.integration.core.api.CheckpointMode.TIME"
  name: "TIME"
  nameWithType: "CheckpointMode.TIME"
  summary: "Checkpoint once for each time interval specified by <xref uid=\"com.azure.spring.integration.core.api.CheckpointConfig.getCheckpointInterval()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointConfig#getCheckpointInterval()\"></xref>"
methods:
- uid: "com.azure.spring.integration.core.api.CheckpointMode.valueOf(java.lang.String)"
  fullName: "com.azure.spring.integration.core.api.CheckpointMode.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "CheckpointMode.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CheckpointMode valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.spring.integration.core.api.CheckpointMode?alt=com.azure.spring.integration.core.api.CheckpointMode&text=CheckpointMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.spring.integration.core.api.CheckpointMode.values()"
  fullName: "com.azure.spring.integration.core.api.CheckpointMode.values()"
  name: "values()"
  nameWithType: "CheckpointMode.values()"
  syntax: "public static CheckpointMode[] values()"
  returns:
    type: "<xref href=\"com.azure.spring.integration.core.api.CheckpointMode?alt=com.azure.spring.integration.core.api.CheckpointMode&text=CheckpointMode\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.azure.spring.integration.core.api"
artifact: com.azure.spring:azure-spring-integration-core:2.0.0
