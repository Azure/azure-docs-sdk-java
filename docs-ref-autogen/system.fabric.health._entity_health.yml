items:
- uid: system.fabric.health._entity_health
  id: _entity_health
  parent: system.fabric.health
  children:
  - system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  - system.fabric.health._entity_health.getAggregatedHealthState()
  - system.fabric.health._entity_health.getHealthEvents()
  - system.fabric.health._entity_health.getUnhealthyEvaluations()
  href: system.fabric.health._entity_health.yml
  langs:
  - java
  name: EntityHealth
  nameWithType: EntityHealth
  fullName: system.fabric.health.EntityHealth
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/EntityHealth.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/health/EntityHealth.java
    startLine: 5
  package: system.fabric.health
  summary: <p>Represents the base class for all entity health related classes. </p>
  syntax:
    content: public class EntityHealth
  inheritance:
  - java.lang.Object
- uid: system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  id: EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  langs:
  - java
  name: EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  nameWithType: EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  fullName: system.fabric.health.EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  overload: system.fabric.health._entity_health.EntityHealth*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/EntityHealth.java
    startLine: 10
  package: system.fabric.health
  syntax:
    content: protected EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
    parameters:
    - id: aggregatedHealthState
      type: f75371fa
    - id: healthEvents
      type: 5618da2dsystem.fabric.health._health_eventa08ddfce
    - id: unhealthyEvaluations
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
- uid: system.fabric.health._entity_health.getAggregatedHealthState()
  id: getAggregatedHealthState()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  langs:
  - java
  name: getAggregatedHealthState()
  nameWithType: EntityHealth.getAggregatedHealthState()
  fullName: HealthState system.fabric.health.EntityHealth.getAggregatedHealthState()
  overload: system.fabric.health._entity_health.getAggregatedHealthState*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/EntityHealth.java
    startLine: 26
  package: system.fabric.health
  summary: >-
    <p>Gets the entity aggregated health state.</p>

    <p></p>
  syntax:
    content: public HealthState getAggregatedHealthState()
    return:
      type: system.fabric.health._health_state
      description: >-
        <p>

          <xref href="system.fabric.health._health_state" data-throw-if-not-resolved="false"></xref> representing the aggregated health state computed by Health Manager based on reported events on entity and its children (if any) and desired health policy. </p>
- uid: system.fabric.health._entity_health.getHealthEvents()
  id: getHealthEvents()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  langs:
  - java
  name: getHealthEvents()
  nameWithType: EntityHealth.getHealthEvents()
  fullName: List<HealthEvent> system.fabric.health.EntityHealth.getHealthEvents()
  overload: system.fabric.health._entity_health.getHealthEvents*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/EntityHealth.java
    startLine: 39
  package: system.fabric.health
  summary: >-
    <p>Gets the health events reported on the entity.</p>

    <p>

      <bold>Remarks:</bold>The health events are created based on health reports sent to health store. They contain additional metadata added by health store. </p>
  syntax:
    content: public List<HealthEvent> getHealthEvents()
    return:
      type: 5618da2dsystem.fabric.health._health_eventa08ddfce
      description: <p>The health events reported on the entity. </p>
- uid: system.fabric.health._entity_health.getUnhealthyEvaluations()
  id: getUnhealthyEvaluations()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  langs:
  - java
  name: getUnhealthyEvaluations()
  nameWithType: EntityHealth.getUnhealthyEvaluations()
  fullName: List<HealthEvaluation> system.fabric.health.EntityHealth.getUnhealthyEvaluations()
  overload: system.fabric.health._entity_health.getUnhealthyEvaluations*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/EntityHealth.java
    startLine: 50
  package: system.fabric.health
  summary: >-
    <p>Gets the unhealthy evaluations that show why the current aggregated health state was returned by Health Manager.</p>

    <p></p>
  syntax:
    content: public List<HealthEvaluation> getUnhealthyEvaluations()
    return:
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
      description: <p>The unhealthy evaluations that describe why the current aggregated health state was returned by Health Manager. </p>
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 5618da2dsystem.fabric.health._health_eventa08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: system.fabric.health._health_event
    name: HealthEvent
    fullName: system.fabric.health.HealthEvent
    href: system.fabric.health._health_event.yml
  - name: '>'
    fullName: '>'
- uid: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: system.fabric.health._health_evaluation
    name: HealthEvaluation
    fullName: system.fabric.health.HealthEvaluation
    href: system.fabric.health._health_evaluation.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric.health._entity_health.EntityHealth*
  name: EntityHealth
  nameWithType: EntityHealth.EntityHealth
  fullName: system.fabric.health.EntityHealth.EntityHealth
  package: system.fabric.health
- uid: system.fabric.health._entity_health.getAggregatedHealthState*
  name: getAggregatedHealthState
  nameWithType: EntityHealth.getAggregatedHealthState
  fullName: HealthState system.fabric.health.EntityHealth.getAggregatedHealthState
  package: system.fabric.health
- uid: system.fabric.health._entity_health.getHealthEvents*
  name: getHealthEvents
  nameWithType: EntityHealth.getHealthEvents
  fullName: List<HealthEvent> system.fabric.health.EntityHealth.getHealthEvents
  package: system.fabric.health
- uid: system.fabric.health._entity_health.getUnhealthyEvaluations*
  name: getUnhealthyEvaluations
  nameWithType: EntityHealth.getUnhealthyEvaluations
  fullName: List<HealthEvaluation> system.fabric.health.EntityHealth.getUnhealthyEvaluations
  package: system.fabric.health
- uid: system.fabric.health._application_health
  parent: system.fabric.health
  href: system.fabric.health._application_health.yml
  name: ApplicationHealth
  nameWithType: ApplicationHealth
  fullName: system.fabric.health.ApplicationHealth
  type: Class
  summary: <p>Describes the health of an application as returned by <xref href="system.fabric._health_client.getApplicationHealthAsync(URI)" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class ApplicationHealth extends EntityHealth
- uid: system.fabric.health._cluster_health
  parent: system.fabric.health
  href: system.fabric.health._cluster_health.yml
  name: ClusterHealth
  nameWithType: ClusterHealth
  fullName: system.fabric.health.ClusterHealth
  type: Class
  summary: <p>Represents the health of the cluster, as returned by <xref href="system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription)" data-throw-if-not-resolved="false"></xref> . Contains the cluster aggregated health state and the cluster application and node health states. </p>
  syntax:
    content: public class ClusterHealth extends EntityHealth
- uid: system.fabric.health._deployed_application_health
  parent: system.fabric.health
  href: system.fabric.health._deployed_application_health.yml
  name: DeployedApplicationHealth
  nameWithType: DeployedApplicationHealth
  fullName: system.fabric.health.DeployedApplicationHealth
  type: Class
  summary: <p>Describes the health of an application deployed on a node as returned by <xref href="system.fabric._health_client.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription)" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class DeployedApplicationHealth extends EntityHealth
- uid: system.fabric.health._deployed_service_package_health
  parent: system.fabric.health
  href: system.fabric.health._deployed_service_package_health.yml
  name: DeployedServicePackageHealth
  nameWithType: DeployedServicePackageHealth
  fullName: system.fabric.health.DeployedServicePackageHealth
  type: Class
  syntax:
    content: public class DeployedServicePackageHealth extends EntityHealth
- uid: system.fabric.health._node_health
  parent: system.fabric.health
  href: system.fabric.health._node_health.yml
  name: NodeHealth
  nameWithType: NodeHealth
  fullName: system.fabric.health.NodeHealth
  type: Class
  summary: <p>Describes the health of a node as returned by <xref href="system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription)" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class NodeHealth
- uid: system.fabric.health._partition_health
  parent: system.fabric.health
  href: system.fabric.health._partition_health.yml
  name: PartitionHealth
  nameWithType: PartitionHealth
  fullName: system.fabric.health.PartitionHealth
  type: Class
  summary: <p>Describes health of a partition as returned by <xref href="system.fabric._health_client.getPartitionHealthAsync(PartitionHealthQueryDescription)" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class PartitionHealth
- uid: system.fabric.health._replica_health
  parent: system.fabric.health
  href: system.fabric.health._replica_health.yml
  name: ReplicaHealth
  nameWithType: ReplicaHealth
  fullName: system.fabric.health.ReplicaHealth
  type: Class
  summary: <p>Describes the health of a stateful service replica or a stateless service instance as returned by <xref href="system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription)" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ReplicaHealth
- uid: system.fabric.health._service_health
  parent: system.fabric.health
  href: system.fabric.health._service_health.yml
  name: ServiceHealth
  nameWithType: ServiceHealth
  fullName: system.fabric.health.ServiceHealth
  type: Class
  summary: <p>Describes the health of a service as returned by <xref href="system.fabric._health_client.getServiceHealthAsync(ServiceHealthQueryDescription)" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ServiceHealth
- uid: system.fabric.health._health_state
  parent: system.fabric.health
  href: system.fabric.health._health_state.yml
  name: HealthState
  nameWithType: HealthState
  fullName: system.fabric.health.HealthState
  type: Enum
  syntax:
    content: public enum HealthState
- uid: system.fabric.health._health_event
  parent: system.fabric.health
  href: system.fabric.health._health_event.yml
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: system.fabric.health.HealthEvent
  type: Class
  summary: <p>A <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> object is a structure which contains the health information that is used while reporting health on an entity via ReportHealth API </p>
  syntax:
    content: public class HealthEvent
- uid: system.fabric.health._health_evaluation
  parent: system.fabric.health
  href: system.fabric.health._health_evaluation.yml
  name: HealthEvaluation
  nameWithType: HealthEvaluation
  fullName: system.fabric.health.HealthEvaluation
  type: Class
  summary: <p>Represents a health evaluation which describes the data and the algorithm used by health store to evaluate the health of an entity. </p>
  syntax:
    content: public class HealthEvaluation
