### YamlMime:JavaMember
uid: "com.microsoft.azure.management.graphrbac.RoleAssignments.getByScopeAsync*"
fullName: "com.microsoft.azure.management.graphrbac.RoleAssignments.getByScopeAsync"
name: "getByScopeAsync"
nameWithType: "RoleAssignments.getByScopeAsync"
members:
- uid: "com.microsoft.azure.management.graphrbac.RoleAssignments.getByScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.graphrbac.RoleAssignments.getByScopeAsync(String scope, String name)"
  name: "getByScopeAsync(String scope, String name)"
  nameWithType: "RoleAssignments.getByScopeAsync(String scope, String name)"
  summary: "Gets the information about a role assignment based on scope and name."
  parameters:
  - description: "the scope of the role assignment"
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the role assignment"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<RoleAssignment> getByScopeAsync(String scope, String name)"
  returns:
    description: "an immutable representation of the role assignment"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.RoleAssignment?alt=com.microsoft.azure.management.graphrbac.RoleAssignment&text=RoleAssignment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.graphrbac.RoleAssignments.getByScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.graphrbac.RoleAssignment>)"
  fullName: "com.microsoft.azure.management.graphrbac.RoleAssignments.getByScopeAsync(String scope, String name, ServiceCallback<RoleAssignment> callback)"
  name: "getByScopeAsync(String scope, String name, ServiceCallback<RoleAssignment> callback)"
  nameWithType: "RoleAssignments.getByScopeAsync(String scope, String name, ServiceCallback<RoleAssignment> callback)"
  summary: "Gets the information about a role assignment based on scope and name."
  parameters:
  - description: "the scope of the role assignment"
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the role assignment"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the callback when the operation finishes"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.RoleAssignment?alt=com.microsoft.azure.management.graphrbac.RoleAssignment&text=RoleAssignment\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<RoleAssignment> getByScopeAsync(String scope, String name, ServiceCallback<RoleAssignment> callback)"
  returns:
    description: "an immutable representation of the role assignment"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.graphrbac.RoleAssignment?alt=com.microsoft.azure.management.graphrbac.RoleAssignment&text=RoleAssignment\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.graphrbac"
artifact: com.microsoft.azure:azure-mgmt-graph-rbac:1.38.1
