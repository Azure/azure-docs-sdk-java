### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.provisioning.service.Query"
fullName: "com.microsoft.azure.sdk.iot.provisioning.service.Query"
name: "Query"
nameWithType: "Query"
summary: "The query iterator.\n\nThe `Query` iterator is the result of the query factory for\n\n    | ------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | **IndividualEnrollment:** | <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClient#createIndividualEnrollmentQuery(QuerySpecification, int)\"></xref>                                                    |\n    | **EnrollmentGroup:**      | <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClient#createEnrollmentGroupQuery(QuerySpecification, int)\"></xref>                                                              |\n    | **RegistrationStatus:**   | <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClient#createEnrollmentGroupRegistrationStatusQuery(QuerySpecification, String, int)\"></xref> |\n\nOn all cases, the **QuerySpecification** contains a SQL query that must follow the [Query Language][] for the Device Provisioning Service.\n\nOptionally, an `Integer` with the **pageSize**, can determine the maximum number of the items in the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryResult\"></xref> returned by the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query.next()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#next()\"></xref>. It must be any positive integer, and if it contains 0, the Device Provisioning Service will ignore it and use a standard page size.\n\nYou can use this Object as a standard Iterator, just using the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#hasNext()\"></xref> and <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query.next()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#next()\"></xref> in a `while` loop, up to the point where the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#hasNext()\"></xref> return `false`. But, keep in mind that the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryResult\"></xref> can contain a empty list, even if the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#hasNext()\"></xref> returned `true`. For example, image that you have 10 IndividualEnrollment in the Device Provisioning Service and you created new query with the `pageSize` equals 5. The first `hasNext()` will return `true`, and the first `next()` will return a `QueryResult` with 5 items. After that you call the `hasNext`, which will returns `true`. Now, before you get the next page, somebody delete all the IndividualEnrollment, What happened, when you call the `next()`, it will return a valid `QueryResult`, but the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult.getItems()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryResult#getItems()\"></xref> will return a empty list.\n\nYou can also store a query context (QuerySpecification + ContinuationToken) and restart it in the future, from the point where you stopped.\n\nBesides the Items, the queryResult contains the continuationToken, the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.QueryResult.getContinuationToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueryResult#getContinuationToken()\"></xref> shall return it. In any point in the future, you may recreate the query using the same query factories that you used for the first time, and call <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.Query.next(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#next(String)\"></xref> providing the stored continuationToken to get the next page.\n\n\n[Query Language]: https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-query-language"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Query implements Iterator"
constructors:
- "com.microsoft.azure.sdk.iot.provisioning.service.Query.Query(com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)"
methods:
- "com.microsoft.azure.sdk.iot.provisioning.service.Query.getPageSize()"
- "com.microsoft.azure.sdk.iot.provisioning.service.Query.hasNext()"
- "com.microsoft.azure.sdk.iot.provisioning.service.Query.next()"
- "com.microsoft.azure.sdk.iot.provisioning.service.Query.next(java.lang.String)"
- "com.microsoft.azure.sdk.iot.provisioning.service.Query.setPageSize(int)"
type: "class"
implements:
- "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.sdk.iot.provisioning.service"
artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
