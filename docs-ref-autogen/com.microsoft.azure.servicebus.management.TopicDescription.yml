### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.management.TopicDescription"
fullName: "com.microsoft.azure.servicebus.management.TopicDescription"
name: "TopicDescription"
nameWithType: "TopicDescription"
summary: "Represents the metadata description of the topic."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.servicebus.management.UnknownPropertiesHolder?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class TopicDescription extends UnknownPropertiesHolder"
constructors:
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.TopicDescription(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.TopicDescription(String path)"
  name: "TopicDescription(String path)"
  nameWithType: "TopicDescription.TopicDescription(String path)"
  summary: "Initializes a new instance of Topic<wbr>Description with the specified relative path."
  parameters:
  - description: "- Path of the topic.\n             Max length is 260 chars. Cannot start or end with a slash.\n             Cannot have restricted characters: '@','?','#','*'"
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TopicDescription(String path)"
  desc: "Initializes a new instance of TopicDescription with the specified relative path."
methods:
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.equals(java.lang.Object)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.equals(Object o)"
  name: "equals(Object o)"
  nameWithType: "TopicDescription.equals(Object o)"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  parameters:
  - name: "o"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean equals(Object o)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.getAuthorizationRules()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.getAuthorizationRules()"
  name: "getAuthorizationRules()"
  nameWithType: "TopicDescription.getAuthorizationRules()"
  syntax: "public List<AuthorizationRule> getAuthorizationRules()"
  returns:
    description: "The <xref uid=\"com.microsoft.azure.servicebus.management.AuthorizationRule\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthorizationRule\"></xref> on the topic to control user access at entity level."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.management.AuthorizationRule?alt=com.microsoft.azure.servicebus.management.AuthorizationRule&text=AuthorizationRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.getAutoDeleteOnIdle()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.getAutoDeleteOnIdle()"
  name: "getAutoDeleteOnIdle()"
  nameWithType: "TopicDescription.getAutoDeleteOnIdle()"
  syntax: "public Duration getAutoDeleteOnIdle()"
  returns:
    description: "The idle interval after which the topic is automatically deleted.\n Default value is <xref uid=\"com.microsoft.azure.servicebus.management.ManagementClientConstants.MAX_DURATION\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ManagementClientConstants#MAX_DURATION\"></xref>"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive()"
  name: "getDefaultMessageTimeToLive()"
  nameWithType: "TopicDescription.getDefaultMessageTimeToLive()"
  summary: "Time-To-live is the duration after which the message expires, starting from when the message is sent to Service Bus."
  syntax: "public Duration getDefaultMessageTimeToLive()"
  desc: "Time-To-live is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when <xref uid=\"com.microsoft.azure.servicebus.IMessage.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessage#getTimeToLive()\"></xref> is not set on a message itself. Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages."
  returns:
    description: "The default time to live value for the messages. Default value is <xref uid=\"com.microsoft.azure.servicebus.management.ManagementClientConstants.MAX_DURATION\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ManagementClientConstants#MAX_DURATION\"></xref>"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow()"
  name: "getDuplicationDetectionHistoryTimeWindow()"
  nameWithType: "TopicDescription.getDuplicationDetectionHistoryTimeWindow()"
  syntax: "public Duration getDuplicationDetectionHistoryTimeWindow()"
  returns:
    description: "The duration of duplicate detection history that is maintained by the service.\n The default value is 1 minute."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.getEntityStatus()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.getEntityStatus()"
  name: "getEntityStatus()"
  nameWithType: "TopicDescription.getEntityStatus()"
  summary: "Gets the status of the entity."
  syntax: "public EntityStatus getEntityStatus()"
  desc: "Gets the status of the entity. When an entity is disabled, that entity cannot send or receive messages."
  returns:
    description: "The current status of the topic (Enabled / Disabled).\n The default value is Enabled."
    type: "<xref href=\"com.microsoft.azure.servicebus.management.EntityStatus?alt=com.microsoft.azure.servicebus.management.EntityStatus&text=EntityStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.getMaxSizeInMB()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.getMaxSizeInMB()"
  name: "getMaxSizeInMB()"
  nameWithType: "TopicDescription.getMaxSizeInMB()"
  syntax: "public long getMaxSizeInMB()"
  returns:
    description: "the maximum size of the topic in megabytes, which is the size of memory allocated for the topic.\n Default value is 1024."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.getPath()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.getPath()"
  name: "getPath()"
  nameWithType: "TopicDescription.getPath()"
  syntax: "public String getPath()"
  returns:
    description: "the path of the topic."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.getUserMetadata()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.getUserMetadata()"
  name: "getUserMetadata()"
  nameWithType: "TopicDescription.getUserMetadata()"
  syntax: "public String getUserMetadata()"
  returns:
    description: "- Custom metdata that user can associate with the description."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.hashCode()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.hashCode()"
  name: "hashCode()"
  nameWithType: "TopicDescription.hashCode()"
  overridden: "java.lang.Object.hashCode()"
  syntax: "public int hashCode()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.isEnableBatchedOperations()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.isEnableBatchedOperations()"
  name: "isEnableBatchedOperations()"
  nameWithType: "TopicDescription.isEnableBatchedOperations()"
  syntax: "public boolean isEnableBatchedOperations()"
  returns:
    description: "Indicates whether server-side batched operations are enabled.\n Defaults to true."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.isEnablePartitioning()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.isEnablePartitioning()"
  name: "isEnablePartitioning()"
  nameWithType: "TopicDescription.isEnablePartitioning()"
  syntax: "public boolean isEnablePartitioning()"
  returns:
    description: "boolean indicating whether the topic is to be partitioned across multiple message brokers.\n Defaults to false"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection()"
  name: "isRequiresDuplicateDetection()"
  nameWithType: "TopicDescription.isRequiresDuplicateDetection()"
  summary: "If enabled, duplicate messages having same <xref uid=\"com.microsoft.azure.servicebus.IMessage.getMessageId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessage#getMessageId()\"></xref> and sent to queue within duration of <xref uid=\"com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getDuplicationDetectionHistoryTimeWindow\"></xref> will be discarded."
  syntax: "public boolean isRequiresDuplicateDetection()"
  desc: "If enabled, duplicate messages having same <xref uid=\"com.microsoft.azure.servicebus.IMessage.getMessageId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessage#getMessageId()\"></xref> and sent to queue within duration of <xref uid=\"com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getDuplicationDetectionHistoryTimeWindow\"></xref> will be discarded."
  returns:
    description: "value indicating if the queue requires guard against duplicate messages."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.isSupportOrdering()"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.isSupportOrdering()"
  name: "isSupportOrdering()"
  nameWithType: "TopicDescription.isSupportOrdering()"
  syntax: "public boolean isSupportOrdering()"
  returns:
    description: "Defines whether ordering needs to be maintained. If true, messages sent to topic will be\n forwarded to the subscription in order.\n Defaults to false"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.setAuthorizationRules(java.util.List<com.microsoft.azure.servicebus.management.AuthorizationRule>)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.setAuthorizationRules(List<AuthorizationRule> authorizationRules)"
  name: "setAuthorizationRules(List<AuthorizationRule> authorizationRules)"
  nameWithType: "TopicDescription.setAuthorizationRules(List<AuthorizationRule> authorizationRules)"
  parameters:
  - description: "- The <xref uid=\"com.microsoft.azure.servicebus.management.AuthorizationRule\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthorizationRule\"></xref> on the topic to control user access at entity level."
    name: "authorizationRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.management.AuthorizationRule?alt=com.microsoft.azure.servicebus.management.AuthorizationRule&text=AuthorizationRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void setAuthorizationRules(List<AuthorizationRule> authorizationRules)"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.setAutoDeleteOnIdle(java.time.Duration)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)"
  name: "setAutoDeleteOnIdle(Duration autoDeleteOnIdle)"
  nameWithType: "TopicDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)"
  parameters:
  - description: "- The idle interval after which the topic is automatically deleted.\n The minimum duration is 5 minutes."
    name: "autoDeleteOnIdle"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setAutoDeleteOnIdle(Duration autoDeleteOnIdle)"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.setDefaultMessageTimeToLive(java.time.Duration)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)"
  name: "setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)"
  nameWithType: "TopicDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)"
  parameters:
  - description: "- Sets the default message time to live value.\n Value cannot be lower than 1 second.\n See <xref uid=\"com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getDefaultMessageTimeToLive()\"></xref>"
    name: "defaultMessageTimeToLive"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.setDuplicationDetectionHistoryTimeWindow(java.time.Duration)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)"
  name: "setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)"
  nameWithType: "TopicDescription.setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)"
  parameters:
  - description: "- The duration of duplicate detection history that is maintained by the service.\n Max value is 1 day and minimum is 20 seconds."
    name: "duplicationDetectionHistoryTimeWindow"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.setEnableBatchedOperations(boolean)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.setEnableBatchedOperations(boolean enableBatchedOperations)"
  name: "setEnableBatchedOperations(boolean enableBatchedOperations)"
  nameWithType: "TopicDescription.setEnableBatchedOperations(boolean enableBatchedOperations)"
  parameters:
  - description: "- Indicates whether server-side batched operations are enabled."
    name: "enableBatchedOperations"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setEnableBatchedOperations(boolean enableBatchedOperations)"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.setEnablePartitioning(boolean)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.setEnablePartitioning(boolean enablePartitioning)"
  name: "setEnablePartitioning(boolean enablePartitioning)"
  nameWithType: "TopicDescription.setEnablePartitioning(boolean enablePartitioning)"
  parameters:
  - description: "- true if topic is to be partitioned across multiple message brokers."
    name: "enablePartitioning"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setEnablePartitioning(boolean enablePartitioning)"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.setEntityStatus(com.microsoft.azure.servicebus.management.EntityStatus)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.setEntityStatus(EntityStatus status)"
  name: "setEntityStatus(EntityStatus status)"
  nameWithType: "TopicDescription.setEntityStatus(EntityStatus status)"
  parameters:
  - description: "- the status of the topic (Enabled / Disabled).\n When an entity is disabled, that entity cannot send or receive messages."
    name: "status"
    type: "<xref href=\"com.microsoft.azure.servicebus.management.EntityStatus?alt=com.microsoft.azure.servicebus.management.EntityStatus&text=EntityStatus\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setEntityStatus(EntityStatus status)"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.setMaxSizeInMB(long)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.setMaxSizeInMB(long maxSize)"
  name: "setMaxSizeInMB(long maxSize)"
  nameWithType: "TopicDescription.setMaxSizeInMB(long maxSize)"
  parameters:
  - description: "- Sets the maximum size of the topic in megabytes, which is the size of memory allocated for the topic."
    name: "maxSize"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setMaxSizeInMB(long maxSize)"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.setRequiresDuplicateDetection(boolean)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.setRequiresDuplicateDetection(boolean requiresDuplicateDetection)"
  name: "setRequiresDuplicateDetection(boolean requiresDuplicateDetection)"
  nameWithType: "TopicDescription.setRequiresDuplicateDetection(boolean requiresDuplicateDetection)"
  parameters:
  - description: "- Set to true if duplicate detection needs to be enabled.\n See also - <xref uid=\"com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#isRequiresDuplicateDetection()\"></xref>"
    name: "requiresDuplicateDetection"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setRequiresDuplicateDetection(boolean requiresDuplicateDetection)"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.setSupportOrdering(boolean)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.setSupportOrdering(boolean supportOrdering)"
  name: "setSupportOrdering(boolean supportOrdering)"
  nameWithType: "TopicDescription.setSupportOrdering(boolean supportOrdering)"
  parameters:
  - description: "- Defines whether ordering needs to be maintained. If true, messages sent to topic will be\n forwarded to the subscription in order."
    name: "supportOrdering"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setSupportOrdering(boolean supportOrdering)"
- uid: "com.microsoft.azure.servicebus.management.TopicDescription.setUserMetadata(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.TopicDescription.setUserMetadata(String userMetadata)"
  name: "setUserMetadata(String userMetadata)"
  nameWithType: "TopicDescription.setUserMetadata(String userMetadata)"
  parameters:
  - description: "- Custom metdata that user can associate with the description.\n Cannot be null. Max length is 1024 chars"
    name: "userMetadata"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setUserMetadata(String userMetadata)"
type: "class"
desc: "Represents the metadata description of the topic."
metadata: {}
package: "com.microsoft.azure.servicebus.management"
artifact: com.microsoft.azure:azure-servicebus:3.6.6
