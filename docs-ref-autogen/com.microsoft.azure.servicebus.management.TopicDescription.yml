### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.management.TopicDescription
  id: TopicDescription
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management
  children:
  - com.microsoft.azure.servicebus.management.TopicDescription.TopicDescription(java.lang.String)
  - com.microsoft.azure.servicebus.management.TopicDescription.equals(java.lang.Object)
  - com.microsoft.azure.servicebus.management.TopicDescription.getAuthorizationRules()
  - com.microsoft.azure.servicebus.management.TopicDescription.getAutoDeleteOnIdle()
  - com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive()
  - com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow()
  - com.microsoft.azure.servicebus.management.TopicDescription.getEntityStatus()
  - com.microsoft.azure.servicebus.management.TopicDescription.getMaxSizeInMB()
  - com.microsoft.azure.servicebus.management.TopicDescription.getPath()
  - com.microsoft.azure.servicebus.management.TopicDescription.getUserMetadata()
  - com.microsoft.azure.servicebus.management.TopicDescription.hashCode()
  - com.microsoft.azure.servicebus.management.TopicDescription.isEnableBatchedOperations()
  - com.microsoft.azure.servicebus.management.TopicDescription.isEnablePartitioning()
  - com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection()
  - com.microsoft.azure.servicebus.management.TopicDescription.isSupportOrdering()
  - com.microsoft.azure.servicebus.management.TopicDescription.setAuthorizationRules(java.util.List<com.microsoft.azure.servicebus.management.AuthorizationRule>)
  - com.microsoft.azure.servicebus.management.TopicDescription.setAutoDeleteOnIdle(java.time.Duration)
  - com.microsoft.azure.servicebus.management.TopicDescription.setDefaultMessageTimeToLive(java.time.Duration)
  - com.microsoft.azure.servicebus.management.TopicDescription.setDuplicationDetectionHistoryTimeWindow(java.time.Duration)
  - com.microsoft.azure.servicebus.management.TopicDescription.setEnableBatchedOperations(boolean)
  - com.microsoft.azure.servicebus.management.TopicDescription.setEnablePartitioning(boolean)
  - com.microsoft.azure.servicebus.management.TopicDescription.setEntityStatus(com.microsoft.azure.servicebus.management.EntityStatus)
  - com.microsoft.azure.servicebus.management.TopicDescription.setMaxSizeInMB(long)
  - com.microsoft.azure.servicebus.management.TopicDescription.setRequiresDuplicateDetection(boolean)
  - com.microsoft.azure.servicebus.management.TopicDescription.setSupportOrdering(boolean)
  - com.microsoft.azure.servicebus.management.TopicDescription.setUserMetadata(java.lang.String)
  langs:
  - java
  name: TopicDescription
  nameWithType: TopicDescription
  fullName: com.microsoft.azure.servicebus.management.TopicDescription
  type: Class
  package: com.microsoft.azure.servicebus.management
  summary: Represents the metadata description of the topic.
  syntax:
    content: public class TopicDescription
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.servicebus.management.TopicDescription.TopicDescription(java.lang.String)
  id: TopicDescription(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: TopicDescription(String path)
  nameWithType: TopicDescription.TopicDescription(String path)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.TopicDescription(String path)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.TopicDescription*
  type: Constructor
  package: com.microsoft.azure.servicebus.management
  summary: Initializes a new instance of TopicDescription with the specified relative path.
  syntax:
    content: public TopicDescription(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: >-
        - Path of the topic.
                     Max length is 260 chars. Cannot start or end with a slash.
                     Cannot have restricted characters: '@','?','#','*'
- uid: com.microsoft.azure.servicebus.management.TopicDescription.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: equals(Object o)
  nameWithType: TopicDescription.equals(Object o)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.equals(Object o)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.equals*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getAuthorizationRules()
  id: getAuthorizationRules()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: getAuthorizationRules()
  nameWithType: TopicDescription.getAuthorizationRules()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getAuthorizationRules()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.getAuthorizationRules*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public List<AuthorizationRule> getAuthorizationRules()
    return:
      type: java.util.List<com.microsoft.azure.servicebus.management.AuthorizationRule>
      description: The <xref uid="com.microsoft.azure.servicebus.management.AuthorizationRule" data-throw-if-not-resolved="false">AuthorizationRule</xref> on the topic to control user access at entity level.
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getAutoDeleteOnIdle()
  id: getAutoDeleteOnIdle()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: getAutoDeleteOnIdle()
  nameWithType: TopicDescription.getAutoDeleteOnIdle()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getAutoDeleteOnIdle()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.getAutoDeleteOnIdle*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public Duration getAutoDeleteOnIdle()
    return:
      type: java.time.Duration
      description: >-
        The idle interval after which the topic is automatically deleted.
         Default value is <xref uid="com.microsoft.azure.servicebus.management.ManagementClientConstants.MAX_DURATION" data-throw-if-not-resolved="false">ManagementClientConstants#MAX_DURATION</xref>
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive()
  id: getDefaultMessageTimeToLive()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: getDefaultMessageTimeToLive()
  nameWithType: TopicDescription.getDefaultMessageTimeToLive()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Time-To-live is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when <xref uid="com.microsoft.azure.servicebus.IMessage.getTimeToLive()" data-throw-if-not-resolved="false">IMessage#getTimeToLive()</xref> is not set on a message itself. Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages.
  syntax:
    content: public Duration getDefaultMessageTimeToLive()
    return:
      type: java.time.Duration
      description: The default time to live value for the messages. Default value is <xref uid="com.microsoft.azure.servicebus.management.ManagementClientConstants.MAX_DURATION" data-throw-if-not-resolved="false">ManagementClientConstants#MAX_DURATION</xref>
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow()
  id: getDuplicationDetectionHistoryTimeWindow()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: getDuplicationDetectionHistoryTimeWindow()
  nameWithType: TopicDescription.getDuplicationDetectionHistoryTimeWindow()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public Duration getDuplicationDetectionHistoryTimeWindow()
    return:
      type: java.time.Duration
      description: >-
        The duration of duplicate detection history that is maintained by the service.
         The default value is 1 minute.
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getEntityStatus()
  id: getEntityStatus()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: getEntityStatus()
  nameWithType: TopicDescription.getEntityStatus()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getEntityStatus()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.getEntityStatus*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Gets the status of the entity. When an entity is disabled, that entity cannot send or receive messages.
  syntax:
    content: public EntityStatus getEntityStatus()
    return:
      type: com.microsoft.azure.servicebus.management.EntityStatus
      description: >-
        The current status of the topic (Enabled / Disabled).
         The default value is Enabled.
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getMaxSizeInMB()
  id: getMaxSizeInMB()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: getMaxSizeInMB()
  nameWithType: TopicDescription.getMaxSizeInMB()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getMaxSizeInMB()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.getMaxSizeInMB*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public long getMaxSizeInMB()
    return:
      type: long
      description: >-
        the maximum size of the topic in megabytes, which is the size of memory allocated for the topic.
         Default value is 1024.
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getPath()
  id: getPath()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: getPath()
  nameWithType: TopicDescription.getPath()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getPath()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.getPath*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public String getPath()
    return:
      type: java.lang.String
      description: the path of the topic.
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getUserMetadata()
  id: getUserMetadata()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: getUserMetadata()
  nameWithType: TopicDescription.getUserMetadata()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getUserMetadata()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.getUserMetadata*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public String getUserMetadata()
    return:
      type: java.lang.String
      description: '- Custom metdata that user can associate with the description.'
- uid: com.microsoft.azure.servicebus.management.TopicDescription.hashCode()
  id: hashCode()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: hashCode()
  nameWithType: TopicDescription.hashCode()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.hashCode()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.hashCode*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.microsoft.azure.servicebus.management.TopicDescription.isEnableBatchedOperations()
  id: isEnableBatchedOperations()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: isEnableBatchedOperations()
  nameWithType: TopicDescription.isEnableBatchedOperations()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.isEnableBatchedOperations()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.isEnableBatchedOperations*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public boolean isEnableBatchedOperations()
    return:
      type: boolean
      description: >-
        Indicates whether server-side batched operations are enabled.
         Defaults to true.
- uid: com.microsoft.azure.servicebus.management.TopicDescription.isEnablePartitioning()
  id: isEnablePartitioning()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: isEnablePartitioning()
  nameWithType: TopicDescription.isEnablePartitioning()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.isEnablePartitioning()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.isEnablePartitioning*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public boolean isEnablePartitioning()
    return:
      type: boolean
      description: >-
        boolean indicating whether the topic is to be partitioned across multiple message brokers.
         Defaults to false
- uid: com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection()
  id: isRequiresDuplicateDetection()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: isRequiresDuplicateDetection()
  nameWithType: TopicDescription.isRequiresDuplicateDetection()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: If enabled, duplicate messages having same <xref uid="com.microsoft.azure.servicebus.IMessage.getMessageId()" data-throw-if-not-resolved="false">IMessage#getMessageId()</xref> and sent to queue within duration of <xref uid="com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow*" data-throw-if-not-resolved="false">#getDuplicationDetectionHistoryTimeWindow</xref> will be discarded.
  syntax:
    content: public boolean isRequiresDuplicateDetection()
    return:
      type: boolean
      description: value indicating if the queue requires guard against duplicate messages.
- uid: com.microsoft.azure.servicebus.management.TopicDescription.isSupportOrdering()
  id: isSupportOrdering()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: isSupportOrdering()
  nameWithType: TopicDescription.isSupportOrdering()
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.isSupportOrdering()
  overload: com.microsoft.azure.servicebus.management.TopicDescription.isSupportOrdering*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public boolean isSupportOrdering()
    return:
      type: boolean
      description: >-
        Defines whether ordering needs to be maintained. If true, messages sent to topic will be
         forwarded to the subscription in order.
         Defaults to false
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setAuthorizationRules(java.util.List<com.microsoft.azure.servicebus.management.AuthorizationRule>)
  id: setAuthorizationRules(java.util.List<com.microsoft.azure.servicebus.management.AuthorizationRule>)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: setAuthorizationRules(List<AuthorizationRule> authorizationRules)
  nameWithType: TopicDescription.setAuthorizationRules(List<AuthorizationRule> authorizationRules)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setAuthorizationRules(List<AuthorizationRule> authorizationRules)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.setAuthorizationRules*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setAuthorizationRules(List<AuthorizationRule> authorizationRules)
    parameters:
    - id: authorizationRules
      type: java.util.List<com.microsoft.azure.servicebus.management.AuthorizationRule>
      description: '- The <xref uid="com.microsoft.azure.servicebus.management.AuthorizationRule" data-throw-if-not-resolved="false">AuthorizationRule</xref> on the topic to control user access at entity level.'
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setAutoDeleteOnIdle(java.time.Duration)
  id: setAutoDeleteOnIdle(java.time.Duration)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  nameWithType: TopicDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.setAutoDeleteOnIdle*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
    parameters:
    - id: autoDeleteOnIdle
      type: java.time.Duration
      description: >-
        - The idle interval after which the topic is automatically deleted.
         The minimum duration is 5 minutes.
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setDefaultMessageTimeToLive(java.time.Duration)
  id: setDefaultMessageTimeToLive(java.time.Duration)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  nameWithType: TopicDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.setDefaultMessageTimeToLive*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
    parameters:
    - id: defaultMessageTimeToLive
      type: java.time.Duration
      description: >-
        - Sets the default message time to live value.
         Value cannot be lower than 1 second.
         See <xref uid="com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive()" data-throw-if-not-resolved="false">#getDefaultMessageTimeToLive()</xref>
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setDuplicationDetectionHistoryTimeWindow(java.time.Duration)
  id: setDuplicationDetectionHistoryTimeWindow(java.time.Duration)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)
  nameWithType: TopicDescription.setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.setDuplicationDetectionHistoryTimeWindow*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setDuplicationDetectionHistoryTimeWindow(Duration duplicationDetectionHistoryTimeWindow)
    parameters:
    - id: duplicationDetectionHistoryTimeWindow
      type: java.time.Duration
      description: >-
        - The duration of duplicate detection history that is maintained by the service.
         Max value is 1 day and minimum is 20 seconds.
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setEnableBatchedOperations(boolean)
  id: setEnableBatchedOperations(boolean)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: setEnableBatchedOperations(boolean enableBatchedOperations)
  nameWithType: TopicDescription.setEnableBatchedOperations(boolean enableBatchedOperations)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setEnableBatchedOperations(boolean enableBatchedOperations)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.setEnableBatchedOperations*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setEnableBatchedOperations(boolean enableBatchedOperations)
    parameters:
    - id: enableBatchedOperations
      type: boolean
      description: '- Indicates whether server-side batched operations are enabled.'
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setEnablePartitioning(boolean)
  id: setEnablePartitioning(boolean)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: setEnablePartitioning(boolean enablePartitioning)
  nameWithType: TopicDescription.setEnablePartitioning(boolean enablePartitioning)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setEnablePartitioning(boolean enablePartitioning)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.setEnablePartitioning*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setEnablePartitioning(boolean enablePartitioning)
    parameters:
    - id: enablePartitioning
      type: boolean
      description: '- true if topic is to be partitioned across multiple message brokers.'
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setEntityStatus(com.microsoft.azure.servicebus.management.EntityStatus)
  id: setEntityStatus(com.microsoft.azure.servicebus.management.EntityStatus)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: setEntityStatus(EntityStatus status)
  nameWithType: TopicDescription.setEntityStatus(EntityStatus status)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setEntityStatus(EntityStatus status)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.setEntityStatus*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setEntityStatus(EntityStatus status)
    parameters:
    - id: status
      type: com.microsoft.azure.servicebus.management.EntityStatus
      description: >-
        - the status of the topic (Enabled / Disabled).
         When an entity is disabled, that entity cannot send or receive messages.
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setMaxSizeInMB(long)
  id: setMaxSizeInMB(long)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: setMaxSizeInMB(long maxSize)
  nameWithType: TopicDescription.setMaxSizeInMB(long maxSize)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setMaxSizeInMB(long maxSize)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.setMaxSizeInMB*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setMaxSizeInMB(long maxSize)
    parameters:
    - id: maxSize
      type: long
      description: '- Sets the maximum size of the topic in megabytes, which is the size of memory allocated for the topic.'
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setRequiresDuplicateDetection(boolean)
  id: setRequiresDuplicateDetection(boolean)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: setRequiresDuplicateDetection(boolean requiresDuplicateDetection)
  nameWithType: TopicDescription.setRequiresDuplicateDetection(boolean requiresDuplicateDetection)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setRequiresDuplicateDetection(boolean requiresDuplicateDetection)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.setRequiresDuplicateDetection*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setRequiresDuplicateDetection(boolean requiresDuplicateDetection)
    parameters:
    - id: requiresDuplicateDetection
      type: boolean
      description: >-
        - Set to true if duplicate detection needs to be enabled.
         See also - <xref uid="com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection()" data-throw-if-not-resolved="false">#isRequiresDuplicateDetection()</xref>
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setSupportOrdering(boolean)
  id: setSupportOrdering(boolean)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: setSupportOrdering(boolean supportOrdering)
  nameWithType: TopicDescription.setSupportOrdering(boolean supportOrdering)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setSupportOrdering(boolean supportOrdering)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.setSupportOrdering*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setSupportOrdering(boolean supportOrdering)
    parameters:
    - id: supportOrdering
      type: boolean
      description: >-
        - Defines whether ordering needs to be maintained. If true, messages sent to topic will be
         forwarded to the subscription in order.
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setUserMetadata(java.lang.String)
  id: setUserMetadata(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.TopicDescription
  langs:
  - java
  name: setUserMetadata(String userMetadata)
  nameWithType: TopicDescription.setUserMetadata(String userMetadata)
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setUserMetadata(String userMetadata)
  overload: com.microsoft.azure.servicebus.management.TopicDescription.setUserMetadata*
  type: Method
  package: com.microsoft.azure.servicebus.management
  syntax:
    content: public void setUserMetadata(String userMetadata)
    parameters:
    - id: userMetadata
      type: java.lang.String
      description: >-
        - Custom metdata that user can associate with the description.
         Cannot be null. Max length is 1024 chars
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.servicebus.management.TopicDescription.TopicDescription*
  name: TopicDescription
  nameWithType: TopicDescription.TopicDescription
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.TopicDescription
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getPath*
  name: getPath
  nameWithType: TopicDescription.getPath
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getPath
  package: com.microsoft.azure.servicebus.management
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getMaxSizeInMB*
  name: getMaxSizeInMB
  nameWithType: TopicDescription.getMaxSizeInMB
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getMaxSizeInMB
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setMaxSizeInMB*
  name: setMaxSizeInMB
  nameWithType: TopicDescription.setMaxSizeInMB
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setMaxSizeInMB
  package: com.microsoft.azure.servicebus.management
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection*
  name: isRequiresDuplicateDetection
  nameWithType: TopicDescription.isRequiresDuplicateDetection
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.isRequiresDuplicateDetection
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setRequiresDuplicateDetection*
  name: setRequiresDuplicateDetection
  nameWithType: TopicDescription.setRequiresDuplicateDetection
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setRequiresDuplicateDetection
  package: com.microsoft.azure.servicebus.management
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive*
  name: getDefaultMessageTimeToLive
  nameWithType: TopicDescription.getDefaultMessageTimeToLive
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getDefaultMessageTimeToLive
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setDefaultMessageTimeToLive*
  name: setDefaultMessageTimeToLive
  nameWithType: TopicDescription.setDefaultMessageTimeToLive
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setDefaultMessageTimeToLive
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getAutoDeleteOnIdle*
  name: getAutoDeleteOnIdle
  nameWithType: TopicDescription.getAutoDeleteOnIdle
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getAutoDeleteOnIdle
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setAutoDeleteOnIdle*
  name: setAutoDeleteOnIdle
  nameWithType: TopicDescription.setAutoDeleteOnIdle
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setAutoDeleteOnIdle
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow*
  name: getDuplicationDetectionHistoryTimeWindow
  nameWithType: TopicDescription.getDuplicationDetectionHistoryTimeWindow
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getDuplicationDetectionHistoryTimeWindow
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setDuplicationDetectionHistoryTimeWindow*
  name: setDuplicationDetectionHistoryTimeWindow
  nameWithType: TopicDescription.setDuplicationDetectionHistoryTimeWindow
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setDuplicationDetectionHistoryTimeWindow
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.isEnableBatchedOperations*
  name: isEnableBatchedOperations
  nameWithType: TopicDescription.isEnableBatchedOperations
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.isEnableBatchedOperations
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setEnableBatchedOperations*
  name: setEnableBatchedOperations
  nameWithType: TopicDescription.setEnableBatchedOperations
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setEnableBatchedOperations
  package: com.microsoft.azure.servicebus.management
- uid: java.util.List<com.microsoft.azure.servicebus.management.AuthorizationRule>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.AuthorizationRule
    name: AuthorizationRule
    fullName: com.microsoft.azure.servicebus.management.AuthorizationRule
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getAuthorizationRules*
  name: getAuthorizationRules
  nameWithType: TopicDescription.getAuthorizationRules
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getAuthorizationRules
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setAuthorizationRules*
  name: setAuthorizationRules
  nameWithType: TopicDescription.setAuthorizationRules
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setAuthorizationRules
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.EntityStatus
  name: EntityStatus
  nameWithType: EntityStatus
  fullName: com.microsoft.azure.servicebus.management.EntityStatus
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getEntityStatus*
  name: getEntityStatus
  nameWithType: TopicDescription.getEntityStatus
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getEntityStatus
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setEntityStatus*
  name: setEntityStatus
  nameWithType: TopicDescription.setEntityStatus
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setEntityStatus
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.isEnablePartitioning*
  name: isEnablePartitioning
  nameWithType: TopicDescription.isEnablePartitioning
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.isEnablePartitioning
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setEnablePartitioning*
  name: setEnablePartitioning
  nameWithType: TopicDescription.setEnablePartitioning
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setEnablePartitioning
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.isSupportOrdering*
  name: isSupportOrdering
  nameWithType: TopicDescription.isSupportOrdering
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.isSupportOrdering
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setSupportOrdering*
  name: setSupportOrdering
  nameWithType: TopicDescription.setSupportOrdering
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setSupportOrdering
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.getUserMetadata*
  name: getUserMetadata
  nameWithType: TopicDescription.getUserMetadata
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.getUserMetadata
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription.setUserMetadata*
  name: setUserMetadata
  nameWithType: TopicDescription.setUserMetadata
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.setUserMetadata
  package: com.microsoft.azure.servicebus.management
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.microsoft.azure.servicebus.management.TopicDescription.equals*
  name: equals
  nameWithType: TopicDescription.equals
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.equals
  package: com.microsoft.azure.servicebus.management
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.servicebus.management.TopicDescription.hashCode*
  name: hashCode
  nameWithType: TopicDescription.hashCode
  fullName: com.microsoft.azure.servicebus.management.TopicDescription.hashCode
  package: com.microsoft.azure.servicebus.management
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.servicebus.management.AuthorizationRule
  name: AuthorizationRule
  nameWithType: AuthorizationRule
  fullName: com.microsoft.azure.servicebus.management.AuthorizationRule
