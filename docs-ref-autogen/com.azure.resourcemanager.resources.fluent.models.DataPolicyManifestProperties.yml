### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties"
fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties"
name: "DataPolicyManifestProperties"
nameWithType: "DataPolicyManifestProperties"
summary: "The properties of the data policy manifest."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DataPolicyManifestProperties"
constructors:
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.DataPolicyManifestProperties()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.DataPolicyManifestProperties()"
  name: "DataPolicyManifestProperties()"
  nameWithType: "DataPolicyManifestProperties.DataPolicyManifestProperties()"
  syntax: "public DataPolicyManifestProperties()"
methods:
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.custom()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.custom()"
  name: "custom()"
  nameWithType: "DataPolicyManifestProperties.custom()"
  summary: "Get the custom property: An array of data manifest custom resource definition."
  syntax: "public List<DataManifestCustomResourceFunctionDefinition> custom()"
  returns:
    description: "the custom value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.models.DataManifestCustomResourceFunctionDefinition?alt=com.azure.resourcemanager.resources.models.DataManifestCustomResourceFunctionDefinition&text=DataManifestCustomResourceFunctionDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.effects()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.effects()"
  name: "effects()"
  nameWithType: "DataPolicyManifestProperties.effects()"
  summary: "Get the effects property: The effect definition."
  syntax: "public List<DataEffect> effects()"
  returns:
    description: "the effects value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.models.DataEffect?alt=com.azure.resourcemanager.resources.models.DataEffect&text=DataEffect\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.fieldValues()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.fieldValues()"
  name: "fieldValues()"
  nameWithType: "DataPolicyManifestProperties.fieldValues()"
  summary: "Get the fieldValues property: The non-alias field accessor values that can be used in the policy rule."
  syntax: "public List<String> fieldValues()"
  returns:
    description: "the fieldValues value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.isBuiltInOnly()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.isBuiltInOnly()"
  name: "isBuiltInOnly()"
  nameWithType: "DataPolicyManifestProperties.isBuiltInOnly()"
  summary: "Get the isBuiltInOnly property: A value indicating whether policy mode is allowed only in built-in definitions."
  syntax: "public Boolean isBuiltInOnly()"
  returns:
    description: "the isBuiltInOnly value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.namespaces()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.namespaces()"
  name: "namespaces()"
  nameWithType: "DataPolicyManifestProperties.namespaces()"
  summary: "Get the namespaces property: The list of namespaces for the data policy manifest."
  syntax: "public List<String> namespaces()"
  returns:
    description: "the namespaces value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.policyMode()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.policyMode()"
  name: "policyMode()"
  nameWithType: "DataPolicyManifestProperties.policyMode()"
  summary: "Get the policyMode property: The policy mode of the data policy manifest."
  syntax: "public String policyMode()"
  returns:
    description: "the policyMode value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.resourceTypeAliases()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.resourceTypeAliases()"
  name: "resourceTypeAliases()"
  nameWithType: "DataPolicyManifestProperties.resourceTypeAliases()"
  summary: "Get the resourceTypeAliases property: An array of resource type aliases."
  syntax: "public List<ResourceTypeAliases> resourceTypeAliases()"
  returns:
    description: "the resourceTypeAliases value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.models.ResourceTypeAliases?alt=com.azure.resourcemanager.resources.models.ResourceTypeAliases&text=ResourceTypeAliases\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.standard()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.standard()"
  name: "standard()"
  nameWithType: "DataPolicyManifestProperties.standard()"
  summary: "Get the standard property: The standard resource functions (subscription and/or resourceGroup)."
  syntax: "public List<String> standard()"
  returns:
    description: "the standard value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.validate()"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.validate()"
  name: "validate()"
  nameWithType: "DataPolicyManifestProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withCustom(java.util.List<com.azure.resourcemanager.resources.models.DataManifestCustomResourceFunctionDefinition>)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withCustom(List<DataManifestCustomResourceFunctionDefinition> custom)"
  name: "withCustom(List<DataManifestCustomResourceFunctionDefinition> custom)"
  nameWithType: "DataPolicyManifestProperties.withCustom(List<DataManifestCustomResourceFunctionDefinition> custom)"
  summary: "Set the custom property: An array of data manifest custom resource definition."
  parameters:
  - description: "the custom value to set."
    name: "custom"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.models.DataManifestCustomResourceFunctionDefinition?alt=com.azure.resourcemanager.resources.models.DataManifestCustomResourceFunctionDefinition&text=DataManifestCustomResourceFunctionDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DataPolicyManifestProperties withCustom(List<DataManifestCustomResourceFunctionDefinition> custom)"
  returns:
    description: "the DataPolicyManifestProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties?alt=com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties&text=DataPolicyManifestProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withEffects(java.util.List<com.azure.resourcemanager.resources.models.DataEffect>)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withEffects(List<DataEffect> effects)"
  name: "withEffects(List<DataEffect> effects)"
  nameWithType: "DataPolicyManifestProperties.withEffects(List<DataEffect> effects)"
  summary: "Set the effects property: The effect definition."
  parameters:
  - description: "the effects value to set."
    name: "effects"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.models.DataEffect?alt=com.azure.resourcemanager.resources.models.DataEffect&text=DataEffect\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DataPolicyManifestProperties withEffects(List<DataEffect> effects)"
  returns:
    description: "the DataPolicyManifestProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties?alt=com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties&text=DataPolicyManifestProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withFieldValues(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withFieldValues(List<String> fieldValues)"
  name: "withFieldValues(List<String> fieldValues)"
  nameWithType: "DataPolicyManifestProperties.withFieldValues(List<String> fieldValues)"
  summary: "Set the fieldValues property: The non-alias field accessor values that can be used in the policy rule."
  parameters:
  - description: "the fieldValues value to set."
    name: "fieldValues"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DataPolicyManifestProperties withFieldValues(List<String> fieldValues)"
  returns:
    description: "the DataPolicyManifestProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties?alt=com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties&text=DataPolicyManifestProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withIsBuiltInOnly(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withIsBuiltInOnly(Boolean isBuiltInOnly)"
  name: "withIsBuiltInOnly(Boolean isBuiltInOnly)"
  nameWithType: "DataPolicyManifestProperties.withIsBuiltInOnly(Boolean isBuiltInOnly)"
  summary: "Set the isBuiltInOnly property: A value indicating whether policy mode is allowed only in built-in definitions."
  parameters:
  - description: "the isBuiltInOnly value to set."
    name: "isBuiltInOnly"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataPolicyManifestProperties withIsBuiltInOnly(Boolean isBuiltInOnly)"
  returns:
    description: "the DataPolicyManifestProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties?alt=com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties&text=DataPolicyManifestProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withNamespaces(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withNamespaces(List<String> namespaces)"
  name: "withNamespaces(List<String> namespaces)"
  nameWithType: "DataPolicyManifestProperties.withNamespaces(List<String> namespaces)"
  summary: "Set the namespaces property: The list of namespaces for the data policy manifest."
  parameters:
  - description: "the namespaces value to set."
    name: "namespaces"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DataPolicyManifestProperties withNamespaces(List<String> namespaces)"
  returns:
    description: "the DataPolicyManifestProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties?alt=com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties&text=DataPolicyManifestProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withPolicyMode(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withPolicyMode(String policyMode)"
  name: "withPolicyMode(String policyMode)"
  nameWithType: "DataPolicyManifestProperties.withPolicyMode(String policyMode)"
  summary: "Set the policyMode property: The policy mode of the data policy manifest."
  parameters:
  - description: "the policyMode value to set."
    name: "policyMode"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataPolicyManifestProperties withPolicyMode(String policyMode)"
  returns:
    description: "the DataPolicyManifestProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties?alt=com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties&text=DataPolicyManifestProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withResourceTypeAliases(java.util.List<com.azure.resourcemanager.resources.models.ResourceTypeAliases>)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withResourceTypeAliases(List<ResourceTypeAliases> resourceTypeAliases)"
  name: "withResourceTypeAliases(List<ResourceTypeAliases> resourceTypeAliases)"
  nameWithType: "DataPolicyManifestProperties.withResourceTypeAliases(List<ResourceTypeAliases> resourceTypeAliases)"
  summary: "Set the resourceTypeAliases property: An array of resource type aliases."
  parameters:
  - description: "the resourceTypeAliases value to set."
    name: "resourceTypeAliases"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.models.ResourceTypeAliases?alt=com.azure.resourcemanager.resources.models.ResourceTypeAliases&text=ResourceTypeAliases\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DataPolicyManifestProperties withResourceTypeAliases(List<ResourceTypeAliases> resourceTypeAliases)"
  returns:
    description: "the DataPolicyManifestProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties?alt=com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties&text=DataPolicyManifestProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withStandard(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties.withStandard(List<String> standard)"
  name: "withStandard(List<String> standard)"
  nameWithType: "DataPolicyManifestProperties.withStandard(List<String> standard)"
  summary: "Set the standard property: The standard resource functions (subscription and/or resourceGroup)."
  parameters:
  - description: "the standard value to set."
    name: "standard"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DataPolicyManifestProperties withStandard(List<String> standard)"
  returns:
    description: "the DataPolicyManifestProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties?alt=com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestProperties&text=DataPolicyManifestProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.13.0
