### YamlMime:JavaMember
nameWithType: FabricCodePackageActivationContext.getCodePackageAddedEvent
type: method
members:
- fullName: system.fabric.FabricCodePackageActivationContext.getCodePackageAddedEvent()
  name: getCodePackageAddedEvent()
  nameWithType: FabricCodePackageActivationContext.getCodePackageAddedEvent()
  overridden: system.fabric.CodePackageActivationContext.getCodePackageAddedEvent()
  returns:
    description: <p>Getter for the CodePackageAddedEvent <xref uid="system.fabric.Observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>. </p>
    type: <xref href="system.fabric.Observable?alt=system.fabric.Observable&text=Observable" data-throw-if-not-resolved="False"/>&lt;<xref href="system.fabric.PackageAddedEventArgs?alt=system.fabric.PackageAddedEventArgs&text=PackageAddedEventArgs" data-throw-if-not-resolved="False"/>&lt;<xref href="system.fabric.CodePackage?alt=system.fabric.CodePackage&text=CodePackage" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>CodePackageAddedEvent should be used to register listeners to listen to the events that are generated on adding new Code package to service manifest.</p>

    <p></p>
  syntax: public Observable<PackageAddedEventArgs<CodePackage>> getCodePackageAddedEvent()
  uid: system.fabric.FabricCodePackageActivationContext.getCodePackageAddedEvent()
uid: system.fabric.FabricCodePackageActivationContext.getCodePackageAddedEvent*
fullName: system.fabric.FabricCodePackageActivationContext.getCodePackageAddedEvent()
name: getCodePackageAddedEvent()
package: system.fabric
metadata: {}
