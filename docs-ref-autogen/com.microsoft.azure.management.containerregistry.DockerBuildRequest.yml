### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  id: DockerBuildRequest
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry
  children:
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.DockerBuildRequest()
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.agentConfiguration()
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.arguments()
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.dockerFilePath()
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.imageNames()
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.isPushEnabled()
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.noCache()
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.platform()
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.sourceLocation()
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.timeout()
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.withAgentConfiguration(com.microsoft.azure.management.containerregistry.AgentProperties)
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.withArguments(java.util.List<com.microsoft.azure.management.containerregistry.Argument>)
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.withDockerFilePath(java.lang.String)
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.withImageNames(java.util.List<java.lang.String>)
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.withIsPushEnabled(java.lang.Boolean)
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.withNoCache(java.lang.Boolean)
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.withPlatform(com.microsoft.azure.management.containerregistry.PlatformProperties)
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.withSourceLocation(java.lang.String)
  - com.microsoft.azure.management.containerregistry.DockerBuildRequest.withTimeout(java.lang.Integer)
  langs:
  - java
  name: DockerBuildRequest
  nameWithType: DockerBuildRequest
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  type: Class
  package: com.microsoft.azure.management.containerregistry
  summary: The parameters for a docker quick build.
  syntax:
    content: public class DockerBuildRequest extends RunRequest
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.management.containerregistry.RunRequest
  inheritedMembers:
  - com.microsoft.azure.management.containerregistry.RunRequest.isArchiveEnabled()
  - com.microsoft.azure.management.containerregistry.RunRequest.withIsArchiveEnabled(java.lang.Boolean)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.DockerBuildRequest()
  id: DockerBuildRequest()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: DockerBuildRequest()
  nameWithType: DockerBuildRequest.DockerBuildRequest()
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.DockerBuildRequest()
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.DockerBuildRequest*
  type: Constructor
  package: com.microsoft.azure.management.containerregistry
  syntax:
    content: public DockerBuildRequest()
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.agentConfiguration()
  id: agentConfiguration()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: agentConfiguration()
  nameWithType: DockerBuildRequest.agentConfiguration()
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.agentConfiguration()
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.agentConfiguration*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Get the machine configuration of the run agent.
  syntax:
    content: public AgentProperties agentConfiguration()
    return:
      type: com.microsoft.azure.management.containerregistry.AgentProperties
      description: the agentConfiguration value
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.arguments()
  id: arguments()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: arguments()
  nameWithType: DockerBuildRequest.arguments()
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.arguments()
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.arguments*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Get the collection of override arguments to be used when executing the run.
  syntax:
    content: public List<Argument> arguments()
    return:
      type: java.util.List<com.microsoft.azure.management.containerregistry.Argument>
      description: the arguments value
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.dockerFilePath()
  id: dockerFilePath()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: dockerFilePath()
  nameWithType: DockerBuildRequest.dockerFilePath()
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.dockerFilePath()
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.dockerFilePath*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Get the Docker file path relative to the source location.
  syntax:
    content: public String dockerFilePath()
    return:
      type: java.lang.String
      description: the dockerFilePath value
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.imageNames()
  id: imageNames()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: imageNames()
  nameWithType: DockerBuildRequest.imageNames()
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.imageNames()
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.imageNames*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Get the fully qualified image names including the repository and tag.
  syntax:
    content: public List<String> imageNames()
    return:
      type: java.util.List<java.lang.String>
      description: the imageNames value
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.isPushEnabled()
  id: isPushEnabled()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: isPushEnabled()
  nameWithType: DockerBuildRequest.isPushEnabled()
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.isPushEnabled()
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.isPushEnabled*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Get the value of this property indicates whether the image built should be pushed to the registry or not.
  syntax:
    content: public Boolean isPushEnabled()
    return:
      type: java.lang.Boolean
      description: the isPushEnabled value
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.noCache()
  id: noCache()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: noCache()
  nameWithType: DockerBuildRequest.noCache()
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.noCache()
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.noCache*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Get the value of this property indicates whether the image cache is enabled or not.
  syntax:
    content: public Boolean noCache()
    return:
      type: java.lang.Boolean
      description: the noCache value
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.platform()
  id: platform()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: platform()
  nameWithType: DockerBuildRequest.platform()
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.platform()
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.platform*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Get the platform properties against which the run has to happen.
  syntax:
    content: public PlatformProperties platform()
    return:
      type: com.microsoft.azure.management.containerregistry.PlatformProperties
      description: the platform value
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.sourceLocation()
  id: sourceLocation()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: sourceLocation()
  nameWithType: DockerBuildRequest.sourceLocation()
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.sourceLocation()
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.sourceLocation*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Get the URL(absolute or relative) of the source context. It can be an URL to a tar or git repoistory. If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
  syntax:
    content: public String sourceLocation()
    return:
      type: java.lang.String
      description: the sourceLocation value
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.timeout()
  id: timeout()
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: timeout()
  nameWithType: DockerBuildRequest.timeout()
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.timeout()
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.timeout*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Get run timeout in seconds.
  syntax:
    content: public Integer timeout()
    return:
      type: java.lang.Integer
      description: the timeout value
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withAgentConfiguration(com.microsoft.azure.management.containerregistry.AgentProperties)
  id: withAgentConfiguration(com.microsoft.azure.management.containerregistry.AgentProperties)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: withAgentConfiguration(AgentProperties agentConfiguration)
  nameWithType: DockerBuildRequest.withAgentConfiguration(AgentProperties agentConfiguration)
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withAgentConfiguration(AgentProperties agentConfiguration)
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withAgentConfiguration*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Set the machine configuration of the run agent.
  syntax:
    content: public DockerBuildRequest withAgentConfiguration(AgentProperties agentConfiguration)
    parameters:
    - id: agentConfiguration
      type: com.microsoft.azure.management.containerregistry.AgentProperties
      description: the agentConfiguration value to set
    return:
      type: com.microsoft.azure.management.containerregistry.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withArguments(java.util.List<com.microsoft.azure.management.containerregistry.Argument>)
  id: withArguments(java.util.List<com.microsoft.azure.management.containerregistry.Argument>)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: withArguments(List<Argument> arguments)
  nameWithType: DockerBuildRequest.withArguments(List<Argument> arguments)
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withArguments(List<Argument> arguments)
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withArguments*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Set the collection of override arguments to be used when executing the run.
  syntax:
    content: public DockerBuildRequest withArguments(List<Argument> arguments)
    parameters:
    - id: arguments
      type: java.util.List<com.microsoft.azure.management.containerregistry.Argument>
      description: the arguments value to set
    return:
      type: com.microsoft.azure.management.containerregistry.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withDockerFilePath(java.lang.String)
  id: withDockerFilePath(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: withDockerFilePath(String dockerFilePath)
  nameWithType: DockerBuildRequest.withDockerFilePath(String dockerFilePath)
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withDockerFilePath(String dockerFilePath)
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withDockerFilePath*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Set the Docker file path relative to the source location.
  syntax:
    content: public DockerBuildRequest withDockerFilePath(String dockerFilePath)
    parameters:
    - id: dockerFilePath
      type: java.lang.String
      description: the dockerFilePath value to set
    return:
      type: com.microsoft.azure.management.containerregistry.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withImageNames(java.util.List<java.lang.String>)
  id: withImageNames(java.util.List<java.lang.String>)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: withImageNames(List<String> imageNames)
  nameWithType: DockerBuildRequest.withImageNames(List<String> imageNames)
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withImageNames(List<String> imageNames)
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withImageNames*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Set the fully qualified image names including the repository and tag.
  syntax:
    content: public DockerBuildRequest withImageNames(List<String> imageNames)
    parameters:
    - id: imageNames
      type: java.util.List<java.lang.String>
      description: the imageNames value to set
    return:
      type: com.microsoft.azure.management.containerregistry.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withIsPushEnabled(java.lang.Boolean)
  id: withIsPushEnabled(java.lang.Boolean)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: withIsPushEnabled(Boolean isPushEnabled)
  nameWithType: DockerBuildRequest.withIsPushEnabled(Boolean isPushEnabled)
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withIsPushEnabled(Boolean isPushEnabled)
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withIsPushEnabled*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Set the value of this property indicates whether the image built should be pushed to the registry or not.
  syntax:
    content: public DockerBuildRequest withIsPushEnabled(Boolean isPushEnabled)
    parameters:
    - id: isPushEnabled
      type: java.lang.Boolean
      description: the isPushEnabled value to set
    return:
      type: com.microsoft.azure.management.containerregistry.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withNoCache(java.lang.Boolean)
  id: withNoCache(java.lang.Boolean)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: withNoCache(Boolean noCache)
  nameWithType: DockerBuildRequest.withNoCache(Boolean noCache)
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withNoCache(Boolean noCache)
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withNoCache*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Set the value of this property indicates whether the image cache is enabled or not.
  syntax:
    content: public DockerBuildRequest withNoCache(Boolean noCache)
    parameters:
    - id: noCache
      type: java.lang.Boolean
      description: the noCache value to set
    return:
      type: com.microsoft.azure.management.containerregistry.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withPlatform(com.microsoft.azure.management.containerregistry.PlatformProperties)
  id: withPlatform(com.microsoft.azure.management.containerregistry.PlatformProperties)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: withPlatform(PlatformProperties platform)
  nameWithType: DockerBuildRequest.withPlatform(PlatformProperties platform)
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withPlatform(PlatformProperties platform)
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withPlatform*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Set the platform properties against which the run has to happen.
  syntax:
    content: public DockerBuildRequest withPlatform(PlatformProperties platform)
    parameters:
    - id: platform
      type: com.microsoft.azure.management.containerregistry.PlatformProperties
      description: the platform value to set
    return:
      type: com.microsoft.azure.management.containerregistry.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withSourceLocation(java.lang.String)
  id: withSourceLocation(java.lang.String)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: withSourceLocation(String sourceLocation)
  nameWithType: DockerBuildRequest.withSourceLocation(String sourceLocation)
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withSourceLocation(String sourceLocation)
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withSourceLocation*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Set the URL(absolute or relative) of the source context. It can be an URL to a tar or git repoistory. If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
  syntax:
    content: public DockerBuildRequest withSourceLocation(String sourceLocation)
    parameters:
    - id: sourceLocation
      type: java.lang.String
      description: the sourceLocation value to set
    return:
      type: com.microsoft.azure.management.containerregistry.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withTimeout(java.lang.Integer)
  id: withTimeout(java.lang.Integer)
  artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.36.1
  parent: com.microsoft.azure.management.containerregistry.DockerBuildRequest
  langs:
  - java
  name: withTimeout(Integer timeout)
  nameWithType: DockerBuildRequest.withTimeout(Integer timeout)
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withTimeout(Integer timeout)
  overload: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withTimeout*
  type: Method
  package: com.microsoft.azure.management.containerregistry
  summary: Set run timeout in seconds.
  syntax:
    content: public DockerBuildRequest withTimeout(Integer timeout)
    parameters:
    - id: timeout
      type: java.lang.Integer
      description: the timeout value to set
    return:
      type: com.microsoft.azure.management.containerregistry.DockerBuildRequest
      description: the DockerBuildRequest object itself.
references:
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.DockerBuildRequest*
  name: DockerBuildRequest
  nameWithType: DockerBuildRequest.DockerBuildRequest
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.DockerBuildRequest
  package: com.microsoft.azure.management.containerregistry
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.imageNames*
  name: imageNames
  nameWithType: DockerBuildRequest.imageNames
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.imageNames
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withImageNames*
  name: withImageNames
  nameWithType: DockerBuildRequest.withImageNames
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withImageNames
  package: com.microsoft.azure.management.containerregistry
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.isPushEnabled*
  name: isPushEnabled
  nameWithType: DockerBuildRequest.isPushEnabled
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.isPushEnabled
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withIsPushEnabled*
  name: withIsPushEnabled
  nameWithType: DockerBuildRequest.withIsPushEnabled
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withIsPushEnabled
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.noCache*
  name: noCache
  nameWithType: DockerBuildRequest.noCache
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.noCache
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withNoCache*
  name: withNoCache
  nameWithType: DockerBuildRequest.withNoCache
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withNoCache
  package: com.microsoft.azure.management.containerregistry
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.dockerFilePath*
  name: dockerFilePath
  nameWithType: DockerBuildRequest.dockerFilePath
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.dockerFilePath
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withDockerFilePath*
  name: withDockerFilePath
  nameWithType: DockerBuildRequest.withDockerFilePath
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withDockerFilePath
  package: com.microsoft.azure.management.containerregistry
- uid: java.util.List<com.microsoft.azure.management.containerregistry.Argument>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.management.containerregistry.Argument
    name: Argument
    fullName: com.microsoft.azure.management.containerregistry.Argument
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.arguments*
  name: arguments
  nameWithType: DockerBuildRequest.arguments
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.arguments
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withArguments*
  name: withArguments
  nameWithType: DockerBuildRequest.withArguments
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withArguments
  package: com.microsoft.azure.management.containerregistry
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.timeout*
  name: timeout
  nameWithType: DockerBuildRequest.timeout
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.timeout
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withTimeout*
  name: withTimeout
  nameWithType: DockerBuildRequest.withTimeout
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withTimeout
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties
  name: PlatformProperties
  nameWithType: PlatformProperties
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.platform*
  name: platform
  nameWithType: DockerBuildRequest.platform
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.platform
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withPlatform*
  name: withPlatform
  nameWithType: DockerBuildRequest.withPlatform
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withPlatform
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.AgentProperties
  name: AgentProperties
  nameWithType: AgentProperties
  fullName: com.microsoft.azure.management.containerregistry.AgentProperties
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.agentConfiguration*
  name: agentConfiguration
  nameWithType: DockerBuildRequest.agentConfiguration
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.agentConfiguration
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withAgentConfiguration*
  name: withAgentConfiguration
  nameWithType: DockerBuildRequest.withAgentConfiguration
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withAgentConfiguration
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.sourceLocation*
  name: sourceLocation
  nameWithType: DockerBuildRequest.sourceLocation
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.sourceLocation
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withSourceLocation*
  name: withSourceLocation
  nameWithType: DockerBuildRequest.withSourceLocation
  fullName: com.microsoft.azure.management.containerregistry.DockerBuildRequest.withSourceLocation
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.RunRequest
  name: RunRequest
  nameWithType: RunRequest
  fullName: com.microsoft.azure.management.containerregistry.RunRequest
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.microsoft.azure.management.containerregistry.RunRequest.isArchiveEnabled()
  name: RunRequest.isArchiveEnabled()
  nameWithType: RunRequest.isArchiveEnabled()
  fullName: com.microsoft.azure.management.containerregistry.RunRequest.isArchiveEnabled()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.microsoft.azure.management.containerregistry.RunRequest.withIsArchiveEnabled(java.lang.Boolean)
  name: RunRequest.withIsArchiveEnabled(Boolean)
  nameWithType: RunRequest.withIsArchiveEnabled(Boolean)
  fullName: com.microsoft.azure.management.containerregistry.RunRequest.withIsArchiveEnabled(java.lang.Boolean)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.management.containerregistry.Argument
  name: Argument
  nameWithType: Argument
  fullName: com.microsoft.azure.management.containerregistry.Argument
