### YamlMime:JavaMember
nameWithType: WebAppSourceControl.DefinitionStages.WithRepositoryType<ParentT>.withContinuouslyIntegratedGitHubRepository
type: method
members:
- fullName: com.microsoft.azure.management.appservice.WebAppSourceControl.DefinitionStages.WithRepositoryType<ParentT>.withContinuouslyIntegratedGitHubRepository(String organization, String repository)
  name: withContinuouslyIntegratedGitHubRepository(String organization, String repository)
  nameWithType: WebAppSourceControl.DefinitionStages.WithRepositoryType<ParentT>.withContinuouslyIntegratedGitHubRepository(String organization, String repository)
  parameters:
  - description: <p>the user name or organization name the GitHub repository belongs to, e.g. Azure </p>
    name: organization
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the repository, e.g. azure-sdk-for-java </p>
    name: repository
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.appservice.WebAppSourceControl.DefinitionStages.WithGitHubBranch?alt=com.microsoft.azure.management.appservice.WebAppSourceControl.DefinitionStages.WithGitHubBranch&text=WebAppSourceControl.DefinitionStages.WithGitHubBranch" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: <p>Specifies the repository to be a GitHub repository. Continuous integration will be turned on. This repository can be either public or private, but your GitHub access token must have enough privileges to add a webhook to the repository. </p>
  syntax: public WithGitHubBranch<ParentT> withContinuouslyIntegratedGitHubRepository(String organization, String repository)
  uid: com.microsoft.azure.management.appservice.WebAppSourceControl.DefinitionStages.WithRepositoryType.withContinuouslyIntegratedGitHubRepository(String,String)
- fullName: com.microsoft.azure.management.appservice.WebAppSourceControl.DefinitionStages.WithRepositoryType<ParentT>.withContinuouslyIntegratedGitHubRepository(String url)
  name: withContinuouslyIntegratedGitHubRepository(String url)
  nameWithType: WebAppSourceControl.DefinitionStages.WithRepositoryType<ParentT>.withContinuouslyIntegratedGitHubRepository(String url)
  parameters:
  - description: <p>the URL pointing to the repository, e.g. <a href="https://github.com/Azure/azure-sdk-for-java">https://github.com/Azure/azure-sdk-for-java</a></p>
    name: url
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.appservice.WebAppSourceControl.DefinitionStages.WithGitHubBranch?alt=com.microsoft.azure.management.appservice.WebAppSourceControl.DefinitionStages.WithGitHubBranch&text=WebAppSourceControl.DefinitionStages.WithGitHubBranch" data-throw-if-not-resolved="False"/>&lt;ParentT&gt;
  summary: <p>Specifies the repository to be a GitHub repository. Continuous integration will be turned on. This repository can be either public or private, but your GitHub access token must have enough privileges to add a webhook to the repository. </p>
  syntax: public WithGitHubBranch<ParentT> withContinuouslyIntegratedGitHubRepository(String url)
  uid: com.microsoft.azure.management.appservice.WebAppSourceControl.DefinitionStages.WithRepositoryType.withContinuouslyIntegratedGitHubRepository(String)
uid: com.microsoft.azure.management.appservice.WebAppSourceControl.DefinitionStages.WithRepositoryType.withContinuouslyIntegratedGitHubRepository*
fullName: com.microsoft.azure.management.appservice.WebAppSourceControl.DefinitionStages.WithRepositoryType<ParentT>.withContinuouslyIntegratedGitHubRepository(String organization, String repository)
name: withContinuouslyIntegratedGitHubRepository(String organization, String repository)
package: com.microsoft.azure.management.appservice
metadata: {}
