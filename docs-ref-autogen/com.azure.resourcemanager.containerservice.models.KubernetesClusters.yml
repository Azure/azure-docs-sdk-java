### YamlMime:JavaType
uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters"
fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters"
name: "KubernetesClusters"
nameWithType: "KubernetesClusters"
summary: "Entry point to managed Kubernetes service management API."
syntax: "public interface KubernetesClusters extends HasManager<ContainerServiceManager>, SupportsCreating<KubernetesCluster.DefinitionStages.Blank>, SupportsBatchCreation<KubernetesCluster>, SupportsListing<KubernetesCluster>, SupportsGettingById<KubernetesCluster>, SupportsDeletingById, SupportsDeletingByResourceGroup, SupportsListingByResourceGroup<KubernetesCluster>, SupportsGettingByResourceGroup<KubernetesCluster>"
methods:
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listAdminKubeConfigContent(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName)"
  name: "listAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName)"
  nameWithType: "KubernetesClusters.listAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName)"
  summary: "Returns the admin Kube.<wbr>config content which can be used with a Kubernetes client."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource group name where the cluster is"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the managed cluster name"
    name: "kubernetesClusterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<CredentialResult> listAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName)"
  desc: "Returns the admin Kube.config content which can be used with a Kubernetes client."
  returns:
    description: "the Kube.config content which can be used with a Kubernetes client"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.CredentialResult?alt=com.azure.resourcemanager.containerservice.models.CredentialResult&text=CredentialResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listAdminKubeConfigContentAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)"
  name: "listAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)"
  nameWithType: "KubernetesClusters.listAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)"
  summary: "Returns asynchronously the admin Kube.<wbr>config content which can be used with a Kubernetes client."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource group name where the cluster is"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the managed cluster name"
    name: "kubernetesClusterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<CredentialResult>> listAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)"
  desc: "Returns asynchronously the admin Kube.config content which can be used with a Kubernetes client."
  returns:
    description: "a future representation of the Kube.config content which can be used with a Kubernetes client"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.CredentialResult?alt=com.azure.resourcemanager.containerservice.models.CredentialResult&text=CredentialResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listKubernetesVersions(com.azure.core.management.Region)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listKubernetesVersions(Region region)"
  name: "listKubernetesVersions(Region region)"
  nameWithType: "KubernetesClusters.listKubernetesVersions(Region region)"
  summary: "Returns the list of available Kubernetes versions available for the given Azure region."
  modifiers:
  - "abstract"
  parameters:
  - description: "the Azure region to query into"
    name: "region"
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Set<String> listKubernetesVersions(Region region)"
  desc: "Returns the list of available Kubernetes versions available for the given Azure region."
  returns:
    description: "a set of Kubernetes versions which can be used when creating a service in this region"
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listKubernetesVersionsAsync(com.azure.core.management.Region)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listKubernetesVersionsAsync(Region region)"
  name: "listKubernetesVersionsAsync(Region region)"
  nameWithType: "KubernetesClusters.listKubernetesVersionsAsync(Region region)"
  summary: "Returns the list of available Kubernetes versions available for the given Azure region."
  modifiers:
  - "abstract"
  parameters:
  - description: "the Azure region to query into"
    name: "region"
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Set<String>> listKubernetesVersionsAsync(Region region)"
  desc: "Returns the list of available Kubernetes versions available for the given Azure region."
  returns:
    description: "a future representation of a set of Kubernetes versions which can be used when creating a service in this\n     region"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listOrchestrators(com.azure.core.management.Region,com.azure.resourcemanager.containerservice.models.ContainerServiceResourceTypes)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listOrchestrators(Region region, ContainerServiceResourceTypes resourceTypes)"
  name: "listOrchestrators(Region region, ContainerServiceResourceTypes resourceTypes)"
  nameWithType: "KubernetesClusters.listOrchestrators(Region region, ContainerServiceResourceTypes resourceTypes)"
  summary: "Returns the list of available orchestrators for the given Azure region."
  modifiers:
  - "abstract"
  parameters:
  - description: "the Azure region to query into"
    name: "region"
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  - description: "the resource type of container service"
    name: "resourceTypes"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceResourceTypes?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceResourceTypes&text=ContainerServiceResourceTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<OrchestratorVersionProfile> listOrchestrators(Region region, ContainerServiceResourceTypes resourceTypes)"
  desc: "Returns the list of available orchestrators for the given Azure region."
  returns:
    description: "a list of orchestrators which can be used when creating a service in this region"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.OrchestratorVersionProfile?alt=com.azure.resourcemanager.containerservice.models.OrchestratorVersionProfile&text=OrchestratorVersionProfile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listOrchestratorsAsync(com.azure.core.management.Region,com.azure.resourcemanager.containerservice.models.ContainerServiceResourceTypes)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listOrchestratorsAsync(Region region, ContainerServiceResourceTypes resourceTypes)"
  name: "listOrchestratorsAsync(Region region, ContainerServiceResourceTypes resourceTypes)"
  nameWithType: "KubernetesClusters.listOrchestratorsAsync(Region region, ContainerServiceResourceTypes resourceTypes)"
  summary: "Returns the list of available orchestrators for the given Azure region."
  modifiers:
  - "abstract"
  parameters:
  - description: "the Azure region to query into"
    name: "region"
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  - description: "the resource type of container service"
    name: "resourceTypes"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ContainerServiceResourceTypes?alt=com.azure.resourcemanager.containerservice.models.ContainerServiceResourceTypes&text=ContainerServiceResourceTypes\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<OrchestratorVersionProfile> listOrchestratorsAsync(Region region, ContainerServiceResourceTypes resourceTypes)"
  desc: "Returns the list of available orchestrators for the given Azure region."
  returns:
    description: "a list of orchestrators which can be used when creating a service in this region"
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.OrchestratorVersionProfile?alt=com.azure.resourcemanager.containerservice.models.OrchestratorVersionProfile&text=OrchestratorVersionProfile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listUserKubeConfigContent(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName)"
  name: "listUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName)"
  nameWithType: "KubernetesClusters.listUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName)"
  summary: "Returns the user Kube.<wbr>config content which can be used with a Kubernetes client."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource group name where the cluster is"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the managed cluster name"
    name: "kubernetesClusterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<CredentialResult> listUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName)"
  desc: "Returns the user Kube.config content which can be used with a Kubernetes client."
  returns:
    description: "the Kube.config content which can be used with a Kubernetes client"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.CredentialResult?alt=com.azure.resourcemanager.containerservice.models.CredentialResult&text=CredentialResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listUserKubeConfigContent(java.lang.String,java.lang.String,com.azure.resourcemanager.containerservice.models.Format)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName, Format format)"
  name: "listUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName, Format format)"
  nameWithType: "KubernetesClusters.listUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName, Format format)"
  summary: "Returns the user Kube.<wbr>config content which can be used with a Kubernetes client."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource group name where the cluster is"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the managed cluster name"
    name: "kubernetesClusterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Only apply to AAD clusters, specifies the format of returned kubeconfig. Format 'azure' will return azure auth-provider kubeconfig; format 'exec' will return exec format kubeconfig, which requires kubelogin binary in the path."
    name: "format"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.Format?alt=com.azure.resourcemanager.containerservice.models.Format&text=Format\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<CredentialResult> listUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName, Format format)"
  desc: "Returns the user Kube.config content which can be used with a Kubernetes client."
  returns:
    description: "the Kube.config content which can be used with a Kubernetes client"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.CredentialResult?alt=com.azure.resourcemanager.containerservice.models.CredentialResult&text=CredentialResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listUserKubeConfigContentAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)"
  name: "listUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)"
  nameWithType: "KubernetesClusters.listUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)"
  summary: "Returns asynchronously the user Kube.<wbr>config content which can be used with a Kubernetes client."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource group name where the cluster is"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the managed cluster name"
    name: "kubernetesClusterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<CredentialResult>> listUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName)"
  desc: "Returns asynchronously the user Kube.config content which can be used with a Kubernetes client."
  returns:
    description: "a future representation of the Kube.config content which can be used with a Kubernetes client"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.CredentialResult?alt=com.azure.resourcemanager.containerservice.models.CredentialResult&text=CredentialResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listUserKubeConfigContentAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.containerservice.models.Format)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.listUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName, Format format)"
  name: "listUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName, Format format)"
  nameWithType: "KubernetesClusters.listUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName, Format format)"
  summary: "Returns asynchronously the user Kube.<wbr>config content which can be used with a Kubernetes client."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource group name where the cluster is"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the managed cluster name"
    name: "kubernetesClusterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Only apply to AAD clusters, specifies the format of returned kubeconfig. Format 'azure' will return azure auth-provider kubeconfig; format 'exec' will return exec format kubeconfig, which requires kubelogin binary in the path."
    name: "format"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.Format?alt=com.azure.resourcemanager.containerservice.models.Format&text=Format\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<CredentialResult>> listUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName, Format format)"
  desc: "Returns asynchronously the user Kube.config content which can be used with a Kubernetes client."
  returns:
    description: "a future representation of the Kube.config content which can be used with a Kubernetes client"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.CredentialResult?alt=com.azure.resourcemanager.containerservice.models.CredentialResult&text=CredentialResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.start(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.start(String resourceGroupName, String kubernetesClusterName)"
  name: "start(String resourceGroupName, String kubernetesClusterName)"
  nameWithType: "KubernetesClusters.start(String resourceGroupName, String kubernetesClusterName)"
  summary: "Starts a stopped Kubernetes cluster."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the managed cluster resource."
    name: "kubernetesClusterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void start(String resourceGroupName, String kubernetesClusterName)"
  desc: "Starts a stopped Kubernetes cluster."
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.startAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.startAsync(String resourceGroupName, String kubernetesClusterName)"
  name: "startAsync(String resourceGroupName, String kubernetesClusterName)"
  nameWithType: "KubernetesClusters.startAsync(String resourceGroupName, String kubernetesClusterName)"
  summary: "Starts a stopped Kubernetes cluster."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the managed cluster resource."
    name: "kubernetesClusterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> startAsync(String resourceGroupName, String kubernetesClusterName)"
  desc: "Starts a stopped Kubernetes cluster."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.stop(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.stop(String resourceGroupName, String kubernetesClusterName)"
  name: "stop(String resourceGroupName, String kubernetesClusterName)"
  nameWithType: "KubernetesClusters.stop(String resourceGroupName, String kubernetesClusterName)"
  summary: "Stops a running Kubernetes cluster."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the managed cluster resource."
    name: "kubernetesClusterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void stop(String resourceGroupName, String kubernetesClusterName)"
  desc: "Stops a running Kubernetes cluster."
- uid: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.stopAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.KubernetesClusters.stopAsync(String resourceGroupName, String kubernetesClusterName)"
  name: "stopAsync(String resourceGroupName, String kubernetesClusterName)"
  nameWithType: "KubernetesClusters.stopAsync(String resourceGroupName, String kubernetesClusterName)"
  summary: "Stops a running Kubernetes cluster."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the managed cluster resource."
    name: "kubernetesClusterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> stopAsync(String resourceGroupName, String kubernetesClusterName)"
  desc: "Stops a running Kubernetes cluster."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Entry point to managed Kubernetes service management API."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup&text=SupportsDeletingByResourceGroup\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById&text=SupportsGettingById\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.KubernetesCluster?alt=com.azure.resourcemanager.containerservice.models.KubernetesCluster&text=KubernetesCluster\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup&text=SupportsGettingByResourceGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.KubernetesCluster?alt=com.azure.resourcemanager.containerservice.models.KubernetesCluster&text=KubernetesCluster\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsListingByResourceGroup?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsListingByResourceGroup&text=SupportsListingByResourceGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.KubernetesCluster?alt=com.azure.resourcemanager.containerservice.models.KubernetesCluster&text=KubernetesCluster\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.ContainerServiceManager?alt=com.azure.resourcemanager.containerservice.ContainerServiceManager&text=ContainerServiceManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation&text=SupportsBatchCreation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.KubernetesCluster?alt=com.azure.resourcemanager.containerservice.models.KubernetesCluster&text=KubernetesCluster\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.KubernetesCluster.DefinitionStages.Blank?alt=com.azure.resourcemanager.containerservice.models.KubernetesCluster.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsDeletingById?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsDeletingById&text=SupportsDeletingById\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsListing?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsListing&text=SupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.KubernetesCluster?alt=com.azure.resourcemanager.containerservice.models.KubernetesCluster&text=KubernetesCluster\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.containerservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.16.0
