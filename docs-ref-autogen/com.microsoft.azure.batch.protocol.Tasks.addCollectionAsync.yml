### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync*"
fullName: "com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync"
name: "addCollectionAsync"
nameWithType: "Tasks.addCollectionAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync(java.lang.String,java.util.List<com.microsoft.azure.batch.protocol.models.TaskAddParameter>)"
  fullName: "com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value)"
  name: "addCollectionAsync(String jobId, List<TaskAddParameter> value)"
  nameWithType: "Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value)"
  summary: "Adds a collection of Tasks to the specified Job. Note that each Task must have a unique ID. The Batch service may not return the results for each Task in the same order the Tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same Task IDs during a retry so that if the prior operation succeeded, the retry will not create extra Tasks unexpectedly. If the response contains any Tasks which failed to add, a client can retry the request. In a retry, it is most efficient to resubmit only Tasks that failed to add, and to omit Tasks that were successfully added on the first attempt. The maximum lifetime of a Task from addition to completion is 180 days. If a Task has not completed within 180 days of being added it will be terminated by the Batch service and left in whatever state it was in at that time."
  parameters:
  - description: "The ID of the Job to which the Task collection is to be added."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The collection of Tasks to add. The maximum count of Tasks is 100. The total serialized size of this collection must be less than 1MB. If it is greater than 1MB (for example if each Task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer Tasks."
    name: "value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Observable<TaskAddCollectionResult> addCollectionAsync(String jobId, List<TaskAddParameter> value)"
  returns:
    description: "the observable to the TaskAddCollectionResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult?alt=com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult&text=TaskAddCollectionResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync(java.lang.String,java.util.List<com.microsoft.azure.batch.protocol.models.TaskAddParameter>,com.microsoft.azure.batch.protocol.models.TaskAddCollectionOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)"
  name: "addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)"
  nameWithType: "Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)"
  summary: "Adds a collection of Tasks to the specified Job. Note that each Task must have a unique ID. The Batch service may not return the results for each Task in the same order the Tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same Task IDs during a retry so that if the prior operation succeeded, the retry will not create extra Tasks unexpectedly. If the response contains any Tasks which failed to add, a client can retry the request. In a retry, it is most efficient to resubmit only Tasks that failed to add, and to omit Tasks that were successfully added on the first attempt. The maximum lifetime of a Task from addition to completion is 180 days. If a Task has not completed within 180 days of being added it will be terminated by the Batch service and left in whatever state it was in at that time."
  parameters:
  - description: "The ID of the Job to which the Task collection is to be added."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The collection of Tasks to add. The maximum count of Tasks is 100. The total serialized size of this collection must be less than 1MB. If it is greater than 1MB (for example if each Task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer Tasks."
    name: "value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Additional parameters for the operation"
    name: "taskAddCollectionOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddCollectionOptions?alt=com.microsoft.azure.batch.protocol.models.TaskAddCollectionOptions&text=TaskAddCollectionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<TaskAddCollectionResult> addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions)"
  returns:
    description: "the observable to the TaskAddCollectionResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult?alt=com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult&text=TaskAddCollectionResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync(java.lang.String,java.util.List<com.microsoft.azure.batch.protocol.models.TaskAddParameter>,com.microsoft.azure.batch.protocol.models.TaskAddCollectionOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult>)"
  fullName: "com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions, ServiceCallback<TaskAddCollectionResult> serviceCallback)"
  name: "addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions, ServiceCallback<TaskAddCollectionResult> serviceCallback)"
  nameWithType: "Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions, ServiceCallback<TaskAddCollectionResult> serviceCallback)"
  summary: "Adds a collection of Tasks to the specified Job. Note that each Task must have a unique ID. The Batch service may not return the results for each Task in the same order the Tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same Task IDs during a retry so that if the prior operation succeeded, the retry will not create extra Tasks unexpectedly. If the response contains any Tasks which failed to add, a client can retry the request. In a retry, it is most efficient to resubmit only Tasks that failed to add, and to omit Tasks that were successfully added on the first attempt. The maximum lifetime of a Task from addition to completion is 180 days. If a Task has not completed within 180 days of being added it will be terminated by the Batch service and left in whatever state it was in at that time."
  parameters:
  - description: "The ID of the Job to which the Task collection is to be added."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The collection of Tasks to add. The maximum count of Tasks is 100. The total serialized size of this collection must be less than 1MB. If it is greater than 1MB (for example if each Task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer Tasks."
    name: "value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Additional parameters for the operation"
    name: "taskAddCollectionOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddCollectionOptions?alt=com.microsoft.azure.batch.protocol.models.TaskAddCollectionOptions&text=TaskAddCollectionOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult?alt=com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult&text=TaskAddCollectionResult\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<TaskAddCollectionResult> addCollectionAsync(String jobId, List<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions, ServiceCallback<TaskAddCollectionResult> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult?alt=com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult&text=TaskAddCollectionResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync(java.lang.String,java.util.List<com.microsoft.azure.batch.protocol.models.TaskAddParameter>,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult>)"
  fullName: "com.microsoft.azure.batch.protocol.Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value, ServiceCallback<TaskAddCollectionResult> serviceCallback)"
  name: "addCollectionAsync(String jobId, List<TaskAddParameter> value, ServiceCallback<TaskAddCollectionResult> serviceCallback)"
  nameWithType: "Tasks.addCollectionAsync(String jobId, List<TaskAddParameter> value, ServiceCallback<TaskAddCollectionResult> serviceCallback)"
  summary: "Adds a collection of Tasks to the specified Job. Note that each Task must have a unique ID. The Batch service may not return the results for each Task in the same order the Tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same Task IDs during a retry so that if the prior operation succeeded, the retry will not create extra Tasks unexpectedly. If the response contains any Tasks which failed to add, a client can retry the request. In a retry, it is most efficient to resubmit only Tasks that failed to add, and to omit Tasks that were successfully added on the first attempt. The maximum lifetime of a Task from addition to completion is 180 days. If a Task has not completed within 180 days of being added it will be terminated by the Batch service and left in whatever state it was in at that time."
  parameters:
  - description: "The ID of the Job to which the Task collection is to be added."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The collection of Tasks to add. The maximum count of Tasks is 100. The total serialized size of this collection must be less than 1MB. If it is greater than 1MB (for example if each Task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer Tasks."
    name: "value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult?alt=com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult&text=TaskAddCollectionResult\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<TaskAddCollectionResult> addCollectionAsync(String jobId, List<TaskAddParameter> value, ServiceCallback<TaskAddCollectionResult> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult?alt=com.microsoft.azure.batch.protocol.models.TaskAddCollectionResult&text=TaskAddCollectionResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:9.0.0
