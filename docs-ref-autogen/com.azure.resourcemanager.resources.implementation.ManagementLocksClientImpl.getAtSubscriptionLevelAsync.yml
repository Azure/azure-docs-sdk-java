### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.implementation.ManagementLocksClientImpl.getAtSubscriptionLevelAsync*"
fullName: "com.azure.resourcemanager.resources.implementation.ManagementLocksClientImpl.getAtSubscriptionLevelAsync"
name: "getAtSubscriptionLevelAsync"
nameWithType: "ManagementLocksClientImpl.getAtSubscriptionLevelAsync"
members:
- uid: "com.azure.resourcemanager.resources.implementation.ManagementLocksClientImpl.getAtSubscriptionLevelAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.implementation.ManagementLocksClientImpl.getAtSubscriptionLevelAsync(String lockName)"
  name: "getAtSubscriptionLevelAsync(String lockName)"
  nameWithType: "ManagementLocksClientImpl.getAtSubscriptionLevelAsync(String lockName)"
  summary: "Gets a management lock at the subscription level."
  parameters:
  - description: "The name of the lock to get."
    name: "lockName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ManagementLockObjectInner> getAtSubscriptionLevelAsync(String lockName)"
  returns:
    description: "a management lock at the subscription level."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ManagementLockObjectInner?alt=com.azure.resourcemanager.resources.fluent.models.ManagementLockObjectInner&text=ManagementLockObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.3.0
