### YamlMime:JavaType
uid: "com.azure.resourcemanager.labservices.models.UserUpdate"
fullName: "com.azure.resourcemanager.labservices.models.UserUpdate"
name: "UserUpdate"
nameWithType: "UserUpdate"
summary: "User of a lab that can register for and use virtual machines within the lab."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **UserUpdate**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.labservices.models.UserUpdate?alt=com.azure.resourcemanager.labservices.models.UserUpdate&text=UserUpdate\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.labservices.models.UserUpdate.UserUpdate()"
  fullName: "com.azure.resourcemanager.labservices.models.UserUpdate.UserUpdate()"
  name: "UserUpdate()"
  nameWithType: "UserUpdate.UserUpdate()"
  summary: "Creates an instance of User<wbr>Update class."
  syntax: "public UserUpdate()"
  desc: "Creates an instance of UserUpdate class."
methods:
- uid: "com.azure.resourcemanager.labservices.models.UserUpdate.additionalUsageQuota()"
  fullName: "com.azure.resourcemanager.labservices.models.UserUpdate.additionalUsageQuota()"
  name: "additionalUsageQuota()"
  nameWithType: "UserUpdate.additionalUsageQuota()"
  summary: "Get the additional<wbr>Usage<wbr>Quota property: The amount of usage quota time the user gets in addition to the lab usage quota."
  syntax: "public Duration additionalUsageQuota()"
  desc: "Get the additionalUsageQuota property: The amount of usage quota time the user gets in addition to the lab usage quota."
  returns:
    description: "the additionalUsageQuota value."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.UserUpdate.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.labservices.models.UserUpdate.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "UserUpdate.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of User<wbr>Update from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static UserUpdate fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the UserUpdate."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads an instance of UserUpdate from the JsonReader."
  returns:
    description: "An instance of UserUpdate if the JsonReader was pointing to an instance of it, or null if it was pointing\n to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.UserUpdate?alt=com.azure.resourcemanager.labservices.models.UserUpdate&text=UserUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.UserUpdate.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.labservices.models.UserUpdate.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "UserUpdate.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.labservices.models.UserUpdate.validate()"
  fullName: "com.azure.resourcemanager.labservices.models.UserUpdate.validate()"
  name: "validate()"
  nameWithType: "UserUpdate.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.labservices.models.UserUpdate.withAdditionalUsageQuota(java.time.Duration)"
  fullName: "com.azure.resourcemanager.labservices.models.UserUpdate.withAdditionalUsageQuota(Duration additionalUsageQuota)"
  name: "withAdditionalUsageQuota(Duration additionalUsageQuota)"
  nameWithType: "UserUpdate.withAdditionalUsageQuota(Duration additionalUsageQuota)"
  summary: "Set the additional<wbr>Usage<wbr>Quota property: The amount of usage quota time the user gets in addition to the lab usage quota."
  parameters:
  - description: "the additionalUsageQuota value to set."
    name: "additionalUsageQuota"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UserUpdate withAdditionalUsageQuota(Duration additionalUsageQuota)"
  desc: "Set the additionalUsageQuota property: The amount of usage quota time the user gets in addition to the lab usage quota."
  returns:
    description: "the UserUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.labservices.models.UserUpdate?alt=com.azure.resourcemanager.labservices.models.UserUpdate&text=UserUpdate\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "User of a lab that can register for and use virtual machines within the lab. Used for updates."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.labservices.models.UserUpdate?alt=com.azure.resourcemanager.labservices.models.UserUpdate&text=UserUpdate\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.labservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-labservices:1.0.0
