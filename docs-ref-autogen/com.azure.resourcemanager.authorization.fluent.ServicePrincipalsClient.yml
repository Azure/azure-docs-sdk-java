### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient"
fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient"
name: "ServicePrincipalsClient"
nameWithType: "ServicePrincipalsClient"
summary: "An instance of this class provides access to all the operations defined in Service<wbr>Principals<wbr>Client."
syntax: "public interface ServicePrincipalsClient"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addKey(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddKeyRequestBodyInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addKey(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body)"
  name: "addKey(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body)"
  nameWithType: "ServicePrincipalsClient.addKey(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body)"
  summary: "Invoke action add<wbr>Key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddKeyRequestBodyInner?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddKeyRequestBodyInner&text=ServicePrincipalsAddKeyRequestBodyInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphKeyCredentialInner addKey(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body)"
  desc: "Invoke action addKey."
  returns:
    description: "keyCredential."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphKeyCredentialInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphKeyCredentialInner&text=MicrosoftGraphKeyCredentialInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addKeyAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddKeyRequestBodyInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addKeyAsync(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body)"
  name: "addKeyAsync(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body)"
  nameWithType: "ServicePrincipalsClient.addKeyAsync(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body)"
  summary: "Invoke action add<wbr>Key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddKeyRequestBodyInner?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddKeyRequestBodyInner&text=ServicePrincipalsAddKeyRequestBodyInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphKeyCredentialInner> addKeyAsync(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body)"
  desc: "Invoke action addKey."
  returns:
    description: "keyCredential."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphKeyCredentialInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphKeyCredentialInner&text=MicrosoftGraphKeyCredentialInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addKeyWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddKeyRequestBodyInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addKeyWithResponse(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body, Context context)"
  name: "addKeyWithResponse(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body, Context context)"
  nameWithType: "ServicePrincipalsClient.addKeyWithResponse(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body, Context context)"
  summary: "Invoke action add<wbr>Key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddKeyRequestBodyInner?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddKeyRequestBodyInner&text=ServicePrincipalsAddKeyRequestBodyInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphKeyCredentialInner> addKeyWithResponse(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body, Context context)"
  desc: "Invoke action addKey."
  returns:
    description: "keyCredential."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphKeyCredentialInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphKeyCredentialInner&text=MicrosoftGraphKeyCredentialInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addKeyWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddKeyRequestBodyInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addKeyWithResponseAsync(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body)"
  name: "addKeyWithResponseAsync(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body)"
  nameWithType: "ServicePrincipalsClient.addKeyWithResponseAsync(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body)"
  summary: "Invoke action add<wbr>Key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddKeyRequestBodyInner?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddKeyRequestBodyInner&text=ServicePrincipalsAddKeyRequestBodyInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphKeyCredentialInner>> addKeyWithResponseAsync(String servicePrincipalId, ServicePrincipalsAddKeyRequestBodyInner body)"
  desc: "Invoke action addKey."
  returns:
    description: "keyCredential."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphKeyCredentialInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphKeyCredentialInner&text=MicrosoftGraphKeyCredentialInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addPassword(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddPasswordRequestBodyInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addPassword(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body)"
  name: "addPassword(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body)"
  nameWithType: "ServicePrincipalsClient.addPassword(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body)"
  summary: "Invoke action add<wbr>Password."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddPasswordRequestBodyInner?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddPasswordRequestBodyInner&text=ServicePrincipalsAddPasswordRequestBodyInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphPasswordCredentialInner addPassword(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body)"
  desc: "Invoke action addPassword."
  returns:
    description: "passwordCredential."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPasswordCredentialInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPasswordCredentialInner&text=MicrosoftGraphPasswordCredentialInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addPasswordAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddPasswordRequestBodyInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addPasswordAsync(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body)"
  name: "addPasswordAsync(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body)"
  nameWithType: "ServicePrincipalsClient.addPasswordAsync(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body)"
  summary: "Invoke action add<wbr>Password."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddPasswordRequestBodyInner?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddPasswordRequestBodyInner&text=ServicePrincipalsAddPasswordRequestBodyInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphPasswordCredentialInner> addPasswordAsync(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body)"
  desc: "Invoke action addPassword."
  returns:
    description: "passwordCredential."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPasswordCredentialInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPasswordCredentialInner&text=MicrosoftGraphPasswordCredentialInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addPasswordWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddPasswordRequestBodyInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addPasswordWithResponse(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body, Context context)"
  name: "addPasswordWithResponse(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body, Context context)"
  nameWithType: "ServicePrincipalsClient.addPasswordWithResponse(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body, Context context)"
  summary: "Invoke action add<wbr>Password."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddPasswordRequestBodyInner?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddPasswordRequestBodyInner&text=ServicePrincipalsAddPasswordRequestBodyInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphPasswordCredentialInner> addPasswordWithResponse(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body, Context context)"
  desc: "Invoke action addPassword."
  returns:
    description: "passwordCredential."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPasswordCredentialInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPasswordCredentialInner&text=MicrosoftGraphPasswordCredentialInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addPasswordWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddPasswordRequestBodyInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.addPasswordWithResponseAsync(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body)"
  name: "addPasswordWithResponseAsync(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body)"
  nameWithType: "ServicePrincipalsClient.addPasswordWithResponseAsync(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body)"
  summary: "Invoke action add<wbr>Password."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddPasswordRequestBodyInner?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsAddPasswordRequestBodyInner&text=ServicePrincipalsAddPasswordRequestBodyInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphPasswordCredentialInner>> addPasswordWithResponseAsync(String servicePrincipalId, ServicePrincipalsAddPasswordRequestBodyInner body)"
  desc: "Invoke action addPassword."
  returns:
    description: "passwordCredential."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPasswordCredentialInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphPasswordCredentialInner&text=MicrosoftGraphPasswordCredentialInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberGroups(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberGroups(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body)"
  name: "checkMemberGroups(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.checkMemberGroups(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body)"
  summary: "Invoke action check<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberGroupsRequestBody&text=ServicePrincipalsCheckMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<String> checkMemberGroups(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body)"
  desc: "Invoke action checkMemberGroups."
  returns:
    description: "array of String."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberGroupsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberGroupsAsync(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body)"
  name: "checkMemberGroupsAsync(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.checkMemberGroupsAsync(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body)"
  summary: "Invoke action check<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberGroupsRequestBody&text=ServicePrincipalsCheckMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<String>> checkMemberGroupsAsync(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body)"
  desc: "Invoke action checkMemberGroups."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberGroupsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberGroupsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberGroupsWithResponse(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body, Context context)"
  name: "checkMemberGroupsWithResponse(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body, Context context)"
  nameWithType: "ServicePrincipalsClient.checkMemberGroupsWithResponse(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body, Context context)"
  summary: "Invoke action check<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberGroupsRequestBody&text=ServicePrincipalsCheckMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<String>> checkMemberGroupsWithResponse(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body, Context context)"
  desc: "Invoke action checkMemberGroups."
  returns:
    description: "array of String."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberGroupsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberGroupsWithResponseAsync(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body)"
  name: "checkMemberGroupsWithResponseAsync(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.checkMemberGroupsWithResponseAsync(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body)"
  summary: "Invoke action check<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberGroupsRequestBody&text=ServicePrincipalsCheckMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<String>>> checkMemberGroupsWithResponseAsync(String servicePrincipalId, ServicePrincipalsCheckMemberGroupsRequestBody body)"
  desc: "Invoke action checkMemberGroups."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberObjects(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberObjects(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body)"
  name: "checkMemberObjects(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.checkMemberObjects(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body)"
  summary: "Invoke action check<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberObjectsRequestBody&text=ServicePrincipalsCheckMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<String> checkMemberObjects(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body)"
  desc: "Invoke action checkMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberObjectsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberObjectsAsync(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body)"
  name: "checkMemberObjectsAsync(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.checkMemberObjectsAsync(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body)"
  summary: "Invoke action check<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberObjectsRequestBody&text=ServicePrincipalsCheckMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<String>> checkMemberObjectsAsync(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body)"
  desc: "Invoke action checkMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberObjectsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberObjectsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberObjectsWithResponse(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body, Context context)"
  name: "checkMemberObjectsWithResponse(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body, Context context)"
  nameWithType: "ServicePrincipalsClient.checkMemberObjectsWithResponse(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body, Context context)"
  summary: "Invoke action check<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberObjectsRequestBody&text=ServicePrincipalsCheckMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<String>> checkMemberObjectsWithResponse(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body, Context context)"
  desc: "Invoke action checkMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberObjectsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.checkMemberObjectsWithResponseAsync(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body)"
  name: "checkMemberObjectsWithResponseAsync(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.checkMemberObjectsWithResponseAsync(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body)"
  summary: "Invoke action check<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsCheckMemberObjectsRequestBody&text=ServicePrincipalsCheckMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<String>>> checkMemberObjectsWithResponseAsync(String servicePrincipalId, ServicePrincipalsCheckMemberObjectsRequestBody body)"
  desc: "Invoke action checkMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignedTo(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignedTo(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "createAppRoleAssignedTo(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "ServicePrincipalsClient.createAppRoleAssignedTo(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Create new navigation property to app<wbr>Role<wbr>Assigned<wbr>To for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphAppRoleAssignmentInner createAppRoleAssignedTo(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Create new navigation property to appRoleAssignedTo for servicePrincipals."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignedToAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignedToAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "createAppRoleAssignedToAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "ServicePrincipalsClient.createAppRoleAssignedToAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Create new navigation property to app<wbr>Role<wbr>Assigned<wbr>To for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphAppRoleAssignmentInner> createAppRoleAssignedToAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Create new navigation property to appRoleAssignedTo for servicePrincipals."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignedToWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignedToWithResponse(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  name: "createAppRoleAssignedToWithResponse(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  nameWithType: "ServicePrincipalsClient.createAppRoleAssignedToWithResponse(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  summary: "Create new navigation property to app<wbr>Role<wbr>Assigned<wbr>To for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphAppRoleAssignmentInner> createAppRoleAssignedToWithResponse(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  desc: "Create new navigation property to appRoleAssignedTo for servicePrincipals."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignedToWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignedToWithResponseAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "createAppRoleAssignedToWithResponseAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "ServicePrincipalsClient.createAppRoleAssignedToWithResponseAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Create new navigation property to app<wbr>Role<wbr>Assigned<wbr>To for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphAppRoleAssignmentInner>> createAppRoleAssignedToWithResponseAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Create new navigation property to appRoleAssignedTo for servicePrincipals."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignments(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignments(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "createAppRoleAssignments(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "ServicePrincipalsClient.createAppRoleAssignments(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Create new navigation property to app<wbr>Role<wbr>Assignments for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphAppRoleAssignmentInner createAppRoleAssignments(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Create new navigation property to appRoleAssignments for servicePrincipals."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignmentsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignmentsAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "createAppRoleAssignmentsAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "ServicePrincipalsClient.createAppRoleAssignmentsAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Create new navigation property to app<wbr>Role<wbr>Assignments for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphAppRoleAssignmentInner> createAppRoleAssignmentsAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Create new navigation property to appRoleAssignments for servicePrincipals."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignmentsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignmentsWithResponse(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  name: "createAppRoleAssignmentsWithResponse(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  nameWithType: "ServicePrincipalsClient.createAppRoleAssignmentsWithResponse(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  summary: "Create new navigation property to app<wbr>Role<wbr>Assignments for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphAppRoleAssignmentInner> createAppRoleAssignmentsWithResponse(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  desc: "Create new navigation property to appRoleAssignments for servicePrincipals."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignmentsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "createAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "ServicePrincipalsClient.createAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Create new navigation property to app<wbr>Role<wbr>Assignments for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphAppRoleAssignmentInner>> createAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Create new navigation property to appRoleAssignments for servicePrincipals."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createDelegatedPermissionClassifications(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createDelegatedPermissionClassifications(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  name: "createDelegatedPermissionClassifications(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  nameWithType: "ServicePrincipalsClient.createDelegatedPermissionClassifications(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  summary: "Create new navigation property to delegated<wbr>Permission<wbr>Classifications for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphDelegatedPermissionClassificationInner createDelegatedPermissionClassifications(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  desc: "Create new navigation property to delegatedPermissionClassifications for servicePrincipals."
  returns:
    description: "delegatedPermissionClassification."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createDelegatedPermissionClassificationsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createDelegatedPermissionClassificationsAsync(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  name: "createDelegatedPermissionClassificationsAsync(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  nameWithType: "ServicePrincipalsClient.createDelegatedPermissionClassificationsAsync(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  summary: "Create new navigation property to delegated<wbr>Permission<wbr>Classifications for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphDelegatedPermissionClassificationInner> createDelegatedPermissionClassificationsAsync(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  desc: "Create new navigation property to delegatedPermissionClassifications for servicePrincipals."
  returns:
    description: "delegatedPermissionClassification."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createDelegatedPermissionClassificationsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body, Context context)"
  name: "createDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body, Context context)"
  nameWithType: "ServicePrincipalsClient.createDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body, Context context)"
  summary: "Create new navigation property to delegated<wbr>Permission<wbr>Classifications for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphDelegatedPermissionClassificationInner> createDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body, Context context)"
  desc: "Create new navigation property to delegatedPermissionClassifications for servicePrincipals."
  returns:
    description: "delegatedPermissionClassification."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createDelegatedPermissionClassificationsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  name: "createDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  nameWithType: "ServicePrincipalsClient.createDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  summary: "Create new navigation property to delegated<wbr>Permission<wbr>Classifications for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphDelegatedPermissionClassificationInner>> createDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  desc: "Create new navigation property to delegatedPermissionClassifications for servicePrincipals."
  returns:
    description: "delegatedPermissionClassification."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createEndpoints(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createEndpoints(String servicePrincipalId, MicrosoftGraphEndpointInner body)"
  name: "createEndpoints(String servicePrincipalId, MicrosoftGraphEndpointInner body)"
  nameWithType: "ServicePrincipalsClient.createEndpoints(String servicePrincipalId, MicrosoftGraphEndpointInner body)"
  summary: "Create new navigation property to endpoints for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphEndpointInner createEndpoints(String servicePrincipalId, MicrosoftGraphEndpointInner body)"
  desc: "Create new navigation property to endpoints for servicePrincipals."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createEndpointsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createEndpointsAsync(String servicePrincipalId, MicrosoftGraphEndpointInner body)"
  name: "createEndpointsAsync(String servicePrincipalId, MicrosoftGraphEndpointInner body)"
  nameWithType: "ServicePrincipalsClient.createEndpointsAsync(String servicePrincipalId, MicrosoftGraphEndpointInner body)"
  summary: "Create new navigation property to endpoints for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphEndpointInner> createEndpointsAsync(String servicePrincipalId, MicrosoftGraphEndpointInner body)"
  desc: "Create new navigation property to endpoints for servicePrincipals."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createEndpointsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createEndpointsWithResponse(String servicePrincipalId, MicrosoftGraphEndpointInner body, Context context)"
  name: "createEndpointsWithResponse(String servicePrincipalId, MicrosoftGraphEndpointInner body, Context context)"
  nameWithType: "ServicePrincipalsClient.createEndpointsWithResponse(String servicePrincipalId, MicrosoftGraphEndpointInner body, Context context)"
  summary: "Create new navigation property to endpoints for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphEndpointInner> createEndpointsWithResponse(String servicePrincipalId, MicrosoftGraphEndpointInner body, Context context)"
  desc: "Create new navigation property to endpoints for servicePrincipals."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createEndpointsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createEndpointsWithResponseAsync(String servicePrincipalId, MicrosoftGraphEndpointInner body)"
  name: "createEndpointsWithResponseAsync(String servicePrincipalId, MicrosoftGraphEndpointInner body)"
  nameWithType: "ServicePrincipalsClient.createEndpointsWithResponseAsync(String servicePrincipalId, MicrosoftGraphEndpointInner body)"
  summary: "Create new navigation property to endpoints for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphEndpointInner>> createEndpointsWithResponseAsync(String servicePrincipalId, MicrosoftGraphEndpointInner body)"
  desc: "Create new navigation property to endpoints for servicePrincipals."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefClaimsMappingPolicies(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefClaimsMappingPolicies(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefClaimsMappingPolicies(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefClaimsMappingPolicies(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to claims<wbr>Mapping<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefClaimsMappingPolicies(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to claimsMappingPolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefClaimsMappingPoliciesAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefClaimsMappingPoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefClaimsMappingPoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefClaimsMappingPoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to claims<wbr>Mapping<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefClaimsMappingPoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to claimsMappingPolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefClaimsMappingPoliciesWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefClaimsMappingPoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  name: "createRefClaimsMappingPoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  nameWithType: "ServicePrincipalsClient.createRefClaimsMappingPoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to claims<wbr>Mapping<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefClaimsMappingPoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to claimsMappingPolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefClaimsMappingPoliciesWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefClaimsMappingPoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefClaimsMappingPoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefClaimsMappingPoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to claims<wbr>Mapping<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefClaimsMappingPoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to claimsMappingPolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefCreatedObjects(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefCreatedObjects(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefCreatedObjects(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefCreatedObjects(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to created<wbr>Objects for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefCreatedObjects(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to createdObjects for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefCreatedObjectsAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefCreatedObjectsAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefCreatedObjectsAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefCreatedObjectsAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to created<wbr>Objects for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefCreatedObjectsAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to createdObjects for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefCreatedObjectsWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefCreatedObjectsWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  name: "createRefCreatedObjectsWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  nameWithType: "ServicePrincipalsClient.createRefCreatedObjectsWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to created<wbr>Objects for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefCreatedObjectsWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to createdObjects for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefCreatedObjectsWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefCreatedObjectsWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefCreatedObjectsWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefCreatedObjectsWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to created<wbr>Objects for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefCreatedObjectsWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to createdObjects for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefHomeRealmDiscoveryPolicies(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefHomeRealmDiscoveryPolicies(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefHomeRealmDiscoveryPolicies(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefHomeRealmDiscoveryPolicies(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to home<wbr>Realm<wbr>Discovery<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefHomeRealmDiscoveryPolicies(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to homeRealmDiscoveryPolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefHomeRealmDiscoveryPoliciesAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to home<wbr>Realm<wbr>Discovery<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to homeRealmDiscoveryPolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefHomeRealmDiscoveryPoliciesWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefHomeRealmDiscoveryPoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  name: "createRefHomeRealmDiscoveryPoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  nameWithType: "ServicePrincipalsClient.createRefHomeRealmDiscoveryPoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to home<wbr>Realm<wbr>Discovery<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefHomeRealmDiscoveryPoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to homeRealmDiscoveryPolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefHomeRealmDiscoveryPoliciesWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefHomeRealmDiscoveryPoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefHomeRealmDiscoveryPoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefHomeRealmDiscoveryPoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to home<wbr>Realm<wbr>Discovery<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefHomeRealmDiscoveryPoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to homeRealmDiscoveryPolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefMemberOf(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefMemberOf(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefMemberOf(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefMemberOf(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to member<wbr>Of for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefMemberOf(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to memberOf for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefMemberOfAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefMemberOfAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefMemberOfAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefMemberOfAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to member<wbr>Of for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefMemberOfAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to memberOf for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefMemberOfWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefMemberOfWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  name: "createRefMemberOfWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  nameWithType: "ServicePrincipalsClient.createRefMemberOfWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to member<wbr>Of for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefMemberOfWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to memberOf for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefMemberOfWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefMemberOfWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefMemberOfWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefMemberOfWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to member<wbr>Of for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefMemberOfWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to memberOf for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOauth2PermissionGrants(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOauth2PermissionGrants(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefOauth2PermissionGrants(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefOauth2PermissionGrants(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to oauth2Permission<wbr>Grants for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefOauth2PermissionGrants(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to oauth2PermissionGrants for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOauth2PermissionGrantsAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOauth2PermissionGrantsAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefOauth2PermissionGrantsAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefOauth2PermissionGrantsAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to oauth2Permission<wbr>Grants for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefOauth2PermissionGrantsAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to oauth2PermissionGrants for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOauth2PermissionGrantsWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOauth2PermissionGrantsWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  name: "createRefOauth2PermissionGrantsWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  nameWithType: "ServicePrincipalsClient.createRefOauth2PermissionGrantsWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to oauth2Permission<wbr>Grants for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefOauth2PermissionGrantsWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to oauth2PermissionGrants for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOauth2PermissionGrantsWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOauth2PermissionGrantsWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefOauth2PermissionGrantsWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefOauth2PermissionGrantsWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to oauth2Permission<wbr>Grants for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefOauth2PermissionGrantsWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to oauth2PermissionGrants for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnedObjects(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnedObjects(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefOwnedObjects(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefOwnedObjects(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to owned<wbr>Objects for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefOwnedObjects(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to ownedObjects for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnedObjectsAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnedObjectsAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefOwnedObjectsAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefOwnedObjectsAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to owned<wbr>Objects for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefOwnedObjectsAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to ownedObjects for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnedObjectsWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnedObjectsWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  name: "createRefOwnedObjectsWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  nameWithType: "ServicePrincipalsClient.createRefOwnedObjectsWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to owned<wbr>Objects for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefOwnedObjectsWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to ownedObjects for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnedObjectsWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnedObjectsWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefOwnedObjectsWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefOwnedObjectsWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to owned<wbr>Objects for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefOwnedObjectsWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to ownedObjects for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwners(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwners(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefOwners(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefOwners(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to owners for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefOwners(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to owners for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnersAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnersAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefOwnersAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefOwnersAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to owners for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefOwnersAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to owners for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnersWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnersWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  name: "createRefOwnersWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  nameWithType: "ServicePrincipalsClient.createRefOwnersWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to owners for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefOwnersWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to owners for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnersWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefOwnersWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefOwnersWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefOwnersWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to owners for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefOwnersWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to owners for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenIssuancePolicies(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenIssuancePolicies(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefTokenIssuancePolicies(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefTokenIssuancePolicies(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to token<wbr>Issuance<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefTokenIssuancePolicies(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to tokenIssuancePolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenIssuancePoliciesAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenIssuancePoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefTokenIssuancePoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefTokenIssuancePoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to token<wbr>Issuance<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefTokenIssuancePoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to tokenIssuancePolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenIssuancePoliciesWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenIssuancePoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  name: "createRefTokenIssuancePoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  nameWithType: "ServicePrincipalsClient.createRefTokenIssuancePoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to token<wbr>Issuance<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefTokenIssuancePoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to tokenIssuancePolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenIssuancePoliciesWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenIssuancePoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefTokenIssuancePoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefTokenIssuancePoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to token<wbr>Issuance<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefTokenIssuancePoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to tokenIssuancePolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenLifetimePolicies(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenLifetimePolicies(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefTokenLifetimePolicies(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefTokenLifetimePolicies(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to token<wbr>Lifetime<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefTokenLifetimePolicies(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to tokenLifetimePolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenLifetimePoliciesAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenLifetimePoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefTokenLifetimePoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefTokenLifetimePoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to token<wbr>Lifetime<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefTokenLifetimePoliciesAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to tokenLifetimePolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenLifetimePoliciesWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenLifetimePoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  name: "createRefTokenLifetimePoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  nameWithType: "ServicePrincipalsClient.createRefTokenLifetimePoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to token<wbr>Lifetime<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefTokenLifetimePoliciesWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to tokenLifetimePolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenLifetimePoliciesWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTokenLifetimePoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefTokenLifetimePoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefTokenLifetimePoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to token<wbr>Lifetime<wbr>Policies for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefTokenLifetimePoliciesWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to tokenLifetimePolicies for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTransitiveMemberOf(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTransitiveMemberOf(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefTransitiveMemberOf(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefTransitiveMemberOf(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to transitive<wbr>Member<wbr>Of for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Map<String,Object> createRefTransitiveMemberOf(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to transitiveMemberOf for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTransitiveMemberOfAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTransitiveMemberOfAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefTransitiveMemberOfAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefTransitiveMemberOfAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to transitive<wbr>Member<wbr>Of for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Map<String,Object>> createRefTransitiveMemberOfAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to transitiveMemberOf for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTransitiveMemberOfWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTransitiveMemberOfWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  name: "createRefTransitiveMemberOfWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  nameWithType: "ServicePrincipalsClient.createRefTransitiveMemberOfWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  summary: "Create new navigation property ref to transitive<wbr>Member<wbr>Of for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Map<String,Object>> createRefTransitiveMemberOfWithResponse(String servicePrincipalId, Map<String,Object> body, Context context)"
  desc: "Create new navigation property ref to transitiveMemberOf for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTransitiveMemberOfWithResponseAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.createRefTransitiveMemberOfWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  name: "createRefTransitiveMemberOfWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  nameWithType: "ServicePrincipalsClient.createRefTransitiveMemberOfWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  summary: "Create new navigation property ref to transitive<wbr>Member<wbr>Of for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property ref value."
    name: "body"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<Map<String,Object>>> createRefTransitiveMemberOfWithResponseAsync(String servicePrincipalId, Map<String,Object> body)"
  desc: "Create new navigation property ref to transitiveMemberOf for servicePrincipals."
  returns:
    description: "dictionary of &lt;any&gt;."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignedTo(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignedTo(String servicePrincipalId, String appRoleAssignmentId)"
  name: "deleteAppRoleAssignedTo(String servicePrincipalId, String appRoleAssignmentId)"
  nameWithType: "ServicePrincipalsClient.deleteAppRoleAssignedTo(String servicePrincipalId, String appRoleAssignmentId)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assigned<wbr>To for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteAppRoleAssignedTo(String servicePrincipalId, String appRoleAssignmentId)"
  desc: "Delete navigation property appRoleAssignedTo for servicePrincipals."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignedToAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId)"
  name: "deleteAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId)"
  nameWithType: "ServicePrincipalsClient.deleteAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assigned<wbr>To for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId)"
  desc: "Delete navigation property appRoleAssignedTo for servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignedToAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  name: "deleteAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  nameWithType: "ServicePrincipalsClient.deleteAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assigned<wbr>To for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  desc: "Delete navigation property appRoleAssignedTo for servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignedToWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignedToWithResponse(String servicePrincipalId, String appRoleAssignmentId, String ifMatch, Context context)"
  name: "deleteAppRoleAssignedToWithResponse(String servicePrincipalId, String appRoleAssignmentId, String ifMatch, Context context)"
  nameWithType: "ServicePrincipalsClient.deleteAppRoleAssignedToWithResponse(String servicePrincipalId, String appRoleAssignmentId, String ifMatch, Context context)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assigned<wbr>To for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteAppRoleAssignedToWithResponse(String servicePrincipalId, String appRoleAssignmentId, String ifMatch, Context context)"
  desc: "Delete navigation property appRoleAssignedTo for servicePrincipals."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignedToWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignedToWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  name: "deleteAppRoleAssignedToWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  nameWithType: "ServicePrincipalsClient.deleteAppRoleAssignedToWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assigned<wbr>To for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteAppRoleAssignedToWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  desc: "Delete navigation property appRoleAssignedTo for servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignments(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignments(String servicePrincipalId, String appRoleAssignmentId)"
  name: "deleteAppRoleAssignments(String servicePrincipalId, String appRoleAssignmentId)"
  nameWithType: "ServicePrincipalsClient.deleteAppRoleAssignments(String servicePrincipalId, String appRoleAssignmentId)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assignments for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteAppRoleAssignments(String servicePrincipalId, String appRoleAssignmentId)"
  desc: "Delete navigation property appRoleAssignments for servicePrincipals."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignmentsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId)"
  name: "deleteAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId)"
  nameWithType: "ServicePrincipalsClient.deleteAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assignments for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId)"
  desc: "Delete navigation property appRoleAssignments for servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignmentsAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  name: "deleteAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  nameWithType: "ServicePrincipalsClient.deleteAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assignments for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  desc: "Delete navigation property appRoleAssignments for servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignmentsWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignmentsWithResponse(String servicePrincipalId, String appRoleAssignmentId, String ifMatch, Context context)"
  name: "deleteAppRoleAssignmentsWithResponse(String servicePrincipalId, String appRoleAssignmentId, String ifMatch, Context context)"
  nameWithType: "ServicePrincipalsClient.deleteAppRoleAssignmentsWithResponse(String servicePrincipalId, String appRoleAssignmentId, String ifMatch, Context context)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assignments for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteAppRoleAssignmentsWithResponse(String servicePrincipalId, String appRoleAssignmentId, String ifMatch, Context context)"
  desc: "Delete navigation property appRoleAssignments for servicePrincipals."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignmentsWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  name: "deleteAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  nameWithType: "ServicePrincipalsClient.deleteAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  summary: "Delete navigation property app<wbr>Role<wbr>Assignments for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, String ifMatch)"
  desc: "Delete navigation property appRoleAssignments for servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteDelegatedPermissionClassifications(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteDelegatedPermissionClassifications(String servicePrincipalId, String delegatedPermissionClassificationId)"
  name: "deleteDelegatedPermissionClassifications(String servicePrincipalId, String delegatedPermissionClassificationId)"
  nameWithType: "ServicePrincipalsClient.deleteDelegatedPermissionClassifications(String servicePrincipalId, String delegatedPermissionClassificationId)"
  summary: "Delete navigation property delegated<wbr>Permission<wbr>Classifications for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteDelegatedPermissionClassifications(String servicePrincipalId, String delegatedPermissionClassificationId)"
  desc: "Delete navigation property delegatedPermissionClassifications for servicePrincipals."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteDelegatedPermissionClassificationsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId)"
  name: "deleteDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId)"
  nameWithType: "ServicePrincipalsClient.deleteDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId)"
  summary: "Delete navigation property delegated<wbr>Permission<wbr>Classifications for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId)"
  desc: "Delete navigation property delegatedPermissionClassifications for servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteDelegatedPermissionClassificationsAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId, String ifMatch)"
  name: "deleteDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId, String ifMatch)"
  nameWithType: "ServicePrincipalsClient.deleteDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId, String ifMatch)"
  summary: "Delete navigation property delegated<wbr>Permission<wbr>Classifications for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId, String ifMatch)"
  desc: "Delete navigation property delegatedPermissionClassifications for servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteDelegatedPermissionClassificationsWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, String delegatedPermissionClassificationId, String ifMatch, Context context)"
  name: "deleteDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, String delegatedPermissionClassificationId, String ifMatch, Context context)"
  nameWithType: "ServicePrincipalsClient.deleteDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, String delegatedPermissionClassificationId, String ifMatch, Context context)"
  summary: "Delete navigation property delegated<wbr>Permission<wbr>Classifications for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, String delegatedPermissionClassificationId, String ifMatch, Context context)"
  desc: "Delete navigation property delegatedPermissionClassifications for servicePrincipals."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteDelegatedPermissionClassificationsWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, String delegatedPermissionClassificationId, String ifMatch)"
  name: "deleteDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, String delegatedPermissionClassificationId, String ifMatch)"
  nameWithType: "ServicePrincipalsClient.deleteDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, String delegatedPermissionClassificationId, String ifMatch)"
  summary: "Delete navigation property delegated<wbr>Permission<wbr>Classifications for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, String delegatedPermissionClassificationId, String ifMatch)"
  desc: "Delete navigation property delegatedPermissionClassifications for servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteEndpoints(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteEndpoints(String servicePrincipalId, String endpointId)"
  name: "deleteEndpoints(String servicePrincipalId, String endpointId)"
  nameWithType: "ServicePrincipalsClient.deleteEndpoints(String servicePrincipalId, String endpointId)"
  summary: "Delete navigation property endpoints for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteEndpoints(String servicePrincipalId, String endpointId)"
  desc: "Delete navigation property endpoints for servicePrincipals."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteEndpointsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteEndpointsAsync(String servicePrincipalId, String endpointId)"
  name: "deleteEndpointsAsync(String servicePrincipalId, String endpointId)"
  nameWithType: "ServicePrincipalsClient.deleteEndpointsAsync(String servicePrincipalId, String endpointId)"
  summary: "Delete navigation property endpoints for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteEndpointsAsync(String servicePrincipalId, String endpointId)"
  desc: "Delete navigation property endpoints for servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteEndpointsAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteEndpointsAsync(String servicePrincipalId, String endpointId, String ifMatch)"
  name: "deleteEndpointsAsync(String servicePrincipalId, String endpointId, String ifMatch)"
  nameWithType: "ServicePrincipalsClient.deleteEndpointsAsync(String servicePrincipalId, String endpointId, String ifMatch)"
  summary: "Delete navigation property endpoints for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteEndpointsAsync(String servicePrincipalId, String endpointId, String ifMatch)"
  desc: "Delete navigation property endpoints for servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteEndpointsWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteEndpointsWithResponse(String servicePrincipalId, String endpointId, String ifMatch, Context context)"
  name: "deleteEndpointsWithResponse(String servicePrincipalId, String endpointId, String ifMatch, Context context)"
  nameWithType: "ServicePrincipalsClient.deleteEndpointsWithResponse(String servicePrincipalId, String endpointId, String ifMatch, Context context)"
  summary: "Delete navigation property endpoints for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteEndpointsWithResponse(String servicePrincipalId, String endpointId, String ifMatch, Context context)"
  desc: "Delete navigation property endpoints for servicePrincipals."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteEndpointsWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deleteEndpointsWithResponseAsync(String servicePrincipalId, String endpointId, String ifMatch)"
  name: "deleteEndpointsWithResponseAsync(String servicePrincipalId, String endpointId, String ifMatch)"
  nameWithType: "ServicePrincipalsClient.deleteEndpointsWithResponseAsync(String servicePrincipalId, String endpointId, String ifMatch)"
  summary: "Delete navigation property endpoints for service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteEndpointsWithResponseAsync(String servicePrincipalId, String endpointId, String ifMatch)"
  desc: "Delete navigation property endpoints for servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.delta()"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.delta()"
  name: "delta()"
  nameWithType: "ServicePrincipalsClient.delta()"
  summary: "Invoke function delta."
  modifiers:
  - "abstract"
  syntax: "public abstract List<MicrosoftGraphServicePrincipalInner> delta()"
  desc: "Invoke function delta."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deltaAsync()"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deltaAsync()"
  name: "deltaAsync()"
  nameWithType: "ServicePrincipalsClient.deltaAsync()"
  summary: "Invoke function delta."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<List<MicrosoftGraphServicePrincipalInner>> deltaAsync()"
  desc: "Invoke function delta."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deltaWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deltaWithResponse(Context context)"
  name: "deltaWithResponse(Context context)"
  nameWithType: "ServicePrincipalsClient.deltaWithResponse(Context context)"
  summary: "Invoke function delta."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<MicrosoftGraphServicePrincipalInner>> deltaWithResponse(Context context)"
  desc: "Invoke function delta."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deltaWithResponseAsync()"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.deltaWithResponseAsync()"
  name: "deltaWithResponseAsync()"
  nameWithType: "ServicePrincipalsClient.deltaWithResponseAsync()"
  summary: "Invoke function delta."
  modifiers:
  - "abstract"
  syntax: "public abstract Mono<Response<List<MicrosoftGraphServicePrincipalInner>>> deltaWithResponseAsync()"
  desc: "Invoke function delta."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphServicePrincipalInner&text=MicrosoftGraphServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignedTo(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignedTo(String servicePrincipalId, String appRoleAssignmentId)"
  name: "getAppRoleAssignedTo(String servicePrincipalId, String appRoleAssignmentId)"
  nameWithType: "ServicePrincipalsClient.getAppRoleAssignedTo(String servicePrincipalId, String appRoleAssignmentId)"
  summary: "Get app<wbr>Role<wbr>Assigned<wbr>To from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphAppRoleAssignmentInner getAppRoleAssignedTo(String servicePrincipalId, String appRoleAssignmentId)"
  desc: "Get appRoleAssignedTo from servicePrincipals."
  returns:
    description: "appRoleAssignedTo from servicePrincipals."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignedToAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId)"
  name: "getAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId)"
  nameWithType: "ServicePrincipalsClient.getAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId)"
  summary: "Get app<wbr>Role<wbr>Assigned<wbr>To from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphAppRoleAssignmentInner> getAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId)"
  desc: "Get appRoleAssignedTo from servicePrincipals."
  returns:
    description: "appRoleAssignedTo from servicePrincipals."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignedToAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "getAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.getAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get app<wbr>Role<wbr>Assigned<wbr>To from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphAppRoleAssignmentInner> getAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get appRoleAssignedTo from servicePrincipals."
  returns:
    description: "appRoleAssignedTo from servicePrincipals."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignedToWithResponse(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignedToWithResponse(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "getAppRoleAssignedToWithResponse(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.getAppRoleAssignedToWithResponse(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get app<wbr>Role<wbr>Assigned<wbr>To from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphAppRoleAssignmentInner> getAppRoleAssignedToWithResponse(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get appRoleAssignedTo from servicePrincipals."
  returns:
    description: "appRoleAssignedTo from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignedToWithResponseAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignedToWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "getAppRoleAssignedToWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.getAppRoleAssignedToWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get app<wbr>Role<wbr>Assigned<wbr>To from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphAppRoleAssignmentInner>> getAppRoleAssignedToWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get appRoleAssignedTo from servicePrincipals."
  returns:
    description: "appRoleAssignedTo from servicePrincipals."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignments(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignments(String servicePrincipalId, String appRoleAssignmentId)"
  name: "getAppRoleAssignments(String servicePrincipalId, String appRoleAssignmentId)"
  nameWithType: "ServicePrincipalsClient.getAppRoleAssignments(String servicePrincipalId, String appRoleAssignmentId)"
  summary: "Get app<wbr>Role<wbr>Assignments from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphAppRoleAssignmentInner getAppRoleAssignments(String servicePrincipalId, String appRoleAssignmentId)"
  desc: "Get appRoleAssignments from servicePrincipals."
  returns:
    description: "appRoleAssignments from servicePrincipals."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignmentsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId)"
  name: "getAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId)"
  nameWithType: "ServicePrincipalsClient.getAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId)"
  summary: "Get app<wbr>Role<wbr>Assignments from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphAppRoleAssignmentInner> getAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId)"
  desc: "Get appRoleAssignments from servicePrincipals."
  returns:
    description: "appRoleAssignments from servicePrincipals."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignmentsAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "getAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.getAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get app<wbr>Role<wbr>Assignments from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphAppRoleAssignmentInner> getAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get appRoleAssignments from servicePrincipals."
  returns:
    description: "appRoleAssignments from servicePrincipals."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignmentsWithResponse(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignmentsWithResponse(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "getAppRoleAssignmentsWithResponse(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.getAppRoleAssignmentsWithResponse(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get app<wbr>Role<wbr>Assignments from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphAppRoleAssignmentInner> getAppRoleAssignmentsWithResponse(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get appRoleAssignments from servicePrincipals."
  returns:
    description: "appRoleAssignments from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignmentsWithResponseAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "getAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.getAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get app<wbr>Role<wbr>Assignments from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphAppRoleAssignmentInner>> getAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get appRoleAssignments from servicePrincipals."
  returns:
    description: "appRoleAssignments from servicePrincipals."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAvailableExtensionProperties(com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetAvailableExtensionPropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAvailableExtensionProperties(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body)"
  name: "getAvailableExtensionProperties(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body)"
  nameWithType: "ServicePrincipalsClient.getAvailableExtensionProperties(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body)"
  summary: "Invoke action get<wbr>Available<wbr>Extension<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetAvailableExtensionPropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetAvailableExtensionPropertiesRequestBody&text=ServicePrincipalsGetAvailableExtensionPropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<MicrosoftGraphExtensionPropertyInner> getAvailableExtensionProperties(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body)"
  desc: "Invoke action getAvailableExtensionProperties."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner&text=MicrosoftGraphExtensionPropertyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAvailableExtensionPropertiesAsync(com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetAvailableExtensionPropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAvailableExtensionPropertiesAsync(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body)"
  name: "getAvailableExtensionPropertiesAsync(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body)"
  nameWithType: "ServicePrincipalsClient.getAvailableExtensionPropertiesAsync(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body)"
  summary: "Invoke action get<wbr>Available<wbr>Extension<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetAvailableExtensionPropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetAvailableExtensionPropertiesRequestBody&text=ServicePrincipalsGetAvailableExtensionPropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<MicrosoftGraphExtensionPropertyInner>> getAvailableExtensionPropertiesAsync(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body)"
  desc: "Invoke action getAvailableExtensionProperties."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner&text=MicrosoftGraphExtensionPropertyInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAvailableExtensionPropertiesWithResponse(com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetAvailableExtensionPropertiesRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAvailableExtensionPropertiesWithResponse(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body, Context context)"
  name: "getAvailableExtensionPropertiesWithResponse(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body, Context context)"
  nameWithType: "ServicePrincipalsClient.getAvailableExtensionPropertiesWithResponse(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body, Context context)"
  summary: "Invoke action get<wbr>Available<wbr>Extension<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetAvailableExtensionPropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetAvailableExtensionPropertiesRequestBody&text=ServicePrincipalsGetAvailableExtensionPropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<MicrosoftGraphExtensionPropertyInner>> getAvailableExtensionPropertiesWithResponse(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body, Context context)"
  desc: "Invoke action getAvailableExtensionProperties."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner&text=MicrosoftGraphExtensionPropertyInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAvailableExtensionPropertiesWithResponseAsync(com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetAvailableExtensionPropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getAvailableExtensionPropertiesWithResponseAsync(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body)"
  name: "getAvailableExtensionPropertiesWithResponseAsync(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body)"
  nameWithType: "ServicePrincipalsClient.getAvailableExtensionPropertiesWithResponseAsync(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body)"
  summary: "Invoke action get<wbr>Available<wbr>Extension<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetAvailableExtensionPropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetAvailableExtensionPropertiesRequestBody&text=ServicePrincipalsGetAvailableExtensionPropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<MicrosoftGraphExtensionPropertyInner>>> getAvailableExtensionPropertiesWithResponseAsync(ServicePrincipalsGetAvailableExtensionPropertiesRequestBody body)"
  desc: "Invoke action getAvailableExtensionProperties."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphExtensionPropertyInner&text=MicrosoftGraphExtensionPropertyInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getByIds(com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetByIdsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getByIds(ServicePrincipalsGetByIdsRequestBody body)"
  name: "getByIds(ServicePrincipalsGetByIdsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.getByIds(ServicePrincipalsGetByIdsRequestBody body)"
  summary: "Invoke action get<wbr>ByIds."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetByIdsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetByIdsRequestBody&text=ServicePrincipalsGetByIdsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<MicrosoftGraphDirectoryObjectInner> getByIds(ServicePrincipalsGetByIdsRequestBody body)"
  desc: "Invoke action getByIds."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getByIdsAsync(com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetByIdsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getByIdsAsync(ServicePrincipalsGetByIdsRequestBody body)"
  name: "getByIdsAsync(ServicePrincipalsGetByIdsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.getByIdsAsync(ServicePrincipalsGetByIdsRequestBody body)"
  summary: "Invoke action get<wbr>ByIds."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetByIdsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetByIdsRequestBody&text=ServicePrincipalsGetByIdsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<MicrosoftGraphDirectoryObjectInner>> getByIdsAsync(ServicePrincipalsGetByIdsRequestBody body)"
  desc: "Invoke action getByIds."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getByIdsWithResponse(com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetByIdsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getByIdsWithResponse(ServicePrincipalsGetByIdsRequestBody body, Context context)"
  name: "getByIdsWithResponse(ServicePrincipalsGetByIdsRequestBody body, Context context)"
  nameWithType: "ServicePrincipalsClient.getByIdsWithResponse(ServicePrincipalsGetByIdsRequestBody body, Context context)"
  summary: "Invoke action get<wbr>ByIds."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetByIdsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetByIdsRequestBody&text=ServicePrincipalsGetByIdsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<MicrosoftGraphDirectoryObjectInner>> getByIdsWithResponse(ServicePrincipalsGetByIdsRequestBody body, Context context)"
  desc: "Invoke action getByIds."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getByIdsWithResponseAsync(com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetByIdsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getByIdsWithResponseAsync(ServicePrincipalsGetByIdsRequestBody body)"
  name: "getByIdsWithResponseAsync(ServicePrincipalsGetByIdsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.getByIdsWithResponseAsync(ServicePrincipalsGetByIdsRequestBody body)"
  summary: "Invoke action get<wbr>ByIds."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetByIdsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetByIdsRequestBody&text=ServicePrincipalsGetByIdsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<MicrosoftGraphDirectoryObjectInner>>> getByIdsWithResponseAsync(ServicePrincipalsGetByIdsRequestBody body)"
  desc: "Invoke action getByIds."
  returns:
    description: "array of microsoft."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getDelegatedPermissionClassifications(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getDelegatedPermissionClassifications(String servicePrincipalId, String delegatedPermissionClassificationId)"
  name: "getDelegatedPermissionClassifications(String servicePrincipalId, String delegatedPermissionClassificationId)"
  nameWithType: "ServicePrincipalsClient.getDelegatedPermissionClassifications(String servicePrincipalId, String delegatedPermissionClassificationId)"
  summary: "Get delegated<wbr>Permission<wbr>Classifications from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphDelegatedPermissionClassificationInner getDelegatedPermissionClassifications(String servicePrincipalId, String delegatedPermissionClassificationId)"
  desc: "Get delegatedPermissionClassifications from servicePrincipals."
  returns:
    description: "delegatedPermissionClassifications from servicePrincipals."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getDelegatedPermissionClassificationsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId)"
  name: "getDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId)"
  nameWithType: "ServicePrincipalsClient.getDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId)"
  summary: "Get delegated<wbr>Permission<wbr>Classifications from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphDelegatedPermissionClassificationInner> getDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId)"
  desc: "Get delegatedPermissionClassifications from servicePrincipals."
  returns:
    description: "delegatedPermissionClassifications from servicePrincipals."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getDelegatedPermissionClassificationsAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "getDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.getDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get delegated<wbr>Permission<wbr>Classifications from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphDelegatedPermissionClassificationInner> getDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get delegatedPermissionClassifications from servicePrincipals."
  returns:
    description: "delegatedPermissionClassifications from servicePrincipals."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getDelegatedPermissionClassificationsWithResponse(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, String delegatedPermissionClassificationId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "getDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, String delegatedPermissionClassificationId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.getDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, String delegatedPermissionClassificationId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get delegated<wbr>Permission<wbr>Classifications from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphDelegatedPermissionClassificationInner> getDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, String delegatedPermissionClassificationId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get delegatedPermissionClassifications from servicePrincipals."
  returns:
    description: "delegatedPermissionClassifications from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getDelegatedPermissionClassificationsWithResponseAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, String delegatedPermissionClassificationId, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "getDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, String delegatedPermissionClassificationId, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.getDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, String delegatedPermissionClassificationId, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get delegated<wbr>Permission<wbr>Classifications from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphDelegatedPermissionClassificationInner>> getDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, String delegatedPermissionClassificationId, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get delegatedPermissionClassifications from servicePrincipals."
  returns:
    description: "delegatedPermissionClassifications from servicePrincipals."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getEndpoints(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getEndpoints(String servicePrincipalId, String endpointId)"
  name: "getEndpoints(String servicePrincipalId, String endpointId)"
  nameWithType: "ServicePrincipalsClient.getEndpoints(String servicePrincipalId, String endpointId)"
  summary: "Get endpoints from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphEndpointInner getEndpoints(String servicePrincipalId, String endpointId)"
  desc: "Get endpoints from servicePrincipals."
  returns:
    description: "endpoints from servicePrincipals."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getEndpointsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getEndpointsAsync(String servicePrincipalId, String endpointId)"
  name: "getEndpointsAsync(String servicePrincipalId, String endpointId)"
  nameWithType: "ServicePrincipalsClient.getEndpointsAsync(String servicePrincipalId, String endpointId)"
  summary: "Get endpoints from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphEndpointInner> getEndpointsAsync(String servicePrincipalId, String endpointId)"
  desc: "Get endpoints from servicePrincipals."
  returns:
    description: "endpoints from servicePrincipals."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getEndpointsAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getEndpointsAsync(String servicePrincipalId, String endpointId, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "getEndpointsAsync(String servicePrincipalId, String endpointId, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.getEndpointsAsync(String servicePrincipalId, String endpointId, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get endpoints from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<MicrosoftGraphEndpointInner> getEndpointsAsync(String servicePrincipalId, String endpointId, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get endpoints from servicePrincipals."
  returns:
    description: "endpoints from servicePrincipals."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getEndpointsWithResponse(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getEndpointsWithResponse(String servicePrincipalId, String endpointId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "getEndpointsWithResponse(String servicePrincipalId, String endpointId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.getEndpointsWithResponse(String servicePrincipalId, String endpointId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get endpoints from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphEndpointInner> getEndpointsWithResponse(String servicePrincipalId, String endpointId, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get endpoints from servicePrincipals."
  returns:
    description: "endpoints from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getEndpointsWithResponseAsync(java.lang.String,java.lang.String,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getEndpointsWithResponseAsync(String servicePrincipalId, String endpointId, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "getEndpointsWithResponseAsync(String servicePrincipalId, String endpointId, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.getEndpointsWithResponseAsync(String servicePrincipalId, String endpointId, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get endpoints from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<MicrosoftGraphEndpointInner>> getEndpointsWithResponseAsync(String servicePrincipalId, String endpointId, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get endpoints from servicePrincipals."
  returns:
    description: "endpoints from servicePrincipals."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberGroups(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberGroups(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body)"
  name: "getMemberGroups(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.getMemberGroups(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body)"
  summary: "Invoke action get<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberGroupsRequestBody&text=ServicePrincipalsGetMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<String> getMemberGroups(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body)"
  desc: "Invoke action getMemberGroups."
  returns:
    description: "array of String."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberGroupsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberGroupsAsync(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body)"
  name: "getMemberGroupsAsync(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.getMemberGroupsAsync(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body)"
  summary: "Invoke action get<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberGroupsRequestBody&text=ServicePrincipalsGetMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<String>> getMemberGroupsAsync(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body)"
  desc: "Invoke action getMemberGroups."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberGroupsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberGroupsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberGroupsWithResponse(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body, Context context)"
  name: "getMemberGroupsWithResponse(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body, Context context)"
  nameWithType: "ServicePrincipalsClient.getMemberGroupsWithResponse(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body, Context context)"
  summary: "Invoke action get<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberGroupsRequestBody&text=ServicePrincipalsGetMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<String>> getMemberGroupsWithResponse(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body, Context context)"
  desc: "Invoke action getMemberGroups."
  returns:
    description: "array of String."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberGroupsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberGroupsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberGroupsWithResponseAsync(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body)"
  name: "getMemberGroupsWithResponseAsync(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.getMemberGroupsWithResponseAsync(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body)"
  summary: "Invoke action get<wbr>Member<wbr>Groups."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberGroupsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberGroupsRequestBody&text=ServicePrincipalsGetMemberGroupsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<String>>> getMemberGroupsWithResponseAsync(String servicePrincipalId, ServicePrincipalsGetMemberGroupsRequestBody body)"
  desc: "Invoke action getMemberGroups."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberObjects(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberObjects(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body)"
  name: "getMemberObjects(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.getMemberObjects(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body)"
  summary: "Invoke action get<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberObjectsRequestBody&text=ServicePrincipalsGetMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<String> getMemberObjects(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body)"
  desc: "Invoke action getMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberObjectsAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberObjectsAsync(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body)"
  name: "getMemberObjectsAsync(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.getMemberObjectsAsync(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body)"
  summary: "Invoke action get<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberObjectsRequestBody&text=ServicePrincipalsGetMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<List<String>> getMemberObjectsAsync(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body)"
  desc: "Invoke action getMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberObjectsWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberObjectsRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberObjectsWithResponse(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body, Context context)"
  name: "getMemberObjectsWithResponse(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body, Context context)"
  nameWithType: "ServicePrincipalsClient.getMemberObjectsWithResponse(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body, Context context)"
  summary: "Invoke action get<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberObjectsRequestBody&text=ServicePrincipalsGetMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<String>> getMemberObjectsWithResponse(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body, Context context)"
  desc: "Invoke action getMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberObjectsWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberObjectsRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.getMemberObjectsWithResponseAsync(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body)"
  name: "getMemberObjectsWithResponseAsync(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body)"
  nameWithType: "ServicePrincipalsClient.getMemberObjectsWithResponseAsync(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body)"
  summary: "Invoke action get<wbr>Member<wbr>Objects."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberObjectsRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsGetMemberObjectsRequestBody&text=ServicePrincipalsGetMemberObjectsRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<List<String>>> getMemberObjectsWithResponseAsync(String servicePrincipalId, ServicePrincipalsGetMemberObjectsRequestBody body)"
  desc: "Invoke action getMemberObjects."
  returns:
    description: "array of String."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignedTo(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignedTo(String servicePrincipalId)"
  name: "listAppRoleAssignedTo(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listAppRoleAssignedTo(String servicePrincipalId)"
  summary: "Get app<wbr>Role<wbr>Assigned<wbr>To from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphAppRoleAssignmentInner> listAppRoleAssignedTo(String servicePrincipalId)"
  desc: "Get appRoleAssignedTo from servicePrincipals."
  returns:
    description: "appRoleAssignedTo from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignedTo(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignedTo(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "listAppRoleAssignedTo(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listAppRoleAssignedTo(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get app<wbr>Role<wbr>Assigned<wbr>To from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphAppRoleAssignmentInner> listAppRoleAssignedTo(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get appRoleAssignedTo from servicePrincipals."
  returns:
    description: "appRoleAssignedTo from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignedToAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignedToAsync(String servicePrincipalId)"
  name: "listAppRoleAssignedToAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listAppRoleAssignedToAsync(String servicePrincipalId)"
  summary: "Get app<wbr>Role<wbr>Assigned<wbr>To from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphAppRoleAssignmentInner> listAppRoleAssignedToAsync(String servicePrincipalId)"
  desc: "Get appRoleAssignedTo from servicePrincipals."
  returns:
    description: "appRoleAssignedTo from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignedToAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignedToAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "listAppRoleAssignedToAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.listAppRoleAssignedToAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get app<wbr>Role<wbr>Assigned<wbr>To from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphAppRoleAssignmentInner> listAppRoleAssignedToAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get appRoleAssignedTo from servicePrincipals."
  returns:
    description: "appRoleAssignedTo from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignments(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignments(String servicePrincipalId)"
  name: "listAppRoleAssignments(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listAppRoleAssignments(String servicePrincipalId)"
  summary: "Get app<wbr>Role<wbr>Assignments from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphAppRoleAssignmentInner> listAppRoleAssignments(String servicePrincipalId)"
  desc: "Get appRoleAssignments from servicePrincipals."
  returns:
    description: "appRoleAssignments from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignments(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignments(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "listAppRoleAssignments(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listAppRoleAssignments(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get app<wbr>Role<wbr>Assignments from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphAppRoleAssignmentInner> listAppRoleAssignments(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get appRoleAssignments from servicePrincipals."
  returns:
    description: "appRoleAssignments from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignmentsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignmentsAsync(String servicePrincipalId)"
  name: "listAppRoleAssignmentsAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listAppRoleAssignmentsAsync(String servicePrincipalId)"
  summary: "Get app<wbr>Role<wbr>Assignments from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphAppRoleAssignmentInner> listAppRoleAssignmentsAsync(String servicePrincipalId)"
  desc: "Get appRoleAssignments from servicePrincipals."
  returns:
    description: "appRoleAssignments from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignmentsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAppRoleAssignmentsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "listAppRoleAssignmentsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.listAppRoleAssignmentsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get app<wbr>Role<wbr>Assignments from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphAppRoleAssignmentInner> listAppRoleAssignmentsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get appRoleAssignments from servicePrincipals."
  returns:
    description: "appRoleAssignments from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listClaimsMappingPolicies(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listClaimsMappingPolicies(String servicePrincipalId)"
  name: "listClaimsMappingPolicies(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listClaimsMappingPolicies(String servicePrincipalId)"
  summary: "Get claims<wbr>Mapping<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphClaimsMappingPolicyInner> listClaimsMappingPolicies(String servicePrincipalId)"
  desc: "Get claimsMappingPolicies from servicePrincipals."
  returns:
    description: "claimsMappingPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphClaimsMappingPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphClaimsMappingPolicyInner&text=MicrosoftGraphClaimsMappingPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listClaimsMappingPolicies(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listClaimsMappingPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  name: "listClaimsMappingPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listClaimsMappingPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  summary: "Get claims<wbr>Mapping<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand&text=ServicePrincipalsExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphClaimsMappingPolicyInner> listClaimsMappingPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  desc: "Get claimsMappingPolicies from servicePrincipals."
  returns:
    description: "claimsMappingPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphClaimsMappingPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphClaimsMappingPolicyInner&text=MicrosoftGraphClaimsMappingPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listClaimsMappingPoliciesAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listClaimsMappingPoliciesAsync(String servicePrincipalId)"
  name: "listClaimsMappingPoliciesAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listClaimsMappingPoliciesAsync(String servicePrincipalId)"
  summary: "Get claims<wbr>Mapping<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphClaimsMappingPolicyInner> listClaimsMappingPoliciesAsync(String servicePrincipalId)"
  desc: "Get claimsMappingPolicies from servicePrincipals."
  returns:
    description: "claimsMappingPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphClaimsMappingPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphClaimsMappingPolicyInner&text=MicrosoftGraphClaimsMappingPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listClaimsMappingPoliciesAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listClaimsMappingPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  name: "listClaimsMappingPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  nameWithType: "ServicePrincipalsClient.listClaimsMappingPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  summary: "Get claims<wbr>Mapping<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand&text=ServicePrincipalsExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphClaimsMappingPolicyInner> listClaimsMappingPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  desc: "Get claimsMappingPolicies from servicePrincipals."
  returns:
    description: "claimsMappingPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphClaimsMappingPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphClaimsMappingPolicyInner&text=MicrosoftGraphClaimsMappingPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listCreatedObjects(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listCreatedObjects(String servicePrincipalId)"
  name: "listCreatedObjects(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listCreatedObjects(String servicePrincipalId)"
  summary: "Get created<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listCreatedObjects(String servicePrincipalId)"
  desc: "Get createdObjects from servicePrincipals."
  returns:
    description: "createdObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listCreatedObjects(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listCreatedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "listCreatedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listCreatedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get created<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listCreatedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get createdObjects from servicePrincipals."
  returns:
    description: "createdObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listCreatedObjectsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listCreatedObjectsAsync(String servicePrincipalId)"
  name: "listCreatedObjectsAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listCreatedObjectsAsync(String servicePrincipalId)"
  summary: "Get created<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listCreatedObjectsAsync(String servicePrincipalId)"
  desc: "Get createdObjects from servicePrincipals."
  returns:
    description: "createdObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listCreatedObjectsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listCreatedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "listCreatedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.listCreatedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get created<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listCreatedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get createdObjects from servicePrincipals."
  returns:
    description: "createdObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listDelegatedPermissionClassifications(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listDelegatedPermissionClassifications(String servicePrincipalId)"
  name: "listDelegatedPermissionClassifications(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listDelegatedPermissionClassifications(String servicePrincipalId)"
  summary: "Get delegated<wbr>Permission<wbr>Classifications from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDelegatedPermissionClassificationInner> listDelegatedPermissionClassifications(String servicePrincipalId)"
  desc: "Get delegatedPermissionClassifications from servicePrincipals."
  returns:
    description: "delegatedPermissionClassifications from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listDelegatedPermissionClassifications(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listDelegatedPermissionClassifications(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "listDelegatedPermissionClassifications(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listDelegatedPermissionClassifications(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get delegated<wbr>Permission<wbr>Classifications from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDelegatedPermissionClassificationInner> listDelegatedPermissionClassifications(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get delegatedPermissionClassifications from servicePrincipals."
  returns:
    description: "delegatedPermissionClassifications from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listDelegatedPermissionClassificationsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listDelegatedPermissionClassificationsAsync(String servicePrincipalId)"
  name: "listDelegatedPermissionClassificationsAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listDelegatedPermissionClassificationsAsync(String servicePrincipalId)"
  summary: "Get delegated<wbr>Permission<wbr>Classifications from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDelegatedPermissionClassificationInner> listDelegatedPermissionClassificationsAsync(String servicePrincipalId)"
  desc: "Get delegatedPermissionClassifications from servicePrincipals."
  returns:
    description: "delegatedPermissionClassifications from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listDelegatedPermissionClassificationsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listDelegatedPermissionClassificationsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "listDelegatedPermissionClassificationsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.listDelegatedPermissionClassificationsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get delegated<wbr>Permission<wbr>Classifications from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDelegatedPermissionClassificationInner> listDelegatedPermissionClassificationsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get delegatedPermissionClassifications from servicePrincipals."
  returns:
    description: "delegatedPermissionClassifications from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listEndpoints(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listEndpoints(String servicePrincipalId)"
  name: "listEndpoints(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listEndpoints(String servicePrincipalId)"
  summary: "Get endpoints from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphEndpointInner> listEndpoints(String servicePrincipalId)"
  desc: "Get endpoints from servicePrincipals."
  returns:
    description: "endpoints from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listEndpoints(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listEndpoints(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "listEndpoints(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listEndpoints(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get endpoints from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphEndpointInner> listEndpoints(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get endpoints from servicePrincipals."
  returns:
    description: "endpoints from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listEndpointsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listEndpointsAsync(String servicePrincipalId)"
  name: "listEndpointsAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listEndpointsAsync(String servicePrincipalId)"
  summary: "Get endpoints from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphEndpointInner> listEndpointsAsync(String servicePrincipalId)"
  desc: "Get endpoints from servicePrincipals."
  returns:
    description: "endpoints from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listEndpointsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listEndpointsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "listEndpointsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.listEndpointsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get endpoints from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphEndpointInner> listEndpointsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get endpoints from servicePrincipals."
  returns:
    description: "endpoints from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listHomeRealmDiscoveryPolicies(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listHomeRealmDiscoveryPolicies(String servicePrincipalId)"
  name: "listHomeRealmDiscoveryPolicies(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listHomeRealmDiscoveryPolicies(String servicePrincipalId)"
  summary: "Get home<wbr>Realm<wbr>Discovery<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphHomeRealmDiscoveryPolicyInner> listHomeRealmDiscoveryPolicies(String servicePrincipalId)"
  desc: "Get homeRealmDiscoveryPolicies from servicePrincipals."
  returns:
    description: "homeRealmDiscoveryPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphHomeRealmDiscoveryPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphHomeRealmDiscoveryPolicyInner&text=MicrosoftGraphHomeRealmDiscoveryPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listHomeRealmDiscoveryPolicies(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listHomeRealmDiscoveryPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  name: "listHomeRealmDiscoveryPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listHomeRealmDiscoveryPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  summary: "Get home<wbr>Realm<wbr>Discovery<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand&text=ServicePrincipalsExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphHomeRealmDiscoveryPolicyInner> listHomeRealmDiscoveryPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  desc: "Get homeRealmDiscoveryPolicies from servicePrincipals."
  returns:
    description: "homeRealmDiscoveryPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphHomeRealmDiscoveryPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphHomeRealmDiscoveryPolicyInner&text=MicrosoftGraphHomeRealmDiscoveryPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listHomeRealmDiscoveryPoliciesAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId)"
  name: "listHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId)"
  summary: "Get home<wbr>Realm<wbr>Discovery<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphHomeRealmDiscoveryPolicyInner> listHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId)"
  desc: "Get homeRealmDiscoveryPolicies from servicePrincipals."
  returns:
    description: "homeRealmDiscoveryPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphHomeRealmDiscoveryPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphHomeRealmDiscoveryPolicyInner&text=MicrosoftGraphHomeRealmDiscoveryPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listHomeRealmDiscoveryPoliciesAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  name: "listHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  nameWithType: "ServicePrincipalsClient.listHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  summary: "Get home<wbr>Realm<wbr>Discovery<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand&text=ServicePrincipalsExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphHomeRealmDiscoveryPolicyInner> listHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  desc: "Get homeRealmDiscoveryPolicies from servicePrincipals."
  returns:
    description: "homeRealmDiscoveryPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphHomeRealmDiscoveryPolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphHomeRealmDiscoveryPolicyInner&text=MicrosoftGraphHomeRealmDiscoveryPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listMemberOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listMemberOf(String servicePrincipalId)"
  name: "listMemberOf(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listMemberOf(String servicePrincipalId)"
  summary: "Get member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listMemberOf(String servicePrincipalId)"
  desc: "Get memberOf from servicePrincipals."
  returns:
    description: "memberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listMemberOf(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "listMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get memberOf from servicePrincipals."
  returns:
    description: "memberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listMemberOfAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listMemberOfAsync(String servicePrincipalId)"
  name: "listMemberOfAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listMemberOfAsync(String servicePrincipalId)"
  summary: "Get member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listMemberOfAsync(String servicePrincipalId)"
  desc: "Get memberOf from servicePrincipals."
  returns:
    description: "memberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listMemberOfAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "listMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.listMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get memberOf from servicePrincipals."
  returns:
    description: "memberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOauth2PermissionGrants(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOauth2PermissionGrants(String servicePrincipalId)"
  name: "listOauth2PermissionGrants(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listOauth2PermissionGrants(String servicePrincipalId)"
  summary: "Get oauth2Permission<wbr>Grants from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphOAuth2PermissionGrantInner> listOauth2PermissionGrants(String servicePrincipalId)"
  desc: "Get oauth2PermissionGrants from servicePrincipals."
  returns:
    description: "oauth2PermissionGrants from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrantInner&text=MicrosoftGraphOAuth2PermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOauth2PermissionGrants(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOauth2PermissionGrants(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "listOauth2PermissionGrants(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listOauth2PermissionGrants(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get oauth2Permission<wbr>Grants from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphOAuth2PermissionGrantInner> listOauth2PermissionGrants(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get oauth2PermissionGrants from servicePrincipals."
  returns:
    description: "oauth2PermissionGrants from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrantInner&text=MicrosoftGraphOAuth2PermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOauth2PermissionGrantsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOauth2PermissionGrantsAsync(String servicePrincipalId)"
  name: "listOauth2PermissionGrantsAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listOauth2PermissionGrantsAsync(String servicePrincipalId)"
  summary: "Get oauth2Permission<wbr>Grants from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphOAuth2PermissionGrantInner> listOauth2PermissionGrantsAsync(String servicePrincipalId)"
  desc: "Get oauth2PermissionGrants from servicePrincipals."
  returns:
    description: "oauth2PermissionGrants from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrantInner&text=MicrosoftGraphOAuth2PermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOauth2PermissionGrantsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOauth2PermissionGrantsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "listOauth2PermissionGrantsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.listOauth2PermissionGrantsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get oauth2Permission<wbr>Grants from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphOAuth2PermissionGrantInner> listOauth2PermissionGrantsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get oauth2PermissionGrants from servicePrincipals."
  returns:
    description: "oauth2PermissionGrants from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrantInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrantInner&text=MicrosoftGraphOAuth2PermissionGrantInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwnedObjects(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwnedObjects(String servicePrincipalId)"
  name: "listOwnedObjects(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listOwnedObjects(String servicePrincipalId)"
  summary: "Get owned<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listOwnedObjects(String servicePrincipalId)"
  desc: "Get ownedObjects from servicePrincipals."
  returns:
    description: "ownedObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwnedObjects(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwnedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "listOwnedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listOwnedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get owned<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listOwnedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get ownedObjects from servicePrincipals."
  returns:
    description: "ownedObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwnedObjectsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwnedObjectsAsync(String servicePrincipalId)"
  name: "listOwnedObjectsAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listOwnedObjectsAsync(String servicePrincipalId)"
  summary: "Get owned<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listOwnedObjectsAsync(String servicePrincipalId)"
  desc: "Get ownedObjects from servicePrincipals."
  returns:
    description: "ownedObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwnedObjectsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwnedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "listOwnedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.listOwnedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get owned<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listOwnedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get ownedObjects from servicePrincipals."
  returns:
    description: "ownedObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwners(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwners(String servicePrincipalId)"
  name: "listOwners(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listOwners(String servicePrincipalId)"
  summary: "Get owners from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listOwners(String servicePrincipalId)"
  desc: "Get owners from servicePrincipals."
  returns:
    description: "owners from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwners(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwners(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "listOwners(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listOwners(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get owners from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listOwners(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get owners from servicePrincipals."
  returns:
    description: "owners from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwnersAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwnersAsync(String servicePrincipalId)"
  name: "listOwnersAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listOwnersAsync(String servicePrincipalId)"
  summary: "Get owners from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listOwnersAsync(String servicePrincipalId)"
  desc: "Get owners from servicePrincipals."
  returns:
    description: "owners from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwnersAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listOwnersAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "listOwnersAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.listOwnersAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get owners from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listOwnersAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get owners from servicePrincipals."
  returns:
    description: "owners from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefClaimsMappingPolicies(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefClaimsMappingPolicies(String servicePrincipalId)"
  name: "listRefClaimsMappingPolicies(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefClaimsMappingPolicies(String servicePrincipalId)"
  summary: "Get ref of claims<wbr>Mapping<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefClaimsMappingPolicies(String servicePrincipalId)"
  desc: "Get ref of claimsMappingPolicies from servicePrincipals."
  returns:
    description: "ref of claimsMappingPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefClaimsMappingPolicies(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefClaimsMappingPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  name: "listRefClaimsMappingPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  nameWithType: "ServicePrincipalsClient.listRefClaimsMappingPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  summary: "Get ref of claims<wbr>Mapping<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefClaimsMappingPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  desc: "Get ref of claimsMappingPolicies from servicePrincipals."
  returns:
    description: "ref of claimsMappingPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefClaimsMappingPoliciesAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefClaimsMappingPoliciesAsync(String servicePrincipalId)"
  name: "listRefClaimsMappingPoliciesAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefClaimsMappingPoliciesAsync(String servicePrincipalId)"
  summary: "Get ref of claims<wbr>Mapping<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefClaimsMappingPoliciesAsync(String servicePrincipalId)"
  desc: "Get ref of claimsMappingPolicies from servicePrincipals."
  returns:
    description: "ref of claimsMappingPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefClaimsMappingPoliciesAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefClaimsMappingPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  name: "listRefClaimsMappingPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  nameWithType: "ServicePrincipalsClient.listRefClaimsMappingPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  summary: "Get ref of claims<wbr>Mapping<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefClaimsMappingPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  desc: "Get ref of claimsMappingPolicies from servicePrincipals."
  returns:
    description: "ref of claimsMappingPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefCreatedObjects(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefCreatedObjects(String servicePrincipalId)"
  name: "listRefCreatedObjects(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefCreatedObjects(String servicePrincipalId)"
  summary: "Get ref of created<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefCreatedObjects(String servicePrincipalId)"
  desc: "Get ref of createdObjects from servicePrincipals."
  returns:
    description: "ref of createdObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefCreatedObjects(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefCreatedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  name: "listRefCreatedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  nameWithType: "ServicePrincipalsClient.listRefCreatedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  summary: "Get ref of created<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefCreatedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  desc: "Get ref of createdObjects from servicePrincipals."
  returns:
    description: "ref of createdObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefCreatedObjectsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefCreatedObjectsAsync(String servicePrincipalId)"
  name: "listRefCreatedObjectsAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefCreatedObjectsAsync(String servicePrincipalId)"
  summary: "Get ref of created<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefCreatedObjectsAsync(String servicePrincipalId)"
  desc: "Get ref of createdObjects from servicePrincipals."
  returns:
    description: "ref of createdObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefCreatedObjectsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefCreatedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  name: "listRefCreatedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  nameWithType: "ServicePrincipalsClient.listRefCreatedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  summary: "Get ref of created<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefCreatedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  desc: "Get ref of createdObjects from servicePrincipals."
  returns:
    description: "ref of createdObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefHomeRealmDiscoveryPolicies(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefHomeRealmDiscoveryPolicies(String servicePrincipalId)"
  name: "listRefHomeRealmDiscoveryPolicies(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefHomeRealmDiscoveryPolicies(String servicePrincipalId)"
  summary: "Get ref of home<wbr>Realm<wbr>Discovery<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefHomeRealmDiscoveryPolicies(String servicePrincipalId)"
  desc: "Get ref of homeRealmDiscoveryPolicies from servicePrincipals."
  returns:
    description: "ref of homeRealmDiscoveryPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefHomeRealmDiscoveryPolicies(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefHomeRealmDiscoveryPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  name: "listRefHomeRealmDiscoveryPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  nameWithType: "ServicePrincipalsClient.listRefHomeRealmDiscoveryPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  summary: "Get ref of home<wbr>Realm<wbr>Discovery<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefHomeRealmDiscoveryPolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  desc: "Get ref of homeRealmDiscoveryPolicies from servicePrincipals."
  returns:
    description: "ref of homeRealmDiscoveryPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefHomeRealmDiscoveryPoliciesAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId)"
  name: "listRefHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId)"
  summary: "Get ref of home<wbr>Realm<wbr>Discovery<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId)"
  desc: "Get ref of homeRealmDiscoveryPolicies from servicePrincipals."
  returns:
    description: "ref of homeRealmDiscoveryPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefHomeRealmDiscoveryPoliciesAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  name: "listRefHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  nameWithType: "ServicePrincipalsClient.listRefHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  summary: "Get ref of home<wbr>Realm<wbr>Discovery<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefHomeRealmDiscoveryPoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  desc: "Get ref of homeRealmDiscoveryPolicies from servicePrincipals."
  returns:
    description: "ref of homeRealmDiscoveryPolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefMemberOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefMemberOf(String servicePrincipalId)"
  name: "listRefMemberOf(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefMemberOf(String servicePrincipalId)"
  summary: "Get ref of member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefMemberOf(String servicePrincipalId)"
  desc: "Get ref of memberOf from servicePrincipals."
  returns:
    description: "ref of memberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefMemberOf(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  name: "listRefMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  nameWithType: "ServicePrincipalsClient.listRefMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  summary: "Get ref of member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  desc: "Get ref of memberOf from servicePrincipals."
  returns:
    description: "ref of memberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefMemberOfAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefMemberOfAsync(String servicePrincipalId)"
  name: "listRefMemberOfAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefMemberOfAsync(String servicePrincipalId)"
  summary: "Get ref of member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefMemberOfAsync(String servicePrincipalId)"
  desc: "Get ref of memberOf from servicePrincipals."
  returns:
    description: "ref of memberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefMemberOfAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  name: "listRefMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  nameWithType: "ServicePrincipalsClient.listRefMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  summary: "Get ref of member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  desc: "Get ref of memberOf from servicePrincipals."
  returns:
    description: "ref of memberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOauth2PermissionGrants(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOauth2PermissionGrants(String servicePrincipalId)"
  name: "listRefOauth2PermissionGrants(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefOauth2PermissionGrants(String servicePrincipalId)"
  summary: "Get ref of oauth2Permission<wbr>Grants from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefOauth2PermissionGrants(String servicePrincipalId)"
  desc: "Get ref of oauth2PermissionGrants from servicePrincipals."
  returns:
    description: "ref of oauth2PermissionGrants from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOauth2PermissionGrants(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOauth2PermissionGrants(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  name: "listRefOauth2PermissionGrants(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  nameWithType: "ServicePrincipalsClient.listRefOauth2PermissionGrants(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  summary: "Get ref of oauth2Permission<wbr>Grants from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefOauth2PermissionGrants(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  desc: "Get ref of oauth2PermissionGrants from servicePrincipals."
  returns:
    description: "ref of oauth2PermissionGrants from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOauth2PermissionGrantsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOauth2PermissionGrantsAsync(String servicePrincipalId)"
  name: "listRefOauth2PermissionGrantsAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefOauth2PermissionGrantsAsync(String servicePrincipalId)"
  summary: "Get ref of oauth2Permission<wbr>Grants from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefOauth2PermissionGrantsAsync(String servicePrincipalId)"
  desc: "Get ref of oauth2PermissionGrants from servicePrincipals."
  returns:
    description: "ref of oauth2PermissionGrants from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOauth2PermissionGrantsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOauth2PermissionGrantsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  name: "listRefOauth2PermissionGrantsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  nameWithType: "ServicePrincipalsClient.listRefOauth2PermissionGrantsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  summary: "Get ref of oauth2Permission<wbr>Grants from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefOauth2PermissionGrantsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  desc: "Get ref of oauth2PermissionGrants from servicePrincipals."
  returns:
    description: "ref of oauth2PermissionGrants from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwnedObjects(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwnedObjects(String servicePrincipalId)"
  name: "listRefOwnedObjects(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefOwnedObjects(String servicePrincipalId)"
  summary: "Get ref of owned<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefOwnedObjects(String servicePrincipalId)"
  desc: "Get ref of ownedObjects from servicePrincipals."
  returns:
    description: "ref of ownedObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwnedObjects(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwnedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  name: "listRefOwnedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  nameWithType: "ServicePrincipalsClient.listRefOwnedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  summary: "Get ref of owned<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefOwnedObjects(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  desc: "Get ref of ownedObjects from servicePrincipals."
  returns:
    description: "ref of ownedObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwnedObjectsAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwnedObjectsAsync(String servicePrincipalId)"
  name: "listRefOwnedObjectsAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefOwnedObjectsAsync(String servicePrincipalId)"
  summary: "Get ref of owned<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefOwnedObjectsAsync(String servicePrincipalId)"
  desc: "Get ref of ownedObjects from servicePrincipals."
  returns:
    description: "ref of ownedObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwnedObjectsAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwnedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  name: "listRefOwnedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  nameWithType: "ServicePrincipalsClient.listRefOwnedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  summary: "Get ref of owned<wbr>Objects from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefOwnedObjectsAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  desc: "Get ref of ownedObjects from servicePrincipals."
  returns:
    description: "ref of ownedObjects from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwners(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwners(String servicePrincipalId)"
  name: "listRefOwners(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefOwners(String servicePrincipalId)"
  summary: "Get ref of owners from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefOwners(String servicePrincipalId)"
  desc: "Get ref of owners from servicePrincipals."
  returns:
    description: "ref of owners from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwners(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwners(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  name: "listRefOwners(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  nameWithType: "ServicePrincipalsClient.listRefOwners(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  summary: "Get ref of owners from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefOwners(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  desc: "Get ref of owners from servicePrincipals."
  returns:
    description: "ref of owners from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwnersAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwnersAsync(String servicePrincipalId)"
  name: "listRefOwnersAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefOwnersAsync(String servicePrincipalId)"
  summary: "Get ref of owners from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefOwnersAsync(String servicePrincipalId)"
  desc: "Get ref of owners from servicePrincipals."
  returns:
    description: "ref of owners from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwnersAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefOwnersAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  name: "listRefOwnersAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  nameWithType: "ServicePrincipalsClient.listRefOwnersAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  summary: "Get ref of owners from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefOwnersAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  desc: "Get ref of owners from servicePrincipals."
  returns:
    description: "ref of owners from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenIssuancePolicies(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenIssuancePolicies(String servicePrincipalId)"
  name: "listRefTokenIssuancePolicies(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefTokenIssuancePolicies(String servicePrincipalId)"
  summary: "Get ref of token<wbr>Issuance<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefTokenIssuancePolicies(String servicePrincipalId)"
  desc: "Get ref of tokenIssuancePolicies from servicePrincipals."
  returns:
    description: "ref of tokenIssuancePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenIssuancePolicies(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenIssuancePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  name: "listRefTokenIssuancePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  nameWithType: "ServicePrincipalsClient.listRefTokenIssuancePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  summary: "Get ref of token<wbr>Issuance<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefTokenIssuancePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  desc: "Get ref of tokenIssuancePolicies from servicePrincipals."
  returns:
    description: "ref of tokenIssuancePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenIssuancePoliciesAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenIssuancePoliciesAsync(String servicePrincipalId)"
  name: "listRefTokenIssuancePoliciesAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefTokenIssuancePoliciesAsync(String servicePrincipalId)"
  summary: "Get ref of token<wbr>Issuance<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefTokenIssuancePoliciesAsync(String servicePrincipalId)"
  desc: "Get ref of tokenIssuancePolicies from servicePrincipals."
  returns:
    description: "ref of tokenIssuancePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenIssuancePoliciesAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenIssuancePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  name: "listRefTokenIssuancePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  nameWithType: "ServicePrincipalsClient.listRefTokenIssuancePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  summary: "Get ref of token<wbr>Issuance<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefTokenIssuancePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  desc: "Get ref of tokenIssuancePolicies from servicePrincipals."
  returns:
    description: "ref of tokenIssuancePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenLifetimePolicies(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenLifetimePolicies(String servicePrincipalId)"
  name: "listRefTokenLifetimePolicies(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefTokenLifetimePolicies(String servicePrincipalId)"
  summary: "Get ref of token<wbr>Lifetime<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefTokenLifetimePolicies(String servicePrincipalId)"
  desc: "Get ref of tokenLifetimePolicies from servicePrincipals."
  returns:
    description: "ref of tokenLifetimePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenLifetimePolicies(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenLifetimePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  name: "listRefTokenLifetimePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  nameWithType: "ServicePrincipalsClient.listRefTokenLifetimePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  summary: "Get ref of token<wbr>Lifetime<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefTokenLifetimePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  desc: "Get ref of tokenLifetimePolicies from servicePrincipals."
  returns:
    description: "ref of tokenLifetimePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenLifetimePoliciesAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenLifetimePoliciesAsync(String servicePrincipalId)"
  name: "listRefTokenLifetimePoliciesAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefTokenLifetimePoliciesAsync(String servicePrincipalId)"
  summary: "Get ref of token<wbr>Lifetime<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefTokenLifetimePoliciesAsync(String servicePrincipalId)"
  desc: "Get ref of tokenLifetimePolicies from servicePrincipals."
  returns:
    description: "ref of tokenLifetimePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenLifetimePoliciesAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTokenLifetimePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  name: "listRefTokenLifetimePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  nameWithType: "ServicePrincipalsClient.listRefTokenLifetimePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  summary: "Get ref of token<wbr>Lifetime<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefTokenLifetimePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  desc: "Get ref of tokenLifetimePolicies from servicePrincipals."
  returns:
    description: "ref of tokenLifetimePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTransitiveMemberOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTransitiveMemberOf(String servicePrincipalId)"
  name: "listRefTransitiveMemberOf(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefTransitiveMemberOf(String servicePrincipalId)"
  summary: "Get ref of transitive<wbr>Member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefTransitiveMemberOf(String servicePrincipalId)"
  desc: "Get ref of transitiveMemberOf from servicePrincipals."
  returns:
    description: "ref of transitiveMemberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTransitiveMemberOf(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTransitiveMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  name: "listRefTransitiveMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  nameWithType: "ServicePrincipalsClient.listRefTransitiveMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  summary: "Get ref of transitive<wbr>Member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<String> listRefTransitiveMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, Context context)"
  desc: "Get ref of transitiveMemberOf from servicePrincipals."
  returns:
    description: "ref of transitiveMemberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTransitiveMemberOfAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTransitiveMemberOfAsync(String servicePrincipalId)"
  name: "listRefTransitiveMemberOfAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listRefTransitiveMemberOfAsync(String servicePrincipalId)"
  summary: "Get ref of transitive<wbr>Member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<String> listRefTransitiveMemberOfAsync(String servicePrincipalId)"
  desc: "Get ref of transitiveMemberOf from servicePrincipals."
  returns:
    description: "ref of transitiveMemberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTransitiveMemberOfAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listRefTransitiveMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  name: "listRefTransitiveMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  nameWithType: "ServicePrincipalsClient.listRefTransitiveMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  summary: "Get ref of transitive<wbr>Member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<String> listRefTransitiveMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby)"
  desc: "Get ref of transitiveMemberOf from servicePrincipals."
  returns:
    description: "ref of transitiveMemberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenIssuancePolicies(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenIssuancePolicies(String servicePrincipalId)"
  name: "listTokenIssuancePolicies(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listTokenIssuancePolicies(String servicePrincipalId)"
  summary: "Get token<wbr>Issuance<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphTokenIssuancePolicyInner> listTokenIssuancePolicies(String servicePrincipalId)"
  desc: "Get tokenIssuancePolicies from servicePrincipals."
  returns:
    description: "tokenIssuancePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenIssuancePolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenIssuancePolicyInner&text=MicrosoftGraphTokenIssuancePolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenIssuancePolicies(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenIssuancePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  name: "listTokenIssuancePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listTokenIssuancePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  summary: "Get token<wbr>Issuance<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand&text=ServicePrincipalsExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphTokenIssuancePolicyInner> listTokenIssuancePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  desc: "Get tokenIssuancePolicies from servicePrincipals."
  returns:
    description: "tokenIssuancePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenIssuancePolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenIssuancePolicyInner&text=MicrosoftGraphTokenIssuancePolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenIssuancePoliciesAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenIssuancePoliciesAsync(String servicePrincipalId)"
  name: "listTokenIssuancePoliciesAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listTokenIssuancePoliciesAsync(String servicePrincipalId)"
  summary: "Get token<wbr>Issuance<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphTokenIssuancePolicyInner> listTokenIssuancePoliciesAsync(String servicePrincipalId)"
  desc: "Get tokenIssuancePolicies from servicePrincipals."
  returns:
    description: "tokenIssuancePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenIssuancePolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenIssuancePolicyInner&text=MicrosoftGraphTokenIssuancePolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenIssuancePoliciesAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenIssuancePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  name: "listTokenIssuancePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  nameWithType: "ServicePrincipalsClient.listTokenIssuancePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  summary: "Get token<wbr>Issuance<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand&text=ServicePrincipalsExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphTokenIssuancePolicyInner> listTokenIssuancePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  desc: "Get tokenIssuancePolicies from servicePrincipals."
  returns:
    description: "tokenIssuancePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenIssuancePolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenIssuancePolicyInner&text=MicrosoftGraphTokenIssuancePolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenLifetimePolicies(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenLifetimePolicies(String servicePrincipalId)"
  name: "listTokenLifetimePolicies(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listTokenLifetimePolicies(String servicePrincipalId)"
  summary: "Get token<wbr>Lifetime<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphTokenLifetimePolicyInner> listTokenLifetimePolicies(String servicePrincipalId)"
  desc: "Get tokenLifetimePolicies from servicePrincipals."
  returns:
    description: "tokenLifetimePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenLifetimePolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenLifetimePolicyInner&text=MicrosoftGraphTokenLifetimePolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenLifetimePolicies(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenLifetimePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  name: "listTokenLifetimePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listTokenLifetimePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  summary: "Get token<wbr>Lifetime<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand&text=ServicePrincipalsExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphTokenLifetimePolicyInner> listTokenLifetimePolicies(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand, Context context)"
  desc: "Get tokenLifetimePolicies from servicePrincipals."
  returns:
    description: "tokenLifetimePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenLifetimePolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenLifetimePolicyInner&text=MicrosoftGraphTokenLifetimePolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenLifetimePoliciesAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenLifetimePoliciesAsync(String servicePrincipalId)"
  name: "listTokenLifetimePoliciesAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listTokenLifetimePoliciesAsync(String servicePrincipalId)"
  summary: "Get token<wbr>Lifetime<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphTokenLifetimePolicyInner> listTokenLifetimePoliciesAsync(String servicePrincipalId)"
  desc: "Get tokenLifetimePolicies from servicePrincipals."
  returns:
    description: "tokenLifetimePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenLifetimePolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenLifetimePolicyInner&text=MicrosoftGraphTokenLifetimePolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenLifetimePoliciesAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTokenLifetimePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  name: "listTokenLifetimePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  nameWithType: "ServicePrincipalsClient.listTokenLifetimePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  summary: "Get token<wbr>Lifetime<wbr>Policies from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsExpand&text=ServicePrincipalsExpand\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphTokenLifetimePolicyInner> listTokenLifetimePoliciesAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<ServicePrincipalsExpand> expand)"
  desc: "Get tokenLifetimePolicies from servicePrincipals."
  returns:
    description: "tokenLifetimePolicies from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenLifetimePolicyInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphTokenLifetimePolicyInner&text=MicrosoftGraphTokenLifetimePolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTransitiveMemberOf(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTransitiveMemberOf(String servicePrincipalId)"
  name: "listTransitiveMemberOf(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listTransitiveMemberOf(String servicePrincipalId)"
  summary: "Get transitive<wbr>Member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listTransitiveMemberOf(String servicePrincipalId)"
  desc: "Get transitiveMemberOf from servicePrincipals."
  returns:
    description: "transitiveMemberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTransitiveMemberOf(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTransitiveMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  name: "listTransitiveMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  nameWithType: "ServicePrincipalsClient.listTransitiveMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  summary: "Get transitive<wbr>Member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MicrosoftGraphDirectoryObjectInner> listTransitiveMemberOf(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand, Context context)"
  desc: "Get transitiveMemberOf from servicePrincipals."
  returns:
    description: "transitiveMemberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTransitiveMemberOfAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTransitiveMemberOfAsync(String servicePrincipalId)"
  name: "listTransitiveMemberOfAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.listTransitiveMemberOfAsync(String servicePrincipalId)"
  summary: "Get transitive<wbr>Member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listTransitiveMemberOfAsync(String servicePrincipalId)"
  desc: "Get transitiveMemberOf from servicePrincipals."
  returns:
    description: "transitiveMemberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTransitiveMemberOfAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby>,java.util.List<com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect>,java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listTransitiveMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  name: "listTransitiveMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  nameWithType: "ServicePrincipalsClient.listTransitiveMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  summary: "Get transitive<wbr>Member<wbr>Of from service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Show only the first n items."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Skip the first n items."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Search items by search phrases."
    name: "search"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Filter items by property values."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include count of items."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Order items by property values."
    name: "orderby"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsOrderby&text=ServicePrincipalsOrderby\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Select properties to be returned."
    name: "select"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsSelect&text=ServicePrincipalsSelect\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Expand related entities."
    name: "expand"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract PagedFlux<MicrosoftGraphDirectoryObjectInner> listTransitiveMemberOfAsync(String servicePrincipalId, Integer top, Integer skip, String search, String filter, Boolean count, List<ServicePrincipalsOrderby> orderby, List<ServicePrincipalsSelect> select, List<String> expand)"
  desc: "Get transitiveMemberOf from servicePrincipals."
  returns:
    description: "transitiveMemberOf from servicePrincipals."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removeKey(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemoveKeyRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removeKey(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body)"
  name: "removeKey(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body)"
  nameWithType: "ServicePrincipalsClient.removeKey(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body)"
  summary: "Invoke action remove<wbr>Key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemoveKeyRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemoveKeyRequestBody&text=ServicePrincipalsRemoveKeyRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void removeKey(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body)"
  desc: "Invoke action removeKey."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removeKeyAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemoveKeyRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removeKeyAsync(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body)"
  name: "removeKeyAsync(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body)"
  nameWithType: "ServicePrincipalsClient.removeKeyAsync(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body)"
  summary: "Invoke action remove<wbr>Key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemoveKeyRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemoveKeyRequestBody&text=ServicePrincipalsRemoveKeyRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> removeKeyAsync(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body)"
  desc: "Invoke action removeKey."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removeKeyWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemoveKeyRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removeKeyWithResponse(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body, Context context)"
  name: "removeKeyWithResponse(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body, Context context)"
  nameWithType: "ServicePrincipalsClient.removeKeyWithResponse(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body, Context context)"
  summary: "Invoke action remove<wbr>Key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemoveKeyRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemoveKeyRequestBody&text=ServicePrincipalsRemoveKeyRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> removeKeyWithResponse(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body, Context context)"
  desc: "Invoke action removeKey."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removeKeyWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemoveKeyRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removeKeyWithResponseAsync(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body)"
  name: "removeKeyWithResponseAsync(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body)"
  nameWithType: "ServicePrincipalsClient.removeKeyWithResponseAsync(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body)"
  summary: "Invoke action remove<wbr>Key."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemoveKeyRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemoveKeyRequestBody&text=ServicePrincipalsRemoveKeyRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> removeKeyWithResponseAsync(String servicePrincipalId, ServicePrincipalsRemoveKeyRequestBody body)"
  desc: "Invoke action removeKey."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removePassword(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemovePasswordRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removePassword(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body)"
  name: "removePassword(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body)"
  nameWithType: "ServicePrincipalsClient.removePassword(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body)"
  summary: "Invoke action remove<wbr>Password."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemovePasswordRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemovePasswordRequestBody&text=ServicePrincipalsRemovePasswordRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void removePassword(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body)"
  desc: "Invoke action removePassword."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removePasswordAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemovePasswordRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removePasswordAsync(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body)"
  name: "removePasswordAsync(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body)"
  nameWithType: "ServicePrincipalsClient.removePasswordAsync(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body)"
  summary: "Invoke action remove<wbr>Password."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemovePasswordRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemovePasswordRequestBody&text=ServicePrincipalsRemovePasswordRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> removePasswordAsync(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body)"
  desc: "Invoke action removePassword."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removePasswordWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemovePasswordRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removePasswordWithResponse(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body, Context context)"
  name: "removePasswordWithResponse(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body, Context context)"
  nameWithType: "ServicePrincipalsClient.removePasswordWithResponse(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body, Context context)"
  summary: "Invoke action remove<wbr>Password."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemovePasswordRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemovePasswordRequestBody&text=ServicePrincipalsRemovePasswordRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> removePasswordWithResponse(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body, Context context)"
  desc: "Invoke action removePassword."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removePasswordWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemovePasswordRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.removePasswordWithResponseAsync(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body)"
  name: "removePasswordWithResponseAsync(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body)"
  nameWithType: "ServicePrincipalsClient.removePasswordWithResponseAsync(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body)"
  summary: "Invoke action remove<wbr>Password."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemovePasswordRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsRemovePasswordRequestBody&text=ServicePrincipalsRemovePasswordRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> removePasswordWithResponseAsync(String servicePrincipalId, ServicePrincipalsRemovePasswordRequestBody body)"
  desc: "Invoke action removePassword."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.restore(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.restore(String servicePrincipalId)"
  name: "restore(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.restore(String servicePrincipalId)"
  summary: "Invoke action restore."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MicrosoftGraphDirectoryObjectInner restore(String servicePrincipalId)"
  desc: "Invoke action restore."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.restoreAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.restoreAsync(String servicePrincipalId)"
  name: "restoreAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.restoreAsync(String servicePrincipalId)"
  summary: "Invoke action restore."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MicrosoftGraphDirectoryObjectInner> restoreAsync(String servicePrincipalId)"
  desc: "Invoke action restore."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.restoreWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.restoreWithResponse(String servicePrincipalId, Context context)"
  name: "restoreWithResponse(String servicePrincipalId, Context context)"
  nameWithType: "ServicePrincipalsClient.restoreWithResponse(String servicePrincipalId, Context context)"
  summary: "Invoke action restore."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MicrosoftGraphDirectoryObjectInner> restoreWithResponse(String servicePrincipalId, Context context)"
  desc: "Invoke action restore."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.restoreWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.restoreWithResponseAsync(String servicePrincipalId)"
  name: "restoreWithResponseAsync(String servicePrincipalId)"
  nameWithType: "ServicePrincipalsClient.restoreWithResponseAsync(String servicePrincipalId)"
  summary: "Invoke action restore."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<MicrosoftGraphDirectoryObjectInner>> restoreWithResponseAsync(String servicePrincipalId)"
  desc: "Invoke action restore."
  returns:
    description: "represents an Azure Active Directory object."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDirectoryObjectInner&text=MicrosoftGraphDirectoryObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignedTo(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignedTo(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "updateAppRoleAssignedTo(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "ServicePrincipalsClient.updateAppRoleAssignedTo(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Update the navigation property app<wbr>Role<wbr>Assigned<wbr>To in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateAppRoleAssignedTo(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Update the navigation property appRoleAssignedTo in servicePrincipals."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignedToAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "updateAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "ServicePrincipalsClient.updateAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Update the navigation property app<wbr>Role<wbr>Assigned<wbr>To in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updateAppRoleAssignedToAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Update the navigation property appRoleAssignedTo in servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignedToWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignedToWithResponse(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  name: "updateAppRoleAssignedToWithResponse(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  nameWithType: "ServicePrincipalsClient.updateAppRoleAssignedToWithResponse(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  summary: "Update the navigation property app<wbr>Role<wbr>Assigned<wbr>To in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updateAppRoleAssignedToWithResponse(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  desc: "Update the navigation property appRoleAssignedTo in servicePrincipals."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignedToWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignedToWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "updateAppRoleAssignedToWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "ServicePrincipalsClient.updateAppRoleAssignedToWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Update the navigation property app<wbr>Role<wbr>Assigned<wbr>To in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updateAppRoleAssignedToWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Update the navigation property appRoleAssignedTo in servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignments(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignments(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "updateAppRoleAssignments(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "ServicePrincipalsClient.updateAppRoleAssignments(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Update the navigation property app<wbr>Role<wbr>Assignments in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateAppRoleAssignments(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Update the navigation property appRoleAssignments in servicePrincipals."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignmentsAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "updateAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "ServicePrincipalsClient.updateAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Update the navigation property app<wbr>Role<wbr>Assignments in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updateAppRoleAssignmentsAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Update the navigation property appRoleAssignments in servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignmentsWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignmentsWithResponse(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  name: "updateAppRoleAssignmentsWithResponse(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  nameWithType: "ServicePrincipalsClient.updateAppRoleAssignmentsWithResponse(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  summary: "Update the navigation property app<wbr>Role<wbr>Assignments in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updateAppRoleAssignmentsWithResponse(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body, Context context)"
  desc: "Update the navigation property appRoleAssignments in servicePrincipals."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignmentsWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  name: "updateAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  nameWithType: "ServicePrincipalsClient.updateAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  summary: "Update the navigation property app<wbr>Role<wbr>Assignments in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of appRoleAssignment."
    name: "appRoleAssignmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphAppRoleAssignmentInner&text=MicrosoftGraphAppRoleAssignmentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updateAppRoleAssignmentsWithResponseAsync(String servicePrincipalId, String appRoleAssignmentId, MicrosoftGraphAppRoleAssignmentInner body)"
  desc: "Update the navigation property appRoleAssignments in servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateDelegatedPermissionClassifications(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateDelegatedPermissionClassifications(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  name: "updateDelegatedPermissionClassifications(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  nameWithType: "ServicePrincipalsClient.updateDelegatedPermissionClassifications(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  summary: "Update the navigation property delegated<wbr>Permission<wbr>Classifications in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateDelegatedPermissionClassifications(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  desc: "Update the navigation property delegatedPermissionClassifications in servicePrincipals."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateDelegatedPermissionClassificationsAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  name: "updateDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  nameWithType: "ServicePrincipalsClient.updateDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  summary: "Update the navigation property delegated<wbr>Permission<wbr>Classifications in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updateDelegatedPermissionClassificationsAsync(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  desc: "Update the navigation property delegatedPermissionClassifications in servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateDelegatedPermissionClassificationsWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body, Context context)"
  name: "updateDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body, Context context)"
  nameWithType: "ServicePrincipalsClient.updateDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body, Context context)"
  summary: "Update the navigation property delegated<wbr>Permission<wbr>Classifications in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updateDelegatedPermissionClassificationsWithResponse(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body, Context context)"
  desc: "Update the navigation property delegatedPermissionClassifications in servicePrincipals."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateDelegatedPermissionClassificationsWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  name: "updateDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  nameWithType: "ServicePrincipalsClient.updateDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  summary: "Update the navigation property delegated<wbr>Permission<wbr>Classifications in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of delegatedPermissionClassification."
    name: "delegatedPermissionClassificationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphDelegatedPermissionClassificationInner&text=MicrosoftGraphDelegatedPermissionClassificationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updateDelegatedPermissionClassificationsWithResponseAsync(String servicePrincipalId, String delegatedPermissionClassificationId, MicrosoftGraphDelegatedPermissionClassificationInner body)"
  desc: "Update the navigation property delegatedPermissionClassifications in servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateEndpoints(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateEndpoints(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body)"
  name: "updateEndpoints(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body)"
  nameWithType: "ServicePrincipalsClient.updateEndpoints(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body)"
  summary: "Update the navigation property endpoints in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateEndpoints(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body)"
  desc: "Update the navigation property endpoints in servicePrincipals."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateEndpointsAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateEndpointsAsync(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body)"
  name: "updateEndpointsAsync(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body)"
  nameWithType: "ServicePrincipalsClient.updateEndpointsAsync(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body)"
  summary: "Update the navigation property endpoints in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updateEndpointsAsync(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body)"
  desc: "Update the navigation property endpoints in servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateEndpointsWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateEndpointsWithResponse(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body, Context context)"
  name: "updateEndpointsWithResponse(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body, Context context)"
  nameWithType: "ServicePrincipalsClient.updateEndpointsWithResponse(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body, Context context)"
  summary: "Update the navigation property endpoints in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updateEndpointsWithResponse(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body, Context context)"
  desc: "Update the navigation property endpoints in servicePrincipals."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateEndpointsWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.updateEndpointsWithResponseAsync(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body)"
  name: "updateEndpointsWithResponseAsync(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body)"
  nameWithType: "ServicePrincipalsClient.updateEndpointsWithResponseAsync(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body)"
  summary: "Update the navigation property endpoints in service<wbr>Principals."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of servicePrincipal."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "key: id of endpoint."
    name: "endpointId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "New navigation property values."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEndpointInner&text=MicrosoftGraphEndpointInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updateEndpointsWithResponseAsync(String servicePrincipalId, String endpointId, MicrosoftGraphEndpointInner body)"
  desc: "Update the navigation property endpoints in servicePrincipals."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.validateProperties(com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsValidatePropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.validateProperties(ServicePrincipalsValidatePropertiesRequestBody body)"
  name: "validateProperties(ServicePrincipalsValidatePropertiesRequestBody body)"
  nameWithType: "ServicePrincipalsClient.validateProperties(ServicePrincipalsValidatePropertiesRequestBody body)"
  summary: "Invoke action validate<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsValidatePropertiesRequestBody&text=ServicePrincipalsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void validateProperties(ServicePrincipalsValidatePropertiesRequestBody body)"
  desc: "Invoke action validateProperties."
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.validatePropertiesAsync(com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsValidatePropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.validatePropertiesAsync(ServicePrincipalsValidatePropertiesRequestBody body)"
  name: "validatePropertiesAsync(ServicePrincipalsValidatePropertiesRequestBody body)"
  nameWithType: "ServicePrincipalsClient.validatePropertiesAsync(ServicePrincipalsValidatePropertiesRequestBody body)"
  summary: "Invoke action validate<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsValidatePropertiesRequestBody&text=ServicePrincipalsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> validatePropertiesAsync(ServicePrincipalsValidatePropertiesRequestBody body)"
  desc: "Invoke action validateProperties."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.validatePropertiesWithResponse(com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsValidatePropertiesRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.validatePropertiesWithResponse(ServicePrincipalsValidatePropertiesRequestBody body, Context context)"
  name: "validatePropertiesWithResponse(ServicePrincipalsValidatePropertiesRequestBody body, Context context)"
  nameWithType: "ServicePrincipalsClient.validatePropertiesWithResponse(ServicePrincipalsValidatePropertiesRequestBody body, Context context)"
  summary: "Invoke action validate<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsValidatePropertiesRequestBody&text=ServicePrincipalsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> validatePropertiesWithResponse(ServicePrincipalsValidatePropertiesRequestBody body, Context context)"
  desc: "Invoke action validateProperties."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.validatePropertiesWithResponseAsync(com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsValidatePropertiesRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.validatePropertiesWithResponseAsync(ServicePrincipalsValidatePropertiesRequestBody body)"
  name: "validatePropertiesWithResponseAsync(ServicePrincipalsValidatePropertiesRequestBody body)"
  nameWithType: "ServicePrincipalsClient.validatePropertiesWithResponseAsync(ServicePrincipalsValidatePropertiesRequestBody body)"
  summary: "Invoke action validate<wbr>Properties."
  modifiers:
  - "abstract"
  parameters:
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsValidatePropertiesRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalsValidatePropertiesRequestBody&text=ServicePrincipalsValidatePropertiesRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> validatePropertiesWithResponseAsync(ServicePrincipalsValidatePropertiesRequestBody body)"
  desc: "Invoke action validateProperties."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ServicePrincipalsClient."
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.14.0
