### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.models.Domain"
fullName: "com.azure.resourcemanager.eventgrid.models.Domain"
name: "Domain"
nameWithType: "Domain"
summary: "An immutable client-side representation of Domain."
syntax: "public interface Domain"
methods:
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.autoCreateTopicWithFirstSubscription()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.autoCreateTopicWithFirstSubscription()"
  name: "autoCreateTopicWithFirstSubscription()"
  nameWithType: "Domain.autoCreateTopicWithFirstSubscription()"
  summary: "Gets the autoCreateTopicWithFirstSubscription property: This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource. In this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true. When this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is created at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic by the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the flexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the domain topic on demand if needed."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean autoCreateTopicWithFirstSubscription()"
  returns:
    description: "the autoCreateTopicWithFirstSubscription value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.autoDeleteTopicWithLastSubscription()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.autoDeleteTopicWithLastSubscription()"
  name: "autoDeleteTopicWithLastSubscription()"
  nameWithType: "Domain.autoDeleteTopicWithLastSubscription()"
  summary: "Gets the autoDeleteTopicWithLastSubscription property: This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource. In this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true. When this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope of the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed (e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full control of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer resources by the user."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean autoDeleteTopicWithLastSubscription()"
  returns:
    description: "the autoDeleteTopicWithLastSubscription value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.disableLocalAuth()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.disableLocalAuth()"
  name: "disableLocalAuth()"
  nameWithType: "Domain.disableLocalAuth()"
  summary: "Gets the disableLocalAuth property: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean disableLocalAuth()"
  returns:
    description: "the disableLocalAuth value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.endpoint()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.endpoint()"
  name: "endpoint()"
  nameWithType: "Domain.endpoint()"
  summary: "Gets the endpoint property: Endpoint for the domain."
  modifiers:
  - "abstract"
  syntax: "public abstract String endpoint()"
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.id()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.id()"
  name: "id()"
  nameWithType: "Domain.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.identity()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.identity()"
  name: "identity()"
  nameWithType: "Domain.identity()"
  summary: "Gets the identity property: Identity information for the Event Grid Domain resource."
  modifiers:
  - "abstract"
  syntax: "public abstract IdentityInfo identity()"
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.IdentityInfo?alt=com.azure.resourcemanager.eventgrid.models.IdentityInfo&text=IdentityInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.inboundIpRules()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.inboundIpRules()"
  name: "inboundIpRules()"
  nameWithType: "Domain.inboundIpRules()"
  summary: "Gets the inboundIpRules property: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled."
  modifiers:
  - "abstract"
  syntax: "public abstract List<InboundIpRule> inboundIpRules()"
  returns:
    description: "the inboundIpRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.InboundIpRule?alt=com.azure.resourcemanager.eventgrid.models.InboundIpRule&text=InboundIpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.innerModel()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.innerModel()"
  name: "innerModel()"
  nameWithType: "Domain.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.eventgrid.fluent.models.DomainInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract DomainInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.DomainInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.DomainInner&text=DomainInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.inputSchema()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.inputSchema()"
  name: "inputSchema()"
  nameWithType: "Domain.inputSchema()"
  summary: "Gets the inputSchema property: This determines the format that Event Grid should expect for incoming events published to the domain."
  modifiers:
  - "abstract"
  syntax: "public abstract InputSchema inputSchema()"
  returns:
    description: "the inputSchema value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchema?alt=com.azure.resourcemanager.eventgrid.models.InputSchema&text=InputSchema\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.inputSchemaMapping()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.inputSchemaMapping()"
  name: "inputSchemaMapping()"
  nameWithType: "Domain.inputSchemaMapping()"
  summary: "Gets the inputSchemaMapping property: Information about the InputSchemaMapping which specified the info about mapping event payload."
  modifiers:
  - "abstract"
  syntax: "public abstract InputSchemaMapping inputSchemaMapping()"
  returns:
    description: "the inputSchemaMapping value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchemaMapping?alt=com.azure.resourcemanager.eventgrid.models.InputSchemaMapping&text=InputSchemaMapping\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.listSharedAccessKeys()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.listSharedAccessKeys()"
  name: "listSharedAccessKeys()"
  nameWithType: "Domain.listSharedAccessKeys()"
  summary: "List the two keys used to publish to a domain."
  modifiers:
  - "abstract"
  syntax: "public abstract DomainSharedAccessKeys listSharedAccessKeys()"
  returns:
    description: "shared access keys of the Domain."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.DomainSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.DomainSharedAccessKeys&text=DomainSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.listSharedAccessKeysWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.listSharedAccessKeysWithResponse(Context context)"
  name: "listSharedAccessKeysWithResponse(Context context)"
  nameWithType: "Domain.listSharedAccessKeysWithResponse(Context context)"
  summary: "List the two keys used to publish to a domain."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DomainSharedAccessKeys> listSharedAccessKeysWithResponse(Context context)"
  returns:
    description: "shared access keys of the Domain along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.DomainSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.DomainSharedAccessKeys&text=DomainSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.location()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.location()"
  name: "location()"
  nameWithType: "Domain.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.metricResourceId()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.metricResourceId()"
  name: "metricResourceId()"
  nameWithType: "Domain.metricResourceId()"
  summary: "Gets the metricResourceId property: Metric resource id for the domain."
  modifiers:
  - "abstract"
  syntax: "public abstract String metricResourceId()"
  returns:
    description: "the metricResourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.name()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.name()"
  name: "name()"
  nameWithType: "Domain.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "Domain.privateEndpointConnections()"
  summary: "Gets the privateEndpointConnections property: List of private endpoint connections."
  modifiers:
  - "abstract"
  syntax: "public abstract List<PrivateEndpointConnection> privateEndpointConnections()"
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PrivateEndpointConnection?alt=com.azure.resourcemanager.eventgrid.models.PrivateEndpointConnection&text=PrivateEndpointConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.provisioningState()"
  name: "provisioningState()"
  nameWithType: "Domain.provisioningState()"
  summary: "Gets the provisioningState property: Provisioning state of the Event Grid Domain Resource."
  modifiers:
  - "abstract"
  syntax: "public abstract DomainProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.DomainProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.DomainProvisioningState&text=DomainProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "Domain.publicNetworkAccess()"
  summary: "Gets the publicNetworkAccess property: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />."
  modifiers:
  - "abstract"
  syntax: "public abstract PublicNetworkAccess publicNetworkAccess()"
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess?alt=com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.refresh()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.refresh()"
  name: "refresh()"
  nameWithType: "Domain.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract Domain refresh()"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Domain?alt=com.azure.resourcemanager.eventgrid.models.Domain&text=Domain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "Domain.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Domain refresh(Context context)"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Domain?alt=com.azure.resourcemanager.eventgrid.models.Domain&text=Domain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.regenerateKey(com.azure.resourcemanager.eventgrid.models.DomainRegenerateKeyRequest)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.regenerateKey(DomainRegenerateKeyRequest regenerateKeyRequest)"
  name: "regenerateKey(DomainRegenerateKeyRequest regenerateKeyRequest)"
  nameWithType: "Domain.regenerateKey(DomainRegenerateKeyRequest regenerateKeyRequest)"
  summary: "Regenerate a shared access key for a domain."
  modifiers:
  - "abstract"
  parameters:
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.DomainRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.DomainRegenerateKeyRequest&text=DomainRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DomainSharedAccessKeys regenerateKey(DomainRegenerateKeyRequest regenerateKeyRequest)"
  returns:
    description: "shared access keys of the Domain."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.DomainSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.DomainSharedAccessKeys&text=DomainSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.regenerateKeyWithResponse(com.azure.resourcemanager.eventgrid.models.DomainRegenerateKeyRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.regenerateKeyWithResponse(DomainRegenerateKeyRequest regenerateKeyRequest, Context context)"
  name: "regenerateKeyWithResponse(DomainRegenerateKeyRequest regenerateKeyRequest, Context context)"
  nameWithType: "Domain.regenerateKeyWithResponse(DomainRegenerateKeyRequest regenerateKeyRequest, Context context)"
  summary: "Regenerate a shared access key for a domain."
  modifiers:
  - "abstract"
  parameters:
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.DomainRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.DomainRegenerateKeyRequest&text=DomainRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DomainSharedAccessKeys> regenerateKeyWithResponse(DomainRegenerateKeyRequest regenerateKeyRequest, Context context)"
  returns:
    description: "shared access keys of the Domain along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.DomainSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.DomainSharedAccessKeys&text=DomainSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.region()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.region()"
  name: "region()"
  nameWithType: "Domain.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.regionName()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.regionName()"
  name: "regionName()"
  nameWithType: "Domain.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.systemData()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.systemData()"
  name: "systemData()"
  nameWithType: "Domain.systemData()"
  summary: "Gets the systemData property: The system metadata relating to Domain resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.tags()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.tags()"
  name: "tags()"
  nameWithType: "Domain.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.type()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.type()"
  name: "type()"
  nameWithType: "Domain.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Domain.update()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Domain.update()"
  name: "update()"
  nameWithType: "Domain.update()"
  summary: "Begins update for the Domain resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Domain.Update update()"
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Domain.Update?alt=com.azure.resourcemanager.eventgrid.models.Domain.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.eventgrid.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.1.0
